# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 16 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15 CD 02 8E     	call Frame
  34  AA18              ;	call Pinta_Amadeus
  35  AA18              ;	call Gestiona_Amadeus
  36  AA18 CD 61 8E     	call Actualiza_relojes
  37  AA1B
  38  AA1B FD E1        	pop iy
  39  AA1D DD E1        	pop ix
  40  AA1F F1           	pop af
  41  AA20 C1           	pop bc
  42  AA21 D1           	pop de
  43  AA22 E1           	pop hl
  44  AA23 D9           	exx
  45  AA24 C1           	pop bc
  46  AA25 D1           	pop de
  47  AA26 E1           	pop hl
  48  AA27 08           	ex af,af'
  49  AA28 F1           	pop af
  50  AA29 08           	ex af,af'
  51  AA2A D9           	exx
  52  AA2B
  53  AA2B ED 7B 16 89  	ld sp,(Stack_3)
  54  AA2F
  55  AA2F FB           	ei
  56  AA30 ED 4D        	reti
  57  AA32
  58  AA32              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  59  AA32
  60  AA32              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA32              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA32              ;
   3+ AA32              ;	17/02/23
   4+ AA32              ;
   5+ AA32              ;	Sprites e índices.
   6+ AA32
   7+ AA32              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1C 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 22 89        	defw End_Snapshot_1
 267+ 8500 26 89        	defw End_Snapshot_2
 268+ 8502 2A 89        	defw End_Snapshot_3
 269+ 8504 1E 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 24 89        	defw End_Snapshot_disparos_1
 271+ 8508 28 89        	defw End_Snapshot_disparos_2
 272+ 850A 2C 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  61  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 45 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 45 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  62  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 59 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD 93 8C     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0A 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 5B 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD 93 8C     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 5B 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 10 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 08 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD 93 8C     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 5B 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 5B 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD 93 8C     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 04 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 08 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 04 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 12 00     	ld bc,18
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0A 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0A 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 0A        	cp 10
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 0A        	ld a,10
 209+ 88B9 32 0B 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0B 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  63  88C4
  64  88C4              ; ******************************************************************************************************************************************************************************************
  65  88C4              ; Constantes.
  66  88C4              ; ******************************************************************************************************************************************************************************************
  67  88C4              ;
  68  88C4              ; 4/9/23
  69  88C4              ;
  70  88C4              ; Constantes generales.
  71  88C4              ;
  72  88C4
  73  88C4              Sprite_vacio equ $f000
  74  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  75  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  76  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  77  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  78  88C4
  79  88C4              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  80  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  81  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  82  88C4              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  83  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  84  88C4              ;
  85  88C4              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  86  88C4              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  87  88C4              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  88  88C4              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  89  88C4              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  90  88C4              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  91  88C4
  92  88C4              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
  93  88C4
  94  88C4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  95  88C4
  96  88C4              ; ******************************************************************************************************************************************************************************************
  97  88C4              ; Variables.
  98  88C4              ; ******************************************************************************************************************************************************************************************
  99  88C4              ;
 100  88C4              ; 28/07/23
 101  88C4              ;
 102  88C4              ; Variables de DRAW. (Motor principal).
 103  88C4              ;
 104  88C4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 105  88C4
 106  88C4 00           Filas db 0												; Filas. [DRAW]
 107  88C5 00           Columns db 0  											; Nº de columnas. [DRAW]
 108  88C6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 109  88C8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 110  88CA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 111  88CB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 112  88CC
 113  88CC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 114  88CC
 115  88CC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 116  88CD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 117  88CD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 118  88CD 00           Attr db 0												; Atributos de la entidad:
 119  88CE
 120  88CE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 121  88CE              ;
 122  88CE              ;	COLORES: 0 ..... NEGRO
 123  88CE              ;    		 1 ..... AZUL
 124  88CE              ; 			 2 ..... ROJO
 125  88CE              ;			 3 ..... MAGENTA
 126  88CE              ; 			 4 ..... VERDE
 127  88CE              ; 			 5 ..... CIAN
 128  88CE              ;			 6 ..... AMARILLO
 129  88CE              ; 			 7 ..... BLANCO
 130  88CE
 131  88CE 00 00        Indice_Sprite_der defw 0
 132  88D0 00 00        Indice_Sprite_izq defw 0
 133  88D2 00 00        Puntero_DESPLZ_der defw 0
 134  88D4 00 00        Puntero_DESPLZ_izq defw 0
 135  88D6
 136  88D6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 137  88D8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 138  88D9
 139  88D9              ; Variables de objeto. (Características).
 140  88D9
 141  88D9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 142  88DA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 143  88DB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 144  88DC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 145  88DD
 146  88DD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 147  88DE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 148  88DE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 149  88DE 00 00 00...  Variables_de_borrado ds 6
 150  88E4
 151  88E4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 152  88E6 00 00        	defw 0
 153  88E8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 154  88EA 00 00 00 00  	db 0,0,0,0
 155  88EE
 156  88EE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 157  88EE
 158  88EE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 159  88EF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 160  88EF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 161  88EF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 162  88EF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 163  88EF              ;
 164  88EF              ; 														DESCRIPCIÖN:
 165  88EF              ;
 166  88EF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 167  88EF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 168  88EF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 169  88EF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 170  88EF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 171  88EF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 172  88EF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 173  88EF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 174  88EF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 175  88EF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 176  88EF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 177  88EF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 178  88EF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 179  88EF              ;
 180  88EF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 181  88EF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 182  88EF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 183  88EF
 184  88EF              ; Movimiento. ------------------------------------------------------------------------------------------------------
 185  88EF
 186  88EF 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 187  88F1 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 188  88F3 00 00        Puntero_indice_mov_bucle defw 0							;
 189  88F5              ;
 190  88F5              ;
 191  88F5 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 192  88F6              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 193  88F6              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 194  88F6 00           Incrementa_puntero_backup db 0
 195  88F7 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 196  88F8              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 197  88F8 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 198  88F9 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 199  88FA 00           Cola_de_desplazamiento db 0								; Este byte indica:
 200  88FB              ;
 201  88FB              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 202  88FB              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 203  88FB              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 204  88FB              ;
 205  88FB              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 206  88FB              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 207  88FB              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 208  88FB              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 209  88FB              ;
 210  88FB              ;														;	"$ff" ..... Bucle infinito de repetición.
 211  88FB              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 212  88FB              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 213  88FB
 214  88FB
 215  88FB              ; Variables de funcionamiento. [DRAW].
 216  88FB
 217  88FB 00           Columnas db 0
 218  88FC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 219  88FE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 220  88FE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 221  88FF
 222  88FF              ; variables de control general.
 223  88FF
 224  88FF 00           Ctrl_2 db 0
 225  8900              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 226  8900              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 227  8900              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 228  8900              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 229  8900              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 230  8900              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 231  8900              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 232  8900              ;
 233  8900              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 234  8900              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 235  8900              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 236  8900              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 237  8900              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 238  8900
 239  8900 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 240  8901
 241  8901              ;! 61 Bytes por entidad.
 242  8901
 243  8901              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 244  8901              ;					         		---------;      ;---------
 245  8901
 246  8901
 247  8901              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 248  8901
 249  8901 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 250  8902
 251  8902              ;														DESCRIPCIÓN:
 252  8902              ;
 253  8902              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 254  8902              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 255  8902              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 256  8902              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 257  8902              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 258  8902              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 259  8902
 260  8902              ;														BIT 3, Recarga de nueva oleada.
 261  8902              ;														BIT 4, Recarga de nueva oleada.
 262  8902              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 263  8902              ;														BIT 6, **** Frame completo.
 264  8902              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 265  8902
 266  8902 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 267  8904              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 268  8904              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 269  8904              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 270  8904
 271  8904
 272  8904
 273  8904              ; Gestión de ENTIDADES y CAJAS.
 274  8904
 275  8904 00 00        Puntero_store_caja defw 0
 276  8906 00 00        Puntero_restore_caja defw 0
 277  8908 00 00        Indice_restore_caja defw 0
 278  890A 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 279  890B 00           Numero_parcial_de_entidades db 0
 280  890C 00           Entidades_en_curso db 0									; ..... ..... .....
 281  890D 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 282  890E              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 283  890E              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 284  890E              ;														; _ (Numero_de_malotes)="0".
 285  890E 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 286  8910 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 287  8912              ;														; _ puntero (Indice_entidades).
 288  8912
 289  8912
 290  8912              ;---------------------------------------------------------------------------------------------------------------
 291  8912              ;
 292  8912              ;	2/9/23
 293  8912              ;
 294  8912              ;	Álbumes.
 295  8912
 296  8912 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 297  8914              ;														; _variable para almacenar lo posición del puntero_
 298  8914              ; 														; _de pila, SP.
 299  8914 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 300  8916              ;														; La utiliza la rutina [Extrae_foto_registros].
 301  8916 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 302  8918 00 00        Stack_snapshot defw 0
 303  891A 00 00        Stack_snapshot_disparos defw 0
 304  891C
 305  891C 00 00        End_Snapshot defw 0
 306  891E              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 307  891E 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 308  8920              ;														; _el snapshot de los registros del siguiente disparo.
 309  8920              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 310  8920 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 311  8922 00 00        End_Snapshot_1 defw 0
 312  8924 00 00        End_Snapshot_disparos_1 defw 0
 313  8926 00 00        End_Snapshot_2 defw 0
 314  8928 00 00        End_Snapshot_disparos_2 defw 0
 315  892A 00 00        End_Snapshot_3 defw 0
 316  892C 00 00        End_Snapshot_disparos_3 defw 0
 317  892E
 318  892E 00 00        Puntero_indice_album_de_fotos defw 0
 319  8930 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 320  8932
 321  8932 00 00        Puntero_indice_End_Snapshot defw 0
 322  8934 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 323  8936 00 00        Puntero_de_End_Snapshot defw 0
 324  8938 00 00        Puntero_de_End_Snapshot_disparos defw 0
 325  893A
 326  893A              ;---------------------------------------------------------------------------------------------------------------
 327  893A
 328  893A              ; Gestión de Disparos.
 329  893A
 330  893A 00           Numero_de_disparotes db 0
 331  893B 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 332  893D 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 333  893F 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 334  8940              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 335  8940              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 336  8940 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 337  8942              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 338  8942              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 339  8942              ;														; _produzca colisión.
 340  8942 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 341  8944              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 342  8944 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 343  8947              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 344  8947 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 345  894A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 346  894A 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 347  894C 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 348  894D
 349  894D              ;---------------------------------------------------------------------------------------------------------------
 350  894D
 351  894D              ; Relojes y temporizaciones.
 352  894D
 353  894D 00           Contador_de_frames db 0
 354  894E 00           Contador_de_frames_2 db 0
 355  894F
 356  894F 04           Clock_explosion db 4
 357  8950 1E           Clock_Entidades_en_curso db 30
 358  8951 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 359  8952              ;														; Repite la oleada de entidades.
 360  8952 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 361  8953 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 362  8954 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 363  8955
 364  8955 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 365  8956 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 366  8957 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 367  8958
 368  8958              ;---------------------------------------------------------------------------------------------------------------
 369  8958
 370  8958              ; Gestión de NIVELES.
 371  8958
 372  8958 00           Nivel db 0												; Nivel actual del juego.
 373  8959 00 00        Puntero_indice_NIVELES defw 0
 374  895B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 375  895D              ; 														; _ que definen el NIVEL.
 376  895D              ; Y todo comienza aquí .....
 377  895D              ;
 378  895D              ; Rutina principal *************************************************************************************************************************************************************************
 379  895D              ;
 380  895D              ;	14/11/22
 381  895D
 382  895D              START
 383  895D
 384  895D 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 385  8960 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 386  8962 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 387  8964 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 388  8966 F3           	DI
 389  8967
 390  8967 3E 07        	ld a,%00000111
 391  8969 CD 72 99     	call Cls
 392  896C
 393  896C CD 6C 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 394  896F
 395  896F              ; INICIALIZACIÓN.
 396  896F
 397  896F CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 398  8972
 399  8972 CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 400  8975
 401  8975 CD 95 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 402  8978              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 403  8978 CD AB 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 404  897B              ;													     ; _ malotes antes de guardar ninguna foto.
 405  897B              ; ----------
 406  897B
 407  897B CD 1C 8D     	call Restore_entidad
 408  897E
 409  897E 21 0B 89     	ld hl,Numero_parcial_de_entidades
 410  8981 46           	ld b,(hl)
 411  8982 04           	inc b
 412  8983 05           	dec b
 413  8984 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 414  8986
 415  8986              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 416  8986              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 417  8986              ;	Pintamos el resto de entidades:
 418  8986
 419  8986              ;	INICIA ENTIDADES !!!!!
 420  8986
 421  8986 C5           1 push bc  												; Guardo el contador de entidades.
 422  8987 CD 62 8B     	call Inicia_entidad
 423  898A C1           	pop bc
 424  898B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 425  898D
 426  898D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 427  898D              ; (Esto se dá cuando se inicia una nueva oleada).
 428  898D
 429  898D 3A 01 89     	ld a,(Ctrl_1)
 430  8990 CB 5F        	bit 3,a
 431  8992 20 15        	jr nz,5F											; Loop
 432  8994
 433  8994              ; 	INICIA AMADEUS !!!!!
 434  8994
 435  8994 CD 43 8D     3 call Restore_Amadeus
 436  8997 CD 99 8C     	call Inicia_Puntero_objeto
 437  899A CD 65 93     	call Draw
 438  899D CD A0 7F     	call Guarda_foto_registros
 439  89A0 CD CF 8D     	call Guarda_datos_de_borrado_Amadeus
 440  89A3
 441  89A3 11 9E 85     	ld de,Amadeus_db
 442  89A6 CD 55 8D     	call Store_Amadeus
 443  89A9
 444  89A9              ; 	INICIA DISPAROS !!!!!
 445  89A9
 446  89A9              ;	call Inicia_Puntero_Disparo_Entidades
 447  89A9              ;	call Inicia_Puntero_Disparo_Amadeus
 448  89A9
 449  89A9              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 450  89A9
 451  89A9 CD 95 8B     5 call Inicia_punteros_de_cajas
 452  89AC CD 1C 8D     	call Restore_entidad
 453  89AF
 454  89AF 3A 01 89     	ld a,(Ctrl_1)
 455  89B2 CB 5F        	bit 3,a
 456  89B4 28 07        	jr z,6F
 457  89B6
 458  89B6              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 459  89B6
 460  89B6 21 01 89     	ld hl,Ctrl_1
 461  89B9 CB 9E        	res 3,(hl)
 462  89BB 18 04        	jr Main
 463  89BD
 464  89BD
 465  89BD              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 466  89BD              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 467  89BD              ; _ para situarnos en el siguiente album.
 468  89BD
 469  89BD CD DC 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 470  89C0 F3           	di
 471  89C1
 472  89C1              ; ------------------------------------
 473  89C1
 474  89C1              Main
 475  89C1              ;
 476  89C1              ;	3/8/23
 477  89C1
 478  89C1 3E 01            ld a,1
 479  89C3 D3 FE        	out ($fe),a											; Azul.
 480  89C5
 481  89C5 FB           	ei
 482  89C6
 483  89C6 3A 50 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 484  89C9 47           	ld b,a
 485  89CA 3A 4D 89     	ld a,(Contador_de_frames)
 486  89CD B8           	cp b
 487  89CE 20 18        	jr nz,13F
 488  89D0
 489  89D0 3A 0B 89     	ld a,(Numero_parcial_de_entidades)
 490  89D3 47           	ld b,a
 491  89D4 3A 0C 89     	ld a,(Entidades_en_curso)
 492  89D7 B8           	cp b
 493  89D8 28 0E        	jr z,13F
 494  89DA 30 0C        	jr nc,13F
 495  89DC
 496  89DC 3C           	inc a
 497  89DD 32 0C 89     	ld (Entidades_en_curso),a
 498  89E0
 499  89E0 3A 50 89     	ld a,(Clock_Entidades_en_curso)
 500  89E3
 501  89E3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 502  89E3              ;! _ IMPREDECIBLE !!!!
 503  89E3
 504  89E3 C6 64        	add 100
 505  89E5 32 50 89     	ld (Clock_Entidades_en_curso),a
 506  89E8
 507  89E8              ; Habilita disparos.
 508  89E8
 509  89E8 21 52 89     13 ld hl,Disparo_Amadeus
 510  89EB 11 54 89     	ld de,CLOCK_repone_disparo_Amadeus
 511  89EE CD 36 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 512  89F1
 513  89F1 21 55 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 514  89F4 11 57 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 515  89F7 CD 36 9D     	call Habilita_disparos
 516  89FA
 517  89FA              ; COLISIONES.
 518  89FA
 519  89FA CD 47 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 520  89FD
 521  89FD              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 522  89FD              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 523  89FD              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 524  89FD
 525  89FD AF           	xor a
 526  89FE 32 3F 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 527  8A01
 528  8A01 CD 95 8B     	call Inicia_punteros_de_cajas
 529  8A04 CD 1C 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 530  8A07              ; 														; _ en DRAW.
 531  8A07 3A C4 88     	ld a,(Filas)
 532  8A0A A7           	and a
 533  8A0B 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 534  8A0D CD 2E 8D     	call Incrementa_punteros_de_cajas
 535  8A10 18 F2        	jr 12B
 536  8A12
 537  8A12              ; ---------------------------------------------------------------------------------------
 538  8A12
 539  8A12 3A 0B 89     10 ld a,(Numero_parcial_de_entidades)
 540  8A15 47               ld b,a
 541  8A16 A7           	and a
 542  8A17 20 14        	jr nz,11F
 543  8A19
 544  8A19 21 01 89     	ld hl,Ctrl_1
 545  8A1C CB 66        	bit 4,(hl)
 546  8A1E C2 A6 8A     	jp nz,16F
 547  8A21
 548  8A21 21 01 89     	ld hl,Ctrl_1
 549  8A24 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 550  8A26
 551  8A26 3A 4D 89     	ld a,(Contador_de_frames)
 552  8A29 3C           	inc a
 553  8A2A 32 51 89     	ld (Activa_recarga_cajas),a
 554  8A2D
 555  8A2D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 556  8A2D
 557  8A2D 3A 0C 89     11 ld a,(Entidades_en_curso)
 558  8A30 A7           	and a
 559  8A31 CA A6 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 560  8A34 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 561  8A35
 562  8A35              ; Código que ejecutamos con cada entidad:
 563  8A35              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 564  8A35
 565  8A35 C5           15 push bc 												; Nº de entidades en curso.
 566  8A36
 567  8A36              ; Impacto ???
 568  8A36
 569  8A36 3A DD 88     	ld a,(Impacto)
 570  8A39 A7           	and a
 571  8A3A 28 2A        	jr z,8F
 572  8A3C
 573  8A3C              ; Hay Impacto en esta entidad.
 574  8A3C
 575  8A3C 21 4F 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 576  8A3F 35           	dec (hl)
 577  8A40 20 5E        	jr nz,17F
 578  8A42
 579  8A42              ;! Velocidad de la animación de la explosión.
 580  8A42
 581  8A42 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 582  8A44              ;														; _,(velocidad de la explosión).
 583  8A44              ;!!!!!	call Guarda_foto_entidad_a_borrar 	-----		; Guarda la imagen de la entidad `impactada´ para borrarla.
 584  8A44
 585  8A44              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 586  8A44
 587  8A44 3A FF 88     	ld a,(Ctrl_2)
 588  8A47 CB 4F        	bit 1,a
 589  8A49 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 590  8A4B
 591  8A4B              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 592  8A4B
 593  8A4B 3A CC 88     	ld a,(CTRL_DESPLZ)
 594  8A4E A7           	and a
 595  8A4F 20 08        	jr nz,18F
 596  8A51
 597  8A51 21 84 84     	ld hl,Indice_Explosion_2x2-2
 598  8A54 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 599  8A57 18 06        	jr 19F
 600  8A59
 601  8A59 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 602  8A5C 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 603  8A5F
 604  8A5F 21 FF 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 605  8A62 CB CE        	set 1,(hl)
 606  8A64 18 22        	jr 7F
 607  8A66
 608  8A66              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 609  8A66              ; _con las coordenadas de la entidad almacenada en DRAW.
 610  8A66
 611  8A66 3A 01 89     8 ld a,(Ctrl_1)
 612  8A69 CB 57        	bit 2,a
 613  8A6B 28 1B        	jr z,7F
 614  8A6D
 615  8A6D 2A 42 89     	ld hl,(Coordenadas_disparo_certero)
 616  8A70 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 617  8A71              ;														; E contiene la coordenada_X del disparo.
 618  8A71 2A CA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 619  8A74              ;														; H FILA, (Coordenada_y de la entidad).
 620  8A74 A7           	and a
 621  8A75 ED 52        	sbc hl,de
 622  8A77
 623  8A77 CD 7E 92     	call Determina_resultado_comparativa
 624  8A7A
 625  8A7A 78           	ld a,b
 626  8A7B A7           	and a
 627  8A7C 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 628  8A7E
 629  8A7E              ; ----- ----- -----
 630  8A7E
 631  8A7E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 632  8A80 32 DD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 633  8A83
 634  8A83 21 01 89     	ld hl,Ctrl_1
 635  8A86 CB 96        	res 2,(hl)
 636  8A88
 637  8A88 CD FE 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 638  8A8B
 639  8A8B 3A EE 88     	ld a,(Ctrl_0)
 640  8A8E CB 67        	bit 4,a
 641  8A90 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 642  8A92
 643  8A92              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 644  8A92              ; [[[
 645  8A92 CD B7 8D     	call Detecta_disparo_entidad
 646  8A95              ; ]]]
 647  8A95
 648  8A95 CD 76 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 649  8A98 CD BD 8D     	call Guarda_datos_de_borrado
 650  8A9B
 651  8A9B 21 EE 88     	ld hl,Ctrl_0
 652  8A9E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 653  8AA0
 654  8AA0 CD E1 8C     17 call Store_Restore_cajas
 655  8AA3
 656  8AA3 C1           	pop bc
 657  8AA4 10 8F        	djnz 15B
 658  8AA6
 659  8AA6              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 660  8AA6              ; Hemos gestionado todas las unidades.
 661  8AA6              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 662  8AA6
 663  8AA6              ;	ld hl,Ctrl_1
 664  8AA6              ;	res 2,(hl)
 665  8AA6
 666  8AA6 CD DC 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 667  8AA9              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 668  8AA9              ;														; _ interrupción.
 669  8AA9              ; ----------------------------------------
 670  8AA9
 671  8AA9 3A 01 89     	ld a,(Ctrl_1) 										; Existe Loop?
 672  8AAC CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 673  8AAE CA C1 89     	jp z,Main
 674  8AB1
 675  8AB1 3A 4D 89     	ld a,(Contador_de_frames)
 676  8AB4 47           	ld b,a
 677  8AB5 3A 51 89     	ld a,(Activa_recarga_cajas)
 678  8AB8 B8           	cp b
 679  8AB9 28 08        	jr z,20F
 680  8ABB
 681  8ABB 21 01 89     	ld hl,Ctrl_1
 682  8ABE CB E6        	set 4,(hl)
 683  8AC0 C3 C1 89     	jp Main
 684  8AC3
 685  8AC3 21 01 89     20 ld hl,Ctrl_1
 686  8AC6 CB A6        	res 4,(hl)
 687  8AC8
 688  8AC8 F3           	di
 689  8AC9
 690  8AC9 3A 4D 89     	ld a,(Contador_de_frames)
 691  8ACC
 692  8ACC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 693  8ACC              ;! _ IMPREDECIBLE !!!!
 694  8ACC
 695  8ACC C6 0A        	add 10
 696  8ACE 32 50 89     	ld (Clock_Entidades_en_curso),a
 697  8AD1
 698  8AD1 C3 72 89     	jp 4B
 699  8AD4
 700  8AD4 C9           	ret
 701  8AD5
 702  8AD5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 703  8AD5
 704  8AD5              Gestiona_Amadeus
 705  8AD5
 706  8AD5 3E 04            ld a,4
 707  8AD7 D3 FE        	out ($fe),a											; Azul.
 708  8AD9
 709  8AD9 CD 43 8D     	call Restore_Amadeus
 710  8ADC
 711  8ADC              ;! Activa/desactiva impacto con Amadeus.
 712  8ADC
 713  8ADC 3A DD 88     	ld a,(Impacto)
 714  8ADF A7           	and a
 715  8AE0 20 FE        	jr nz,$
 716  8AE2
 717  8AE2 CD 4F 8B     	call Mov_Amadeus
 718  8AE5
 719  8AE5 3A EE 88     	ld a,(Ctrl_0)
 720  8AE8 CB 67        	bit 4,a
 721  8AEA 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 722  8AEC
 723  8AEC CD 76 8B     	call Guarda_foto_entidad_a_pintar
 724  8AEF CD CF 8D     	call Guarda_datos_de_borrado_Amadeus
 725  8AF2
 726  8AF2 21 EE 88     14 ld hl,Ctrl_0
 727  8AF5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 728  8AF7
 729  8AF7 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 730  8AFA CD 55 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 731  8AFD
 732  8AFD              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 733  8AFD
 734  8AFD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 735  8AFD
 736  8AFD              ;	call Calcula_numero_de_disparotes
 737  8AFD
 738  8AFD C9           	ret
 739  8AFE
 740  8AFE              ; --------------------------------------------------------------------------------------------------------------
 741  8AFE              ;
 742  8AFE              ;	27/05/23
 743  8AFE
 744  8AFE              Mov_obj
 745  8AFE
 746  8AFE 3A FF 88     	ld a,(Ctrl_2)
 747  8B01 CB 4F        	bit 1,a
 748  8B03 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 749  8B05
 750  8B05              ; Explosión:
 751  8B05
 752  8B05 3A 00 89     	ld a,(Frames_explosion)
 753  8B08 A7           	and a
 754  8B09 20 11        	jr nz,4F
 755  8B0B
 756  8B0B              ; Una alimaña menos!!!!!!!!!1
 757  8B0B
 758  8B0B CD 5E 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 759  8B0E 21 0B 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 760  8B11 35           	dec (hl)
 761  8B12 21 0C 89     	ld hl,Entidades_en_curso
 762  8B15 35           	dec (hl)
 763  8B16 21 0A 89     	ld hl,Numero_de_entidades
 764  8B19 35           	dec (hl)
 765  8B1A 18 32        	jr 3F
 766  8B1C
 767  8B1C              ; -----
 768  8B1C
 769  8B1C              ;	`Movemos´ la explosión.
 770  8B1C
 771  8B1C 2A D2 88     4 ld hl,(Puntero_DESPLZ_der)
 772  8B1F 23           	inc hl
 773  8B20 23           	inc hl
 774  8B21 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 775  8B24 CD 93 8C     	call Extrae_address
 776  8B27 22 C8 88     	ld (Puntero_objeto),hl
 777  8B2A
 778  8B2A 21 00 89     	ld hl,Frames_explosion
 779  8B2D 35           	dec (hl)
 780  8B2E
 781  8B2E              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 782  8B2E 18 1E        	jr 3F
 783  8B30
 784  8B30 AF           2 xor a
 785  8B31 32 EE 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 786  8B34
 787  8B34              ; Movemos Entidades malignas.
 788  8B34
 789  8B34 CD E1 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 790  8B37
 791  8B37 3A EE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 792  8B3A CB 67        	bit 4,a
 793  8B3C C8           	ret z
 794  8B3D
 795  8B3D              ; Ha habido desplazamiento de la entidad maligna.
 796  8B3D              ; Ha llegado a zona de AMADEUS ???
 797  8B3D
 798  8B3D 3A CB 88     	ld a,(Coordenada_y)
 799  8B40 FE 14        	cp $14
 800  8B42 D4 0C 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 801  8B45              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 802  8B45              ; ---------
 803  8B45
 804  8B45 CD 7D 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 805  8B48 CD EF 8D     	call Repone_datos_de_borrado
 806  8B4B CD 35 8C     	call Limpia_Variables_de_borrado
 807  8B4E
 808  8B4E C9           3 ret													; _de la misma.
 809  8B4F
 810  8B4F              ; --------------------------------------------------------------------------------------------------------------
 811  8B4F              ;
 812  8B4F              ;	29/1/23
 813  8B4F
 814  8B4F              Mov_Amadeus
 815  8B4F
 816  8B4F CD 80 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 817  8B52
 818  8B52 3A EE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 819  8B55 CB 67        	bit 4,a
 820  8B57 C8           	ret z
 821  8B58
 822  8B58              ; ---------
 823  8B58
 824  8B58 CD 7D 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 825  8B5B CD DF 8D     	call Repone_datos_de_borrado_Amadeus
 826  8B5E CD 35 8C     	call Limpia_Variables_de_borrado
 827  8B61
 828  8B61 C9           	ret
 829  8B62
 830  8B62              ; -----------------------------------------------------------------------------------
 831  8B62
 832  8B62 CD 99 8C     Inicia_entidad	call Inicia_Puntero_objeto
 833  8B65 CD 86 99     	call Recompone_posicion_inicio
 834  8B68 CD 65 93     	call Draw
 835  8B6B CD A0 7F     	call Guarda_foto_registros
 836  8B6E CD BD 8D     	call Guarda_datos_de_borrado
 837  8B71 F3           	di
 838  8B72 CD E1 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 839  8B75 C9           	ret
 840  8B76
 841  8B76              ; --------------------------------------------------------------------------------------------------------------
 842  8B76              ;
 843  8B76              ;	31/08/23
 844  8B76              ;
 845  8B76              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 846  8B76              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 847  8B76
 848  8B76              Guarda_foto_entidad_a_pintar
 849  8B76
 850  8B76              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 851  8B76
 852  8B76 CD 65 93     	call Draw
 853  8B79 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 854  8B7C C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 855  8B7D
 856  8B7D              ; --------------------------------------------------------------------------------------------------------------
 857  8B7D              ;
 858  8B7D              ;	19/9/23
 859  8B7D
 860  8B7D 21 C4 88     Prepara_var_pintado ld hl,Filas
 861  8B80 11 E4 88     	ld de,Variables_de_pintado
 862  8B83 01 08 00     	ld bc,8
 863  8B86 ED B0        	ldir
 864  8B88 C9           	ret
 865  8B89
 866  8B89              ; --------------------------------------------------------------------------------------------------------------
 867  8B89
 868  8B89 21 E4 88     Repone_pintar ld hl,Variables_de_pintado
 869  8B8C 11 C4 88     	ld de,Filas
 870  8B8F 01 08 00     	ld bc,8
 871  8B92 ED B0        	ldir
 872  8B94 C9           	ret
 873  8B95
 874  8B95              ; *************************************************************************************************************************************************************
 875  8B95              ;
 876  8B95              ; 8/1/23
 877  8B95              ;
 878  8B95              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 879  8B95              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 880  8B95              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 881  8B95
 882  8B95              ; Destruye HL y DE !!!!!
 883  8B95
 884  8B95              Inicia_punteros_de_cajas
 885  8B95
 886  8B95 21 8C 85     	ld hl,Indice_de_cajas
 887  8B98 CD 93 8C         call Extrae_address
 888  8B9B 22 04 89         ld (Puntero_store_caja),hl
 889  8B9E 21 8E 85     	ld hl,Indice_de_cajas+2
 890  8BA1 22 08 89     	ld (Indice_restore_caja),hl
 891  8BA4 CD 93 8C     	call Extrae_address
 892  8BA7 22 06 89     	ld (Puntero_restore_caja),hl
 893  8BAA C9               ret
 894  8BAB
 895  8BAB              ; ---------------------------------------------------------------
 896  8BAB              ;
 897  8BAB              ;	9/8/23
 898  8BAB              ;
 899  8BAB              ;	Inicialización y gestión de álbumes de fotos y cajas.
 900  8BAB
 901  8BAB              Inicia_punteros_de_albumes_y_malotes
 902  8BAB
 903  8BAB 21 EC 84     	ld hl,Indice_album_de_fotos
 904  8BAE 22 2E 89     	ld (Puntero_indice_album_de_fotos),hl
 905  8BB1 CD 93 8C     	call Extrae_address
 906  8BB4 22 18 89     	ld (Stack_snapshot),hl
 907  8BB7
 908  8BB7 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 909  8BBA 22 30 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 910  8BBD CD 93 8C     	call Extrae_address
 911  8BC0 22 1A 89     	ld (Stack_snapshot_disparos),hl
 912  8BC3
 913  8BC3 21 FC 84     	ld hl,Indice_End_Snapshot
 914  8BC6 22 32 89     	ld (Puntero_indice_End_Snapshot),hl
 915  8BC9 CD 93 8C     	call Extrae_address
 916  8BCC 22 36 89     	ld (Puntero_de_End_Snapshot),hl
 917  8BCF
 918  8BCF 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 919  8BD2 22 34 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 920  8BD5 CD 93 8C     	call Extrae_address
 921  8BD8 22 38 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 922  8BDB
 923  8BDB C9           	ret
 924  8BDC
 925  8BDC              ;	2/9/23
 926  8BDC
 927  8BDC              Avanza_puntero_de_album_de_fotos_y_malotes
 928  8BDC
 929  8BDC              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 930  8BDC
 931  8BDC              ; Estamos en el último álbum del índice???.
 932  8BDC
 933  8BDC 2A 2E 89     	ld hl,(Puntero_indice_album_de_fotos)
 934  8BDF 01 F2 84     	ld bc,Indice_album_de_fotos+6
 935  8BE2 A7           	and a
 936  8BE3 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 937  8BE5 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 938  8BE7
 939  8BE7 21 01 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 940  8BEA CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 941  8BEC 76           	halt
 942  8BED C9           	ret
 943  8BEE
 944  8BEE F3           1 di
 945  8BEF 2A 2E 89     	ld hl,(Puntero_indice_album_de_fotos)
 946  8BF2 23           	inc hl
 947  8BF3 23           	inc hl
 948  8BF4 22 2E 89     	ld (Puntero_indice_album_de_fotos),hl
 949  8BF7 CD 93 8C     	call Extrae_address
 950  8BFA 22 18 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 951  8BFD
 952  8BFD 2A 32 89     	ld hl,(Puntero_indice_End_Snapshot)
 953  8C00 23           	inc hl
 954  8C01 23           	inc hl
 955  8C02 22 32 89     	ld (Puntero_indice_End_Snapshot),hl
 956  8C05 CD 93 8C     	call Extrae_address
 957  8C08 22 36 89     	ld (Puntero_de_End_Snapshot),hl
 958  8C0B FB           	ei
 959  8C0C
 960  8C0C C9           	ret
 961  8C0D
 962  8C0D              ; *************************************************************************************************************************************************************
 963  8C0D              ;
 964  8C0D              ; 8/1/23
 965  8C0D              ;
 966  8C0D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 967  8C0D
 968  8C0D 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 969  8C10 22 3B 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 970  8C13 C9           	ret
 971  8C14 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 972  8C17 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 973  8C1A C9           	ret
 974  8C1B
 975  8C1B              ; -------------------------------------------------------------------------------------------------------------
 976  8C1B              ;
 977  8C1B              ; 4/9/23
 978  8C1B              ;
 979  8C1B
 980  8C1B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 981  8C1B
 982  8C1B 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
 983  8C1E 7E           	ld a,(hl)
 984  8C1F A7           	and a
 985  8C20 C8           	ret z
 986  8C21
 987  8C21 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 988  8C24 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
 989  8C27 01 0C 00     	ld bc,12
 990  8C2A AF           	xor a
 991  8C2B 77           	ld (hl),a
 992  8C2C ED B0        	ldir
 993  8C2E
 994  8C2E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 995  8C31 22 20 89     	ld (End_Snapshot_Amadeus),hl
 996  8C34
 997  8C34 C9           	ret
 998  8C35
 999  8C35 21 DE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1000  8C38 11 DF 88     	ld de,Variables_de_borrado+1
1001  8C3B 01 05 00     	ld bc,5
1002  8C3E AF           	xor a
1003  8C3F 77           	ld (hl),a
1004  8C40 ED B0        	ldir
1005  8C42 C9           	ret
1006  8C43
1007  8C43              ; -------------------------------------------------------------------------------------------------------------
1008  8C43              ;
1009  8C43              ; 8/9/23
1010  8C43              ;
1011  8C43
1012  8C43              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1013  8C43              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1014  8C43
1015  8C43              Calcula_numero_de_malotes
1016  8C43
1017  8C43 21 00 70     	ld hl,Album_de_fotos
1018  8C46 EB           	ex de,hl
1019  8C47 2A 1C 89     	ld hl,(End_Snapshot)
1020  8C4A
1021  8C4A 7C           	ld a,h
1022  8C4B A7           	and a
1023  8C4C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1024  8C4E
1025  8C4E 06 00        4 ld b,0
1026  8C50 7D           	ld a,l
1027  8C51 93           	sub e
1028  8C52 28 07        	jr z,1F
1029  8C54
1030  8C54              ; Nº de malotes no es "0".
1031  8C54
1032  8C54 D6 06        2 sub 6
1033  8C56 04           	inc b
1034  8C57 A7           	and a
1035  8C58 20 FA        	jr nz,2B
1036  8C5A 78           	ld a,b
1037  8C5B
1038  8C5B 32 0D 89     1 ld (Numero_de_malotes),a
1039  8C5E C9           	ret
1040  8C5F
1041  8C5F              ; -------------------------------------------------------------------------------------------------------------
1042  8C5F              ;
1043  8C5F              ; 8/9/23
1044  8C5F              ;
1045  8C5F
1046  8C5F              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1047  8C5F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1048  8C5F
1049  8C5F              Calcula_malotes_Amadeus
1050  8C5F
1051  8C5F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1052  8C62 EB           	ex de,hl
1053  8C63 2A 20 89     	ld hl,(End_Snapshot_Amadeus)
1054  8C66
1055  8C66 7C           	ld a,h
1056  8C67 A7           	and a
1057  8C68 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1058  8C6A
1059  8C6A 06 00        	ld b,0
1060  8C6C 7D           	ld a,l
1061  8C6D 93           	sub e
1062  8C6E 28 07        	jr z,1F
1063  8C70
1064  8C70              ; Nº de malotes no es "0".
1065  8C70
1066  8C70 D6 06        2 sub 6
1067  8C72 04           	inc b
1068  8C73 A7           	and a
1069  8C74 20 FA        	jr nz,2B
1070  8C76 78           	ld a,b
1071  8C77
1072  8C77 32 0D 89     1 ld (Numero_de_malotes),a
1073  8C7A C9           	ret
1074  8C7B
1075  8C7B              ; -------------------------------------------------------------------------------------------------------------
1076  8C7B              ;
1077  8C7B              ; 28/2/23
1078  8C7B              ;
1079  8C7B
1080  8C7B              Calcula_numero_de_disparotes
1081  8C7B
1082  8C7B 21 50 71     	ld hl,Album_de_fotos_disparos
1083  8C7E EB           	ex de,hl
1084  8C7F 2A 38 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1085  8C82
1086  8C82 06 00        	ld b,0
1087  8C84 7D           	ld a,l
1088  8C85 93           	sub e
1089  8C86 28 07        	jr z,1F
1090  8C88
1091  8C88              ; Nº de malotes no es "0".
1092  8C88
1093  8C88 D6 06        2 sub 6
1094  8C8A 04           	inc b
1095  8C8B A7           	and a
1096  8C8C 20 FA        	jr nz,2B
1097  8C8E 78           	ld a,b
1098  8C8F
1099  8C8F 32 3A 89     1 ld (Numero_de_disparotes),a
1100  8C92 C9           	ret
1101  8C93
1102  8C93              ; *************************************************************************************************************************************************************
1103  8C93              ;
1104  8C93              ; 20/10/22
1105  8C93              ;
1106  8C93              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1107  8C93              ;
1108  8C93              ; Destruye el puntero y DE !!!!!
1109  8C93
1110  8C93 5E           Extrae_address ld e,(hl)
1111  8C94 23           	inc hl
1112  8C95 56           	ld d,(hl)
1113  8C96 2B           	dec hl
1114  8C97 EB           	ex de,hl
1115  8C98 C9           	ret
1116  8C99
1117  8C99              ; *************************************************************************************************************************************************************
1118  8C99              ;
1119  8C99              ;	7/2/23
1120  8C99              ;
1121  8C99              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1122  8C99              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1123  8C99              ;
1124  8C99              ;   Destruye HL y BC !!!!!,
1125  8C99              ;
1126  8C99              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1127  8C99              ;					"0" ..... Izquierda.
1128  8C99
1129  8C99              Inicia_Puntero_objeto
1130  8C99
1131  8C99 3A D8 88     	ld a,(Cuad_objeto)
1132  8C9C E6 01        	and 1
1133  8C9E F5           	push af
1134  8C9F CC BD 8C     	call z,Inicia_puntero_objeto_izq
1135  8CA2 F1           	pop af
1136  8CA3 28 2B        	jr z,1F
1137  8CA5 CD AA 8C     	call Inicia_puntero_objeto_der
1138  8CA8 18 26        	jr 1F
1139  8CAA
1140  8CAA              ; Arrancamos desde la parte izquierda de la pantalla.
1141  8CAA              ; Iniciamos (Indice_Sprite_der).
1142  8CAA
1143  8CAA 2A CE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1144  8CAD 22 D2 88     	ld (Puntero_DESPLZ_der),hl
1145  8CB0 CD 93 8C     	call Extrae_address
1146  8CB3 22 C8 88     	ld (Puntero_objeto),hl
1147  8CB6
1148  8CB6 2A D0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1149  8CB9 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1150  8CBC C9           	ret
1151  8CBD
1152  8CBD              ; Arrancamos desde la parte derecha de la pantalla.
1153  8CBD              ; Iniciamos (Indice_Sprite_izq).
1154  8CBD
1155  8CBD 2A D0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1156  8CC0 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1157  8CC3 CD 93 8C     	call Extrae_address
1158  8CC6 22 C8 88     	ld (Puntero_objeto),hl
1159  8CC9
1160  8CC9 2A CE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1161  8CCC 22 D2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1162  8CCF C9           	ret
1163  8CD0
1164  8CD0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1165  8CD0
1166  8CD0 21 40 83     1 ld hl,Amadeus
1167  8CD3 ED 4B C8 88  	ld bc,(Puntero_objeto)
1168  8CD7 B7 ED 42     	sub hl,bc
1169  8CDA C0           	ret nz
1170  8CDB 21 EE 88     	ld hl,Ctrl_0
1171  8CDE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1172  8CE0 C9           	ret 												; _de nuestra nave en los extremos.
1173  8CE1
1174  8CE1              ; *************************************************************************************************************************************************************
1175  8CE1              ;
1176  8CE1              ;	14/5/23
1177  8CE1              ;
1178  8CE1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1179  8CE1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1180  8CE1
1181  8CE1              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1182  8CE1              ;	_de la 2ª y 3ª entidad respectivamente.
1183  8CE1
1184  8CE1              Store_Restore_cajas
1185  8CE1
1186  8CE1 E5           	push hl
1187  8CE2 D5           	push de
1188  8CE3 C5            	push bc
1189  8CE4
1190  8CE4              ;	STORE !!!!!
1191  8CE4              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1192  8CE4
1193  8CE4 21 C4 88     	ld hl,Filas
1194  8CE7 ED 5B 04 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1195  8CEB 01 3D 00     	ld bc,61
1196  8CEE ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1197  8CF0
1198  8CF0              ; 	Entidad_sospechosa. 20/4/23
1199  8CF0
1200  8CF0 3A DD 88     	ld a,(Impacto)
1201  8CF3 A7           	and a
1202  8CF4 28 0C        	jr z,1F
1203  8CF6
1204  8CF6 2A 04 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1205  8CF9 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1206  8CFC A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1207  8CFD ED 4A        	adc hl,bc 											; _ "0" más adelante.
1208  8CFF 22 40 89     	ld (Entidad_sospechosa_de_colision),hl
1209  8D02
1210  8D02              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1211  8D02
1212  8D02 2A 06 89     1 ld hl,(Puntero_restore_caja)
1213  8D05 7E           	ld a,(hl)
1214  8D06 A7           	and a
1215  8D07 F5           	push af
1216  8D08 28 08        	jr z,2F
1217  8D0A
1218  8D0A 11 C4 88     	ld de,Filas
1219  8D0D 01 3D 00     	ld bc,61
1220  8D10 ED B0        	ldir
1221  8D12
1222  8D12 CD 2E 8D     2 call Incrementa_punteros_de_cajas
1223  8D15 F1           	pop af
1224  8D16 28 EA        	jr z,1B
1225  8D18
1226  8D18 C1           	pop bc
1227  8D19 D1           	pop de
1228  8D1A E1           	pop hl
1229  8D1B
1230  8D1B C9           	ret
1231  8D1C
1232  8D1C              ; **************************************************************************************************
1233  8D1C              ;
1234  8D1C              ;	12/05/23
1235  8D1C              ;
1236  8D1C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1237  8D1C
1238  8D1C E5           Restore_entidad push hl
1239  8D1D D5           	push de
1240  8D1E C5            	push bc
1241  8D1F
1242  8D1F 2A 04 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1243  8D22 11 C4 88     	ld de,Filas
1244  8D25 01 3D 00     	ld bc,61
1245  8D28 ED B0        	ldir
1246  8D2A
1247  8D2A C1           	pop bc
1248  8D2B D1           	pop de
1249  8D2C E1           	pop hl
1250  8D2D C9           	ret
1251  8D2E
1252  8D2E
1253  8D2E              ; **************************************************************************************************
1254  8D2E              ;
1255  8D2E              ;	08/05/23
1256  8D2E              ;
1257  8D2E              ;	Incrementamos los dos punteros de entidades. (+1).
1258  8D2E
1259  8D2E 2A 06 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1260  8D31 22 04 89     	ld (Puntero_store_caja),hl
1261  8D34 2A 08 89     	ld hl,(Indice_restore_caja)
1262  8D37 23           	inc hl
1263  8D38 23           	inc hl
1264  8D39 22 08 89     	ld (Indice_restore_caja),hl
1265  8D3C CD 93 8C         call Extrae_address
1266  8D3F 22 06 89         ld (Puntero_restore_caja),hl
1267  8D42 C9               ret
1268  8D43
1269  8D43              ; **************************************************************************************************
1270  8D43              ;
1271  8D43              ;	25/01/23
1272  8D43              ;
1273  8D43              ;	Restore_Amadeus
1274  8D43              ;
1275  8D43              ;	Cargamos en DRAW los parámetros de Amadeus.
1276  8D43              ;
1277  8D43
1278  8D43 E5           Restore_Amadeus	push hl
1279  8D44 D5           	push de
1280  8D45 C5            	push bc
1281  8D46 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1282  8D49 11 C4 88     	ld de,Filas
1283  8D4C 01 3D 00     	ld bc,61
1284  8D4F ED B0        	ldir
1285  8D51 C1           	pop bc
1286  8D52 D1           	pop de
1287  8D53 E1           	pop hl
1288  8D54 C9           	ret
1289  8D55
1290  8D55              ; *************************************************************************************************************************************************************
1291  8D55              ;
1292  8D55              ;	29/04/23
1293  8D55              ;
1294  8D55              ;	Store_Amadeus
1295  8D55              ;
1296  8D55              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1297  8D55              ;
1298  8D55              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1299  8D55              ;
1300  8D55              ;	DESTRUYE: HL y BC y DE.
1301  8D55
1302  8D55 21 C4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1303  8D58 01 3D 00     	ld bc,61
1304  8D5B ED B0        	ldir
1305  8D5D C9           	ret
1306  8D5E
1307  8D5E              ; -----------------------------------------------------------
1308  8D5E              ;
1309  8D5E              ;	27/04/23
1310  8D5E              ;
1311  8D5E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1312  8D5E              ;
1313  8D5E              ;	Destruye: HL,BC,DE,A
1314  8D5E
1315  8D5E 21 C4 88     Borra_datos_entidad ld hl,Filas
1316  8D61 01 3C 00     	ld bc,60
1317  8D64 AF           	xor a
1318  8D65 77           	ld (hl),a
1319  8D66 11 C5 88     	ld de,Filas+1
1320  8D69 ED B0        	ldir
1321  8D6B C9           	ret
1322  8D6C
1323  8D6C              ; -----------------------------------------------------------
1324  8D6C
1325  8D6C              ; Teclado.
1326  8D6C
1327  8D6C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1328  8D6E DB FE        	in a,($fe)
1329  8D70 E6 01        	and $01
1330  8D72 28 02        	jr z,1f
1331  8D74 18 F6        	jr Pulsa_ENTER
1332  8D76 C9           1 ret
1333  8D77
1334  8D77              ; **************************************************************************************************
1335  8D77              ;
1336  8D77              ; Temporización.
1337  8D77
1338  8D77              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1339  8D77              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1340  8D77              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1341  8D77              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1342  8D77
1343  8D77              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1344  8D77              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1345  8D77              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1346  8D77
1347  8D77              ; A partir de $4f61 no hace falta DELAY.
1348  8D77
1349  8D77              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1350  8D77
1351  8D77 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1352  8D7A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1353  8D7B 78           	LD A,B
1354  8D7C A7           	AND A
1355  8D7D 20 FB        	JR NZ,wait
1356  8D7F C9           	RET
1357  8D80
1358  8D80              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1359  8D80              ;
1360  8D80              ;	5/3/23
1361  8D80              ;
1362  8D80              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1363  8D80
1364  8D80              Movimiento_Amadeus
1365  8D80
1366  8D80              ; Disparo.
1367  8D80
1368  8D80 3A 52 89     	ld a,(Disparo_Amadeus)
1369  8D83 A7           	and a
1370  8D84 20 02        	jr nz,1F
1371  8D86 18 15        	jr 2F
1372  8D88
1373  8D88 3E F7        1 ld a,$f7													; "5" para disparar.
1374  8D8A DB FE        	in a,($fe)
1375  8D8C E6 10        	and $10
1376  8D8E
1377  8D8E F5           	push af
1378  8D8F CC 6F 8E     	call z,Genera_disparo
1379  8D92 F1           	pop af
1380  8D93 20 08        	jr nz,2F
1381  8D95
1382  8D95 3A 52 89     	ld a,(Disparo_Amadeus)
1383  8D98 EE 01        	xor 1
1384  8D9A 32 52 89     	ld (Disparo_Amadeus),a
1385  8D9D
1386  8D9D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1387  8D9F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1388  8DA1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1389  8DA3 CC 40 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1390  8DA6
1391  8DA6 3E F7        	ld a,$f7
1392  8DA8 DB FE        	in a,($fe)
1393  8DAA E6 01        	and $01
1394  8DAC C8           	ret z
1395  8DAD
1396  8DAD 3E F7        	ld a,$f7
1397  8DAF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1398  8DB1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1399  8DB3 CC 22 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1400  8DB6 C9           	ret
1401  8DB7
1402  8DB7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1403  8DB7              ;
1404  8DB7              ;	Rutina provisional para que los malotes cagen balas.
1405  8DB7
1406  8DB7              Detecta_disparo_entidad
1407  8DB7
1408  8DB7 3A 55 89     	ld a,(Disparo_entidad)
1409  8DBA A7           	and a
1410  8DBB C8           	ret z
1411  8DBC
1412  8DBC              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1413  8DBC
1414  8DBC              ;	ld a,$7f				; Detecta SPACE.
1415  8DBC              ;	in a,($fe)
1416  8DBC              ;	and 1
1417  8DBC              ;	ret nz
1418  8DBC
1419  8DBC              ;	call Genera_disparo
1420  8DBC C9           	ret
1421  8DBD
1422  8DBD              ; ----------------------------------------------------------------------
1423  8DBD              ;
1424  8DBD              ;	8/9/23
1425  8DBD
1426  8DBD              Guarda_datos_de_borrado
1427  8DBD
1428  8DBD F3           	di
1429  8DBE
1430  8DBE 2A 18 89     	ld hl,(Stack_snapshot)
1431  8DC1
1432  8DC1 2B           	dec hl
1433  8DC2 7E           	ld a,(hl)
1434  8DC3 A7           	and a
1435  8DC4 C8           	ret z										; Salimos si es álbum está vacío.
1436  8DC5
1437  8DC5 11 E3 88     	ld de,Variables_de_borrado+5
1438  8DC8 01 06 00     	ld bc,6
1439  8DCB ED B8        	lddr
1440  8DCD
1441  8DCD FB           	ei
1442  8DCE
1443  8DCE C9           	ret
1444  8DCF
1445  8DCF              ; ----------------------------------------------------------------------
1446  8DCF              ;
1447  8DCF              ;	8/9/23
1448  8DCF
1449  8DCF 2A 20 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1450  8DD2 2B            	dec hl
1451  8DD3 7E           	ld a,(hl)
1452  8DD4 A7           	and a
1453  8DD5 C8           	ret z										; Salimos si es álbum está vacío.
1454  8DD6
1455  8DD6 11 E3 88     	ld de,Variables_de_borrado+5
1456  8DD9 01 06 00     	ld bc,6
1457  8DDC ED B8        	lddr
1458  8DDE C9           	ret
1459  8DDF
1460  8DDF              ; ----------------------------------------------------------------------
1461  8DDF              ;
1462  8DDF              ;	9/9/23
1463  8DDF
1464  8DDF              Repone_datos_de_borrado_Amadeus
1465  8DDF
1466  8DDF 21 DE 88     	ld hl,Variables_de_borrado
1467  8DE2 11 A0 72     	ld de,Album_de_fotos_Amadeus
1468  8DE5 01 06 00     	ld bc,6
1469  8DE8 ED B0        	ldir
1470  8DEA
1471  8DEA EB           	ex de,hl
1472  8DEB 22 20 89     	ld (End_Snapshot_Amadeus),hl
1473  8DEE
1474  8DEE C9           	ret
1475  8DEF
1476  8DEF              ; ----------------------------------------------------------------------
1477  8DEF              ;
1478  8DEF              ;	18/9/23
1479  8DEF              ;
1480  8DEF
1481  8DEF              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1482  8DEF              ;	_ Album_de_fotos correspondiente.
1483  8DEF
1484  8DEF              ;	DI.
1485  8DEF
1486  8DEF              Repone_datos_de_borrado
1487  8DEF
1488  8DEF F3           	di
1489  8DF0
1490  8DF0 ED 5B 18 89  	ld de,(Stack_snapshot)
1491  8DF4 21 DE 88     	ld hl,Variables_de_borrado
1492  8DF7 01 06 00     	ld bc,6
1493  8DFA ED B0        	ldir
1494  8DFC
1495  8DFC EB           	ex de,hl
1496  8DFD 22 18 89     	ld (Stack_snapshot),hl
1497  8E00
1498  8E00 FB           	ei
1499  8E01
1500  8E01 C9           	ret
1501  8E02
1502  8E02              ; ----------------------------------------------------------------------
1503  8E02              ;
1504  8E02              ;	11/8/23
1505  8E02
1506  8E02              Frame
1507  8E02
1508  8E02              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1509  8E02              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1510  8E02
1511  8E02              ; PINTAMOS.
1512  8E02
1513  8E02 3E 02        	ld a,2
1514  8E04 D3 FE            out ($fe),a											; Rojo.
1515  8E06
1516  8E06              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1517  8E06              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1518  8E06
1519  8E06 2A 2E 89     	ld hl,(Puntero_indice_album_de_fotos)
1520  8E09 01 EC 84     	ld bc,Indice_album_de_fotos
1521  8E0C A7           	and a
1522  8E0D ED 42        	sbc hl,bc
1523  8E0F
1524  8E0F 28 FE        	jr z,$
1525  8E11 C8           	ret z
1526  8E12
1527  8E12 CD 43 8C     	call Calcula_numero_de_malotes
1528  8E15 CD 73 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1529  8E18
1530  8E18              ;	call Extrae_foto_disparos
1531  8E18              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1532  8E18
1533  8E18 CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1534  8E1B
1535  8E1B              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1536  8E1B
1537  8E1B 3A 01 89     	ld a,(Ctrl_1)
1538  8E1E CB 6F        	bit 5,a
1539  8E20 20 22        	jr nz,1F
1540  8E22
1541  8E22              ; No hemos terminado de guardar el último FRAME.
1542  8E22
1543  8E22 2A 2E 89     	ld hl,(Puntero_indice_album_de_fotos)
1544  8E25 2B           	dec hl
1545  8E26 2B           	dec hl
1546  8E27 22 2E 89     	ld (Puntero_indice_album_de_fotos),hl
1547  8E2A
1548  8E2A 2A 32 89     	ld hl,(Puntero_indice_End_Snapshot)
1549  8E2D 2B           	dec hl
1550  8E2E 2B           	dec hl
1551  8E2F 22 32 89     	ld (Puntero_indice_End_Snapshot),hl
1552  8E32 CD 93 8C     	call Extrae_address
1553  8E35 22 36 89     	ld (Puntero_de_End_Snapshot),hl
1554  8E38
1555  8E38 CD 93 8C     	call Extrae_address
1556  8E3B
1557  8E3B              ; Esta vacío este album???
1558  8E3B
1559  8E3B 24           	inc h
1560  8E3C 25           	dec h
1561  8E3D 28 05        	jr z,1F
1562  8E3F
1563  8E3F              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1564  8E3F
1565  8E3F 22 18 89     	ld (Stack_snapshot),hl
1566  8E42 18 09        	jr 2F
1567  8E44
1568  8E44              ; FRAME completo.
1569  8E44
1570  8E44 2A 2E 89     1 ld hl,(Puntero_indice_album_de_fotos)
1571  8E47 CD 93 8C     	call Extrae_address
1572  8E4A 22 18 89     	ld (Stack_snapshot),hl
1573  8E4D
1574  8E4D              ;	En este punto:
1575  8E4D
1576  8E4D              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1577  8E4D              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1578  8E4D
1579  8E4D 21 01 89     2 ld hl,Ctrl_1
1580  8E50 CB AE        	res 5,(hl)
1581  8E52
1582  8E52 C9           	ret
1583  8E53
1584  8E53              ; -----------------------------------------------------------------------------------
1585  8E53
1586  8E53              Pinta_Amadeus
1587  8E53
1588  8E53 3E 06        	ld a,6
1589  8E55 D3 FE            out ($fe),a										; Amarillo
1590  8E57
1591  8E57 CD 5F 8C        	call Calcula_malotes_Amadeus
1592  8E5A CD F5 96     	call Extrae_foto_Amadeus
1593  8E5D CD 1B 8C     	call Limpia_album_Amadeus
1594  8E60 C9           	ret
1595  8E61
1596  8E61              ; -----------------------------------------------------------------------------------
1597  8E61
1598  8E61              Actualiza_relojes
1599  8E61
1600  8E61 21 4D 89     	ld hl,Contador_de_frames
1601  8E64 7E           	ld a,(hl)
1602  8E65 FE FF        	cp $ff
1603  8E67 20 04        	jr nz,1F
1604  8E69 34           	inc (hl)
1605  8E6A 21 4E 89     	ld hl,Contador_de_frames_2
1606  8E6D 34           1 inc (hl)											; 0 - 255
1607  8E6E C9           	ret
1608  8E6F
1609  8E6F              ; ---------------------------------------------------------------
1610  8E6F
1611  8E6F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E6F              ; ******************************************************************************************************************************************************************************************
   2+ 8E6F              ;
   3+ 8E6F              ;   21/07/23
   4+ 8E6F              ;
   5+ 8E6F              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E6F              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E6F              ;
   8+ 8E6F              ;
   9+ 8E6F              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E6F              ;
  11+ 8E6F              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E6F              ;               _ hacen las entidades hacia abajo.
  13+ 8E6F              ;
  14+ 8E6F              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E6F              ;
  16+ 8E6F              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E6F              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E6F              ;
  19+ 8E6F              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E6F              ;           _ la bala.
  21+ 8E6F              ;
  22+ 8E6F              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E6F              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E6F              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E6F              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E6F              ;           _ en el momento de generarse la bala)).
  27+ 8E6F
  28+ 8E6F              Genera_disparo
  29+ 8E6F
  30+ 8E6F              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E6F              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E6F              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E6F              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E6F              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E6F              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E6F              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E6F
  38+ 8E6F              ; Exclusiones:
  39+ 8E6F
  40+ 8E6F 3A DC 88         ld a,(Vel_down)
  41+ 8E72 47               ld b,a
  42+ 8E73 3A 4C 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E76 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E77 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E78 3A FB 88         ld a,(Columnas)
  46+ 8E7B 47               ld b,a
  47+ 8E7C 3A C5 88         ld a,(Columns)
  48+ 8E7F B8               cp b
  49+ 8E80 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E81
  51+ 8E81              ; ----- ----- -----
  52+ 8E81
  53+ 8E81 3A EE 88         ld a,(Ctrl_0)
  54+ 8E84 CB 77            bit 6,a
  55+ 8E86 20 06            jr nz,14F
  56+ 8E88
  57+ 8E88 3A CB 88         ld a,(Coordenada_y)
  58+ 8E8B FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E8D D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E8E
  61+ 8E8E 21 00 80     14 ld hl,Indice_disparo
  62+ 8E91 3A CC 88         ld a,(CTRL_DESPLZ)
  63+ 8E94 4F               ld c,a
  64+ 8E95 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E97              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E97              ;                                            ""        ""       "f9", B="1"
  67+ 8E97              ;                                            ""        ""       "fb", B="2"
  68+ 8E97              ;                                            ""        ""       "fb", B="3"
  69+ 8E97 A7               and a
  70+ 8E98 28 10            jr z,1F
  71+ 8E9A E6 01            and 1
  72+ 8E9C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E9D
  74+ 8E9D 79               ld a,c
  75+ 8E9E 16 F9            ld d,$f9
  76+ 8EA0 23           2 inc hl
  77+ 8EA1 23               inc hl
  78+ 8EA2 04               inc b
  79+ 8EA3 BA               cp d
  80+ 8EA4 28 04            jr z,1F
  81+ 8EA6 14               inc d
  82+ 8EA7 14               inc d
  83+ 8EA8 18 F6            jr 2B
  84+ 8EAA
  85+ 8EAA CD 93 8C     1 call Extrae_address
  86+ 8EAD E5               push hl
  87+ 8EAE FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EB0 DD 21 3B 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EB4
  90+ 8EB4              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EB4              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EB4
  93+ 8EB4 3A EE 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EB7 CB 77            bit 6,a
  95+ 8EB9 20 04            jr nz,19F
  96+ 8EBB
  97+ 8EBB AF               xor a
  98+ 8EBC 32 55 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EBF
 100+ 8EBF 3A D8 88     19 ld a,(Cuad_objeto)
 101+ 8EC2 FE 02            cp 2
 102+ 8EC4 38 66            jr c,3F
 103+ 8EC6 28 64            jr z,3F
 104+ 8EC8
 105+ 8EC8              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EC8
 107+ 8EC8 E6 01            and 1
 108+ 8ECA 28 30            jr z,4F
 109+ 8ECC
 110+ 8ECC              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ECC              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ECC              ;
 113+ 8ECC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ECC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ECC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ECC
 117+ 8ECC 2A C6 88     	ld hl,(Posicion_actual)
 118+ 8ECF
 119+ 8ECF              ;   Amadeus o entidad ???.
 120+ 8ECF
 121+ 8ECF 3A EE 88         ld a,(Ctrl_0)
 122+ 8ED2 CB 77            bit 6,a
 123+ 8ED4 28 0A            jr z,8F
 124+ 8ED6
 125+ 8ED6              ; 	Dispara Amadeus.
 126+ 8ED6
 127+ 8ED6 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8ED8 CD 64 96         call PreviousScan
 129+ 8EDB CD 64 96         call PreviousScan
 130+ 8EDE
 131+ 8EDE              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EDE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EDE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EDE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EDE
 136+ 8EDE 18 11            jr 10F
 137+ 8EE0
 138+ 8EE0              ; 	Dispara Entidad.
 139+ 8EE0
 140+ 8EE0 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EE3              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EE3
 143+ 8EE3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EE3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EE3
 146+ 8EE3 C5               push bc
 147+ 8EE4 06 10            ld b,16
 148+ 8EE6 CD 55 96     9 call NextScan
 149+ 8EE9 10 FB            djnz 9B
 150+ 8EEB C1               pop bc
 151+ 8EEC CD 56 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EEF 18 06            jr 17F
 153+ 8EF1
 154+ 8EF1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EF1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EF1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EF1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EF1
 159+ 8EF1 CD 56 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EF4 CD CB 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EF7              ;                                                      ; _al generar el disparo.
 162+ 8EF7
 163+ 8EF7              ; 	LLegados a este punto tendremos:
 164+ 8EF7              ;
 165+ 8EF7              ;       Puntero_objeto_disparo en IY.
 166+ 8EF7              ;       Rutinas_de_impresion en IX.
 167+ 8EF7              ;       Puntero_de_impresion en HL.
 168+ 8EF7              ;       Impacto/Dirección en BC.
 169+ 8EF7
 170+ 8EF7 CD 5E 8F     17 call Almacena_disparo
 171+ 8EFA 18 52            jr 6F                                             ; RET.
 172+ 8EFC
 173+ 8EFC              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EFC              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EFC              ;
 176+ 8EFC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EFC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EFC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EFC
 180+ 8EFC 2A C6 88     4 ld hl,(Posicion_actual)
 181+ 8EFF
 182+ 8EFF              ;   Amadeus o entidad ???.
 183+ 8EFF
 184+ 8EFF 3A EE 88         ld a,(Ctrl_0)
 185+ 8F02 CB 77            bit 6,a
 186+ 8F04 28 0A            jr z,11F
 187+ 8F06
 188+ 8F06              ; 	Dispara Amadeus.
 189+ 8F06
 190+ 8F06 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F08 CD 64 96         call PreviousScan
 192+ 8F0B CD 64 96         call PreviousScan
 193+ 8F0E
 194+ 8F0E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F0E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F0E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F0E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F0E
 199+ 8F0E 18 11            jr 13F
 200+ 8F10
 201+ 8F10              ; 	Dispara Entidad.
 202+ 8F10
 203+ 8F10 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F13              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F13
 206+ 8F13              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F13              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F13
 209+ 8F13 C5               push bc
 210+ 8F14 06 10            ld b,16
 211+ 8F16 CD 55 96     12 call NextScan
 212+ 8F19 10 FB            djnz 12B
 213+ 8F1B C1               pop bc
 214+ 8F1C
 215+ 8F1C CD 4F 8F         call Ajusta_disparo_parte_derecha
 216+ 8F1F 18 06            jr 18F
 217+ 8F21
 218+ 8F21              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F21              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F21              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F21              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F21
 223+ 8F21 CD 4F 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F24 CD CB 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F27              ;                                                       ; _al generar el disparo.
 226+ 8F27
 227+ 8F27              ; LLegados a este punto tendremos:
 228+ 8F27              ;
 229+ 8F27              ;       Puntero_objeto_disparo en IY.
 230+ 8F27              ;       Rutinas_de_impresion en IX.
 231+ 8F27              ;       Puntero_de_impresion en HL.
 232+ 8F27              ;       Impacto/Dirección en BC.
 233+ 8F27
 234+ 8F27 CD 5E 8F     18 call Almacena_disparo
 235+ 8F2A 18 22            jr 6F                                               ; RET.
 236+ 8F2C
 237+ 8F2C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F2C
 239+ 8F2C 28 11        3 jr z,5F
 240+ 8F2E
 241+ 8F2E              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F2E              ;
 243+ 8F2E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F2E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F2E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F2E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F2E
 248+ 8F2E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F2E              ;	   ""        ""       "f9", B="1"
 250+ 8F2E              ;	   ""        ""       "fb", B="2"
 251+ 8F2E              ; 	   ""        ""       "fb", B="3"
 252+ 8F2E
 253+ 8F2E 2A C6 88     	ld hl,(Posicion_actual)
 254+ 8F31 CD 55 96     	call NextScan
 255+ 8F34
 256+ 8F34              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F34              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F34              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F34              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F34
 261+ 8F34 CD 56 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F37
 263+ 8F37              ; 	No se produce impacto. B="$80"
 264+ 8F37              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F37
 266+ 8F37 01 80 80         ld bc,$8080
 267+ 8F3A
 268+ 8F3A              ; 	LLegados a este punto tendremos:
 269+ 8F3A              ;
 270+ 8F3A              ;       Puntero_objeto_disparo en IY.
 271+ 8F3A              ;       Rutinas_de_impresion en IX.
 272+ 8F3A              ;       Puntero_de_impresion en HL.
 273+ 8F3A              ;       Impacto/Dirección en BC.
 274+ 8F3A
 275+ 8F3A CD 5E 8F         call Almacena_disparo
 276+ 8F3D 18 0F            jr 6F                                           ; RET.
 277+ 8F3F
 278+ 8F3F              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F3F              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F3F              ;
 281+ 8F3F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F3F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F3F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F3F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F3F
 286+ 8F3F 2A C6 88     5 ld hl,(Posicion_actual)
 287+ 8F42 CD 55 96     	call NextScan
 288+ 8F45
 289+ 8F45              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F45              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F45              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F45              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F45
 294+ 8F45 CD 4F 8F         call Ajusta_disparo_parte_derecha
 295+ 8F48
 296+ 8F48              ; 	No se produce impacto. B="$80"
 297+ 8F48              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F48
 299+ 8F48 01 80 80     15 ld bc,$8080
 300+ 8F4B
 301+ 8F4B              ; 	LLegados a este punto tendremos:
 302+ 8F4B              ;
 303+ 8F4B              ;       Puntero_objeto_disparo en IY.
 304+ 8F4B              ;       Rutinas_de_impresion en IX.
 305+ 8F4B              ;       Puntero_de_impresion en HL.
 306+ 8F4B              ;       Impacto/Dirección en BC.
 307+ 8F4B
 308+ 8F4B CD 5E 8F         call Almacena_disparo
 309+ 8F4E
 310+ 8F4E C9           6 ret
 311+ 8F4F
 312+ 8F4F              ; ----------------------------------------------------------------
 313+ 8F4F              ;
 314+ 8F4F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F4F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F4F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F4F
 318+ 8F4F 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F50 FE 02            cp 2
 320+ 8F52 38 01            jr c,1F
 321+ 8F54 23               inc hl
 322+ 8F55 C9           1 ret
 323+ 8F56
 324+ 8F56 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F57 FE 01        	cp 1
 326+ 8F59 20 01        	jr nz,1F
 327+ 8F5B 2B           	dec hl
 328+ 8F5C 2B           1 dec hl
 329+ 8F5D C9               ret
 330+ 8F5E
 331+ 8F5E              ; ----------------------------------------------------------------
 332+ 8F5E              ;
 333+ 8F5E              ;   25/02/23
 334+ 8F5E              ;
 335+ 8F5E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F5E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F5E              ;
 338+ 8F5E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F5E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F5E
 341+ 8F5E              Almacena_disparo
 342+ 8F5E
 343+ 8F5E E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F5F F1               pop af
 345+ 8F60 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F61
 347+ 8F61 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F62 E6 01            and 1
 349+ 8F64 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F66              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F66              ; 	Dispara AMADEUS.
 352+ 8F66
 353+ 8F66              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F66              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F66              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F66              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F66
 358+ 8F66 C5               push bc
 359+ 8F67 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F6A 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F6D A7               and a
 362+ 8F6E ED 42            sbc hl,bc
 363+ 8F70 CC 14 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F73 C1               pop bc
 365+ 8F74 28 54            jr z,4F
 366+ 8F76
 367+ 8F76 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F79 23               inc hl
 369+ 8F7A 23               inc hl
 370+ 8F7B 22 3D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F7E              ;                                                   ; _ Disparo_(+1).
 372+ 8F7E 18 18            jr 2F
 373+ 8F80
 374+ 8F80              ; Dispara una entidad.
 375+ 8F80
 376+ 8F80 C5           1 push bc
 377+ 8F81 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F84 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F87 A7               and a
 380+ 8F88 ED 42            sbc hl,bc
 381+ 8F8A CC 0D 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F8D C1               pop bc
 383+ 8F8E 28 3A            jr z,4F
 384+ 8F90
 385+ 8F90 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F93 23               inc hl
 387+ 8F94 23               inc hl
 388+ 8F95 22 3B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F98              ;                                                   ; _ Disparo_(+1).
 390+ 8F98 CD 93 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F9B              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F9B              ;
 393+ 8F9B              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F9B              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F9B              ;                                                     Puntero_de_impresion en HL.
 396+ 8F9B              ;                                                     Impacto/Dirección en BC.
 397+ 8F9B
 398+ 8F9B 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F9C 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F9D 23               inc hl                                          ; _ al siguiente.
 401+ 8F9E A7               and a
 402+ 8F9F 20 C0            jr nz,3B
 403+ 8FA1
 404+ 8FA1 08               ex af,af
 405+ 8FA2 ED 73 12 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FA6 F9               ld sp,hl
 407+ 8FA7
 408+ 8FA7 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FA9 F5               push af                                         ; Puntero de impresión.
 410+ 8FAA FD E5            push iy                                         ; Puntero objeto.
 411+ 8FAC C5               push bc                                         ; Control.
 412+ 8FAD
 413+ 8FAD ED 7B 12 89      ld sp,(Stack)
 414+ 8FB1
 415+ 8FB1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FB1
 417+ 8FB1 21 01 89     	ld hl,Ctrl_1
 418+ 8FB4 CB C6        	set 0,(hl)
 419+ 8FB6
 420+ 8FB6 DD E5        	push ix
 421+ 8FB8 E1               pop hl
 422+ 8FB9 F5               push af
 423+ 8FBA DD E1            pop ix
 424+ 8FBC
 425+ 8FBC CD A0 7F     	call Guarda_foto_registros
 426+ 8FBF
 427+ 8FBF 21 01 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FC2 CB 86        	res 0,(hl)
 429+ 8FC4
 430+ 8FC4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FC4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FC4
 433+ 8FC4 CD 14 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FC7 CD 0D 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FCA
 436+ 8FCA C9           4 ret
 437+ 8FCB
 438+ 8FCB              ; ----------------------------------------------------------------
 439+ 8FCB              ;
 440+ 8FCB              ;   4/3/23
 441+ 8FCB              ;
 442+ 8FCB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FCB              ;   _ al generarse el disparo.
 444+ 8FCB              ;
 445+ 8FCB              ;       "$80" ..... No se produce colisión.
 446+ 8FCB              ;       "$81" ..... Se produce colisión.
 447+ 8FCB              ;
 448+ 8FCB              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FCB              ;         _ que forman el disparo.
 450+ 8FCB
 451+ 8FCB
 452+ 8FCB              Comprueba_Colision
 453+ 8FCB
 454+ 8FCB              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FCB
 456+ 8FCB FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FCD E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FCE
 459+ 8FCE CD 04 90         call Modifica_H_Velocidad_disparo
 460+ 8FD1
 461+ 8FD1 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FD2 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FD4 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FD6
 465+ 8FD6 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FD8 CD F4 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FDB
 468+ 8FDB 7B               ld a,e
 469+ 8FDC E6 01            and 1
 470+ 8FDE 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FE0              ;                                                  ; _ para activar IMPACTO.
 472+ 8FE0 E1               pop hl
 473+ 8FE1 E5               push hl
 474+ 8FE2 CD 55 96         call NextScan
 475+ 8FE5
 476+ 8FE5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FE6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FE8 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FEA              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FEA 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FEC CD F4 8F         call Bucle_2
 482+ 8FEF
 483+ 8FEF 43           1 ld b,e
 484+ 8FF0 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FF1 FD E1            pop iy
 486+ 8FF3 C9               ret
 487+ 8FF4
 488+ 8FF4              ; ---------- ----------
 489+ 8FF4
 490+ 8FF4 06 02        Bucle_2 ld b,2
 491+ 8FF6 FD 7E 00     2 ld a,(iy)
 492+ 8FF9 A6               and (hl)
 493+ 8FFA 28 02            jr z,1F
 494+ 8FFC 1E 81            ld e,$81
 495+ 8FFE 23           1 inc hl
 496+ 8FFF FD 23            inc iy
 497+ 9001 10 F3            djnz 2B
 498+ 9003 C9               ret
 499+ 9004
 500+ 9004              ; ---------- ----------
 501+ 9004              ;
 502+ 9004              ;   21/7/23
 503+ 9004
 504+ 9004              Modifica_H_Velocidad_disparo
 505+ 9004
 506+ 9004 3A 4C 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9007 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9009 D0               ret nc                                         ; _ incrementamos H.
 509+ 900A 24               inc h
 510+ 900B
 511+ 900B C9               ret
 512+ 900C
 513+ 900C              ; -------------------------------------------------------------------------------------------------------------
 514+ 900C              ;
 515+ 900C              ;   11/04/23
 516+ 900C              ;
 517+ 900C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 900C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 900C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 900C              ;
 521+ 900C              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 900C
 523+ 900C              Compara_coordenadas_X
 524+ 900C
 525+ 900C              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 900C              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 900C
 528+ 900C              ; Preparamos registros:
 529+ 900C
 530+ 900C 21 CA 88         ld hl,Filas+6
 531+ 900F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9010 23               inc hl
 533+ 9011 23               inc hl
 534+ 9012 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9013 43               ld b,e
 536+ 9014
 537+ 9014 21 D8 88         ld hl,Filas+20
 538+ 9017 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9018 21 47 89         ld hl,Coordenadas_X_Entidad
 540+ 901B CD 37 92         call Guarda_coordenadas_X
 541+ 901E
 542+ 901E              ; Preparamos registros:
 543+ 901E
 544+ 901E 21 A4 85         ld hl,Amadeus_db+6
 545+ 9021 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9022 23               inc hl
 547+ 9023 23               inc hl
 548+ 9024 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9025 7B               ld a,e
 550+ 9026 08               ex af,af'
 551+ 9027 21 B2 85         ld hl,Amadeus_db+20
 552+ 902A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 902B 21 44 89         ld hl,Coordenadas_X_Amadeus
 554+ 902E CD 37 92         call Guarda_coordenadas_X
 555+ 9031
 556+ 9031              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9031              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9031
 559+ 9031 04               inc b
 560+ 9032 05               dec b
 561+ 9033 28 04            jr z,1F
 562+ 9035 06 03            ld b,3
 563+ 9037 18 02            jr 2F
 564+ 9039 06 02        1 ld b,2
 565+ 903B 08           2 ex af,af'
 566+ 903C 3C               inc a
 567+ 903D 3D               dec a
 568+ 903E 28 04            jr z,5F
 569+ 9040 0E 03            ld c,3
 570+ 9042 18 02            jr 6F
 571+ 9044 0E 02        5 ld c,2
 572+ 9046 79           6 ld a,c
 573+ 9047 08               ex af,af'
 574+ 9048 11 47 89         ld de,Coordenadas_X_Entidad
 575+ 904B 1A           4 ld a,(de)
 576+ 904C 21 44 89         ld hl,Coordenadas_X_Amadeus
 577+ 904F BE           3 cp (hl)
 578+ 9050 28 0E            jr z,7F
 579+ 9052 23               inc hl
 580+ 9053 0D               dec c
 581+ 9054 20 F9            jr nz,3B
 582+ 9056 13               inc de
 583+ 9057 08               ex af,af'
 584+ 9058 4F               ld c,a
 585+ 9059 08               ex af,af'
 586+ 905A 10 EF            djnz 4B
 587+ 905C
 588+ 905C              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 905C
 590+ 905C CD 73 92     8 call Limpia_Coordenadas_X
 591+ 905F C9               ret
 592+ 9060
 593+ 9060 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9062 32 DD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9065 21 3F 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9068 CB D6            set 2,(hl)
 597+ 906A 18 F0            jr 8B
 598+ 906C
 599+ 906C              ; -----------------------------------------------------------------------
 600+ 906C              ;
 601+ 906C              ;   17/04/23
 602+ 906C              ;
 603+ 906C
 604+ 906C              Detecta_colision_nave_entidad
 605+ 906C
 606+ 906C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 906C
 608+ 906C 2A C6 88         ld hl,(Posicion_actual)
 609+ 906F CD B0 95         call Calcula_puntero_de_impresion
 610+ 9072
 611+ 9072              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9072              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9072
 614+ 9072 DD E5            push ix
 615+ 9074 E1               pop hl
 616+ 9075 E5               push hl
 617+ 9076
 618+ 9076              ; ----- ----- -----
 619+ 9076 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9078 06 0A            ld b,10
 621+ 907A CD AA 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 907D 7B               ld a,e
 623+ 907E FE 05            cp 5
 624+ 9080 38 0E            jr c,3F
 625+ 9082
 626+ 9082              ; LLegados a este punto:
 627+ 9082              ;
 628+ 9082              ;   HAY COLISIÓN !!!!!.
 629+ 9082              ;
 630+ 9082              ;   .db (Impacto) de Amadeus a "1".
 631+ 9082              ;   SET el bit3 de (Impacto2).
 632+ 9082              ;
 633+ 9082              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9082
 635+ 9082 21 B7 85         ld hl,Amadeus_db+25
 636+ 9085 36 01            ld (hl),1
 637+ 9087 21 3F 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 908A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 908C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 908E 18 18            jr 1F
 641+ 9090
 642+ 9090              ; -----
 643+ 9090
 644+ 9090 E1           3 pop hl
 645+ 9091 CD 55 96         call NextScan
 646+ 9094 E5               push hl
 647+ 9095 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9096 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9098 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 909A 30 0C            jr nc,1F
 651+ 909C              ;                                                  ; _ 2º scanline si esto es así.
 652+ 909C 10 DC            djnz 2B
 653+ 909E
 654+ 909E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 909E
 656+ 909E              ; LLegados a este punto:
 657+ 909E              ;
 658+ 909E              ;   NO HAY COLISIÓN !!!!!.
 659+ 909E              ;
 660+ 909E              ;   .db (Impacto) de Amadeus a "0".
 661+ 909E              ;   RES el bit2 de (Impacto2).
 662+ 909E              ;
 663+ 909E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 909E              ;   Lo colocamos a "0".
 665+ 909E
 666+ 909E 21 3F 89         ld hl,Impacto2
 667+ 90A1 CB 96            res 2,(hl)
 668+ 90A3 2A 40 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90A6 36 00            ld (hl),0
 670+ 90A8
 671+ 90A8 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90A9 C9               ret
 673+ 90AA
 674+ 90AA               ; ---------- ----------
 675+ 90AA
 676+ 90AA C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90AB 3A C5 88         ld a,(Columns)
 678+ 90AE 47               ld b,a
 679+ 90AF FD 7E 00     2 ld a,(iy)
 680+ 90B2 BE               cp (hl)
 681+ 90B3 28 01            jr z,1F
 682+ 90B5
 683+ 90B5 1C               inc e
 684+ 90B6
 685+ 90B6 23           1 inc hl
 686+ 90B7 FD 23            inc iy
 687+ 90B9 10 F4            djnz 2B
 688+ 90BB C1               pop bc
 689+ 90BC C9               ret
 690+ 90BD
 691+ 90BD              ; -------------------------------------------------------------------------------------------------------------
 692+ 90BD              ;
 693+ 90BD              ;   13/03/23
 694+ 90BD              ;
 695+ 90BD              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90BD              ;
 697+ 90BD              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90BD
 699+ 90BD 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90C0 7E               ld a,(hl)
 701+ 90C1 A7               and a
 702+ 90C2 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90C3
 704+ 90C3 44               ld b,h
 705+ 90C4 4D               ld c,l
 706+ 90C5 2A 1A 89         ld hl,(Stack_snapshot_disparos)
 707+ 90C8 E5               push hl
 708+ 90C9 A7               and a
 709+ 90CA ED 42            sbc hl,bc
 710+ 90CC E5               push hl
 711+ 90CD C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90CE
 713+ 90CE E1               pop hl
 714+ 90CF 54               ld d,h
 715+ 90D0 5D               ld e,l
 716+ 90D1 1B               dec de
 717+ 90D2 ED B8            lddr                                                ; Limpiamos.
 718+ 90D4
 719+ 90D4 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90D7 22 1A 89         ld (Stack_snapshot_disparos),hl
 721+ 90DA
 722+ 90DA C9               ret
 723+ 90DB
 724+ 90DB              ; -------------------------------------------------------------------------------------------------------------
 725+ 90DB              ;
 726+ 90DB              ;   18/07/23
 727+ 90DB              ;
 728+ 90DB
 729+ 90DB              Motor_de_disparos
 730+ 90DB
 731+ 90DB              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90DB
 733+ 90DB 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90DE 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90E1
 736+ 90E1 CD 93 8C     2 call Extrae_address
 737+ 90E4 7E               ld a,(hl)
 738+ 90E5 A7               and a
 739+ 90E6 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90E8
 741+ 90E8              ; ----- ----- ----- ----- ----- -----
 742+ 90E8
 743+ 90E8 C5               push bc
 744+ 90E9 CD AD 91         call foto_disparo_a_borrar
 745+ 90EC
 746+ 90EC              ; Existe colisión con este disparo???
 747+ 90EC
 748+ 90EC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90ED 7E               ld a,(hl)
 750+ 90EE 2B               dec hl
 751+ 90EF E6 01            and 1
 752+ 90F1 28 1D            jr z,9F
 753+ 90F3
 754+ 90F3              ;   En este punto:
 755+ 90F3              ;
 756+ 90F3              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90F3              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90F3              ;   _con la entidad).
 759+ 90F3              ;
 760+ 90F3              ;   Disparo_2A defw 0                                ; Control.
 761+ 90F3              ;    defw 0                                          ; Puntero objeto.
 762+ 90F3              ;    defw 0                                          ; Puntero de impresión.
 763+ 90F3              ;    defw 0                                          ; Rutina de impresión.
 764+ 90F3
 765+ 90F3 E5               push hl
 766+ 90F4
 767+ 90F4 06 04            ld b,4
 768+ 90F6 23           19 inc hl
 769+ 90F7 10 FD            djnz 19B
 770+ 90F9
 771+ 90F9 CD 93 8C         call Extrae_address
 772+ 90FC CD 1E 9D         call Genera_coordenadas_disparo
 773+ 90FF
 774+ 90FF              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90FF
 776+ 90FF 21 42 89         ld hl,Coordenadas_disparo_certero
 777+ 9102 72               ld (hl),d
 778+ 9103 23               inc hl
 779+ 9104 73               ld (hl),e
 780+ 9105
 781+ 9105              ; Elimino el disparo de la base de datos.
 782+ 9105
 783+ 9105 E1               pop hl
 784+ 9106 CD 2C 92         call Elimina_disparo_de_base_de_datos
 785+ 9109 21 3F 89         ld hl,Impacto2
 786+ 910C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 910E
 788+ 910E 18 06            jr 11F
 789+ 9110
 790+ 9110 CD D6 91     9 call Mueve_disparo
 791+ 9113 CD AD 91         call foto_disparo_a_borrar
 792+ 9116
 793+ 9116 C1           11 pop bc
 794+ 9117 18 04            jr 7F
 795+ 9119
 796+ 9119              ; ----- ----- ----- ----- ----- -----
 797+ 9119
 798+ 9119 ED 42        1 sbc hl,bc
 799+ 911B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 911D
 801+ 911D 2A 3D 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9120 23               inc hl
 803+ 9121 23               inc hl
 804+ 9122 22 3D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9125 18 BA            jr 2B
 806+ 9127
 807+ 9127 CD 14 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 912A              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 912A
 810+ 912A              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 912A
 812+ 912A 01 8A 85         ld bc,Disparo_11
 813+ 912D 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9130
 815+ 9130 CD 93 8C     5 call Extrae_address
 816+ 9133 7E               ld a,(hl)
 817+ 9134 A7               and a
 818+ 9135 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9137
 820+ 9137              ; ----- ----- ----- ----- ----- -----
 821+ 9137
 822+ 9137 C5               push bc
 823+ 9138 CD AD 91         call foto_disparo_a_borrar
 824+ 913B
 825+ 913B              ; Existe colisión con este disparo???
 826+ 913B
 827+ 913B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 913C 7E               ld a,(hl)
 829+ 913D 2B               dec hl
 830+ 913E E6 01            and 1
 831+ 9140 28 4D            jr z,10F
 832+ 9142
 833+ 9142              ;! La colisión se produce con Amadeus???
 834+ 9142              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9142
 836+ 9142 E5               push hl
 837+ 9143
 838+ 9143 06 04            ld b,4
 839+ 9145 23           16 inc hl
 840+ 9146 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9148
 842+ 9148 CD 93 8C         call Extrae_address
 843+ 914B CD 1E 9D         call Genera_coordenadas_disparo
 844+ 914E
 845+ 914E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 914F FE 16            cp $16
 847+ 9151 38 2A            jr c,15F
 848+ 9153
 849+ 9153
 850+ 9153              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9153
 852+ 9153 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9154
 854+ 9154              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9154
 856+ 9154
 857+ 9154 2A 4A 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9157
 859+ 9157              ; Coordenada X de Amadeus en D.
 860+ 9157
 861+ 9157 7D               ld a,l
 862+ 9158 E6 1F            and $1F
 863+ 915A 57               ld d,a
 864+ 915B
 865+ 915B 21 A6 85         ld hl,Amadeus_db+8
 866+ 915E 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 915F
 868+ 915F 21 44 89         ld hl,Coordenadas_X_Amadeus
 869+ 9162 CD 37 92         call Guarda_coordenadas_X
 870+ 9165
 871+ 9165 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9166
 873+ 9166              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9166
 875+ 9166 06 02            ld b,2
 876+ 9168 C5           20 push bc
 877+ 9169
 878+ 9169 06 03            ld b,3
 879+ 916B 21 44 89         ld hl,Coordenadas_X_Amadeus
 880+ 916E 7E           18 ld a,(hl)
 881+ 916F BA               cp d
 882+ 9170 20 04            jr nz,17F
 883+ 9172
 884+ 9172              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9172
 886+ 9172 C1               pop bc
 887+ 9173 E1               pop hl
 888+ 9174 18 0D            jr 14F
 889+ 9176
 890+ 9176 23           17 inc hl
 891+ 9177 10 F5            djnz 18B
 892+ 9179
 893+ 9179 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 917A
 895+ 917A C1               pop bc
 896+ 917B 10 EB            djnz 20B
 897+ 917D
 898+ 917D
 899+ 917D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 917D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 917D
 902+ 917D E1           15 pop hl
 903+ 917E 23               inc hl
 904+ 917F 35               dec (hl)
 905+ 9180 2B               dec hl
 906+ 9181 18 0C            jr 10F
 907+ 9183
 908+ 9183              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9183              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9183
 911+ 9183 E5           14 push hl
 912+ 9184 CD 2C 92         call Elimina_disparo_de_base_de_datos
 913+ 9187 21 3F 89         ld hl,Impacto2
 914+ 918A CB CE            set 1,(hl)
 915+ 918C E1               pop hl
 916+ 918D 18 06            jr 12F
 917+ 918F
 918+ 918F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 918F
 920+ 918F CD D6 91     10 call Mueve_disparo
 921+ 9192 CD AD 91         call foto_disparo_a_borrar
 922+ 9195 C1           12 pop bc
 923+ 9196
 924+ 9196 18 04            jr 8F
 925+ 9198
 926+ 9198              ; ----- ----- ----- ----- ----- -----
 927+ 9198
 928+ 9198 ED 42        4 sbc hl,bc
 929+ 919A 28 0A            jr z,6F
 930+ 919C
 931+ 919C 2A 3B 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 919F 23               inc hl
 933+ 91A0 23               inc hl
 934+ 91A1 22 3B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91A4 18 8A            jr 5B
 936+ 91A6
 937+ 91A6 CD 0D 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91A9 CD 73 92         call Limpia_Coordenadas_X
 939+ 91AC C9               ret
 940+ 91AD
 941+ 91AD              ; ------------------------------------------------------------------
 942+ 91AD
 943+ 91AD              foto_disparo_a_borrar
 944+ 91AD
 945+ 91AD 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91AE A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91AF C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91B0
 949+ 91B0 E5               push hl
 950+ 91B1 23               inc hl
 951+ 91B2 23               inc hl
 952+ 91B3 ED 73 12 89      ld (Stack),sp
 953+ 91B7 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91B8 FD E1            pop iy
 955+ 91BA DD E1            pop ix
 956+ 91BC E1               pop hl
 957+ 91BD ED 7B 12 89      ld sp,(Stack)
 958+ 91C1 3A 01 89         ld a,(Ctrl_1)
 959+ 91C4 CB C7            set 0,a
 960+ 91C6 32 01 89         ld (Ctrl_1),a
 961+ 91C9 CD A0 7F         call Guarda_foto_registros
 962+ 91CC 3A 01 89         ld a,(Ctrl_1)
 963+ 91CF CB 87            res 0,a
 964+ 91D1 32 01 89         ld (Ctrl_1),a
 965+ 91D4 E1               pop hl
 966+ 91D5 C9               ret
 967+ 91D6
 968+ 91D6              ;---------------------------------------------------
 969+ 91D6              ;
 970+ 91D6              ;   18/07/23
 971+ 91D6              ;
 972+ 91D6
 973+ 91D6              Mueve_disparo
 974+ 91D6
 975+ 91D6              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91D6              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91D6              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91D6
 979+ 91D6 E5               push hl
 980+ 91D7
 981+ 91D7 7E               ld a,(hl)
 982+ 91D8
 983+ 91D8 06 04            ld b,4
 984+ 91DA 23           1 inc hl
 985+ 91DB 10 FD            djnz 1B
 986+ 91DD
 987+ 91DD              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91DD
 989+ 91DD CD 93 8C         call Extrae_address
 990+ 91E0
 991+ 91E0 E6 01            and 1
 992+ 91E2 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91E4
 994+ 91E4              ; Disparo hacia arriba, (Amadeus).
 995+ 91E4
 996+ 91E4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91E4              ; _ de la dificultad.
 998+ 91E4
 999+ 91E4 CD 64 96         call PreviousScan
1000+ 91E7 CD 64 96         call PreviousScan
1001+ 91EA CD 64 96         call PreviousScan
1002+ 91ED CD 64 96         call PreviousScan
1003+ 91F0
1004+ 91F0              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91F0
1006+ 91F0 7C               ld a,h
1007+ 91F1 FE 40            cp $40
1008+ 91F3 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91F5
1010+ 91F5              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91F5
1012+ 91F5 EB               ex de,hl
1013+ 91F6 06 04            ld b,4
1014+ 91F8 2B           6 dec hl
1015+ 91F9 10 FD            djnz 6B
1016+ 91FB
1017+ 91FB CD 2C 92         call Elimina_disparo_de_base_de_datos
1018+ 91FE E1               pop hl
1019+ 91FF 18 10            jr 7F
1020+ 9201
1021+ 9201              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9201              ; HL contiene el puntero de impresión del disparo.
1023+ 9201              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9201
1025+ 9201 D5           3 push de
1026+ 9202 C5               push bc
1027+ 9203
1028+ 9203 CD CB 8F         call Comprueba_Colision
1029+ 9206
1030+ 9206              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9206
1032+ 9206 78               ld a,b
1033+ 9207
1034+ 9207 C1               pop bc
1035+ 9208 D1               pop de
1036+ 9209
1037+ 9209 EB               ex de,hl
1038+ 920A
1039+ 920A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 920B 23               inc hl                                      ; _ movimiento.
1041+ 920C 72               ld (hl),d
1042+ 920D
1043+ 920D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 920E
1045+ 920E 23               inc hl                                      ; _ en curso.
1046+ 920F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9210 2B               dec hl
1048+ 9211
1049+ 9211 C9           7 ret
1050+ 9212
1051+ 9212              ; Disparo hacia abajo, (Entidad).
1052+ 9212
1053+ 9212 3A 4C 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9215 47               ld b,a
1055+ 9216
1056+ 9216 CD 55 96     4 call NextScan
1057+ 9219 10 FB            djnz 4B
1058+ 921B
1059+ 921B              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 921B
1061+ 921B 7C               ld a,h
1062+ 921C FE 58            cp $58
1063+ 921E 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9220
1065+ 9220 EB               ex de,hl
1066+ 9221 06 04            ld b,4
1067+ 9223 2B           5 dec hl
1068+ 9224 10 FD            djnz 5B
1069+ 9226
1070+ 9226 CD 2C 92         call Elimina_disparo_de_base_de_datos
1071+ 9229 E1               pop hl
1072+ 922A 18 E5            jr 7B
1073+ 922C
1074+ 922C              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 922C
1076+ 922C 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 922F AF               xor a
1078+ 9230 77               ld (hl),a
1079+ 9231 54               ld d,h
1080+ 9232 5D               ld e,l
1081+ 9233 13               inc de
1082+ 9234 ED B0            ldir
1083+ 9236 C9               ret
1084+ 9237
1085+ 9237              ; -----------------------------------------------------------------
1086+ 9237              ;
1087+ 9237              ;   19/7/23
1088+ 9237              ;
1089+ 9237              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9237              ;
1091+ 9237              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9237              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9237              ;
1094+ 9237              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9237              ;
1096+ 9237              ;   INPUTS:
1097+ 9237              ;
1098+ 9237              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9237              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9237
1101+ 9237              ;   MODIFICA: A, HL, BC y DE.
1102+ 9237
1103+ 9237              Guarda_coordenadas_X
1104+ 9237
1105+ 9237 7B               ld a,e
1106+ 9238 A7               and a
1107+ 9239 20 04            jr nz,1F
1108+ 923B
1109+ 923B 06 02            ld b,2
1110+ 923D 18 02            jr 2F
1111+ 923F
1112+ 923F 06 03        1 ld b,3
1113+ 9241 72           2 ld (hl),d
1114+ 9242 23               inc hl
1115+ 9243 14               inc d
1116+ 9244 10 FB            djnz 2B
1117+ 9246
1118+ 9246 C9               ret
1119+ 9247
1120+ 9247              ; -----------------------------------------------------------------
1121+ 9247              ;
1122+ 9247              ;   12/04/23
1123+ 9247              ;
1124+ 9247
1125+ 9247 3A 3F 89     Selector_de_impactos ld a,(Impacto2)
1126+ 924A A7               and a
1127+ 924B C8               ret z
1128+ 924C
1129+ 924C FE 04            cp 4
1130+ 924E 20 09            jr nz,1F
1131+ 9250
1132+ 9250
1133+ 9250              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9250
1135+ 9250 CD 6C 90         call Detecta_colision_nave_entidad
1136+ 9253
1137+ 9253 21 3F 89         ld hl,Impacto2
1138+ 9256 CB 5E            bit 3,(hl)
1139+ 9258 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9259
1141+ 9259              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9259              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9259
1144+ 9259 21 3F 89     1 ld hl,Impacto2
1145+ 925C CB 4E            bit 1,(hl)
1146+ 925E 28 07            jr z,2F
1147+ 9260
1148+ 9260 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9263 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9265 18 0B            jr 3F
1151+ 9267
1152+ 9267 21 3F 89     2 ld hl,Impacto2
1153+ 926A CB 46            bit 0,(hl)
1154+ 926C C8               ret z
1155+ 926D
1156+ 926D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 926D
1158+ 926D 21 01 89         ld hl,Ctrl_1
1159+ 9270 CB D6            set 2,(hl)
1160+ 9272
1161+ 9272 C9           3 ret
1162+ 9273
1163+ 9273              ; -----------------------------------------------------------------
1164+ 9273              ;
1165+ 9273              ;   19/7/23
1166+ 9273              ;
1167+ 9273              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9273
1169+ 9273 AF           Limpia_Coordenadas_X xor a
1170+ 9274 06 06            ld b,6
1171+ 9276 21 44 89         ld hl,Coordenadas_X_Amadeus
1172+ 9279 77           1 ld (hl),a
1173+ 927A 23               inc hl
1174+ 927B 10 FC            djnz 1B
1175+ 927D C9               ret
1176+ 927E
1177+ 927E              ; -----------------------------------------------------------------
1178+ 927E              ;
1179+ 927E              ;   25/04/23
1180+ 927E              ;
1181+ 927E
1182+ 927E              Determina_resultado_comparativa
1183+ 927E
1184+ 927E              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 927E              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 927E              ;
1187+ 927E              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 927E              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 927E              ;
1190+ 927E              ;   SBC HL,DE
1191+ 927E
1192+ 927E              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 927E              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 927E
1195+ 927E              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 927E              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 927E
1198+ 927E
1199+ 927E 3A D8 88         ld a,(Cuad_objeto)
1200+ 9281 FE 02            cp 2
1201+ 9283 28 26            jr z,2F
1202+ 9285 38 24            jr c,2F
1203+ 9287
1204+ 9287              ; Cuadrantes 3º y 4º
1205+ 9287
1206+ 9287 E6 01            and 1
1207+ 9289 28 10            jr z,4F
1208+ 928B
1209+ 928B              ; Cuadrante 3º
1210+ 928B
1211+ 928B 7C               ld a,h
1212+ 928C 06 00            ld b,0
1213+ 928E
1214+ 928E CD 19 93         call Compara_cositas_H3
1215+ 9291
1216+ 9291 04               inc b
1217+ 9292 05               dec b
1218+ 9293 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9294
1220+ 9294 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9295 06 00            ld b,0
1222+ 9297
1223+ 9297 CD 2B 93         call Compara_cositas_L3
1224+ 929A C9               ret
1225+ 929B
1226+ 929B              ; Cuadrante 4º
1227+ 929B
1228+ 929B 7C           4 ld a,h
1229+ 929C 06 00            ld b,0
1230+ 929E
1231+ 929E CD 3D 93         call Compara_cositas_H4
1232+ 92A1
1233+ 92A1 04               inc b
1234+ 92A2 05               dec b
1235+ 92A3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92A4
1237+ 92A4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92A5 06 00            ld b,0
1239+ 92A7
1240+ 92A7 CD 53 93         call Compara_cositas_L4
1241+ 92AA C9               ret
1242+ 92AB
1243+ 92AB              ; Cuadrantes 1º y 2º.
1244+ 92AB
1245+ 92AB 28 10        2 jr z,3F
1246+ 92AD
1247+ 92AD              ; 1er Cuadrante
1248+ 92AD
1249+ 92AD 7C               ld a,h
1250+ 92AE 06 00            ld b,0
1251+ 92B0
1252+ 92B0 CD F1 92         call Compara_cositas_H1
1253+ 92B3
1254+ 92B3 04               inc b
1255+ 92B4 05               dec b
1256+ 92B5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92B6
1258+ 92B6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92B7 06 00            ld b,0
1260+ 92B9
1261+ 92B9 CD 07 93         call Compara_cositas_L1
1262+ 92BC C9               ret
1263+ 92BD
1264+ 92BD
1265+ 92BD              ; 2º Cuadrante
1266+ 92BD
1267+ 92BD 7C           3 ld a,h
1268+ 92BE 06 00            ld b,0
1269+ 92C0
1270+ 92C0 CD CD 92         call Compara_cositas_H2
1271+ 92C3
1272+ 92C3 04               inc b
1273+ 92C4 05               dec b
1274+ 92C5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92C6
1276+ 92C6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92C7 06 00            ld b,0
1278+ 92C9
1279+ 92C9 CD DF 92         call Compara_cositas_L2
1280+ 92CC C9               ret
1281+ 92CD
1282+ 92CD A7           Compara_cositas_H2 and a
1283+ 92CE 28 0D            jr z,1F
1284+ 92D0              ;    cp $fd
1285+ 92D0              ;    jr z,1F
1286+ 92D0              ;    cp $fe
1287+ 92D0              ;    jr z,1F
1288+ 92D0 FE FF            cp $ff
1289+ 92D2 28 09            jr z,1F
1290+ 92D4 FE 01            cp $01
1291+ 92D6 28 05            jr z,1F
1292+ 92D8 FE 02            cp $02
1293+ 92DA 28 01            jr z,1F
1294+ 92DC C0               ret nz
1295+ 92DD 04           1 inc b
1296+ 92DE C9               ret
1297+ 92DF
1298+ 92DF A7           Compara_cositas_L2 and a
1299+ 92E0 28 0D            jr z,1F
1300+ 92E2              ;    cp $fd
1301+ 92E2              ;    jr z,1F
1302+ 92E2 FE FE            cp $fe
1303+ 92E4 28 09            jr z,1F
1304+ 92E6 FE FF            cp $ff
1305+ 92E8 28 05            jr z,1F
1306+ 92EA FE 01            cp $01
1307+ 92EC 28 01            jr z,1F
1308+ 92EE              ;    cp $02
1309+ 92EE              ;    jr z,1F
1310+ 92EE C0               ret nz
1311+ 92EF 04           1 inc b
1312+ 92F0 C9               ret
1313+ 92F1
1314+ 92F1 A7           Compara_cositas_H1 and a
1315+ 92F2 28 11            jr z,1F
1316+ 92F4              ;    cp $fd
1317+ 92F4              ;    jr z,1F
1318+ 92F4              ;    cp $fe
1319+ 92F4              ;    jr z,1F
1320+ 92F4 FE FF            cp $ff
1321+ 92F6 28 0D            jr z,1F
1322+ 92F8 FE 01            cp $01
1323+ 92FA 28 09            jr z,1F
1324+ 92FC FE 02            cp $02
1325+ 92FE 28 05            jr z,1F
1326+ 9300 FE 03            cp $03
1327+ 9302 28 01            jr z,1F
1328+ 9304 C0               ret nz
1329+ 9305 04           1 inc b
1330+ 9306 C9               ret
1331+ 9307
1332+ 9307 A7           Compara_cositas_L1 and a
1333+ 9308 28 0D            jr z,1F
1334+ 930A              ;    cp $fd
1335+ 930A              ;    jr z,1F
1336+ 930A              ;    cp $fe
1337+ 930A              ;    jr z,1F
1338+ 930A              ;    cp $ff
1339+ 930A              ;    jr z,1F
1340+ 930A FE 01            cp $01
1341+ 930C 28 09            jr z,1F
1342+ 930E FE 02            cp $02
1343+ 9310 28 05            jr z,1F
1344+ 9312 FE 03            cp $03
1345+ 9314 28 01            jr z,1F
1346+ 9316 C0               ret nz
1347+ 9317 04           1 inc b
1348+ 9318 C9               ret
1349+ 9319
1350+ 9319 A7           Compara_cositas_H3 and a
1351+ 931A 28 0D            jr z,1F
1352+ 931C              ;    cp $fd
1353+ 931C              ;    jr z,1F
1354+ 931C FE FE            cp $fe
1355+ 931E 28 09            jr z,1F
1356+ 9320 FE FF            cp $ff
1357+ 9322 28 05            jr z,1F
1358+ 9324 FE 01            cp $01
1359+ 9326 28 01            jr z,1F
1360+ 9328              ;    cp $02
1361+ 9328              ;    jr z,1F
1362+ 9328              ;    cp $03
1363+ 9328              ;    jr z,1F
1364+ 9328 C0               ret nz
1365+ 9329 04           1 inc b
1366+ 932A C9               ret
1367+ 932B
1368+ 932B A7           Compara_cositas_L3 and a
1369+ 932C 28 0D            jr z,1F
1370+ 932E              ;    cp $fd
1371+ 932E              ;    jr z,1F
1372+ 932E              ;    cp $fe
1373+ 932E              ;    jr z,1F
1374+ 932E              ;    cp $ff
1375+ 932E              ;    jr z,1F
1376+ 932E FE 01            cp $01
1377+ 9330 28 09            jr z,1F
1378+ 9332 FE 02            cp $02
1379+ 9334 28 05            jr z,1F
1380+ 9336 FE 03            cp $03
1381+ 9338 28 01            jr z,1F
1382+ 933A C0               ret nz
1383+ 933B 04           1 inc b
1384+ 933C C9               ret
1385+ 933D
1386+ 933D A7           Compara_cositas_H4 and a
1387+ 933E 28 11            jr z,1F
1388+ 9340 FE FD            cp $fd
1389+ 9342 28 0D            jr z,1F
1390+ 9344 FE FE            cp $fe
1391+ 9346 28 09            jr z,1F
1392+ 9348 FE FF            cp $ff
1393+ 934A 28 05            jr z,1F
1394+ 934C FE 01            cp $01
1395+ 934E 28 01            jr z,1F
1396+ 9350              ;    cp $02
1397+ 9350              ;    jr z,1F
1398+ 9350              ;    cp $03
1399+ 9350              ;    jr z,1F
1400+ 9350 C0               ret nz
1401+ 9351 04           1 inc b
1402+ 9352 C9               ret
1403+ 9353
1404+ 9353 A7           Compara_cositas_L4 and a
1405+ 9354 28 0D            jr z,1F
1406+ 9356              ;    cp $fd
1407+ 9356              ;    jr z,1F
1408+ 9356 FE FE            cp $fe
1409+ 9358 28 09            jr z,1F
1410+ 935A FE FF            cp $ff
1411+ 935C 28 05            jr z,1F
1412+ 935E FE 01            cp $01
1413+ 9360 28 01            jr z,1F
1414+ 9362              ;    cp $02
1415+ 9362              ;    jr z,1F
1416+ 9362              ;    cp $03
1417+ 9362              ;    jr z,1F
1418+ 9362 C0               ret nz
1419+ 9363 04           1 inc b
1420+ 9364 C9               ret
# file closed: Disparo.asm
1612  9365              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9365              ; ******************************************************************************************************************************************************************************************
   2+ 9365              ;
   3+ 9365              ; 26/06/23
   4+ 9365              ;
   5+ 9365              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9365
   7+ 9365 CD 49 96     Draw call Prepara_draw
   8+ 9368 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9369 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 936A 28 05        	jr z,2F
  11+ 936C
  12+ 936C 3A D8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 936F 18 0C        	jr 1F
  14+ 9371
  15+ 9371 2A D6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9374 22 C6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9377 CD 06 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 937A              ;													; _la esquina superior izquierda de la pantalla.
  19+ 937A CD AB 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 937D
  21+ 937D 3A EE 88     1 ld a,(Ctrl_0)
  22+ 9380 CB 6F        	bit 5,a
  23+ 9382 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9384
  25+ 9384 CD 9C 93     	call Comprueba_limite_horizontal
  26+ 9387 CD 2C 94     	call Comprueba_limite_vertical
  27+ 938A
  28+ 938A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 938A              ; -----------------------
  30+ 938A              ; -----------------------
  31+ 938A              ; -----------------------
  32+ 938A
  33+ 938A CD 79 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 938D CD B0 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9390 CD 0F 96     	call Define_rutina_de_impresion
  36+ 9393
  37+ 9393 3A EE 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9396 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9398 32 EE 88     	ld (Ctrl_0),a
  40+ 939B
  41+ 939B C9           	ret
  42+ 939C
  43+ 939C              ; *******************************************************************************************************************************************************************************************
  44+ 939C              ;	21/01/23
  45+ 939C              ;
  46+ 939C              ; 	Comprueba_limite_horizontal.
  47+ 939C              ;
  48+ 939C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 939C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 939C              ;
  51+ 939C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 939C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 939C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 939C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 939C
  56+ 939C
  57+ 939C
  58+ 939C 3A EE 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 939F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93A1 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93A3 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93A5 32 EE 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93A8 18 09            jr 6F
  64+ 93AA CB 5F        1 bit 3,a
  65+ 93AC 28 0A            jr z,2F
  66+ 93AE E6 F7            and $f7
  67+ 93B0 32 EE 88         ld (Ctrl_0),a
  68+ 93B3 CD 06 95     6 call Inicializacion
  69+ 93B6 18 5B            jr 5F
  70+ 93B8 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93B9
  72+ 93B9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93B9              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93B9
  75+ 93B9 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93BA 2A FC 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93BD CD 68 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93C0 67           	ld h,a
  79+ 93C1 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93C2 CD 68 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93C5 67           	ld h,a
  82+ 93C6 A7           	and a
  83+ 93C7 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93C9 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93CA 3A D8 88     	ld a,(Cuad_objeto)
  86+ 93CD FE 02        	cp 2
  87+ 93CF 38 1E        	jr c,3F
  88+ 93D1 28 1C        	jr z,3F
  89+ 93D3 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93D4 28 23            jr z,7F
  91+ 93D6 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93D8 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93DA E1           	pop hl
  94+ 93DB
  95+ 93DB              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93DB              ; _para indicar con E="2" en caso necesario.
  97+ 93DB
  98+ 93DB E5               push hl
  99+ 93DC C5               push bc
 100+ 93DD CD 68 99     	call calcula_tercio
 101+ 93E0 FE 01        	cp 1
 102+ 93E2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93E4 CD 14 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93E7 28 26            jr z,9F
 105+ 93E9 38 24            jr c,9F
 106+ 93EB 1E 00        11 ld e,0
 107+ 93ED 18 22            jr 8F
 108+ 93EF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93F0 28 07        	jr z, 7F
 110+ 93F2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93F4 1E 00         	ld e,0
 112+ 93F6 E1           	pop hl
 113+ 93F7 18 04        	jr 4F
 114+ 93F9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93FB 18 15            jr 10F
 116+ 93FD
 117+ 93FD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93FD              ; _para indicar con E="2" en caso necesario.
 119+ 93FD
 120+ 93FD E5           4 push hl
 121+ 93FE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93FF CD 68 99     	call calcula_tercio
 123+ 9402 FE 01        	cp 1
 124+ 9404 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9406 CD 14 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9409 28 04            jr z,9F
 127+ 940B 30 02            jr nc,9F
 128+ 940D 18 02        	jr 8F
 129+ 940F 1E 02        9 ld e,2
 130+ 9411 C1           8 pop bc
 131+ 9412 E1           10 pop hl
 132+ 9413 C9           5 ret
 133+ 9414
 134+ 9414              ; --------------------
 135+ 9414              ;
 136+ 9414              ; 25/08/22
 137+ 9414
 138+ 9414 CD 68 99     Comprueba_centro call calcula_tercio
 139+ 9417 67               ld h,a
 140+ 9418 08           	ex af,af
 141+ 9419 FE 02        	cp 2
 142+ 941B 38 07        	jr c,1F
 143+ 941D 28 05        	jr z,1F
 144+ 941F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9422 18 03        	jr 2F
 146+ 9424 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9427 08           2 ex af,af
 148+ 9428 A7               and a
 149+ 9429 ED 42            sbc hl,bc
 150+ 942B C9               ret
 151+ 942C
 152+ 942C              ; *********************************************************************************************************************************************************************************************
 153+ 942C              ;
 154+ 942C              ;   16/8/22
 155+ 942C              ;
 156+ 942C              ;	Comprueba_limite_vertical
 157+ 942C              ;
 158+ 942C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 942C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 942C              ;
 161+ 942C
 162+ 942C 2A C6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 942F 7D           	ld a,l
 164+ 9430 E6 1F        	and $1F
 165+ 9432 57           	ld d,a
 166+ 9433 3A FE 88     	ld a,(Limite_vertical)
 167+ 9436 BA           	cp d 											; Límite - Posición.
 168+ 9437 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9438 3A D8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 943B CB 47        	bit 0,a
 171+ 943D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 943F
 173+ 943F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 943F
 175+ 943F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9440 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9442
 178+ 9442              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9442              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9442
 181+ 9442 3A CA 88         ld a,(Coordenada_X)
 182+ 9445 16 0F            ld d,Centro_izquierda
 183+ 9447 A7               and a
 184+ 9448 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9449 28 1E            jr z,3F
 186+ 944B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 944D              ;                                                    ; _salimos sin modificar nada.
 188+ 944D 18 0E            jr 2F
 189+ 944F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9450 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9452
 192+ 9452              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9452              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9452
 195+ 9452 3A CA 88         ld a,(Coordenada_X)
 196+ 9455 16 10            ld d,Centro_derecha
 197+ 9457 A7               and a
 198+ 9458 92               sub d
 199+ 9459 28 0E            jr z,3F
 200+ 945B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 945D              ;                                                    ; _salimos sin modificar nada.
 202+ 945D CB 43        2 bit 0,e
 203+ 945F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9461 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9462 CD F6 94         call Modificaccionne
 206+ 9465 C1           	pop bc
 207+ 9466 CD 06 95         call Inicializacion
 208+ 9469 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 946A
 210+ 946A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 946A
 212+ 946A C5           4 push bc
 213+ 946B 01 C5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 946E 0A           	ld a,(bc)
 215+ 946F 3D           	dec a
 216+ 9470 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9471 7D           	ld a,l
 218+ 9472 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9473 CB 47        	bit 0,a
 220+ 9475 28 03        	jr z,5F
 221+ 9477 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9478 18 2E        	jr 7F
 223+ 947A
 224+ 947A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 947A
 226+ 947A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 947B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 947C 3A EE 88     	ld a,(Ctrl_0)
 229+ 947F CB 4F        	bit 1,a
 230+ 9481 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9483 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9484
 233+ 9484              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9484
 235+ 9484 1C               inc e
 236+ 9485 1D               dec e
 237+ 9486 20 07            jr nz,12F
 238+ 9488 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9489 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 948A 22 C6 88     	ld (Posicion_actual),hl
 241+ 948D 18 44        13 jr 9F
 242+ 948F CB 43        12 bit 0,e
 243+ 9491 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9493              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9493 C1           	pop bc
 246+ 9494 18 D3        	jr 3B
 247+ 9496 80           14 add b
 248+ 9497 6F               ld l,a
 249+ 9498 22 C6 88     	ld (Posicion_actual),hl
 250+ 949B CD F6 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 949E 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94A0 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94A2 32 EE 88         ld (Ctrl_0),a
 254+ 94A5 F1           	pop af
 255+ 94A6 18 2B        	jr 9F
 256+ 94A8
 257+ 94A8              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94A8
 259+ 94A8 F5           7 push af
 260+ 94A9 3A EE 88     	ld a,(Ctrl_0)
 261+ 94AC CB 47        	bit 0,a
 262+ 94AE 20 1D        	jr nz,8F
 263+ 94B0 F1           	pop af
 264+ 94B1
 265+ 94B1              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94B1
 267+ 94B1 1C           	inc e
 268+ 94B2 1D               dec e
 269+ 94B3 20 07            jr nz,10F
 270+ 94B5 90           	sub b
 271+ 94B6 6F               ld l,a
 272+ 94B7 22 C6 88     	ld (Posicion_actual),hl
 273+ 94BA 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94BC              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94BC CB 43        10 bit 0,e
 276+ 94BE 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94C0              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94C0 C1           	pop bc
 279+ 94C1 18 A6        	jr 3B
 280+ 94C3 90           16 sub b
 281+ 94C4 6F               ld l,a
 282+ 94C5 22 C6 88     	ld (Posicion_actual),hl
 283+ 94C8 CD F6 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94CB 18 06            jr 9F
 285+ 94CD E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94CF 32 EE 88         ld (Ctrl_0),a
 287+ 94D2 F1           	pop af
 288+ 94D3 C1           9 pop bc
 289+ 94D4 1E 00        	ld e,0
 290+ 94D6 CD 06 95         call Inicializacion
 291+ 94D9 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94DA 08           	ex af,af
 293+ 94DB F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94DC 18 8B            jr 3B
 295+ 94DE
 296+ 94DE              ; --------------------
 297+ 94DE
 298+ 94DE 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94E0 CD 64 96     1 call PreviousScan
 300+ 94E3 10 FB            djnz 1B
 301+ 94E5 22 C6 88     	ld (Posicion_actual),hl
 302+ 94E8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94E9 C9           	ret
 304+ 94EA
 305+ 94EA              ; --------------------
 306+ 94EA
 307+ 94EA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94EC CD 55 96     1 call NextScan
 309+ 94EF 10 FB            djnz 1B
 310+ 94F1 22 C6 88     	ld (Posicion_actual),hl
 311+ 94F4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94F5 C9           	ret
 313+ 94F6
 314+ 94F6              ; --------------------
 315+ 94F6              ;
 316+ 94F6              ;	22/01/23
 317+ 94F6              ;
 318+ 94F6              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94F6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94F6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94F6
 322+ 94F6
 323+ 94F6              Modificaccionne
 324+ 94F6
 325+ 94F6 3A D8 88     	ld a,(Cuad_objeto)
 326+ 94F9 FE 02        	cp 2
 327+ 94FB CC DE 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94FE DC DE 94         call c,Modifica_Pos_actual
 329+ 9501 C8           	ret z
 330+ 9502 CD EA 94         call Modifica_Pos_actual2
 331+ 9505 C9               ret
 332+ 9506
 333+ 9506              ; *************************************************************************************************************************************************************************************************
 334+ 9506              ;
 335+ 9506              ;	13/8/22
 336+ 9506              ;
 337+ 9506              ;	Inicializacion
 338+ 9506              ;
 339+ 9506              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9506              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9506              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9506              ;
 343+ 9506              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9506              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9506              ;	_ desaparece/aparece.
 346+ 9506
 347+ 9506              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9506              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9506              ;
 350+ 9506              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9506              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9506              ; 		   [E] ="0"
 353+ 9506
 354+ 9506              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9506
 356+ 9506 CD 68 99     Inicializacion call calcula_tercio
 357+ 9509 28 36        	jr z,primit
 358+ 950B E6 02        	and 2
 359+ 950D 20 07        	jr nz,segmit
 360+ 950F 7D           	ld a,l
 361+ 9510 FE 7F        	cp $7f
 362+ 9512 38 2D        	jr c,primit
 363+ 9514 28 2B        	jr z,primit
 364+ 9516 CD 73 95     segmit call column
 365+ 9519 38 13        	jr c,tercuad
 366+ 951B 3E 04        cuarcuad ld a,4
 367+ 951D 32 D8 88     	ld (Cuad_objeto),a
 368+ 9520 21 20 48     	ld hl,$4820
 369+ 9523 22 FC 88     	ld (Limite_horizontal),hl
 370+ 9526 21 FE 88     	ld hl,Limite_vertical
 371+ 9529 36 0D        	ld (hl),$0d
 372+ 952B 08           	ex af,af
 373+ 952C 18 3C        	jr 1F
 374+ 952E              tercuad
 375+ 952E 3E 03        	ld a,3
 376+ 9530 32 D8 88     	ld (Cuad_objeto),a
 377+ 9533 21 20 48     	ld hl,$4820
 378+ 9536 22 FC 88     	ld (Limite_horizontal),hl
 379+ 9539 21 FE 88     	ld hl,Limite_vertical
 380+ 953C 36 12        	ld (hl),$12
 381+ 953E 08           	ex af,af
 382+ 953F 18 29        	jr 1F
 383+ 9541 CD 73 95     primit call column
 384+ 9544 38 13        	jr c, primcuad
 385+ 9546              segcuad
 386+ 9546 3E 02        	ld a,2
 387+ 9548 32 D8 88     	ld (Cuad_objeto),a
 388+ 954B 21 C0 4F     	ld hl,$4fc0
 389+ 954E 22 FC 88     	ld (Limite_horizontal),hl
 390+ 9551 21 FE 88     	ld hl,Limite_vertical
 391+ 9554 36 0D        	ld (hl),$0d
 392+ 9556 08           	ex af,af
 393+ 9557 18 11        	jr 1F
 394+ 9559              primcuad
 395+ 9559 3E 01        	ld a,1
 396+ 955B 32 D8 88     	ld (Cuad_objeto),a
 397+ 955E 21 C0 4F     	ld hl,$4fc0
 398+ 9561 22 FC 88     	ld (Limite_horizontal),hl
 399+ 9564 21 FE 88     	ld hl,Limite_vertical
 400+ 9567 36 12        	ld (hl),$12
 401+ 9569 08           	ex af,af
 402+ 956A CD F3 9C     1 call Genera_coordenadas
 403+ 956D 21 EE 88     	ld hl,Ctrl_0
 404+ 9570 CB EE        	set 5,(hl)
 405+ 9572 C9           	ret
 406+ 9573
 407+ 9573              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9573
 409+ 9573              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9573              ;
 411+ 9573              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9573
 413+ 9573 7D           column ld a,l
 414+ 9574 E6 1F        	and $1f
 415+ 9576 FE 10         	cp $10
 416+ 9578 C9            	ret
 417+ 9579
 418+ 9579              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9579              ;
 420+ 9579              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9579              ;
 422+ 9579              ; 14/12/22
 423+ 9579              ;
 424+ 9579              ;	Modifica: A y BC.
 425+ 9579
 426+ 9579 3A D8 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 957C E6 01        	and 1
 428+ 957E 28 17        	jr z,1F
 429+ 9580
 430+ 9580              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9580
 432+ 9580 3A CA 88     	ld a,(Coordenada_X)
 433+ 9583 47           	ld b,a
 434+ 9584 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9585 79           	ld a,c
 436+ 9586 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9587 38 08        	jr c,2F
 438+ 9589 47           	ld b,a
 439+ 958A 79           	ld a,c
 440+ 958B 90           	sub b
 441+ 958C 32 FB 88     	ld (Columnas),a
 442+ 958F 18 1B        	jr 4F
 443+ 9591 79           2 ld a,c
 444+ 9592 32 FB 88     	ld (Columnas),a
 445+ 9595 18 15        	jr 4F
 446+ 9597
 447+ 9597              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9597
 449+ 9597 3A CA 88     1 ld a,(Coordenada_X)
 450+ 959A 81           	add c
 451+ 959B 3D           	dec a
 452+ 959C D6 1F        	sub $1f
 453+ 959E 38 08        	jr c,3F
 454+ 95A0 47           	ld b,a
 455+ 95A1 79           	ld a,c
 456+ 95A2 90           	sub b
 457+ 95A3 32 FB 88     	ld (Columnas),a
 458+ 95A6 18 04        	jr 4F
 459+ 95A8 79           3 ld a,c
 460+ 95A9 32 FB 88     	ld (Columnas),a
 461+ 95AC D9           4 exx
 462+ 95AD 4F           	ld c,a
 463+ 95AE D9           	exx
 464+ 95AF C9            ret
 465+ 95B0
 466+ 95B0              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95B0              ;
 468+ 95B0              ;   19/7/23
 469+ 95B0              ;
 470+ 95B0              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95B0              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95B0              ;
 473+ 95B0              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95B0              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95B0              ;
 476+ 95B0              ;	DESTRUYE: HL,B Y A.
 477+ 95B0
 478+ 95B0 3A D8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95B3 FE 02        	cp 2
 480+ 95B5 38 18        	jr c,1F
 481+ 95B7 28 16        	jr z,1F
 482+ 95B9 E6 01        	and 1
 483+ 95BB 28 0D        	jr z,3F
 484+ 95BD
 485+ 95BD              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95BD
 487+ 95BD CD 03 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95C0
 489+ 95C0 7D           9 ld a,l
 490+ 95C1 E6 1F        	and $1f
 491+ 95C3 28 2A        	jr z,7F
 492+ 95C5 2B           	dec hl
 493+ 95C6 10 F8        	djnz 9B
 494+ 95C8 18 25        	jr 7F
 495+ 95CA
 496+ 95CA              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95CA
 498+ 95CA 2A C6 88     3 ld hl,(Posicion_actual)
 499+ 95CD 18 20        	jr 7F
 500+ 95CF
 501+ 95CF 28 14        1 jr z,2F
 502+ 95D1
 503+ 95D1              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95D1
 505+ 95D1 CD 03 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95D4
 507+ 95D4 7D           4 ld a,l
 508+ 95D5 E6 1F        	and $1f
 509+ 95D7 28 03        	jr z,6F
 510+ 95D9 2B           	dec hl
 511+ 95DA 10 F8        	djnz 4B
 512+ 95DC 06 0F        6 ld b,15
 513+ 95DE CD 64 96     5 call PreviousScan
 514+ 95E1 10 FB        	djnz 5B
 515+ 95E3 18 0A        	jr 7F
 516+ 95E5
 517+ 95E5              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95E5
 519+ 95E5 CD 03 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95E8 06 0F        	ld b,15
 521+ 95EA CD 64 96     8 call PreviousScan
 522+ 95ED 10 FB        	djnz 8B
 523+ 95EF
 524+ 95EF E5           7 push hl
 525+ 95F0 DD E1        	pop ix
 526+ 95F2
 527+ 95F2 2A C8 88     	ld hl,(Puntero_objeto)
 528+ 95F5 E5           	push hl
 529+ 95F6 FD E1        	pop iy
 530+ 95F8
 531+ 95F8              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95F8
 533+ 95F8 3A EE 88     	ld a,(Ctrl_0)
 534+ 95FB CB 77        	bit 6,a
 535+ 95FD C8           	ret z
 536+ 95FE
 537+ 95FE              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95FE              ; _ entidad / Amadeus´.
 539+ 95FE
 540+ 95FE DD 22 4A 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9602
 542+ 9602 C9           	ret
 543+ 9603
 544+ 9603              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9603              ;
 546+ 9603              ;	2/1/23
 547+ 9603              ;
 548+ 9603              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9603              ;
 550+ 9603              ;	Tras esta rutina tenemos:
 551+ 9603              ;
 552+ 9603              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9603              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9603              ;
 555+ 9603              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9603
 557+ 9603 2A C6 88     Operandos ld hl,(Posicion_actual)
 558+ 9606 3A FB 88     	ld a,(Columnas)
 559+ 9609 3D           	dec a
 560+ 960A 20 01        	jr nz,1F
 561+ 960C 3C           	inc a
 562+ 960D 47           1 ld b,a
 563+ 960E C9           	ret
 564+ 960F
 565+ 960F              ; --------------------------------------------------------------------------------------------------------------------
 566+ 960F              ;
 567+ 960F              ;	3/1/23
 568+ 960F              ;
 569+ 960F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 960F              ;
 571+ 960F              ;	Destruye: A,B,HL y DE.
 572+ 960F
 573+ 960F              Define_rutina_de_impresion
 574+ 960F
 575+ 960F 3A C5 88     	ld a,(Columns)
 576+ 9612 47           	ld b,a
 577+ 9613 3A FB 88     	ld a,(Columnas)
 578+ 9616 B8           	cp b
 579+ 9617 20 0D        	jr nz,2f
 580+ 9619
 581+ 9619              ;	La entidad se imprime entera.
 582+ 9619
 583+ 9619 21 38 97     	ld hl, Indice_entidades_completas
 584+ 961C E6 01        	and 1
 585+ 961E 28 02        	jr z,1F
 586+ 9620
 587+ 9620 23           	inc hl
 588+ 9621 23           	inc hl
 589+ 9622
 590+ 9622 CD 93 8C     1 call Extrae_address
 591+ 9625 C9           	ret		;	ret
 592+ 9626
 593+ 9626              ;	La entidad no se imprime entera en pantalla.
 594+ 9626
 595+ 9626 3A D8 88     2 ld a,(Cuad_objeto)
 596+ 9629 E6 01        	and 1
 597+ 962B 28 17        	jr z,3F
 598+ 962D
 599+ 962D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 962D
 601+ 962D 21 3C 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9630 3A C5 88     4 ld a,(Columns)
 603+ 9633 E6 01        	and 1
 604+ 9635 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9637
 606+ 9637 23           	inc hl
 607+ 9638 23           	inc hl
 608+ 9639
 609+ 9639 3A FB 88     	ld a,(Columnas)
 610+ 963C E6 01        	and 1
 611+ 963E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9640
 613+ 9640 23           	inc hl
 614+ 9641 23           	inc hl
 615+ 9642
 616+ 9642 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9644
 618+ 9644 21 42 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9647 18 E7        	jr 4B
 620+ 9649
 621+ 9649              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9649              ;
 623+ 9649              ;	Prepara_draw
 624+ 9649              ;
 625+ 9649              ;	Es una rutina de carga.
 626+ 9649              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9649              ;
 628+ 9649              ;	FUNCIONAMIENTO:
 629+ 9649              ;
 630+ 9649              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9649              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9649              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9649              ;
 634+ 9649              ;	DESTRUYE:
 635+ 9649              ;
 636+ 9649              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9649
 638+ 9649 21 C4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 964C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 964D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 964E 4E           	ld c,(hl)
 642+ 964F 2A C6 88     	ld hl,(Posicion_actual)
 643+ 9652 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9654 C9           	ret
 645+ 9655
 646+ 9655              ;----------------------------------------------------------------------------------------------------------------
 647+ 9655              ;
 648+ 9655              ;	5/08/22
 649+ 9655              ;
 650+ 9655              ;   NextScan.
 651+ 9655              ;
 652+ 9655              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9655              ;
 654+ 9655              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9655              ;
 656+ 9655              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9655              ;
 658+ 9655              ;       DESTRUIDOS: AF y HL !!!
 659+ 9655              ;
 660+ 9655              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9655              ;
 662+ 9655
 663+ 9655 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9656 7C               ld a,h
 665+ 9657 E6 07            and 7
 666+ 9659 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 965A
 668+ 965A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 965B C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 965D 6F               ld l,a
 671+ 965E D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 965F
 673+ 965F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9660 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9662 67               ld h,a
 676+ 9663 C9               ret
 677+ 9664
 678+ 9664              ;----------------------------------------------------------------------------------------------------------------
 679+ 9664              ;
 680+ 9664              ;	5/08/22
 681+ 9664              ;
 682+ 9664              ;   PreviousScan.
 683+ 9664              ;
 684+ 9664              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9664              ;
 686+ 9664              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9664              ;
 688+ 9664              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9664              ;
 690+ 9664              ;       DESTRUIDOS: AF y HL !!!
 691+ 9664              ;
 692+ 9664              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9664              ;
 694+ 9664
 695+ 9664 7C           PreviousScan ld a,h
 696+ 9665 25               dec h               ; Dec H.
 697+ 9666 E6 07            and 7
 698+ 9668 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9669
 700+ 9669 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 966A D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 966C 6F               ld l,a
 703+ 966D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 966E
 705+ 966E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 966F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9671 67               ld h,a
 708+ 9672 C9               ret
 709+ 9673
 710+ 9673              ; -----------------------------------------------------------------------------------
 711+ 9673              ;
 712+ 9673              ;	31/7/23
 713+ 9673              ;
 714+ 9673              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9673              ;	Extrae fotos de Album_de_fotos.
 716+ 9673
 717+ 9673              Extrae_foto_entidades
 718+ 9673
 719+ 9673 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9676 7E           	ld a,(hl)
 721+ 9677 A7           	and a
 722+ 9678 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9679
 724+ 9679 3A 0D 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 967C A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 967D C8           	ret z
 727+ 967E
 728+ 967E              ; -----------------------------------
 729+ 967E
 730+ 967E ED 73 12 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9682 31 00 70     	ld sp,Album_de_fotos
 732+ 9685
 733+ 9685 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9687 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9688 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9689
 737+ 9689 ED 73 14 89  	ld (Stack_2),sp
 738+ 968D ED 7B 12 89  	ld sp,(Stack)
 739+ 9691
 740+ 9691              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9691
 742+ 9691 3E CD        	ld a,$cd
 743+ 9693 32 9B 96     	ld (Imprime),a
 744+ 9696 EB           	ex de,hl
 745+ 9697 22 9C 96     	ld (Imprime+1),hl
 746+ 969A EB           	ex de,hl
 747+ 969B
 748+ 969B              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 969B
 750+ 969B 00 00 00     Imprime db 0,0,0
 751+ 969E
 752+ 969E ED 73 12 89  	ld (Stack),sp
 753+ 96A2
 754+ 96A2 3A 0D 89     	ld a,(Numero_de_malotes)
 755+ 96A5 3D           	dec a
 756+ 96A6 28 09        	jr z,1F
 757+ 96A8 32 0D 89      	ld (Numero_de_malotes),a
 758+ 96AB
 759+ 96AB ED 7B 14 89  	ld sp,(Stack_2)
 760+ 96AF 18 D4        	jr 2B
 761+ 96B1
 762+ 96B1 AF           1 xor a
 763+ 96B2 32 14 89     	ld (Stack_2),a
 764+ 96B5
 765+ 96B5 C9           	ret
 766+ 96B6
 767+ 96B6              ; -----------------------------------------------------------------------------------
 768+ 96B6              ;
 769+ 96B6              ;	28/2/23
 770+ 96B6              ;
 771+ 96B6              ;	Pinta los disparos generados.
 772+ 96B6
 773+ 96B6              Extrae_foto_disparos
 774+ 96B6
 775+ 96B6 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96B9 7E               ld a,(hl)
 777+ 96BA A7               and a
 778+ 96BB C8               ret z
 779+ 96BC
 780+ 96BC 3A 3A 89     	ld a,(Numero_de_disparotes)
 781+ 96BF A7           	and a
 782+ 96C0 C8           	ret z
 783+ 96C1 ED 73 12 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96C5 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96C8
 786+ 96C8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96CA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96CB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96CC
 790+ 96CC ED 73 14 89  	ld (Stack_2),sp
 791+ 96D0 ED 7B 12 89  	ld sp,(Stack)
 792+ 96D4
 793+ 96D4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96D4
 795+ 96D4 3E CD        	ld a,$cd
 796+ 96D6 32 DE 96     	ld (Imprime2),a
 797+ 96D9 EB           	ex de,hl
 798+ 96DA 22 DF 96     	ld (Imprime2+1),hl
 799+ 96DD EB           	ex de,hl
 800+ 96DE
 801+ 96DE              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96DE
 803+ 96DE 00 00 00     Imprime2 db 0,0,0
 804+ 96E1
 805+ 96E1 3A 3A 89     	ld a,(Numero_de_disparotes)
 806+ 96E4 3D           	dec a
 807+ 96E5 28 09        	jr z,1F
 808+ 96E7 32 3A 89      	ld (Numero_de_disparotes),a
 809+ 96EA
 810+ 96EA ED 7B 14 89  	ld sp,(Stack_2)
 811+ 96EE 18 D8        	jr 2B
 812+ 96F0
 813+ 96F0 AF           1 xor a
 814+ 96F1 32 14 89     	ld (Stack_2),a
 815+ 96F4 C9           	ret
 816+ 96F5
 817+ 96F5              ; -----------------------------------------------------------------------------------
 818+ 96F5              ;
 819+ 96F5              ;	4/9/23
 820+ 96F5              ;
 821+ 96F5              ;	Rutina principal de pintado de Amadeus.
 822+ 96F5              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 96F5
 824+ 96F5 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 96F8 7E           	ld a,(hl)
 826+ 96F9 A7           	and a
 827+ 96FA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 96FB
 829+ 96FB 3A 0D 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 96FE A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 96FF C8           	ret z
 832+ 9700
 833+ 9700              ; -----------------------------------
 834+ 9700
 835+ 9700 ED 73 12 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 9704 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9707
 838+ 9707 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9709 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 970A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 970B
 842+ 970B ED 73 14 89  	ld (Stack_2),sp
 843+ 970F ED 7B 12 89  	ld sp,(Stack)
 844+ 9713
 845+ 9713              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 9713
 847+ 9713 3E CD        	ld a,$cd
 848+ 9715 32 1D 97     	ld (Imprime_Amadeus),a
 849+ 9718 EB           	ex de,hl
 850+ 9719 22 1E 97     	ld (Imprime_Amadeus+1),hl
 851+ 971C EB           	ex de,hl
 852+ 971D
 853+ 971D              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 971D
 855+ 971D 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9720
 857+ 9720 ED 73 12 89  	ld (Stack),sp
 858+ 9724
 859+ 9724 3A 0D 89     	ld a,(Numero_de_malotes)
 860+ 9727 3D           	dec a
 861+ 9728 28 09        	jr z,1F
 862+ 972A 32 0D 89      	ld (Numero_de_malotes),a
 863+ 972D
 864+ 972D ED 7B 14 89  	ld sp,(Stack_2)
 865+ 9731 18 D4        	jr 2B
 866+ 9733
 867+ 9733 AF           1 xor a
 868+ 9734 32 14 89     	ld (Stack_2),a
 869+ 9737
 870+ 9737 C9           	ret
# file closed: Draw_XOR.asm
1613  9738              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9738              ;   índices de Rutinas de impresión.
   2+ 9738
   3+ 9738 48 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 973A 75 97            defw Pinta_Amadeus_3x2
   5+ 973C
   6+ 973C CB 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 973E 6B 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9740 1F 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9742
  10+ 9742 F5 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9744 F9 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9746 AD 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9748
  14+ 9748
  15+ 9748              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9748              ;
  17+ 9748              ;   12/12/22
  18+ 9748              ;
  19+ 9748              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9748              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9748              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9748              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9748              ;
  24+ 9748              ;   Modifica: DE y HL.
  25+ 9748
  26+ 9748 ED 73 12 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 974C FD F9        	ld sp,iy
  28+ 974E 06 10            ld b,16
  29+ 9750 D1           1 pop de
  30+ 9751 7B               ld a,e
  31+ 9752 AE               xor (hl)
  32+ 9753 77           	ld (hl),a
  33+ 9754 23           	inc hl
  34+ 9755 7A               ld a,d
  35+ 9756 AE               xor (hl)
  36+ 9757 77           	ld (hl),a
  37+ 9758 2B           	dec hl
  38+ 9759 24           	inc h
  39+ 975A 7C               ld a,h
  40+ 975B E6 07            and 7
  41+ 975D 20 0A            jr nz,2F
  42+ 975F 7D               ld a,l
  43+ 9760 C6 20            add a,$20
  44+ 9762 6F               ld l,a
  45+ 9763 38 04            jr c,2F
  46+ 9765 7C               ld a,h
  47+ 9766 D6 08            sub 8
  48+ 9768 67               ld h,a
  49+ 9769 7C           2 ld a,h
  50+ 976A FE 58            cp $58
  51+ 976C 28 02            jr z,3F
  52+ 976E 10 E0            djnz 1B
  53+ 9770 ED 7B 12 89  3 ld sp,(Stack)
  54+ 9774 C9           	ret
  55+ 9775
  56+ 9775 ED 73 12 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9779 FD F9        	ld sp,iy
  58+ 977B 06 08            ld b,8
  59+ 977D D1           1 pop de
  60+ 977E 7B               ld a,e
  61+ 977F AE               xor (hl)
  62+ 9780 77           	ld (hl),a
  63+ 9781 23           	inc hl
  64+ 9782 7A               ld a,d
  65+ 9783 AE               xor (hl)
  66+ 9784 77           	ld (hl),a
  67+ 9785 23           	inc hl
  68+ 9786 D1           	pop de
  69+ 9787 7B               ld a,e
  70+ 9788 AE               xor (hl)
  71+ 9789 77           	ld (hl),a
  72+ 978A 2B           	dec hl
  73+ 978B 2B           	dec hl
  74+ 978C 24           	inc h
  75+ 978D 7C               ld a,h
  76+ 978E E6 07            and 7
  77+ 9790 20 0A            jr nz,2F
  78+ 9792 7D               ld a,l
  79+ 9793 C6 20            add a,$20
  80+ 9795 6F               ld l,a
  81+ 9796 38 04            jr c,2F
  82+ 9798 7C               ld a,h
  83+ 9799 D6 08            sub 8
  84+ 979B 67               ld h,a
  85+ 979C 7C           2 ld a,h
  86+ 979D FE 58            cp $58
  87+ 979F 28 25            jr z,4F
  88+ 97A1 7A               ld a,d
  89+ 97A2 AE               xor (hl)
  90+ 97A3 77               ld (hl),a
  91+ 97A4 D1           	pop de
  92+ 97A5 23           	inc hl
  93+ 97A6 7B               ld a,e
  94+ 97A7 AE               xor (hl)
  95+ 97A8 77           	ld (hl),a
  96+ 97A9 23           	inc hl
  97+ 97AA 7A               ld a,d
  98+ 97AB AE               xor (hl)
  99+ 97AC 77           	ld (hl),a
 100+ 97AD 2B           	dec hl
 101+ 97AE 2B           	dec hl
 102+ 97AF 24           	inc h
 103+ 97B0 7C               ld a,h
 104+ 97B1 E6 07            and 7
 105+ 97B3 20 0A            jr nz,3F
 106+ 97B5 7D               ld a,l
 107+ 97B6 C6 20            add a,$20
 108+ 97B8 6F               ld l,a
 109+ 97B9 38 04            jr c,3F
 110+ 97BB 7C               ld a,h
 111+ 97BC D6 08            sub 8
 112+ 97BE 67               ld h,a
 113+ 97BF 7C           3 ld a,h
 114+ 97C0 FE 58            cp $58
 115+ 97C2 28 02            jr z,4F
 116+ 97C4 10 B7            djnz 1B
 117+ 97C6 ED 7B 12 89  4 ld sp,(Stack)
 118+ 97CA C9           	ret
 119+ 97CB
 120+ 97CB              ; ---------------------------------------------------
 121+ 97CB
 122+ 97CB ED 73 12 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97CF FD F9        	ld sp,iy
 124+ 97D1
 125+ 97D1              ; >>>
 126+ 97D1
 127+ 97D1 06 10            ld b,16
 128+ 97D3 D1           1 pop de
 129+ 97D4 7A           	ld a,d
 130+ 97D5 AE           	xor (hl)
 131+ 97D6 77           	ld (hl),a
 132+ 97D7 24           	inc h
 133+ 97D8 7C               ld a,h
 134+ 97D9 E6 07            and 7
 135+ 97DB 20 0C            jr nz,2F
 136+ 97DD 7D               ld a,l
 137+ 97DE C6 20            add a,$20
 138+ 97E0 6F               ld l,a
 139+ 97E1 38 06            jr c,2F
 140+ 97E3 7C               ld a,h
 141+ 97E4 D6 08            sub 8
 142+ 97E6 67               ld h,a
 143+ 97E7 18 00            jr 2F
 144+ 97E9 7C           2 ld a,h
 145+ 97EA FE 58            cp $58
 146+ 97EC 28 02            jr z,3F
 147+ 97EE 10 E3            djnz 1B
 148+ 97F0 ED 7B 12 89  3 ld sp,(Stack)
 149+ 97F4 C9           	ret
 150+ 97F5
 151+ 97F5 ED 73 12 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97F9 FD F9        	ld sp,iy
 153+ 97FB
 154+ 97FB              ; >>>
 155+ 97FB
 156+ 97FB 06 10            ld b,16
 157+ 97FD D1           1 pop de
 158+ 97FE 7B           	ld a,e
 159+ 97FF AE           	xor (hl)
 160+ 9800 77           	ld (hl),a
 161+ 9801 24           	inc h
 162+ 9802 7C               ld a,h
 163+ 9803 E6 07            and 7
 164+ 9805 20 0C            jr nz,2F
 165+ 9807 7D               ld a,l
 166+ 9808 C6 20            add a,$20
 167+ 980A 6F               ld l,a
 168+ 980B 38 06            jr c,2F
 169+ 980D 7C               ld a,h
 170+ 980E D6 08            sub 8
 171+ 9810 67               ld h,a
 172+ 9811 18 00            jr 2F
 173+ 9813 7C           2 ld a,h
 174+ 9814 FE 58            cp $58
 175+ 9816 28 02            jr z,3F
 176+ 9818 10 E3            djnz 1B
 177+ 981A ED 7B 12 89  3 ld sp,(Stack)
 178+ 981E C9           	ret
 179+ 981F
 180+ 981F              ; ---------------------------------------------------
 181+ 981F
 182+ 981F ED 73 12 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9823 FD F9        	ld sp,iy
 184+ 9825 06 08            ld b,8
 185+ 9827 D1           1 pop de
 186+ 9828 7A           	ld a,d
 187+ 9829 AE           	xor (hl)
 188+ 982A 77           	ld (hl),a
 189+ 982B 23           	inc hl
 190+ 982C D1           	pop de
 191+ 982D 7B           	ld a,e
 192+ 982E AE           	xor (hl)
 193+ 982F 77           	ld (hl),a
 194+ 9830 2B           	dec hl
 195+ 9831 24            	inc h
 196+ 9832 7C               ld a,h
 197+ 9833 E6 07            and 7
 198+ 9835 20 0A            jr nz,2F
 199+ 9837 7D               ld a,l
 200+ 9838 C6 20            add a,$20
 201+ 983A 6F               ld l,a
 202+ 983B 38 04            jr c,2F
 203+ 983D 7C               ld a,h
 204+ 983E D6 08            sub 8
 205+ 9840 67               ld h,a
 206+ 9841 7C           2 ld a,h
 207+ 9842 FE 58            cp $58
 208+ 9844 28 20            jr z,4F
 209+ 9846 D1               pop de
 210+ 9847 7B           	ld a,e
 211+ 9848 AE           	xor (hl)
 212+ 9849 77           	ld (hl),a
 213+ 984A 23           	inc hl
 214+ 984B 7A           	ld a,d
 215+ 984C AE           	xor (hl)
 216+ 984D 77           	ld (hl),a
 217+ 984E 2B           	dec hl
 218+ 984F 24           	inc h
 219+ 9850 7C               ld a,h
 220+ 9851 E6 07            and 7
 221+ 9853 20 0A            jr nz,3F
 222+ 9855 7D               ld a,l
 223+ 9856 C6 20            add a,$20
 224+ 9858 6F               ld l,a
 225+ 9859 38 04            jr c,3F
 226+ 985B 7C               ld a,h
 227+ 985C D6 08            sub 8
 228+ 985E 67               ld h,a
 229+ 985F 7C           3 ld a,h
 230+ 9860 FE 58            cp $58
 231+ 9862 28 02            jr z,4F
 232+ 9864 10 C1            djnz 1B
 233+ 9866 ED 7B 12 89  4 ld sp,(Stack)
 234+ 986A C9           	ret
 235+ 986B
 236+ 986B ED 73 12 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 986F FD F9        	ld sp,iy
 238+ 9871 06 08            ld b,8
 239+ 9873 D1           1 pop de
 240+ 9874 D1           	pop de
 241+ 9875 7B           	ld a,e
 242+ 9876 AE           	xor (hl)
 243+ 9877 77           	ld (hl),a
 244+ 9878 24            	inc h
 245+ 9879 7C               ld a,h
 246+ 987A E6 07            and 7
 247+ 987C 20 0A            jr nz,2F
 248+ 987E 7D               ld a,l
 249+ 987F C6 20            add a,$20
 250+ 9881 6F               ld l,a
 251+ 9882 38 04            jr c,2F
 252+ 9884 7C               ld a,h
 253+ 9885 D6 08            sub 8
 254+ 9887 67               ld h,a
 255+ 9888 7C           2 ld a,h
 256+ 9889 FE 58            cp $58
 257+ 988B 28 1B            jr z,4F
 258+ 988D D1               pop de
 259+ 988E 7A           	ld a,d
 260+ 988F AE           	xor (hl)
 261+ 9890 77           	ld (hl),a
 262+ 9891 24           	inc h
 263+ 9892 7C               ld a,h
 264+ 9893 E6 07            and 7
 265+ 9895 20 0A            jr nz,3F
 266+ 9897 7D               ld a,l
 267+ 9898 C6 20            add a,$20
 268+ 989A 6F               ld l,a
 269+ 989B 38 04            jr c,3F
 270+ 989D 7C               ld a,h
 271+ 989E D6 08            sub 8
 272+ 98A0 67               ld h,a
 273+ 98A1 7C           3 ld a,h
 274+ 98A2 FE 58            cp $58
 275+ 98A4 28 02            jr z,4F
 276+ 98A6 10 CB            djnz 1B
 277+ 98A8 ED 7B 12 89  4 ld sp,(Stack)
 278+ 98AC C9           	ret
 279+ 98AD
 280+ 98AD ED 73 12 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98B1 FD F9        	ld sp,iy
 282+ 98B3 06 08            ld b,8
 283+ 98B5 D1           1 pop de
 284+ 98B6 7B           	ld a,e
 285+ 98B7 AE           	xor (hl)
 286+ 98B8 77           	ld (hl),a
 287+ 98B9 23           	inc hl
 288+ 98BA 7A           	ld a,d
 289+ 98BB AE           	xor (hl)
 290+ 98BC 77           	ld (hl),a
 291+ 98BD 2B           	dec hl
 292+ 98BE 24             	inc h
 293+ 98BF 7C               ld a,h
 294+ 98C0 E6 07            and 7
 295+ 98C2 20 0A            jr nz,2F
 296+ 98C4 7D               ld a,l
 297+ 98C5 C6 20            add a,$20
 298+ 98C7 6F               ld l,a
 299+ 98C8 38 04            jr c,2F
 300+ 98CA 7C               ld a,h
 301+ 98CB D6 08            sub 8
 302+ 98CD 67               ld h,a
 303+ 98CE 7C           2 ld a,h
 304+ 98CF FE 58            cp $58
 305+ 98D1 28 21            jr z,4F
 306+ 98D3 D1               pop de
 307+ 98D4 7A           	ld a,d
 308+ 98D5 AE           	xor (hl)
 309+ 98D6 77           	ld (hl),a
 310+ 98D7 23           	inc hl
 311+ 98D8 D1               pop de
 312+ 98D9 7B           	ld a,e
 313+ 98DA AE           	xor (hl)
 314+ 98DB 77           	ld (hl),a
 315+ 98DC 2B           	dec hl
 316+ 98DD 24           	inc h
 317+ 98DE 7C               ld a,h
 318+ 98DF E6 07            and 7
 319+ 98E1 20 0A            jr nz,3F
 320+ 98E3 7D               ld a,l
 321+ 98E4 C6 20            add a,$20
 322+ 98E6 6F               ld l,a
 323+ 98E7 38 04            jr c,3F
 324+ 98E9 7C               ld a,h
 325+ 98EA D6 08            sub 8
 326+ 98EC 67               ld h,a
 327+ 98ED 7C           3 ld a,h
 328+ 98EE FE 58            cp $58
 329+ 98F0 28 02            jr z,4F
 330+ 98F2 10 C1            djnz 1B
 331+ 98F4 ED 7B 12 89  4 ld sp,(Stack)
 332+ 98F8 C9           	ret
 333+ 98F9
 334+ 98F9 ED 73 12 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98FD FD F9        	ld sp,iy
 336+ 98FF 06 08            ld b,8
 337+ 9901 D1           1 pop de
 338+ 9902 7B           	ld a,e
 339+ 9903 AE           	xor (hl)
 340+ 9904 77           	ld (hl),a
 341+ 9905 24            	inc h
 342+ 9906 7C               ld a,h
 343+ 9907 E6 07            and 7
 344+ 9909 20 0A            jr nz,2F
 345+ 990B 7D               ld a,l
 346+ 990C C6 20            add a,$20
 347+ 990E 6F               ld l,a
 348+ 990F 38 04            jr c,2F
 349+ 9911 7C               ld a,h
 350+ 9912 D6 08            sub 8
 351+ 9914 67               ld h,a
 352+ 9915 7C           2 ld a,h
 353+ 9916 FE 58            cp $58
 354+ 9918 28 1C            jr z,4F
 355+ 991A D1               pop de
 356+ 991B 7A           	ld a,d
 357+ 991C AE           	xor (hl)
 358+ 991D 77           	ld (hl),a
 359+ 991E 24           	inc h
 360+ 991F 7C               ld a,h
 361+ 9920 E6 07            and 7
 362+ 9922 20 0A            jr nz,3F
 363+ 9924 7D               ld a,l
 364+ 9925 C6 20            add a,$20
 365+ 9927 6F               ld l,a
 366+ 9928 38 04            jr c,3F
 367+ 992A 7C               ld a,h
 368+ 992B D6 08            sub 8
 369+ 992D 67               ld h,a
 370+ 992E 7C           3 ld a,h
 371+ 992F FE 58            cp $58
 372+ 9931 28 03            jr z,4F
 373+ 9933 D1               pop de
 374+ 9934 10 CB            djnz 1B
 375+ 9936 ED 7B 12 89  4 ld sp,(Stack)
 376+ 993A C9           	ret
 377+ 993B
 378+ 993B              ; ---------------------------------------------------
 379+ 993B              ;
 380+ 993B              ;   27/02/23
 381+ 993B              ;
 382+ 993B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 993B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 993B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 993B
 386+ 993B ED 73 12 89  Pinta_Disparo ld (Stack),sp
 387+ 993F FD F9            ld sp,iy
 388+ 9941 06 03            ld b,3
 389+ 9943 D1           1 pop de
 390+ 9944 7B               ld a,e
 391+ 9945 AE               xor (hl)
 392+ 9946 77               ld (hl),a
 393+ 9947 23               inc hl
 394+ 9948 7A               ld a,d
 395+ 9949 AE               xor (hl)
 396+ 994A 77               ld (hl),a
 397+ 994B 2B               dec hl
 398+ 994C
 399+ 994C 24               inc h
 400+ 994D 7C               ld a,h
 401+ 994E E6 07            and 7
 402+ 9950 20 0A            jr nz,2F
 403+ 9952 7D               ld a,l
 404+ 9953 C6 20            add a,$20
 405+ 9955 6F               ld l,a
 406+ 9956 38 04            jr c,2F
 407+ 9958 7C               ld a,h
 408+ 9959 D6 08            sub 8
 409+ 995B 67               ld h,a
 410+ 995C 7C           2 ld a,h
 411+ 995D FE 58            cp $58
 412+ 995F 28 02            jr z,3F
 413+ 9961
 414+ 9961 10 E0            djnz 1B
 415+ 9963 ED 7B 12 89  3 ld sp,(Stack)
 416+ 9967 C9               ret
 417+ 9968
# file closed: Rutinas_de_impresion_sprites.asm
1614  9968              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9968              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9968              ;
   3+ 9968              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9968              ;
   5+ 9968              ; *****************************************************************************************************************************************************************************************
   6+ 9968              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9968
   8+ 9968 7C           calcula_tercio ld a,h
   9+ 9969 E6 18        	and $18
  10+ 996B CB 2F        	sra a
  11+ 996D CB 2F        	sra a
  12+ 996F CB 2F        	sra a
  13+ 9971 C9           	ret
  14+ 9972
# file closed: calcula_tercio.asm
1615  9972              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9972              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9972              ;
   3+ 9972              ;
   4+ 9972              ;	CLS.
   5+ 9972              ;
   6+ 9972              ;	Limpia la pantalla y define sus atributos.
   7+ 9972              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9972              ;
   9+ 9972              ;	COLORES: 0 ..... NEGRO
  10+ 9972              ;    		 1 ..... AZUL
  11+ 9972              ; 			 2 ..... ROJO
  12+ 9972              ;			 3 ..... MAGENTA
  13+ 9972              ; 			 4 ..... VERDE
  14+ 9972              ; 			 5 ..... CIAN
  15+ 9972              ;			 6 ..... AMARILLO
  16+ 9972              ; 			 7 ..... BLANCO
  17+ 9972              ;
  18+ 9972              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9972              ;
  20+ 9972              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9972
  22+ 9972
  23+ 9972 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9975 11 01 40     	LD DE,$4001
  25+ 9978 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 997B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 997D ED B0        	LDIR
  28+ 997F 01 FF 02     	LD BC,767
  29+ 9982 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9983 ED B0        	LDIR
  31+ 9985 C9           	ret
  32+ 9986
# file closed: Cls.asm
1616  9986              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9986              ; ******************************************************************************************************************************************************************************************
   2+ 9986              ;
   3+ 9986              ;   20/05/23
   4+ 9986              ;
   5+ 9986              ;	Recompone_posicion_inicio
   6+ 9986              ;
   7+ 9986              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9986              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9986              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9986              ;	_ a una u otra rutina.
  11+ 9986
  12+ 9986              Recompone_posicion_inicio
  13+ 9986
  14+ 9986 2A D6 88     	ld hl,(Posicion_inicio)
  15+ 9989 7D           	ld a,l
  16+ 998A E6 1F        	and $1f
  17+ 998C 28 16        	jr z,1F
  18+ 998E
  19+ 998E FE 1F        	cp $1f
  20+ 9990 28 0D        	jr z,3F
  21+ 9992
  22+ 9992 21 FF 88     	ld hl,Ctrl_2
  23+ 9995 CB C6        	set 0,(hl)
  24+ 9997 2A C8 88     	ld hl,(Puntero_objeto)
  25+ 999A 22 02 89     	ld (Repone_puntero_objeto),hl
  26+ 999D 18 08        	jr 2F
  27+ 999F
  28+ 999F CD 40 9B     3 call Mov_left
  29+ 99A2 18 03        	jr 2F
  30+ 99A4
  31+ 99A4 CD 22 9A     1 call Mov_right
  32+ 99A7 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99AA 22 C8 88     	ld (Puntero_objeto),hl
  34+ 99AD C9           	ret
  35+ 99AE
  36+ 99AE              ; ******************************************************************************************************************************************************************************************
  37+ 99AE              ;
  38+ 99AE              ;   27/05/23
  39+ 99AE              ;
  40+ 99AE              ;	Mov_down
  41+ 99AE              ;
  42+ 99AE              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99AE              ;
  44+ 99AE              ;
  45+ 99AE              Mov_down
  46+ 99AE
  47+ 99AE CD 10 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99B1              ;																	; _ repone (Puntero_objeto).
  49+ 99B1 21 EE 88     	ld hl,Ctrl_0
  50+ 99B4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99B6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99B6              ; 																	; _ en el caso de que no lo haya.
  53+ 99B6 3A DC 88     	ld a,(Vel_down)
  54+ 99B9 47           	ld b,a
  55+ 99BA 2A C6 88         ld hl,(Posicion_actual)
  56+ 99BD CD 68 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99C0 E6 02        	and 2
  58+ 99C2 28 0F        	jr z,1F
  59+ 99C4
  60+ 99C4              ; Nos encontramos en el último tercio de pantalla.
  61+ 99C4              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99C4
  63+ 99C4 7C           	ld a,h
  64+ 99C5 FE 57        	cp $57
  65+ 99C7 20 0A        	jr nz,1F
  66+ 99C9
  67+ 99C9 7D           	ld a,l
  68+ 99CA C6 20        	add $20
  69+ 99CC 30 05        	jr nc,1F
  70+ 99CE
  71+ 99CE              ; ------------------------------
  72+ 99CE              ;	call Reaparece_arriba
  73+ 99CE CD CD 9C     	call Reinicio
  74+ 99D1              ; ------------------------------
  75+ 99D1
  76+ 99D1 18 08        	jr 3F
  77+ 99D3 CD 55 96     1 call NextScan
  78+ 99D6 22 C6 88     	ld (Posicion_actual),hl
  79+ 99D9 10 E2            djnz 2B
  80+ 99DB CD F3 9C     3 call Genera_coordenadas
  81+ 99DE C9           	ret
  82+ 99DF
  83+ 99DF              ; ******************************************************************************************************************************************************************************************
  84+ 99DF              ;
  85+ 99DF              ;   27/05/23
  86+ 99DF              ;
  87+ 99DF              ;	Mov_up
  88+ 99DF              ;
  89+ 99DF              ; 	Mueve el Sprite hacia arriba.
  90+ 99DF              ;
  91+ 99DF              ;
  92+ 99DF              Mov_up
  93+ 99DF
  94+ 99DF CD 10 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99E2              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99E2 21 EE 88     	ld hl,Ctrl_0
  97+ 99E5 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99E7              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99E7              ; 																		; _ en el caso de que no lo haya.
 100+ 99E7 3A DB 88     	ld a,(Vel_up)
 101+ 99EA 47           	ld b,a
 102+ 99EB 2A C6 88     	ld hl,(Posicion_actual)
 103+ 99EE CD 68 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99F1 A7           	and a
 105+ 99F2 20 10        	jr nz,1F
 106+ 99F4
 107+ 99F4              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99F4              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99F4
 110+ 99F4 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99F5 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99F7 20 0B            jr nz,1F
 113+ 99F9 7D               ld a,l
 114+ 99FA D6 20            sub $20
 115+ 99FC 30 06            jr nc,1F
 116+ 99FE 25               dec h
 117+ 99FF
 118+ 99FF              ; -----------------------------
 119+ 99FF CD AE 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A02              ;	call Reinicio
 121+ 9A02              ; -----------------------------
 122+ 9A02
 123+ 9A02 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A04 CD 64 96     1 call PreviousScan
 125+ 9A07 22 C6 88     	ld (Posicion_actual),hl
 126+ 9A0A 10 E2            djnz 3B
 127+ 9A0C CD F3 9C     2 call Genera_coordenadas
 128+ 9A0F C9           	ret
 129+ 9A10
 130+ 9A10              ; -----------------------------
 131+ 9A10              ;
 132+ 9A10              ;	27/5/23
 133+ 9A10              ;
 134+ 9A10              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A10              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A10              ;
 137+ 9A10              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A10              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A10              ;
 140+ 9A10              ;	Modifica: A y (Puntero_objeto).
 141+ 9A10
 142+ 9A10 3A FF 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A13 CB 47        	bit 0,a
 144+ 9A15 C8           	ret z
 145+ 9A16 CB 87        	res 0,a
 146+ 9A18 32 FF 88     	ld (Ctrl_2),a
 147+ 9A1B 2A 02 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A1E 22 C8 88     	ld (Puntero_objeto),hl
 149+ 9A21 C9           	ret
 150+ 9A22
 151+ 9A22              ; ******************************************************************************************************************************************************************************************
 152+ 9A22              ;
 153+ 9A22              ;	19/10/22
 154+ 9A22              ;
 155+ 9A22              ;	Mov_right.
 156+ 9A22              ;
 157+ 9A22              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A22              ;
 159+ 9A22
 160+ 9A22 21 EE 88     Mov_right ld hl,Ctrl_0
 161+ 9A25 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A27              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A27              ; 																	; _ en el caso de que no lo haya.
 164+ 9A27 3A EE 88     	ld a,(Ctrl_0)
 165+ 9A2A CB 77        	bit 6,a
 166+ 9A2C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A2E
 168+ 9A2E CD 5C 9C     	call Stop_Amadeus_right
 169+ 9A31 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A32 18 4D        	jr 8F
 171+ 9A34
 172+ 9A34 3A CA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A37 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A39 20 46        	jr nz,8F
 175+ 9A3B
 176+ 9A3B 3A CC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A3E A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A3F 28 40        	jr z,8F
 179+ 9A41
 180+ 9A41              ; ---------- ---------- ----------
 181+ 9A41              ;
 182+ 9A41              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A41
 184+ 9A41 3A DA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A44 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A46 28 11        	jr z,1F
 187+ 9A48 38 06        	jr c,6F
 188+ 9A4A FE 04        	cp 4
 189+ 9A4C 28 14        	jr z,7F
 190+ 9A4E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A50
 192+ 9A50              ; ---------- ---------- ----------
 193+ 9A50              ;
 194+ 9A50              ; Perfiles de velocidad
 195+ 9A50              ;
 196+ 9A50
 197+ 9A50 3A CC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A53 FE FE        	cp $fe
 199+ 9A55 20 2A        	jr nz,8F
 200+ 9A57 18 10        	jr 3F
 201+ 9A59 3A CC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A5C FE FD        	cp $fd
 203+ 9A5E 20 21        	jr nz,8F
 204+ 9A60 18 07        	jr 3F
 205+ 9A62 3A CC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A65 FE FB        	cp $fb
 207+ 9A67 20 18        	jr nz,8F
 208+ 9A69
 209+ 9A69              ; ---------- ---------- ----------
 210+ 9A69
 211+ 9A69              3
 212+ 9A69 CD 9C 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A6C              ;	call Reinicio
 214+ 9A6C
 215+ 9A6C              ; ---------- ---------- ----------
 216+ 9A6C              ;
 217+ 9A6C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A6C
 219+ 9A6C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A6E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A6F CD 88 9A     	call DESPLZ_DER
 222+ 9A72 C1           	pop bc
 223+ 9A73 10 F9        	djnz 5B
 224+ 9A75 2A C6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A78 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A79 22 C6 88     	ld (Posicion_actual),hl
 227+ 9A7C CD F3 9C     	call Genera_coordenadas
 228+ 9A7F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A81
 230+ 9A81              ; ---------- ---------- ----------
 231+ 9A81
 232+ 9A81 2A C6 88     8 ld hl,(Posicion_actual)
 233+ 9A84 CD 88 9A     	call DESPLZ_DER
 234+ 9A87 C9           2 ret
 235+ 9A88
 236+ 9A88              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A88              ;
 238+ 9A88              ;	22/9/22
 239+ 9A88              ;
 240+ 9A88
 241+ 9A88 CD 97 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A8B CD E3 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A8E CD 0C 9B         call Ciclo_completo
 244+ 9A91 21 EE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A94 CB FE        	set 7,(hl)
 246+ 9A96 C9           	ret
 247+ 9A97
 248+ 9A97              ; ******************************************************************************************************************************************************************************************
 249+ 9A97              ;	15/02/23
 250+ 9A97              ;
 251+ 9A97
 252+ 9A97 3A DA 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A9A 47           	ld b,a
 254+ 9A9B 2A D2 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A9E 23           1 inc hl
 256+ 9A9F 23           	inc hl
 257+ 9AA0 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AA2 22 D2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AA5 CD 93 8C     	call Extrae_address
 260+ 9AA8 22 C8 88     	ld (Puntero_objeto),hl
 261+ 9AAB
 262+ 9AAB              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AAB
 264+ 9AAB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AAB              ; Cuántos movimientos hemos hecho ??
 266+ 9AAB              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AAB
 268+ 9AAB 2A CE 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AAE EB           	ex de,hl
 270+ 9AAF A7           	and a
 271+ 9AB0 ED 52        	sbc hl,de
 272+ 9AB2 CB 3D        	srl l
 273+ 9AB4 3E 08        6 ld a,8
 274+ 9AB6 95           	sub l
 275+ 9AB7 30 1E        	jr nc,3F
 276+ 9AB9
 277+ 9AB9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AB9              ; B="0".
 279+ 9AB9
 280+ 9AB9 04           4 inc b
 281+ 9ABA 3C           	inc a
 282+ 9ABB 20 FC        	jr nz,4B
 283+ 9ABD 78           	ld a,b
 284+ 9ABE 08           	ex af,af
 285+ 9ABF 2A CE 88     	ld hl,(Indice_Sprite_der)
 286+ 9AC2 23           5 inc hl
 287+ 9AC3 23           	inc hl
 288+ 9AC4 10 FC        	djnz 5B
 289+ 9AC6 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AC9 CD 93 8C     	call Extrae_address
 291+ 9ACC 22 C8 88     	ld (Puntero_objeto),hl
 292+ 9ACF
 293+ 9ACF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9ACF              ; _(Posicion_actual).
 295+ 9ACF
 296+ 9ACF 21 C6 88     	ld hl,Posicion_actual
 297+ 9AD2 34           	inc (hl)
 298+ 9AD3 08               ex af,af
 299+ 9AD4 6F           	ld l,a
 300+ 9AD5 18 DD        	jr 6B
 301+ 9AD7
 302+ 9AD7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AD7
 304+ 9AD7 47           3 ld b,a
 305+ 9AD8 2A D0 88     	ld hl,(Indice_Sprite_izq)
 306+ 9ADB 23           2 inc hl
 307+ 9ADC 23           	inc hl
 308+ 9ADD 10 FC        	djnz 2B
 309+ 9ADF 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AE2 C9           8 ret
 311+ 9AE3
 312+ 9AE3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AE3              ;
 314+ 9AE3              ;	24/7/22
 315+ 9AE3              ;
 316+ 9AE3              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AE3              ;
 318+ 9AE3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AE3              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AE3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AE3
 322+ 9AE3 3A CC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AE6 A7           	and a
 324+ 9AE7 20 1F        	jr nz,1F
 325+ 9AE9 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AEB 32 CC 88         ld (CTRL_DESPLZ),a
 327+ 9AEE
 328+ 9AEE 21 C5 88     	ld hl,Columns
 329+ 9AF1 34           	inc (hl)
 330+ 9AF2 3A D8 88     	ld a,(Cuad_objeto)
 331+ 9AF5 E6 01        	and 1
 332+ 9AF7 28 0F        	jr z,1F
 333+ 9AF9 2A C6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AFC 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AFD 22 C6 88     	ld (Posicion_actual),hl
 336+ 9B00 CD F3 9C     	call Genera_coordenadas
 337+ 9B03 CD 68 9C     	call Inc_CTRL_DESPLZ
 338+ 9B06 18 03        	jr 2F
 339+ 9B08 CD 68 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B0B C9           2 ret
 341+ 9B0C
 342+ 9B0C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B0C              ;
 344+ 9B0C              ;	24/7/22
 345+ 9B0C              ;
 346+ 9B0C              ;	Ciclo_completo.
 347+ 9B0C              ;
 348+ 9B0C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B0C              ;
 350+ 9B0C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B0C              ; 	Decrementamos (Columns).
 352+ 9B0C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B0C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B0C
 355+ 9B0C
 356+ 9B0C 3A CC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B0F FE FF        	cp $ff
 358+ 9B11 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B13 E6 F0        	and $f0
 360+ 9B15 20 28        	jr nz,3F
 361+ 9B17
 362+ 9B17              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B17
 364+ 9B17 3A CC 88     	ld a,(CTRL_DESPLZ)
 365+ 9B1A 47           	ld b,a
 366+ 9B1B 3E F8        	ld a,$f8
 367+ 9B1D 80           	add b
 368+ 9B1E 32 CC 88     	ld (CTRL_DESPLZ),a
 369+ 9B21 18 1C        	jr 3F
 370+ 9B23 21 C5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B26 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B27 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B28 32 CC 88     	ld (CTRL_DESPLZ),a
 374+ 9B2B 3A D8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B2E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B30 20 0A        	jr nz,2F
 377+ 9B32 2A C6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B35 23           	inc hl
 379+ 9B36 22 C6 88     	ld (Posicion_actual),hl
 380+ 9B39 CD F3 9C     	call Genera_coordenadas
 381+ 9B3C
 382+ 9B3C              ; Inicia el puntero de Sprite.
 383+ 9B3C
 384+ 9B3C CD AA 8C     2 call Inicia_puntero_objeto_der
 385+ 9B3F C9           3 ret
 386+ 9B40
 387+ 9B40              ; ******************************************************************************************************************************************************************************************
 388+ 9B40              ;
 389+ 9B40              ;	15/02/23
 390+ 9B40              ;
 391+ 9B40              ;	Mov_left.
 392+ 9B40              ;
 393+ 9B40              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B40              ;
 395+ 9B40              Mov_left
 396+ 9B40
 397+ 9B40 21 EE 88     	ld hl,Ctrl_0
 398+ 9B43 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B45              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B45              ; 																	; _ en el caso de que no lo haya.
 401+ 9B45 3A EE 88     	ld a,(Ctrl_0)
 402+ 9B48 CB 77        	bit 6,a
 403+ 9B4A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B4C
 405+ 9B4C CD 62 9C     	call Stop_Amadeus_left
 406+ 9B4F C8           	ret z
 407+ 9B50 20 4A        	jr nz,8F
 408+ 9B52
 409+ 9B52 3A CA 88     11 ld a,(Coordenada_X)
 410+ 9B55 A7           	and a
 411+ 9B56 20 44        	jr nz,8F
 412+ 9B58
 413+ 9B58 3A CC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B5B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B5C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B5E
 417+ 9B5E              ; ---------- ---------- ----------
 418+ 9B5E
 419+ 9B5E 3A D9 88     	ld a,(Vel_left)
 420+ 9B61 FE 02        	cp 2
 421+ 9B63 28 0F        	jr z,1F
 422+ 9B65 38 04        	jr c,6F
 423+ 9B67 FE 04        	cp 4
 424+ 9B69 28 12        	jr z,7F
 425+ 9B6B
 426+ 9B6B              ; ---------- ---------- ----------
 427+ 9B6B
 428+ 9B6B 3A CC 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B6E FE F8        	cp $f8
 430+ 9B70 20 2A        	jr nz,8F
 431+ 9B72 18 10        	jr 4F
 432+ 9B74 3A CC 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B77 FE F9        	cp $f9
 434+ 9B79 20 21        	jr nz,8F
 435+ 9B7B 18 07        	jr 4F
 436+ 9B7D 3A CC 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B80 FE FB        	cp $fb
 438+ 9B82 20 18        	jr nz,8F
 439+ 9B84
 440+ 9B84              ; ---------- ---------- ----------
 441+ 9B84
 442+ 9B84              4
 443+ 9B84 CD 8A 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B87              ;	call Reinicio
 445+ 9B87
 446+ 9B87              ; ---------- ---------- ----------
 447+ 9B87
 448+ 9B87 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B89 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B8A
 451+ 9B8A              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B8A              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B8A
 454+ 9B8A CD A3 9B     	call DESPLZ_IZQ
 455+ 9B8D C1           	pop bc
 456+ 9B8E 10 F9        	djnz 5B
 457+ 9B90 2A C6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B93 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B94 22 C6 88     	ld (Posicion_actual),hl
 460+ 9B97 CD F3 9C     	call Genera_coordenadas
 461+ 9B9A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B9C
 463+ 9B9C              ; ---------- ---------- ----------
 464+ 9B9C
 465+ 9B9C              ; Movemos, no hay recolocación.
 466+ 9B9C
 467+ 9B9C 2A C6 88     8 ld hl,(Posicion_actual)
 468+ 9B9F CD A3 9B     	call DESPLZ_IZQ
 469+ 9BA2 C9           2 ret
 470+ 9BA3
 471+ 9BA3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BA3              ;
 473+ 9BA3              ;	22/9/22
 474+ 9BA3
 475+ 9BA3              DESPLZ_IZQ
 476+ 9BA3
 477+ 9BA3 CD B2 9B     	call Desplaza_izquierda
 478+ 9BA6 CD FE 9B         call modifica_parametros_1er_DESPLZ
 479+ 9BA9 CD 26 9C     	call Ciclo_completo_2
 480+ 9BAC 21 EE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BAF CB BE        	res 7,(hl)
 482+ 9BB1 C9           	ret
 483+ 9BB2
 484+ 9BB2              Desplaza_izquierda
 485+ 9BB2
 486+ 9BB2 3A D9 88     	ld a,(Vel_left)
 487+ 9BB5 47           	ld b,a
 488+ 9BB6 2A D4 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BB9 23           1 inc hl
 490+ 9BBA 23           	inc hl
 491+ 9BBB 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BBD 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BC0 CD 93 8C     	call Extrae_address
 494+ 9BC3 22 C8 88     	ld (Puntero_objeto),hl
 495+ 9BC6
 496+ 9BC6              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BC6
 498+ 9BC6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BC6              ; Cuántos movimientos hemos hecho ??
 500+ 9BC6              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BC6
 502+ 9BC6 2A D0 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BC9 EB           	ex de,hl
 504+ 9BCA A7           	and a
 505+ 9BCB ED 52        	sbc hl,de
 506+ 9BCD CB 3D        	srl l
 507+ 9BCF 3E 08        6 ld a,8
 508+ 9BD1 95           	sub l
 509+ 9BD2 30 1E        	jr nc,3F
 510+ 9BD4
 511+ 9BD4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BD4              ; B="0".
 513+ 9BD4
 514+ 9BD4 04           4 inc b
 515+ 9BD5 3C           	inc a
 516+ 9BD6 20 FC        	jr nz,4B
 517+ 9BD8 78           	ld a,b
 518+ 9BD9 08           	ex af,af
 519+ 9BDA 2A D0 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BDD 23           5 inc hl
 521+ 9BDE 23           	inc hl
 522+ 9BDF 10 FC        	djnz 5B
 523+ 9BE1 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BE4 CD 93 8C     	call Extrae_address
 525+ 9BE7 22 C8 88     	ld (Puntero_objeto),hl
 526+ 9BEA
 527+ 9BEA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BEA              ; _(Posicion_actual).
 529+ 9BEA
 530+ 9BEA 21 C6 88     	ld hl,Posicion_actual
 531+ 9BED 35           	dec (hl)
 532+ 9BEE 08           	ex af,af
 533+ 9BEF 6F           	ld l,a
 534+ 9BF0 18 DD        	jr 6B
 535+ 9BF2
 536+ 9BF2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BF2
 538+ 9BF2 47           3 ld b,a
 539+ 9BF3 2A CE 88     	ld hl,(Indice_Sprite_der)
 540+ 9BF6 23           2 inc hl
 541+ 9BF7 23           	inc hl
 542+ 9BF8 10 FC        	djnz 2B
 543+ 9BFA 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BFD C9           8 ret
 545+ 9BFE
 546+ 9BFE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BFE              ;
 548+ 9BFE              ;	modifica_parametros_1er_DESPLZ
 549+ 9BFE              ;
 550+ 9BFE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BFE              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BFE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BFE
 554+ 9BFE 3A CC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C01 A7           	and a
 556+ 9C02 20 1E        	jr nz,1F
 557+ 9C04 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C05 32 CC 88         ld (CTRL_DESPLZ),a
 559+ 9C08 21 C5 88     	ld hl,Columns
 560+ 9C0B 34           	inc (hl)
 561+ 9C0C 3A D8 88     	ld a,(Cuad_objeto)
 562+ 9C0F E6 01        	and 1
 563+ 9C11 20 0F        	jr nz,1F
 564+ 9C13 2A C6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C16 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C17 22 C6 88     	ld (Posicion_actual),hl
 567+ 9C1A CD F3 9C     	call Genera_coordenadas
 568+ 9C1D CD 79 9C     	call Dec_CTRL_DESPLZ
 569+ 9C20 18 03        	jr 2F
 570+ 9C22 CD 79 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C25 C9           2 ret
 572+ 9C26
 573+ 9C26              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C26
 575+ 9C26 3A CC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C29 FE F7        	cp $f7
 577+ 9C2B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C2D 30 2C        	jr nc,3F
 579+ 9C2F
 580+ 9C2F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C2F
 582+ 9C2F 06 00        	ld b,0
 583+ 9C31 04           4 inc b
 584+ 9C32 3C           	inc a
 585+ 9C33 FE F7        	cp $f7
 586+ 9C35 20 FA        	jr nz,4B
 587+ 9C37 3E FF        	ld a,$ff
 588+ 9C39 90           	sub b
 589+ 9C3A 32 CC 88     	ld (CTRL_DESPLZ),a
 590+ 9C3D 18 1C        	jr 3F
 591+ 9C3F
 592+ 9C3F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C3F
 594+ 9C3F 21 C5 88     1 ld hl,Columns
 595+ 9C42 35           	dec (hl)
 596+ 9C43 AF           	xor a
 597+ 9C44 32 CC 88     	ld (CTRL_DESPLZ),a
 598+ 9C47 3A D8 88     	ld a,(Cuad_objeto)
 599+ 9C4A E6 01        	and 1
 600+ 9C4C 28 0A        	jr z,2F
 601+ 9C4E 2A C6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C51 2B           	dec hl
 603+ 9C52 22 C6 88     	ld (Posicion_actual),hl
 604+ 9C55 CD F3 9C     	call Genera_coordenadas
 605+ 9C58
 606+ 9C58              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C58
 608+ 9C58 CD BD 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C5B C9           3 ret
 610+ 9C5C
 611+ 9C5C              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C5C              ;
 613+ 9C5C              ;	19/10/22
 614+ 9C5C              ;
 615+ 9C5C              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C5C              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C5C
 618+ 9C5C 3A CA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C5F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C61 C9           	ret
 621+ 9C62
 622+ 9C62              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C62              ;
 624+ 9C62              ;	19/10/22
 625+ 9C62              ;
 626+ 9C62              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C62              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C62
 629+ 9C62 3A CA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C65 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C67 C9           	ret
 632+ 9C68
 633+ 9C68              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C68              ;
 635+ 9C68              ;	24/7/22
 636+ 9C68              ;
 637+ 9C68              ;	Inc_CTRL_DESPLZ
 638+ 9C68              ;
 639+ 9C68              ;
 640+ 9C68              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C68
 642+ 9C68 21 CC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C6B 3A DA 88     	ld a,(Vel_right)
 644+ 9C6E A7           	and a
 645+ 9C6F 28 06        	jr z,1F
 646+ 9C71 47           	ld b,a
 647+ 9C72 34           3 inc (hl)
 648+ 9C73 10 FD        	djnz 3B
 649+ 9C75 18 01        	jr 2F
 650+ 9C77 34           1 inc (hl)
 651+ 9C78 C9           2 ret
 652+ 9C79
 653+ 9C79              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C79              ;
 655+ 9C79              ;	5/2/23
 656+ 9C79              ;
 657+ 9C79              ;	Dec_CTRL_DESPLZ
 658+ 9C79              ;
 659+ 9C79              ;
 660+ 9C79              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C79
 662+ 9C79 21 CC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C7C 3A D9 88     	ld a,(Vel_left)
 664+ 9C7F A7           	and a
 665+ 9C80 28 06        	jr z,1F
 666+ 9C82 47           	ld b,a
 667+ 9C83 35           3 dec (hl)
 668+ 9C84 10 FD        	djnz 3B
 669+ 9C86 18 01        	jr 2F
 670+ 9C88 35           1 dec (hl)
 671+ 9C89 C9           2 ret
 672+ 9C8A
 673+ 9C8A              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C8A
 675+ 9C8A 2A C6 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C8D 01 1F 00     	ld bc,31
 677+ 9C90 A7           	and a
 678+ 9C91 ED 4A        	adc hl,bc
 679+ 9C93 22 C6 88     	ld (Posicion_actual),hl
 680+ 9C96 21 EE 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C99 CB C6        	set 0,(hl)
 682+ 9C9B C9           	ret
 683+ 9C9C
 684+ 9C9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C9C
 686+ 9C9C 2A C6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C9F 01 1F 00     	ld bc,31
 688+ 9CA2 A7           	and a
 689+ 9CA3 ED 42        	sbc hl,bc
 690+ 9CA5 22 C6 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CA8 21 EE 88     	ld hl,Ctrl_0
 692+ 9CAB CB CE        	set 1,(hl)
 693+ 9CAD C9           	ret
 694+ 9CAE
 695+ 9CAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CAE
 697+ 9CAE 24           Reaparece_abajo inc h
 698+ 9CAF 01 E0 17     	ld bc,$17e0
 699+ 9CB2 A7           	and a
 700+ 9CB3 ED 4A        	adc hl,bc
 701+ 9CB5 22 C6 88     	ld (Posicion_actual),hl
 702+ 9CB8 21 EE 88     	ld hl,Ctrl_0
 703+ 9CBB CB D6        	set 2,(hl)
 704+ 9CBD C9           	ret
 705+ 9CBE
 706+ 9CBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CBE
 708+ 9CBE 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CC1 A7           	and a
 710+ 9CC2 ED 42        	sbc hl,bc
 711+ 9CC4 22 C6 88     	ld (Posicion_actual),hl
 712+ 9CC7 21 EE 88     	ld hl,Ctrl_0
 713+ 9CCA CB DE        	set 3,(hl)
 714+ 9CCC C9           	ret
 715+ 9CCD
 716+ 9CCD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CCD              ;
 718+ 9CCD              ;	15/07/23
 719+ 9CCD
 720+ 9CCD              Reinicio
 721+ 9CCD
 722+ 9CCD              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CCD
 724+ 9CCD AF           	xor a
 725+ 9CCE 21 F3 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CD1 CD EF 9C     	call Limpia_contenido_hl
 727+ 9CD4
 728+ 9CD4 21 C6 88     	ld hl,Posicion_actual
 729+ 9CD7 CD EF 9C     	call Limpia_contenido_hl
 730+ 9CDA
 731+ 9CDA CD 21 A0     	call Inicializa_Puntero_indice_mov
 732+ 9CDD CD AB 9F     	call Inicia_Puntero_mov
 733+ 9CE0
 734+ 9CE0 21 F5 88     	ld hl,Incrementa_puntero
 735+ 9CE3 06 05        	ld b,5
 736+ 9CE5 77           1 ld (hl),a
 737+ 9CE6 23           	inc hl
 738+ 9CE7 10 FC        	djnz 1B
 739+ 9CE9
 740+ 9CE9 21 FF 88     	ld hl,Ctrl_2
 741+ 9CEC CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CEE
 743+ 9CEE C9           	ret
 744+ 9CEF
 745+ 9CEF 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CF0 23           	inc hl
 747+ 9CF1 77           	ld (hl),a
 748+ 9CF2 C9           	ret
 749+ 9CF3
 750+ 9CF3
# file closed: Direcciones.asm
1617  9CF3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CF3              ; ------------------------------------------------------------------------
   2+ 9CF3              ;
   3+ 9CF3              ;	02/04/23
   4+ 9CF3              ;
   5+ 9CF3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CF3              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CF3              ;
   8+ 9CF3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CF3              ;
  10+ 9CF3              ;	Modifica: A,BC y DE.
  11+ 9CF3
  12+ 9CF3 C5           Genera_coordenadas push bc
  13+ 9CF4 E5           	push hl
  14+ 9CF5 D5           	push de
  15+ 9CF6
  16+ 9CF6 2A C6 88     	ld hl,(Posicion_actual)
  17+ 9CF9
  18+ 9CF9 7D           	ld a,l
  19+ 9CFA E6 1F        	and $1f
  20+ 9CFC 32 CA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CFF
  22+ 9CFF CD 68 99     	call calcula_tercio
  23+ 9D02 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D03
  25+ 9D03 1E 00        	ld e,0
  26+ 9D05 7D           	ld a,l
  27+ 9D06 E6 E0        	and $e0
  28+ 9D08 28 01        	jr z,1F
  29+ 9D0A 04           	inc b
  30+ 9D0B
  31+ 9D0B 04           1 inc b
  32+ 9D0C 05           	dec b
  33+ 9D0D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D0F              ;														; _ , salimos.
  35+ 9D0F 1C           3 inc e
  36+ 9D10 D6 20        	sub 32
  37+ 9D12 20 FB        	jr nz,3B
  38+ 9D14 10 F5        	djnz 1B
  39+ 9D16
  40+ 9D16 7B           2 ld a,e
  41+ 9D17 32 CB 88     	ld (Coordenada_y),a
  42+ 9D1A
  43+ 9D1A D1           	pop de
  44+ 9D1B E1           	pop hl
  45+ 9D1C C1           	pop bc
  46+ 9D1D
  47+ 9D1D C9           	ret
  48+ 9D1E
  49+ 9D1E              ; ------------------------------------------------------------------------
  50+ 9D1E              ;	28/05/23
  51+ 9D1E              ;
  52+ 9D1E              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D1E              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D1E              ;
  55+ 9D1E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D1E              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D1E              ;
  58+ 9D1E              ;		DE="$120d"
  59+ 9D1E              ;
  60+ 9D1E              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D1E              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D1E              ;
  63+ 9D1E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D1E
  65+ 9D1E              ;	Modifica: A,BC y DE.
  66+ 9D1E
  67+ 9D1E
  68+ 9D1E              Genera_coordenadas_disparo
  69+ 9D1E
  70+ 9D1E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D1E
  72+ 9D1E 7D           	ld a,l
  73+ 9D1F E6 1F        	and $1f
  74+ 9D21 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D22 CD 68 99     	call calcula_tercio
  76+ 9D25 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D26 1E 00        	ld e,0
  78+ 9D28 7D           	ld a,l
  79+ 9D29 E6 E0        	and $e0
  80+ 9D2B 28 01        	jr z,1F
  81+ 9D2D 04           	inc b
  82+ 9D2E 1C           1 inc e
  83+ 9D2F D6 20        	sub 32
  84+ 9D31 20 FB        	jr nz,1B
  85+ 9D33 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D35 C9           	ret
  87+ 9D36
# file closed: Genera_coordenadas.asm
1618  9D36              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D36              ; Relojes y temporizaciones.
   2+ 9D36
   3+ 9D36              ; ------------------------------------------------------
   4+ 9D36              ;
   5+ 9D36              ;	16/7/23
   6+ 9D36              ;
   7+ 9D36              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D36              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D36              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D36              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D36              ;
  12+ 9D36              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D36              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D36
  15+ 9D36              ; Disparo_entidad db 1
  16+ 9D36              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D36              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D36
  19+ 9D36              Habilita_disparos
  20+ 9D36
  21+ 9D36 7E           	ld a,(hl)
  22+ 9D37 A7           	and a
  23+ 9D38 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D39
  25+ 9D39 EB           	ex de,hl
  26+ 9D3A
  27+ 9D3A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D3B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D3C
  30+ 9D3C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D3C
  32+ 9D3C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D3D 7E           	ld a,(hl)
  34+ 9D3E 23           	inc hl
  35+ 9D3F 77           	ld (hl),a
  36+ 9D40
  37+ 9D40 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D41 3E 01        	ld a,1
  39+ 9D43 77           	ld (hl),a
  40+ 9D44 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1619  9D45              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D45
   2+ 9D45
   3+ 9D45              ;   07/07/23
   4+ 9D45              ;
   5+ 9D45              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D45              ;
   7+ 9D45              ;   Codificación:
   8+ 9D45              ;
   9+ 9D45              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D45              ;
  11+ 9D45              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D45              ;
  13+ 9D45              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D45              ;
  15+ 9D45              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D45              ;
  17+ 9D45              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D45              ;                               ..... %01000010 Vel_up 4
  19+ 9D45              ;                                               Vel_down 2
  20+ 9D45              ;                               ..... $42
  21+ 9D45              ;
  22+ 9D45              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D45              ;
  24+ 9D45              ;                               ..... %01000010 Vel_left 4
  25+ 9D45              ;                                               Vel_right 2
  26+ 9D45              ;                               ..... $42
  27+ 9D45              ;
  28+ 9D45              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D45              ;
  30+ 9D45              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D45              ;
  32+ 9D45              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D45              ;
  34+ 9D45              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D45              ;                                     $53
  36+ 9D45              ;
  37+ 9D45              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D45              ;
  39+ 9D45              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D45              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D45              ;
  42+ 9D45              ;                       Arriba ..... $81
  43+ 9D45              ;                       Arriba - izquierda ..... $a1
  44+ 9D45              ;                       Arriba - derecha ..... $91
  45+ 9D45              ;
  46+ 9D45              ;                       Abajo ..... $41
  47+ 9D45              ;                       Abajo - izquierda ..... $61
  48+ 9D45              ;                       Abajo - derecha ..... $51
  49+ 9D45              ;
  50+ 9D45              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D45              ;
  52+ 9D45              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D45              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D45              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D45              ;
  56+ 9D45              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D45              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D45              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D45              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D45              ;
  61+ 9D45              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D45              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D45              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D45              ;
  65+ 9D45              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D45              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D45              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D45              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D45
  70+ 9D45              ; ----- ----- ----- ----- -----
  71+ 9D45
  72+ 9D45 71 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D47 79 9D            defw F_1
  74+ 9D49 83 9D            defw F_2
  75+ 9D4B 8D 9D            defw Codo_abajo_derecha
  76+ 9D4D C1 9D            defw Derecha_y_subiendo
  77+ 9D4F CB 9D            defw Derecha_y_subiendo_1
  78+ 9D51 D5 9D            defw F_3
  79+ 9D53 DF 9D            defw F_4
  80+ 9D55 E9 9D            defw Derecha_y_bajando
  81+ 9D57 F3 9D            defw Derecha_y_bajando_1
  82+ 9D59 FD 9D            defw Derecha_y_bajando_2
  83+ 9D5B 07 9E            defw Codo_derecha_abajo
  84+ 9D5D 37 9E            defw Codo_abajo_izq.
  85+ 9D5F 6B 9E            defw Izquierda_y_subiendo
  86+ 9D61 75 9E            defw Izquierda_y_subiendo_1
  87+ 9D63 7F 9E            defw F_5
  88+ 9D65 89 9E            defw F_6
  89+ 9D67 93 9E            defw Izquierda_y_bajando
  90+ 9D69 9D 9E            defw Izquierda_y_bajando_1
  91+ 9D6B A7 9E            defw Izquierda_y_bajando_2
  92+ 9D6D B1 9E            defw Codo_izquierda_abajo
  93+ 9D6F 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D71
  95+ 9D71 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D75 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D79
  98+ 9D79 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D7D 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D81 08 00
 100+ 9D83 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D87 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D8B 0F FE
 102+ 9D8D
 103+ 9D8D 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D91 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D95 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D99 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D9D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DA1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DA5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DA9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DAD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DB1 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DB5 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DB9 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DBD 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DC1
 117+ 9DC1 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DC5 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DC9 06 00
 119+ 9DCB
 120+ 9DCB 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DCF 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DD3 02 00
 122+ 9DD5
 123+ 9DD5 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DD9 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DDD 04 00
 125+ 9DDF 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DE3 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DE7 08 00
 127+ 9DE9
 128+ 9DE9 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DED 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DF1 02 00
 130+ 9DF3
 131+ 9DF3 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DF7 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DFB 06 00
 133+ 9DFD
 134+ 9DFD 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E01 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E05 06 00
 136+ 9E07
 137+ 9E07              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E07
 139+ 9E07 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E0B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E0F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E13 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E17 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E1B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E1F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E23 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E27 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E2B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E2F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E33 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E37
 152+ 9E37 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E3B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E3F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E43 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E47 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E4B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E4F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E53 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E57 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E5B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E5F 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E63 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E67 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E6B
 166+ 9E6B 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E6F 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E73 06 00
 168+ 9E75
 169+ 9E75 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E79 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E7D 02 00
 171+ 9E7F
 172+ 9E7F 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E83 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E87 04 00
 174+ 9E89 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E8D 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E91 08 00
 176+ 9E93
 177+ 9E93 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E97 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E9B 02 00
 179+ 9E9D
 180+ 9E9D 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EA1 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EA5 06 00
 182+ 9EA7
 183+ 9EA7 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EAB 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EAF 06 00
 185+ 9EB1
 186+ 9EB1 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EB5 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EB9 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EBD 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EC1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EC5 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EC9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9ECD 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9ED1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9ED5 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9ED9 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EDD 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EE1
 199+ 9EE1              ; ----- ----- ----- ----- -----
 200+ 9EE1              ;
 201+ 9EE1              ;   27/06/23
 202+ 9EE1
 203+ 9EE1              Movimiento
 204+ 9EE1
 205+ 9EE1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EE1
 207+ 9EE1              ;    ld hl,(Posicion_actual)
 208+ 9EE1
 209+ 9EE1 FB               ei
 210+ 9EE2
 211+ 9EE2 3A FF 88         ld a,(Ctrl_2)
 212+ 9EE5 CB 57            bit 2,a
 213+ 9EE7 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9EE9
 215+ 9EE9 2A F1 88         ld hl,(Puntero_mov)
 216+ 9EEC 7E               ld a,(hl)
 217+ 9EED
 218+ 9EED              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9EED
 220+ 9EED              Inicia_desplazamiento.
 221+ 9EED
 222+ 9EED              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9EED
 224+ 9EED CD E2 9F         call Ajusta_velocidad_desplazamiento
 225+ 9EF0
 226+ 9EF0              ; Iniciamos (Repetimos_mov).
 227+ 9EF0
 228+ 9EF0 7E               ld a,(hl)
 229+ 9EF1 E6 0F            and $0f
 230+ 9EF3 32 F7 88         ld (Repetimos_desplazamiento),a
 231+ 9EF6 32 F8 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9EF9
 233+ 9EF9              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9EF9
 235+ 9EF9 23               inc hl
 236+ 9EFA 7E               ld a,(hl)
 237+ 9EFB 32 FA 88         ld (Cola_de_desplazamiento),a
 238+ 9EFE 2B               dec hl
 239+ 9EFF
 240+ 9EFF 21 FF 88         ld hl,Ctrl_2
 241+ 9F02 CB D6            set 2,(hl)
 242+ 9F04
 243+ 9F04              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F04              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F04
 246+ 9F04              Desplazamiento_iniciado
 247+ 9F04
 248+ 9F04 CD B6 9F         call Aplica_desplazamiento
 249+ 9F07
 250+ 9F07 3A FF 88         ld a,(Ctrl_2)
 251+ 9F0A CB 67            bit 4,a
 252+ 9F0C C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F0D
 254+ 9F0D 21 F7 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F10 35               dec (hl)
 256+ 9F11 C0               ret nz
 257+ 9F12
 258+ 9F12              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F12              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F12              ; Analiza (Cola_de_desplazamiento).
 261+ 9F12
 262+ 9F12 3A FA 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F15 A7               and a
 264+ 9F16 CC 0B A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F19 28 30            jr z,Reinicia_el_movimiento
 266+ 9F1B
 267+ 9F1B FE FF            cp $ff
 268+ 9F1D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F1F
 270+ 9F1F FE FE            cp $fe
 271+ 9F21 CC 8F 9F         call z,Fijamos_bucle
 272+ 9F24 28 25            jr z,Reinicia_el_movimiento
 273+ 9F26
 274+ 9F26 FE FD            cp $fd
 275+ 9F28 20 11            jr nz,1F
 276+ 9F2A
 277+ 9F2A              ; ---
 278+ 9F2A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F2A
 280+ 9F2A 3A FF 88         ld a,(Ctrl_2)
 281+ 9F2D CB 5F            bit 3,a
 282+ 9F2F 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F31
 284+ 9F31              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F31
 286+ 9F31 21 FF 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F34 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F36
 289+ 9F36 CD A0 9F         call Inicia_Repetimos_movimiento
 290+ 9F39 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F3B              ; ---
 292+ 9F3B
 293+ 9F3B FE 01        1 cp 1
 294+ 9F3D CA 79 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F40
 296+ 9F40 3D               dec a
 297+ 9F41 32 FA 88         ld (Cola_de_desplazamiento),a
 298+ 9F44
 299+ 9F44 3A F8 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F47 32 F7 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F4A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F4A C9               ret
 303+ 9F4B
 304+ 9F4B              Reinicia_el_movimiento
 305+ 9F4B
 306+ 9F4B F3               di
 307+ 9F4C
 308+ 9F4C 3A FF 88         ld a,(Ctrl_2)
 309+ 9F4F CB 5F            bit 3,a
 310+ 9F51 28 1B            jr z,2F
 311+ 9F53
 312+ 9F53              ; (Cola_de_desplazamiento)="254".
 313+ 9F53
 314+ 9F53 21 F9 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F56 35               dec (hl)
 316+ 9F57 20 15            jr nz,2F
 317+ 9F59
 318+ 9F59              ; Fin de las repeticiones del último movimiento.
 319+ 9F59
 320+ 9F59 21 FF 88         ld hl,Ctrl_2
 321+ 9F5C CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F5E
 323+ 9F5E 2A F1 88         ld hl,(Puntero_mov)
 324+ 9F61 23               inc hl
 325+ 9F62 23               inc hl
 326+ 9F63 23               inc hl
 327+ 9F64 22 F1 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F67              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F67 7E               ld a,(hl)
 330+ 9F68 32 FA 88         ld (Cola_de_desplazamiento),a
 331+ 9F6B
 332+ 9F6B C3 12 9F         jp Cola
 333+ 9F6E
 334+ 9F6E CD AB 9F     2 call Inicia_Puntero_mov
 335+ 9F71
 336+ 9F71 21 FF 88         ld hl,Ctrl_2
 337+ 9F74 CB 96            res 2,(hl)
 338+ 9F76
 339+ 9F76 C3 E1 9E         jp Movimiento
 340+ 9F79
 341+ 9F79              Siguiente_desplazamiento
 342+ 9F79
 343+ 9F79              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F79              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F79
 346+ 9F79 21 FF 88         ld hl,Ctrl_2
 347+ 9F7C CB 96            res 2,(hl)
 348+ 9F7E
 349+ 9F7E 2A F1 88         ld hl,(Puntero_mov)
 350+ 9F81 23               inc hl
 351+ 9F82 23               inc hl
 352+ 9F83 22 F1 88         ld (Puntero_mov),hl
 353+ 9F86
 354+ 9F86 7E               ld a,(hl)
 355+ 9F87 A7               and a
 356+ 9F88 CC 0B A0         call z,Incrementa_Puntero_indice_mov
 357+ 9F8B CA 4B 9F         jp z,Reinicia_el_movimiento
 358+ 9F8E
 359+ 9F8E C9               ret
 360+ 9F8F              ; Subrutinas -----------------------------------------
 361+ 9F8F              ; ---------- --------- --------- ---------- ----------
 362+ 9F8F              ;
 363+ 9F8F              ;   24/07/23
 364+ 9F8F              ;
 365+ 9F8F              ;   Fijamos_bucle
 366+ 9F8F              ;
 367+ 9F8F              ;
 368+ 9F8F
 369+ 9F8F              Fijamos_bucle
 370+ 9F8F
 371+ 9F8F 3A F5 88         ld a,(Incrementa_puntero)
 372+ 9F92 3C               inc a
 373+ 9F93 32 F6 88         ld (Incrementa_puntero_backup),a
 374+ 9F96
 375+ 9F96 CD 0B A0         call Incrementa_Puntero_indice_mov
 376+ 9F99 2A EF 88         ld hl,(Puntero_indice_mov)
 377+ 9F9C 22 F3 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9F9F C9               ret
 379+ 9FA0
 380+ 9FA0              ; ---------- --------- --------- ---------- ----------
 381+ 9FA0              ;
 382+ 9FA0              ;   07/7/23
 383+ 9FA0              ;
 384+ 9FA0              ;   Inicia_Repetimos_movimiento
 385+ 9FA0              ;
 386+ 9FA0              ;
 387+ 9FA0
 388+ 9FA0              Inicia_Repetimos_movimiento
 389+ 9FA0
 390+ 9FA0              ; Iniciamos (Repetimos_movimiento).
 391+ 9FA0
 392+ 9FA0 DD 2A F1 88      ld ix,(Puntero_mov)
 393+ 9FA4 DD 7E 02         ld a,(ix+2)
 394+ 9FA7 32 F9 88         ld (Repetimos_movimiento),a
 395+ 9FAA
 396+ 9FAA C9               ret
 397+ 9FAB
 398+ 9FAB              ; ---------- --------- --------- ---------- ----------
 399+ 9FAB              ;
 400+ 9FAB              ;   26/6/23
 401+ 9FAB              ;
 402+ 9FAB              ;   Inicia_Puntero_mov
 403+ 9FAB              ;
 404+ 9FAB              ;
 405+ 9FAB
 406+ 9FAB 2A EF 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FAE 5E               ld e,(hl)
 408+ 9FAF 23               inc hl
 409+ 9FB0 56               ld d,(hl)
 410+ 9FB1 EB               ex de,hl
 411+ 9FB2 22 F1 88         ld (Puntero_mov),hl
 412+ 9FB5 C9               ret
 413+ 9FB6
 414+ 9FB6              ; ---------- --------- --------- ---------- ----------
 415+ 9FB6              ;
 416+ 9FB6              ;   27/06/23
 417+ 9FB6              ;
 418+ 9FB6              ;   Aplica_movimiento.
 419+ 9FB6
 420+ 9FB6              Aplica_desplazamiento
 421+ 9FB6
 422+ 9FB6              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FB6
 424+ 9FB6 2A F1 88         ld hl, (Puntero_mov)
 425+ 9FB9
 426+ 9FB9 7E               ld a,(hl)
 427+ 9FBA E6 F0            and $f0
 428+ 9FBC C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FBD
 430+ 9FBD CB 7E            bit 7,(hl)
 431+ 9FBF 28 03            jr z,1F
 432+ 9FC1 CD DF 99         call Mov_up
 433+ 9FC4 2A F1 88     1 ld hl, (Puntero_mov)
 434+ 9FC7 CB 76            bit 6,(hl)
 435+ 9FC9 28 03            jr z,2F
 436+ 9FCB CD AE 99         call Mov_down
 437+ 9FCE 2A F1 88     2 ld hl, (Puntero_mov)
 438+ 9FD1 CB 6E            bit 5,(hl)
 439+ 9FD3 28 03            jr z,3F
 440+ 9FD5 CD 40 9B         call Mov_left
 441+ 9FD8 2A F1 88     3 ld hl, (Puntero_mov)
 442+ 9FDB CB 66            bit 4,(hl)
 443+ 9FDD C8               ret z
 444+ 9FDE CD 22 9A         call Mov_right
 445+ 9FE1 C9               ret
 446+ 9FE2
 447+ 9FE2              ; ---------- --------- --------- ---------- ----------
 448+ 9FE2              ;
 449+ 9FE2              ;   26/06/23
 450+ 9FE2              ;
 451+ 9FE2              ;   Ajusta_velocidad_desplazamiento.
 452+ 9FE2
 453+ 9FE2              Ajusta_velocidad_desplazamiento
 454+ 9FE2
 455+ 9FE2              ; 1er byte de la cadena de movimiento.
 456+ 9FE2              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ 9FE2
 458+ 9FE2 CD 00 A0         call Extrae_nibble_alto
 459+ 9FE5
 460+ 9FE5 32 DB 88         ld (Vel_up),a
 461+ 9FE8 79               ld a,c
 462+ 9FE9 E6 0F            and $0f
 463+ 9FEB 32 DC 88         ld (Vel_down),a
 464+ 9FEE
 465+ 9FEE              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ 9FEE              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ 9FEE
 468+ 9FEE 23               inc hl
 469+ 9FEF CD 00 A0         call Extrae_nibble_alto
 470+ 9FF2
 471+ 9FF2 32 D9 88         ld (Vel_left),a
 472+ 9FF5 79               ld a,c
 473+ 9FF6 E6 0F            and $0f
 474+ 9FF8 32 DA 88         ld (Vel_right),a
 475+ 9FFB
 476+ 9FFB              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ 9FFB
 478+ 9FFB 23               inc hl
 479+ 9FFC 22 F1 88         ld (Puntero_mov),hl
 480+ 9FFF C9               ret
 481+ A000
 482+ A000 06 04        Extrae_nibble_alto ld b,4
 483+ A002 7E               ld a,(hl)
 484+ A003 4F               ld c,a
 485+ A004 E6 F0            and $f0
 486+ A006 CB 3F        1 srl a
 487+ A008 10 FC            djnz 1B
 488+ A00A C9               ret
 489+ A00B
 490+ A00B              ; ---------- --------- --------- ---------- ----------
 491+ A00B              ;
 492+ A00B              ;   5/7/23
 493+ A00B              ;
 494+ A00B              ;   Incrementa_Puntero_indice_mov
 495+ A00B
 496+ A00B              Incrementa_Puntero_indice_mov
 497+ A00B
 498+ A00B 21 F5 88         ld hl,Incrementa_puntero
 499+ A00E 34               inc (hl)
 500+ A00F
 501+ A00F 2A EF 88         ld hl,(Puntero_indice_mov)
 502+ A012 01 02 00         ld bc,2
 503+ A015 A7               and a
 504+ A016 09               add hl,bc
 505+ A017 22 EF 88         ld (Puntero_indice_mov),hl
 506+ A01A
 507+ A01A 7E               ld a,(hl)
 508+ A01B A7               and a
 509+ A01C
 510+ A01C              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A01C
 512+ A01C              ;    jr z,$
 513+ A01C
 514+ A01C              ;! Reinicia el Patrón de movimiento.
 515+ A01C
 516+ A01C CC 21 A0         call z,Inicializa_Puntero_indice_mov
 517+ A01F
 518+ A01F AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A020
 520+ A020 C9               ret
 521+ A021
 522+ A021
 523+ A021              ; ---------- --------- --------- ---------- ----------
 524+ A021              ;
 525+ A021              ;   24/07/23
 526+ A021              ;
 527+ A021              ;   Inicializa_Puntero_indice_mov
 528+ A021
 529+ A021              Inicializa_Puntero_indice_mov
 530+ A021
 531+ A021              ; Existe etiqueta de bucle principal???
 532+ A021
 533+ A021 2A F3 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A024 24               inc h
 535+ A025 25               dec h
 536+ A026 28 05            jr z,2F
 537+ A028
 538+ A028 22 EF 88         ld (Puntero_indice_mov),hl
 539+ A02B 18 14            jr 3F
 540+ A02D
 541+ A02D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A02D
 543+ A02D 3A F5 88     2 ld a,(Incrementa_puntero)
 544+ A030 47               ld b,a
 545+ A031
 546+ A031 2A EF 88         ld hl,(Puntero_indice_mov)
 547+ A034 2B           1 dec hl
 548+ A035 2B               dec hl
 549+ A036 10 FC            djnz 1B
 550+ A038 22 EF 88         ld (Puntero_indice_mov),hl
 551+ A03B
 552+ A03B AF               xor a
 553+ A03C 32 F5 88         ld (Incrementa_puntero),a
 554+ A03F 18 06            jr 4F
 555+ A041
 556+ A041 3A F6 88     3 ld a,(Incrementa_puntero_backup)
 557+ A044 32 F5 88         ld (Incrementa_puntero),a
 558+ A047 C9           4 ret
 559+ A048
 560+ A048
 561+ A048
# file closed: Patrones_de_mov.asm
1620  A048              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A048              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A048              ;
   3+ A048              ;	4/9/23
   4+ A048              ;
   5+ A048              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A048
   7+ A048              ;	ADC HL,SP	LD (addr),SP
   8+ A048              ;	ADD HL,SP	LD SP,(addr)
   9+ A048              ;	ADD IX,SP	LD SP,nn
  10+ A048              ; 	ADD IY,SP	LD SP,HL
  11+ A048              ;				LD SP,IX
  12+ A048              ;	DEC SP		LD SP,IY
  13+ A048
  14+ A048              ;	EX (SP),HL
  15+ A048              ;	EX (SP),IX
  16+ A048              ;	EX (SP),IY
  17+ A048
  18+ A048              ;	INC SP
  19+ A048
  20+ A048                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 12 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 01 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1A 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A EE 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 20 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 18 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 01 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1A 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A EE 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 20 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 12 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 18 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 12 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 36 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 113+ 7FFE              ;
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ac
 118+ 72AC
 119+ 72AC              Gestiona_albumes_de_fotos
 120+ 72AC
 121+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72AC              ;   Vaciamos Album_de_fotos.
 123+ 72AC
 124+ 72AC              ;   Album_de_fotos. Contiene datos ???
 125+ 72AC
 126+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72AF 7E               ld a,(hl)
 128+ 72B0 A7               and a
 129+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72B3
 131+ 72B3 2A 1C 89         ld hl,(End_Snapshot)
 132+ 72B6 01 00 70         ld bc,Album_de_fotos
 133+ 72B9 11 01 70         ld de,Album_de_fotos+1
 134+ 72BC AF               xor a
 135+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72BE
 137+ 72BE CD 4E 73         call Limpia_album
 138+ 72C1
 139+ 72C1 21 00 00         ld hl,0
 140+ 72C4 22 1C 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 72C7
 142+ 72C7              ; ----- ----- ----- -----
 143+ 72C7
 144+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 145+ 72C7
 146+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 72CA 7E               ld a,(hl)
 148+ 72CB A7               and a
 149+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 72CE              ;                               ; _ información del album2 al album1.
 151+ 72CE
 152+ 72CE              ; ----- ----- ----- -----
 153+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 72CE
 155+ 72CE 2A 22 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 72D7
 159+ 72D7 CD 4E 73         call Limpia_album
 160+ 72DA
 161+ 72DA              ;   Calculamos (End_Snapshot)
 162+ 72DA
 163+ 72DA A7               and a
 164+ 72DB ED 4A            adc hl,bc
 165+ 72DD 22 1C 89         ld (End_Snapshot),hl
 166+ 72E0
 167+ 72E0              ;   Limpiamos Album_de_fotos_1.
 168+ 72E0
 169+ 72E0 2A 22 89         ld hl,(End_Snapshot_1)
 170+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 171+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 172+ 72E9 AF               xor a
 173+ 72EA 02               ld (bc),a
 174+ 72EB
 175+ 72EB CD 4E 73         call Limpia_album
 176+ 72EE
 177+ 72EE 21 00 00         ld hl,0
 178+ 72F1 22 22 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 72F4
 180+ 72F4              ; ----- ----- ----- -----
 181+ 72F4
 182+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 183+ 72F4
 184+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 72F7 7E               ld a,(hl)
 186+ 72F8 A7               and a
 187+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 72FB              ;                               ; _ información del album3 al album2.
 189+ 72FB              ; ----- ----- ----- -----
 190+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 72FB
 192+ 72FB 2A 26 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7304
 196+ 7304 CD 4E 73         call Limpia_album
 197+ 7307
 198+ 7307              ;   Calculamos (End_Snapshot_1):
 199+ 7307
 200+ 7307 A7               and a
 201+ 7308 ED 4A            adc hl,bc
 202+ 730A 22 22 89         ld (End_Snapshot_1),hl
 203+ 730D
 204+ 730D              ;   Limpiamos Album_de_fotos_2.
 205+ 730D
 206+ 730D 2A 26 89         ld hl,(End_Snapshot_2)
 207+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7316 AF               xor a
 210+ 7317 02               ld (bc),a
 211+ 7318
 212+ 7318 CD 4E 73         call Limpia_album
 213+ 731B
 214+ 731B 21 00 00         ld hl,0
 215+ 731E 22 26 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7321
 217+ 7321              ; ----- ----- ----- -----
 218+ 7321
 219+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7321
 221+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7324 7E               ld a,(hl)
 223+ 7325 A7               and a
 224+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7327
 226+ 7327              ; ----- ----- ----- -----
 227+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7327
 229+ 7327 2A 2A 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7330
 233+ 7330 CD 4E 73         call Limpia_album
 234+ 7333
 235+ 7333              ;   Calculamos (End_Snapshot_2):
 236+ 7333
 237+ 7333 A7               and a
 238+ 7334 ED 4A            adc hl,bc
 239+ 7336 22 26 89         ld (End_Snapshot_2),hl
 240+ 7339
 241+ 7339              ;   Limpiamos Album_de_fotos_3.
 242+ 7339
 243+ 7339 2A 2A 89         ld hl,(End_Snapshot_3)
 244+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7342 AF               xor a
 247+ 7343 02               ld (bc),a
 248+ 7344
 249+ 7344 CD 4E 73         call Limpia_album
 250+ 7347
 251+ 7347 21 00 00         ld hl,0
 252+ 734A 22 2A 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 734D C9               ret
 254+ 734E
 255+ 734E              ; ----------------------------------------------------
 256+ 734E              ;
 257+ 734E              ;   10/8/23
 258+ 734E              ;
 259+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 734E              ;
 261+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 734E              ;           BC ..... Dirección de inicio del álbum.
 263+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 734E
 265+ 734E              ;    ld hl,(End_Snapshot)
 266+ 734E              ;    ld bc,Album_de_fotos
 267+ 734E              ;    ld de,Album_de_fotos+1
 268+ 734E
 269+ 734E              ;   MODIFICA: A,HL,BC y DE.
 270+ 734E
 271+ 734E              Limpia_album
 272+ 734E D5               push de                     ; Guardo DESTINO.
 273+ 734F C5               push bc                     ; Guardo ORIGEN.
 274+ 7350 ED 42            sbc hl,bc
 275+ 7352 4D               ld c,l
 276+ 7353 44               ld b,h
 277+ 7354 E1               pop hl
 278+ 7355 C5               push bc
 279+ 7356 ED B0            ldir
 280+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 735A C9               ret                         ; _ a otro).
 283+ 735B              ;
 284+ 735B
 285+ 735B              ; -----------------------------------------------
 286+ 735B
 287+ 735B
 288+ 735B
 289+ 735B
 290+ 735B
# file closed: Guarda_foto_registros.asm
1621  735B
1622  735B              	SAVESNA "Pruebas.sna", START
1623  735B
1624  735B
1625  735B
1626  735B
# file closed: Banco_de_pruebas.asm
