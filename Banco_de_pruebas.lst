# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15              ;	call Frame
  34  AA15 CD A2 8E     	call Pinta_Amadeus
  35  AA18 CD E5 8A     	call Gestiona_Amadeus
  36  AA1B
  37  AA1B FD E1        	pop iy
  38  AA1D DD E1        	pop ix
  39  AA1F F1           	pop af
  40  AA20 C1           	pop bc
  41  AA21 D1           	pop de
  42  AA22 E1           	pop hl
  43  AA23 D9           	exx
  44  AA24 C1           	pop bc
  45  AA25 D1           	pop de
  46  AA26 E1           	pop hl
  47  AA27 08           	ex af,af'
  48  AA28 F1           	pop af
  49  AA29 08           	ex af,af'
  50  AA2A D9           	exx
  51  AA2B
  52  AA2B ED 7B 19 89  	ld sp,(Stack_3)
  53  AA2F
  54  AA2F FB           	ei
  55  AA30 ED 4D        	reti
  56  AA32
  57  AA32              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  58  AA32
  59  AA32              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA32              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA32              ;
   3+ AA32              ;	17/02/23
   4+ AA32              ;
   5+ AA32              ;	Sprites e índices.
   6+ AA32
   7+ AA32              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  60  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 86 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 86 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  61  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD E0 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD E0 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD E0 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD E0 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 18 00     	ld bc,24
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 0A        	cp 10
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 0A        	ld a,10
 209+ 88BA 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  62  88C5
  63  88C5              ; ******************************************************************************************************************************************************************************************
  64  88C5              ; Constantes.
  65  88C5              ; ******************************************************************************************************************************************************************************************
  66  88C5              ;
  67  88C5              ; 4/9/23
  68  88C5              ;
  69  88C5              ; Constantes generales.
  70  88C5              ;
  71  88C5
  72  88C5              Sprite_vacio equ $f000
  73  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  74  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  75  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  76  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  77  88C5
  78  88C5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  79  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  80  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  81  88C5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  82  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  83  88C5              ;
  84  88C5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  85  88C5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  86  88C5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  87  88C5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  88  88C5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  89  88C5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  90  88C5
  91  88C5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
  92  88C5
  93  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  94  88C5
  95  88C5              ; ******************************************************************************************************************************************************************************************
  96  88C5              ; Variables.
  97  88C5              ; ******************************************************************************************************************************************************************************************
  98  88C5              ;
  99  88C5              ; 28/07/23
 100  88C5              ;
 101  88C5              ; Variables de DRAW. (Motor principal).
 102  88C5              ;
 103  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 104  88C5
 105  88C5 00           Filas db 0												; Filas. [DRAW]
 106  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 107  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 108  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 109  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 110  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 111  88CD
 112  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 113  88CD
 114  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 115  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 116  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 117  88CE 00           Attr db 0												; Atributos de la entidad:
 118  88CF
 119  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 120  88CF              ;
 121  88CF              ;	COLORES: 0 ..... NEGRO
 122  88CF              ;    		 1 ..... AZUL
 123  88CF              ; 			 2 ..... ROJO
 124  88CF              ;			 3 ..... MAGENTA
 125  88CF              ; 			 4 ..... VERDE
 126  88CF              ; 			 5 ..... CIAN
 127  88CF              ;			 6 ..... AMARILLO
 128  88CF              ; 			 7 ..... BLANCO
 129  88CF
 130  88CF 00 00        Indice_Sprite_der defw 0
 131  88D1 00 00        Indice_Sprite_izq defw 0
 132  88D3 00 00        Puntero_DESPLZ_der defw 0
 133  88D5 00 00        Puntero_DESPLZ_izq defw 0
 134  88D7
 135  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 136  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 137  88DA
 138  88DA              ; Variables de objeto. (Características).
 139  88DA
 140  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 141  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 142  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 143  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 144  88DE
 145  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 146  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 147  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 148  88DF 00 00 00...  Variables_de_borrado ds 6
 149  88E5
 150  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 151  88E7 00 00        	defw 0
 152  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 153  88EB 00 00 00 00  	db 0,0,0,0
 154  88EF
 155  88EF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 156  88EF
 157  88EF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 158  88F0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 159  88F0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 160  88F0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 161  88F0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 162  88F0              ;
 163  88F0              ; 														DESCRIPCIÖN:
 164  88F0              ;
 165  88F0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 166  88F0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 167  88F0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 168  88F0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 169  88F0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 170  88F0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 171  88F0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 172  88F0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 173  88F0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 174  88F0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 175  88F0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 176  88F0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 177  88F0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 178  88F0              ;
 179  88F0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 180  88F0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 181  88F0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 182  88F0
 183  88F0 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 184  88F1
 185  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 186  88F1
 187  88F1 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 188  88F2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 189  88F4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 190  88F6 00 00        Puntero_indice_mov_bucle defw 0							;
 191  88F8              ;
 192  88F8              ;
 193  88F8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 194  88F9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 195  88F9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 196  88F9 00           Incrementa_puntero_backup db 0
 197  88FA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 198  88FB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 199  88FB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 200  88FC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 201  88FD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 202  88FE              ;
 203  88FE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 204  88FE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 205  88FE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 206  88FE              ;
 207  88FE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 208  88FE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 209  88FE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 210  88FE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 211  88FE              ;
 212  88FE              ;														;	"$ff" ..... Bucle infinito de repetición.
 213  88FE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 214  88FE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 215  88FE
 216  88FE
 217  88FE              ; Variables de funcionamiento. [DRAW].
 218  88FE
 219  88FE 00           Columnas db 0
 220  88FF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 221  8901              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 222  8901 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 223  8902
 224  8902              ; variables de control general.
 225  8902
 226  8902 00           Ctrl_2 db 0
 227  8903              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 228  8903              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 229  8903              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 230  8903              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 231  8903              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 232  8903              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 233  8903              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 234  8903              ;
 235  8903              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 236  8903              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 237  8903              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 238  8903              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 239  8903              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 240  8903
 241  8903 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 242  8904
 243  8904              ;! 63 Bytes por entidad.
 244  8904
 245  8904              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 246  8904              ;					         		---------;      ;---------
 247  8904
 248  8904
 249  8904              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 250  8904
 251  8904 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 252  8905
 253  8905              ;														DESCRIPCIÓN:
 254  8905              ;
 255  8905              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 256  8905              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 257  8905              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 258  8905              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 259  8905              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 260  8905              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 261  8905
 262  8905              ;														BIT 3, Recarga de nueva oleada.
 263  8905              ;														BIT 4, Recarga de nueva oleada.
 264  8905              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 265  8905              ;														BIT 6, **** Frame completo.
 266  8905              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 267  8905
 268  8905 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 269  8907              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 270  8907              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 271  8907              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 272  8907
 273  8907
 274  8907
 275  8907              ; Gestión de ENTIDADES y CAJAS.
 276  8907
 277  8907 00 00        Puntero_store_caja defw 0
 278  8909 00 00        Puntero_restore_caja defw 0
 279  890B 00 00        Indice_restore_caja defw 0
 280  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 281  890E 00           Numero_parcial_de_entidades db 0
 282  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 283  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 284  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 285  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 286  8911              ;														; _ (Numero_de_malotes)="0".
 287  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 288  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 289  8915              ;														; _ puntero (Indice_entidades).
 290  8915
 291  8915
 292  8915              ;---------------------------------------------------------------------------------------------------------------
 293  8915              ;
 294  8915              ;	2/9/23
 295  8915              ;
 296  8915              ;	Álbumes.
 297  8915
 298  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 299  8917              ;														; _variable para almacenar lo posición del puntero_
 300  8917              ; 														; _de pila, SP.
 301  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 302  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 303  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 304  891B 00 00        Stack_snapshot defw 0
 305  891D 00 00        Stack_snapshot_disparos defw 0
 306  891F
 307  891F 00 00        End_Snapshot defw 0
 308  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 309  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 310  8923              ;														; _el snapshot de los registros del siguiente disparo.
 311  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 312  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 313  8925 00 00        End_Snapshot_1 defw 0
 314  8927 00 00        End_Snapshot_disparos_1 defw 0
 315  8929 00 00        End_Snapshot_2 defw 0
 316  892B 00 00        End_Snapshot_disparos_2 defw 0
 317  892D 00 00        End_Snapshot_3 defw 0
 318  892F 00 00        End_Snapshot_disparos_3 defw 0
 319  8931
 320  8931 00 00        Puntero_indice_album_de_fotos defw 0
 321  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 322  8935
 323  8935 00 00        Puntero_indice_End_Snapshot defw 0
 324  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 325  8939 00 00        Puntero_de_End_Snapshot defw 0
 326  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 327  893D
 328  893D              ;---------------------------------------------------------------------------------------------------------------
 329  893D
 330  893D              ; Gestión de Disparos.
 331  893D
 332  893D 00           Numero_de_disparotes db 0
 333  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 334  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 335  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 336  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 337  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 338  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 339  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 340  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 341  8945              ;														; _produzca colisión.
 342  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 343  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 344  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 345  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 346  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 347  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 348  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 349  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 350  8950
 351  8950              ;---------------------------------------------------------------------------------------------------------------
 352  8950
 353  8950              ; Relojes y temporizaciones.
 354  8950
 355  8950 00           Contador_de_frames db 0
 356  8951 00           Contador_de_frames_2 db 0
 357  8952
 358  8952 04           Clock_explosion db 4
 359  8953 1E           Clock_Entidades_en_curso db 30
 360  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 361  8955              ;														; Repite la oleada de entidades.
 362  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 363  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 364  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 365  8958
 366  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 367  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 368  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 369  895B
 370  895B              ;---------------------------------------------------------------------------------------------------------------
 371  895B
 372  895B              ; Gestión de NIVELES.
 373  895B
 374  895B 00           Nivel db 0												; Nivel actual del juego.
 375  895C 00 00        Puntero_indice_NIVELES defw 0
 376  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 377  8960              ; 														; _ que definen el NIVEL.
 378  8960              ; Y todo comienza aquí .....
 379  8960              ;
 380  8960              ; Rutina principal *************************************************************************************************************************************************************************
 381  8960              ;
 382  8960              ;	14/11/22
 383  8960
 384  8960              START
 385  8960
 386  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 387  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 388  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 389  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 390  8969 F3           	DI
 391  896A
 392  896A 3E 07        	ld a,%00000111
 393  896C CD B3 99     	call Cls
 394  896F
 395  896F CD B9 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 396  8972
 397  8972              ; INICIALIZACIÓN.
 398  8972
 399  8972 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 400  8975
 401  8975 CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 402  8978
 403  8978 CD E2 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 404  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 405  897B CD F8 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 406  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 407  897E              ; ----------
 408  897E
 409  897E CD 69 8D     	call Restore_entidad
 410  8981
 411  8981 21 0E 89     	ld hl,Numero_parcial_de_entidades
 412  8984 46           	ld b,(hl)
 413  8985 04           	inc b
 414  8986 05           	dec b
 415  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 416  8989
 417  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 418  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 419  8989              ;	Pintamos el resto de entidades:
 420  8989
 421  8989              ;	INICIA ENTIDADES !!!!!
 422  8989
 423  8989 C5           1 push bc  												; Guardo el contador de entidades.
 424  898A CD 89 8B     	call Inicia_entidad
 425  898D C1           	pop bc
 426  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 427  8990
 428  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 429  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 430  8990
 431  8990 3A 04 89     	ld a,(Ctrl_1)
 432  8993 CB 5F        	bit 3,a
 433  8995 20 15        	jr nz,5F											; Loop
 434  8997
 435  8997              ; 	INICIA AMADEUS !!!!!
 436  8997
 437  8997 CD 90 8D     3 call Restore_Amadeus
 438  899A CD E6 8C     	call Inicia_Puntero_objeto
 439  899D CD A6 93     	call Draw
 440  89A0 CD A0 7F     	call Guarda_foto_registros
 441  89A3 CD 1D 8E     	call Guarda_datos_de_borrado_Amadeus
 442  89A6
 443  89A6 11 9E 85     	ld de,Amadeus_db
 444  89A9 CD A2 8D     	call Store_Amadeus
 445  89AC
 446  89AC              ; 	INICIA DISPAROS !!!!!
 447  89AC
 448  89AC              ;	call Inicia_Puntero_Disparo_Entidades
 449  89AC              ;	call Inicia_Puntero_Disparo_Amadeus
 450  89AC
 451  89AC              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 452  89AC
 453  89AC CD E2 8B     5 call Inicia_punteros_de_cajas
 454  89AF CD 69 8D     	call Restore_entidad
 455  89B2
 456  89B2 3A 04 89     	ld a,(Ctrl_1)
 457  89B5 CB 5F        	bit 3,a
 458  89B7 28 0A        	jr z,6F
 459  89B9
 460  89B9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 461  89B9
 462  89B9 21 04 89     	ld hl,Ctrl_1
 463  89BC CB 9E        	res 3,(hl)
 464  89BE CD 90 8C     	call Calcula_numero_de_malotes
 465  89C1 18 0A        	jr Main
 466  89C3
 467  89C3              ; ----------
 468  89C3
 469  89C3 3A 0E 89     6 ld a,(Numero_parcial_de_entidades)
 470  89C6 32 10 89     	ld (Numero_de_malotes),a
 471  89C9
 472  89C9              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 473  89C9              ; _ tenemos calculado (Numero_de_malotes).
 474  89C9              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 475  89C9              ; _ para situarnos en el siguiente album.
 476  89C9
 477  89C9 CD 29 8C     	call Avanza_puntero_de_album_de_fotos_y_malotes
 478  89CC F3           	di
 479  89CD              ; ------------------------------------
 480  89CD
 481  89CD              Main
 482  89CD              ;
 483  89CD              ;	3/8/23
 484  89CD
 485  89CD 3E 01            ld a,1
 486  89CF D3 FE        	out ($fe),a											; Azul.
 487  89D1
 488  89D1 FB           	ei
 489  89D2
 490  89D2 3A 53 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 491  89D5 47           	ld b,a
 492  89D6 3A 50 89     	ld a,(Contador_de_frames)
 493  89D9 B8           	cp b
 494  89DA 20 18        	jr nz,13F
 495  89DC
 496  89DC 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 497  89DF 47           	ld b,a
 498  89E0 3A 0F 89     	ld a,(Entidades_en_curso)
 499  89E3 B8           	cp b
 500  89E4 28 0E        	jr z,13F
 501  89E6 30 0C        	jr nc,13F
 502  89E8
 503  89E8 3C           	inc a
 504  89E9 32 0F 89     	ld (Entidades_en_curso),a
 505  89EC
 506  89EC 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 507  89EF
 508  89EF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 509  89EF              ;! _ IMPREDECIBLE !!!!
 510  89EF
 511  89EF C6 64        	add 100
 512  89F1 32 53 89     	ld (Clock_Entidades_en_curso),a
 513  89F4
 514  89F4              ; Habilita disparos.
 515  89F4
 516  89F4 21 55 89     13 ld hl,Disparo_Amadeus
 517  89F7 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 518  89FA CD 77 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 519  89FD
 520  89FD 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 521  8A00 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 522  8A03 CD 77 9D     	call Habilita_disparos
 523  8A06
 524  8A06              ; COLISIONES.
 525  8A06
 526  8A06 CD 88 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 527  8A09
 528  8A09              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 529  8A09              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 530  8A09              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 531  8A09
 532  8A09 AF           	xor a
 533  8A0A 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 534  8A0D
 535  8A0D CD E2 8B     	call Inicia_punteros_de_cajas
 536  8A10 CD 69 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 537  8A13              ; 														; _ en DRAW.
 538  8A13 3A C5 88     	ld a,(Filas)
 539  8A16 A7           	and a
 540  8A17 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 541  8A19 CD 7B 8D     	call Incrementa_punteros_de_cajas
 542  8A1C 18 F2        	jr 12B
 543  8A1E
 544  8A1E              ; ---------------------------------------------------------------------------------------
 545  8A1E
 546  8A1E 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 547  8A21 47               ld b,a
 548  8A22 A7           	and a
 549  8A23 20 14        	jr nz,11F
 550  8A25
 551  8A25 21 04 89     	ld hl,Ctrl_1
 552  8A28 CB 66        	bit 4,(hl)
 553  8A2A C2 B6 8A     	jp nz,16F
 554  8A2D
 555  8A2D 21 04 89     	ld hl,Ctrl_1
 556  8A30 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 557  8A32
 558  8A32 3A 50 89     	ld a,(Contador_de_frames)
 559  8A35 3C           	inc a
 560  8A36 32 54 89     	ld (Activa_recarga_cajas),a
 561  8A39
 562  8A39              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 563  8A39
 564  8A39 3A 0F 89     11 ld a,(Entidades_en_curso)
 565  8A3C A7           	and a
 566  8A3D CA B6 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 567  8A40 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 568  8A41
 569  8A41              ; Código que ejecutamos con cada entidad:
 570  8A41              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 571  8A41
 572  8A41 C5           15 push bc 												; Nº de entidades en curso.
 573  8A42
 574  8A42              ; Impacto ???
 575  8A42
 576  8A42 3A DE 88     	ld a,(Impacto)
 577  8A45 A7           	and a
 578  8A46 28 2D        	jr z,8F
 579  8A48
 580  8A48              ; Hay Impacto en esta entidad.
 581  8A48
 582  8A48 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 583  8A4B 35           	dec (hl)
 584  8A4C 20 62        	jr nz,17F
 585  8A4E
 586  8A4E              ;! Velocidad de la animación de la explosión.
 587  8A4E
 588  8A4E 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 589  8A50              ;														; _,(velocidad de la explosión).
 590  8A50 CD 99 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 591  8A53
 592  8A53              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 593  8A53
 594  8A53 3A 02 89     	ld a,(Ctrl_2)
 595  8A56 CB 4F        	bit 1,a
 596  8A58 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 597  8A5A
 598  8A5A              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 599  8A5A
 600  8A5A 3A CD 88     	ld a,(CTRL_DESPLZ)
 601  8A5D A7           	and a
 602  8A5E 20 08        	jr nz,18F
 603  8A60
 604  8A60 21 84 84     	ld hl,Indice_Explosion_2x2-2
 605  8A63 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 606  8A66 18 06        	jr 19F
 607  8A68
 608  8A68 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 609  8A6B 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 610  8A6E
 611  8A6E 21 02 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 612  8A71 CB CE        	set 1,(hl)
 613  8A73 18 22        	jr 7F
 614  8A75
 615  8A75              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 616  8A75              ; _con las coordenadas de la entidad almacenada en DRAW.
 617  8A75
 618  8A75 3A 04 89     8 ld a,(Ctrl_1)
 619  8A78 CB 57        	bit 2,a
 620  8A7A 28 1B        	jr z,7F
 621  8A7C
 622  8A7C 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 623  8A7F EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 624  8A80              ;														; E contiene la coordenada_X del disparo.
 625  8A80 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 626  8A83              ;														; H FILA, (Coordenada_y de la entidad).
 627  8A83 A7           	and a
 628  8A84 ED 52        	sbc hl,de
 629  8A86
 630  8A86 CD BF 92     	call Determina_resultado_comparativa
 631  8A89
 632  8A89 78           	ld a,b
 633  8A8A A7           	and a
 634  8A8B 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 635  8A8D
 636  8A8D              ; ----- ----- -----
 637  8A8D
 638  8A8D 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 639  8A8F 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 640  8A92
 641  8A92 21 04 89     	ld hl,Ctrl_1
 642  8A95 CB 96        	res 2,(hl)
 643  8A97
 644  8A97 CD 12 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 645  8A9A
 646  8A9A 3A EF 88     	ld a,(Ctrl_0)
 647  8A9D CB 67        	bit 4,a
 648  8A9F 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 649  8AA1
 650  8AA1              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 651  8AA1              ; [[[
 652  8AA1 CD 04 8E     	call Detecta_disparo_entidad
 653  8AA4              ; ]]]
 654  8AA4 CD A9 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 655  8AA7
 656  8AA7 21 EF 88     	ld hl,Ctrl_0
 657  8AAA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 658  8AAC AF           	xor a
 659  8AAD 32 F0 88     	ld (Obj_dibujado),a
 660  8AB0
 661  8AB0 CD 2E 8D     17 call Store_Restore_cajas
 662  8AB3
 663  8AB3 C1           	pop bc
 664  8AB4 10 8B        	djnz 15B
 665  8AB6
 666  8AB6              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 667  8AB6              ; Hemos gestionado todas las unidades.
 668  8AB6              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 669  8AB6
 670  8AB6              ;	ld hl,Ctrl_1
 671  8AB6              ;	res 2,(hl)
 672  8AB6
 673  8AB6 CD 29 8C     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 674  8AB9              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 675  8AB9              ;														; _ interrupción.
 676  8AB9              ; ----------------------------------------
 677  8AB9
 678  8AB9 3A 04 89     	ld a,(Ctrl_1) 										; Existe Loop?
 679  8ABC CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 680  8ABE CA CD 89     	jp z,Main
 681  8AC1
 682  8AC1 3A 50 89     	ld a,(Contador_de_frames)
 683  8AC4 47           	ld b,a
 684  8AC5 3A 54 89     	ld a,(Activa_recarga_cajas)
 685  8AC8 B8           	cp b
 686  8AC9 28 08        	jr z,20F
 687  8ACB
 688  8ACB 21 04 89     	ld hl,Ctrl_1
 689  8ACE CB E6        	set 4,(hl)
 690  8AD0 C3 CD 89     	jp Main
 691  8AD3
 692  8AD3 21 04 89     20 ld hl,Ctrl_1
 693  8AD6 CB A6        	res 4,(hl)
 694  8AD8
 695  8AD8 F3           	di
 696  8AD9
 697  8AD9 3A 50 89     	ld a,(Contador_de_frames)
 698  8ADC
 699  8ADC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 700  8ADC              ;! _ IMPREDECIBLE !!!!
 701  8ADC
 702  8ADC C6 0A        	add 10
 703  8ADE 32 53 89     	ld (Clock_Entidades_en_curso),a
 704  8AE1
 705  8AE1 C3 75 89     	jp 4B
 706  8AE4
 707  8AE4 C9           	ret
 708  8AE5
 709  8AE5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 710  8AE5
 711  8AE5              Gestiona_Amadeus
 712  8AE5
 713  8AE5 3E 04            ld a,4
 714  8AE7 D3 FE        	out ($fe),a											; Azul.
 715  8AE9
 716  8AE9
 717  8AE9 CD 90 8D     	call Restore_Amadeus
 718  8AEC
 719  8AEC              ;! Activa/desactiva impacto con Amadeus.
 720  8AEC
 721  8AEC 3A DE 88     	ld a,(Impacto)
 722  8AEF A7           	and a
 723  8AF0 20 FE        	jr nz,$
 724  8AF2
 725  8AF2 CD 71 8B     	call Mov_Amadeus
 726  8AF5
 727  8AF5 3A EF 88     	ld a,(Ctrl_0)
 728  8AF8 CB 67        	bit 4,a
 729  8AFA 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 730  8AFC
 731  8AFC              ;	jr $
 732  8AFC
 733  8AFC CD A9 8B     	call Guarda_foto_entidad_a_pintar
 734  8AFF CD 1D 8E     	call Guarda_datos_de_borrado_Amadeus
 735  8B02
 736  8B02 21 EF 88     14 ld hl,Ctrl_0
 737  8B05 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 738  8B07
 739  8B07 AF           	xor a
 740  8B08 32 F0 88     	ld (Obj_dibujado),a
 741  8B0B
 742  8B0B 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 743  8B0E CD A2 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 744  8B11
 745  8B11              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 746  8B11
 747  8B11              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 748  8B11
 749  8B11              ;	call Calcula_numero_de_disparotes
 750  8B11
 751  8B11 C9           	ret
 752  8B12
 753  8B12              ; --------------------------------------------------------------------------------------------------------------
 754  8B12              ;
 755  8B12              ;	27/05/23
 756  8B12
 757  8B12              Mov_obj
 758  8B12
 759  8B12 3A 02 89     	ld a,(Ctrl_2)
 760  8B15 CB 4F        	bit 1,a
 761  8B17 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 762  8B19
 763  8B19              ; Explosión:
 764  8B19
 765  8B19 3A 03 89     	ld a,(Frames_explosion)
 766  8B1C A7           	and a
 767  8B1D 20 11        	jr nz,4F
 768  8B1F
 769  8B1F              ; Una alimaña menos!!!!!!!!!1
 770  8B1F
 771  8B1F CD AB 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 772  8B22 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 773  8B25 35           	dec (hl)
 774  8B26 21 0F 89     	ld hl,Entidades_en_curso
 775  8B29 35           	dec (hl)
 776  8B2A 21 0D 89     	ld hl,Numero_de_entidades
 777  8B2D 35           	dec (hl)
 778  8B2E 18 40        	jr 3F
 779  8B30
 780  8B30              ; -----
 781  8B30
 782  8B30              ;	`Movemos´ la explosión.
 783  8B30
 784  8B30 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 785  8B33 23           	inc hl
 786  8B34 23           	inc hl
 787  8B35 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 788  8B38 CD E0 8C     	call Extrae_address
 789  8B3B 22 C9 88     	ld (Puntero_objeto),hl
 790  8B3E
 791  8B3E 21 03 89     	ld hl,Frames_explosion
 792  8B41 35           	dec (hl)
 793  8B42
 794  8B42 CD 99 8B     	call Guarda_foto_entidad_a_borrar
 795  8B45 18 29        	jr 3F
 796  8B47
 797  8B47 AF           2 xor a
 798  8B48 32 F0 88     	ld (Obj_dibujado),a
 799  8B4B 32 EF 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 800  8B4E              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 801  8B4E              ; 														; _de la entidad.
 802  8B4E CD B3 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 803  8B51              ;														; Obj_dibujado="0".
 804  8B51              ; Movemos Entidades malignas.
 805  8B51
 806  8B51              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 807  8B51              ;	and a 												; _a movernos. (Limitador_de_entidades).
 808  8B51              ;	ret z
 809  8B51
 810  8B51 CD 22 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 811  8B54
 812  8B54 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 813  8B57 CB 67        	bit 4,a
 814  8B59 C8           	ret z
 815  8B5A
 816  8B5A              ; Ha habido desplazamiento de la entidad maligna.
 817  8B5A              ; Ha llegado a zona de AMADEUS ???
 818  8B5A
 819  8B5A 3A CC 88     	ld a,(Coordenada_y)
 820  8B5D FE 14        	cp $14
 821  8B5F D4 4D 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 822  8B62              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 823  8B62              ; ---------
 824  8B62
 825  8B62 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 826  8B64 32 F0 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 827  8B67 CD B3 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 828  8B6A CD CA 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 829  8B6D CD 99 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 830  8B70 C9           3 ret													; _de la misma.
 831  8B71
 832  8B71              ; --------------------------------------------------------------------------------------------------------------
 833  8B71              ;
 834  8B71              ;	29/1/23
 835  8B71
 836  8B71              Mov_Amadeus
 837  8B71
 838  8B71 CD CD 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 839  8B74
 840  8B74 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 841  8B77 CB 67        	bit 4,a
 842  8B79 C8           	ret z
 843  8B7A
 844  8B7A              ; ---------
 845  8B7A
 846  8B7A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 847  8B7C 32 F0 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 848  8B7F CD B3 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 849  8B82
 850  8B82 CD 2D 8E     	call Repone_datos_de_borrado
 851  8B85 CD 82 8C     	call Limpia_almacen_de_borrado
 852  8B88
 853  8B88 C9           	ret
 854  8B89
 855  8B89              ; -----------------------------------------------------------------------------------
 856  8B89
 857  8B89 CD E6 8C     Inicia_entidad	call Inicia_Puntero_objeto
 858  8B8C CD C7 99     	call Recompone_posicion_inicio
 859  8B8F CD A6 93     	call Draw
 860  8B92 CD A0 7F     	call Guarda_foto_registros
 861  8B95
 862  8B95              ;	call Guarda_datos_de_borrado
 863  8B95
 864  8B95 CD 2E 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 865  8B98 C9           	ret
 866  8B99
 867  8B99              ; --------------------------------------------------------------------------------------------------------------
 868  8B99              ;
 869  8B99              ;	31/8/23
 870  8B99              ;
 871  8B99              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 872  8B99
 873  8B99              Guarda_foto_entidad_a_borrar
 874  8B99
 875  8B99 CD 8A 96     	call Prepara_draw
 876  8B9C CD BA 95     	call calcula_CColumnass
 877  8B9F CD F1 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 878  8BA2 CD 50 96     	call Define_rutina_de_impresion
 879  8BA5 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 880  8BA8 C9           	ret
 881  8BA9
 882  8BA9              ; --------------------------------------------------------------------------------------------------------------
 883  8BA9              ;
 884  8BA9              ;	31/08/23
 885  8BA9              ;
 886  8BA9              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 887  8BA9              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 888  8BA9
 889  8BA9              Guarda_foto_entidad_a_pintar
 890  8BA9
 891  8BA9 CD D6 8B     	call Repone_pintar
 892  8BAC CD A6 93     	call Draw
 893  8BAF CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 894  8BB2 C9           	ret
 895  8BB3
 896  8BB3              ; --------------------------------------------------------------------------------------------------------------
 897  8BB3              ;
 898  8BB3              ;
 899  8BB3
 900  8BB3 21 C5 88     Prepara_var_pintado_borrado	ld hl,Filas
 901  8BB6 3A F0 88     	ld a,(Obj_dibujado)
 902  8BB9 A7           	and a
 903  8BBA 28 05        	jr z,1F
 904  8BBC 11 E5 88     	ld de,Variables_de_pintado
 905  8BBF 18 03        	jr 2F
 906  8BC1 11 DF 88     1 ld de,Variables_de_borrado
 907  8BC4 01 08 00     2 ld bc,8
 908  8BC7 ED B0        	ldir
 909  8BC9 C9           	ret
 910  8BCA
 911  8BCA              ; --------------------------------------------------------------------------------------------------------------
 912  8BCA
 913  8BCA 21 DF 88     Repone_borrar ld hl,Variables_de_borrado
 914  8BCD 11 C5 88     	ld de,Filas
 915  8BD0 01 08 00     	ld bc,8
 916  8BD3 ED B0        	ldir
 917  8BD5 C9           	ret
 918  8BD6
 919  8BD6 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 920  8BD9 11 C5 88     	ld de,Filas
 921  8BDC 01 08 00     	ld bc,8
 922  8BDF ED B0        	ldir
 923  8BE1 C9           	ret
 924  8BE2
 925  8BE2              ; *************************************************************************************************************************************************************
 926  8BE2              ;
 927  8BE2              ; 8/1/23
 928  8BE2              ;
 929  8BE2              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 930  8BE2              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 931  8BE2              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 932  8BE2
 933  8BE2              ; Destruye HL y DE !!!!!
 934  8BE2
 935  8BE2              Inicia_punteros_de_cajas
 936  8BE2
 937  8BE2 21 8C 85     	ld hl,Indice_de_cajas
 938  8BE5 CD E0 8C         call Extrae_address
 939  8BE8 22 07 89         ld (Puntero_store_caja),hl
 940  8BEB 21 8E 85     	ld hl,Indice_de_cajas+2
 941  8BEE 22 0B 89     	ld (Indice_restore_caja),hl
 942  8BF1 CD E0 8C     	call Extrae_address
 943  8BF4 22 09 89     	ld (Puntero_restore_caja),hl
 944  8BF7 C9               ret
 945  8BF8
 946  8BF8              ; ---------------------------------------------------------------
 947  8BF8              ;
 948  8BF8              ;	9/8/23
 949  8BF8              ;
 950  8BF8              ;	Inicialización y gestión de álbumes de fotos y cajas.
 951  8BF8
 952  8BF8              Inicia_punteros_de_albumes_y_malotes
 953  8BF8
 954  8BF8 21 EC 84     	ld hl,Indice_album_de_fotos
 955  8BFB 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 956  8BFE CD E0 8C     	call Extrae_address
 957  8C01 22 1B 89     	ld (Stack_snapshot),hl
 958  8C04
 959  8C04 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 960  8C07 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 961  8C0A CD E0 8C     	call Extrae_address
 962  8C0D 22 1D 89     	ld (Stack_snapshot_disparos),hl
 963  8C10
 964  8C10 21 FC 84     	ld hl,Indice_End_Snapshot
 965  8C13 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 966  8C16 CD E0 8C     	call Extrae_address
 967  8C19 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 968  8C1C
 969  8C1C 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 970  8C1F 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 971  8C22 CD E0 8C     	call Extrae_address
 972  8C25 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 973  8C28
 974  8C28 C9           	ret
 975  8C29
 976  8C29              ;	2/9/23
 977  8C29
 978  8C29              Avanza_puntero_de_album_de_fotos_y_malotes
 979  8C29
 980  8C29              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 981  8C29
 982  8C29              ; Estamos en el último álbum del índice???.
 983  8C29
 984  8C29 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 985  8C2C 01 F2 84     	ld bc,Indice_album_de_fotos+6
 986  8C2F A7           	and a
 987  8C30 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 988  8C32 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 989  8C34
 990  8C34 21 04 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 991  8C37 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 992  8C39 76           	halt
 993  8C3A C9           	ret
 994  8C3B
 995  8C3B F3           1 di
 996  8C3C 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 997  8C3F 23           	inc hl
 998  8C40 23           	inc hl
 999  8C41 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1000  8C44 CD E0 8C     	call Extrae_address
1001  8C47 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1002  8C4A
1003  8C4A 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1004  8C4D 23           	inc hl
1005  8C4E 23           	inc hl
1006  8C4F 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1007  8C52 CD E0 8C     	call Extrae_address
1008  8C55 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1009  8C58 FB           	ei
1010  8C59
1011  8C59 C9           	ret
1012  8C5A
1013  8C5A              ; *************************************************************************************************************************************************************
1014  8C5A              ;
1015  8C5A              ; 8/1/23
1016  8C5A              ;
1017  8C5A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1018  8C5A
1019  8C5A 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1020  8C5D 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1021  8C60 C9           	ret
1022  8C61 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1023  8C64 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1024  8C67 C9           	ret
1025  8C68
1026  8C68              ; -------------------------------------------------------------------------------------------------------------
1027  8C68              ;
1028  8C68              ; 4/9/23
1029  8C68              ;
1030  8C68
1031  8C68              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1032  8C68
1033  8C68 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
1034  8C6B 7E           	ld a,(hl)
1035  8C6C A7           	and a
1036  8C6D C8           	ret z
1037  8C6E
1038  8C6E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1039  8C71 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1040  8C74 01 0C 00     	ld bc,12
1041  8C77 AF           	xor a
1042  8C78 77           	ld (hl),a
1043  8C79 ED B0        	ldir
1044  8C7B
1045  8C7B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1046  8C7E 22 23 89     	ld (End_Snapshot_Amadeus),hl
1047  8C81
1048  8C81 C9           	ret
1049  8C82
1050  8C82 21 DF 88     Limpia_almacen_de_borrado ld hl,Variables_de_borrado
1051  8C85 11 E0 88     	ld de,Variables_de_borrado+1
1052  8C88 01 05 00     	ld bc,5
1053  8C8B AF           	xor a
1054  8C8C 77           	ld (hl),a
1055  8C8D ED B0        	ldir
1056  8C8F C9           	ret
1057  8C90
1058  8C90              ; -------------------------------------------------------------------------------------------------------------
1059  8C90              ;
1060  8C90              ; 8/9/23
1061  8C90              ;
1062  8C90
1063  8C90              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1064  8C90              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1065  8C90
1066  8C90              Calcula_numero_de_malotes
1067  8C90
1068  8C90 21 00 70     	ld hl,Album_de_fotos
1069  8C93 EB           	ex de,hl
1070  8C94 2A 1F 89     	ld hl,(End_Snapshot)
1071  8C97
1072  8C97 7C           	ld a,h
1073  8C98 A7           	and a
1074  8C99 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1075  8C9B
1076  8C9B 06 00        4 ld b,0
1077  8C9D 7D           	ld a,l
1078  8C9E 93           	sub e
1079  8C9F 28 07        	jr z,1F
1080  8CA1
1081  8CA1              ; Nº de malotes no es "0".
1082  8CA1
1083  8CA1 D6 06        2 sub 6
1084  8CA3 04           	inc b
1085  8CA4 A7           	and a
1086  8CA5 20 FA        	jr nz,2B
1087  8CA7 78           	ld a,b
1088  8CA8
1089  8CA8 32 10 89     1 ld (Numero_de_malotes),a
1090  8CAB C9           	ret
1091  8CAC
1092  8CAC              ; -------------------------------------------------------------------------------------------------------------
1093  8CAC              ;
1094  8CAC              ; 8/9/23
1095  8CAC              ;
1096  8CAC
1097  8CAC              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1098  8CAC              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1099  8CAC
1100  8CAC              Calcula_malotes_Amadeus
1101  8CAC
1102  8CAC 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1103  8CAF EB           	ex de,hl
1104  8CB0 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1105  8CB3
1106  8CB3 7C           	ld a,h
1107  8CB4 A7           	and a
1108  8CB5 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1109  8CB7
1110  8CB7 06 00        	ld b,0
1111  8CB9 7D           	ld a,l
1112  8CBA 93           	sub e
1113  8CBB 28 07        	jr z,1F
1114  8CBD
1115  8CBD              ; Nº de malotes no es "0".
1116  8CBD
1117  8CBD D6 06        2 sub 6
1118  8CBF 04           	inc b
1119  8CC0 A7           	and a
1120  8CC1 20 FA        	jr nz,2B
1121  8CC3 78           	ld a,b
1122  8CC4
1123  8CC4 32 10 89     1 ld (Numero_de_malotes),a
1124  8CC7 C9           	ret
1125  8CC8
1126  8CC8              ; -------------------------------------------------------------------------------------------------------------
1127  8CC8              ;
1128  8CC8              ; 28/2/23
1129  8CC8              ;
1130  8CC8
1131  8CC8              Calcula_numero_de_disparotes
1132  8CC8
1133  8CC8 21 50 71     	ld hl,Album_de_fotos_disparos
1134  8CCB EB           	ex de,hl
1135  8CCC 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1136  8CCF
1137  8CCF 06 00        	ld b,0
1138  8CD1 7D           	ld a,l
1139  8CD2 93           	sub e
1140  8CD3 28 07        	jr z,1F
1141  8CD5
1142  8CD5              ; Nº de malotes no es "0".
1143  8CD5
1144  8CD5 D6 06        2 sub 6
1145  8CD7 04           	inc b
1146  8CD8 A7           	and a
1147  8CD9 20 FA        	jr nz,2B
1148  8CDB 78           	ld a,b
1149  8CDC
1150  8CDC 32 3D 89     1 ld (Numero_de_disparotes),a
1151  8CDF C9           	ret
1152  8CE0
1153  8CE0              ; *************************************************************************************************************************************************************
1154  8CE0              ;
1155  8CE0              ; 20/10/22
1156  8CE0              ;
1157  8CE0              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1158  8CE0              ;
1159  8CE0              ; Destruye el puntero y DE !!!!!
1160  8CE0
1161  8CE0 5E           Extrae_address ld e,(hl)
1162  8CE1 23           	inc hl
1163  8CE2 56           	ld d,(hl)
1164  8CE3 2B           	dec hl
1165  8CE4 EB           	ex de,hl
1166  8CE5 C9           	ret
1167  8CE6
1168  8CE6              ; *************************************************************************************************************************************************************
1169  8CE6              ;
1170  8CE6              ;	7/2/23
1171  8CE6              ;
1172  8CE6              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1173  8CE6              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1174  8CE6              ;
1175  8CE6              ;   Destruye HL y BC !!!!!,
1176  8CE6              ;
1177  8CE6              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1178  8CE6              ;					"0" ..... Izquierda.
1179  8CE6
1180  8CE6              Inicia_Puntero_objeto
1181  8CE6
1182  8CE6 3A D9 88     	ld a,(Cuad_objeto)
1183  8CE9 E6 01        	and 1
1184  8CEB F5           	push af
1185  8CEC CC 0A 8D     	call z,Inicia_puntero_objeto_izq
1186  8CEF F1           	pop af
1187  8CF0 28 2B        	jr z,1F
1188  8CF2 CD F7 8C     	call Inicia_puntero_objeto_der
1189  8CF5 18 26        	jr 1F
1190  8CF7
1191  8CF7              ; Arrancamos desde la parte izquierda de la pantalla.
1192  8CF7              ; Iniciamos (Indice_Sprite_der).
1193  8CF7
1194  8CF7 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1195  8CFA 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1196  8CFD CD E0 8C     	call Extrae_address
1197  8D00 22 C9 88     	ld (Puntero_objeto),hl
1198  8D03
1199  8D03 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1200  8D06 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1201  8D09 C9           	ret
1202  8D0A
1203  8D0A              ; Arrancamos desde la parte derecha de la pantalla.
1204  8D0A              ; Iniciamos (Indice_Sprite_izq).
1205  8D0A
1206  8D0A 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1207  8D0D 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1208  8D10 CD E0 8C     	call Extrae_address
1209  8D13 22 C9 88     	ld (Puntero_objeto),hl
1210  8D16
1211  8D16 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1212  8D19 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1213  8D1C C9           	ret
1214  8D1D
1215  8D1D              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1216  8D1D
1217  8D1D 21 40 83     1 ld hl,Amadeus
1218  8D20 ED 4B C9 88  	ld bc,(Puntero_objeto)
1219  8D24 B7 ED 42     	sub hl,bc
1220  8D27 C0           	ret nz
1221  8D28 21 EF 88     	ld hl,Ctrl_0
1222  8D2B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1223  8D2D C9           	ret 												; _de nuestra nave en los extremos.
1224  8D2E
1225  8D2E              ; *************************************************************************************************************************************************************
1226  8D2E              ;
1227  8D2E              ;	14/5/23
1228  8D2E              ;
1229  8D2E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1230  8D2E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1231  8D2E
1232  8D2E              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1233  8D2E              ;	_de la 2ª y 3ª entidad respectivamente.
1234  8D2E
1235  8D2E              Store_Restore_cajas
1236  8D2E
1237  8D2E E5           	push hl
1238  8D2F D5           	push de
1239  8D30 C5            	push bc
1240  8D31
1241  8D31              ;	STORE !!!!!
1242  8D31              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1243  8D31
1244  8D31 21 C5 88     	ld hl,Filas
1245  8D34 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1246  8D38 01 3F 00     	ld bc,63
1247  8D3B ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1248  8D3D
1249  8D3D              ; 	Entidad_sospechosa. 20/4/23
1250  8D3D
1251  8D3D 3A DE 88     	ld a,(Impacto)
1252  8D40 A7           	and a
1253  8D41 28 0C        	jr z,1F
1254  8D43
1255  8D43 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1256  8D46 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1257  8D49 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1258  8D4A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1259  8D4C 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1260  8D4F
1261  8D4F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1262  8D4F
1263  8D4F 2A 09 89     1 ld hl,(Puntero_restore_caja)
1264  8D52 7E           	ld a,(hl)
1265  8D53 A7           	and a
1266  8D54 F5           	push af
1267  8D55 28 08        	jr z,2F
1268  8D57
1269  8D57 11 C5 88     	ld de,Filas
1270  8D5A 01 3F 00     	ld bc,63
1271  8D5D ED B0        	ldir
1272  8D5F
1273  8D5F CD 7B 8D     2 call Incrementa_punteros_de_cajas
1274  8D62 F1           	pop af
1275  8D63 28 EA        	jr z,1B
1276  8D65
1277  8D65 C1           	pop bc
1278  8D66 D1           	pop de
1279  8D67 E1           	pop hl
1280  8D68
1281  8D68 C9           	ret
1282  8D69
1283  8D69              ; **************************************************************************************************
1284  8D69              ;
1285  8D69              ;	12/05/23
1286  8D69              ;
1287  8D69              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1288  8D69
1289  8D69 E5           Restore_entidad push hl
1290  8D6A D5           	push de
1291  8D6B C5            	push bc
1292  8D6C
1293  8D6C 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1294  8D6F 11 C5 88     	ld de,Filas
1295  8D72 01 3F 00     	ld bc,63
1296  8D75 ED B0        	ldir
1297  8D77
1298  8D77 C1           	pop bc
1299  8D78 D1           	pop de
1300  8D79 E1           	pop hl
1301  8D7A C9           	ret
1302  8D7B
1303  8D7B
1304  8D7B              ; **************************************************************************************************
1305  8D7B              ;
1306  8D7B              ;	08/05/23
1307  8D7B              ;
1308  8D7B              ;	Incrementamos los dos punteros de entidades. (+1).
1309  8D7B
1310  8D7B 2A 09 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1311  8D7E 22 07 89     	ld (Puntero_store_caja),hl
1312  8D81 2A 0B 89     	ld hl,(Indice_restore_caja)
1313  8D84 23           	inc hl
1314  8D85 23           	inc hl
1315  8D86 22 0B 89     	ld (Indice_restore_caja),hl
1316  8D89 CD E0 8C         call Extrae_address
1317  8D8C 22 09 89         ld (Puntero_restore_caja),hl
1318  8D8F C9               ret
1319  8D90
1320  8D90              ; **************************************************************************************************
1321  8D90              ;
1322  8D90              ;	25/01/23
1323  8D90              ;
1324  8D90              ;	Restore_Amadeus
1325  8D90              ;
1326  8D90              ;	Cargamos en DRAW los parámetros de Amadeus.
1327  8D90              ;
1328  8D90
1329  8D90 E5           Restore_Amadeus	push hl
1330  8D91 D5           	push de
1331  8D92 C5            	push bc
1332  8D93 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1333  8D96 11 C5 88     	ld de,Filas
1334  8D99 01 3F 00     	ld bc,63
1335  8D9C ED B0        	ldir
1336  8D9E C1           	pop bc
1337  8D9F D1           	pop de
1338  8DA0 E1           	pop hl
1339  8DA1 C9           	ret
1340  8DA2
1341  8DA2              ; *************************************************************************************************************************************************************
1342  8DA2              ;
1343  8DA2              ;	29/04/23
1344  8DA2              ;
1345  8DA2              ;	Store_Amadeus
1346  8DA2              ;
1347  8DA2              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1348  8DA2              ;
1349  8DA2              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1350  8DA2              ;
1351  8DA2              ;	DESTRUYE: HL y BC y DE.
1352  8DA2
1353  8DA2 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1354  8DA5 01 3F 00     	ld bc,63
1355  8DA8 ED B0        	ldir
1356  8DAA C9           	ret
1357  8DAB
1358  8DAB              ; -----------------------------------------------------------
1359  8DAB              ;
1360  8DAB              ;	27/04/23
1361  8DAB              ;
1362  8DAB              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1363  8DAB              ;
1364  8DAB              ;	Destruye: HL,BC,DE,A
1365  8DAB
1366  8DAB 21 C5 88     Borra_datos_entidad ld hl,Filas
1367  8DAE 01 3E 00     	ld bc,62
1368  8DB1 AF           	xor a
1369  8DB2 77           	ld (hl),a
1370  8DB3 11 C6 88     	ld de,Filas+1
1371  8DB6 ED B0        	ldir
1372  8DB8 C9           	ret
1373  8DB9
1374  8DB9              ; -----------------------------------------------------------
1375  8DB9
1376  8DB9              ; Teclado.
1377  8DB9
1378  8DB9 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1379  8DBB DB FE        	in a,($fe)
1380  8DBD E6 01        	and $01
1381  8DBF 28 02        	jr z,1f
1382  8DC1 18 F6        	jr Pulsa_ENTER
1383  8DC3 C9           1 ret
1384  8DC4
1385  8DC4              ; **************************************************************************************************
1386  8DC4              ;
1387  8DC4              ; Temporización.
1388  8DC4
1389  8DC4              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1390  8DC4              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1391  8DC4              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1392  8DC4              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1393  8DC4
1394  8DC4              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1395  8DC4              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1396  8DC4              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1397  8DC4
1398  8DC4              ; A partir de $4f61 no hace falta DELAY.
1399  8DC4
1400  8DC4              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1401  8DC4
1402  8DC4 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1403  8DC7 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1404  8DC8 78           	LD A,B
1405  8DC9 A7           	AND A
1406  8DCA 20 FB        	JR NZ,wait
1407  8DCC C9           	RET
1408  8DCD
1409  8DCD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1410  8DCD              ;
1411  8DCD              ;	5/3/23
1412  8DCD              ;
1413  8DCD              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1414  8DCD
1415  8DCD              Movimiento_Amadeus
1416  8DCD
1417  8DCD              ; Disparo.
1418  8DCD
1419  8DCD 3A 55 89     	ld a,(Disparo_Amadeus)
1420  8DD0 A7           	and a
1421  8DD1 20 02        	jr nz,1F
1422  8DD3 18 15        	jr 2F
1423  8DD5
1424  8DD5 3E F7        1 ld a,$f7													; "5" para disparar.
1425  8DD7 DB FE        	in a,($fe)
1426  8DD9 E6 10        	and $10
1427  8DDB
1428  8DDB F5           	push af
1429  8DDC CC B0 8E     	call z,Genera_disparo
1430  8DDF F1           	pop af
1431  8DE0 20 08        	jr nz,2F
1432  8DE2
1433  8DE2 3A 55 89     	ld a,(Disparo_Amadeus)
1434  8DE5 EE 01        	xor 1
1435  8DE7 32 55 89     	ld (Disparo_Amadeus),a
1436  8DEA
1437  8DEA 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1438  8DEC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1439  8DEE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1440  8DF0 CC 81 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1441  8DF3
1442  8DF3 3E F7        	ld a,$f7
1443  8DF5 DB FE        	in a,($fe)
1444  8DF7 E6 01        	and $01
1445  8DF9 C8           	ret z
1446  8DFA
1447  8DFA 3E F7        	ld a,$f7
1448  8DFC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1449  8DFE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1450  8E00 CC 63 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1451  8E03 C9           	ret
1452  8E04
1453  8E04              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1454  8E04              ;
1455  8E04              ;	Rutina provisional para que los malotes cagen balas.
1456  8E04
1457  8E04              Detecta_disparo_entidad
1458  8E04
1459  8E04 3A 58 89     	ld a,(Disparo_entidad)
1460  8E07 A7           	and a
1461  8E08 C8           	ret z
1462  8E09
1463  8E09              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1464  8E09
1465  8E09              ;	ld a,$7f				; Detecta SPACE.
1466  8E09              ;	in a,($fe)
1467  8E09              ;	and 1
1468  8E09              ;	ret nz
1469  8E09
1470  8E09              ;	call Genera_disparo
1471  8E09 C9           	ret
1472  8E0A
1473  8E0A              ; ----------------------------------------------------------------------
1474  8E0A              ;
1475  8E0A              ;	8/9/23
1476  8E0A
1477  8E0A              Guarda_datos_de_borrado
1478  8E0A
1479  8E0A 2A 39 89     	ld hl,(Puntero_de_End_Snapshot)
1480  8E0D CD E0 8C     	call Extrae_address
1481  8E10
1482  8E10 2B           	dec hl
1483  8E11 7E           	ld a,(hl)
1484  8E12 A7           	and a
1485  8E13 C8           	ret z										; Salimos si es álbum está vacío.
1486  8E14
1487  8E14 11 E4 88     	ld de,Variables_de_borrado+5
1488  8E17 01 06 00     	ld bc,6
1489  8E1A ED B8        	lddr
1490  8E1C C9           	ret
1491  8E1D
1492  8E1D              ; ----------------------------------------------------------------------
1493  8E1D              ;
1494  8E1D              ;	8/9/23
1495  8E1D
1496  8E1D 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1497  8E20 2B            	dec hl
1498  8E21 7E           	ld a,(hl)
1499  8E22 A7           	and a
1500  8E23 C8           	ret z										; Salimos si es álbum está vacío.
1501  8E24
1502  8E24 11 E4 88     	ld de,Variables_de_borrado+5
1503  8E27 01 06 00     	ld bc,6
1504  8E2A ED B8        	lddr
1505  8E2C C9           	ret
1506  8E2D
1507  8E2D              ; ----------------------------------------------------------------------
1508  8E2D              ;
1509  8E2D              ;	9/9/23
1510  8E2D
1511  8E2D              Repone_datos_de_borrado
1512  8E2D
1513  8E2D 21 DF 88     	ld hl,Variables_de_borrado
1514  8E30 11 A0 72     	ld de,Album_de_fotos_Amadeus
1515  8E33 01 06 00     	ld bc,6
1516  8E36 ED B0        	ldir
1517  8E38
1518  8E38 EB           	ex de,hl
1519  8E39 22 23 89     	ld (End_Snapshot_Amadeus),hl
1520  8E3C
1521  8E3C C9           	ret
1522  8E3D
1523  8E3D              ; ----------------------------------------------------------------------
1524  8E3D              ;
1525  8E3D              ;	11/8/23
1526  8E3D
1527  8E3D              Frame
1528  8E3D
1529  8E3D              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1530  8E3D              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1531  8E3D
1532  8E3D              ; PINTAMOS.
1533  8E3D
1534  8E3D 3E 02        	ld a,2
1535  8E3F D3 FE            out ($fe),a											; Rojo.
1536  8E41
1537  8E41              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1538  8E41              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1539  8E41
1540  8E41 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1541  8E44 01 EC 84     	ld bc,Indice_album_de_fotos
1542  8E47 A7           	and a
1543  8E48 ED 42        	sbc hl,bc
1544  8E4A
1545  8E4A 28 FE        	jr z,$
1546  8E4C 28 4E        	jr z,6F
1547  8E4E
1548  8E4E CD 90 8C     	call Calcula_numero_de_malotes
1549  8E51 CD B4 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1550  8E54
1551  8E54              ;	call Extrae_foto_disparos
1552  8E54 3E 01            ld a,1
1553  8E56 D3 FE            out ($fe),a											; Azul.
1554  8E58
1555  8E58              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1556  8E58 CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1557  8E5B
1558  8E5B              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1559  8E5B
1560  8E5B 3A 04 89     	ld a,(Ctrl_1)
1561  8E5E CB 6F        	bit 5,a
1562  8E60 20 24        	jr nz,1F
1563  8E62
1564  8E62              ; No hemos terminado de guardar el último FRAME.
1565  8E62
1566  8E62 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1567  8E65 2B           	dec hl
1568  8E66 2B           	dec hl
1569  8E67 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1570  8E6A
1571  8E6A 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1572  8E6D 2B           	dec hl
1573  8E6E 2B           	dec hl
1574  8E6F 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1575  8E72 CD E0 8C     	call Extrae_address
1576  8E75 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1577  8E78
1578  8E78 CD E0 8C     	call Extrae_address
1579  8E7B
1580  8E7B              ; Esta vacío este album???
1581  8E7B
1582  8E7B 24           	inc h
1583  8E7C 25           	dec h
1584  8E7D 20 02        	jr nz,5F
1585  8E7F
1586  8E7F              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1587  8E7F
1588  8E7F 18 05        	jr 1F
1589  8E81
1590  8E81 22 1B 89     5 ld (Stack_snapshot),hl
1591  8E84 18 09        	jr 2F
1592  8E86
1593  8E86              ; FRAME completo.
1594  8E86
1595  8E86 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1596  8E89 CD E0 8C     	call Extrae_address
1597  8E8C 22 1B 89     	ld (Stack_snapshot),hl
1598  8E8F
1599  8E8F              ;	En este punto:
1600  8E8F
1601  8E8F              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1602  8E8F              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1603  8E8F
1604  8E8F              ; RELOJES.
1605  8E8F
1606  8E8F 21 50 89     2 ld hl,Contador_de_frames
1607  8E92 7E           	ld a,(hl)
1608  8E93 FE FF        	cp $ff
1609  8E95 20 04        	jr nz,3F
1610  8E97 34           	inc (hl)
1611  8E98 21 51 89     	ld hl,Contador_de_frames_2
1612  8E9B 34           3 inc (hl)											; 0 - 255
1613  8E9C
1614  8E9C 21 04 89     6 ld hl,Ctrl_1
1615  8E9F CB AE        	res 5,(hl)
1616  8EA1 C9           	ret
1617  8EA2
1618  8EA2              Pinta_Amadeus
1619  8EA2
1620  8EA2 3E 06        	ld a,6
1621  8EA4 D3 FE            out ($fe),a										; Amarillo
1622  8EA6
1623  8EA6 CD AC 8C     	call Calcula_malotes_Amadeus
1624  8EA9 CD 36 97     	call Extrae_foto_Amadeus
1625  8EAC CD 68 8C     	call Limpia_album_Amadeus
1626  8EAF C9           	ret
1627  8EB0
1628  8EB0              ; ---------------------------------------------------------------
1629  8EB0
1630  8EB0              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EB0              ; ******************************************************************************************************************************************************************************************
   2+ 8EB0              ;
   3+ 8EB0              ;   21/07/23
   4+ 8EB0              ;
   5+ 8EB0              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EB0              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EB0              ;
   8+ 8EB0              ;
   9+ 8EB0              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EB0              ;
  11+ 8EB0              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EB0              ;               _ hacen las entidades hacia abajo.
  13+ 8EB0              ;
  14+ 8EB0              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EB0              ;
  16+ 8EB0              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EB0              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EB0              ;
  19+ 8EB0              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EB0              ;           _ la bala.
  21+ 8EB0              ;
  22+ 8EB0              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EB0              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EB0              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EB0              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EB0              ;           _ en el momento de generarse la bala)).
  27+ 8EB0
  28+ 8EB0              Genera_disparo
  29+ 8EB0
  30+ 8EB0              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EB0              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EB0              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EB0              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EB0              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EB0              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EB0              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EB0
  38+ 8EB0              ; Exclusiones:
  39+ 8EB0
  40+ 8EB0 3A DD 88         ld a,(Vel_down)
  41+ 8EB3 47               ld b,a
  42+ 8EB4 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EB7 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EB8 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EB9 3A FE 88         ld a,(Columnas)
  46+ 8EBC 47               ld b,a
  47+ 8EBD 3A C6 88         ld a,(Columns)
  48+ 8EC0 B8               cp b
  49+ 8EC1 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EC2
  51+ 8EC2              ; ----- ----- -----
  52+ 8EC2
  53+ 8EC2 3A EF 88         ld a,(Ctrl_0)
  54+ 8EC5 CB 77            bit 6,a
  55+ 8EC7 20 06            jr nz,14F
  56+ 8EC9
  57+ 8EC9 3A CC 88         ld a,(Coordenada_y)
  58+ 8ECC FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8ECE D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8ECF
  61+ 8ECF 21 00 80     14 ld hl,Indice_disparo
  62+ 8ED2 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8ED5 4F               ld c,a
  64+ 8ED6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8ED8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8ED8              ;                                            ""        ""       "f9", B="1"
  67+ 8ED8              ;                                            ""        ""       "fb", B="2"
  68+ 8ED8              ;                                            ""        ""       "fb", B="3"
  69+ 8ED8 A7               and a
  70+ 8ED9 28 10            jr z,1F
  71+ 8EDB E6 01            and 1
  72+ 8EDD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EDE
  74+ 8EDE 79               ld a,c
  75+ 8EDF 16 F9            ld d,$f9
  76+ 8EE1 23           2 inc hl
  77+ 8EE2 23               inc hl
  78+ 8EE3 04               inc b
  79+ 8EE4 BA               cp d
  80+ 8EE5 28 04            jr z,1F
  81+ 8EE7 14               inc d
  82+ 8EE8 14               inc d
  83+ 8EE9 18 F6            jr 2B
  84+ 8EEB
  85+ 8EEB CD E0 8C     1 call Extrae_address
  86+ 8EEE E5               push hl
  87+ 8EEF FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EF1 DD 21 7C 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EF5
  90+ 8EF5              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EF5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EF5
  93+ 8EF5 3A EF 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EF8 CB 77            bit 6,a
  95+ 8EFA 20 04            jr nz,19F
  96+ 8EFC
  97+ 8EFC AF               xor a
  98+ 8EFD 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F00
 100+ 8F00 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8F03 FE 02            cp 2
 102+ 8F05 38 66            jr c,3F
 103+ 8F07 28 64            jr z,3F
 104+ 8F09
 105+ 8F09              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F09
 107+ 8F09 E6 01            and 1
 108+ 8F0B 28 30            jr z,4F
 109+ 8F0D
 110+ 8F0D              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F0D              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F0D              ;
 113+ 8F0D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F0D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F0D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F0D
 117+ 8F0D 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8F10
 119+ 8F10              ;   Amadeus o entidad ???.
 120+ 8F10
 121+ 8F10 3A EF 88         ld a,(Ctrl_0)
 122+ 8F13 CB 77            bit 6,a
 123+ 8F15 28 0A            jr z,8F
 124+ 8F17
 125+ 8F17              ; 	Dispara Amadeus.
 126+ 8F17
 127+ 8F17 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F19 CD A5 96         call PreviousScan
 129+ 8F1C CD A5 96         call PreviousScan
 130+ 8F1F
 131+ 8F1F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F1F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F1F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F1F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F1F
 136+ 8F1F 18 11            jr 10F
 137+ 8F21
 138+ 8F21              ; 	Dispara Entidad.
 139+ 8F21
 140+ 8F21 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F24              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F24
 143+ 8F24              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F24              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F24
 146+ 8F24 C5               push bc
 147+ 8F25 06 10            ld b,16
 148+ 8F27 CD 96 96     9 call NextScan
 149+ 8F2A 10 FB            djnz 9B
 150+ 8F2C C1               pop bc
 151+ 8F2D CD 97 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F30 18 06            jr 17F
 153+ 8F32
 154+ 8F32              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F32              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F32              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F32              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F32
 159+ 8F32 CD 97 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F35 CD 0C 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F38              ;                                                      ; _al generar el disparo.
 162+ 8F38
 163+ 8F38              ; 	LLegados a este punto tendremos:
 164+ 8F38              ;
 165+ 8F38              ;       Puntero_objeto_disparo en IY.
 166+ 8F38              ;       Rutinas_de_impresion en IX.
 167+ 8F38              ;       Puntero_de_impresion en HL.
 168+ 8F38              ;       Impacto/Dirección en BC.
 169+ 8F38
 170+ 8F38 CD 9F 8F     17 call Almacena_disparo
 171+ 8F3B 18 52            jr 6F                                             ; RET.
 172+ 8F3D
 173+ 8F3D              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F3D              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F3D              ;
 176+ 8F3D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F3D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F3D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F3D
 180+ 8F3D 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8F40
 182+ 8F40              ;   Amadeus o entidad ???.
 183+ 8F40
 184+ 8F40 3A EF 88         ld a,(Ctrl_0)
 185+ 8F43 CB 77            bit 6,a
 186+ 8F45 28 0A            jr z,11F
 187+ 8F47
 188+ 8F47              ; 	Dispara Amadeus.
 189+ 8F47
 190+ 8F47 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F49 CD A5 96         call PreviousScan
 192+ 8F4C CD A5 96         call PreviousScan
 193+ 8F4F
 194+ 8F4F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F4F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F4F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F4F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F4F
 199+ 8F4F 18 11            jr 13F
 200+ 8F51
 201+ 8F51              ; 	Dispara Entidad.
 202+ 8F51
 203+ 8F51 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F54              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F54
 206+ 8F54              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F54              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F54
 209+ 8F54 C5               push bc
 210+ 8F55 06 10            ld b,16
 211+ 8F57 CD 96 96     12 call NextScan
 212+ 8F5A 10 FB            djnz 12B
 213+ 8F5C C1               pop bc
 214+ 8F5D
 215+ 8F5D CD 90 8F         call Ajusta_disparo_parte_derecha
 216+ 8F60 18 06            jr 18F
 217+ 8F62
 218+ 8F62              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F62              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F62              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F62              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F62
 223+ 8F62 CD 90 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F65 CD 0C 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F68              ;                                                       ; _al generar el disparo.
 226+ 8F68
 227+ 8F68              ; LLegados a este punto tendremos:
 228+ 8F68              ;
 229+ 8F68              ;       Puntero_objeto_disparo en IY.
 230+ 8F68              ;       Rutinas_de_impresion en IX.
 231+ 8F68              ;       Puntero_de_impresion en HL.
 232+ 8F68              ;       Impacto/Dirección en BC.
 233+ 8F68
 234+ 8F68 CD 9F 8F     18 call Almacena_disparo
 235+ 8F6B 18 22            jr 6F                                               ; RET.
 236+ 8F6D
 237+ 8F6D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F6D
 239+ 8F6D 28 11        3 jr z,5F
 240+ 8F6F
 241+ 8F6F              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F6F              ;
 243+ 8F6F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F6F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F6F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F6F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F6F
 248+ 8F6F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F6F              ;	   ""        ""       "f9", B="1"
 250+ 8F6F              ;	   ""        ""       "fb", B="2"
 251+ 8F6F              ; 	   ""        ""       "fb", B="3"
 252+ 8F6F
 253+ 8F6F 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8F72 CD 96 96     	call NextScan
 255+ 8F75
 256+ 8F75              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F75              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F75              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F75
 261+ 8F75 CD 97 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F78
 263+ 8F78              ; 	No se produce impacto. B="$80"
 264+ 8F78              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F78
 266+ 8F78 01 80 80         ld bc,$8080
 267+ 8F7B
 268+ 8F7B              ; 	LLegados a este punto tendremos:
 269+ 8F7B              ;
 270+ 8F7B              ;       Puntero_objeto_disparo en IY.
 271+ 8F7B              ;       Rutinas_de_impresion en IX.
 272+ 8F7B              ;       Puntero_de_impresion en HL.
 273+ 8F7B              ;       Impacto/Dirección en BC.
 274+ 8F7B
 275+ 8F7B CD 9F 8F         call Almacena_disparo
 276+ 8F7E 18 0F            jr 6F                                           ; RET.
 277+ 8F80
 278+ 8F80              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F80              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F80              ;
 281+ 8F80              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F80              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F80              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F80              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F80
 286+ 8F80 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8F83 CD 96 96     	call NextScan
 288+ 8F86
 289+ 8F86              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F86              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F86              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F86              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F86
 294+ 8F86 CD 90 8F         call Ajusta_disparo_parte_derecha
 295+ 8F89
 296+ 8F89              ; 	No se produce impacto. B="$80"
 297+ 8F89              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F89
 299+ 8F89 01 80 80     15 ld bc,$8080
 300+ 8F8C
 301+ 8F8C              ; 	LLegados a este punto tendremos:
 302+ 8F8C              ;
 303+ 8F8C              ;       Puntero_objeto_disparo en IY.
 304+ 8F8C              ;       Rutinas_de_impresion en IX.
 305+ 8F8C              ;       Puntero_de_impresion en HL.
 306+ 8F8C              ;       Impacto/Dirección en BC.
 307+ 8F8C
 308+ 8F8C CD 9F 8F         call Almacena_disparo
 309+ 8F8F
 310+ 8F8F C9           6 ret
 311+ 8F90
 312+ 8F90              ; ----------------------------------------------------------------
 313+ 8F90              ;
 314+ 8F90              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F90              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F90              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F90
 318+ 8F90 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F91 FE 02            cp 2
 320+ 8F93 38 01            jr c,1F
 321+ 8F95 23               inc hl
 322+ 8F96 C9           1 ret
 323+ 8F97
 324+ 8F97 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F98 FE 01        	cp 1
 326+ 8F9A 20 01        	jr nz,1F
 327+ 8F9C 2B           	dec hl
 328+ 8F9D 2B           1 dec hl
 329+ 8F9E C9               ret
 330+ 8F9F
 331+ 8F9F              ; ----------------------------------------------------------------
 332+ 8F9F              ;
 333+ 8F9F              ;   25/02/23
 334+ 8F9F              ;
 335+ 8F9F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F9F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F9F              ;
 338+ 8F9F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F9F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F9F
 341+ 8F9F              Almacena_disparo
 342+ 8F9F
 343+ 8F9F E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FA0 F1               pop af
 345+ 8FA1 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FA2
 347+ 8FA2 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FA3 E6 01            and 1
 349+ 8FA5 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FA7              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FA7              ; 	Dispara AMADEUS.
 352+ 8FA7
 353+ 8FA7              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FA7              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FA7              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FA7              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FA7
 358+ 8FA7 C5               push bc
 359+ 8FA8 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FAB 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FAE A7               and a
 362+ 8FAF ED 42            sbc hl,bc
 363+ 8FB1 CC 61 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FB4 C1               pop bc
 365+ 8FB5 28 54            jr z,4F
 366+ 8FB7
 367+ 8FB7 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FBA 23               inc hl
 369+ 8FBB 23               inc hl
 370+ 8FBC 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FBF              ;                                                   ; _ Disparo_(+1).
 372+ 8FBF 18 18            jr 2F
 373+ 8FC1
 374+ 8FC1              ; Dispara una entidad.
 375+ 8FC1
 376+ 8FC1 C5           1 push bc
 377+ 8FC2 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FC5 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FC8 A7               and a
 380+ 8FC9 ED 42            sbc hl,bc
 381+ 8FCB CC 5A 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FCE C1               pop bc
 383+ 8FCF 28 3A            jr z,4F
 384+ 8FD1
 385+ 8FD1 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FD4 23               inc hl
 387+ 8FD5 23               inc hl
 388+ 8FD6 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FD9              ;                                                   ; _ Disparo_(+1).
 390+ 8FD9 CD E0 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FDC              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FDC              ;
 393+ 8FDC              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FDC              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FDC              ;                                                     Puntero_de_impresion en HL.
 396+ 8FDC              ;                                                     Impacto/Dirección en BC.
 397+ 8FDC
 398+ 8FDC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FDD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FDE 23               inc hl                                          ; _ al siguiente.
 401+ 8FDF A7               and a
 402+ 8FE0 20 C0            jr nz,3B
 403+ 8FE2
 404+ 8FE2 08               ex af,af
 405+ 8FE3 ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FE7 F9               ld sp,hl
 407+ 8FE8
 408+ 8FE8 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FEA F5               push af                                         ; Puntero de impresión.
 410+ 8FEB FD E5            push iy                                         ; Puntero objeto.
 411+ 8FED C5               push bc                                         ; Control.
 412+ 8FEE
 413+ 8FEE ED 7B 15 89      ld sp,(Stack)
 414+ 8FF2
 415+ 8FF2              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FF2
 417+ 8FF2 21 04 89     	ld hl,Ctrl_1
 418+ 8FF5 CB C6        	set 0,(hl)
 419+ 8FF7
 420+ 8FF7 DD E5        	push ix
 421+ 8FF9 E1               pop hl
 422+ 8FFA F5               push af
 423+ 8FFB DD E1            pop ix
 424+ 8FFD
 425+ 8FFD CD A0 7F     	call Guarda_foto_registros
 426+ 9000
 427+ 9000 21 04 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9003 CB 86        	res 0,(hl)
 429+ 9005
 430+ 9005              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9005              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9005
 433+ 9005 CD 61 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9008 CD 5A 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 900B
 436+ 900B C9           4 ret
 437+ 900C
 438+ 900C              ; ----------------------------------------------------------------
 439+ 900C              ;
 440+ 900C              ;   4/3/23
 441+ 900C              ;
 442+ 900C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 900C              ;   _ al generarse el disparo.
 444+ 900C              ;
 445+ 900C              ;       "$80" ..... No se produce colisión.
 446+ 900C              ;       "$81" ..... Se produce colisión.
 447+ 900C              ;
 448+ 900C              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 900C              ;         _ que forman el disparo.
 450+ 900C
 451+ 900C
 452+ 900C              Comprueba_Colision
 453+ 900C
 454+ 900C              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 900C
 456+ 900C FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 900E E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 900F
 459+ 900F CD 45 90         call Modifica_H_Velocidad_disparo
 460+ 9012
 461+ 9012 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9013 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9015 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9017
 465+ 9017 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9019 CD 35 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 901C
 468+ 901C 7B               ld a,e
 469+ 901D E6 01            and 1
 470+ 901F 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9021              ;                                                  ; _ para activar IMPACTO.
 472+ 9021 E1               pop hl
 473+ 9022 E5               push hl
 474+ 9023 CD 96 96         call NextScan
 475+ 9026
 476+ 9026 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9027 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9029 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 902B              ;                                                  ; _ 2º scanline si esto es así.
 480+ 902B 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 902D CD 35 90         call Bucle_2
 482+ 9030
 483+ 9030 43           1 ld b,e
 484+ 9031 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9032 FD E1            pop iy
 486+ 9034 C9               ret
 487+ 9035
 488+ 9035              ; ---------- ----------
 489+ 9035
 490+ 9035 06 02        Bucle_2 ld b,2
 491+ 9037 FD 7E 00     2 ld a,(iy)
 492+ 903A A6               and (hl)
 493+ 903B 28 02            jr z,1F
 494+ 903D 1E 81            ld e,$81
 495+ 903F 23           1 inc hl
 496+ 9040 FD 23            inc iy
 497+ 9042 10 F3            djnz 2B
 498+ 9044 C9               ret
 499+ 9045
 500+ 9045              ; ---------- ----------
 501+ 9045              ;
 502+ 9045              ;   21/7/23
 503+ 9045
 504+ 9045              Modifica_H_Velocidad_disparo
 505+ 9045
 506+ 9045 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9048 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 904A D0               ret nc                                         ; _ incrementamos H.
 509+ 904B 24               inc h
 510+ 904C
 511+ 904C C9               ret
 512+ 904D
 513+ 904D              ; -------------------------------------------------------------------------------------------------------------
 514+ 904D              ;
 515+ 904D              ;   11/04/23
 516+ 904D              ;
 517+ 904D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 904D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 904D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 904D              ;
 521+ 904D              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 904D
 523+ 904D              Compara_coordenadas_X
 524+ 904D
 525+ 904D              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 904D              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 904D
 528+ 904D              ; Preparamos registros:
 529+ 904D
 530+ 904D 21 CB 88         ld hl,Filas+6
 531+ 9050 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9051 23               inc hl
 533+ 9052 23               inc hl
 534+ 9053 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9054 43               ld b,e
 536+ 9055
 537+ 9055 21 D9 88         ld hl,Filas+20
 538+ 9058 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9059 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 905C CD 78 92         call Guarda_coordenadas_X
 541+ 905F
 542+ 905F              ; Preparamos registros:
 543+ 905F
 544+ 905F 21 A4 85         ld hl,Amadeus_db+6
 545+ 9062 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9063 23               inc hl
 547+ 9064 23               inc hl
 548+ 9065 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9066 7B               ld a,e
 550+ 9067 08               ex af,af'
 551+ 9068 21 B2 85         ld hl,Amadeus_db+20
 552+ 906B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 906C 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 906F CD 78 92         call Guarda_coordenadas_X
 555+ 9072
 556+ 9072              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9072              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9072
 559+ 9072 04               inc b
 560+ 9073 05               dec b
 561+ 9074 28 04            jr z,1F
 562+ 9076 06 03            ld b,3
 563+ 9078 18 02            jr 2F
 564+ 907A 06 02        1 ld b,2
 565+ 907C 08           2 ex af,af'
 566+ 907D 3C               inc a
 567+ 907E 3D               dec a
 568+ 907F 28 04            jr z,5F
 569+ 9081 0E 03            ld c,3
 570+ 9083 18 02            jr 6F
 571+ 9085 0E 02        5 ld c,2
 572+ 9087 79           6 ld a,c
 573+ 9088 08               ex af,af'
 574+ 9089 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 908C 1A           4 ld a,(de)
 576+ 908D 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 9090 BE           3 cp (hl)
 578+ 9091 28 0E            jr z,7F
 579+ 9093 23               inc hl
 580+ 9094 0D               dec c
 581+ 9095 20 F9            jr nz,3B
 582+ 9097 13               inc de
 583+ 9098 08               ex af,af'
 584+ 9099 4F               ld c,a
 585+ 909A 08               ex af,af'
 586+ 909B 10 EF            djnz 4B
 587+ 909D
 588+ 909D              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 909D
 590+ 909D CD B4 92     8 call Limpia_Coordenadas_X
 591+ 90A0 C9               ret
 592+ 90A1
 593+ 90A1 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90A3 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90A6 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90A9 CB D6            set 2,(hl)
 597+ 90AB 18 F0            jr 8B
 598+ 90AD
 599+ 90AD              ; -----------------------------------------------------------------------
 600+ 90AD              ;
 601+ 90AD              ;   17/04/23
 602+ 90AD              ;
 603+ 90AD
 604+ 90AD              Detecta_colision_nave_entidad
 605+ 90AD
 606+ 90AD              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90AD
 608+ 90AD 2A C7 88         ld hl,(Posicion_actual)
 609+ 90B0 CD F1 95         call Calcula_puntero_de_impresion
 610+ 90B3
 611+ 90B3              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90B3              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90B3
 614+ 90B3 DD E5            push ix
 615+ 90B5 E1               pop hl
 616+ 90B6 E5               push hl
 617+ 90B7
 618+ 90B7              ; ----- ----- -----
 619+ 90B7 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90B9 06 0A            ld b,10
 621+ 90BB CD EB 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90BE 7B               ld a,e
 623+ 90BF FE 05            cp 5
 624+ 90C1 38 0E            jr c,3F
 625+ 90C3
 626+ 90C3              ; LLegados a este punto:
 627+ 90C3              ;
 628+ 90C3              ;   HAY COLISIÓN !!!!!.
 629+ 90C3              ;
 630+ 90C3              ;   .db (Impacto) de Amadeus a "1".
 631+ 90C3              ;   SET el bit3 de (Impacto2).
 632+ 90C3              ;
 633+ 90C3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90C3
 635+ 90C3 21 B7 85         ld hl,Amadeus_db+25
 636+ 90C6 36 01            ld (hl),1
 637+ 90C8 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90CB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90CD CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90CF 18 18            jr 1F
 641+ 90D1
 642+ 90D1              ; -----
 643+ 90D1
 644+ 90D1 E1           3 pop hl
 645+ 90D2 CD 96 96         call NextScan
 646+ 90D5 E5               push hl
 647+ 90D6 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90D7 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90D9 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90DB 30 0C            jr nc,1F
 651+ 90DD              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90DD 10 DC            djnz 2B
 653+ 90DF
 654+ 90DF              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90DF
 656+ 90DF              ; LLegados a este punto:
 657+ 90DF              ;
 658+ 90DF              ;   NO HAY COLISIÓN !!!!!.
 659+ 90DF              ;
 660+ 90DF              ;   .db (Impacto) de Amadeus a "0".
 661+ 90DF              ;   RES el bit2 de (Impacto2).
 662+ 90DF              ;
 663+ 90DF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90DF              ;   Lo colocamos a "0".
 665+ 90DF
 666+ 90DF 21 42 89         ld hl,Impacto2
 667+ 90E2 CB 96            res 2,(hl)
 668+ 90E4 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90E7 36 00            ld (hl),0
 670+ 90E9
 671+ 90E9 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90EA C9               ret
 673+ 90EB
 674+ 90EB               ; ---------- ----------
 675+ 90EB
 676+ 90EB C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90EC 3A C6 88         ld a,(Columns)
 678+ 90EF 47               ld b,a
 679+ 90F0 FD 7E 00     2 ld a,(iy)
 680+ 90F3 BE               cp (hl)
 681+ 90F4 28 01            jr z,1F
 682+ 90F6
 683+ 90F6 1C               inc e
 684+ 90F7
 685+ 90F7 23           1 inc hl
 686+ 90F8 FD 23            inc iy
 687+ 90FA 10 F4            djnz 2B
 688+ 90FC C1               pop bc
 689+ 90FD C9               ret
 690+ 90FE
 691+ 90FE              ; -------------------------------------------------------------------------------------------------------------
 692+ 90FE              ;
 693+ 90FE              ;   13/03/23
 694+ 90FE              ;
 695+ 90FE              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90FE              ;
 697+ 90FE              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90FE
 699+ 90FE 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9101 7E               ld a,(hl)
 701+ 9102 A7               and a
 702+ 9103 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9104
 704+ 9104 44               ld b,h
 705+ 9105 4D               ld c,l
 706+ 9106 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 9109 E5               push hl
 708+ 910A A7               and a
 709+ 910B ED 42            sbc hl,bc
 710+ 910D E5               push hl
 711+ 910E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 910F
 713+ 910F E1               pop hl
 714+ 9110 54               ld d,h
 715+ 9111 5D               ld e,l
 716+ 9112 1B               dec de
 717+ 9113 ED B8            lddr                                                ; Limpiamos.
 718+ 9115
 719+ 9115 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9118 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 911B
 722+ 911B C9               ret
 723+ 911C
 724+ 911C              ; -------------------------------------------------------------------------------------------------------------
 725+ 911C              ;
 726+ 911C              ;   18/07/23
 727+ 911C              ;
 728+ 911C
 729+ 911C              Motor_de_disparos
 730+ 911C
 731+ 911C              ; Gestiona DISPAROS DE AMADEUS.
 732+ 911C
 733+ 911C 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 911F 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9122
 736+ 9122 CD E0 8C     2 call Extrae_address
 737+ 9125 7E               ld a,(hl)
 738+ 9126 A7               and a
 739+ 9127 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9129
 741+ 9129              ; ----- ----- ----- ----- ----- -----
 742+ 9129
 743+ 9129 C5               push bc
 744+ 912A CD EE 91         call foto_disparo_a_borrar
 745+ 912D
 746+ 912D              ; Existe colisión con este disparo???
 747+ 912D
 748+ 912D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 912E 7E               ld a,(hl)
 750+ 912F 2B               dec hl
 751+ 9130 E6 01            and 1
 752+ 9132 28 1D            jr z,9F
 753+ 9134
 754+ 9134              ;   En este punto:
 755+ 9134              ;
 756+ 9134              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9134              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9134              ;   _con la entidad).
 759+ 9134              ;
 760+ 9134              ;   Disparo_2A defw 0                                ; Control.
 761+ 9134              ;    defw 0                                          ; Puntero objeto.
 762+ 9134              ;    defw 0                                          ; Puntero de impresión.
 763+ 9134              ;    defw 0                                          ; Rutina de impresión.
 764+ 9134
 765+ 9134 E5               push hl
 766+ 9135
 767+ 9135 06 04            ld b,4
 768+ 9137 23           19 inc hl
 769+ 9138 10 FD            djnz 19B
 770+ 913A
 771+ 913A CD E0 8C         call Extrae_address
 772+ 913D CD 5F 9D         call Genera_coordenadas_disparo
 773+ 9140
 774+ 9140              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9140
 776+ 9140 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 9143 72               ld (hl),d
 778+ 9144 23               inc hl
 779+ 9145 73               ld (hl),e
 780+ 9146
 781+ 9146              ; Elimino el disparo de la base de datos.
 782+ 9146
 783+ 9146 E1               pop hl
 784+ 9147 CD 6D 92         call Elimina_disparo_de_base_de_datos
 785+ 914A 21 42 89         ld hl,Impacto2
 786+ 914D CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 914F
 788+ 914F 18 06            jr 11F
 789+ 9151
 790+ 9151 CD 17 92     9 call Mueve_disparo
 791+ 9154 CD EE 91         call foto_disparo_a_borrar
 792+ 9157
 793+ 9157 C1           11 pop bc
 794+ 9158 18 04            jr 7F
 795+ 915A
 796+ 915A              ; ----- ----- ----- ----- ----- -----
 797+ 915A
 798+ 915A ED 42        1 sbc hl,bc
 799+ 915C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 915E
 801+ 915E 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9161 23               inc hl
 803+ 9162 23               inc hl
 804+ 9163 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9166 18 BA            jr 2B
 806+ 9168
 807+ 9168 CD 61 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 916B              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 916B
 810+ 916B              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 916B
 812+ 916B 01 8A 85         ld bc,Disparo_11
 813+ 916E 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9171
 815+ 9171 CD E0 8C     5 call Extrae_address
 816+ 9174 7E               ld a,(hl)
 817+ 9175 A7               and a
 818+ 9176 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9178
 820+ 9178              ; ----- ----- ----- ----- ----- -----
 821+ 9178
 822+ 9178 C5               push bc
 823+ 9179 CD EE 91         call foto_disparo_a_borrar
 824+ 917C
 825+ 917C              ; Existe colisión con este disparo???
 826+ 917C
 827+ 917C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 917D 7E               ld a,(hl)
 829+ 917E 2B               dec hl
 830+ 917F E6 01            and 1
 831+ 9181 28 4D            jr z,10F
 832+ 9183
 833+ 9183              ;! La colisión se produce con Amadeus???
 834+ 9183              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9183
 836+ 9183 E5               push hl
 837+ 9184
 838+ 9184 06 04            ld b,4
 839+ 9186 23           16 inc hl
 840+ 9187 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9189
 842+ 9189 CD E0 8C         call Extrae_address
 843+ 918C CD 5F 9D         call Genera_coordenadas_disparo
 844+ 918F
 845+ 918F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9190 FE 16            cp $16
 847+ 9192 38 2A            jr c,15F
 848+ 9194
 849+ 9194
 850+ 9194              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9194
 852+ 9194 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9195
 854+ 9195              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9195
 856+ 9195
 857+ 9195 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9198
 859+ 9198              ; Coordenada X de Amadeus en D.
 860+ 9198
 861+ 9198 7D               ld a,l
 862+ 9199 E6 1F            and $1F
 863+ 919B 57               ld d,a
 864+ 919C
 865+ 919C 21 A6 85         ld hl,Amadeus_db+8
 866+ 919F 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91A0
 868+ 91A0 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 91A3 CD 78 92         call Guarda_coordenadas_X
 870+ 91A6
 871+ 91A6 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91A7
 873+ 91A7              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91A7
 875+ 91A7 06 02            ld b,2
 876+ 91A9 C5           20 push bc
 877+ 91AA
 878+ 91AA 06 03            ld b,3
 879+ 91AC 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 91AF 7E           18 ld a,(hl)
 881+ 91B0 BA               cp d
 882+ 91B1 20 04            jr nz,17F
 883+ 91B3
 884+ 91B3              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91B3
 886+ 91B3 C1               pop bc
 887+ 91B4 E1               pop hl
 888+ 91B5 18 0D            jr 14F
 889+ 91B7
 890+ 91B7 23           17 inc hl
 891+ 91B8 10 F5            djnz 18B
 892+ 91BA
 893+ 91BA 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91BB
 895+ 91BB C1               pop bc
 896+ 91BC 10 EB            djnz 20B
 897+ 91BE
 898+ 91BE
 899+ 91BE              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91BE              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91BE
 902+ 91BE E1           15 pop hl
 903+ 91BF 23               inc hl
 904+ 91C0 35               dec (hl)
 905+ 91C1 2B               dec hl
 906+ 91C2 18 0C            jr 10F
 907+ 91C4
 908+ 91C4              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91C4              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91C4
 911+ 91C4 E5           14 push hl
 912+ 91C5 CD 6D 92         call Elimina_disparo_de_base_de_datos
 913+ 91C8 21 42 89         ld hl,Impacto2
 914+ 91CB CB CE            set 1,(hl)
 915+ 91CD E1               pop hl
 916+ 91CE 18 06            jr 12F
 917+ 91D0
 918+ 91D0              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91D0
 920+ 91D0 CD 17 92     10 call Mueve_disparo
 921+ 91D3 CD EE 91         call foto_disparo_a_borrar
 922+ 91D6 C1           12 pop bc
 923+ 91D7
 924+ 91D7 18 04            jr 8F
 925+ 91D9
 926+ 91D9              ; ----- ----- ----- ----- ----- -----
 927+ 91D9
 928+ 91D9 ED 42        4 sbc hl,bc
 929+ 91DB 28 0A            jr z,6F
 930+ 91DD
 931+ 91DD 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91E0 23               inc hl
 933+ 91E1 23               inc hl
 934+ 91E2 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91E5 18 8A            jr 5B
 936+ 91E7
 937+ 91E7 CD 5A 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91EA CD B4 92         call Limpia_Coordenadas_X
 939+ 91ED C9               ret
 940+ 91EE
 941+ 91EE              ; ------------------------------------------------------------------
 942+ 91EE
 943+ 91EE              foto_disparo_a_borrar
 944+ 91EE
 945+ 91EE 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91EF A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91F0 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91F1
 949+ 91F1 E5               push hl
 950+ 91F2 23               inc hl
 951+ 91F3 23               inc hl
 952+ 91F4 ED 73 15 89      ld (Stack),sp
 953+ 91F8 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91F9 FD E1            pop iy
 955+ 91FB DD E1            pop ix
 956+ 91FD E1               pop hl
 957+ 91FE ED 7B 15 89      ld sp,(Stack)
 958+ 9202 3A 04 89         ld a,(Ctrl_1)
 959+ 9205 CB C7            set 0,a
 960+ 9207 32 04 89         ld (Ctrl_1),a
 961+ 920A CD A0 7F         call Guarda_foto_registros
 962+ 920D 3A 04 89         ld a,(Ctrl_1)
 963+ 9210 CB 87            res 0,a
 964+ 9212 32 04 89         ld (Ctrl_1),a
 965+ 9215 E1               pop hl
 966+ 9216 C9               ret
 967+ 9217
 968+ 9217              ;---------------------------------------------------
 969+ 9217              ;
 970+ 9217              ;   18/07/23
 971+ 9217              ;
 972+ 9217
 973+ 9217              Mueve_disparo
 974+ 9217
 975+ 9217              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9217              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9217              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9217
 979+ 9217 E5               push hl
 980+ 9218
 981+ 9218 7E               ld a,(hl)
 982+ 9219
 983+ 9219 06 04            ld b,4
 984+ 921B 23           1 inc hl
 985+ 921C 10 FD            djnz 1B
 986+ 921E
 987+ 921E              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 921E
 989+ 921E CD E0 8C         call Extrae_address
 990+ 9221
 991+ 9221 E6 01            and 1
 992+ 9223 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9225
 994+ 9225              ; Disparo hacia arriba, (Amadeus).
 995+ 9225
 996+ 9225              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9225              ; _ de la dificultad.
 998+ 9225
 999+ 9225 CD A5 96         call PreviousScan
1000+ 9228 CD A5 96         call PreviousScan
1001+ 922B CD A5 96         call PreviousScan
1002+ 922E CD A5 96         call PreviousScan
1003+ 9231
1004+ 9231              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9231
1006+ 9231 7C               ld a,h
1007+ 9232 FE 40            cp $40
1008+ 9234 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9236
1010+ 9236              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9236
1012+ 9236 EB               ex de,hl
1013+ 9237 06 04            ld b,4
1014+ 9239 2B           6 dec hl
1015+ 923A 10 FD            djnz 6B
1016+ 923C
1017+ 923C CD 6D 92         call Elimina_disparo_de_base_de_datos
1018+ 923F E1               pop hl
1019+ 9240 18 10            jr 7F
1020+ 9242
1021+ 9242              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9242              ; HL contiene el puntero de impresión del disparo.
1023+ 9242              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9242
1025+ 9242 D5           3 push de
1026+ 9243 C5               push bc
1027+ 9244
1028+ 9244 CD 0C 90         call Comprueba_Colision
1029+ 9247
1030+ 9247              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9247
1032+ 9247 78               ld a,b
1033+ 9248
1034+ 9248 C1               pop bc
1035+ 9249 D1               pop de
1036+ 924A
1037+ 924A EB               ex de,hl
1038+ 924B
1039+ 924B 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 924C 23               inc hl                                      ; _ movimiento.
1041+ 924D 72               ld (hl),d
1042+ 924E
1043+ 924E E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 924F
1045+ 924F 23               inc hl                                      ; _ en curso.
1046+ 9250 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9251 2B               dec hl
1048+ 9252
1049+ 9252 C9           7 ret
1050+ 9253
1051+ 9253              ; Disparo hacia abajo, (Entidad).
1052+ 9253
1053+ 9253 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9256 47               ld b,a
1055+ 9257
1056+ 9257 CD 96 96     4 call NextScan
1057+ 925A 10 FB            djnz 4B
1058+ 925C
1059+ 925C              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 925C
1061+ 925C 7C               ld a,h
1062+ 925D FE 58            cp $58
1063+ 925F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9261
1065+ 9261 EB               ex de,hl
1066+ 9262 06 04            ld b,4
1067+ 9264 2B           5 dec hl
1068+ 9265 10 FD            djnz 5B
1069+ 9267
1070+ 9267 CD 6D 92         call Elimina_disparo_de_base_de_datos
1071+ 926A E1               pop hl
1072+ 926B 18 E5            jr 7B
1073+ 926D
1074+ 926D              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 926D
1076+ 926D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9270 AF               xor a
1078+ 9271 77               ld (hl),a
1079+ 9272 54               ld d,h
1080+ 9273 5D               ld e,l
1081+ 9274 13               inc de
1082+ 9275 ED B0            ldir
1083+ 9277 C9               ret
1084+ 9278
1085+ 9278              ; -----------------------------------------------------------------
1086+ 9278              ;
1087+ 9278              ;   19/7/23
1088+ 9278              ;
1089+ 9278              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9278              ;
1091+ 9278              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9278              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9278              ;
1094+ 9278              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9278              ;
1096+ 9278              ;   INPUTS:
1097+ 9278              ;
1098+ 9278              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9278              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9278
1101+ 9278              ;   MODIFICA: A, HL, BC y DE.
1102+ 9278
1103+ 9278              Guarda_coordenadas_X
1104+ 9278
1105+ 9278 7B               ld a,e
1106+ 9279 A7               and a
1107+ 927A 20 04            jr nz,1F
1108+ 927C
1109+ 927C 06 02            ld b,2
1110+ 927E 18 02            jr 2F
1111+ 9280
1112+ 9280 06 03        1 ld b,3
1113+ 9282 72           2 ld (hl),d
1114+ 9283 23               inc hl
1115+ 9284 14               inc d
1116+ 9285 10 FB            djnz 2B
1117+ 9287
1118+ 9287 C9               ret
1119+ 9288
1120+ 9288              ; -----------------------------------------------------------------
1121+ 9288              ;
1122+ 9288              ;   12/04/23
1123+ 9288              ;
1124+ 9288
1125+ 9288 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 928B A7               and a
1127+ 928C C8               ret z
1128+ 928D
1129+ 928D FE 04            cp 4
1130+ 928F 20 09            jr nz,1F
1131+ 9291
1132+ 9291
1133+ 9291              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9291
1135+ 9291 CD AD 90         call Detecta_colision_nave_entidad
1136+ 9294
1137+ 9294 21 42 89         ld hl,Impacto2
1138+ 9297 CB 5E            bit 3,(hl)
1139+ 9299 C0               ret nz                                               ; Existe colisión, RET.
1140+ 929A
1141+ 929A              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 929A              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 929A
1144+ 929A 21 42 89     1 ld hl,Impacto2
1145+ 929D CB 4E            bit 1,(hl)
1146+ 929F 28 07            jr z,2F
1147+ 92A1
1148+ 92A1 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92A4 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92A6 18 0B            jr 3F
1151+ 92A8
1152+ 92A8 21 42 89     2 ld hl,Impacto2
1153+ 92AB CB 46            bit 0,(hl)
1154+ 92AD C8               ret z
1155+ 92AE
1156+ 92AE              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92AE
1158+ 92AE 21 04 89         ld hl,Ctrl_1
1159+ 92B1 CB D6            set 2,(hl)
1160+ 92B3
1161+ 92B3 C9           3 ret
1162+ 92B4
1163+ 92B4              ; -----------------------------------------------------------------
1164+ 92B4              ;
1165+ 92B4              ;   19/7/23
1166+ 92B4              ;
1167+ 92B4              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92B4
1169+ 92B4 AF           Limpia_Coordenadas_X xor a
1170+ 92B5 06 06            ld b,6
1171+ 92B7 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 92BA 77           1 ld (hl),a
1173+ 92BB 23               inc hl
1174+ 92BC 10 FC            djnz 1B
1175+ 92BE C9               ret
1176+ 92BF
1177+ 92BF              ; -----------------------------------------------------------------
1178+ 92BF              ;
1179+ 92BF              ;   25/04/23
1180+ 92BF              ;
1181+ 92BF
1182+ 92BF              Determina_resultado_comparativa
1183+ 92BF
1184+ 92BF              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92BF              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92BF              ;
1187+ 92BF              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92BF              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92BF              ;
1190+ 92BF              ;   SBC HL,DE
1191+ 92BF
1192+ 92BF              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92BF              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92BF
1195+ 92BF              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92BF              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92BF
1198+ 92BF
1199+ 92BF 3A D9 88         ld a,(Cuad_objeto)
1200+ 92C2 FE 02            cp 2
1201+ 92C4 28 26            jr z,2F
1202+ 92C6 38 24            jr c,2F
1203+ 92C8
1204+ 92C8              ; Cuadrantes 3º y 4º
1205+ 92C8
1206+ 92C8 E6 01            and 1
1207+ 92CA 28 10            jr z,4F
1208+ 92CC
1209+ 92CC              ; Cuadrante 3º
1210+ 92CC
1211+ 92CC 7C               ld a,h
1212+ 92CD 06 00            ld b,0
1213+ 92CF
1214+ 92CF CD 5A 93         call Compara_cositas_H3
1215+ 92D2
1216+ 92D2 04               inc b
1217+ 92D3 05               dec b
1218+ 92D4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92D5
1220+ 92D5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92D6 06 00            ld b,0
1222+ 92D8
1223+ 92D8 CD 6C 93         call Compara_cositas_L3
1224+ 92DB C9               ret
1225+ 92DC
1226+ 92DC              ; Cuadrante 4º
1227+ 92DC
1228+ 92DC 7C           4 ld a,h
1229+ 92DD 06 00            ld b,0
1230+ 92DF
1231+ 92DF CD 7E 93         call Compara_cositas_H4
1232+ 92E2
1233+ 92E2 04               inc b
1234+ 92E3 05               dec b
1235+ 92E4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92E5
1237+ 92E5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92E6 06 00            ld b,0
1239+ 92E8
1240+ 92E8 CD 94 93         call Compara_cositas_L4
1241+ 92EB C9               ret
1242+ 92EC
1243+ 92EC              ; Cuadrantes 1º y 2º.
1244+ 92EC
1245+ 92EC 28 10        2 jr z,3F
1246+ 92EE
1247+ 92EE              ; 1er Cuadrante
1248+ 92EE
1249+ 92EE 7C               ld a,h
1250+ 92EF 06 00            ld b,0
1251+ 92F1
1252+ 92F1 CD 32 93         call Compara_cositas_H1
1253+ 92F4
1254+ 92F4 04               inc b
1255+ 92F5 05               dec b
1256+ 92F6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92F7
1258+ 92F7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92F8 06 00            ld b,0
1260+ 92FA
1261+ 92FA CD 48 93         call Compara_cositas_L1
1262+ 92FD C9               ret
1263+ 92FE
1264+ 92FE
1265+ 92FE              ; 2º Cuadrante
1266+ 92FE
1267+ 92FE 7C           3 ld a,h
1268+ 92FF 06 00            ld b,0
1269+ 9301
1270+ 9301 CD 0E 93         call Compara_cositas_H2
1271+ 9304
1272+ 9304 04               inc b
1273+ 9305 05               dec b
1274+ 9306 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9307
1276+ 9307 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9308 06 00            ld b,0
1278+ 930A
1279+ 930A CD 20 93         call Compara_cositas_L2
1280+ 930D C9               ret
1281+ 930E
1282+ 930E A7           Compara_cositas_H2 and a
1283+ 930F 28 0D            jr z,1F
1284+ 9311              ;    cp $fd
1285+ 9311              ;    jr z,1F
1286+ 9311              ;    cp $fe
1287+ 9311              ;    jr z,1F
1288+ 9311 FE FF            cp $ff
1289+ 9313 28 09            jr z,1F
1290+ 9315 FE 01            cp $01
1291+ 9317 28 05            jr z,1F
1292+ 9319 FE 02            cp $02
1293+ 931B 28 01            jr z,1F
1294+ 931D C0               ret nz
1295+ 931E 04           1 inc b
1296+ 931F C9               ret
1297+ 9320
1298+ 9320 A7           Compara_cositas_L2 and a
1299+ 9321 28 0D            jr z,1F
1300+ 9323              ;    cp $fd
1301+ 9323              ;    jr z,1F
1302+ 9323 FE FE            cp $fe
1303+ 9325 28 09            jr z,1F
1304+ 9327 FE FF            cp $ff
1305+ 9329 28 05            jr z,1F
1306+ 932B FE 01            cp $01
1307+ 932D 28 01            jr z,1F
1308+ 932F              ;    cp $02
1309+ 932F              ;    jr z,1F
1310+ 932F C0               ret nz
1311+ 9330 04           1 inc b
1312+ 9331 C9               ret
1313+ 9332
1314+ 9332 A7           Compara_cositas_H1 and a
1315+ 9333 28 11            jr z,1F
1316+ 9335              ;    cp $fd
1317+ 9335              ;    jr z,1F
1318+ 9335              ;    cp $fe
1319+ 9335              ;    jr z,1F
1320+ 9335 FE FF            cp $ff
1321+ 9337 28 0D            jr z,1F
1322+ 9339 FE 01            cp $01
1323+ 933B 28 09            jr z,1F
1324+ 933D FE 02            cp $02
1325+ 933F 28 05            jr z,1F
1326+ 9341 FE 03            cp $03
1327+ 9343 28 01            jr z,1F
1328+ 9345 C0               ret nz
1329+ 9346 04           1 inc b
1330+ 9347 C9               ret
1331+ 9348
1332+ 9348 A7           Compara_cositas_L1 and a
1333+ 9349 28 0D            jr z,1F
1334+ 934B              ;    cp $fd
1335+ 934B              ;    jr z,1F
1336+ 934B              ;    cp $fe
1337+ 934B              ;    jr z,1F
1338+ 934B              ;    cp $ff
1339+ 934B              ;    jr z,1F
1340+ 934B FE 01            cp $01
1341+ 934D 28 09            jr z,1F
1342+ 934F FE 02            cp $02
1343+ 9351 28 05            jr z,1F
1344+ 9353 FE 03            cp $03
1345+ 9355 28 01            jr z,1F
1346+ 9357 C0               ret nz
1347+ 9358 04           1 inc b
1348+ 9359 C9               ret
1349+ 935A
1350+ 935A A7           Compara_cositas_H3 and a
1351+ 935B 28 0D            jr z,1F
1352+ 935D              ;    cp $fd
1353+ 935D              ;    jr z,1F
1354+ 935D FE FE            cp $fe
1355+ 935F 28 09            jr z,1F
1356+ 9361 FE FF            cp $ff
1357+ 9363 28 05            jr z,1F
1358+ 9365 FE 01            cp $01
1359+ 9367 28 01            jr z,1F
1360+ 9369              ;    cp $02
1361+ 9369              ;    jr z,1F
1362+ 9369              ;    cp $03
1363+ 9369              ;    jr z,1F
1364+ 9369 C0               ret nz
1365+ 936A 04           1 inc b
1366+ 936B C9               ret
1367+ 936C
1368+ 936C A7           Compara_cositas_L3 and a
1369+ 936D 28 0D            jr z,1F
1370+ 936F              ;    cp $fd
1371+ 936F              ;    jr z,1F
1372+ 936F              ;    cp $fe
1373+ 936F              ;    jr z,1F
1374+ 936F              ;    cp $ff
1375+ 936F              ;    jr z,1F
1376+ 936F FE 01            cp $01
1377+ 9371 28 09            jr z,1F
1378+ 9373 FE 02            cp $02
1379+ 9375 28 05            jr z,1F
1380+ 9377 FE 03            cp $03
1381+ 9379 28 01            jr z,1F
1382+ 937B C0               ret nz
1383+ 937C 04           1 inc b
1384+ 937D C9               ret
1385+ 937E
1386+ 937E A7           Compara_cositas_H4 and a
1387+ 937F 28 11            jr z,1F
1388+ 9381 FE FD            cp $fd
1389+ 9383 28 0D            jr z,1F
1390+ 9385 FE FE            cp $fe
1391+ 9387 28 09            jr z,1F
1392+ 9389 FE FF            cp $ff
1393+ 938B 28 05            jr z,1F
1394+ 938D FE 01            cp $01
1395+ 938F 28 01            jr z,1F
1396+ 9391              ;    cp $02
1397+ 9391              ;    jr z,1F
1398+ 9391              ;    cp $03
1399+ 9391              ;    jr z,1F
1400+ 9391 C0               ret nz
1401+ 9392 04           1 inc b
1402+ 9393 C9               ret
1403+ 9394
1404+ 9394 A7           Compara_cositas_L4 and a
1405+ 9395 28 0D            jr z,1F
1406+ 9397              ;    cp $fd
1407+ 9397              ;    jr z,1F
1408+ 9397 FE FE            cp $fe
1409+ 9399 28 09            jr z,1F
1410+ 939B FE FF            cp $ff
1411+ 939D 28 05            jr z,1F
1412+ 939F FE 01            cp $01
1413+ 93A1 28 01            jr z,1F
1414+ 93A3              ;    cp $02
1415+ 93A3              ;    jr z,1F
1416+ 93A3              ;    cp $03
1417+ 93A3              ;    jr z,1F
1418+ 93A3 C0               ret nz
1419+ 93A4 04           1 inc b
1420+ 93A5 C9               ret
# file closed: Disparo.asm
1631  93A6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93A6              ; ******************************************************************************************************************************************************************************************
   2+ 93A6              ;
   3+ 93A6              ; 26/06/23
   4+ 93A6              ;
   5+ 93A6              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93A6
   7+ 93A6 CD 8A 96     Draw call Prepara_draw
   8+ 93A9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93AA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93AB 28 05        	jr z,2F
  11+ 93AD
  12+ 93AD 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93B0 18 0C        	jr 1F
  14+ 93B2
  15+ 93B2 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93B5 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93B8 CD 47 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93BB              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93BB CD EC 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93BE
  21+ 93BE 3A EF 88     1 ld a,(Ctrl_0)
  22+ 93C1 CB 6F        	bit 5,a
  23+ 93C3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93C5
  25+ 93C5 CD DD 93     	call Comprueba_limite_horizontal
  26+ 93C8 CD 6D 94     	call Comprueba_limite_vertical
  27+ 93CB
  28+ 93CB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93CB              ; -----------------------
  30+ 93CB              ; -----------------------
  31+ 93CB              ; -----------------------
  32+ 93CB
  33+ 93CB CD BA 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93CE CD F1 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93D1 CD 50 96     	call Define_rutina_de_impresion
  36+ 93D4
  37+ 93D4 3A EF 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93D7 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93D9 32 EF 88     	ld (Ctrl_0),a
  40+ 93DC
  41+ 93DC C9           	ret
  42+ 93DD
  43+ 93DD              ; *******************************************************************************************************************************************************************************************
  44+ 93DD              ;	21/01/23
  45+ 93DD              ;
  46+ 93DD              ; 	Comprueba_limite_horizontal.
  47+ 93DD              ;
  48+ 93DD              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93DD              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93DD              ;
  51+ 93DD              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93DD              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93DD              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93DD              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93DD
  56+ 93DD
  57+ 93DD
  58+ 93DD 3A EF 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93E0 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93E2 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93E4 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93E6 32 EF 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93E9 18 09            jr 6F
  64+ 93EB CB 5F        1 bit 3,a
  65+ 93ED 28 0A            jr z,2F
  66+ 93EF E6 F7            and $f7
  67+ 93F1 32 EF 88         ld (Ctrl_0),a
  68+ 93F4 CD 47 95     6 call Inicializacion
  69+ 93F7 18 5B            jr 5F
  70+ 93F9 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93FA
  72+ 93FA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93FA              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93FA
  75+ 93FA EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93FB 2A FF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93FE CD A9 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9401 67           	ld h,a
  79+ 9402 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9403 CD A9 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9406 67           	ld h,a
  82+ 9407 A7           	and a
  83+ 9408 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 940A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 940B 3A D9 88     	ld a,(Cuad_objeto)
  86+ 940E FE 02        	cp 2
  87+ 9410 38 1E        	jr c,3F
  88+ 9412 28 1C        	jr z,3F
  89+ 9414 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9415 28 23            jr z,7F
  91+ 9417 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9419 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 941B E1           	pop hl
  94+ 941C
  95+ 941C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 941C              ; _para indicar con E="2" en caso necesario.
  97+ 941C
  98+ 941C E5               push hl
  99+ 941D C5               push bc
 100+ 941E CD A9 99     	call calcula_tercio
 101+ 9421 FE 01        	cp 1
 102+ 9423 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9425 CD 55 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9428 28 26            jr z,9F
 105+ 942A 38 24            jr c,9F
 106+ 942C 1E 00        11 ld e,0
 107+ 942E 18 22            jr 8F
 108+ 9430 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9431 28 07        	jr z, 7F
 110+ 9433 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9435 1E 00         	ld e,0
 112+ 9437 E1           	pop hl
 113+ 9438 18 04        	jr 4F
 114+ 943A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 943C 18 15            jr 10F
 116+ 943E
 117+ 943E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 943E              ; _para indicar con E="2" en caso necesario.
 119+ 943E
 120+ 943E E5           4 push hl
 121+ 943F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9440 CD A9 99     	call calcula_tercio
 123+ 9443 FE 01        	cp 1
 124+ 9445 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9447 CD 55 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 944A 28 04            jr z,9F
 127+ 944C 30 02            jr nc,9F
 128+ 944E 18 02        	jr 8F
 129+ 9450 1E 02        9 ld e,2
 130+ 9452 C1           8 pop bc
 131+ 9453 E1           10 pop hl
 132+ 9454 C9           5 ret
 133+ 9455
 134+ 9455              ; --------------------
 135+ 9455              ;
 136+ 9455              ; 25/08/22
 137+ 9455
 138+ 9455 CD A9 99     Comprueba_centro call calcula_tercio
 139+ 9458 67               ld h,a
 140+ 9459 08           	ex af,af
 141+ 945A FE 02        	cp 2
 142+ 945C 38 07        	jr c,1F
 143+ 945E 28 05        	jr z,1F
 144+ 9460 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9463 18 03        	jr 2F
 146+ 9465 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9468 08           2 ex af,af
 148+ 9469 A7               and a
 149+ 946A ED 42            sbc hl,bc
 150+ 946C C9               ret
 151+ 946D
 152+ 946D              ; *********************************************************************************************************************************************************************************************
 153+ 946D              ;
 154+ 946D              ;   16/8/22
 155+ 946D              ;
 156+ 946D              ;	Comprueba_limite_vertical
 157+ 946D              ;
 158+ 946D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 946D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 946D              ;
 161+ 946D
 162+ 946D 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9470 7D           	ld a,l
 164+ 9471 E6 1F        	and $1F
 165+ 9473 57           	ld d,a
 166+ 9474 3A 01 89     	ld a,(Limite_vertical)
 167+ 9477 BA           	cp d 											; Límite - Posición.
 168+ 9478 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9479 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 947C CB 47        	bit 0,a
 171+ 947E 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9480
 173+ 9480              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9480
 175+ 9480 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9481 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9483
 178+ 9483              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9483              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9483
 181+ 9483 3A CB 88         ld a,(Coordenada_X)
 182+ 9486 16 0F            ld d,Centro_izquierda
 183+ 9488 A7               and a
 184+ 9489 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 948A 28 1E            jr z,3F
 186+ 948C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 948E              ;                                                    ; _salimos sin modificar nada.
 188+ 948E 18 0E            jr 2F
 189+ 9490 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9491 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9493
 192+ 9493              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9493              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9493
 195+ 9493 3A CB 88         ld a,(Coordenada_X)
 196+ 9496 16 10            ld d,Centro_derecha
 197+ 9498 A7               and a
 198+ 9499 92               sub d
 199+ 949A 28 0E            jr z,3F
 200+ 949C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 949E              ;                                                    ; _salimos sin modificar nada.
 202+ 949E CB 43        2 bit 0,e
 203+ 94A0 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94A2 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94A3 CD 37 95         call Modificaccionne
 206+ 94A6 C1           	pop bc
 207+ 94A7 CD 47 95         call Inicializacion
 208+ 94AA C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94AB
 210+ 94AB              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94AB
 212+ 94AB C5           4 push bc
 213+ 94AC 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94AF 0A           	ld a,(bc)
 215+ 94B0 3D           	dec a
 216+ 94B1 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94B2 7D           	ld a,l
 218+ 94B3 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94B4 CB 47        	bit 0,a
 220+ 94B6 28 03        	jr z,5F
 221+ 94B8 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94B9 18 2E        	jr 7F
 223+ 94BB
 224+ 94BB              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94BB
 226+ 94BB 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94BC F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94BD 3A EF 88     	ld a,(Ctrl_0)
 229+ 94C0 CB 4F        	bit 1,a
 230+ 94C2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94C4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94C5
 233+ 94C5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94C5
 235+ 94C5 1C               inc e
 236+ 94C6 1D               dec e
 237+ 94C7 20 07            jr nz,12F
 238+ 94C9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94CA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94CB 22 C7 88     	ld (Posicion_actual),hl
 241+ 94CE 18 44        13 jr 9F
 242+ 94D0 CB 43        12 bit 0,e
 243+ 94D2 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94D4              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94D4 C1           	pop bc
 246+ 94D5 18 D3        	jr 3B
 247+ 94D7 80           14 add b
 248+ 94D8 6F               ld l,a
 249+ 94D9 22 C7 88     	ld (Posicion_actual),hl
 250+ 94DC CD 37 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94DF 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94E1 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94E3 32 EF 88         ld (Ctrl_0),a
 254+ 94E6 F1           	pop af
 255+ 94E7 18 2B        	jr 9F
 256+ 94E9
 257+ 94E9              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94E9
 259+ 94E9 F5           7 push af
 260+ 94EA 3A EF 88     	ld a,(Ctrl_0)
 261+ 94ED CB 47        	bit 0,a
 262+ 94EF 20 1D        	jr nz,8F
 263+ 94F1 F1           	pop af
 264+ 94F2
 265+ 94F2              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94F2
 267+ 94F2 1C           	inc e
 268+ 94F3 1D               dec e
 269+ 94F4 20 07            jr nz,10F
 270+ 94F6 90           	sub b
 271+ 94F7 6F               ld l,a
 272+ 94F8 22 C7 88     	ld (Posicion_actual),hl
 273+ 94FB 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94FD              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94FD CB 43        10 bit 0,e
 276+ 94FF 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9501              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9501 C1           	pop bc
 279+ 9502 18 A6        	jr 3B
 280+ 9504 90           16 sub b
 281+ 9505 6F               ld l,a
 282+ 9506 22 C7 88     	ld (Posicion_actual),hl
 283+ 9509 CD 37 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 950C 18 06            jr 9F
 285+ 950E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9510 32 EF 88         ld (Ctrl_0),a
 287+ 9513 F1           	pop af
 288+ 9514 C1           9 pop bc
 289+ 9515 1E 00        	ld e,0
 290+ 9517 CD 47 95         call Inicializacion
 291+ 951A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 951B 08           	ex af,af
 293+ 951C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 951D 18 8B            jr 3B
 295+ 951F
 296+ 951F              ; --------------------
 297+ 951F
 298+ 951F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9521 CD A5 96     1 call PreviousScan
 300+ 9524 10 FB            djnz 1B
 301+ 9526 22 C7 88     	ld (Posicion_actual),hl
 302+ 9529 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 952A C9           	ret
 304+ 952B
 305+ 952B              ; --------------------
 306+ 952B
 307+ 952B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 952D CD 96 96     1 call NextScan
 309+ 9530 10 FB            djnz 1B
 310+ 9532 22 C7 88     	ld (Posicion_actual),hl
 311+ 9535 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9536 C9           	ret
 313+ 9537
 314+ 9537              ; --------------------
 315+ 9537              ;
 316+ 9537              ;	22/01/23
 317+ 9537              ;
 318+ 9537              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9537              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9537              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9537
 322+ 9537
 323+ 9537              Modificaccionne
 324+ 9537
 325+ 9537 3A D9 88     	ld a,(Cuad_objeto)
 326+ 953A FE 02        	cp 2
 327+ 953C CC 1F 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 953F DC 1F 95         call c,Modifica_Pos_actual
 329+ 9542 C8           	ret z
 330+ 9543 CD 2B 95         call Modifica_Pos_actual2
 331+ 9546 C9               ret
 332+ 9547
 333+ 9547              ; *************************************************************************************************************************************************************************************************
 334+ 9547              ;
 335+ 9547              ;	13/8/22
 336+ 9547              ;
 337+ 9547              ;	Inicializacion
 338+ 9547              ;
 339+ 9547              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9547              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9547              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9547              ;
 343+ 9547              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9547              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9547              ;	_ desaparece/aparece.
 346+ 9547
 347+ 9547              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9547              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9547              ;
 350+ 9547              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9547              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9547              ; 		   [E] ="0"
 353+ 9547
 354+ 9547              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9547
 356+ 9547 CD A9 99     Inicializacion call calcula_tercio
 357+ 954A 28 36        	jr z,primit
 358+ 954C E6 02        	and 2
 359+ 954E 20 07        	jr nz,segmit
 360+ 9550 7D           	ld a,l
 361+ 9551 FE 7F        	cp $7f
 362+ 9553 38 2D        	jr c,primit
 363+ 9555 28 2B        	jr z,primit
 364+ 9557 CD B4 95     segmit call column
 365+ 955A 38 13        	jr c,tercuad
 366+ 955C 3E 04        cuarcuad ld a,4
 367+ 955E 32 D9 88     	ld (Cuad_objeto),a
 368+ 9561 21 20 48     	ld hl,$4820
 369+ 9564 22 FF 88     	ld (Limite_horizontal),hl
 370+ 9567 21 01 89     	ld hl,Limite_vertical
 371+ 956A 36 0D        	ld (hl),$0d
 372+ 956C 08           	ex af,af
 373+ 956D 18 3C        	jr 1F
 374+ 956F              tercuad
 375+ 956F 3E 03        	ld a,3
 376+ 9571 32 D9 88     	ld (Cuad_objeto),a
 377+ 9574 21 20 48     	ld hl,$4820
 378+ 9577 22 FF 88     	ld (Limite_horizontal),hl
 379+ 957A 21 01 89     	ld hl,Limite_vertical
 380+ 957D 36 12        	ld (hl),$12
 381+ 957F 08           	ex af,af
 382+ 9580 18 29        	jr 1F
 383+ 9582 CD B4 95     primit call column
 384+ 9585 38 13        	jr c, primcuad
 385+ 9587              segcuad
 386+ 9587 3E 02        	ld a,2
 387+ 9589 32 D9 88     	ld (Cuad_objeto),a
 388+ 958C 21 C0 4F     	ld hl,$4fc0
 389+ 958F 22 FF 88     	ld (Limite_horizontal),hl
 390+ 9592 21 01 89     	ld hl,Limite_vertical
 391+ 9595 36 0D        	ld (hl),$0d
 392+ 9597 08           	ex af,af
 393+ 9598 18 11        	jr 1F
 394+ 959A              primcuad
 395+ 959A 3E 01        	ld a,1
 396+ 959C 32 D9 88     	ld (Cuad_objeto),a
 397+ 959F 21 C0 4F     	ld hl,$4fc0
 398+ 95A2 22 FF 88     	ld (Limite_horizontal),hl
 399+ 95A5 21 01 89     	ld hl,Limite_vertical
 400+ 95A8 36 12        	ld (hl),$12
 401+ 95AA 08           	ex af,af
 402+ 95AB CD 34 9D     1 call Genera_coordenadas
 403+ 95AE 21 EF 88     	ld hl,Ctrl_0
 404+ 95B1 CB EE        	set 5,(hl)
 405+ 95B3 C9           	ret
 406+ 95B4
 407+ 95B4              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95B4
 409+ 95B4              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95B4              ;
 411+ 95B4              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95B4
 413+ 95B4 7D           column ld a,l
 414+ 95B5 E6 1F        	and $1f
 415+ 95B7 FE 10         	cp $10
 416+ 95B9 C9            	ret
 417+ 95BA
 418+ 95BA              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95BA              ;
 420+ 95BA              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95BA              ;
 422+ 95BA              ; 14/12/22
 423+ 95BA              ;
 424+ 95BA              ;	Modifica: A y BC.
 425+ 95BA
 426+ 95BA 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95BD E6 01        	and 1
 428+ 95BF 28 17        	jr z,1F
 429+ 95C1
 430+ 95C1              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95C1
 432+ 95C1 3A CB 88     	ld a,(Coordenada_X)
 433+ 95C4 47           	ld b,a
 434+ 95C5 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95C6 79           	ld a,c
 436+ 95C7 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95C8 38 08        	jr c,2F
 438+ 95CA 47           	ld b,a
 439+ 95CB 79           	ld a,c
 440+ 95CC 90           	sub b
 441+ 95CD 32 FE 88     	ld (Columnas),a
 442+ 95D0 18 1B        	jr 4F
 443+ 95D2 79           2 ld a,c
 444+ 95D3 32 FE 88     	ld (Columnas),a
 445+ 95D6 18 15        	jr 4F
 446+ 95D8
 447+ 95D8              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95D8
 449+ 95D8 3A CB 88     1 ld a,(Coordenada_X)
 450+ 95DB 81           	add c
 451+ 95DC 3D           	dec a
 452+ 95DD D6 1F        	sub $1f
 453+ 95DF 38 08        	jr c,3F
 454+ 95E1 47           	ld b,a
 455+ 95E2 79           	ld a,c
 456+ 95E3 90           	sub b
 457+ 95E4 32 FE 88     	ld (Columnas),a
 458+ 95E7 18 04        	jr 4F
 459+ 95E9 79           3 ld a,c
 460+ 95EA 32 FE 88     	ld (Columnas),a
 461+ 95ED D9           4 exx
 462+ 95EE 4F           	ld c,a
 463+ 95EF D9           	exx
 464+ 95F0 C9            ret
 465+ 95F1
 466+ 95F1              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95F1              ;
 468+ 95F1              ;   19/7/23
 469+ 95F1              ;
 470+ 95F1              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95F1              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95F1              ;
 473+ 95F1              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95F1              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95F1              ;
 476+ 95F1              ;	DESTRUYE: HL,B Y A.
 477+ 95F1
 478+ 95F1 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95F4 FE 02        	cp 2
 480+ 95F6 38 18        	jr c,1F
 481+ 95F8 28 16        	jr z,1F
 482+ 95FA E6 01        	and 1
 483+ 95FC 28 0D        	jr z,3F
 484+ 95FE
 485+ 95FE              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95FE
 487+ 95FE CD 44 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9601
 489+ 9601 7D           9 ld a,l
 490+ 9602 E6 1F        	and $1f
 491+ 9604 28 2A        	jr z,7F
 492+ 9606 2B           	dec hl
 493+ 9607 10 F8        	djnz 9B
 494+ 9609 18 25        	jr 7F
 495+ 960B
 496+ 960B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 960B
 498+ 960B 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 960E 18 20        	jr 7F
 500+ 9610
 501+ 9610 28 14        1 jr z,2F
 502+ 9612
 503+ 9612              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9612
 505+ 9612 CD 44 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9615
 507+ 9615 7D           4 ld a,l
 508+ 9616 E6 1F        	and $1f
 509+ 9618 28 03        	jr z,6F
 510+ 961A 2B           	dec hl
 511+ 961B 10 F8        	djnz 4B
 512+ 961D 06 0F        6 ld b,15
 513+ 961F CD A5 96     5 call PreviousScan
 514+ 9622 10 FB        	djnz 5B
 515+ 9624 18 0A        	jr 7F
 516+ 9626
 517+ 9626              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9626
 519+ 9626 CD 44 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9629 06 0F        	ld b,15
 521+ 962B CD A5 96     8 call PreviousScan
 522+ 962E 10 FB        	djnz 8B
 523+ 9630
 524+ 9630 E5           7 push hl
 525+ 9631 DD E1        	pop ix
 526+ 9633
 527+ 9633 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 9636 E5           	push hl
 529+ 9637 FD E1        	pop iy
 530+ 9639
 531+ 9639              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9639
 533+ 9639 3A EF 88     	ld a,(Ctrl_0)
 534+ 963C CB 77        	bit 6,a
 535+ 963E C8           	ret z
 536+ 963F
 537+ 963F              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 963F              ; _ entidad / Amadeus´.
 539+ 963F
 540+ 963F DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9643
 542+ 9643 C9           	ret
 543+ 9644
 544+ 9644              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9644              ;
 546+ 9644              ;	2/1/23
 547+ 9644              ;
 548+ 9644              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9644              ;
 550+ 9644              ;	Tras esta rutina tenemos:
 551+ 9644              ;
 552+ 9644              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9644              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9644              ;
 555+ 9644              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9644
 557+ 9644 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 9647 3A FE 88     	ld a,(Columnas)
 559+ 964A 3D           	dec a
 560+ 964B 20 01        	jr nz,1F
 561+ 964D 3C           	inc a
 562+ 964E 47           1 ld b,a
 563+ 964F C9           	ret
 564+ 9650
 565+ 9650              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9650              ;
 567+ 9650              ;	3/1/23
 568+ 9650              ;
 569+ 9650              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9650              ;
 571+ 9650              ;	Destruye: A,B,HL y DE.
 572+ 9650
 573+ 9650              Define_rutina_de_impresion
 574+ 9650
 575+ 9650 3A C6 88     	ld a,(Columns)
 576+ 9653 47           	ld b,a
 577+ 9654 3A FE 88     	ld a,(Columnas)
 578+ 9657 B8           	cp b
 579+ 9658 20 0D        	jr nz,2f
 580+ 965A
 581+ 965A              ;	La entidad se imprime entera.
 582+ 965A
 583+ 965A 21 79 97     	ld hl, Indice_entidades_completas
 584+ 965D E6 01        	and 1
 585+ 965F 28 02        	jr z,1F
 586+ 9661
 587+ 9661 23           	inc hl
 588+ 9662 23           	inc hl
 589+ 9663
 590+ 9663 CD E0 8C     1 call Extrae_address
 591+ 9666 C9           	ret		;	ret
 592+ 9667
 593+ 9667              ;	La entidad no se imprime entera en pantalla.
 594+ 9667
 595+ 9667 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 966A E6 01        	and 1
 597+ 966C 28 17        	jr z,3F
 598+ 966E
 599+ 966E              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 966E
 601+ 966E 21 7D 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9671 3A C6 88     4 ld a,(Columns)
 603+ 9674 E6 01        	and 1
 604+ 9676 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9678
 606+ 9678 23           	inc hl
 607+ 9679 23           	inc hl
 608+ 967A
 609+ 967A 3A FE 88     	ld a,(Columnas)
 610+ 967D E6 01        	and 1
 611+ 967F 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9681
 613+ 9681 23           	inc hl
 614+ 9682 23           	inc hl
 615+ 9683
 616+ 9683 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9685
 618+ 9685 21 83 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9688 18 E7        	jr 4B
 620+ 968A
 621+ 968A              ; --------------------------------------------------------------------------------------------------------------------
 622+ 968A              ;
 623+ 968A              ;	Prepara_draw
 624+ 968A              ;
 625+ 968A              ;	Es una rutina de carga.
 626+ 968A              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 968A              ;
 628+ 968A              ;	FUNCIONAMIENTO:
 629+ 968A              ;
 630+ 968A              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 968A              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 968A              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 968A              ;
 634+ 968A              ;	DESTRUYE:
 635+ 968A              ;
 636+ 968A              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 968A
 638+ 968A 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 968D 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 968E 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 968F 4E           	ld c,(hl)
 642+ 9690 2A C7 88     	ld hl,(Posicion_actual)
 643+ 9693 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9695 C9           	ret
 645+ 9696
 646+ 9696              ;----------------------------------------------------------------------------------------------------------------
 647+ 9696              ;
 648+ 9696              ;	5/08/22
 649+ 9696              ;
 650+ 9696              ;   NextScan.
 651+ 9696              ;
 652+ 9696              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9696              ;
 654+ 9696              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9696              ;
 656+ 9696              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9696              ;
 658+ 9696              ;       DESTRUIDOS: AF y HL !!!
 659+ 9696              ;
 660+ 9696              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9696              ;
 662+ 9696
 663+ 9696 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9697 7C               ld a,h
 665+ 9698 E6 07            and 7
 666+ 969A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 969B
 668+ 969B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 969C C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 969E 6F               ld l,a
 671+ 969F D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96A0
 673+ 96A0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96A1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96A3 67               ld h,a
 676+ 96A4 C9               ret
 677+ 96A5
 678+ 96A5              ;----------------------------------------------------------------------------------------------------------------
 679+ 96A5              ;
 680+ 96A5              ;	5/08/22
 681+ 96A5              ;
 682+ 96A5              ;   PreviousScan.
 683+ 96A5              ;
 684+ 96A5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96A5              ;
 686+ 96A5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96A5              ;
 688+ 96A5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96A5              ;
 690+ 96A5              ;       DESTRUIDOS: AF y HL !!!
 691+ 96A5              ;
 692+ 96A5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96A5              ;
 694+ 96A5
 695+ 96A5 7C           PreviousScan ld a,h
 696+ 96A6 25               dec h               ; Dec H.
 697+ 96A7 E6 07            and 7
 698+ 96A9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96AA
 700+ 96AA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96AB D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96AD 6F               ld l,a
 703+ 96AE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96AF
 705+ 96AF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96B0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96B2 67               ld h,a
 708+ 96B3 C9               ret
 709+ 96B4
 710+ 96B4              ; -----------------------------------------------------------------------------------
 711+ 96B4              ;
 712+ 96B4              ;	31/7/23
 713+ 96B4              ;
 714+ 96B4              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96B4              ;	Extrae fotos de Album_de_fotos.
 716+ 96B4
 717+ 96B4              Extrae_foto_entidades
 718+ 96B4
 719+ 96B4 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96B7 7E           	ld a,(hl)
 721+ 96B8 A7           	and a
 722+ 96B9 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96BA
 724+ 96BA 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96BD A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96BE C8           	ret z
 727+ 96BF
 728+ 96BF              ; -----------------------------------
 729+ 96BF
 730+ 96BF ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96C3 31 00 70     	ld sp,Album_de_fotos
 732+ 96C6
 733+ 96C6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96C8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96C9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96CA
 737+ 96CA ED 73 17 89  	ld (Stack_2),sp
 738+ 96CE ED 7B 15 89  	ld sp,(Stack)
 739+ 96D2
 740+ 96D2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96D2
 742+ 96D2 3E CD        	ld a,$cd
 743+ 96D4 32 DC 96     	ld (Imprime),a
 744+ 96D7 EB           	ex de,hl
 745+ 96D8 22 DD 96     	ld (Imprime+1),hl
 746+ 96DB EB           	ex de,hl
 747+ 96DC
 748+ 96DC              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96DC
 750+ 96DC 00 00 00     Imprime db 0,0,0
 751+ 96DF
 752+ 96DF ED 73 15 89  	ld (Stack),sp
 753+ 96E3
 754+ 96E3 3A 10 89     	ld a,(Numero_de_malotes)
 755+ 96E6 3D           	dec a
 756+ 96E7 28 09        	jr z,1F
 757+ 96E9 32 10 89      	ld (Numero_de_malotes),a
 758+ 96EC
 759+ 96EC ED 7B 17 89  	ld sp,(Stack_2)
 760+ 96F0 18 D4        	jr 2B
 761+ 96F2
 762+ 96F2 AF           1 xor a
 763+ 96F3 32 17 89     	ld (Stack_2),a
 764+ 96F6
 765+ 96F6 C9           	ret
 766+ 96F7
 767+ 96F7              ; -----------------------------------------------------------------------------------
 768+ 96F7              ;
 769+ 96F7              ;	28/2/23
 770+ 96F7              ;
 771+ 96F7              ;	Pinta los disparos generados.
 772+ 96F7
 773+ 96F7              Extrae_foto_disparos
 774+ 96F7
 775+ 96F7 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96FA 7E               ld a,(hl)
 777+ 96FB A7               and a
 778+ 96FC C8               ret z
 779+ 96FD
 780+ 96FD 3A 3D 89     	ld a,(Numero_de_disparotes)
 781+ 9700 A7           	and a
 782+ 9701 C8           	ret z
 783+ 9702 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9706 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 9709
 786+ 9709 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 970B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 970C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 970D
 790+ 970D ED 73 17 89  	ld (Stack_2),sp
 791+ 9711 ED 7B 15 89  	ld sp,(Stack)
 792+ 9715
 793+ 9715              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9715
 795+ 9715 3E CD        	ld a,$cd
 796+ 9717 32 1F 97     	ld (Imprime2),a
 797+ 971A EB           	ex de,hl
 798+ 971B 22 20 97     	ld (Imprime2+1),hl
 799+ 971E EB           	ex de,hl
 800+ 971F
 801+ 971F              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 971F
 803+ 971F 00 00 00     Imprime2 db 0,0,0
 804+ 9722
 805+ 9722 3A 3D 89     	ld a,(Numero_de_disparotes)
 806+ 9725 3D           	dec a
 807+ 9726 28 09        	jr z,1F
 808+ 9728 32 3D 89      	ld (Numero_de_disparotes),a
 809+ 972B
 810+ 972B ED 7B 17 89  	ld sp,(Stack_2)
 811+ 972F 18 D8        	jr 2B
 812+ 9731
 813+ 9731 AF           1 xor a
 814+ 9732 32 17 89     	ld (Stack_2),a
 815+ 9735 C9           	ret
 816+ 9736
 817+ 9736              ; -----------------------------------------------------------------------------------
 818+ 9736              ;
 819+ 9736              ;	4/9/23
 820+ 9736              ;
 821+ 9736              ;	Rutina principal de pintado de Amadeus.
 822+ 9736              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9736
 824+ 9736              Extrae_foto_Amadeus
 825+ 9736
 826+ 9736 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 827+ 9739 7E           	ld a,(hl)
 828+ 973A A7           	and a
 829+ 973B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 973C
 831+ 973C 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 973F A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9740 C8           	ret z
 834+ 9741
 835+ 9741              ; -----------------------------------
 836+ 9741
 837+ 9741 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9745 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 9748
 840+ 9748 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 974A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 974B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 974C
 844+ 974C ED 73 17 89  	ld (Stack_2),sp
 845+ 9750 ED 7B 15 89  	ld sp,(Stack)
 846+ 9754
 847+ 9754              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9754
 849+ 9754 3E CD        	ld a,$cd
 850+ 9756 32 5E 97     	ld (Imprime_Amadeus),a
 851+ 9759 EB           	ex de,hl
 852+ 975A 22 5F 97     	ld (Imprime_Amadeus+1),hl
 853+ 975D EB           	ex de,hl
 854+ 975E
 855+ 975E              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 975E
 857+ 975E 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9761
 859+ 9761 ED 73 15 89  	ld (Stack),sp
 860+ 9765
 861+ 9765 3A 10 89     	ld a,(Numero_de_malotes)
 862+ 9768 3D           	dec a
 863+ 9769 28 09        	jr z,1F
 864+ 976B 32 10 89      	ld (Numero_de_malotes),a
 865+ 976E
 866+ 976E ED 7B 17 89  	ld sp,(Stack_2)
 867+ 9772 18 D4        	jr 2B
 868+ 9774
 869+ 9774 AF           1 xor a
 870+ 9775 32 17 89     	ld (Stack_2),a
 871+ 9778
 872+ 9778 C9           	ret
# file closed: Draw_XOR.asm
1632  9779              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9779              ;   índices de Rutinas de impresión.
   2+ 9779
   3+ 9779 89 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 977B B6 97            defw Pinta_Amadeus_3x2
   5+ 977D
   6+ 977D 0C 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 977F AC 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9781 60 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9783
  10+ 9783 36 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9785 3A 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9787 EE 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9789
  14+ 9789
  15+ 9789              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9789              ;
  17+ 9789              ;   12/12/22
  18+ 9789              ;
  19+ 9789              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9789              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9789              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9789              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9789              ;
  24+ 9789              ;   Modifica: DE y HL.
  25+ 9789
  26+ 9789 ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 978D FD F9        	ld sp,iy
  28+ 978F 06 10            ld b,16
  29+ 9791 D1           1 pop de
  30+ 9792 7B               ld a,e
  31+ 9793 AE               xor (hl)
  32+ 9794 77           	ld (hl),a
  33+ 9795 23           	inc hl
  34+ 9796 7A               ld a,d
  35+ 9797 AE               xor (hl)
  36+ 9798 77           	ld (hl),a
  37+ 9799 2B           	dec hl
  38+ 979A 24           	inc h
  39+ 979B 7C               ld a,h
  40+ 979C E6 07            and 7
  41+ 979E 20 0A            jr nz,2F
  42+ 97A0 7D               ld a,l
  43+ 97A1 C6 20            add a,$20
  44+ 97A3 6F               ld l,a
  45+ 97A4 38 04            jr c,2F
  46+ 97A6 7C               ld a,h
  47+ 97A7 D6 08            sub 8
  48+ 97A9 67               ld h,a
  49+ 97AA 7C           2 ld a,h
  50+ 97AB FE 58            cp $58
  51+ 97AD 28 02            jr z,3F
  52+ 97AF 10 E0            djnz 1B
  53+ 97B1 ED 7B 15 89  3 ld sp,(Stack)
  54+ 97B5 C9           	ret
  55+ 97B6
  56+ 97B6 ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97BA FD F9        	ld sp,iy
  58+ 97BC 06 08            ld b,8
  59+ 97BE D1           1 pop de
  60+ 97BF 7B               ld a,e
  61+ 97C0 AE               xor (hl)
  62+ 97C1 77           	ld (hl),a
  63+ 97C2 23           	inc hl
  64+ 97C3 7A               ld a,d
  65+ 97C4 AE               xor (hl)
  66+ 97C5 77           	ld (hl),a
  67+ 97C6 23           	inc hl
  68+ 97C7 D1           	pop de
  69+ 97C8 7B               ld a,e
  70+ 97C9 AE               xor (hl)
  71+ 97CA 77           	ld (hl),a
  72+ 97CB 2B           	dec hl
  73+ 97CC 2B           	dec hl
  74+ 97CD 24           	inc h
  75+ 97CE 7C               ld a,h
  76+ 97CF E6 07            and 7
  77+ 97D1 20 0A            jr nz,2F
  78+ 97D3 7D               ld a,l
  79+ 97D4 C6 20            add a,$20
  80+ 97D6 6F               ld l,a
  81+ 97D7 38 04            jr c,2F
  82+ 97D9 7C               ld a,h
  83+ 97DA D6 08            sub 8
  84+ 97DC 67               ld h,a
  85+ 97DD 7C           2 ld a,h
  86+ 97DE FE 58            cp $58
  87+ 97E0 28 25            jr z,4F
  88+ 97E2 7A               ld a,d
  89+ 97E3 AE               xor (hl)
  90+ 97E4 77               ld (hl),a
  91+ 97E5 D1           	pop de
  92+ 97E6 23           	inc hl
  93+ 97E7 7B               ld a,e
  94+ 97E8 AE               xor (hl)
  95+ 97E9 77           	ld (hl),a
  96+ 97EA 23           	inc hl
  97+ 97EB 7A               ld a,d
  98+ 97EC AE               xor (hl)
  99+ 97ED 77           	ld (hl),a
 100+ 97EE 2B           	dec hl
 101+ 97EF 2B           	dec hl
 102+ 97F0 24           	inc h
 103+ 97F1 7C               ld a,h
 104+ 97F2 E6 07            and 7
 105+ 97F4 20 0A            jr nz,3F
 106+ 97F6 7D               ld a,l
 107+ 97F7 C6 20            add a,$20
 108+ 97F9 6F               ld l,a
 109+ 97FA 38 04            jr c,3F
 110+ 97FC 7C               ld a,h
 111+ 97FD D6 08            sub 8
 112+ 97FF 67               ld h,a
 113+ 9800 7C           3 ld a,h
 114+ 9801 FE 58            cp $58
 115+ 9803 28 02            jr z,4F
 116+ 9805 10 B7            djnz 1B
 117+ 9807 ED 7B 15 89  4 ld sp,(Stack)
 118+ 980B C9           	ret
 119+ 980C
 120+ 980C              ; ---------------------------------------------------
 121+ 980C
 122+ 980C ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9810 FD F9        	ld sp,iy
 124+ 9812
 125+ 9812              ; >>>
 126+ 9812
 127+ 9812 06 10            ld b,16
 128+ 9814 D1           1 pop de
 129+ 9815 7A           	ld a,d
 130+ 9816 AE           	xor (hl)
 131+ 9817 77           	ld (hl),a
 132+ 9818 24           	inc h
 133+ 9819 7C               ld a,h
 134+ 981A E6 07            and 7
 135+ 981C 20 0C            jr nz,2F
 136+ 981E 7D               ld a,l
 137+ 981F C6 20            add a,$20
 138+ 9821 6F               ld l,a
 139+ 9822 38 06            jr c,2F
 140+ 9824 7C               ld a,h
 141+ 9825 D6 08            sub 8
 142+ 9827 67               ld h,a
 143+ 9828 18 00            jr 2F
 144+ 982A 7C           2 ld a,h
 145+ 982B FE 58            cp $58
 146+ 982D 28 02            jr z,3F
 147+ 982F 10 E3            djnz 1B
 148+ 9831 ED 7B 15 89  3 ld sp,(Stack)
 149+ 9835 C9           	ret
 150+ 9836
 151+ 9836 ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 983A FD F9        	ld sp,iy
 153+ 983C
 154+ 983C              ; >>>
 155+ 983C
 156+ 983C 06 10            ld b,16
 157+ 983E D1           1 pop de
 158+ 983F 7B           	ld a,e
 159+ 9840 AE           	xor (hl)
 160+ 9841 77           	ld (hl),a
 161+ 9842 24           	inc h
 162+ 9843 7C               ld a,h
 163+ 9844 E6 07            and 7
 164+ 9846 20 0C            jr nz,2F
 165+ 9848 7D               ld a,l
 166+ 9849 C6 20            add a,$20
 167+ 984B 6F               ld l,a
 168+ 984C 38 06            jr c,2F
 169+ 984E 7C               ld a,h
 170+ 984F D6 08            sub 8
 171+ 9851 67               ld h,a
 172+ 9852 18 00            jr 2F
 173+ 9854 7C           2 ld a,h
 174+ 9855 FE 58            cp $58
 175+ 9857 28 02            jr z,3F
 176+ 9859 10 E3            djnz 1B
 177+ 985B ED 7B 15 89  3 ld sp,(Stack)
 178+ 985F C9           	ret
 179+ 9860
 180+ 9860              ; ---------------------------------------------------
 181+ 9860
 182+ 9860 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9864 FD F9        	ld sp,iy
 184+ 9866 06 08            ld b,8
 185+ 9868 D1           1 pop de
 186+ 9869 7A           	ld a,d
 187+ 986A AE           	xor (hl)
 188+ 986B 77           	ld (hl),a
 189+ 986C 23           	inc hl
 190+ 986D D1           	pop de
 191+ 986E 7B           	ld a,e
 192+ 986F AE           	xor (hl)
 193+ 9870 77           	ld (hl),a
 194+ 9871 2B           	dec hl
 195+ 9872 24            	inc h
 196+ 9873 7C               ld a,h
 197+ 9874 E6 07            and 7
 198+ 9876 20 0A            jr nz,2F
 199+ 9878 7D               ld a,l
 200+ 9879 C6 20            add a,$20
 201+ 987B 6F               ld l,a
 202+ 987C 38 04            jr c,2F
 203+ 987E 7C               ld a,h
 204+ 987F D6 08            sub 8
 205+ 9881 67               ld h,a
 206+ 9882 7C           2 ld a,h
 207+ 9883 FE 58            cp $58
 208+ 9885 28 20            jr z,4F
 209+ 9887 D1               pop de
 210+ 9888 7B           	ld a,e
 211+ 9889 AE           	xor (hl)
 212+ 988A 77           	ld (hl),a
 213+ 988B 23           	inc hl
 214+ 988C 7A           	ld a,d
 215+ 988D AE           	xor (hl)
 216+ 988E 77           	ld (hl),a
 217+ 988F 2B           	dec hl
 218+ 9890 24           	inc h
 219+ 9891 7C               ld a,h
 220+ 9892 E6 07            and 7
 221+ 9894 20 0A            jr nz,3F
 222+ 9896 7D               ld a,l
 223+ 9897 C6 20            add a,$20
 224+ 9899 6F               ld l,a
 225+ 989A 38 04            jr c,3F
 226+ 989C 7C               ld a,h
 227+ 989D D6 08            sub 8
 228+ 989F 67               ld h,a
 229+ 98A0 7C           3 ld a,h
 230+ 98A1 FE 58            cp $58
 231+ 98A3 28 02            jr z,4F
 232+ 98A5 10 C1            djnz 1B
 233+ 98A7 ED 7B 15 89  4 ld sp,(Stack)
 234+ 98AB C9           	ret
 235+ 98AC
 236+ 98AC ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98B0 FD F9        	ld sp,iy
 238+ 98B2 06 08            ld b,8
 239+ 98B4 D1           1 pop de
 240+ 98B5 D1           	pop de
 241+ 98B6 7B           	ld a,e
 242+ 98B7 AE           	xor (hl)
 243+ 98B8 77           	ld (hl),a
 244+ 98B9 24            	inc h
 245+ 98BA 7C               ld a,h
 246+ 98BB E6 07            and 7
 247+ 98BD 20 0A            jr nz,2F
 248+ 98BF 7D               ld a,l
 249+ 98C0 C6 20            add a,$20
 250+ 98C2 6F               ld l,a
 251+ 98C3 38 04            jr c,2F
 252+ 98C5 7C               ld a,h
 253+ 98C6 D6 08            sub 8
 254+ 98C8 67               ld h,a
 255+ 98C9 7C           2 ld a,h
 256+ 98CA FE 58            cp $58
 257+ 98CC 28 1B            jr z,4F
 258+ 98CE D1               pop de
 259+ 98CF 7A           	ld a,d
 260+ 98D0 AE           	xor (hl)
 261+ 98D1 77           	ld (hl),a
 262+ 98D2 24           	inc h
 263+ 98D3 7C               ld a,h
 264+ 98D4 E6 07            and 7
 265+ 98D6 20 0A            jr nz,3F
 266+ 98D8 7D               ld a,l
 267+ 98D9 C6 20            add a,$20
 268+ 98DB 6F               ld l,a
 269+ 98DC 38 04            jr c,3F
 270+ 98DE 7C               ld a,h
 271+ 98DF D6 08            sub 8
 272+ 98E1 67               ld h,a
 273+ 98E2 7C           3 ld a,h
 274+ 98E3 FE 58            cp $58
 275+ 98E5 28 02            jr z,4F
 276+ 98E7 10 CB            djnz 1B
 277+ 98E9 ED 7B 15 89  4 ld sp,(Stack)
 278+ 98ED C9           	ret
 279+ 98EE
 280+ 98EE ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98F2 FD F9        	ld sp,iy
 282+ 98F4 06 08            ld b,8
 283+ 98F6 D1           1 pop de
 284+ 98F7 7B           	ld a,e
 285+ 98F8 AE           	xor (hl)
 286+ 98F9 77           	ld (hl),a
 287+ 98FA 23           	inc hl
 288+ 98FB 7A           	ld a,d
 289+ 98FC AE           	xor (hl)
 290+ 98FD 77           	ld (hl),a
 291+ 98FE 2B           	dec hl
 292+ 98FF 24             	inc h
 293+ 9900 7C               ld a,h
 294+ 9901 E6 07            and 7
 295+ 9903 20 0A            jr nz,2F
 296+ 9905 7D               ld a,l
 297+ 9906 C6 20            add a,$20
 298+ 9908 6F               ld l,a
 299+ 9909 38 04            jr c,2F
 300+ 990B 7C               ld a,h
 301+ 990C D6 08            sub 8
 302+ 990E 67               ld h,a
 303+ 990F 7C           2 ld a,h
 304+ 9910 FE 58            cp $58
 305+ 9912 28 21            jr z,4F
 306+ 9914 D1               pop de
 307+ 9915 7A           	ld a,d
 308+ 9916 AE           	xor (hl)
 309+ 9917 77           	ld (hl),a
 310+ 9918 23           	inc hl
 311+ 9919 D1               pop de
 312+ 991A 7B           	ld a,e
 313+ 991B AE           	xor (hl)
 314+ 991C 77           	ld (hl),a
 315+ 991D 2B           	dec hl
 316+ 991E 24           	inc h
 317+ 991F 7C               ld a,h
 318+ 9920 E6 07            and 7
 319+ 9922 20 0A            jr nz,3F
 320+ 9924 7D               ld a,l
 321+ 9925 C6 20            add a,$20
 322+ 9927 6F               ld l,a
 323+ 9928 38 04            jr c,3F
 324+ 992A 7C               ld a,h
 325+ 992B D6 08            sub 8
 326+ 992D 67               ld h,a
 327+ 992E 7C           3 ld a,h
 328+ 992F FE 58            cp $58
 329+ 9931 28 02            jr z,4F
 330+ 9933 10 C1            djnz 1B
 331+ 9935 ED 7B 15 89  4 ld sp,(Stack)
 332+ 9939 C9           	ret
 333+ 993A
 334+ 993A ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 993E FD F9        	ld sp,iy
 336+ 9940 06 08            ld b,8
 337+ 9942 D1           1 pop de
 338+ 9943 7B           	ld a,e
 339+ 9944 AE           	xor (hl)
 340+ 9945 77           	ld (hl),a
 341+ 9946 24            	inc h
 342+ 9947 7C               ld a,h
 343+ 9948 E6 07            and 7
 344+ 994A 20 0A            jr nz,2F
 345+ 994C 7D               ld a,l
 346+ 994D C6 20            add a,$20
 347+ 994F 6F               ld l,a
 348+ 9950 38 04            jr c,2F
 349+ 9952 7C               ld a,h
 350+ 9953 D6 08            sub 8
 351+ 9955 67               ld h,a
 352+ 9956 7C           2 ld a,h
 353+ 9957 FE 58            cp $58
 354+ 9959 28 1C            jr z,4F
 355+ 995B D1               pop de
 356+ 995C 7A           	ld a,d
 357+ 995D AE           	xor (hl)
 358+ 995E 77           	ld (hl),a
 359+ 995F 24           	inc h
 360+ 9960 7C               ld a,h
 361+ 9961 E6 07            and 7
 362+ 9963 20 0A            jr nz,3F
 363+ 9965 7D               ld a,l
 364+ 9966 C6 20            add a,$20
 365+ 9968 6F               ld l,a
 366+ 9969 38 04            jr c,3F
 367+ 996B 7C               ld a,h
 368+ 996C D6 08            sub 8
 369+ 996E 67               ld h,a
 370+ 996F 7C           3 ld a,h
 371+ 9970 FE 58            cp $58
 372+ 9972 28 03            jr z,4F
 373+ 9974 D1               pop de
 374+ 9975 10 CB            djnz 1B
 375+ 9977 ED 7B 15 89  4 ld sp,(Stack)
 376+ 997B C9           	ret
 377+ 997C
 378+ 997C              ; ---------------------------------------------------
 379+ 997C              ;
 380+ 997C              ;   27/02/23
 381+ 997C              ;
 382+ 997C              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 997C              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 997C              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 997C
 386+ 997C ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 9980 FD F9            ld sp,iy
 388+ 9982 06 03            ld b,3
 389+ 9984 D1           1 pop de
 390+ 9985 7B               ld a,e
 391+ 9986 AE               xor (hl)
 392+ 9987 77               ld (hl),a
 393+ 9988 23               inc hl
 394+ 9989 7A               ld a,d
 395+ 998A AE               xor (hl)
 396+ 998B 77               ld (hl),a
 397+ 998C 2B               dec hl
 398+ 998D
 399+ 998D 24               inc h
 400+ 998E 7C               ld a,h
 401+ 998F E6 07            and 7
 402+ 9991 20 0A            jr nz,2F
 403+ 9993 7D               ld a,l
 404+ 9994 C6 20            add a,$20
 405+ 9996 6F               ld l,a
 406+ 9997 38 04            jr c,2F
 407+ 9999 7C               ld a,h
 408+ 999A D6 08            sub 8
 409+ 999C 67               ld h,a
 410+ 999D 7C           2 ld a,h
 411+ 999E FE 58            cp $58
 412+ 99A0 28 02            jr z,3F
 413+ 99A2
 414+ 99A2 10 E0            djnz 1B
 415+ 99A4 ED 7B 15 89  3 ld sp,(Stack)
 416+ 99A8 C9               ret
 417+ 99A9
# file closed: Rutinas_de_impresion_sprites.asm
1633  99A9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99A9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99A9              ;
   3+ 99A9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99A9              ;
   5+ 99A9              ; *****************************************************************************************************************************************************************************************
   6+ 99A9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99A9
   8+ 99A9 7C           calcula_tercio ld a,h
   9+ 99AA E6 18        	and $18
  10+ 99AC CB 2F        	sra a
  11+ 99AE CB 2F        	sra a
  12+ 99B0 CB 2F        	sra a
  13+ 99B2 C9           	ret
  14+ 99B3
# file closed: calcula_tercio.asm
1634  99B3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99B3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99B3              ;
   3+ 99B3              ;
   4+ 99B3              ;	CLS.
   5+ 99B3              ;
   6+ 99B3              ;	Limpia la pantalla y define sus atributos.
   7+ 99B3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99B3              ;
   9+ 99B3              ;	COLORES: 0 ..... NEGRO
  10+ 99B3              ;    		 1 ..... AZUL
  11+ 99B3              ; 			 2 ..... ROJO
  12+ 99B3              ;			 3 ..... MAGENTA
  13+ 99B3              ; 			 4 ..... VERDE
  14+ 99B3              ; 			 5 ..... CIAN
  15+ 99B3              ;			 6 ..... AMARILLO
  16+ 99B3              ; 			 7 ..... BLANCO
  17+ 99B3              ;
  18+ 99B3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99B3              ;
  20+ 99B3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99B3
  22+ 99B3
  23+ 99B3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99B6 11 01 40     	LD DE,$4001
  25+ 99B9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99BC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99BE ED B0        	LDIR
  28+ 99C0 01 FF 02     	LD BC,767
  29+ 99C3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99C4 ED B0        	LDIR
  31+ 99C6 C9           	ret
  32+ 99C7
# file closed: Cls.asm
1635  99C7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99C7              ; ******************************************************************************************************************************************************************************************
   2+ 99C7              ;
   3+ 99C7              ;   20/05/23
   4+ 99C7              ;
   5+ 99C7              ;	Recompone_posicion_inicio
   6+ 99C7              ;
   7+ 99C7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99C7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99C7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99C7              ;	_ a una u otra rutina.
  11+ 99C7
  12+ 99C7              Recompone_posicion_inicio
  13+ 99C7
  14+ 99C7 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 99CA 7D           	ld a,l
  16+ 99CB E6 1F        	and $1f
  17+ 99CD 28 16        	jr z,1F
  18+ 99CF
  19+ 99CF FE 1F        	cp $1f
  20+ 99D1 28 0D        	jr z,3F
  21+ 99D3
  22+ 99D3 21 02 89     	ld hl,Ctrl_2
  23+ 99D6 CB C6        	set 0,(hl)
  24+ 99D8 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 99DB 22 05 89     	ld (Repone_puntero_objeto),hl
  26+ 99DE 18 08        	jr 2F
  27+ 99E0
  28+ 99E0 CD 81 9B     3 call Mov_left
  29+ 99E3 18 03        	jr 2F
  30+ 99E5
  31+ 99E5 CD 63 9A     1 call Mov_right
  32+ 99E8 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99EB 22 C9 88     	ld (Puntero_objeto),hl
  34+ 99EE C9           	ret
  35+ 99EF
  36+ 99EF              ; ******************************************************************************************************************************************************************************************
  37+ 99EF              ;
  38+ 99EF              ;   27/05/23
  39+ 99EF              ;
  40+ 99EF              ;	Mov_down
  41+ 99EF              ;
  42+ 99EF              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99EF              ;
  44+ 99EF              ;
  45+ 99EF              Mov_down
  46+ 99EF
  47+ 99EF CD 51 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99F2              ;																	; _ repone (Puntero_objeto).
  49+ 99F2 21 EF 88     	ld hl,Ctrl_0
  50+ 99F5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99F7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99F7              ; 																	; _ en el caso de que no lo haya.
  53+ 99F7 3A DD 88     	ld a,(Vel_down)
  54+ 99FA 47           	ld b,a
  55+ 99FB 2A C7 88         ld hl,(Posicion_actual)
  56+ 99FE CD A9 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A01 E6 02        	and 2
  58+ 9A03 28 0F        	jr z,1F
  59+ 9A05
  60+ 9A05              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A05              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A05
  63+ 9A05 7C           	ld a,h
  64+ 9A06 FE 57        	cp $57
  65+ 9A08 20 0A        	jr nz,1F
  66+ 9A0A
  67+ 9A0A 7D           	ld a,l
  68+ 9A0B C6 20        	add $20
  69+ 9A0D 30 05        	jr nc,1F
  70+ 9A0F
  71+ 9A0F              ; ------------------------------
  72+ 9A0F              ;	call Reaparece_arriba
  73+ 9A0F CD 0E 9D     	call Reinicio
  74+ 9A12              ; ------------------------------
  75+ 9A12
  76+ 9A12 18 08        	jr 3F
  77+ 9A14 CD 96 96     1 call NextScan
  78+ 9A17 22 C7 88     	ld (Posicion_actual),hl
  79+ 9A1A 10 E2            djnz 2B
  80+ 9A1C CD 34 9D     3 call Genera_coordenadas
  81+ 9A1F C9           	ret
  82+ 9A20
  83+ 9A20              ; ******************************************************************************************************************************************************************************************
  84+ 9A20              ;
  85+ 9A20              ;   27/05/23
  86+ 9A20              ;
  87+ 9A20              ;	Mov_up
  88+ 9A20              ;
  89+ 9A20              ; 	Mueve el Sprite hacia arriba.
  90+ 9A20              ;
  91+ 9A20              ;
  92+ 9A20              Mov_up
  93+ 9A20
  94+ 9A20 CD 51 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A23              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A23 21 EF 88     	ld hl,Ctrl_0
  97+ 9A26 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A28              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A28              ; 																		; _ en el caso de que no lo haya.
 100+ 9A28 3A DC 88     	ld a,(Vel_up)
 101+ 9A2B 47           	ld b,a
 102+ 9A2C 2A C7 88     	ld hl,(Posicion_actual)
 103+ 9A2F CD A9 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A32 A7           	and a
 105+ 9A33 20 10        	jr nz,1F
 106+ 9A35
 107+ 9A35              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A35              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A35
 110+ 9A35 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A36 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A38 20 0B            jr nz,1F
 113+ 9A3A 7D               ld a,l
 114+ 9A3B D6 20            sub $20
 115+ 9A3D 30 06            jr nc,1F
 116+ 9A3F 25               dec h
 117+ 9A40
 118+ 9A40              ; -----------------------------
 119+ 9A40 CD EF 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A43              ;	call Reinicio
 121+ 9A43              ; -----------------------------
 122+ 9A43
 123+ 9A43 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A45 CD A5 96     1 call PreviousScan
 125+ 9A48 22 C7 88     	ld (Posicion_actual),hl
 126+ 9A4B 10 E2            djnz 3B
 127+ 9A4D CD 34 9D     2 call Genera_coordenadas
 128+ 9A50 C9           	ret
 129+ 9A51
 130+ 9A51              ; -----------------------------
 131+ 9A51              ;
 132+ 9A51              ;	27/5/23
 133+ 9A51              ;
 134+ 9A51              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A51              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A51              ;
 137+ 9A51              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A51              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A51              ;
 140+ 9A51              ;	Modifica: A y (Puntero_objeto).
 141+ 9A51
 142+ 9A51 3A 02 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A54 CB 47        	bit 0,a
 144+ 9A56 C8           	ret z
 145+ 9A57 CB 87        	res 0,a
 146+ 9A59 32 02 89     	ld (Ctrl_2),a
 147+ 9A5C 2A 05 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A5F 22 C9 88     	ld (Puntero_objeto),hl
 149+ 9A62 C9           	ret
 150+ 9A63
 151+ 9A63              ; ******************************************************************************************************************************************************************************************
 152+ 9A63              ;
 153+ 9A63              ;	19/10/22
 154+ 9A63              ;
 155+ 9A63              ;	Mov_right.
 156+ 9A63              ;
 157+ 9A63              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A63              ;
 159+ 9A63
 160+ 9A63 21 EF 88     Mov_right ld hl,Ctrl_0
 161+ 9A66 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A68              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A68              ; 																	; _ en el caso de que no lo haya.
 164+ 9A68 3A EF 88     	ld a,(Ctrl_0)
 165+ 9A6B CB 77        	bit 6,a
 166+ 9A6D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A6F
 168+ 9A6F CD 9D 9C     	call Stop_Amadeus_right
 169+ 9A72 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A73 18 4D        	jr 8F
 171+ 9A75
 172+ 9A75 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A78 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A7A 20 46        	jr nz,8F
 175+ 9A7C
 176+ 9A7C 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A7F A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A80 28 40        	jr z,8F
 179+ 9A82
 180+ 9A82              ; ---------- ---------- ----------
 181+ 9A82              ;
 182+ 9A82              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A82
 184+ 9A82 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A85 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A87 28 11        	jr z,1F
 187+ 9A89 38 06        	jr c,6F
 188+ 9A8B FE 04        	cp 4
 189+ 9A8D 28 14        	jr z,7F
 190+ 9A8F 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A91
 192+ 9A91              ; ---------- ---------- ----------
 193+ 9A91              ;
 194+ 9A91              ; Perfiles de velocidad
 195+ 9A91              ;
 196+ 9A91
 197+ 9A91 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A94 FE FE        	cp $fe
 199+ 9A96 20 2A        	jr nz,8F
 200+ 9A98 18 10        	jr 3F
 201+ 9A9A 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A9D FE FD        	cp $fd
 203+ 9A9F 20 21        	jr nz,8F
 204+ 9AA1 18 07        	jr 3F
 205+ 9AA3 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AA6 FE FB        	cp $fb
 207+ 9AA8 20 18        	jr nz,8F
 208+ 9AAA
 209+ 9AAA              ; ---------- ---------- ----------
 210+ 9AAA
 211+ 9AAA              3
 212+ 9AAA CD DD 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AAD              ;	call Reinicio
 214+ 9AAD
 215+ 9AAD              ; ---------- ---------- ----------
 216+ 9AAD              ;
 217+ 9AAD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AAD
 219+ 9AAD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AAF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AB0 CD C9 9A     	call DESPLZ_DER
 222+ 9AB3 C1           	pop bc
 223+ 9AB4 10 F9        	djnz 5B
 224+ 9AB6 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AB9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9ABA 22 C7 88     	ld (Posicion_actual),hl
 227+ 9ABD CD 34 9D     	call Genera_coordenadas
 228+ 9AC0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AC2
 230+ 9AC2              ; ---------- ---------- ----------
 231+ 9AC2
 232+ 9AC2 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9AC5 CD C9 9A     	call DESPLZ_DER
 234+ 9AC8 C9           2 ret
 235+ 9AC9
 236+ 9AC9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AC9              ;
 238+ 9AC9              ;	22/9/22
 239+ 9AC9              ;
 240+ 9AC9
 241+ 9AC9 CD D8 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ACC CD 24 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9ACF CD 4D 9B         call Ciclo_completo
 244+ 9AD2 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AD5 CB FE        	set 7,(hl)
 246+ 9AD7 C9           	ret
 247+ 9AD8
 248+ 9AD8              ; ******************************************************************************************************************************************************************************************
 249+ 9AD8              ;	15/02/23
 250+ 9AD8              ;
 251+ 9AD8
 252+ 9AD8 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9ADB 47           	ld b,a
 254+ 9ADC 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9ADF 23           1 inc hl
 256+ 9AE0 23           	inc hl
 257+ 9AE1 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AE3 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AE6 CD E0 8C     	call Extrae_address
 260+ 9AE9 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9AEC
 262+ 9AEC              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AEC
 264+ 9AEC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AEC              ; Cuántos movimientos hemos hecho ??
 266+ 9AEC              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AEC
 268+ 9AEC 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AEF EB           	ex de,hl
 270+ 9AF0 A7           	and a
 271+ 9AF1 ED 52        	sbc hl,de
 272+ 9AF3 CB 3D        	srl l
 273+ 9AF5 3E 08        6 ld a,8
 274+ 9AF7 95           	sub l
 275+ 9AF8 30 1E        	jr nc,3F
 276+ 9AFA
 277+ 9AFA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AFA              ; B="0".
 279+ 9AFA
 280+ 9AFA 04           4 inc b
 281+ 9AFB 3C           	inc a
 282+ 9AFC 20 FC        	jr nz,4B
 283+ 9AFE 78           	ld a,b
 284+ 9AFF 08           	ex af,af
 285+ 9B00 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9B03 23           5 inc hl
 287+ 9B04 23           	inc hl
 288+ 9B05 10 FC        	djnz 5B
 289+ 9B07 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B0A CD E0 8C     	call Extrae_address
 291+ 9B0D 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9B10
 293+ 9B10              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B10              ; _(Posicion_actual).
 295+ 9B10
 296+ 9B10 21 C7 88     	ld hl,Posicion_actual
 297+ 9B13 34           	inc (hl)
 298+ 9B14 08               ex af,af
 299+ 9B15 6F           	ld l,a
 300+ 9B16 18 DD        	jr 6B
 301+ 9B18
 302+ 9B18              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B18
 304+ 9B18 47           3 ld b,a
 305+ 9B19 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B1C 23           2 inc hl
 307+ 9B1D 23           	inc hl
 308+ 9B1E 10 FC        	djnz 2B
 309+ 9B20 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B23 C9           8 ret
 311+ 9B24
 312+ 9B24              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B24              ;
 314+ 9B24              ;	24/7/22
 315+ 9B24              ;
 316+ 9B24              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B24              ;
 318+ 9B24              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B24              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B24              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B24
 322+ 9B24 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B27 A7           	and a
 324+ 9B28 20 1F        	jr nz,1F
 325+ 9B2A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B2C 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9B2F
 328+ 9B2F 21 C6 88     	ld hl,Columns
 329+ 9B32 34           	inc (hl)
 330+ 9B33 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9B36 E6 01        	and 1
 332+ 9B38 28 0F        	jr z,1F
 333+ 9B3A 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B3D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B3E 22 C7 88     	ld (Posicion_actual),hl
 336+ 9B41 CD 34 9D     	call Genera_coordenadas
 337+ 9B44 CD A9 9C     	call Inc_CTRL_DESPLZ
 338+ 9B47 18 03        	jr 2F
 339+ 9B49 CD A9 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B4C C9           2 ret
 341+ 9B4D
 342+ 9B4D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B4D              ;
 344+ 9B4D              ;	24/7/22
 345+ 9B4D              ;
 346+ 9B4D              ;	Ciclo_completo.
 347+ 9B4D              ;
 348+ 9B4D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B4D              ;
 350+ 9B4D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B4D              ; 	Decrementamos (Columns).
 352+ 9B4D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B4D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B4D
 355+ 9B4D
 356+ 9B4D 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B50 FE FF        	cp $ff
 358+ 9B52 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B54 E6 F0        	and $f0
 360+ 9B56 20 28        	jr nz,3F
 361+ 9B58
 362+ 9B58              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B58
 364+ 9B58 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9B5B 47           	ld b,a
 366+ 9B5C 3E F8        	ld a,$f8
 367+ 9B5E 80           	add b
 368+ 9B5F 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9B62 18 1C        	jr 3F
 370+ 9B64 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B67 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B68 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B69 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9B6C 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B6F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B71 20 0A        	jr nz,2F
 377+ 9B73 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B76 23           	inc hl
 379+ 9B77 22 C7 88     	ld (Posicion_actual),hl
 380+ 9B7A CD 34 9D     	call Genera_coordenadas
 381+ 9B7D
 382+ 9B7D              ; Inicia el puntero de Sprite.
 383+ 9B7D
 384+ 9B7D CD F7 8C     2 call Inicia_puntero_objeto_der
 385+ 9B80 C9           3 ret
 386+ 9B81
 387+ 9B81              ; ******************************************************************************************************************************************************************************************
 388+ 9B81              ;
 389+ 9B81              ;	15/02/23
 390+ 9B81              ;
 391+ 9B81              ;	Mov_left.
 392+ 9B81              ;
 393+ 9B81              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B81              ;
 395+ 9B81              Mov_left
 396+ 9B81
 397+ 9B81 21 EF 88     	ld hl,Ctrl_0
 398+ 9B84 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B86              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B86              ; 																	; _ en el caso de que no lo haya.
 401+ 9B86 3A EF 88     	ld a,(Ctrl_0)
 402+ 9B89 CB 77        	bit 6,a
 403+ 9B8B 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B8D
 405+ 9B8D CD A3 9C     	call Stop_Amadeus_left
 406+ 9B90 C8           	ret z
 407+ 9B91 20 4A        	jr nz,8F
 408+ 9B93
 409+ 9B93 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9B96 A7           	and a
 411+ 9B97 20 44        	jr nz,8F
 412+ 9B99
 413+ 9B99 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B9C A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B9D 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B9F
 417+ 9B9F              ; ---------- ---------- ----------
 418+ 9B9F
 419+ 9B9F 3A DA 88     	ld a,(Vel_left)
 420+ 9BA2 FE 02        	cp 2
 421+ 9BA4 28 0F        	jr z,1F
 422+ 9BA6 38 04        	jr c,6F
 423+ 9BA8 FE 04        	cp 4
 424+ 9BAA 28 12        	jr z,7F
 425+ 9BAC
 426+ 9BAC              ; ---------- ---------- ----------
 427+ 9BAC
 428+ 9BAC 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BAF FE F8        	cp $f8
 430+ 9BB1 20 2A        	jr nz,8F
 431+ 9BB3 18 10        	jr 4F
 432+ 9BB5 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BB8 FE F9        	cp $f9
 434+ 9BBA 20 21        	jr nz,8F
 435+ 9BBC 18 07        	jr 4F
 436+ 9BBE 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BC1 FE FB        	cp $fb
 438+ 9BC3 20 18        	jr nz,8F
 439+ 9BC5
 440+ 9BC5              ; ---------- ---------- ----------
 441+ 9BC5
 442+ 9BC5              4
 443+ 9BC5 CD CB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BC8              ;	call Reinicio
 445+ 9BC8
 446+ 9BC8              ; ---------- ---------- ----------
 447+ 9BC8
 448+ 9BC8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BCA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BCB
 451+ 9BCB              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BCB              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BCB
 454+ 9BCB CD E4 9B     	call DESPLZ_IZQ
 455+ 9BCE C1           	pop bc
 456+ 9BCF 10 F9        	djnz 5B
 457+ 9BD1 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BD4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BD5 22 C7 88     	ld (Posicion_actual),hl
 460+ 9BD8 CD 34 9D     	call Genera_coordenadas
 461+ 9BDB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BDD
 463+ 9BDD              ; ---------- ---------- ----------
 464+ 9BDD
 465+ 9BDD              ; Movemos, no hay recolocación.
 466+ 9BDD
 467+ 9BDD 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9BE0 CD E4 9B     	call DESPLZ_IZQ
 469+ 9BE3 C9           2 ret
 470+ 9BE4
 471+ 9BE4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BE4              ;
 473+ 9BE4              ;	22/9/22
 474+ 9BE4
 475+ 9BE4              DESPLZ_IZQ
 476+ 9BE4
 477+ 9BE4 CD F3 9B     	call Desplaza_izquierda
 478+ 9BE7 CD 3F 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BEA CD 67 9C     	call Ciclo_completo_2
 480+ 9BED 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BF0 CB BE        	res 7,(hl)
 482+ 9BF2 C9           	ret
 483+ 9BF3
 484+ 9BF3              Desplaza_izquierda
 485+ 9BF3
 486+ 9BF3 3A DA 88     	ld a,(Vel_left)
 487+ 9BF6 47           	ld b,a
 488+ 9BF7 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BFA 23           1 inc hl
 490+ 9BFB 23           	inc hl
 491+ 9BFC 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BFE 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9C01 CD E0 8C     	call Extrae_address
 494+ 9C04 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9C07
 496+ 9C07              ; Modifica (Puntero_DESPLZ_der).
 497+ 9C07
 498+ 9C07              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9C07              ; Cuántos movimientos hemos hecho ??
 500+ 9C07              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9C07
 502+ 9C07 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C0A EB           	ex de,hl
 504+ 9C0B A7           	and a
 505+ 9C0C ED 52        	sbc hl,de
 506+ 9C0E CB 3D        	srl l
 507+ 9C10 3E 08        6 ld a,8
 508+ 9C12 95           	sub l
 509+ 9C13 30 1E        	jr nc,3F
 510+ 9C15
 511+ 9C15              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C15              ; B="0".
 513+ 9C15
 514+ 9C15 04           4 inc b
 515+ 9C16 3C           	inc a
 516+ 9C17 20 FC        	jr nz,4B
 517+ 9C19 78           	ld a,b
 518+ 9C1A 08           	ex af,af
 519+ 9C1B 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C1E 23           5 inc hl
 521+ 9C1F 23           	inc hl
 522+ 9C20 10 FC        	djnz 5B
 523+ 9C22 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C25 CD E0 8C     	call Extrae_address
 525+ 9C28 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9C2B
 527+ 9C2B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C2B              ; _(Posicion_actual).
 529+ 9C2B
 530+ 9C2B 21 C7 88     	ld hl,Posicion_actual
 531+ 9C2E 35           	dec (hl)
 532+ 9C2F 08           	ex af,af
 533+ 9C30 6F           	ld l,a
 534+ 9C31 18 DD        	jr 6B
 535+ 9C33
 536+ 9C33              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C33
 538+ 9C33 47           3 ld b,a
 539+ 9C34 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9C37 23           2 inc hl
 541+ 9C38 23           	inc hl
 542+ 9C39 10 FC        	djnz 2B
 543+ 9C3B 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C3E C9           8 ret
 545+ 9C3F
 546+ 9C3F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C3F              ;
 548+ 9C3F              ;	modifica_parametros_1er_DESPLZ
 549+ 9C3F              ;
 550+ 9C3F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C3F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C3F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C3F
 554+ 9C3F 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C42 A7           	and a
 556+ 9C43 20 1E        	jr nz,1F
 557+ 9C45 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C46 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9C49 21 C6 88     	ld hl,Columns
 560+ 9C4C 34           	inc (hl)
 561+ 9C4D 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9C50 E6 01        	and 1
 563+ 9C52 20 0F        	jr nz,1F
 564+ 9C54 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C57 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C58 22 C7 88     	ld (Posicion_actual),hl
 567+ 9C5B CD 34 9D     	call Genera_coordenadas
 568+ 9C5E CD BA 9C     	call Dec_CTRL_DESPLZ
 569+ 9C61 18 03        	jr 2F
 570+ 9C63 CD BA 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C66 C9           2 ret
 572+ 9C67
 573+ 9C67              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C67
 575+ 9C67 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C6A FE F7        	cp $f7
 577+ 9C6C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C6E 30 2C        	jr nc,3F
 579+ 9C70
 580+ 9C70              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C70
 582+ 9C70 06 00        	ld b,0
 583+ 9C72 04           4 inc b
 584+ 9C73 3C           	inc a
 585+ 9C74 FE F7        	cp $f7
 586+ 9C76 20 FA        	jr nz,4B
 587+ 9C78 3E FF        	ld a,$ff
 588+ 9C7A 90           	sub b
 589+ 9C7B 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9C7E 18 1C        	jr 3F
 591+ 9C80
 592+ 9C80              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C80
 594+ 9C80 21 C6 88     1 ld hl,Columns
 595+ 9C83 35           	dec (hl)
 596+ 9C84 AF           	xor a
 597+ 9C85 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9C88 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9C8B E6 01        	and 1
 600+ 9C8D 28 0A        	jr z,2F
 601+ 9C8F 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C92 2B           	dec hl
 603+ 9C93 22 C7 88     	ld (Posicion_actual),hl
 604+ 9C96 CD 34 9D     	call Genera_coordenadas
 605+ 9C99
 606+ 9C99              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C99
 608+ 9C99 CD 0A 8D     2 call Inicia_puntero_objeto_izq
 609+ 9C9C C9           3 ret
 610+ 9C9D
 611+ 9C9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C9D              ;
 613+ 9C9D              ;	19/10/22
 614+ 9C9D              ;
 615+ 9C9D              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C9D              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C9D
 618+ 9C9D 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9CA0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9CA2 C9           	ret
 621+ 9CA3
 622+ 9CA3              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9CA3              ;
 624+ 9CA3              ;	19/10/22
 625+ 9CA3              ;
 626+ 9CA3              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9CA3              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9CA3
 629+ 9CA3 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9CA6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CA8 C9           	ret
 632+ 9CA9
 633+ 9CA9              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CA9              ;
 635+ 9CA9              ;	24/7/22
 636+ 9CA9              ;
 637+ 9CA9              ;	Inc_CTRL_DESPLZ
 638+ 9CA9              ;
 639+ 9CA9              ;
 640+ 9CA9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CA9
 642+ 9CA9 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CAC 3A DB 88     	ld a,(Vel_right)
 644+ 9CAF A7           	and a
 645+ 9CB0 28 06        	jr z,1F
 646+ 9CB2 47           	ld b,a
 647+ 9CB3 34           3 inc (hl)
 648+ 9CB4 10 FD        	djnz 3B
 649+ 9CB6 18 01        	jr 2F
 650+ 9CB8 34           1 inc (hl)
 651+ 9CB9 C9           2 ret
 652+ 9CBA
 653+ 9CBA              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CBA              ;
 655+ 9CBA              ;	5/2/23
 656+ 9CBA              ;
 657+ 9CBA              ;	Dec_CTRL_DESPLZ
 658+ 9CBA              ;
 659+ 9CBA              ;
 660+ 9CBA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CBA
 662+ 9CBA 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CBD 3A DA 88     	ld a,(Vel_left)
 664+ 9CC0 A7           	and a
 665+ 9CC1 28 06        	jr z,1F
 666+ 9CC3 47           	ld b,a
 667+ 9CC4 35           3 dec (hl)
 668+ 9CC5 10 FD        	djnz 3B
 669+ 9CC7 18 01        	jr 2F
 670+ 9CC9 35           1 dec (hl)
 671+ 9CCA C9           2 ret
 672+ 9CCB
 673+ 9CCB              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CCB
 675+ 9CCB 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CCE 01 1F 00     	ld bc,31
 677+ 9CD1 A7           	and a
 678+ 9CD2 ED 4A        	adc hl,bc
 679+ 9CD4 22 C7 88     	ld (Posicion_actual),hl
 680+ 9CD7 21 EF 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CDA CB C6        	set 0,(hl)
 682+ 9CDC C9           	ret
 683+ 9CDD
 684+ 9CDD              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CDD
 686+ 9CDD 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CE0 01 1F 00     	ld bc,31
 688+ 9CE3 A7           	and a
 689+ 9CE4 ED 42        	sbc hl,bc
 690+ 9CE6 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CE9 21 EF 88     	ld hl,Ctrl_0
 692+ 9CEC CB CE        	set 1,(hl)
 693+ 9CEE C9           	ret
 694+ 9CEF
 695+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CEF
 697+ 9CEF 24           Reaparece_abajo inc h
 698+ 9CF0 01 E0 17     	ld bc,$17e0
 699+ 9CF3 A7           	and a
 700+ 9CF4 ED 4A        	adc hl,bc
 701+ 9CF6 22 C7 88     	ld (Posicion_actual),hl
 702+ 9CF9 21 EF 88     	ld hl,Ctrl_0
 703+ 9CFC CB D6        	set 2,(hl)
 704+ 9CFE C9           	ret
 705+ 9CFF
 706+ 9CFF              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CFF
 708+ 9CFF 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9D02 A7           	and a
 710+ 9D03 ED 42        	sbc hl,bc
 711+ 9D05 22 C7 88     	ld (Posicion_actual),hl
 712+ 9D08 21 EF 88     	ld hl,Ctrl_0
 713+ 9D0B CB DE        	set 3,(hl)
 714+ 9D0D C9           	ret
 715+ 9D0E
 716+ 9D0E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D0E              ;
 718+ 9D0E              ;	15/07/23
 719+ 9D0E
 720+ 9D0E              Reinicio
 721+ 9D0E
 722+ 9D0E              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D0E
 724+ 9D0E AF           	xor a
 725+ 9D0F 21 F6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D12 CD 30 9D     	call Limpia_contenido_hl
 727+ 9D15
 728+ 9D15 21 C7 88     	ld hl,Posicion_actual
 729+ 9D18 CD 30 9D     	call Limpia_contenido_hl
 730+ 9D1B
 731+ 9D1B CD 62 A0     	call Inicializa_Puntero_indice_mov
 732+ 9D1E CD EC 9F     	call Inicia_Puntero_mov
 733+ 9D21
 734+ 9D21 21 F8 88     	ld hl,Incrementa_puntero
 735+ 9D24 06 05        	ld b,5
 736+ 9D26 77           1 ld (hl),a
 737+ 9D27 23           	inc hl
 738+ 9D28 10 FC        	djnz 1B
 739+ 9D2A
 740+ 9D2A 21 02 89     	ld hl,Ctrl_2
 741+ 9D2D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D2F
 743+ 9D2F C9           	ret
 744+ 9D30
 745+ 9D30 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D31 23           	inc hl
 747+ 9D32 77           	ld (hl),a
 748+ 9D33 C9           	ret
 749+ 9D34
 750+ 9D34
# file closed: Direcciones.asm
1636  9D34              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D34              ; ------------------------------------------------------------------------
   2+ 9D34              ;
   3+ 9D34              ;	02/04/23
   4+ 9D34              ;
   5+ 9D34              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D34              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D34              ;
   8+ 9D34              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D34              ;
  10+ 9D34              ;	Modifica: A,BC y DE.
  11+ 9D34
  12+ 9D34 C5           Genera_coordenadas push bc
  13+ 9D35 E5           	push hl
  14+ 9D36 D5           	push de
  15+ 9D37
  16+ 9D37 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9D3A
  18+ 9D3A 7D           	ld a,l
  19+ 9D3B E6 1F        	and $1f
  20+ 9D3D 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D40
  22+ 9D40 CD A9 99     	call calcula_tercio
  23+ 9D43 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D44
  25+ 9D44 1E 00        	ld e,0
  26+ 9D46 7D           	ld a,l
  27+ 9D47 E6 E0        	and $e0
  28+ 9D49 28 01        	jr z,1F
  29+ 9D4B 04           	inc b
  30+ 9D4C
  31+ 9D4C 04           1 inc b
  32+ 9D4D 05           	dec b
  33+ 9D4E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D50              ;														; _ , salimos.
  35+ 9D50 1C           3 inc e
  36+ 9D51 D6 20        	sub 32
  37+ 9D53 20 FB        	jr nz,3B
  38+ 9D55 10 F5        	djnz 1B
  39+ 9D57
  40+ 9D57 7B           2 ld a,e
  41+ 9D58 32 CC 88     	ld (Coordenada_y),a
  42+ 9D5B
  43+ 9D5B D1           	pop de
  44+ 9D5C E1           	pop hl
  45+ 9D5D C1           	pop bc
  46+ 9D5E
  47+ 9D5E C9           	ret
  48+ 9D5F
  49+ 9D5F              ; ------------------------------------------------------------------------
  50+ 9D5F              ;	28/05/23
  51+ 9D5F              ;
  52+ 9D5F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D5F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D5F              ;
  55+ 9D5F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D5F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D5F              ;
  58+ 9D5F              ;		DE="$120d"
  59+ 9D5F              ;
  60+ 9D5F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D5F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D5F              ;
  63+ 9D5F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D5F
  65+ 9D5F              ;	Modifica: A,BC y DE.
  66+ 9D5F
  67+ 9D5F
  68+ 9D5F              Genera_coordenadas_disparo
  69+ 9D5F
  70+ 9D5F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D5F
  72+ 9D5F 7D           	ld a,l
  73+ 9D60 E6 1F        	and $1f
  74+ 9D62 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D63 CD A9 99     	call calcula_tercio
  76+ 9D66 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D67 1E 00        	ld e,0
  78+ 9D69 7D           	ld a,l
  79+ 9D6A E6 E0        	and $e0
  80+ 9D6C 28 01        	jr z,1F
  81+ 9D6E 04           	inc b
  82+ 9D6F 1C           1 inc e
  83+ 9D70 D6 20        	sub 32
  84+ 9D72 20 FB        	jr nz,1B
  85+ 9D74 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D76 C9           	ret
  87+ 9D77
# file closed: Genera_coordenadas.asm
1637  9D77              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D77              ; Relojes y temporizaciones.
   2+ 9D77
   3+ 9D77              ; ------------------------------------------------------
   4+ 9D77              ;
   5+ 9D77              ;	16/7/23
   6+ 9D77              ;
   7+ 9D77              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D77              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D77              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D77              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D77              ;
  12+ 9D77              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D77              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D77
  15+ 9D77              ; Disparo_entidad db 1
  16+ 9D77              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D77              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D77
  19+ 9D77              Habilita_disparos
  20+ 9D77
  21+ 9D77 7E           	ld a,(hl)
  22+ 9D78 A7           	and a
  23+ 9D79 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D7A
  25+ 9D7A EB           	ex de,hl
  26+ 9D7B
  27+ 9D7B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D7C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D7D
  30+ 9D7D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D7D
  32+ 9D7D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D7E 7E           	ld a,(hl)
  34+ 9D7F 23           	inc hl
  35+ 9D80 77           	ld (hl),a
  36+ 9D81
  37+ 9D81 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D82 3E 01        	ld a,1
  39+ 9D84 77           	ld (hl),a
  40+ 9D85 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1638  9D86              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D86
   2+ 9D86
   3+ 9D86              ;   07/07/23
   4+ 9D86              ;
   5+ 9D86              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D86              ;
   7+ 9D86              ;   Codificación:
   8+ 9D86              ;
   9+ 9D86              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D86              ;
  11+ 9D86              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D86              ;
  13+ 9D86              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D86              ;
  15+ 9D86              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D86              ;
  17+ 9D86              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D86              ;                               ..... %01000010 Vel_up 4
  19+ 9D86              ;                                               Vel_down 2
  20+ 9D86              ;                               ..... $42
  21+ 9D86              ;
  22+ 9D86              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D86              ;
  24+ 9D86              ;                               ..... %01000010 Vel_left 4
  25+ 9D86              ;                                               Vel_right 2
  26+ 9D86              ;                               ..... $42
  27+ 9D86              ;
  28+ 9D86              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D86              ;
  30+ 9D86              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D86              ;
  32+ 9D86              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D86              ;
  34+ 9D86              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D86              ;                                     $53
  36+ 9D86              ;
  37+ 9D86              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D86              ;
  39+ 9D86              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D86              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D86              ;
  42+ 9D86              ;                       Arriba ..... $81
  43+ 9D86              ;                       Arriba - izquierda ..... $a1
  44+ 9D86              ;                       Arriba - derecha ..... $91
  45+ 9D86              ;
  46+ 9D86              ;                       Abajo ..... $41
  47+ 9D86              ;                       Abajo - izquierda ..... $61
  48+ 9D86              ;                       Abajo - derecha ..... $51
  49+ 9D86              ;
  50+ 9D86              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D86              ;
  52+ 9D86              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D86              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D86              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D86              ;
  56+ 9D86              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D86              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D86              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D86              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D86              ;
  61+ 9D86              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D86              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D86              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D86              ;
  65+ 9D86              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D86              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D86              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D86              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D86
  70+ 9D86              ; ----- ----- ----- ----- -----
  71+ 9D86
  72+ 9D86 B2 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D88 BA 9D            defw F_1
  74+ 9D8A C4 9D            defw F_2
  75+ 9D8C CE 9D            defw Codo_abajo_derecha
  76+ 9D8E 02 9E            defw Derecha_y_subiendo
  77+ 9D90 0C 9E            defw Derecha_y_subiendo_1
  78+ 9D92 16 9E            defw F_3
  79+ 9D94 20 9E            defw F_4
  80+ 9D96 2A 9E            defw Derecha_y_bajando
  81+ 9D98 34 9E            defw Derecha_y_bajando_1
  82+ 9D9A 3E 9E            defw Derecha_y_bajando_2
  83+ 9D9C 48 9E            defw Codo_derecha_abajo
  84+ 9D9E 78 9E            defw Codo_abajo_izq.
  85+ 9DA0 AC 9E            defw Izquierda_y_subiendo
  86+ 9DA2 B6 9E            defw Izquierda_y_subiendo_1
  87+ 9DA4 C0 9E            defw F_5
  88+ 9DA6 CA 9E            defw F_6
  89+ 9DA8 D4 9E            defw Izquierda_y_bajando
  90+ 9DAA DE 9E            defw Izquierda_y_bajando_1
  91+ 9DAC E8 9E            defw Izquierda_y_bajando_2
  92+ 9DAE F2 9E            defw Codo_izquierda_abajo
  93+ 9DB0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DB2
  95+ 9DB2 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DB6 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DBA
  98+ 9DBA 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DBE 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DC2 08 00
 100+ 9DC4 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DC8 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DCC 0F FE
 102+ 9DCE
 103+ 9DCE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DD2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DD6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DDA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DDE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DE2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DEA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DEE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DF2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DF6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DFA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DFE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E02
 117+ 9E02 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E06 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E0A 06 00
 119+ 9E0C
 120+ 9E0C 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E10 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E14 02 00
 122+ 9E16
 123+ 9E16 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E1A 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E1E 04 00
 125+ 9E20 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E24 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E28 08 00
 127+ 9E2A
 128+ 9E2A 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E2E 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E32 02 00
 130+ 9E34
 131+ 9E34 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E38 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E3C 06 00
 133+ 9E3E
 134+ 9E3E 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E42 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E46 06 00
 136+ 9E48
 137+ 9E48              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E48
 139+ 9E48 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E4C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E50 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E54 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E5C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E60 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E64 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E6C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E70 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E74 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E78
 152+ 9E78 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E7C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E80 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E84 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E88 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E8C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E90 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E94 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E98 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E9C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EA0 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EA4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EA8 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EAC
 166+ 9EAC 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EB0 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EB4 06 00
 168+ 9EB6
 169+ 9EB6 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EBA 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EBE 02 00
 171+ 9EC0
 172+ 9EC0 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EC4 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EC8 04 00
 174+ 9ECA 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ECE 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ED2 08 00
 176+ 9ED4
 177+ 9ED4 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9ED8 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EDC 02 00
 179+ 9EDE
 180+ 9EDE 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EE2 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EE6 06 00
 182+ 9EE8
 183+ 9EE8 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EEC 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EF0 06 00
 185+ 9EF2
 186+ 9EF2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EF6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EFA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EFE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F02 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F06 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F0A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F0E 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F12 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F16 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F1A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F1E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F22
 199+ 9F22              ; ----- ----- ----- ----- -----
 200+ 9F22              ;
 201+ 9F22              ;   27/06/23
 202+ 9F22
 203+ 9F22              Movimiento
 204+ 9F22
 205+ 9F22              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F22
 207+ 9F22              ;    ld hl,(Posicion_actual)
 208+ 9F22
 209+ 9F22 FB               ei
 210+ 9F23
 211+ 9F23 3A 02 89         ld a,(Ctrl_2)
 212+ 9F26 CB 57            bit 2,a
 213+ 9F28 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F2A
 215+ 9F2A 2A F4 88         ld hl,(Puntero_mov)
 216+ 9F2D 7E               ld a,(hl)
 217+ 9F2E
 218+ 9F2E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F2E
 220+ 9F2E              Inicia_desplazamiento.
 221+ 9F2E
 222+ 9F2E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F2E
 224+ 9F2E CD 23 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F31
 226+ 9F31              ; Iniciamos (Repetimos_mov).
 227+ 9F31
 228+ 9F31 7E               ld a,(hl)
 229+ 9F32 E6 0F            and $0f
 230+ 9F34 32 FA 88         ld (Repetimos_desplazamiento),a
 231+ 9F37 32 FB 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F3A
 233+ 9F3A              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F3A
 235+ 9F3A 23               inc hl
 236+ 9F3B 7E               ld a,(hl)
 237+ 9F3C 32 FD 88         ld (Cola_de_desplazamiento),a
 238+ 9F3F 2B               dec hl
 239+ 9F40
 240+ 9F40 21 02 89         ld hl,Ctrl_2
 241+ 9F43 CB D6            set 2,(hl)
 242+ 9F45
 243+ 9F45              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F45              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F45
 246+ 9F45              Desplazamiento_iniciado
 247+ 9F45
 248+ 9F45 CD F7 9F         call Aplica_desplazamiento
 249+ 9F48
 250+ 9F48 3A 02 89         ld a,(Ctrl_2)
 251+ 9F4B CB 67            bit 4,a
 252+ 9F4D C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F4E
 254+ 9F4E 21 FA 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F51 35               dec (hl)
 256+ 9F52 C0               ret nz
 257+ 9F53
 258+ 9F53              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F53              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F53              ; Analiza (Cola_de_desplazamiento).
 261+ 9F53
 262+ 9F53 3A FD 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F56 A7               and a
 264+ 9F57 CC 4C A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F5A 28 30            jr z,Reinicia_el_movimiento
 266+ 9F5C
 267+ 9F5C FE FF            cp $ff
 268+ 9F5E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F60
 270+ 9F60 FE FE            cp $fe
 271+ 9F62 CC D0 9F         call z,Fijamos_bucle
 272+ 9F65 28 25            jr z,Reinicia_el_movimiento
 273+ 9F67
 274+ 9F67 FE FD            cp $fd
 275+ 9F69 20 11            jr nz,1F
 276+ 9F6B
 277+ 9F6B              ; ---
 278+ 9F6B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F6B
 280+ 9F6B 3A 02 89         ld a,(Ctrl_2)
 281+ 9F6E CB 5F            bit 3,a
 282+ 9F70 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F72
 284+ 9F72              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F72
 286+ 9F72 21 02 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F75 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F77
 289+ 9F77 CD E1 9F         call Inicia_Repetimos_movimiento
 290+ 9F7A 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F7C              ; ---
 292+ 9F7C
 293+ 9F7C FE 01        1 cp 1
 294+ 9F7E CA BA 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F81
 296+ 9F81 3D               dec a
 297+ 9F82 32 FD 88         ld (Cola_de_desplazamiento),a
 298+ 9F85
 299+ 9F85 3A FB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F88 32 FA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F8B              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F8B C9               ret
 303+ 9F8C
 304+ 9F8C              Reinicia_el_movimiento
 305+ 9F8C
 306+ 9F8C F3               di
 307+ 9F8D
 308+ 9F8D 3A 02 89         ld a,(Ctrl_2)
 309+ 9F90 CB 5F            bit 3,a
 310+ 9F92 28 1B            jr z,2F
 311+ 9F94
 312+ 9F94              ; (Cola_de_desplazamiento)="254".
 313+ 9F94
 314+ 9F94 21 FC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F97 35               dec (hl)
 316+ 9F98 20 15            jr nz,2F
 317+ 9F9A
 318+ 9F9A              ; Fin de las repeticiones del último movimiento.
 319+ 9F9A
 320+ 9F9A 21 02 89         ld hl,Ctrl_2
 321+ 9F9D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F9F
 323+ 9F9F 2A F4 88         ld hl,(Puntero_mov)
 324+ 9FA2 23               inc hl
 325+ 9FA3 23               inc hl
 326+ 9FA4 23               inc hl
 327+ 9FA5 22 F4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FA8              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FA8 7E               ld a,(hl)
 330+ 9FA9 32 FD 88         ld (Cola_de_desplazamiento),a
 331+ 9FAC
 332+ 9FAC C3 53 9F         jp Cola
 333+ 9FAF
 334+ 9FAF CD EC 9F     2 call Inicia_Puntero_mov
 335+ 9FB2
 336+ 9FB2 21 02 89         ld hl,Ctrl_2
 337+ 9FB5 CB 96            res 2,(hl)
 338+ 9FB7
 339+ 9FB7 C3 22 9F         jp Movimiento
 340+ 9FBA
 341+ 9FBA              Siguiente_desplazamiento
 342+ 9FBA
 343+ 9FBA              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FBA              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FBA
 346+ 9FBA 21 02 89         ld hl,Ctrl_2
 347+ 9FBD CB 96            res 2,(hl)
 348+ 9FBF
 349+ 9FBF 2A F4 88         ld hl,(Puntero_mov)
 350+ 9FC2 23               inc hl
 351+ 9FC3 23               inc hl
 352+ 9FC4 22 F4 88         ld (Puntero_mov),hl
 353+ 9FC7
 354+ 9FC7 7E               ld a,(hl)
 355+ 9FC8 A7               and a
 356+ 9FC9 CC 4C A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FCC CA 8C 9F         jp z,Reinicia_el_movimiento
 358+ 9FCF
 359+ 9FCF C9               ret
 360+ 9FD0              ; Subrutinas -----------------------------------------
 361+ 9FD0              ; ---------- --------- --------- ---------- ----------
 362+ 9FD0              ;
 363+ 9FD0              ;   24/07/23
 364+ 9FD0              ;
 365+ 9FD0              ;   Fijamos_bucle
 366+ 9FD0              ;
 367+ 9FD0              ;
 368+ 9FD0
 369+ 9FD0              Fijamos_bucle
 370+ 9FD0
 371+ 9FD0 3A F8 88         ld a,(Incrementa_puntero)
 372+ 9FD3 3C               inc a
 373+ 9FD4 32 F9 88         ld (Incrementa_puntero_backup),a
 374+ 9FD7
 375+ 9FD7 CD 4C A0         call Incrementa_Puntero_indice_mov
 376+ 9FDA 2A F2 88         ld hl,(Puntero_indice_mov)
 377+ 9FDD 22 F6 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FE0 C9               ret
 379+ 9FE1
 380+ 9FE1              ; ---------- --------- --------- ---------- ----------
 381+ 9FE1              ;
 382+ 9FE1              ;   07/7/23
 383+ 9FE1              ;
 384+ 9FE1              ;   Inicia_Repetimos_movimiento
 385+ 9FE1              ;
 386+ 9FE1              ;
 387+ 9FE1
 388+ 9FE1              Inicia_Repetimos_movimiento
 389+ 9FE1
 390+ 9FE1              ; Iniciamos (Repetimos_movimiento).
 391+ 9FE1
 392+ 9FE1 DD 2A F4 88      ld ix,(Puntero_mov)
 393+ 9FE5 DD 7E 02         ld a,(ix+2)
 394+ 9FE8 32 FC 88         ld (Repetimos_movimiento),a
 395+ 9FEB
 396+ 9FEB C9               ret
 397+ 9FEC
 398+ 9FEC              ; ---------- --------- --------- ---------- ----------
 399+ 9FEC              ;
 400+ 9FEC              ;   26/6/23
 401+ 9FEC              ;
 402+ 9FEC              ;   Inicia_Puntero_mov
 403+ 9FEC              ;
 404+ 9FEC              ;
 405+ 9FEC
 406+ 9FEC 2A F2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FEF 5E               ld e,(hl)
 408+ 9FF0 23               inc hl
 409+ 9FF1 56               ld d,(hl)
 410+ 9FF2 EB               ex de,hl
 411+ 9FF3 22 F4 88         ld (Puntero_mov),hl
 412+ 9FF6 C9               ret
 413+ 9FF7
 414+ 9FF7              ; ---------- --------- --------- ---------- ----------
 415+ 9FF7              ;
 416+ 9FF7              ;   27/06/23
 417+ 9FF7              ;
 418+ 9FF7              ;   Aplica_movimiento.
 419+ 9FF7
 420+ 9FF7              Aplica_desplazamiento
 421+ 9FF7
 422+ 9FF7              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FF7
 424+ 9FF7 2A F4 88         ld hl, (Puntero_mov)
 425+ 9FFA
 426+ 9FFA 7E               ld a,(hl)
 427+ 9FFB E6 F0            and $f0
 428+ 9FFD C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FFE
 430+ 9FFE CB 7E            bit 7,(hl)
 431+ A000 28 03            jr z,1F
 432+ A002 CD 20 9A         call Mov_up
 433+ A005 2A F4 88     1 ld hl, (Puntero_mov)
 434+ A008 CB 76            bit 6,(hl)
 435+ A00A 28 03            jr z,2F
 436+ A00C CD EF 99         call Mov_down
 437+ A00F 2A F4 88     2 ld hl, (Puntero_mov)
 438+ A012 CB 6E            bit 5,(hl)
 439+ A014 28 03            jr z,3F
 440+ A016 CD 81 9B         call Mov_left
 441+ A019 2A F4 88     3 ld hl, (Puntero_mov)
 442+ A01C CB 66            bit 4,(hl)
 443+ A01E C8               ret z
 444+ A01F CD 63 9A         call Mov_right
 445+ A022 C9               ret
 446+ A023
 447+ A023              ; ---------- --------- --------- ---------- ----------
 448+ A023              ;
 449+ A023              ;   26/06/23
 450+ A023              ;
 451+ A023              ;   Ajusta_velocidad_desplazamiento.
 452+ A023
 453+ A023              Ajusta_velocidad_desplazamiento
 454+ A023
 455+ A023              ; 1er byte de la cadena de movimiento.
 456+ A023              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A023
 458+ A023 CD 41 A0         call Extrae_nibble_alto
 459+ A026
 460+ A026 32 DC 88         ld (Vel_up),a
 461+ A029 79               ld a,c
 462+ A02A E6 0F            and $0f
 463+ A02C 32 DD 88         ld (Vel_down),a
 464+ A02F
 465+ A02F              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A02F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A02F
 468+ A02F 23               inc hl
 469+ A030 CD 41 A0         call Extrae_nibble_alto
 470+ A033
 471+ A033 32 DA 88         ld (Vel_left),a
 472+ A036 79               ld a,c
 473+ A037 E6 0F            and $0f
 474+ A039 32 DB 88         ld (Vel_right),a
 475+ A03C
 476+ A03C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A03C
 478+ A03C 23               inc hl
 479+ A03D 22 F4 88         ld (Puntero_mov),hl
 480+ A040 C9               ret
 481+ A041
 482+ A041 06 04        Extrae_nibble_alto ld b,4
 483+ A043 7E               ld a,(hl)
 484+ A044 4F               ld c,a
 485+ A045 E6 F0            and $f0
 486+ A047 CB 3F        1 srl a
 487+ A049 10 FC            djnz 1B
 488+ A04B C9               ret
 489+ A04C
 490+ A04C              ; ---------- --------- --------- ---------- ----------
 491+ A04C              ;
 492+ A04C              ;   5/7/23
 493+ A04C              ;
 494+ A04C              ;   Incrementa_Puntero_indice_mov
 495+ A04C
 496+ A04C              Incrementa_Puntero_indice_mov
 497+ A04C
 498+ A04C 21 F8 88         ld hl,Incrementa_puntero
 499+ A04F 34               inc (hl)
 500+ A050
 501+ A050 2A F2 88         ld hl,(Puntero_indice_mov)
 502+ A053 01 02 00         ld bc,2
 503+ A056 A7               and a
 504+ A057 09               add hl,bc
 505+ A058 22 F2 88         ld (Puntero_indice_mov),hl
 506+ A05B
 507+ A05B 7E               ld a,(hl)
 508+ A05C A7               and a
 509+ A05D
 510+ A05D              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A05D
 512+ A05D              ;    jr z,$
 513+ A05D
 514+ A05D              ;! Reinicia el Patrón de movimiento.
 515+ A05D
 516+ A05D CC 62 A0         call z,Inicializa_Puntero_indice_mov
 517+ A060
 518+ A060 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A061
 520+ A061 C9               ret
 521+ A062
 522+ A062
 523+ A062              ; ---------- --------- --------- ---------- ----------
 524+ A062              ;
 525+ A062              ;   24/07/23
 526+ A062              ;
 527+ A062              ;   Inicializa_Puntero_indice_mov
 528+ A062
 529+ A062              Inicializa_Puntero_indice_mov
 530+ A062
 531+ A062              ; Existe etiqueta de bucle principal???
 532+ A062
 533+ A062 2A F6 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A065 24               inc h
 535+ A066 25               dec h
 536+ A067 28 05            jr z,2F
 537+ A069
 538+ A069 22 F2 88         ld (Puntero_indice_mov),hl
 539+ A06C 18 14            jr 3F
 540+ A06E
 541+ A06E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A06E
 543+ A06E 3A F8 88     2 ld a,(Incrementa_puntero)
 544+ A071 47               ld b,a
 545+ A072
 546+ A072 2A F2 88         ld hl,(Puntero_indice_mov)
 547+ A075 2B           1 dec hl
 548+ A076 2B               dec hl
 549+ A077 10 FC            djnz 1B
 550+ A079 22 F2 88         ld (Puntero_indice_mov),hl
 551+ A07C
 552+ A07C AF               xor a
 553+ A07D 32 F8 88         ld (Incrementa_puntero),a
 554+ A080 18 06            jr 4F
 555+ A082
 556+ A082 3A F9 88     3 ld a,(Incrementa_puntero_backup)
 557+ A085 32 F8 88         ld (Incrementa_puntero),a
 558+ A088 C9           4 ret
 559+ A089
 560+ A089
 561+ A089
# file closed: Patrones_de_mov.asm
1639  A089              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A089              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A089              ;
   3+ A089              ;	4/9/23
   4+ A089              ;
   5+ A089              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A089
   7+ A089              ;	ADC HL,SP	LD (addr),SP
   8+ A089              ;	ADD HL,SP	LD SP,(addr)
   9+ A089              ;	ADD IX,SP	LD SP,nn
  10+ A089              ; 	ADD IY,SP	LD SP,HL
  11+ A089              ;				LD SP,IX
  12+ A089              ;	DEC SP		LD SP,IY
  13+ A089
  14+ A089              ;	EX (SP),HL
  15+ A089              ;	EX (SP),IX
  16+ A089              ;	EX (SP),IY
  17+ A089
  18+ A089              ;	INC SP
  19+ A089
  20+ A089                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 04 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 0F            jr 4F
  46+ 7FB9
  47+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB9
  49+ 7FB9 3A EF 88     2 ld a,(Ctrl_0)
  50+ 7FBC CB 77            bit 6,a
  51+ 7FBE 28 05            jr z,7F
  52+ 7FC0
  53+ 7FC0              ; Guardamos foto de Amadeus.
  54+ 7FC0
  55+ 7FC0 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  56+ 7FC3 18 03            jr 4F
  57+ 7FC5
  58+ 7FC5 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC8
  60+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FCA
  62+ 7FCA D1           1 pop de
  63+ 7FCB 73               ld (hl),e
  64+ 7FCC 23               inc hl
  65+ 7FCD 72               ld (hl),d
  66+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCF 10 F9            djnz 1B
  68+ 7FD1
  69+ 7FD1 3A 04 89         ld a,(Ctrl_1)
  70+ 7FD4 CB 47            bit 0,a
  71+ 7FD6 28 05            jr z,5F
  72+ 7FD8
  73+ 7FD8 22 1D 89         ld (Stack_snapshot_disparos),hl
  74+ 7FDB 18 13            jr 6F
  75+ 7FDD
  76+ 7FDD 3A EF 88     5 ld a,(Ctrl_0)
  77+ 7FE0 CB 77            bit 6,a
  78+ 7FE2 28 09            jr z,8F
  79+ 7FE4
  80+ 7FE4 22 23 89         ld (End_Snapshot_Amadeus),hl
  81+ 7FE7 ED 7B 15 89      ld sp,(Stack)
  82+ 7FEB FB               ei
  83+ 7FEC C9               ret
  84+ 7FED
  85+ 7FED 22 1B 89     8 ld (Stack_snapshot),hl
  86+ 7FF0 ED 7B 15 89  6 ld sp,(Stack)
  87+ 7FF4
  88+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  89+ 7FF4
  90+ 7FF4 5D               ld e,l
  91+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  92+ 7FF6
  93+ 7FF6 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  94+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  95+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  96+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
  97+ 7FFC
  98+ 7FFC FB               ei
  99+ 7FFD C9               ret
 100+ 7FFE
 101+ 7FFE              ; ------------------------------------------------
 102+ 7FFE              ;
 103+ 7FFE              ;   3/08/23
 104+ 7FFE              ;
 105+ 7FFE              ;   La rutina estará situada justo después de:
 106+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 107+ 7FFE              ;
 108+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 109+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 110+ 7FFE
 111+ 7FFE                  org $72ac
 112+ 72AC
 113+ 72AC              Gestiona_albumes_de_fotos
 114+ 72AC
 115+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 116+ 72AC              ;   Vaciamos Album_de_fotos.
 117+ 72AC
 118+ 72AC              ;   Album_de_fotos. Contiene datos ???
 119+ 72AC
 120+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 121+ 72AF 7E               ld a,(hl)
 122+ 72B0 A7               and a
 123+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 124+ 72B3
 125+ 72B3 2A 1F 89         ld hl,(End_Snapshot)
 126+ 72B6 01 00 70         ld bc,Album_de_fotos
 127+ 72B9 11 01 70         ld de,Album_de_fotos+1
 128+ 72BC AF               xor a
 129+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 130+ 72BE
 131+ 72BE CD 4E 73         call Limpia_album
 132+ 72C1
 133+ 72C1 21 00 00         ld hl,0
 134+ 72C4 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 135+ 72C7
 136+ 72C7              ; ----- ----- ----- -----
 137+ 72C7
 138+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 139+ 72C7
 140+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 141+ 72CA 7E               ld a,(hl)
 142+ 72CB A7               and a
 143+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 144+ 72CE              ;                               ; _ información del album2 al album1.
 145+ 72CE
 146+ 72CE              ; ----- ----- ----- -----
 147+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 148+ 72CE
 149+ 72CE 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 150+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 151+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 152+ 72D7
 153+ 72D7 CD 4E 73         call Limpia_album
 154+ 72DA
 155+ 72DA              ;   Calculamos (End_Snapshot)
 156+ 72DA
 157+ 72DA A7               and a
 158+ 72DB ED 4A            adc hl,bc
 159+ 72DD 22 1F 89         ld (End_Snapshot),hl
 160+ 72E0
 161+ 72E0              ;   Limpiamos Album_de_fotos_1.
 162+ 72E0
 163+ 72E0 2A 25 89         ld hl,(End_Snapshot_1)
 164+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 165+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 166+ 72E9 AF               xor a
 167+ 72EA 02               ld (bc),a
 168+ 72EB
 169+ 72EB CD 4E 73         call Limpia_album
 170+ 72EE
 171+ 72EE 21 00 00         ld hl,0
 172+ 72F1 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 173+ 72F4
 174+ 72F4              ; ----- ----- ----- -----
 175+ 72F4
 176+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 177+ 72F4
 178+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 179+ 72F7 7E               ld a,(hl)
 180+ 72F8 A7               and a
 181+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 182+ 72FB              ;                               ; _ información del album3 al album2.
 183+ 72FB              ; ----- ----- ----- -----
 184+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 185+ 72FB
 186+ 72FB 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 187+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 188+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 189+ 7304
 190+ 7304 CD 4E 73         call Limpia_album
 191+ 7307
 192+ 7307              ;   Calculamos (End_Snapshot_1):
 193+ 7307
 194+ 7307 A7               and a
 195+ 7308 ED 4A            adc hl,bc
 196+ 730A 22 25 89         ld (End_Snapshot_1),hl
 197+ 730D
 198+ 730D              ;   Limpiamos Album_de_fotos_2.
 199+ 730D
 200+ 730D 2A 29 89         ld hl,(End_Snapshot_2)
 201+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 202+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 203+ 7316 AF               xor a
 204+ 7317 02               ld (bc),a
 205+ 7318
 206+ 7318 CD 4E 73         call Limpia_album
 207+ 731B
 208+ 731B 21 00 00         ld hl,0
 209+ 731E 22 29 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 210+ 7321
 211+ 7321              ; ----- ----- ----- -----
 212+ 7321
 213+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 214+ 7321
 215+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 216+ 7324 7E               ld a,(hl)
 217+ 7325 A7               and a
 218+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 219+ 7327
 220+ 7327              ; ----- ----- ----- -----
 221+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 222+ 7327
 223+ 7327 2A 2D 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 224+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 225+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 226+ 7330
 227+ 7330 CD 4E 73         call Limpia_album
 228+ 7333
 229+ 7333              ;   Calculamos (End_Snapshot_2):
 230+ 7333
 231+ 7333 A7               and a
 232+ 7334 ED 4A            adc hl,bc
 233+ 7336 22 29 89         ld (End_Snapshot_2),hl
 234+ 7339
 235+ 7339              ;   Limpiamos Album_de_fotos_3.
 236+ 7339
 237+ 7339 2A 2D 89         ld hl,(End_Snapshot_3)
 238+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 239+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 240+ 7342 AF               xor a
 241+ 7343 02               ld (bc),a
 242+ 7344
 243+ 7344 CD 4E 73         call Limpia_album
 244+ 7347
 245+ 7347 21 00 00         ld hl,0
 246+ 734A 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 247+ 734D C9               ret
 248+ 734E
 249+ 734E              ; ----------------------------------------------------
 250+ 734E              ;
 251+ 734E              ;   10/8/23
 252+ 734E              ;
 253+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 254+ 734E              ;
 255+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 256+ 734E              ;           BC ..... Dirección de inicio del álbum.
 257+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 258+ 734E
 259+ 734E              ;    ld hl,(End_Snapshot)
 260+ 734E              ;    ld bc,Album_de_fotos
 261+ 734E              ;    ld de,Album_de_fotos+1
 262+ 734E
 263+ 734E              ;   MODIFICA: A,HL,BC y DE.
 264+ 734E
 265+ 734E              Limpia_album
 266+ 734E D5               push de                     ; Guardo DESTINO.
 267+ 734F C5               push bc                     ; Guardo ORIGEN.
 268+ 7350 ED 42            sbc hl,bc
 269+ 7352 4D               ld c,l
 270+ 7353 44               ld b,h
 271+ 7354 E1               pop hl
 272+ 7355 C5               push bc
 273+ 7356 ED B0            ldir
 274+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 275+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 276+ 735A C9               ret                         ; _ a otro).
 277+ 735B              ;
 278+ 735B
 279+ 735B              ; -----------------------------------------------
 280+ 735B
 281+ 735B
 282+ 735B
 283+ 735B
 284+ 735B
# file closed: Guarda_foto_registros.asm
1640  735B
1641  735B              	SAVESNA "Pruebas.sna", START
1642  735B
1643  735B
1644  735B
1645  735B
# file closed: Banco_de_pruebas.asm
