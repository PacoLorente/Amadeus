# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 87 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD C7 8B     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD D7 8B     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 91 88     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B 87 88  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 105  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC CC 9A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 CB 85        	defw Caja_2
 110+ 8574 DE 85        	defw Caja_3
 111+ 8576 F1 85        	defw Caja_4
 112+ 8578 04 86        	defw Caja_5
 113+ 857A 17 86        	defw Caja_6
 114+ 857C 2A 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 19 bytes !!!
 155+ 85B8
 156+ 85B8 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 85BB 00           	db %00000000										; (Attr).
 158+ 85BC              ;	db 0												; (Cuad_objeto).
 159+ 85BC 00           	db 0												; (Impacto).
 160+ 85BD 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 85C3 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 85C5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 85C7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 85C9 00           	db 0												; (Ctrl_0).
 165+ 85CA 00           	db 0												; (Ctrl_2).
 166+ 85CB
 167+ 85CB              ; ---------- ---------- ---------- ---------- ----------
 168+ 85CB
 169+ 85CB 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 85CE 00           	db %00000000										; (Attr).
 171+ 85CF              ;	db 0												; (Cuad_objeto).
 172+ 85CF 00           	db 0												; (Impacto).
 173+ 85D0 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 85D6 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 85D8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 85DA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 85DC 00           	db 0												; (Ctrl_0).
 178+ 85DD 00           	db 0												; (Ctrl_2).
 179+ 85DE
 180+ 85DE              ; ---------- ---------- ---------- ---------- ----------
 181+ 85DE
 182+ 85DE 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 85E1 00           	db %00000000										; (Attr).
 184+ 85E2              ;	db 0												; (Cuad_objeto).
 185+ 85E2 00           	db 0												; (Impacto).
 186+ 85E3 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 85E9 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 85EB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 85ED 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 85EF 00           	db 0												; (Ctrl_0).
 191+ 85F0 00           	db 0												; (Ctrl_2).
 192+ 85F1
 193+ 85F1              ; ---------- ---------- ---------- ---------- ----------
 194+ 85F1
 195+ 85F1 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 85F4 00           	db %00000000										; (Attr).
 197+ 85F5              ;	db 0												; (Cuad_objeto).
 198+ 85F5 00           	db 0												; (Impacto).
 199+ 85F6 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 85FC 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 85FE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8600 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8602 00           	db 0												; (Ctrl_0).
 204+ 8603 00           	db 0												; (Ctrl_2).
 205+ 8604
 206+ 8604              ; ---------- ---------- ---------- ---------- ----------
 207+ 8604
 208+ 8604 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8607 00           	db %00000000										; (Attr).
 210+ 8608              ;	db 0												; (Cuad_objeto).
 211+ 8608 00           	db 0												; (Impacto).
 212+ 8609 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 860F 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8611 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8613 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8615 00           	db 0												; (Ctrl_0).
 217+ 8616 00           	db 0												; (Ctrl_2).
 218+ 8617
 219+ 8617              ; ---------- ---------- ---------- ---------- ----------
 220+ 8617
 221+ 8617 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 861A 00           	db %00000000										; (Attr).
 223+ 861B              ;	db 0												; (Cuad_objeto).
 224+ 861B 00           	db 0												; (Impacto).
 225+ 861C 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8622 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8624 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8626 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8628 00           	db 0												; (Ctrl_0).
 230+ 8629 00           	db 0												; (Ctrl_2).
 231+ 862A
 232+ 862A              ; ---------- ---------- ---------- ---------- ----------
 233+ 862A
 234+ 862A 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 862D 00           	db %00000000										; (Attr).
 236+ 862E              ;	db 0												; (Cuad_objeto).
 237+ 862E 00           	db 0												; (Impacto).
 238+ 862F 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8635 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8637 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 8639 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 863B 00           	db 0												; (Ctrl_0).
 243+ 863C 00           	db 0												; (Ctrl_2).
 244+ 863D
 245+ 863D              ; -------------------------------------------------------------------------------------
 246+ 863D              ;
 247+ 863D              ;	11/1/24
 248+ 863D              ;
 249+ 863D              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 863D              ;
 251+ 863D              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 863D              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 863D              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 863D              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 863D
 256+ 863D              Indice_de_definiciones_de_entidades
 257+ 863D
 258+ 863D 41 86        	defw Entidad_1
 259+ 863F 4E 86        	defw Entidad_2
 260+ 8641
 261+ 8641              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8641
 263+ 8641              ;	BADSAT, (Satélite malvado).
 264+ 8641
 265+ 8641 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8644 04           	db %00000100										; (Attr).
 267+ 8645 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8647 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 8649 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 864B 01           	db 1												; (Cuad_objeto).
 271+ 864C 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 864E
 273+ 864E 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8651 02           	db %00000010										; (Attr).
 275+ 8652 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8654 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8656 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8658 01           	db 1												; (Cuad_objeto).
 279+ 8659 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 865B
# file closed: Cajas_y_disparos.asm
 106  865B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 865B              ; 19/1/24
   2+ 865B
   3+ 865B              Indice_de_niveles
   4+ 865B
   5+ 865B 63 86        	defw Nivel_1
   6+ 865D 6F 86        	defw Nivel_2
   7+ 865F
   8+ 865F              ;	...
   9+ 865F              ;	...
  10+ 865F              ;	+ Niveles ...
  11+ 865F
  12+ 865F 00 00        	defw 0
  13+ 8661 00 00        	defw 0
  14+ 8663
  15+ 8663 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8664 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8668 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 866C 01 01 01
  18+ 866F
  19+ 866F 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8670 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8674 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8678 01 02
  22+ 867A 02 01 01 01  	db 2,1,1,1,1,2
  22+ 867E 01 02
  23+ 8680
  24+ 8680              ;---------------------------------------------------------------------------------------------------------------
  25+ 8680              ;
  26+ 8680              ;   19/1/24
  27+ 8680              ;
  28+ 8680              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 8680              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 8680              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 8680              ;	_ de la 1ª entidad del Nivel.
  32+ 8680              ;
  33+ 8680              ;	MODIFICA: HL,DE y A.
  34+ 8680              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 8680
  36+ 8680              Inicializa_Nivel
  37+ 8680
  38+ 8680 2A B0 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 8683 CD 93 8A     	call Extrae_address
  40+ 8686 7E           	ld a,(hl)
  41+ 8687 32 7B 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 868A 23           	inc hl
  43+ 868B CD 95 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 868E 22 B2 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 8691 CD 9E 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 8694 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8695
  48+ 8695              ; ----------------------
  49+ 8695
  50+ 8695 11 5A 88     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8698 01 04 00     	ld bc,4
  52+ 869B ED B0        	ldir
  53+ 869D C9           	ret
  54+ 869E
  55+ 869E 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 869F CD AC 87         call Calcula_salto_en_BC
  57+ 86A2 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 86A5 A7               and a
  59+ 86A6 ED 4A            adc hl,bc
  60+ 86A8 CD 93 8A         call Extrae_address
  61+ 86AB 22 66 88         ld (Puntero_indice_mov),hl
  62+ 86AE C9               ret
  63+ 86AF
  64+ 86AF              ;---------------------------------------------------------------------------------------------------------------
  65+ 86AF              ;
  66+ 86AF              ;   5/1/24
  67+ 86AF              ;
  68+ 86AF              ;	Destruye A,BC,HL,DE
  69+ 86AF
  70+ 86AF              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 86AF              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 86AF
  73+ 86AF              Inicia_Entidades
  74+ 86AF
  75+ 86AF              ; Preparamos los punteros de las cajas de entidades:
  76+ 86AF
  77+ 86AF CD FB 89     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 86B2              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 86B2 CD 13 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 86B5
  81+ 86B5 2A B2 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 86B8
  83+ 86B8 22 B2 88     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 86BB
  85+ 86BB CD 5A 87     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 86BE
  87+ 86BE 2A B2 88     	ld hl,(Datos_de_nivel)
  88+ 86C1
  89+ 86C1              ; En este punto:
  90+ 86C1              ;
  91+ 86C1              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 86C1              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 86C1
  94+ 86C1 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 86C2
  96+ 86C2 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 86C3 CD AC 87     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 86C6
  99+ 86C6 21 3D 86     	ld hl,Indice_de_definiciones_de_entidades
 100+ 86C9 CD B4 87     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 86CC
 102+ 86CC CD BE 87     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 86CF
 104+ 86CF              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 86CF
 106+ 86CF CD 7C 87     	call Busca_mov_masticados_segun_tipo
 107+ 86D2
 108+ 86D2 A7           	and a
 109+ 86D3 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 86D5
 111+ 86D5              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 86D5
 113+ 86D5              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 86D5              ;	_ de este tipo de entidad.
 115+ 86D5
 116+ 86D5 CD D9 9D     	call Situa_en_contador_general_de_mov_masticados
 117+ 86D8 CD E6 9D     	call Transfiere_datos_de_contadores
 118+ 86DB
 119+ 86DB 18 06        	jr 4F
 120+ 86DD
 121+ 86DD CD 55 89     3 call Construye_movimientos_masticados_entidad
 122+ 86E0
 123+ 86E0              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 124+ 86E0              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 125+ 86E0              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 126+ 86E0              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 127+ 86E0              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 128+ 86E0
 129+ 86E0 CD 3A 87     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 130+ 86E3              ;																; _ Mov_masticados ya generados.
 131+ 86E3 CD 15 87     4 call Guarda_foto_de_mov_masticado
 132+ 86E6
 133+ 86E6              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 134+ 86E6
 135+ 86E6 2A 4D 88     	ld hl,(Puntero_de_impresion)
 136+ 86E9 CD 79 9A     	call Genera_coordenadas
 137+ 86EC CD E5 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 138+ 86EF CD 1F 87     	call Limpiamos_bandeja_DRAW
 139+ 86F2 CD FA 8A     	call Incrementa_punteros_de_cajas
 140+ 86F5
 141+ 86F5              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 142+ 86F5              ; _ entidad del Nivel.
 143+ 86F5
 144+ 86F5 3A 92 88     	ld a,(Ctrl_4)
 145+ 86F8 E6 F0        	and $f0
 146+ 86FA 32 92 88     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 147+ 86FD
 148+ 86FD              ; Siguiente entidad del Nivel.
 149+ 86FD
 150+ 86FD 2A B2 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 151+ 8700 23           	inc hl 														; _ entidad del Nivel.
 152+ 8701
 153+ 8701 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 154+ 8702 10 B4        	djnz 2B
 155+ 8704
 156+ 8704 C9           	ret
 157+ 8705
 158+ 8705              ; ---------------------------------------------------------------------
 159+ 8705              ;
 160+ 8705              ;	30/01/24
 161+ 8705
 162+ 8705
 163+ 8705              Store_Restore_cajas
 164+ 8705
 165+ 8705              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 166+ 8705
 167+ 8705 2A 4D 88     	ld hl,(Puntero_de_impresion)
 168+ 8708 CD 79 9A     	call Genera_coordenadas
 169+ 870B CD E5 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 170+ 870E CD 1F 87     	call Limpiamos_bandeja_DRAW
 171+ 8711
 172+ 8711              ; 	Entidad_sospechosa. 20/4/23
 173+ 8711
 174+ 8711              ;	ld a,(Impacto)
 175+ 8711              ;	and a
 176+ 8711              ;	jr z,1F
 177+ 8711
 178+ 8711              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 179+ 8711              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 180+ 8711              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 181+ 8711              ;	adc hl,bc 											; _ "0" más adelante.
 182+ 8711              ;	ld (Entidad_sospechosa_de_colision),hl
 183+ 8711
 184+ 8711
 185+ 8711              ;1 ld hl,(Puntero_restore_caja)
 186+ 8711              ;	ld a,(hl)
 187+ 8711              ;	and a
 188+ 8711              ;	push af
 189+ 8711              ;	jr z,2F
 190+ 8711
 191+ 8711              ;	di
 192+ 8711              ;	ld de,Bandeja_DRAW
 193+ 8711              ;	ld bc,42
 194+ 8711              ;	ldir
 195+ 8711              ;	ei
 196+ 8711
 197+ 8711 CD FA 8A     2 call Incrementa_punteros_de_cajas
 198+ 8714 C9           	ret
 199+ 8715
 200+ 8715
 201+ 8715              ; ---------------------------------------------------------------------
 202+ 8715              ;
 203+ 8715              ;	29/01/24
 204+ 8715
 205+ 8715 CD AA 89     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 206+ 8718 CD 16 71     	call Guarda_foto_registros
 207+ 871B              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 208+ 871B              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 209+ 871B              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 210+ 871B              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 211+ 871B
 212+ 871B CD 2A 87     	call Decrementa_Contador_de_mov_masticados
 213+ 871E C9           	ret
 214+ 871F
 215+ 871F              ; ---------------------------------------------------------------------
 216+ 871F              ;
 217+ 871F              ;	25/01/24
 218+ 871F
 219+ 871F 21 30 88     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 220+ 8722 06 2A        	ld b,42
 221+ 8724 AF           	xor a
 222+ 8725
 223+ 8725 77           1 ld (hl),a
 224+ 8726 23           	inc hl
 225+ 8727 10 FC        	djnz 1B
 226+ 8729
 227+ 8729 C9           	ret
 228+ 872A
 229+ 872A              ; ---------------------------------------------------------------------
 230+ 872A              ;
 231+ 872A              ;	22/01/24
 232+ 872A
 233+ 872A 2A 51 88     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 234+ 872D 2B           	dec hl
 235+ 872E
 236+ 872E 24           	inc h
 237+ 872F 25           	dec h
 238+ 8730 20 04        	jr nz,1F
 239+ 8732
 240+ 8732 7D           	ld a,l
 241+ 8733 A7           	and a
 242+ 8734 28 FE        	jr z,$
 243+ 8736
 244+ 8736 22 51 88     1 ld (Contador_de_mov_masticados),hl
 245+ 8739 C9           	ret
 246+ 873A
 247+ 873A              ; ---------------------------------------------------------------------
 248+ 873A              ;
 249+ 873A              ;	22/01/24
 250+ 873A
 251+ 873A 21 92 88     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 252+ 873D CB 46        	bit 0,(hl)
 253+ 873F 20 0D        	jr nz,1F
 254+ 8741 CB 4E        	bit 1,(hl)
 255+ 8743 20 0C        	jr nz,2F
 256+ 8745 CB 56        	bit 2,(hl)
 257+ 8747 20 0B        	jr nz,3F
 258+ 8749 CB 5E        	bit 3,(hl)
 259+ 874B 20 0A        	jr nz,4F
 260+ 874D C9           	ret
 261+ 874E
 262+ 874E CB E6        1 set 4,(hl)
 263+ 8750 C9           	ret
 264+ 8751 CB EE        2 set 5,(hl)
 265+ 8753 C9           	ret
 266+ 8754 CB F6        3 set 6,(hl)
 267+ 8756 C9           	ret
 268+ 8757 CB FE        4 set 7,(hl)
 269+ 8759 C9           	ret
 270+ 875A
 271+ 875A              ; ---------------------------------------------------------------------
 272+ 875A              ;
 273+ 875A              ;	23/01/24
 274+ 875A              ;
 275+ 875A              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 276+ 875A              ;
 277+ 875A              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 278+ 875A              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 279+ 875A              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 280+ 875A              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 281+ 875A
 282+ 875A              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 283+ 875A
 284+ 875A 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 285+ 875B 3D           	dec a
 286+ 875C 20 06        	jr nz,1F
 287+ 875E
 288+ 875E              ; --- Tipo_1
 289+ 875E
 290+ 875E 21 92 88     	ld hl,Ctrl_4
 291+ 8761 CB C6        	set 0,(hl)
 292+ 8763 C9           	ret
 293+ 8764
 294+ 8764 3D           1 dec a
 295+ 8765 20 06        	jr nz,2F
 296+ 8767
 297+ 8767              ; --- Tipo_2
 298+ 8767
 299+ 8767 21 92 88     	ld hl,Ctrl_4
 300+ 876A CB CE        	set 1,(hl)
 301+ 876C C9           	ret
 302+ 876D
 303+ 876D 3D           2 dec a
 304+ 876E 20 06        	jr nz,3F
 305+ 8770
 306+ 8770              ; --- Tipo_3
 307+ 8770
 308+ 8770 21 92 88     	ld hl,Ctrl_4
 309+ 8773 CB D6        	set 2,(hl)
 310+ 8775 C9           	ret
 311+ 8776
 312+ 8776              ; --- Tipo_3
 313+ 8776
 314+ 8776 21 92 88     3 ld hl,Ctrl_4
 315+ 8779 CB D6        	set 2,(hl)
 316+ 877B C9           	ret
 317+ 877C
 318+ 877C              ; ---------------------------------------------------------------------
 319+ 877C              ;
 320+ 877C              ;	22/01/24
 321+ 877C
 322+ 877C 21 92 88     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 323+ 877F CB 46        	bit 0,(hl)
 324+ 8781 20 0E        	jr nz,1F
 325+ 8783
 326+ 8783 CB 4E        	bit 1,(hl)
 327+ 8785 20 10        	jr nz,2F
 328+ 8787
 329+ 8787 CB 56        	bit 2,(hl)
 330+ 8789 20 12        	jr nz,3F
 331+ 878B
 332+ 878B CB 5E        	bit 3,(hl)
 333+ 878D 20 14        	jr nz,4F
 334+ 878F 18 19        	jr 6F
 335+ 8791
 336+ 8791              ; Entidad_de_Tipo_1.
 337+ 8791
 338+ 8791 CB 66        1 bit 4,(hl)
 339+ 8793 28 15        	jr z,6F
 340+ 8795 18 10        	jr 5F
 341+ 8797
 342+ 8797              ; Entidad_de_Tipo_2.
 343+ 8797
 344+ 8797 CB 6E        2 bit 5,(hl)
 345+ 8799 28 0F        	jr z,6F
 346+ 879B 18 0A        	jr 5F
 347+ 879D
 348+ 879D              ; Entidad_de_Tipo_3.
 349+ 879D
 350+ 879D CB 76        3 bit 6,(hl)
 351+ 879F 28 09        	jr z,6F
 352+ 87A1 18 04        	jr 5F
 353+ 87A3
 354+ 87A3              ; Entidad_de_Tipo_4.
 355+ 87A3
 356+ 87A3 CB 7E        4 bit 7,(hl)
 357+ 87A5 28 03        	jr z,6F
 358+ 87A7
 359+ 87A7              ; Esta entidad TIENE MOV_MASTICADOS.
 360+ 87A7
 361+ 87A7 AF           5 xor a
 362+ 87A8 3C           	inc a
 363+ 87A9 C9           	ret
 364+ 87AA
 365+ 87AA              ; Esta entidad NO TIENE MOV_MASTICADOS.
 366+ 87AA
 367+ 87AA AF           6 xor a
 368+ 87AB C9           	ret
 369+ 87AC
 370+ 87AC              ;	------------------------------------------------------------------------------------
 371+ 87AC              ;
 372+ 87AC              ;	12/01/24
 373+ 87AC              ;
 374+ 87AC              ;	INPUTS:	A contiene el (Tipo) de entidad.
 375+ 87AC              ;
 376+ 87AC              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 377+ 87AC              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 378+ 87AC
 379+ 87AC CB 27        Calcula_salto_en_BC sla a
 380+ 87AE D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 381+ 87B0 4F           	ld c,a
 382+ 87B1 06 00        	ld b,0
 383+ 87B3 C9           	ret
 384+ 87B4
 385+ 87B4              ; ------------------------------------------------------------------
 386+ 87B4              ;
 387+ 87B4              ;	19/1/24
 388+ 87B4              ;
 389+ 87B4              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 390+ 87B4              ;	Actualiza (Datos_de_entidad) con esa dirección.
 391+ 87B4
 392+ 87B4 A7           Situa_en_datos_de_definicion and a
 393+ 87B5 ED 4A        	adc hl,bc
 394+ 87B7 CD 93 8A     	call Extrae_address
 395+ 87BA 22 81 88         ld (Datos_de_entidad),hl
 396+ 87BD C9           	ret
 397+ 87BE
 398+ 87BE              ; ------------------------------------------------------------------
 399+ 87BE
 400+ 87BE              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 401+ 87BE              ; 	inc de
 402+ 87BE              ; 	inc de
 403+ 87BE              ; 	ex de,hl
 404+ 87BE              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 405+ 87BE              ; 	ret
 406+ 87BE
 407+ 87BE              ; ----------------------------------------------------------------------------------------------------------
 408+ 87BE              ;
 409+ 87BE              ;	31/1/24
 410+ 87BE              ;
 411+ 87BE              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 412+ 87BE              ;	_ de entidad.
 413+ 87BE              ;
 414+ 87BE              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 415+ 87BE              ;
 416+ 87BE              ;
 417+ 87BE              ;	MODIFICA: HL,DE y BC
 418+ 87BE
 419+ 87BE
 420+ 87BE              Definicion_de_entidad_a_bandeja_DRAW
 421+ 87BE
 422+ 87BE 11 30 88     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 423+ 87C1 01 03 00     	ld bc,3
 424+ 87C4 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 425+ 87C6              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 426+ 87C6 11 3A 88     	ld de,Attr									; DE en (Attr).
 427+ 87C9 01 05 00     	ld bc,5
 428+ 87CC ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 429+ 87CE              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 430+ 87CE 11 43 88     	ld de,Posicion_inicio
 431+ 87D1 01 03 00     	ld bc,3
 432+ 87D4 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 433+ 87D6              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 434+ 87D6 11 4F 88     	ld de,Puntero_de_almacen_de_mov_masticados
 435+ 87D9 01 02 00     	ld bc,2
 436+ 87DC ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 437+ 87DE
 438+ 87DE 11 59 88     	ld de,Frames_explosion
 439+ 87E1 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 440+ 87E3 12           	ld (de),a 									; Vuelco (Frames_explosion).
 441+ 87E4
 442+ 87E4 C9           	ret
 443+ 87E5
 444+ 87E5              ; ----------------------------------------------------------------------------------------------------------
 445+ 87E5              ;
 446+ 87E5              ;	22/01/24
 447+ 87E5              ;
 448+ 87E5              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 449+ 87E5              ;
 450+ 87E5              ;	Las cajas contienen entidades iniciadas:
 451+ 87E5              ;
 452+ 87E5              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 453+ 87E5              ;
 454+ 87E5              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 455+ 87E5              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 456+ 87E5              ;
 457+ 87E5              ;	MODIFICA: HL,DE y BC
 458+ 87E5
 459+ 87E5 21 30 88     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 460+ 87E8 ED 5B 75 88  	ld de,(Puntero_store_caja)
 461+ 87EC 7E           	ld a,(hl)
 462+ 87ED 12           	ld (de),a
 463+ 87EE 13           	inc de 													; (Tipo).
 464+ 87EF
 465+ 87EF 21 37 88     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 466+ 87F2 01 02 00     	ld bc,2
 467+ 87F5 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 468+ 87F7              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 469+ 87F7 23           	inc hl
 470+ 87F8 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 471+ 87F9 12           	ld (de),a
 472+ 87FA 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 473+ 87FB
 474+ 87FB 21 46 88     	ld hl,Impacto
 475+ 87FE 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 476+ 87FF 12           	ld (de),a
 477+ 8800 13           	inc de 													; (Impacto), volcado a la caja.
 478+ 8801              ;															; DE situado ahora en (Variables_de_borrado).
 479+ 8801 23           	inc hl
 480+ 8802 01 06 00     	ld bc,6
 481+ 8805 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 482+ 8807              ; 															; DE situado ahora en (Puntero_de_impresión).
 483+ 8807 01 07 00     	ld bc,7
 484+ 880A ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 485+ 880C              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 486+ 880C              ;															; HL apunta ahora a (Columnas).
 487+ 880C 21 58 88     	ld hl,Ctrl_2
 488+ 880F 7E           	ld a,(hl)
 489+ 8810 12           	ld (de),a 												; Volcamos (Ctrl_2).
 490+ 8811 13           	inc de
 491+ 8812
 492+ 8812 C9           	ret
 493+ 8813
 494+ 8813              ;---------------------------------------------------------------------------------------------------------------
 495+ 8813              ;
 496+ 8813              ;	5/1/24
 497+ 8813              ;
 498+ 8813              ;	INICIALIZA (Numero_parcial_de_entidades).
 499+ 8813              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 500+ 8813              ;
 501+ 8813              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 502+ 8813              ;
 503+ 8813              ;	(Numero_parcial_de_entidades)="7".
 504+ 8813              ;
 505+ 8813              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 506+ 8813              ;
 507+ 8813              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 508+ 8813              ;
 509+ 8813              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 510+ 8813              ;	MODIFICA: A y B.
 511+ 8813              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 512+ 8813
 513+ 8813              Inicializa_Numero_parcial_de_entidades
 514+ 8813
 515+ 8813              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 516+ 8813
 517+ 8813 3A 7B 88     	ld a,(Numero_de_entidades)
 518+ 8816 A7           	and a
 519+ 8817
 520+ 8817              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 521+ 8817              ;	jr z,$
 522+ 8817              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 523+ 8817
 524+ 8817 20 03        	jr nz,3F
 525+ 8819
 526+ 8819              ; ---------- ---------- ----------
 527+ 8819
 528+ 8819              ;! RESET para pruebas. Omitir esta línea en modo normal.
 529+ 8819              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 530+ 8819
 531+ 8819 CD 80 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 532+ 881C
 533+ 881C              ; ---------- ---------- ----------
 534+ 881C
 535+ 881C 3A 7B 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 536+ 881F FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 537+ 8821 38 08        	jr c,1F
 538+ 8823
 539+ 8823              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 540+ 8823              ; Actualizamos variables.
 541+ 8823
 542+ 8823 3E 07        	ld a,7
 543+ 8825 32 7C 88     	ld (Numero_parcial_de_entidades),a
 544+ 8828 47           	ld b,a
 545+ 8829 18 04        	jr 2F
 546+ 882B
 547+ 882B              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 548+ 882B              ; (Numero_de_entidades)="0".
 549+ 882B
 550+ 882B 32 7C 88     1 ld (Numero_parcial_de_entidades),a
 551+ 882E 47           	ld b,a
 552+ 882F C9           2 ret
# file closed: Niveles.asm
 107  8830
 108  8830              ; ******************************************************************************************************************************************************************************************
 109  8830              ; Constantes.
 110  8830              ; ******************************************************************************************************************************************************************************************
 111  8830              ;
 112  8830              ; 25/12/23
 113  8830
 114  8830              ;
 115  8830              ; Constantes.
 116  8830              ;
 117  8830
 118  8830              Sprite_vacio equ $eae0
 119  8830              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  8830              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  8830              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  8830              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  8830
 124  8830              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  8830              ;														;
 126  8830              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  8830
 128  8830              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  8830              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  8830              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  8830              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  8830              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  8830
 134  8830              ;														; 55 Bytes.
 135  8830              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 136  8830              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 137  8830
 138  8830              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  8830
 140  8830              ; ******************************************************************************************************************************************************************************************
 141  8830              ; Variables.
 142  8830              ; ******************************************************************************************************************************************************************************************
 143  8830              ;
 144  8830              ; 18/01/24
 145  8830              ;
 146  8830              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  8830              ;
 148  8830
 149  8830              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  8830
 151  8830 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  8831              ;															- Patrón de movimiento.
 153  8831              ;															- Aspecto
 154  8831 00           Filas db 0												; Filas. [DRAW]
 155  8832 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  8833 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8835 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8837 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8838 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8839
 161  8839              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8839
 163  8839 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  883A              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  883A              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  883A 00           Attr db 0												; Atributos de la entidad:
 167  883B
 168  883B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  883B              ;
 170  883B              ;	COLORES: 0 ..... NEGRO
 171  883B              ;    		 1 ..... AZUL
 172  883B              ; 			 2 ..... ROJO
 173  883B              ;			 3 ..... MAGENTA
 174  883B              ; 			 4 ..... VERDE
 175  883B              ; 			 5 ..... CIAN
 176  883B              ;			 6 ..... AMARILLO
 177  883B              ; 			 7 ..... BLANCO
 178  883B
 179  883B 00 00        Indice_Sprite_der defw 0
 180  883D 00 00        Indice_Sprite_izq defw 0
 181  883F 00 00        Puntero_DESPLZ_der defw 0
 182  8841 00 00        Puntero_DESPLZ_izq defw 0
 183  8843
 184  8843 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8845 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8846
 187  8846              ; Variables de objeto. (Características).
 188  8846
 189  8846 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8847              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8847              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8847 00 00 00...  Variables_de_borrado ds 6
 193  884D
 194  884D 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  884F              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  884F
 197  884F 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  8851
 199  8851              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  8851              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  8851
 202  8851 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  8853              ;														; _palabras que componen el "movimiento_masticado".
 204  8853
 205  8853              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  8853
 207  8853 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8854              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8854              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8854              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8854              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8854              ;
 213  8854              ; 														DESCRIPCIÖN:
 214  8854              ;
 215  8854              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8854              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8854              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8854              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8854              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8854              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8854              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8854              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8854              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8854              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8854              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8854              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8854              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8854              ;
 229  8854              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8854              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8854              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8854
 233  8854              ; Variables de funcionamiento. [DRAW].
 234  8854
 235  8854 00           Columnas db 0
 236  8855 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8857              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8857 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8858
 240  8858              ; variables de control general.
 241  8858
 242  8858 00           Ctrl_2 db 0
 243  8859              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8859              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8859              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8859              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8859              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8859              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8859              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8859              ;
 251  8859              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8859              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8859              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8859              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8859              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8859              ;														BIT 4, ???
 257  8859              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8859
 259  8859 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  885A
 261  885A              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  885A
 263  885A              ;					         		---------;      ;---------
 264  885A
 265  885A              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  885A
 267  885A              Perfiles_de_velocidad
 268  885A
 269  885A 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  885B 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  885C 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  885D 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  885E
 274  885E              ; Contadores de 16 bits.
 275  885E
 276  885E 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  8860 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  8862 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8864 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8866
 281  8866              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8866
 283  8866 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  8868 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  886A 00 00        Puntero_indice_mov_bucle defw 0							;
 286  886C              ;
 287  886C              ;
 288  886C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  886D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  886D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  886D 00           Incrementa_puntero_backup db 0
 292  886E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  886F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  886F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  8870 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  8871 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  8872              ;
 298  8872              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  8872              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  8872              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  8872              ;
 302  8872              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  8872              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  8872              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  8872              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  8872              ;
 307  8872              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  8872              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  8872              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  8872              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  8872
 312  8872 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  8873
 314  8873              ;														DESCRIPCIÓN:
 315  8873              ;
 316  8873              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  8873              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  8873              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  8873              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  8873              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  8873              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  8873
 323  8873              ;														BIT 3, Recarga de nueva oleada.
 324  8873              ;														BIT 4, Recarga de nueva oleada.
 325  8873              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  8873              ;														BIT 6, **** Frame completo.
 327  8873              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  8873
 329  8873 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  8875              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  8875              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  8875              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  8875
 334  8875              ; Gestión de ENTIDADES y CAJAS.
 335  8875
 336  8875 00 00        Puntero_store_caja defw 0
 337  8877 00 00        Puntero_restore_caja defw 0
 338  8879 00 00        Indice_restore_caja defw 0
 339  887B 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  887C 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  887D 00           Entidades_en_curso db 0									; ..... ..... .....
 342  887E 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  887F              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  887F              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  887F              ;														; _ (Numero_de_malotes)="0".
 346  887F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  8881 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  8883              ;														; _ puntero (Indice_entidades).
 349  8883
 350  8883              ;---------------------------------------------------------------------------------------------------------------
 351  8883              ;
 352  8883              ;	11/01/24
 353  8883              ;
 354  8883              ;	Álbumes.
 355  8883
 356  8883 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  8885              ;														; _variable para almacenar lo posición del puntero_
 358  8885              ; 														; _de pila, SP.
 359  8885 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  8887              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  8887 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  8889 00 70        Stack_snapshot defw Album_de_fotos
 363  888B 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  888D
 365  888D              ;End_Snapshot defw Album_de_fotos
 366  888D              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  888D 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  888F              ;														; _el snapshot de los registros del siguiente disparo.
 369  888F              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  888F AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  8891
 372  8891 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  8892              ;
 374  8892              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  8892              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  8892              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  8892
 378  8892 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  8893              ;
 380  8893              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  8893              ;
 382  8893              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  8893              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  8893              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  8893              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  8893              ;
 387  8893              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  8893              ;															_ masticados ya generados.
 389  8893              ;
 390  8893              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  8893              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  8893              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  8893              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  8893
 395  8893
 396  8893              ; Gestión de Disparos.
 397  8893
 398  8893 00           Numero_de_disparotes db 0
 399  8894 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  8896 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  8898 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  8899              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  8899              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  8899 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  889B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  889B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  889B              ;														; _produzca colisión.
 408  889B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  889D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  889D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  88A0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  88A0 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  88A3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  88A3 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  88A4
 416  88A4              ;---------------------------------------------------------------------------------------------------------------
 417  88A4
 418  88A4              ; Relojes y temporizaciones.
 419  88A4
 420  88A4 00           Contador_de_frames db 0
 421  88A5 00           Contador_de_frames_2 db 0
 422  88A6
 423  88A6 04           Clock_explosion db 4
 424  88A7 14           Clock_Entidades_en_curso db 20
 425  88A8 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  88A9              ;														; Repite la oleada de entidades.
 427  88A9 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  88AA 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  88AB 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  88AC
 431  88AC 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  88AD 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  88AE 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  88AF
 435  88AF              ;---------------------------------------------------------------------------------------------------------------
 436  88AF
 437  88AF              ; Gestión de NIVELES.
 438  88AF
 439  88AF 00           Nivel db 0												; Nivel actual del juego.
 440  88B0 00 00        Puntero_indice_NIVELES defw 0
 441  88B2 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  88B4              ; 														; _ que definen el NIVEL.
 443  88B4              ; Y todo comienza aquí .....
 444  88B4              ;
 445  88B4              ; 	INICIO  *************************************************************************************************************************************************************************
 446  88B4              ;
 447  88B4              ;	5/1/24
 448  88B4
 449  88B4              START
 450  88B4
 451  88B4 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  88B7 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  88B9 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  88BB ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  88BD F3           	DI
 456  88BE
 457  88BE 3E 07        	ld a,%00000111
 458  88C0 CD EB 96     	call Cls
 459  88C3 CD 38 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  88C6
 461  88C6              ; INICIALIZACIÓN.
 462  88C6
 463  88C6              ;	Inicializa 1er Nivel.
 464  88C6
 465  88C6 21 5B 86     	ld hl,Indice_de_niveles
 466  88C9 22 B0 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  88CC CD 80 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  88CF
 469  88CF              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 470  88CF              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 471  88CF              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 472  88CF
 473  88CF              ;	Provisional, (para desarrollo).
 474  88CF
 475  88CF              	;-
 476  88CF              ;	ld hl,Numero_parcial_de_entidades
 477  88CF              ;	ld b,(hl)
 478  88CF              ;	inc b
 479  88CF              ;	dec b
 480  88CF              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 481  88CF
 482  88CF CD AF 86     4 call Inicia_Entidades
 483  88D2
 484  88D2 CD FB 89     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 485  88D5              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 486  88D5
 487  88D5              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 488  88D5              ; (Esto se dá cuando se inicia una nueva oleada).
 489  88D5
 490  88D5              ;	ld a,(Ctrl_1)
 491  88D5              ;	bit 3,a
 492  88D5              ;	jr nz,5F											; Loop
 493  88D5
 494  88D5              ; 	INICIA AMADEUS !!!!!
 495  88D5
 496  88D5              ;3 call Restore_Amadeus
 497  88D5              ;	call Inicia_Puntero_objeto
 498  88D5              ;	call Draw
 499  88D5
 500  88D5              ;	call Guarda_movimiento_masticado	;! Provisional
 501  88D5
 502  88D5              ;	call Guarda_foto_registros
 503  88D5              ;	call Guarda_datos_de_borrado_Amadeus
 504  88D5
 505  88D5              ;	ld de,Amadeus_db
 506  88D5              ;	call Store_Amadeus
 507  88D5
 508  88D5              ; 	INICIA DISPAROS !!!!!
 509  88D5
 510  88D5              ;	call Inicia_Puntero_Disparo_Entidades
 511  88D5              ;	call Inicia_Puntero_Disparo_Amadeus
 512  88D5
 513  88D5              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 514  88D5
 515  88D5              ;5 call Inicia_punteros_de_cajas
 516  88D5              ;	call Restore_entidad
 517  88D5
 518  88D5              ;	ld a,(Ctrl_1)
 519  88D5              ;	bit 3,a
 520  88D5              ;	jr z,6F
 521  88D5
 522  88D5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 523  88D5
 524  88D5              ;	ld hl,Ctrl_1
 525  88D5              ;	res 3,(hl)
 526  88D5              ;	jr Main
 527  88D5
 528  88D5              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 529  88D5
 530  88D5 21 91 88     6 ld hl,Ctrl_3
 531  88D8 CB C6        	set 0,(hl)											; Frame completo.
 532  88DA FB           	ei
 533  88DB 76           	halt
 534  88DC
 535  88DC              ; ------------------------------------
 536  88DC
 537  88DC              Main
 538  88DC              ;
 539  88DC              ;	11/12/23
 540  88DC
 541  88DC              ; Aparece nueva entidad ???
 542  88DC
 543  88DC              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 544  88DC              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 545  88DC              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 546  88DC              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 547  88DC              ;														; _un 2º bloque.
 548  88DC
 549  88DC              ;	ld a,1
 550  88DC              ;	out ($fe),a
 551  88DC
 552  88DC 3A A7 88     	ld a,(Clock_Entidades_en_curso)
 553  88DF 47           	ld b,a
 554  88E0 3A A4 88     	ld a,(Contador_de_frames)
 555  88E3 B8           	cp b
 556  88E4 20 18        	jr nz,13F
 557  88E6
 558  88E6              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 559  88E6              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 560  88E6
 561  88E6 3A 7C 88     21 ld a,(Numero_parcial_de_entidades)
 562  88E9 47           	ld b,a
 563  88EA 3A 7D 88     	ld a,(Entidades_en_curso)
 564  88ED B8           	cp b
 565  88EE 28 0E        	jr z,13F
 566  88F0 30 0C        	jr nc,13F
 567  88F2
 568  88F2 3C           	inc a
 569  88F3 32 7D 88     	ld (Entidades_en_curso),a
 570  88F6
 571  88F6              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 572  88F6
 573  88F6 3A A7 88     	ld a,(Clock_Entidades_en_curso)
 574  88F9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 575  88F9              ;! _ IMPREDECIBLE !!!!
 576  88F9 C6 64        	add 100
 577  88FB 32 A7 88     	ld (Clock_Entidades_en_curso),a
 578  88FE
 579  88FE              ; -------------------------------------------------------------------------------------------------------------
 580  88FE
 581  88FE              ; Habilita disparos.
 582  88FE
 583  88FE              13
 584  88FE
 585  88FE              ;	ld hl,Disparo_Amadeus
 586  88FE              ;	ld de,CLOCK_repone_disparo_Amadeus
 587  88FE              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 588  88FE
 589  88FE              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 590  88FE              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 591  88FE              ;	call Habilita_disparos
 592  88FE
 593  88FE              ; COLISIONES.
 594  88FE
 595  88FE              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 596  88FE
 597  88FE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 598  88FE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 599  88FE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 600  88FE
 601  88FE              ;	xor a
 602  88FE              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 603  88FE
 604  88FE              ;	call Inicia_punteros_de_cajas
 605  88FE              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 606  88FE              ; 														; _ en DRAW.
 607  88FE
 608  88FE              ;	ld a,(Filas)
 609  88FE              ;	and a
 610  88FE              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 611  88FE              ;	call Incrementa_punteros_de_cajas
 612  88FE              ;	jr 12B
 613  88FE
 614  88FE              ; ---------------------------------------------------------------------------------------
 615  88FE
 616  88FE 3A 7C 88     10 ld a,(Numero_parcial_de_entidades)
 617  8901 47               ld b,a
 618  8902 A7           	and a
 619  8903 20 00        	jr nz,11F
 620  8905
 621  8905              ;	ld hl,Ctrl_1;
 622  8905              ;	bit 4,(hl)
 623  8905              ;	jp nz,16F
 624  8905
 625  8905              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 626  8905
 627  8905              ;	ld hl,Ctrl_1
 628  8905              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 629  8905
 630  8905              ;	ld a,(Contador_de_frames)
 631  8905              ;	inc a
 632  8905              ;	ld (Activa_recarga_cajas),a
 633  8905
 634  8905              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 635  8905
 636  8905 3A 7D 88     11 ld a,(Entidades_en_curso)
 637  8908 A7           	and a
 638  8909 CA 2A 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 639  890C 47           	ld b,a												; No hay entidades que gestionar.
 640  890D
 641  890D              ; ( Código que ejecutamos con cada entidad: ).
 642  890D
 643  890D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 644  890D
 645  890D C5           15 push bc 												; Nº de entidades en curso.
 646  890E
 647  890E CD CE 8A     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 648  8911
 649  8911              ; Existe "Entidad_guía" ???.
 650  8911              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 651  8911
 652  8911              ;	ld a,(Ctrl_3)
 653  8911              ;	bit 1,a
 654  8911              ;	jr nz,22F
 655  8911
 656  8911              ; Almacén de "Movimientos_masticados" lleno ???
 657  8911              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 658  8911              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 659  8911
 660  8911              ;;	ld a,(Ctrl_3)
 661  8911              ;;	bit 3,a
 662  8911              ;;	jr nz,22F
 663  8911
 664  8911              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 665  8911
 666  8911              ;	ld hl,Ctrl_2
 667  8911              ;	set 5,(hl)
 668  8911              ;	ld hl,Ctrl_3
 669  8911              ;	set 1,(hl)
 670  8911
 671  8911              ; Impacto ???
 672  8911
 673  8911              ;22 ld a,(Impacto)
 674  8911              ;	and a
 675  8911              ;	jr z,8F
 676  8911
 677  8911              ; Hay Impacto en esta entidad.
 678  8911
 679  8911              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 680  8911              ;	dec (hl)
 681  8911              ;	jp nz,17F
 682  8911
 683  8911              ;! Velocidad de la animación de la explosión.
 684  8911
 685  8911              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 686  8911              ;														; _,(velocidad de la explosión).
 687  8911              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 688  8911
 689  8911              ;	call Repone_datos_de_borrado
 690  8911              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 691  8911
 692  8911              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 693  8911
 694  8911              ;	ld a,(Ctrl_2)
 695  8911              ;	bit 1,a
 696  8911              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 697  8911
 698  8911              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 699  8911
 700  8911              ;	ld a,(CTRL_DESPLZ)
 701  8911              ;	and a
 702  8911              ;	jr nz,18F
 703  8911
 704  8911              ;	ld hl,Indice_Explosion_2x2-2
 705  8911              ;	ld (Puntero_DESPLZ_der),hl
 706  8911              ;	jr 19F
 707  8911
 708  8911              ;18 ld hl,Indice_Explosion_2x3-2
 709  8911              ;	ld (Puntero_DESPLZ_der),hl
 710  8911
 711  8911              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 712  8911              ;	set 1,(hl)
 713  8911              ;	jr 7F
 714  8911
 715  8911              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 716  8911              ; _con las coordenadas de la entidad almacenada en DRAW.
 717  8911
 718  8911              ;8 ld a,(Ctrl_1)
 719  8911              ;	bit 2,a
 720  8911              ;	jr z,7F
 721  8911
 722  8911              ;	ld hl,(Coordenadas_disparo_certero)
 723  8911              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 724  8911              ;														; E contiene la coordenada_X del disparo.
 725  8911              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 726  8911              ;														; H FILA, (Coordenada_y de la entidad).
 727  8911              ;	and a
 728  8911              ;	sbc hl,de
 729  8911
 730  8911              ;	call Determina_resultado_comparativa
 731  8911
 732  8911              ;	ld a,b
 733  8911              ;	and a
 734  8911              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 735  8911
 736  8911              ; ----- ----- -----
 737  8911
 738  8911 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 739  8913 32 46 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 740  8916
 741  8916 21 72 88     	ld hl,Ctrl_1
 742  8919 CB 96        	res 2,(hl)
 743  891B
 744  891B CD 37 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 745  891E
 746  891E              ;	ld a,(Ctrl_0)
 747  891E              ;	bit 4,a
 748  891E              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 749  891E
 750  891E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 751  891E              ; [[[
 752  891E              ;	call Detecta_disparo_entidad
 753  891E              ; ]]]
 754  891E
 755  891E CD 15 87     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 756  8921
 757  8921              ;	ld hl,Ctrl_0
 758  8921              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 759  8921
 760  8921 CD 05 87     17 call Store_Restore_cajas
 761  8924
 762  8924 C1           	pop bc
 763  8925
 764  8925 10 E6        	djnz 15B
 765  8927
 766  8927 CD FB 89     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 767  892A
 768  892A              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 769  892A              ; Hemos gestionado todas las unidades.
 770  892A              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 771  892A
 772  892A              ;	ld hl,Ctrl_1
 773  892A              ;	res 2,(hl)
 774  892A
 775  892A 21 91 88     16 ld hl,Ctrl_3
 776  892D CB C6        	set 0,(hl)											; Frame completo.
 777  892F
 778  892F AF           	xor a
 779  8930 D3 FE        	out ($fe),a
 780  8932
 781  8932 76           	halt
 782  8933
 783  8933              ; ----------------------------------------
 784  8933
 785  8933              ;	ld a,(Ctrl_1) 										; Existe Loop?
 786  8933              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 787  8933 CA DC 88     	jp z,Main
 788  8936
 789  8936              ; RECARGA DE NUEVA OLEADA.
 790  8936
 791  8936              ;	ld a,(Contador_de_frames)
 792  8936              ;	ld b,a
 793  8936              ;	ld a,(Activa_recarga_cajas)
 794  8936              ;	cp b
 795  8936              ;	jr z,20F
 796  8936
 797  8936              ;	ld hl,Ctrl_1
 798  8936              ;	set 4,(hl)
 799  8936              ;	jp Main
 800  8936
 801  8936              ;20 ld hl,Ctrl_1
 802  8936              ;	res 4,(hl)
 803  8936
 804  8936              ;	ld a,(Contador_de_frames)
 805  8936
 806  8936              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 807  8936              ;! _ IMPREDECIBLE !!!!
 808  8936
 809  8936              ;	add 10
 810  8936              ;	ld (Clock_Entidades_en_curso),a
 811  8936
 812  8936              ;	jp 4B
 813  8936
 814  8936 C9           	ret
 815  8937
 816  8937              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 817  8937              ;
 818  8937              ;	16/11/23
 819  8937
 820  8937              ;;Gestiona_Amadeus
 821  8937
 822  8937              ;! Activa/desactiva impacto con Amadeus.
 823  8937
 824  8937              ;	ld a,(Impacto)
 825  8937              ;	and a
 826  8937              ;	jr nz,2F
 827  8937
 828  8937              ;;	call Mov_Amadeus
 829  8937
 830  8937              ;;2 ld a,(Ctrl_0)
 831  8937              ;;	bit 4,a
 832  8937              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 833  8937
 834  8937              ;;	call Guarda_foto_entidad_a_pintar
 835  8937              ;;	call Guarda_datos_de_borrado_Amadeus
 836  8937
 837  8937              ;;1 ld hl,Ctrl_0
 838  8937              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 839  8937
 840  8937              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 841  8937
 842  8937              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 843  8937
 844  8937              ;	call Calcula_numero_de_disparotes
 845  8937
 846  8937              ;;	ret
 847  8937
 848  8937              ; --------------------------------------------------------------------------------------------------------------
 849  8937              ;
 850  8937              ;	15/12/23
 851  8937
 852  8937              Mov_obj
 853  8937
 854  8937              ;	ld a,(Ctrl_2)
 855  8937              ;	bit 1,a
 856  8937              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 857  8937
 858  8937              ; Explosión:
 859  8937
 860  8937              ;	ld a,(Frames_explosion)
 861  8937              ;	and a
 862  8937              ;	jr nz,4F
 863  8937
 864  8937              ;!  Una alimaña menos!!!!!!!!!1
 865  8937
 866  8937              ; Se trataba de una Entidad_guía ???
 867  8937
 868  8937              ;	ld a,(Ctrl_2)
 869  8937              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 870  8937              ;	jr z,5F
 871  8937
 872  8937              ;	ld hl,Ctrl_3
 873  8937              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 874  8937
 875  8937              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 876  8937              ;!! _generado puede ser distinto, (aletoriedad).
 877  8937
 878  8937              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 879  8937              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 880  8937              ;	dec (hl)
 881  8937              ;	ld hl,Entidades_en_curso
 882  8937              ;	dec (hl)
 883  8937              ;	ld hl,Numero_de_entidades
 884  8937              ;	dec (hl)
 885  8937              ;	jr 3F
 886  8937
 887  8937              ; -----
 888  8937
 889  8937              ;	`Movemos´ la explosión.
 890  8937
 891  8937              ;4 ld hl,(Puntero_DESPLZ_der)
 892  8937              ;	inc hl
 893  8937              ;	inc hl
 894  8937              ;	call Extrae_address
 895  8937              ;;	ld (Puntero_objeto),hl
 896  8937
 897  8937              ;;	ld hl,Frames_explosion
 898  8937              ;;	dec (hl)
 899  8937
 900  8937              ;;	ld hl,Ctrl_0
 901  8937              ;;	set 4,(hl);;
 902  8937
 903  8937              ;;	jr 3F
 904  8937
 905  8937              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 906  8937
 907  8937              ;2 xor a
 908  8937              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 909  8937
 910  8937              ; Movemos Entidades malignas.
 911  8937              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 912  8937
 913  8937              ;	ld a,(Ctrl_2)
 914  8937              ;	bit 5,a
 915  8937              ;	jr nz,8F
 916  8937
 917  8937              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 918  8937              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 919  8937              ;	jr 7F
 920  8937
 921  8937              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 922  8937
 923  8937              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 924  8937              ;	bit 4,a
 925  8937              ;	ret z
 926  8937
 927  8937              ; Ha habido desplazamiento de la entidad maligna.
 928  8937              ; Ha llegado a zona de AMADEUS ???
 929  8937
 930  8937 3A 38 88     7 ld a,(Coordenada_y)
 931  893A FE 14        	cp $14
 932  893C 38 00        	jr c,1F
 933  893E
 934  893E              ; ---------
 935  893E
 936  893E              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 937  893E              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 938  893E
 939  893E              ;	di
 940  893E              ;	call Genera_coordenadas_X
 941  893E              ;	call Compara_coordenadas_X
 942  893E              ;	ei
 943  893E
 944  893E              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 945  893E
 946  893E              ; ---------
 947  893E
 948  893E              1
 949  893E              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 950  893E CD AC 8B     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 951  8941 CD 39 8A     	call Limpia_Variables_de_borrado
 952  8944
 953  8944 C9           3 ret
 954  8945
 955  8945              ; --------------------------------------------------------------------------------------------------------------
 956  8945              ;
 957  8945              ;	29/1/23
 958  8945
 959  8945              Mov_Amadeus
 960  8945
 961  8945              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 962  8945
 963  8945 CD A3 97     	call Mov_right
 964  8948
 965  8948 3A 53 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 966  894B CB 67        	bit 4,a
 967  894D C8           	ret z
 968  894E
 969  894E              ; ---------
 970  894E
 971  894E              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 972  894E CD 9C 8B     	call Repone_datos_de_borrado_Amadeus
 973  8951 CD 39 8A     	call Limpia_Variables_de_borrado
 974  8954
 975  8954 C9           	ret
 976  8955
 977  8955              ; -----------------------------------------------------------------------------------
 978  8955              ;
 979  8955              ;	20/01/24
 980  8955              ;
 981  8955              ;
 982  8955
 983  8955              Construye_movimientos_masticados_entidad
 984  8955
 985  8955 2A 4F 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 986  8958 E5           	push hl
 987  8959
 988  8959 CD 9D 89     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 989  895C              ;															; _ el (Contador_de_mov_masticados).
 990  895C CD 99 8A     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 991  895F              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 992  895F CD FF 96     	call Recompone_posicion_inicio
 993  8962
 994  8962 CD D5 90     1 call Draw
 995  8965 CD 81 89     	call Guarda_movimiento_masticado
 996  8968 CD 68 9C     	call Movimiento
 997  896B
 998  896B 3A 91 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 999  896E CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1000  8970 28 F0        	jr z,1B
1001  8972
1002  8972              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1003  8972              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1004  8972
1005  8972 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1006  8973 22 4F 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  8976
1008  8976
1009  8976              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1010  8976
1011  8976 CD D9 9D     	call Situa_en_contador_general_de_mov_masticados
1012  8979
1013  8979              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1014  8979              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1015  8979
1016  8979 ED 4B 51 88  	ld bc,(Contador_de_mov_masticados)
1017  897D 71           	ld (hl),c
1018  897E 23           	inc hl
1019  897F 70           	ld (hl),b
1020  8980
1021  8980 C9           	ret
1022  8981
1023  8981              ; -----------------------------------------------------------------------------------
1024  8981              ;
1025  8981              ;	28/12/23
1026  8981              ;
1027  8981              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1028  8981              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1029  8981
1030  8981              Guarda_movimiento_masticado
1031  8981
1032  8981 ED 73 83 88  	ld (Stack),sp
1033  8985 ED 7B 4F 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1034  8989
1035  8989 E5           	push hl
1036  898A DD E5            push ix
1037  898C FD E5            push iy
1038  898E
1039  898E ED 7B 83 88      ld sp,(Stack)
1040  8992
1041  8992              ;    push hl
1042  8992
1043  8992 2A 51 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1044  8995 23           	inc hl
1045  8996 22 51 88     	ld (Contador_de_mov_masticados),hl
1046  8999
1047  8999              ;	pop hl
1048  8999
1049  8999 CD 9D 89         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1050  899C              ;															; _ el (Contador_de_mov_masticados).
1051  899C C9               ret
1052  899D
1053  899D              ; --------------------------------------------------------------------------------------------------------------
1054  899D              ;
1055  899D              ;	12/1/24
1056  899D              ;
1057  899D              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1058  899D
1059  899D              Actualiza_Puntero_de_almacen_de_mov_masticados
1060  899D
1061  899D              ;	push hl
1062  899D              ;	push bc
1063  899D
1064  899D 2A 4F 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1065  89A0 01 06 00     	ld bc,6
1066  89A3 A7           	and a
1067  89A4 ED 4A        	adc hl,bc
1068  89A6 22 4F 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1069  89A9
1070  89A9              ;	pop bc
1071  89A9              ;	pop hl
1072  89A9
1073  89A9 C9           	ret
1074  89AA
1075  89AA              ; --------------------------------------------------------------------------------------------------------------
1076  89AA              ;
1077  89AA              ;	15/01/24
1078  89AA              ;
1079  89AA              ;	Cargamos los registros_
1080  89AA              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1081  89AA              ;
1082  89AA              ;	HL contiene la dirección de la rutina de impresión.
1083  89AA              ;	IX contiene el puntero de impresión.
1084  89AA              ;	IY contiene (Puntero_objeto).
1085  89AA
1086  89AA
1087  89AA ED 73 83 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1088  89AE ED 7B 4F 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1089  89B2
1090  89B2 FD E1        	pop iy
1091  89B4 DD E1        	pop ix
1092  89B6 E1           	pop hl
1093  89B7
1094  89B7 ED 73 4F 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1095  89BB
1096  89BB ED 7B 83 88  	ld sp,(Stack)
1097  89BF
1098  89BF C9           	ret
1099  89C0
1100  89C0              ; --------------------------------------------------------------------------------------------------------------
1101  89C0              ;
1102  89C0              ;	28/12/23
1103  89C0              ;
1104  89C0              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1105  89C0              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1106  89C0
1107  89C0              Guarda_foto_entidad_a_pintar
1108  89C0
1109  89C0 3A 53 88     	ld a,(Ctrl_0)
1110  89C3 CB 77        	bit 6,a
1111  89C5 28 04        	jr z,5F
1112  89C7
1113  89C7              ;	Guarda la foto de Amadeus.
1114  89C7
1115  89C7              ;	call Draw
1116  89C7              ;	call Guarda_movimiento_masticado	;! Provisional
1117  89C7 CD 16 71     	call Guarda_foto_registros
1118  89CA C9           	ret
1119  89CB
1120  89CB              ; ENTIDADES!
1121  89CB              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1122  89CB
1123  89CB 3A 91 88     5 ld a,(Ctrl_3)
1124  89CE CB 5F        	bit 3,a
1125  89D0 28 01        	jr z,1F
1126  89D2
1127  89D2              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1128  89D2
1129  89D2              4
1130  89D2              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1131  89D2 C9           	ret
1132  89D3
1133  89D3              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1134  89D3
1135  89D3 3A 91 88     1 ld a,(Ctrl_3)
1136  89D6 CB 57        	bit 2,a
1137  89D8 20 10        	jr nz,6F
1138  89DA
1139  89DA              ; Entidad guía o fantasma ???
1140  89DA
1141  89DA 3A 58 88     	ld a,(Ctrl_2)
1142  89DD CB 6F        	bit 5,a
1143  89DF 20 10        	jr nz,3F
1144  89E1
1145  89E1              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1146  89E1
1147  89E1 18 EF        	jr 4B
1148  89E3
1149  89E3              ; ENTIDAD_GUÍA:
1150  89E3              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1151  89E3              ; _guardando "movimientos_masticados".
1152  89E3
1153  89E3 3A 91 88     2 ld a,(Ctrl_3)
1154  89E6 CB 57        	bit 2,a
1155  89E8 28 07        	jr z,3F
1156  89EA
1157  89EA              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1158  89EA              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1159  89EA
1160  89EA CB 97        6 res 2,a
1161  89EC CB DF        	set 3,a
1162  89EE 32 91 88     	ld (Ctrl_3),a
1163  89F1
1164  89F1
1165  89F1              ;	Esto sólo lo ejecuta una entidad guía.
1166  89F1
1167  89F1 CD D5 90     3 	call Draw
1168  89F4 CD 81 89     	call Guarda_movimiento_masticado
1169  89F7 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1170  89FA
1171  89FA              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1172  89FA              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1173  89FA
1174  89FA              ;	call Convierte_guia_en_fantasma
1175  89FA C9           	ret
1176  89FB
1177  89FB              ; --------------------------------------------------------------------------------------------------------------
1178  89FB              ;
1179  89FB              ;	19/9/23
1180  89FB
1181  89FB              ;Prepara_var_pintado
1182  89FB
1183  89FB              ;	ld hl,Filas
1184  89FB              ;	ld de,Variables_de_pintado
1185  89FB              ;	ld bc,8
1186  89FB              ;	ldir
1187  89FB              ;	ret
1188  89FB
1189  89FB              ; --------------------------------------------------------------------------------------------------------------
1190  89FB
1191  89FB              ;Repone_pintar
1192  89FB
1193  89FB              ;	ld hl,Variables_de_pintado
1194  89FB              ;	ld de,Filas
1195  89FB              ;	ld bc,8
1196  89FB              ;	ldir
1197  89FB              ;	ret
1198  89FB
1199  89FB              ; *************************************************************************************************************************************************************
1200  89FB              ;
1201  89FB              ; 8/1/23
1202  89FB              ;
1203  89FB              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1204  89FB              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1205  89FB              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1206  89FB
1207  89FB              ; Destruye HL y DE !!!!!
1208  89FB
1209  89FB              Inicia_punteros_de_cajas
1210  89FB
1211  89FB 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1212  89FE CD 93 8A         call Extrae_address
1213  8A01 22 75 88         ld (Puntero_store_caja),hl
1214  8A04 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1215  8A07 22 79 88     	ld (Indice_restore_caja),hl
1216  8A0A CD 93 8A     	call Extrae_address
1217  8A0D 22 77 88     	ld (Puntero_restore_caja),hl
1218  8A10 C9               ret
1219  8A11
1220  8A11              ; *************************************************************************************************************************************************************
1221  8A11              ;
1222  8A11              ; 8/1/23
1223  8A11              ;
1224  8A11              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1225  8A11
1226  8A11 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1227  8A14 22 94 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1228  8A17 C9           	ret
1229  8A18 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1230  8A1B 22 96 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1231  8A1E C9           	ret
1232  8A1F
1233  8A1F              ; -------------------------------------------------------------------------------------------------------------
1234  8A1F              ;
1235  8A1F              ; 21/9/23
1236  8A1F              ;
1237  8A1F
1238  8A1F              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1239  8A1F
1240  8A1F              Limpia_album_Amadeus
1241  8A1F
1242  8A1F 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1243  8A22 7E           	ld a,(hl)
1244  8A23 A7           	and a
1245  8A24 C8           	ret z
1246  8A25
1247  8A25 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1248  8A28 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1249  8A2B 01 0B 00     	ld bc,11
1250  8A2E AF           	xor a
1251  8A2F 77           	ld (hl),a
1252  8A30 ED B0        	ldir
1253  8A32
1254  8A32 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1255  8A35 22 8F 88     	ld (End_Snapshot_Amadeus),hl
1256  8A38
1257  8A38 C9           	ret
1258  8A39
1259  8A39 21 47 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1260  8A3C 11 48 88     	ld de,Variables_de_borrado+1
1261  8A3F 01 05 00     	ld bc,5
1262  8A42 AF           	xor a
1263  8A43 77           	ld (hl),a
1264  8A44 ED B0        	ldir
1265  8A46 C9           	ret
1266  8A47
1267  8A47              ; -------------------------------------------------------------------------------------------------------------
1268  8A47              ;
1269  8A47              ; 8/9/23
1270  8A47              ;
1271  8A47
1272  8A47              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1273  8A47              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1274  8A47
1275  8A47              Calcula_numero_de_malotes
1276  8A47
1277  8A47 21 00 70     	ld hl,Album_de_fotos
1278  8A4A EB           	ex de,hl
1279  8A4B 2A 89 88     	ld hl,(Stack_snapshot)
1280  8A4E
1281  8A4E 06 00        	ld b,0
1282  8A50 7D           	ld a,l
1283  8A51 93           	sub e
1284  8A52 28 07        	jr z,1F
1285  8A54
1286  8A54              ; Nº de malotes no es "0".
1287  8A54
1288  8A54 D6 06        2 sub 6
1289  8A56 04           	inc b
1290  8A57 A7           	and a
1291  8A58 20 FA        	jr nz,2B
1292  8A5A 78           	ld a,b
1293  8A5B
1294  8A5B 32 7E 88     1 ld (Numero_de_malotes),a
1295  8A5E C9           	ret
1296  8A5F
1297  8A5F              ; -------------------------------------------------------------------------------------------------------------
1298  8A5F              ;
1299  8A5F              ; 8/9/23
1300  8A5F              ;
1301  8A5F
1302  8A5F              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1303  8A5F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1304  8A5F
1305  8A5F              Calcula_malotes_Amadeus
1306  8A5F
1307  8A5F 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1308  8A62 EB           	ex de,hl
1309  8A63 2A 8F 88     	ld hl,(End_Snapshot_Amadeus)
1310  8A66
1311  8A66 7C           	ld a,h
1312  8A67 A7           	and a
1313  8A68 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1314  8A6A
1315  8A6A 06 00        	ld b,0
1316  8A6C 7D           	ld a,l
1317  8A6D 93           	sub e
1318  8A6E 28 07        	jr z,1F
1319  8A70
1320  8A70              ; Nº de malotes no es "0".
1321  8A70
1322  8A70 D6 06        2 sub 6
1323  8A72 04           	inc b
1324  8A73 A7           	and a
1325  8A74 20 FA        	jr nz,2B
1326  8A76 78           	ld a,b
1327  8A77
1328  8A77 32 7E 88     1 ld (Numero_de_malotes),a
1329  8A7A C9           	ret
1330  8A7B
1331  8A7B              ; -------------------------------------------------------------------------------------------------------------
1332  8A7B              ;
1333  8A7B              ; 28/2/23
1334  8A7B              ;
1335  8A7B
1336  8A7B              Calcula_numero_de_disparotes
1337  8A7B
1338  8A7B 21 56 70     	ld hl,Album_de_fotos_disparos
1339  8A7E EB           	ex de,hl
1340  8A7F 2A 8D 88     	ld hl,(End_Snapshot_disparos)
1341  8A82
1342  8A82 06 00        	ld b,0
1343  8A84 7D           	ld a,l
1344  8A85 93           	sub e
1345  8A86 28 07        	jr z,1F
1346  8A88
1347  8A88              ; Nº de malotes no es "0".
1348  8A88
1349  8A88 D6 06        2 sub 6
1350  8A8A 04           	inc b
1351  8A8B A7           	and a
1352  8A8C 20 FA        	jr nz,2B
1353  8A8E 78           	ld a,b
1354  8A8F
1355  8A8F 32 93 88     1 ld (Numero_de_disparotes),a
1356  8A92 C9           	ret
1357  8A93
1358  8A93              ; *************************************************************************************************************************************************************
1359  8A93              ;
1360  8A93              ; 20/10/22
1361  8A93              ;
1362  8A93              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1363  8A93              ;
1364  8A93              ; Destruye el puntero y DE !!!!!
1365  8A93
1366  8A93 5E           Extrae_address ld e,(hl)
1367  8A94 23           	inc hl
1368  8A95 56           	ld d,(hl)
1369  8A96 2B           	dec hl
1370  8A97 EB           	ex de,hl
1371  8A98 C9           	ret
1372  8A99
1373  8A99              ; *************************************************************************************************************************************************************
1374  8A99              ;
1375  8A99              ;	20/1/24
1376  8A99              ;
1377  8A99              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1378  8A99              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1379  8A99              ;
1380  8A99              ;   Destruye HL y BC !!!!!,
1381  8A99              ;
1382  8A99              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1383  8A99              ;					"0" ..... Izquierda.
1384  8A99
1385  8A99              Inicia_Puntero_objeto
1386  8A99
1387  8A99 3A 45 88     	ld a,(Cuad_objeto)
1388  8A9C E6 01        	and 1
1389  8A9E F5           	push af
1390  8A9F CC BB 8A     	call z,Inicia_puntero_objeto_izq
1391  8AA2 F1           	pop af
1392  8AA3 C8           	ret z
1393  8AA4 CD A8 8A     	call Inicia_puntero_objeto_der
1394  8AA7 C9           	ret
1395  8AA8
1396  8AA8              ; Arrancamos desde la parte izquierda de la pantalla.
1397  8AA8              ; Iniciamos (Indice_Sprite_der).
1398  8AA8
1399  8AA8 2A 3B 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1400  8AAB 22 3F 88     	ld (Puntero_DESPLZ_der),hl
1401  8AAE CD 93 8A     	call Extrae_address
1402  8AB1 22 35 88     	ld (Puntero_objeto),hl
1403  8AB4
1404  8AB4 2A 3D 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1405  8AB7 22 41 88     	ld (Puntero_DESPLZ_izq),hl
1406  8ABA C9           	ret
1407  8ABB
1408  8ABB              ; Arrancamos desde la parte derecha de la pantalla.
1409  8ABB              ; Iniciamos (Indice_Sprite_izq).
1410  8ABB
1411  8ABB 2A 3D 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1412  8ABE 22 41 88     	ld (Puntero_DESPLZ_izq),hl
1413  8AC1 CD 93 8A     	call Extrae_address
1414  8AC4 22 35 88     	ld (Puntero_objeto),hl
1415  8AC7
1416  8AC7 2A 3B 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1417  8ACA 22 3F 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1418  8ACD C9           	ret
1419  8ACE
1420  8ACE              ; **************************************************************************************************
1421  8ACE              ;
1422  8ACE              ;	31/01/24
1423  8ACE              ;
1424  8ACE              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1425  8ACE
1426  8ACE              Restore_entidad
1427  8ACE
1428  8ACE 2A 75 88     	ld hl,(Puntero_store_caja)
1429  8AD1 11 30 88     	ld de,Bandeja_DRAW
1430  8AD4 7E           	ld a,(hl)
1431  8AD5 12           	ld (de),a
1432  8AD6 23           	inc hl 											; (Tipo).
1433  8AD7
1434  8AD7 11 37 88     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1435  8ADA 01 02 00     	ld bc,2
1436  8ADD ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1437  8ADF
1438  8ADF 13           	inc de
1439  8AE0 7E           	ld a,(hl)
1440  8AE1 12           	ld (de),a 										; Transferimos (Attr).
1441  8AE2 23           	inc hl
1442  8AE3
1443  8AE3 11 46 88     	ld de,Impacto
1444  8AE6
1445  8AE6 7E           	ld a,(hl)
1446  8AE7 12           	ld (de),a 										; Transferimos (Impacto).
1447  8AE8 23           	inc hl
1448  8AE9
1449  8AE9 13           	inc de
1450  8AEA
1451  8AEA 01 06 00     	ld bc,6
1452  8AED ED B0        	ldir
1453  8AEF
1454  8AEF 01 07 00     	ld bc,7
1455  8AF2 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1456  8AF4              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1457  8AF4 11 58 88     	ld de,Ctrl_2
1458  8AF7
1459  8AF7 7E           	ld a,(hl)
1460  8AF8 12           	ld (de),a 										; Transferimos (Ctrl_2).
1461  8AF9
1462  8AF9 C9           	ret
1463  8AFA
1464  8AFA              ; **************************************************************************************************
1465  8AFA              ;
1466  8AFA              ;	08/05/23
1467  8AFA              ;
1468  8AFA              ;	Incrementamos los dos punteros de entidades. (+1).
1469  8AFA
1470  8AFA              Incrementa_punteros_de_cajas
1471  8AFA
1472  8AFA 2A 77 88     	ld hl,(Puntero_restore_caja)
1473  8AFD 22 75 88     	ld (Puntero_store_caja),hl
1474  8B00 2A 79 88     	ld hl,(Indice_restore_caja)
1475  8B03 23           	inc hl
1476  8B04 23           	inc hl
1477  8B05 22 79 88     	ld (Indice_restore_caja),hl
1478  8B08 CD 93 8A         call Extrae_address
1479  8B0B 22 77 88         ld (Puntero_restore_caja),hl
1480  8B0E C9               ret
1481  8B0F
1482  8B0F              ; **************************************************************************************************
1483  8B0F              ;
1484  8B0F              ;	21/12/23
1485  8B0F              ;
1486  8B0F              ;	Restore_Amadeus
1487  8B0F              ;
1488  8B0F              ;	Cargamos en DRAW los parámetros de Amadeus.
1489  8B0F              ;
1490  8B0F
1491  8B0F E5           Restore_Amadeus	push hl
1492  8B10 D5           	push de
1493  8B11 C5            	push bc
1494  8B12 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1495  8B15 11 30 88     	ld de,Bandeja_DRAW
1496  8B18 01 2A 00     	ld bc,42
1497  8B1B ED B0        	ldir
1498  8B1D C1           	pop bc
1499  8B1E D1           	pop de
1500  8B1F E1           	pop hl
1501  8B20 C9           	ret
1502  8B21
1503  8B21              ; *************************************************************************************************************************************************************
1504  8B21              ;
1505  8B21              ;	21/12/23
1506  8B21              ;
1507  8B21              ;	Store_Amadeus
1508  8B21              ;
1509  8B21              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1510  8B21              ;
1511  8B21              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1512  8B21              ;
1513  8B21              ;	DESTRUYE: HL y BC y DE.
1514  8B21
1515  8B21 21 30 88     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1516  8B24 01 2A 00     	ld bc,42
1517  8B27 ED B0        	ldir
1518  8B29 C9           	ret
1519  8B2A
1520  8B2A              ; -----------------------------------------------------------
1521  8B2A              ;
1522  8B2A              ;	21/12/23
1523  8B2A              ;
1524  8B2A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1525  8B2A              ;
1526  8B2A              ;	Destruye: HL,BC,DE,A
1527  8B2A
1528  8B2A 21 30 88     Borra_datos_entidad ld hl,Bandeja_DRAW
1529  8B2D 01 29 00     	ld bc,41
1530  8B30 AF           	xor a
1531  8B31 77           	ld (hl),a
1532  8B32 11 31 88     	ld de,Bandeja_DRAW+1
1533  8B35 ED B0        	ldir
1534  8B37 C9           	ret
1535  8B38
1536  8B38              ; -----------------------------------------------------------
1537  8B38
1538  8B38              ; Teclado.
1539  8B38
1540  8B38 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1541  8B3A DB FE        	in a,($fe)
1542  8B3C E6 01        	and $01
1543  8B3E 28 02        	jr z,1f
1544  8B40 18 F6        	jr Pulsa_ENTER
1545  8B42 C9           1 ret
1546  8B43
1547  8B43              ; **************************************************************************************************
1548  8B43              ;
1549  8B43              ; Temporización.
1550  8B43
1551  8B43              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1552  8B43              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1553  8B43              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1554  8B43              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1555  8B43
1556  8B43              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1557  8B43              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1558  8B43              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1559  8B43
1560  8B43              ; A partir de $4f61 no hace falta DELAY.
1561  8B43
1562  8B43              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1563  8B43
1564  8B43 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1565  8B46 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1566  8B47 78           	LD A,B
1567  8B48 A7           	AND A
1568  8B49 20 FB        	JR NZ,wait
1569  8B4B C9           	RET
1570  8B4C
1571  8B4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1572  8B4C              ;
1573  8B4C              ;	5/3/23
1574  8B4C              ;
1575  8B4C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1576  8B4C
1577  8B4C              Movimiento_Amadeus
1578  8B4C
1579  8B4C              ; Disparo.
1580  8B4C
1581  8B4C 3A A9 88     	ld a,(Disparo_Amadeus)
1582  8B4F A7           	and a
1583  8B50 20 02        	jr nz,1F
1584  8B52 18 15        	jr 2F
1585  8B54
1586  8B54 3E F7        1 ld a,$f7													; "5" para disparar.
1587  8B56 DB FE        	in a,($fe)
1588  8B58 E6 10        	and $10
1589  8B5A
1590  8B5A F5           	push af
1591  8B5B CC 01 8C     	call z,Genera_disparo
1592  8B5E F1           	pop af
1593  8B5F 20 08        	jr nz,2F
1594  8B61
1595  8B61 3A A9 88     	ld a,(Disparo_Amadeus)
1596  8B64 EE 01        	xor 1
1597  8B66 32 A9 88     	ld (Disparo_Amadeus),a
1598  8B69 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1599  8B6B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1600  8B6D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1601  8B6F CC C6 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1602  8B72
1603  8B72 3E F7        	ld a,$f7
1604  8B74 DB FE        	in a,($fe)
1605  8B76 E6 01        	and $01
1606  8B78 C8           	ret z
1607  8B79
1608  8B79 3E F7        	ld a,$f7
1609  8B7B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1610  8B7D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1611  8B7F CC A3 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1612  8B82 C9           	ret
1613  8B83
1614  8B83              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1615  8B83              ;
1616  8B83              ;	Rutina provisional para que los malotes cagen balas.
1617  8B83
1618  8B83              Detecta_disparo_entidad
1619  8B83
1620  8B83 3A AC 88     	ld a,(Disparo_entidad)
1621  8B86 A7           	and a
1622  8B87 C8           	ret z
1623  8B88
1624  8B88              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1625  8B88
1626  8B88              ;	ld a,$7f				; Detecta SPACE.
1627  8B88              ;	in a,($fe)
1628  8B88              ;	and 1
1629  8B88              ;	ret nz
1630  8B88
1631  8B88 CD 01 8C     	call Genera_disparo
1632  8B8B C9           	ret
1633  8B8C
1634  8B8C              ; ----------------------------------------------------------------------
1635  8B8C              ;
1636  8B8C              ;	8/9/23
1637  8B8C
1638  8B8C 2A 8F 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1639  8B8F 2B            	dec hl
1640  8B90 7E           	ld a,(hl)
1641  8B91 A7           	and a
1642  8B92 C8           	ret z										; Salimos si es álbum está vacío.
1643  8B93
1644  8B93 11 4C 88     	ld de,Variables_de_borrado+5
1645  8B96 01 06 00     	ld bc,6
1646  8B99 ED B8        	lddr
1647  8B9B C9           	ret
1648  8B9C
1649  8B9C              ; ----------------------------------------------------------------------
1650  8B9C              ;
1651  8B9C              ;	9/9/23
1652  8B9C
1653  8B9C              Repone_datos_de_borrado_Amadeus
1654  8B9C
1655  8B9C 21 47 88     	ld hl,Variables_de_borrado
1656  8B9F 11 AC 70     	ld de,Album_de_fotos_Amadeus
1657  8BA2 01 06 00     	ld bc,6
1658  8BA5 ED B0        	ldir
1659  8BA7
1660  8BA7 EB           	ex de,hl
1661  8BA8 22 8F 88     	ld (End_Snapshot_Amadeus),hl
1662  8BAB
1663  8BAB C9           	ret
1664  8BAC
1665  8BAC              ; ----------------------------------------------------------------------
1666  8BAC              ;
1667  8BAC              ;	27/10/23
1668  8BAC              ;
1669  8BAC
1670  8BAC              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1671  8BAC              ;	_ Album_de_fotos correspondiente.
1672  8BAC
1673  8BAC              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1674  8BAC              ;	_ durante el proceso de escritura.
1675  8BAC
1676  8BAC              Repone_datos_de_borrado
1677  8BAC
1678  8BAC ED 5B 89 88  	ld de,(Stack_snapshot)
1679  8BB0 21 47 88     	ld hl,Variables_de_borrado
1680  8BB3 01 06 00     	ld bc,6
1681  8BB6 ED B0        	ldir
1682  8BB8
1683  8BB8 EB           	ex de,hl
1684  8BB9 22 89 88     	ld (Stack_snapshot),hl
1685  8BBC
1686  8BBC C9           	ret
1687  8BBD
1688  8BBD              ; --------------------------------------------------------------------------------------
1689  8BBD
1690  8BBD              Pinta_Amadeus
1691  8BBD
1692  8BBD CD 5F 8A        	call Calcula_malotes_Amadeus
1693  8BC0 CD 6E 94     	call Extrae_foto_Amadeus
1694  8BC3 CD 1F 8A     	call Limpia_album_Amadeus
1695  8BC6
1696  8BC6 C9           	ret
1697  8BC7
1698  8BC7              Pinta_entidades
1699  8BC7
1700  8BC7              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1701  8BC7
1702  8BC7 3A 91 88     	ld a,(Ctrl_3)
1703  8BCA CB 47        	bit 0,a
1704  8BCC C8           	ret z
1705  8BCD
1706  8BCD CD 47 8A     	call Calcula_numero_de_malotes
1707  8BD0 CD EC 93     	call Extrae_foto_entidades
1708  8BD3 CD 76 71     	call Limpia_y_reinicia_Stack_Snapshot
1709  8BD6
1710  8BD6 C9           	ret
1711  8BD7
1712  8BD7              ; -----------------------------------------------------------------------------------
1713  8BD7              ;
1714  8BD7              ;	10/12/23
1715  8BD7              ;
1716  8BD7              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1717  8BD7
1718  8BD7              Actualiza_relojes
1719  8BD7
1720  8BD7 3A 91 88     	ld a,(Ctrl_3)
1721  8BDA CB 47        	bit 0,a
1722  8BDC C8           	ret z 						;	Salimos si no hemos pintado unidades.
1723  8BDD
1724  8BDD 21 A4 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1725  8BE0 34           	inc (hl)
1726  8BE1
1727  8BE1 34           	inc (hl)
1728  8BE2 35           	dec (hl)
1729  8BE3 C0           	ret nz
1730  8BE4
1731  8BE4 21 A5 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1732  8BE7 34           	inc (hl)
1733  8BE8 C9           	ret
1734  8BE9
1735  8BE9              ; ---------------------------------------------------------------
1736  8BE9              ;
1737  8BE9              ;	21/12/23
1738  8BE9
1739  8BE9              Guarda_parametros_DRAW
1740  8BE9
1741  8BE9 21 30 88     	ld hl,Bandeja_DRAW
1742  8BEC 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1743  8BEF 01 2A 00     	ld bc,42
1744  8BF2 ED B0        	ldir
1745  8BF4 C9           	ret
1746  8BF5
1747  8BF5              Recupera_parametros_DRAW
1748  8BF5
1749  8BF5 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1750  8BF8 11 30 88     	ld de,Bandeja_DRAW
1751  8BFB 01 2A 00     	ld bc,42
1752  8BFE ED B0        	ldir
1753  8C00 C9           	ret
1754  8C01
1755  8C01              ; ---------------------------------------------------------------
1756  8C01
1757  8C01              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8C01              ; ******************************************************************************************************************************************************************************************
   2+ 8C01              ;
   3+ 8C01              ;   21/07/23
   4+ 8C01              ;
   5+ 8C01              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8C01              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8C01              ;
   8+ 8C01              ;
   9+ 8C01              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8C01              ;
  11+ 8C01              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8C01              ;               _ hacen las entidades hacia abajo.
  13+ 8C01              ;
  14+ 8C01              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8C01              ;
  16+ 8C01              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8C01              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8C01              ;
  19+ 8C01              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8C01              ;           _ la bala.
  21+ 8C01              ;
  22+ 8C01              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8C01              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8C01              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8C01              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8C01              ;           _ en el momento de generarse la bala)).
  27+ 8C01
  28+ 8C01              Genera_disparo
  29+ 8C01
  30+ 8C01              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8C01              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8C01              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8C01              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8C01              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8C01              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8C01              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8C01
  38+ 8C01              ; Exclusiones:
  39+ 8C01
  40+ 8C01 3A 5D 88         ld a,(Vel_down)
  41+ 8C04 47               ld b,a
  42+ 8C05 3A A3 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8C08 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8C09 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8C0A 3A 54 88         ld a,(Columnas)
  46+ 8C0D 47               ld b,a
  47+ 8C0E 3A 32 88         ld a,(Columns)
  48+ 8C11 B8               cp b
  49+ 8C12 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8C13
  51+ 8C13              ; ----- ----- -----
  52+ 8C13
  53+ 8C13 3A 53 88         ld a,(Ctrl_0)
  54+ 8C16 CB 77            bit 6,a
  55+ 8C18 20 06            jr nz,14F
  56+ 8C1A
  57+ 8C1A 3A 38 88         ld a,(Coordenada_y)
  58+ 8C1D FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8C1F D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8C20
  61+ 8C20 21 00 80     14 ld hl,Indice_disparo
  62+ 8C23 3A 39 88         ld a,(CTRL_DESPLZ)
  63+ 8C26 4F               ld c,a
  64+ 8C27 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8C29              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8C29              ;                                            ""        ""       "f9", B="1"
  67+ 8C29              ;                                            ""        ""       "fb", B="2"
  68+ 8C29              ;                                            ""        ""       "fb", B="3"
  69+ 8C29 A7               and a
  70+ 8C2A 28 10            jr z,1F
  71+ 8C2C E6 01            and 1
  72+ 8C2E C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8C2F
  74+ 8C2F 79               ld a,c
  75+ 8C30 16 F9            ld d,$f9
  76+ 8C32 23           2 inc hl
  77+ 8C33 23               inc hl
  78+ 8C34 04               inc b
  79+ 8C35 BA               cp d
  80+ 8C36 28 04            jr z,1F
  81+ 8C38 14               inc d
  82+ 8C39 14               inc d
  83+ 8C3A 18 F6            jr 2B
  84+ 8C3C
  85+ 8C3C CD 93 8A     1 call Extrae_address
  86+ 8C3F E5               push hl
  87+ 8C40 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8C42 DD 21 B4 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8C46
  90+ 8C46              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8C46              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8C46
  93+ 8C46 3A 53 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8C49 CB 77            bit 6,a
  95+ 8C4B 20 04            jr nz,19F
  96+ 8C4D
  97+ 8C4D AF               xor a
  98+ 8C4E 32 AC 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8C51
 100+ 8C51 3A 45 88     19 ld a,(Cuad_objeto)
 101+ 8C54 FE 02            cp 2
 102+ 8C56 38 66            jr c,3F
 103+ 8C58 28 64            jr z,3F
 104+ 8C5A
 105+ 8C5A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8C5A
 107+ 8C5A E6 01            and 1
 108+ 8C5C 28 30            jr z,4F
 109+ 8C5E
 110+ 8C5E              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8C5E              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8C5E              ;
 113+ 8C5E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8C5E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8C5E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8C5E
 117+ 8C5E 2A 33 88     	ld hl,(Posicion_actual)
 118+ 8C61
 119+ 8C61              ;   Amadeus o entidad ???.
 120+ 8C61
 121+ 8C61 3A 53 88         ld a,(Ctrl_0)
 122+ 8C64 CB 77            bit 6,a
 123+ 8C66 28 0A            jr z,8F
 124+ 8C68
 125+ 8C68              ; 	Dispara Amadeus.
 126+ 8C68
 127+ 8C68 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8C6A CD DD 93         call PreviousScan
 129+ 8C6D CD DD 93         call PreviousScan
 130+ 8C70
 131+ 8C70              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8C70              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8C70              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8C70              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8C70
 136+ 8C70 18 11            jr 10F
 137+ 8C72
 138+ 8C72              ; 	Dispara Entidad.
 139+ 8C72
 140+ 8C72 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8C75              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8C75
 143+ 8C75              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8C75              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8C75
 146+ 8C75 C5               push bc
 147+ 8C76 06 10            ld b,16
 148+ 8C78 CD CE 93     9 call NextScan
 149+ 8C7B 10 FB            djnz 9B
 150+ 8C7D C1               pop bc
 151+ 8C7E CD E8 8C         call Ajusta_disparo_parte_izquierda
 152+ 8C81 18 06            jr 17F
 153+ 8C83
 154+ 8C83              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8C83              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8C83              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8C83              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8C83
 159+ 8C83 CD E8 8C     10 call Ajusta_disparo_parte_izquierda
 160+ 8C86 CD 5D 8D         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8C89              ;                                                      ; _al generar el disparo.
 162+ 8C89
 163+ 8C89              ; 	LLegados a este punto tendremos:
 164+ 8C89              ;
 165+ 8C89              ;       Puntero_objeto_disparo en IY.
 166+ 8C89              ;       Rutinas_de_impresion en IX.
 167+ 8C89              ;       Puntero_de_impresion en HL.
 168+ 8C89              ;       Impacto/Dirección en BC.
 169+ 8C89
 170+ 8C89 CD F0 8C     17 call Almacena_disparo
 171+ 8C8C 18 52            jr 6F                                             ; RET.
 172+ 8C8E
 173+ 8C8E              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8C8E              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8C8E              ;
 176+ 8C8E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8C8E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8C8E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8C8E
 180+ 8C8E 2A 33 88     4 ld hl,(Posicion_actual)
 181+ 8C91
 182+ 8C91              ;   Amadeus o entidad ???.
 183+ 8C91
 184+ 8C91 3A 53 88         ld a,(Ctrl_0)
 185+ 8C94 CB 77            bit 6,a
 186+ 8C96 28 0A            jr z,11F
 187+ 8C98
 188+ 8C98              ; 	Dispara Amadeus.
 189+ 8C98
 190+ 8C98 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8C9A CD DD 93         call PreviousScan
 192+ 8C9D CD DD 93         call PreviousScan
 193+ 8CA0
 194+ 8CA0              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8CA0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8CA0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8CA0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8CA0
 199+ 8CA0 18 11            jr 13F
 200+ 8CA2
 201+ 8CA2              ; 	Dispara Entidad.
 202+ 8CA2
 203+ 8CA2 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8CA5              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8CA5
 206+ 8CA5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8CA5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8CA5
 209+ 8CA5 C5               push bc
 210+ 8CA6 06 10            ld b,16
 211+ 8CA8 CD CE 93     12 call NextScan
 212+ 8CAB 10 FB            djnz 12B
 213+ 8CAD C1               pop bc
 214+ 8CAE
 215+ 8CAE CD E1 8C         call Ajusta_disparo_parte_derecha
 216+ 8CB1 18 06            jr 18F
 217+ 8CB3
 218+ 8CB3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8CB3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8CB3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8CB3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8CB3
 223+ 8CB3 CD E1 8C     13 call Ajusta_disparo_parte_derecha
 224+ 8CB6 CD 5D 8D         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8CB9              ;                                                       ; _al generar el disparo.
 226+ 8CB9
 227+ 8CB9              ; LLegados a este punto tendremos:
 228+ 8CB9              ;
 229+ 8CB9              ;       Puntero_objeto_disparo en IY.
 230+ 8CB9              ;       Rutinas_de_impresion en IX.
 231+ 8CB9              ;       Puntero_de_impresion en HL.
 232+ 8CB9              ;       Impacto/Dirección en BC.
 233+ 8CB9
 234+ 8CB9 CD F0 8C     18 call Almacena_disparo
 235+ 8CBC 18 22            jr 6F                                               ; RET.
 236+ 8CBE
 237+ 8CBE              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8CBE
 239+ 8CBE 28 11        3 jr z,5F
 240+ 8CC0
 241+ 8CC0              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8CC0              ;
 243+ 8CC0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8CC0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8CC0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8CC0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8CC0
 248+ 8CC0              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8CC0              ;	   ""        ""       "f9", B="1"
 250+ 8CC0              ;	   ""        ""       "fb", B="2"
 251+ 8CC0              ; 	   ""        ""       "fb", B="3"
 252+ 8CC0
 253+ 8CC0 2A 33 88     	ld hl,(Posicion_actual)
 254+ 8CC3 CD CE 93     	call NextScan
 255+ 8CC6
 256+ 8CC6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8CC6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8CC6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8CC6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8CC6
 261+ 8CC6 CD E8 8C         call Ajusta_disparo_parte_izquierda
 262+ 8CC9
 263+ 8CC9              ; 	No se produce impacto. B="$80"
 264+ 8CC9              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8CC9
 266+ 8CC9 01 80 80         ld bc,$8080
 267+ 8CCC
 268+ 8CCC              ; 	LLegados a este punto tendremos:
 269+ 8CCC              ;
 270+ 8CCC              ;       Puntero_objeto_disparo en IY.
 271+ 8CCC              ;       Rutinas_de_impresion en IX.
 272+ 8CCC              ;       Puntero_de_impresion en HL.
 273+ 8CCC              ;       Impacto/Dirección en BC.
 274+ 8CCC
 275+ 8CCC CD F0 8C         call Almacena_disparo
 276+ 8CCF 18 0F            jr 6F                                           ; RET.
 277+ 8CD1
 278+ 8CD1              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8CD1              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8CD1              ;
 281+ 8CD1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8CD1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8CD1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8CD1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8CD1
 286+ 8CD1 2A 33 88     5 ld hl,(Posicion_actual)
 287+ 8CD4 CD CE 93     	call NextScan
 288+ 8CD7
 289+ 8CD7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8CD7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8CD7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8CD7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8CD7
 294+ 8CD7 CD E1 8C         call Ajusta_disparo_parte_derecha
 295+ 8CDA
 296+ 8CDA              ; 	No se produce impacto. B="$80"
 297+ 8CDA              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8CDA
 299+ 8CDA 01 80 80     15 ld bc,$8080
 300+ 8CDD
 301+ 8CDD              ; 	LLegados a este punto tendremos:
 302+ 8CDD              ;
 303+ 8CDD              ;       Puntero_objeto_disparo en IY.
 304+ 8CDD              ;       Rutinas_de_impresion en IX.
 305+ 8CDD              ;       Puntero_de_impresion en HL.
 306+ 8CDD              ;       Impacto/Dirección en BC.
 307+ 8CDD
 308+ 8CDD CD F0 8C         call Almacena_disparo
 309+ 8CE0
 310+ 8CE0 C9           6 ret
 311+ 8CE1
 312+ 8CE1              ; ----------------------------------------------------------------
 313+ 8CE1              ;
 314+ 8CE1              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8CE1              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8CE1              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8CE1
 318+ 8CE1 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8CE2 FE 02            cp 2
 320+ 8CE4 38 01            jr c,1F
 321+ 8CE6 23               inc hl
 322+ 8CE7 C9           1 ret
 323+ 8CE8
 324+ 8CE8 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8CE9 FE 01        	cp 1
 326+ 8CEB 20 01        	jr nz,1F
 327+ 8CED 2B           	dec hl
 328+ 8CEE 2B           1 dec hl
 329+ 8CEF C9               ret
 330+ 8CF0
 331+ 8CF0              ; ----------------------------------------------------------------
 332+ 8CF0              ;
 333+ 8CF0              ;   25/02/23
 334+ 8CF0              ;
 335+ 8CF0              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8CF0              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8CF0              ;
 338+ 8CF0              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8CF0              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8CF0
 341+ 8CF0              Almacena_disparo
 342+ 8CF0
 343+ 8CF0 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8CF1 F1               pop af
 345+ 8CF2 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8CF3
 347+ 8CF3 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8CF4 E6 01            and 1
 349+ 8CF6 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8CF8              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8CF8              ; 	Dispara AMADEUS.
 352+ 8CF8
 353+ 8CF8              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8CF8              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8CF8              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8CF8              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8CF8
 358+ 8CF8 C5               push bc
 359+ 8CF9 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8CFC 2A 96 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8CFF A7               and a
 362+ 8D00 ED 42            sbc hl,bc
 363+ 8D02 CC 18 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8D05 C1               pop bc
 365+ 8D06 28 54            jr z,4F
 366+ 8D08
 367+ 8D08 2A 96 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8D0B 23               inc hl
 369+ 8D0C 23               inc hl
 370+ 8D0D 22 96 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8D10              ;                                                   ; _ Disparo_(+1).
 372+ 8D10 18 18            jr 2F
 373+ 8D12
 374+ 8D12              ; Dispara una entidad.
 375+ 8D12
 376+ 8D12 C5           1 push bc
 377+ 8D13 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8D16 2A 94 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8D19 A7               and a
 380+ 8D1A ED 42            sbc hl,bc
 381+ 8D1C CC 11 8A         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8D1F C1               pop bc
 383+ 8D20 28 3A            jr z,4F
 384+ 8D22
 385+ 8D22 2A 94 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8D25 23               inc hl
 387+ 8D26 23               inc hl
 388+ 8D27 22 94 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8D2A              ;                                                   ; _ Disparo_(+1).
 390+ 8D2A CD 93 8A     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8D2D              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8D2D              ;
 393+ 8D2D              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8D2D              ;                                                     Rutinas_de_impresion en IX.
 395+ 8D2D              ;                                                     Puntero_de_impresion en HL.
 396+ 8D2D              ;                                                     Impacto/Dirección en BC.
 397+ 8D2D
 398+ 8D2D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8D2E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8D2F 23               inc hl                                          ; _ al siguiente.
 401+ 8D30 A7               and a
 402+ 8D31 20 C0            jr nz,3B
 403+ 8D33
 404+ 8D33 08               ex af,af
 405+ 8D34 ED 73 83 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8D38 F9               ld sp,hl
 407+ 8D39
 408+ 8D39 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8D3B F5               push af                                         ; Puntero de impresión.
 410+ 8D3C FD E5            push iy                                         ; Puntero objeto.
 411+ 8D3E C5               push bc                                         ; Control.
 412+ 8D3F
 413+ 8D3F ED 7B 83 88      ld sp,(Stack)
 414+ 8D43
 415+ 8D43              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8D43
 417+ 8D43 21 72 88     	ld hl,Ctrl_1
 418+ 8D46 CB C6        	set 0,(hl)
 419+ 8D48
 420+ 8D48 DD E5        	push ix
 421+ 8D4A E1               pop hl
 422+ 8D4B F5               push af
 423+ 8D4C DD E1            pop ix
 424+ 8D4E
 425+ 8D4E CD 16 71     	call Guarda_foto_registros
 426+ 8D51
 427+ 8D51 21 72 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8D54 CB 86        	res 0,(hl)
 429+ 8D56
 430+ 8D56              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8D56              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8D56
 433+ 8D56 CD 18 8A         call Inicia_Puntero_Disparo_Amadeus
 434+ 8D59 CD 11 8A         call Inicia_Puntero_Disparo_Entidades
 435+ 8D5C
 436+ 8D5C C9           4 ret
 437+ 8D5D
 438+ 8D5D              ; ----------------------------------------------------------------
 439+ 8D5D              ;
 440+ 8D5D              ;   4/3/23
 441+ 8D5D              ;
 442+ 8D5D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8D5D              ;   _ al generarse el disparo.
 444+ 8D5D              ;
 445+ 8D5D              ;       "$80" ..... No se produce colisión.
 446+ 8D5D              ;       "$81" ..... Se produce colisión.
 447+ 8D5D              ;
 448+ 8D5D              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8D5D              ;         _ que forman el disparo.
 450+ 8D5D
 451+ 8D5D
 452+ 8D5D              Comprueba_Colision
 453+ 8D5D
 454+ 8D5D              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8D5D
 456+ 8D5D FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8D5F E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8D60
 459+ 8D60 CD 96 8D         call Modifica_H_Velocidad_disparo
 460+ 8D63
 461+ 8D63 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8D64 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8D66 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8D68
 465+ 8D68 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8D6A CD 86 8D         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8D6D
 468+ 8D6D 7B               ld a,e
 469+ 8D6E E6 01            and 1
 470+ 8D70 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8D72              ;                                                  ; _ para activar IMPACTO.
 472+ 8D72 E1               pop hl
 473+ 8D73 E5               push hl
 474+ 8D74 CD CE 93         call NextScan
 475+ 8D77
 476+ 8D77 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8D78 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8D7A 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8D7C              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8D7C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8D7E CD 86 8D         call Bucle_2
 482+ 8D81
 483+ 8D81 43           1 ld b,e
 484+ 8D82 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8D83 FD E1            pop iy
 486+ 8D85 C9               ret
 487+ 8D86
 488+ 8D86              ; ---------- ----------
 489+ 8D86
 490+ 8D86 06 02        Bucle_2 ld b,2
 491+ 8D88 FD 7E 00     2 ld a,(iy)
 492+ 8D8B A6               and (hl)
 493+ 8D8C 28 02            jr z,1F
 494+ 8D8E 1E 81            ld e,$81
 495+ 8D90 23           1 inc hl
 496+ 8D91 FD 23            inc iy
 497+ 8D93 10 F3            djnz 2B
 498+ 8D95 C9               ret
 499+ 8D96
 500+ 8D96              ; ---------- ----------
 501+ 8D96              ;
 502+ 8D96              ;   21/7/23
 503+ 8D96
 504+ 8D96              Modifica_H_Velocidad_disparo
 505+ 8D96
 506+ 8D96 3A A3 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8D99 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8D9B D0               ret nc                                         ; _ incrementamos H.
 509+ 8D9C 24               inc h
 510+ 8D9D
 511+ 8D9D C9               ret
 512+ 8D9E
 513+ 8D9E              ; -------------------------------------------------------------------------------------------------------------
 514+ 8D9E              ;
 515+ 8D9E              ;   04/12/23
 516+ 8D9E              ;
 517+ 8D9E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8D9E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8D9E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8D9E              ;
 521+ 8D9E              ;   MODIFICA: HL,DE,B y A.
 522+ 8D9E
 523+ 8D9E              Genera_coordenadas_X
 524+ 8D9E
 525+ 8D9E              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8D9E              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8D9E
 528+ 8D9E              ;   Limpiamos almacenes.
 529+ 8D9E
 530+ 8D9E CD CF 8D         call Limpia_Coordenadas_X
 531+ 8DA1
 532+ 8DA1              ;   Almacenamos coordenadas X.
 533+ 8DA1
 534+ 8DA1              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8DA1
 536+ 8DA1 2A 4D 88         ld hl,(Puntero_de_impresion)
 537+ 8DA4 11 A0 88         ld de,Coordenadas_X_Entidad
 538+ 8DA7 06 02            ld b,2
 539+ 8DA9
 540+ 8DA9 3A 39 88         ld a,(CTRL_DESPLZ)
 541+ 8DAC A7               and a
 542+ 8DAD 28 01            jr z,1F
 543+ 8DAF 04               inc b
 544+ 8DB0
 545+ 8DB0 CD C6 8D     1 call Guarda_coordenadas_X
 546+ 8DB3
 547+ 8DB3              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8DB3
 549+ 8DB3 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8DB6 11 9D 88         ld de,Coordenadas_X_Amadeus
 551+ 8DB9 06 02            ld b,2
 552+ 8DBB
 553+ 8DBB 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8DBE A7               and a
 555+ 8DBF 28 01            jr z,2F
 556+ 8DC1 04               inc b
 557+ 8DC2
 558+ 8DC2 CD C6 8D     2 call Guarda_coordenadas_X
 559+ 8DC5
 560+ 8DC5              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8DC5
 562+ 8DC5 C9               ret
 563+ 8DC6
 564+ 8DC6              ; ----- ----- ----- ----- -----
 565+ 8DC6
 566+ 8DC6 7D           Guarda_coordenadas_X  ld a,l
 567+ 8DC7 E6 1F            and $1f
 568+ 8DC9 12           1 ld (de),a
 569+ 8DCA 3C               inc a
 570+ 8DCB 13               inc de
 571+ 8DCC 10 FB            djnz 1B
 572+ 8DCE C9               ret
 573+ 8DCF
 574+ 8DCF AF           Limpia_Coordenadas_X xor a
 575+ 8DD0 06 06            ld b,6
 576+ 8DD2 21 9D 88         ld hl,Coordenadas_X_Amadeus
 577+ 8DD5 77           1 ld (hl),a
 578+ 8DD6 23               inc hl
 579+ 8DD7 10 FC            djnz 1B
 580+ 8DD9 C9               ret
 581+ 8DDA
 582+ 8DDA              ; ----- ----- ----- ----- -----
 583+ 8DDA
 584+ 8DDA              Compara_coordenadas_X
 585+ 8DDA
 586+ 8DDA 06 03            ld b,3
 587+ 8DDC 11 A2 88         ld de,Coordenadas_X_Entidad+2
 588+ 8DDF
 589+ 8DDF 1A               ld a,(de)
 590+ 8DE0 A7               and a
 591+ 8DE1 20 01            jr nz,2F
 592+ 8DE3 05               dec b
 593+ 8DE4
 594+ 8DE4 1B           2 dec de
 595+ 8DE5 1B               dec de
 596+ 8DE6 21 9D 88         ld hl,Coordenadas_X_Amadeus
 597+ 8DE9
 598+ 8DE9 D5           1 push de
 599+ 8DEA E5               push hl
 600+ 8DEB C5               push bc
 601+ 8DEC
 602+ 8DEC CD F6 8D         call Comparando
 603+ 8DEF
 604+ 8DEF C1               pop bc
 605+ 8DF0 E1               pop hl
 606+ 8DF1 D1               pop de
 607+ 8DF2
 608+ 8DF2 13               inc de
 609+ 8DF3 10 F4            djnz 1B
 610+ 8DF5
 611+ 8DF5 C9               ret
 612+ 8DF6
 613+ 8DF6              ; ----- ----- ----- ----- -----
 614+ 8DF6              ;
 615+ 8DF6              ;   4/12/23
 616+ 8DF6              ;
 617+ 8DF6              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8DF6
 619+ 8DF6 06 03        Comparando ld b,3
 620+ 8DF8 1A               ld a,(de)
 621+ 8DF9 4E           2 ld c,(hl)
 622+ 8DFA B9               cp c
 623+ 8DFB 28 04            jr z,1F
 624+ 8DFD 23               inc hl
 625+ 8DFE 10 F9            djnz 2B
 626+ 8E00 C9               ret
 627+ 8E01
 628+ 8E01 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8E03 32 46 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8E06 21 98 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8E09 CB D6            set 2,(hl)
 632+ 8E0B C9               ret
 633+ 8E0C
 634+ 8E0C              ; -----------------------------------------------------------------------
 635+ 8E0C              ;
 636+ 8E0C              ;   7/12/23
 637+ 8E0C              ;
 638+ 8E0C
 639+ 8E0C              Detecta_colision_nave_entidad
 640+ 8E0C
 641+ 8E0C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8E0C
 643+ 8E0C FD 2A 35 88      ld iy,(Puntero_objeto)
 644+ 8E10 2A 4D 88         ld hl,(Puntero_de_impresion)
 645+ 8E13
 646+ 8E13 E5               push hl
 647+ 8E14
 648+ 8E14              ; ----- ----- -----
 649+ 8E14 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8E16 06 0A            ld b,10
 651+ 8E18 CD 48 8E     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8E1B 7B               ld a,e
 653+ 8E1C FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8E1E 38 0E            jr c,3F
 655+ 8E20
 656+ 8E20              ; LLegados a este punto:
 657+ 8E20              ;
 658+ 8E20              ;   HAY COLISIÓN !!!!!.
 659+ 8E20              ;
 660+ 8E20              ;   .db (Impacto) de Amadeus a "1".
 661+ 8E20              ;   SET el bit3 de (Impacto2).
 662+ 8E20              ;
 663+ 8E20              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8E20
 665+ 8E20 21 46 88         ld hl,Impacto
 666+ 8E23 36 01            ld (hl),1
 667+ 8E25 21 98 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8E28 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8E2A CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8E2C
 671+ 8E2C 18 18            jr 1F
 672+ 8E2E
 673+ 8E2E              ; -----
 674+ 8E2E
 675+ 8E2E E1           3 pop hl
 676+ 8E2F CD CE 93         call NextScan
 677+ 8E32 E5               push hl
 678+ 8E33 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8E34 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8E36 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8E38 30 0C            jr nc,1F
 682+ 8E3A              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8E3A 10 DC            djnz 2B
 684+ 8E3C
 685+ 8E3C              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8E3C
 687+ 8E3C              ; LLegados a este punto:
 688+ 8E3C              ;
 689+ 8E3C              ;   NO HAY COLISIÓN !!!!!.
 690+ 8E3C              ;
 691+ 8E3C              ;   .db (Impacto) de Amadeus a "0".
 692+ 8E3C              ;   RES el bit2 de (Impacto2).
 693+ 8E3C              ;
 694+ 8E3C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8E3C              ;   Lo colocamos a "0".
 696+ 8E3C
 697+ 8E3C 21 98 88         ld hl,Impacto2
 698+ 8E3F CB 96            res 2,(hl)
 699+ 8E41 2A 99 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8E44 36 00            ld (hl),0
 701+ 8E46
 702+ 8E46 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8E47 C9               ret
 704+ 8E48
 705+ 8E48               ; ---------- ----------
 706+ 8E48
 707+ 8E48 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8E49 3A 32 88         ld a,(Columns)
 709+ 8E4C 47               ld b,a
 710+ 8E4D FD 7E 00     2 ld a,(iy)
 711+ 8E50 BE               cp (hl)
 712+ 8E51 28 01            jr z,1F
 713+ 8E53
 714+ 8E53 1C               inc e
 715+ 8E54
 716+ 8E54 23           1 inc hl
 717+ 8E55 FD 23            inc iy
 718+ 8E57 10 F4            djnz 2B
 719+ 8E59 C1               pop bc
 720+ 8E5A C9               ret
 721+ 8E5B
 722+ 8E5B              ; -------------------------------------------------------------------------------------------------------------
 723+ 8E5B              ;
 724+ 8E5B              ;   13/03/23
 725+ 8E5B              ;
 726+ 8E5B              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8E5B              ;
 728+ 8E5B              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8E5B
 730+ 8E5B 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8E5E 7E               ld a,(hl)
 732+ 8E5F A7               and a
 733+ 8E60 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8E61
 735+ 8E61 44               ld b,h
 736+ 8E62 4D               ld c,l
 737+ 8E63 2A 8B 88         ld hl,(Stack_snapshot_disparos)
 738+ 8E66 E5               push hl
 739+ 8E67 A7               and a
 740+ 8E68 ED 42            sbc hl,bc
 741+ 8E6A E5               push hl
 742+ 8E6B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8E6C
 744+ 8E6C E1               pop hl
 745+ 8E6D 54               ld d,h
 746+ 8E6E 5D               ld e,l
 747+ 8E6F 1B               dec de
 748+ 8E70 ED B8            lddr                                                ; Limpiamos.
 749+ 8E72
 750+ 8E72 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8E75 22 8B 88         ld (Stack_snapshot_disparos),hl
 752+ 8E78
 753+ 8E78 C9               ret
 754+ 8E79
 755+ 8E79              ; -------------------------------------------------------------------------------------------------------------
 756+ 8E79              ;
 757+ 8E79              ;   18/07/23
 758+ 8E79              ;
 759+ 8E79
 760+ 8E79              Motor_de_disparos
 761+ 8E79
 762+ 8E79              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8E79
 764+ 8E79 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8E7C 2A 96 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8E7F
 767+ 8E7F CD 93 8A     2 call Extrae_address
 768+ 8E82 7E               ld a,(hl)
 769+ 8E83 A7               and a
 770+ 8E84 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8E86
 772+ 8E86              ; ----- ----- ----- ----- ----- -----
 773+ 8E86
 774+ 8E86 C5               push bc
 775+ 8E87 CD 4B 8F         call foto_disparo_a_borrar
 776+ 8E8A
 777+ 8E8A              ; Existe colisión con este disparo???
 778+ 8E8A
 779+ 8E8A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8E8B 7E               ld a,(hl)
 781+ 8E8C 2B               dec hl
 782+ 8E8D E6 01            and 1
 783+ 8E8F 28 1D            jr z,9F
 784+ 8E91
 785+ 8E91              ;   En este punto:
 786+ 8E91              ;
 787+ 8E91              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8E91              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8E91              ;   _con la entidad).
 790+ 8E91              ;
 791+ 8E91              ;   Disparo_2A defw 0                                ; Control.
 792+ 8E91              ;    defw 0                                          ; Puntero objeto.
 793+ 8E91              ;    defw 0                                          ; Puntero de impresión.
 794+ 8E91              ;    defw 0                                          ; Rutina de impresión.
 795+ 8E91
 796+ 8E91 E5               push hl
 797+ 8E92
 798+ 8E92 06 04            ld b,4
 799+ 8E94 23           19 inc hl
 800+ 8E95 10 FD            djnz 19B
 801+ 8E97
 802+ 8E97 CD 93 8A         call Extrae_address
 803+ 8E9A CD A5 9A         call Genera_coordenadas_disparo
 804+ 8E9D
 805+ 8E9D              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8E9D
 807+ 8E9D 21 9B 88         ld hl,Coordenadas_disparo_certero
 808+ 8EA0 72               ld (hl),d
 809+ 8EA1 23               inc hl
 810+ 8EA2 73               ld (hl),e
 811+ 8EA3
 812+ 8EA3              ; Elimino el disparo de la base de datos.
 813+ 8EA3
 814+ 8EA3 E1               pop hl
 815+ 8EA4 CD CA 8F         call Elimina_disparo_de_base_de_datos
 816+ 8EA7 21 98 88         ld hl,Impacto2
 817+ 8EAA CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8EAC
 819+ 8EAC 18 06            jr 11F
 820+ 8EAE
 821+ 8EAE CD 74 8F     9 call Mueve_disparo
 822+ 8EB1 CD 4B 8F         call foto_disparo_a_borrar
 823+ 8EB4
 824+ 8EB4 C1           11 pop bc
 825+ 8EB5 18 04            jr 7F
 826+ 8EB7
 827+ 8EB7              ; ----- ----- ----- ----- ----- -----
 828+ 8EB7
 829+ 8EB7 ED 42        1 sbc hl,bc
 830+ 8EB9 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8EBB
 832+ 8EBB 2A 96 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8EBE 23               inc hl
 834+ 8EBF 23               inc hl
 835+ 8EC0 22 96 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8EC3 18 BA            jr 2B
 837+ 8EC5
 838+ 8EC5 CD 18 8A     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8EC8              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8EC8
 841+ 8EC8              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8EC8
 843+ 8EC8 01 6E 85         ld bc,Disparo_11
 844+ 8ECB 2A 94 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8ECE
 846+ 8ECE CD 93 8A     5 call Extrae_address
 847+ 8ED1 7E               ld a,(hl)
 848+ 8ED2 A7               and a
 849+ 8ED3 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8ED5
 851+ 8ED5              ; ----- ----- ----- ----- ----- -----
 852+ 8ED5
 853+ 8ED5 C5               push bc
 854+ 8ED6 CD 4B 8F         call foto_disparo_a_borrar
 855+ 8ED9
 856+ 8ED9              ; Existe colisión con este disparo???
 857+ 8ED9
 858+ 8ED9 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8EDA 7E               ld a,(hl)
 860+ 8EDB 2B               dec hl
 861+ 8EDC E6 01            and 1
 862+ 8EDE 28 4D            jr z,10F
 863+ 8EE0
 864+ 8EE0              ;! La colisión se produce con Amadeus???
 865+ 8EE0              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8EE0
 867+ 8EE0 E5               push hl
 868+ 8EE1
 869+ 8EE1 06 04            ld b,4
 870+ 8EE3 23           16 inc hl
 871+ 8EE4 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8EE6
 873+ 8EE6 CD 93 8A         call Extrae_address
 874+ 8EE9 CD A5 9A         call Genera_coordenadas_disparo
 875+ 8EEC
 876+ 8EEC 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8EED FE 16            cp $16
 878+ 8EEF 38 2A            jr c,15F
 879+ 8EF1
 880+ 8EF1
 881+ 8EF1              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8EF1
 883+ 8EF1 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8EF2
 885+ 8EF2              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8EF2
 887+ 8EF2 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8EF5
 889+ 8EF5              ; Coordenada X de Amadeus en D.
 890+ 8EF5
 891+ 8EF5 7D               ld a,l
 892+ 8EF6 E6 1F            and $1F
 893+ 8EF8 57               ld d,a
 894+ 8EF9
 895+ 8EF9 21 8A 85         ld hl,Amadeus_db+8
 896+ 8EFC 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 8EFD
 898+ 8EFD 21 9D 88         ld hl,Coordenadas_X_Amadeus
 899+ 8F00 CD C6 8D         call Guarda_coordenadas_X
 900+ 8F03
 901+ 8F03 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 8F04
 903+ 8F04              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 8F04
 905+ 8F04 06 02            ld b,2
 906+ 8F06 C5           20 push bc
 907+ 8F07
 908+ 8F07 06 03            ld b,3
 909+ 8F09 21 9D 88         ld hl,Coordenadas_X_Amadeus
 910+ 8F0C 7E           18 ld a,(hl)
 911+ 8F0D BA               cp d
 912+ 8F0E 20 04            jr nz,17F
 913+ 8F10
 914+ 8F10              ;! Colisión Amadeus !!!!!!!!!!
 915+ 8F10
 916+ 8F10 C1               pop bc
 917+ 8F11 E1               pop hl
 918+ 8F12 18 0D            jr 14F
 919+ 8F14
 920+ 8F14 23           17 inc hl
 921+ 8F15 10 F5            djnz 18B
 922+ 8F17
 923+ 8F17 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 8F18
 925+ 8F18 C1               pop bc
 926+ 8F19 10 EB            djnz 20B
 927+ 8F1B
 928+ 8F1B
 929+ 8F1B              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 8F1B              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 8F1B
 932+ 8F1B E1           15 pop hl
 933+ 8F1C 23               inc hl
 934+ 8F1D 35               dec (hl)
 935+ 8F1E 2B               dec hl
 936+ 8F1F 18 0C            jr 10F
 937+ 8F21
 938+ 8F21              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 8F21              ; _ almacén de coordenadas_X de Amadeus.
 940+ 8F21
 941+ 8F21 E5           14 push hl
 942+ 8F22 CD CA 8F         call Elimina_disparo_de_base_de_datos
 943+ 8F25 21 98 88         ld hl,Impacto2
 944+ 8F28 CB CE            set 1,(hl)
 945+ 8F2A E1               pop hl
 946+ 8F2B 18 06            jr 12F
 947+ 8F2D
 948+ 8F2D              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 8F2D
 950+ 8F2D CD 74 8F     10 call Mueve_disparo
 951+ 8F30 CD 4B 8F         call foto_disparo_a_borrar
 952+ 8F33 C1           12 pop bc
 953+ 8F34
 954+ 8F34 18 04            jr 8F
 955+ 8F36
 956+ 8F36              ; ----- ----- ----- ----- ----- -----
 957+ 8F36
 958+ 8F36 ED 42        4 sbc hl,bc
 959+ 8F38 28 0A            jr z,6F
 960+ 8F3A
 961+ 8F3A 2A 94 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 8F3D 23               inc hl
 963+ 8F3E 23               inc hl
 964+ 8F3F 22 94 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 8F42 18 8A            jr 5B
 966+ 8F44
 967+ 8F44 CD 11 8A     6 call Inicia_Puntero_Disparo_Entidades
 968+ 8F47 CD CF 8D         call Limpia_Coordenadas_X
 969+ 8F4A C9               ret
 970+ 8F4B
 971+ 8F4B              ; ------------------------------------------------------------------
 972+ 8F4B
 973+ 8F4B              foto_disparo_a_borrar
 974+ 8F4B
 975+ 8F4B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 8F4C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 8F4D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 8F4E
 979+ 8F4E E5               push hl
 980+ 8F4F 23               inc hl
 981+ 8F50 23               inc hl
 982+ 8F51 ED 73 83 88      ld (Stack),sp
 983+ 8F55 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 8F56 FD E1            pop iy
 985+ 8F58 DD E1            pop ix
 986+ 8F5A E1               pop hl
 987+ 8F5B ED 7B 83 88      ld sp,(Stack)
 988+ 8F5F 3A 72 88         ld a,(Ctrl_1)
 989+ 8F62 CB C7            set 0,a
 990+ 8F64 32 72 88         ld (Ctrl_1),a
 991+ 8F67 CD 16 71         call Guarda_foto_registros
 992+ 8F6A 3A 72 88         ld a,(Ctrl_1)
 993+ 8F6D CB 87            res 0,a
 994+ 8F6F 32 72 88         ld (Ctrl_1),a
 995+ 8F72 E1               pop hl
 996+ 8F73 C9               ret
 997+ 8F74
 998+ 8F74              ;---------------------------------------------------
 999+ 8F74              ;
1000+ 8F74              ;   18/07/23
1001+ 8F74              ;
1002+ 8F74
1003+ 8F74              Mueve_disparo
1004+ 8F74
1005+ 8F74              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 8F74              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 8F74              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 8F74
1009+ 8F74 E5               push hl
1010+ 8F75
1011+ 8F75 7E               ld a,(hl)
1012+ 8F76
1013+ 8F76 06 04            ld b,4
1014+ 8F78 23           1 inc hl
1015+ 8F79 10 FD            djnz 1B
1016+ 8F7B
1017+ 8F7B              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 8F7B
1019+ 8F7B CD 93 8A         call Extrae_address
1020+ 8F7E
1021+ 8F7E E6 01            and 1
1022+ 8F80 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 8F82
1024+ 8F82              ; Disparo hacia arriba, (Amadeus).
1025+ 8F82
1026+ 8F82              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 8F82              ; _ de la dificultad.
1028+ 8F82
1029+ 8F82 CD DD 93         call PreviousScan
1030+ 8F85 CD DD 93         call PreviousScan
1031+ 8F88 CD DD 93         call PreviousScan
1032+ 8F8B CD DD 93         call PreviousScan
1033+ 8F8E
1034+ 8F8E              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 8F8E
1036+ 8F8E 7C               ld a,h
1037+ 8F8F FE 40            cp $40
1038+ 8F91 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 8F93
1040+ 8F93              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 8F93
1042+ 8F93 EB               ex de,hl
1043+ 8F94 06 04            ld b,4
1044+ 8F96 2B           6 dec hl
1045+ 8F97 10 FD            djnz 6B
1046+ 8F99
1047+ 8F99 CD CA 8F         call Elimina_disparo_de_base_de_datos
1048+ 8F9C E1               pop hl
1049+ 8F9D 18 10            jr 7F
1050+ 8F9F
1051+ 8F9F              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 8F9F              ; HL contiene el puntero de impresión del disparo.
1053+ 8F9F              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 8F9F
1055+ 8F9F D5           3 push de
1056+ 8FA0 C5               push bc
1057+ 8FA1
1058+ 8FA1 CD 5D 8D         call Comprueba_Colision
1059+ 8FA4
1060+ 8FA4              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 8FA4
1062+ 8FA4 78               ld a,b
1063+ 8FA5
1064+ 8FA5 C1               pop bc
1065+ 8FA6 D1               pop de
1066+ 8FA7
1067+ 8FA7 EB               ex de,hl
1068+ 8FA8
1069+ 8FA8 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 8FA9 23               inc hl                                      ; _ movimiento.
1071+ 8FAA 72               ld (hl),d
1072+ 8FAB
1073+ 8FAB E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 8FAC
1075+ 8FAC 23               inc hl                                      ; _ en curso.
1076+ 8FAD 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 8FAE 2B               dec hl
1078+ 8FAF
1079+ 8FAF C9           7 ret
1080+ 8FB0
1081+ 8FB0              ; Disparo hacia abajo, (Entidad).
1082+ 8FB0
1083+ 8FB0 3A A3 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 8FB3 47               ld b,a
1085+ 8FB4
1086+ 8FB4 CD CE 93     4 call NextScan
1087+ 8FB7 10 FB            djnz 4B
1088+ 8FB9
1089+ 8FB9              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 8FB9
1091+ 8FB9 7C               ld a,h
1092+ 8FBA FE 58            cp $58
1093+ 8FBC 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 8FBE
1095+ 8FBE EB               ex de,hl
1096+ 8FBF 06 04            ld b,4
1097+ 8FC1 2B           5 dec hl
1098+ 8FC2 10 FD            djnz 5B
1099+ 8FC4
1100+ 8FC4 CD CA 8F         call Elimina_disparo_de_base_de_datos
1101+ 8FC7 E1               pop hl
1102+ 8FC8 18 E5            jr 7B
1103+ 8FCA
1104+ 8FCA              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 8FCA
1106+ 8FCA 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 8FCD AF               xor a
1108+ 8FCE 77               ld (hl),a
1109+ 8FCF 54               ld d,h
1110+ 8FD0 5D               ld e,l
1111+ 8FD1 13               inc de
1112+ 8FD2 ED B0            ldir
1113+ 8FD4 C9               ret
1114+ 8FD5
1115+ 8FD5              ; -----------------------------------------------------------------
1116+ 8FD5              ;
1117+ 8FD5              ;   7/12/23
1118+ 8FD5              ;
1119+ 8FD5
1120+ 8FD5 3A 98 88     Selector_de_impactos ld a,(Impacto2)
1121+ 8FD8 A7               and a
1122+ 8FD9 C8               ret z
1123+ 8FDA
1124+ 8FDA              ; Analizamos si hay impacto por disparos.
1125+ 8FDA
1126+ 8FDA              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 8FDA
1128+ 8FDA CB 4F            bit 1,a
1129+ 8FDC 28 07            jr z,1F
1130+ 8FDE
1131+ 8FDE 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 8FE1 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 8FE3 18 08            jr 2F
1134+ 8FE5
1135+ 8FE5 CB 47        1 bit 0,a
1136+ 8FE7 C8               ret z
1137+ 8FE8
1138+ 8FE8              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 8FE8
1140+ 8FE8 21 72 88         ld hl,Ctrl_1
1141+ 8FEB CB D6            set 2,(hl)
1142+ 8FED
1143+ 8FED C9           2 ret
1144+ 8FEE
1145+ 8FEE              ; -----------------------------------------------------------------
1146+ 8FEE              ;
1147+ 8FEE              ;   25/04/23
1148+ 8FEE              ;
1149+ 8FEE
1150+ 8FEE              Determina_resultado_comparativa
1151+ 8FEE
1152+ 8FEE              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 8FEE              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 8FEE              ;
1155+ 8FEE              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 8FEE              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 8FEE              ;
1158+ 8FEE              ;   SBC HL,DE
1159+ 8FEE
1160+ 8FEE              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 8FEE              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 8FEE
1163+ 8FEE              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 8FEE              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 8FEE
1166+ 8FEE
1167+ 8FEE 3A 45 88         ld a,(Cuad_objeto)
1168+ 8FF1 FE 02            cp 2
1169+ 8FF3 28 26            jr z,2F
1170+ 8FF5 38 24            jr c,2F
1171+ 8FF7
1172+ 8FF7              ; Cuadrantes 3º y 4º
1173+ 8FF7
1174+ 8FF7 E6 01            and 1
1175+ 8FF9 28 10            jr z,4F
1176+ 8FFB
1177+ 8FFB              ; Cuadrante 3º
1178+ 8FFB
1179+ 8FFB 7C               ld a,h
1180+ 8FFC 06 00            ld b,0
1181+ 8FFE
1182+ 8FFE CD 89 90         call Compara_cositas_H3
1183+ 9001
1184+ 9001 04               inc b
1185+ 9002 05               dec b
1186+ 9003 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9004
1188+ 9004 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9005 06 00            ld b,0
1190+ 9007
1191+ 9007 CD 9B 90         call Compara_cositas_L3
1192+ 900A C9               ret
1193+ 900B
1194+ 900B              ; Cuadrante 4º
1195+ 900B
1196+ 900B 7C           4 ld a,h
1197+ 900C 06 00            ld b,0
1198+ 900E
1199+ 900E CD AD 90         call Compara_cositas_H4
1200+ 9011
1201+ 9011 04               inc b
1202+ 9012 05               dec b
1203+ 9013 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9014
1205+ 9014 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9015 06 00            ld b,0
1207+ 9017
1208+ 9017 CD C3 90         call Compara_cositas_L4
1209+ 901A C9               ret
1210+ 901B
1211+ 901B              ; Cuadrantes 1º y 2º.
1212+ 901B
1213+ 901B 28 10        2 jr z,3F
1214+ 901D
1215+ 901D              ; 1er Cuadrante
1216+ 901D
1217+ 901D 7C               ld a,h
1218+ 901E 06 00            ld b,0
1219+ 9020
1220+ 9020 CD 61 90         call Compara_cositas_H1
1221+ 9023
1222+ 9023 04               inc b
1223+ 9024 05               dec b
1224+ 9025 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9026
1226+ 9026 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9027 06 00            ld b,0
1228+ 9029
1229+ 9029 CD 77 90         call Compara_cositas_L1
1230+ 902C C9               ret
1231+ 902D
1232+ 902D
1233+ 902D              ; 2º Cuadrante
1234+ 902D
1235+ 902D 7C           3 ld a,h
1236+ 902E 06 00            ld b,0
1237+ 9030
1238+ 9030 CD 3D 90         call Compara_cositas_H2
1239+ 9033
1240+ 9033 04               inc b
1241+ 9034 05               dec b
1242+ 9035 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9036
1244+ 9036 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9037 06 00            ld b,0
1246+ 9039
1247+ 9039 CD 4F 90         call Compara_cositas_L2
1248+ 903C C9               ret
1249+ 903D
1250+ 903D A7           Compara_cositas_H2 and a
1251+ 903E 28 0D            jr z,1F
1252+ 9040              ;    cp $fd
1253+ 9040              ;    jr z,1F
1254+ 9040              ;    cp $fe
1255+ 9040              ;    jr z,1F
1256+ 9040 FE FF            cp $ff
1257+ 9042 28 09            jr z,1F
1258+ 9044 FE 01            cp $01
1259+ 9046 28 05            jr z,1F
1260+ 9048 FE 02            cp $02
1261+ 904A 28 01            jr z,1F
1262+ 904C C0               ret nz
1263+ 904D 04           1 inc b
1264+ 904E C9               ret
1265+ 904F
1266+ 904F A7           Compara_cositas_L2 and a
1267+ 9050 28 0D            jr z,1F
1268+ 9052              ;    cp $fd
1269+ 9052              ;    jr z,1F
1270+ 9052 FE FE            cp $fe
1271+ 9054 28 09            jr z,1F
1272+ 9056 FE FF            cp $ff
1273+ 9058 28 05            jr z,1F
1274+ 905A FE 01            cp $01
1275+ 905C 28 01            jr z,1F
1276+ 905E              ;    cp $02
1277+ 905E              ;    jr z,1F
1278+ 905E C0               ret nz
1279+ 905F 04           1 inc b
1280+ 9060 C9               ret
1281+ 9061
1282+ 9061 A7           Compara_cositas_H1 and a
1283+ 9062 28 11            jr z,1F
1284+ 9064              ;    cp $fd
1285+ 9064              ;    jr z,1F
1286+ 9064              ;    cp $fe
1287+ 9064              ;    jr z,1F
1288+ 9064 FE FF            cp $ff
1289+ 9066 28 0D            jr z,1F
1290+ 9068 FE 01            cp $01
1291+ 906A 28 09            jr z,1F
1292+ 906C FE 02            cp $02
1293+ 906E 28 05            jr z,1F
1294+ 9070 FE 03            cp $03
1295+ 9072 28 01            jr z,1F
1296+ 9074 C0               ret nz
1297+ 9075 04           1 inc b
1298+ 9076 C9               ret
1299+ 9077
1300+ 9077 A7           Compara_cositas_L1 and a
1301+ 9078 28 0D            jr z,1F
1302+ 907A              ;    cp $fd
1303+ 907A              ;    jr z,1F
1304+ 907A              ;    cp $fe
1305+ 907A              ;    jr z,1F
1306+ 907A              ;    cp $ff
1307+ 907A              ;    jr z,1F
1308+ 907A FE 01            cp $01
1309+ 907C 28 09            jr z,1F
1310+ 907E FE 02            cp $02
1311+ 9080 28 05            jr z,1F
1312+ 9082 FE 03            cp $03
1313+ 9084 28 01            jr z,1F
1314+ 9086 C0               ret nz
1315+ 9087 04           1 inc b
1316+ 9088 C9               ret
1317+ 9089
1318+ 9089 A7           Compara_cositas_H3 and a
1319+ 908A 28 0D            jr z,1F
1320+ 908C              ;    cp $fd
1321+ 908C              ;    jr z,1F
1322+ 908C FE FE            cp $fe
1323+ 908E 28 09            jr z,1F
1324+ 9090 FE FF            cp $ff
1325+ 9092 28 05            jr z,1F
1326+ 9094 FE 01            cp $01
1327+ 9096 28 01            jr z,1F
1328+ 9098              ;    cp $02
1329+ 9098              ;    jr z,1F
1330+ 9098              ;    cp $03
1331+ 9098              ;    jr z,1F
1332+ 9098 C0               ret nz
1333+ 9099 04           1 inc b
1334+ 909A C9               ret
1335+ 909B
1336+ 909B A7           Compara_cositas_L3 and a
1337+ 909C 28 0D            jr z,1F
1338+ 909E              ;    cp $fd
1339+ 909E              ;    jr z,1F
1340+ 909E              ;    cp $fe
1341+ 909E              ;    jr z,1F
1342+ 909E              ;    cp $ff
1343+ 909E              ;    jr z,1F
1344+ 909E FE 01            cp $01
1345+ 90A0 28 09            jr z,1F
1346+ 90A2 FE 02            cp $02
1347+ 90A4 28 05            jr z,1F
1348+ 90A6 FE 03            cp $03
1349+ 90A8 28 01            jr z,1F
1350+ 90AA C0               ret nz
1351+ 90AB 04           1 inc b
1352+ 90AC C9               ret
1353+ 90AD
1354+ 90AD A7           Compara_cositas_H4 and a
1355+ 90AE 28 11            jr z,1F
1356+ 90B0 FE FD            cp $fd
1357+ 90B2 28 0D            jr z,1F
1358+ 90B4 FE FE            cp $fe
1359+ 90B6 28 09            jr z,1F
1360+ 90B8 FE FF            cp $ff
1361+ 90BA 28 05            jr z,1F
1362+ 90BC FE 01            cp $01
1363+ 90BE 28 01            jr z,1F
1364+ 90C0              ;    cp $02
1365+ 90C0              ;    jr z,1F
1366+ 90C0              ;    cp $03
1367+ 90C0              ;    jr z,1F
1368+ 90C0 C0               ret nz
1369+ 90C1 04           1 inc b
1370+ 90C2 C9               ret
1371+ 90C3
1372+ 90C3 A7           Compara_cositas_L4 and a
1373+ 90C4 28 0D            jr z,1F
1374+ 90C6              ;    cp $fd
1375+ 90C6              ;    jr z,1F
1376+ 90C6 FE FE            cp $fe
1377+ 90C8 28 09            jr z,1F
1378+ 90CA FE FF            cp $ff
1379+ 90CC 28 05            jr z,1F
1380+ 90CE FE 01            cp $01
1381+ 90D0 28 01            jr z,1F
1382+ 90D2              ;    cp $02
1383+ 90D2              ;    jr z,1F
1384+ 90D2              ;    cp $03
1385+ 90D2              ;    jr z,1F
1386+ 90D2 C0               ret nz
1387+ 90D3 04           1 inc b
1388+ 90D4 C9               ret
# file closed: Disparo.asm
1758  90D5              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 90D5              ; ******************************************************************************************************************************************************************************************
   2+ 90D5              ;
   3+ 90D5              ; 26/06/23
   4+ 90D5              ;
   5+ 90D5              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 90D5
   7+ 90D5              Draw
   8+ 90D5
   9+ 90D5 CD C2 93     	call Prepara_draw
  10+ 90D8 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 90D9 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 90DA 28 05        	jr z,2F
  13+ 90DC
  14+ 90DC 3A 45 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 90DF 18 0C        	jr 1F
  16+ 90E1
  17+ 90E1 2A 43 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 90E4 22 33 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 90E7 CD 76 92     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 90EA              ;													; _la esquina superior izquierda de la pantalla.
  21+ 90EA
  22+ 90EA CD 36 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 90ED
  24+ 90ED 3A 53 88     1 ld a,(Ctrl_0)
  25+ 90F0 CB 6F        	bit 5,a
  26+ 90F2 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 90F4
  28+ 90F4 CD 0C 91     	call Comprueba_limite_horizontal
  29+ 90F7 CD 9C 91     	call Comprueba_limite_vertical
  30+ 90FA
  31+ 90FA              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 90FA              ; -----------------------
  33+ 90FA              ; -----------------------
  34+ 90FA              ; -----------------------
  35+ 90FA
  36+ 90FA CD F2 92     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 90FD CD 29 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9100 CD 88 93     	call Define_rutina_de_impresion
  39+ 9103
  40+ 9103 3A 53 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 9106 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 9108 32 53 88     	ld (Ctrl_0),a
  43+ 910B
  44+ 910B C9           	ret
  45+ 910C
  46+ 910C              ; *******************************************************************************************************************************************************************************************
  47+ 910C              ;	21/01/23
  48+ 910C              ;
  49+ 910C              ; 	Comprueba_limite_horizontal.
  50+ 910C              ;
  51+ 910C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 910C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 910C              ;
  54+ 910C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 910C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 910C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 910C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 910C
  59+ 910C
  60+ 910C
  61+ 910C 3A 53 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 910F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9111 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9113 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9115 32 53 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9118 18 09            jr 6F
  67+ 911A CB 5F        1 bit 3,a
  68+ 911C 28 0A            jr z,2F
  69+ 911E E6 F7            and $f7
  70+ 9120 32 53 88         ld (Ctrl_0),a
  71+ 9123 CD 76 92     6 call Inicializacion
  72+ 9126 18 5B            jr 5F
  73+ 9128 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9129
  75+ 9129              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9129              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9129
  78+ 9129 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 912A 2A 55 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 912D CD E1 96     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9130 67           	ld h,a
  82+ 9131 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9132 CD E1 96     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9135 67           	ld h,a
  85+ 9136 A7           	and a
  86+ 9137 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9139 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 913A 3A 45 88     	ld a,(Cuad_objeto)
  89+ 913D FE 02        	cp 2
  90+ 913F 38 1E        	jr c,3F
  91+ 9141 28 1C        	jr z,3F
  92+ 9143 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9144 28 23            jr z,7F
  94+ 9146 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9148 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 914A E1           	pop hl
  97+ 914B
  98+ 914B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 914B              ; _para indicar con E="2" en caso necesario.
 100+ 914B
 101+ 914B E5               push hl
 102+ 914C C5               push bc
 103+ 914D CD E1 96     	call calcula_tercio
 104+ 9150 FE 01        	cp 1
 105+ 9152 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9154 CD 84 91         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9157 28 26            jr z,9F
 108+ 9159 38 24            jr c,9F
 109+ 915B 1E 00        11 ld e,0
 110+ 915D 18 22            jr 8F
 111+ 915F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9160 28 07        	jr z, 7F
 113+ 9162 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9164 1E 00         	ld e,0
 115+ 9166 E1           	pop hl
 116+ 9167 18 04        	jr 4F
 117+ 9169 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 916B 18 15            jr 10F
 119+ 916D
 120+ 916D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 916D              ; _para indicar con E="2" en caso necesario.
 122+ 916D
 123+ 916D E5           4 push hl
 124+ 916E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 916F CD E1 96     	call calcula_tercio
 126+ 9172 FE 01        	cp 1
 127+ 9174 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9176 CD 84 91         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9179 28 04            jr z,9F
 130+ 917B 30 02            jr nc,9F
 131+ 917D 18 02        	jr 8F
 132+ 917F 1E 02        9 ld e,2
 133+ 9181 C1           8 pop bc
 134+ 9182 E1           10 pop hl
 135+ 9183 C9           5 ret
 136+ 9184
 137+ 9184              ; --------------------
 138+ 9184              ;
 139+ 9184              ; 25/08/22
 140+ 9184
 141+ 9184 CD E1 96     Comprueba_centro call calcula_tercio
 142+ 9187 67               ld h,a
 143+ 9188 08           	ex af,af
 144+ 9189 FE 02        	cp 2
 145+ 918B 38 07        	jr c,1F
 146+ 918D 28 05        	jr z,1F
 147+ 918F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9192 18 03        	jr 2F
 149+ 9194 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9197 08           2 ex af,af
 151+ 9198 A7               and a
 152+ 9199 ED 42            sbc hl,bc
 153+ 919B C9               ret
 154+ 919C
 155+ 919C              ; *********************************************************************************************************************************************************************************************
 156+ 919C              ;
 157+ 919C              ;   16/8/22
 158+ 919C              ;
 159+ 919C              ;	Comprueba_limite_vertical
 160+ 919C              ;
 161+ 919C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 919C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 919C              ;
 164+ 919C
 165+ 919C 2A 33 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 919F 7D           	ld a,l
 167+ 91A0 E6 1F        	and $1F
 168+ 91A2 57           	ld d,a
 169+ 91A3 3A 57 88     	ld a,(Limite_vertical)
 170+ 91A6 BA           	cp d 											; Límite - Posición.
 171+ 91A7 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 91A8 3A 45 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 91AB CB 47        	bit 0,a
 174+ 91AD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 91AF
 176+ 91AF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 91AF
 178+ 91AF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 91B0 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 91B2
 181+ 91B2              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 91B2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 91B2
 184+ 91B2 3A 37 88         ld a,(Coordenada_X)
 185+ 91B5 16 0F            ld d,Centro_izquierda
 186+ 91B7 A7               and a
 187+ 91B8 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 91B9 28 1E            jr z,3F
 189+ 91BB 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 91BD              ;                                                    ; _salimos sin modificar nada.
 191+ 91BD 18 0E            jr 2F
 192+ 91BF 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 91C0 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 91C2
 195+ 91C2              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 91C2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 91C2
 198+ 91C2 3A 37 88         ld a,(Coordenada_X)
 199+ 91C5 16 10            ld d,Centro_derecha
 200+ 91C7 A7               and a
 201+ 91C8 92               sub d
 202+ 91C9 28 0E            jr z,3F
 203+ 91CB 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 91CD              ;                                                    ; _salimos sin modificar nada.
 205+ 91CD CB 43        2 bit 0,e
 206+ 91CF 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 91D1 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 91D2 CD 66 92         call Modificaccionne
 209+ 91D5 C1           	pop bc
 210+ 91D6 CD 76 92         call Inicializacion
 211+ 91D9 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 91DA
 213+ 91DA              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 91DA
 215+ 91DA C5           4 push bc
 216+ 91DB 01 32 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 91DE 0A           	ld a,(bc)
 218+ 91DF 3D           	dec a
 219+ 91E0 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 91E1 7D           	ld a,l
 221+ 91E2 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 91E3 CB 47        	bit 0,a
 223+ 91E5 28 03        	jr z,5F
 224+ 91E7 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 91E8 18 2E        	jr 7F
 226+ 91EA
 227+ 91EA              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 91EA
 229+ 91EA 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 91EB F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 91EC 3A 53 88     	ld a,(Ctrl_0)
 232+ 91EF CB 4F        	bit 1,a
 233+ 91F1 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 91F3 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 91F4
 236+ 91F4              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 91F4
 238+ 91F4 1C               inc e
 239+ 91F5 1D               dec e
 240+ 91F6 20 07            jr nz,12F
 241+ 91F8 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 91F9 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 91FA 22 33 88     	ld (Posicion_actual),hl
 244+ 91FD 18 44        13 jr 9F
 245+ 91FF CB 43        12 bit 0,e
 246+ 9201 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9203              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9203 C1           	pop bc
 249+ 9204 18 D3        	jr 3B
 250+ 9206 80           14 add b
 251+ 9207 6F               ld l,a
 252+ 9208 22 33 88     	ld (Posicion_actual),hl
 253+ 920B CD 66 92         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 920E 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9210 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9212 32 53 88         ld (Ctrl_0),a
 257+ 9215 F1           	pop af
 258+ 9216 18 2B        	jr 9F
 259+ 9218
 260+ 9218              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9218
 262+ 9218 F5           7 push af
 263+ 9219 3A 53 88     	ld a,(Ctrl_0)
 264+ 921C CB 47        	bit 0,a
 265+ 921E 20 1D        	jr nz,8F
 266+ 9220 F1           	pop af
 267+ 9221
 268+ 9221              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9221
 270+ 9221 1C           	inc e
 271+ 9222 1D               dec e
 272+ 9223 20 07            jr nz,10F
 273+ 9225 90           	sub b
 274+ 9226 6F               ld l,a
 275+ 9227 22 33 88     	ld (Posicion_actual),hl
 276+ 922A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 922C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 922C CB 43        10 bit 0,e
 279+ 922E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9230              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9230 C1           	pop bc
 282+ 9231 18 A6        	jr 3B
 283+ 9233 90           16 sub b
 284+ 9234 6F               ld l,a
 285+ 9235 22 33 88     	ld (Posicion_actual),hl
 286+ 9238 CD 66 92         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 923B 18 06            jr 9F
 288+ 923D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 923F 32 53 88         ld (Ctrl_0),a
 290+ 9242 F1           	pop af
 291+ 9243 C1           9 pop bc
 292+ 9244 1E 00        	ld e,0
 293+ 9246 CD 76 92         call Inicializacion
 294+ 9249 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 924A 08           	ex af,af
 296+ 924B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 924C 18 8B            jr 3B
 298+ 924E
 299+ 924E              ; --------------------
 300+ 924E
 301+ 924E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9250 CD DD 93     1 call PreviousScan
 303+ 9253 10 FB            djnz 1B
 304+ 9255 22 33 88     	ld (Posicion_actual),hl
 305+ 9258 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9259 C9           	ret
 307+ 925A
 308+ 925A              ; --------------------
 309+ 925A
 310+ 925A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 925C CD CE 93     1 call NextScan
 312+ 925F 10 FB            djnz 1B
 313+ 9261 22 33 88     	ld (Posicion_actual),hl
 314+ 9264 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9265 C9           	ret
 316+ 9266
 317+ 9266              ; --------------------
 318+ 9266              ;
 319+ 9266              ;	22/01/23
 320+ 9266              ;
 321+ 9266              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9266              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9266              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9266
 325+ 9266
 326+ 9266              Modificaccionne
 327+ 9266
 328+ 9266 3A 45 88     	ld a,(Cuad_objeto)
 329+ 9269 FE 02        	cp 2
 330+ 926B CC 4E 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 926E DC 4E 92         call c,Modifica_Pos_actual
 332+ 9271 C8           	ret z
 333+ 9272 CD 5A 92         call Modifica_Pos_actual2
 334+ 9275 C9               ret
 335+ 9276
 336+ 9276              ; *************************************************************************************************************************************************************************************************
 337+ 9276              ;
 338+ 9276              ;	13/8/22
 339+ 9276              ;
 340+ 9276              ;	Inicializacion
 341+ 9276              ;
 342+ 9276              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9276              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9276              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9276              ;
 346+ 9276              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9276              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9276              ;	_ desaparece/aparece.
 349+ 9276
 350+ 9276              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9276              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9276              ;
 353+ 9276              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9276              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9276              ; 		   [E] ="0"
 356+ 9276
 357+ 9276              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9276
 359+ 9276 CD E1 96     Inicializacion call calcula_tercio
 360+ 9279 28 36        	jr z,primit
 361+ 927B E6 02        	and 2
 362+ 927D 20 07        	jr nz,segmit
 363+ 927F 7D           	ld a,l
 364+ 9280 FE 7F        	cp $7f
 365+ 9282 38 2D        	jr c,primit
 366+ 9284 28 2B        	jr z,primit
 367+ 9286 CD EC 92     segmit call column
 368+ 9289 38 13        	jr c,tercuad
 369+ 928B 3E 04        cuarcuad ld a,4
 370+ 928D 32 45 88     	ld (Cuad_objeto),a
 371+ 9290 21 20 48     	ld hl,$4820
 372+ 9293 22 55 88     	ld (Limite_horizontal),hl
 373+ 9296 21 57 88     	ld hl,Limite_vertical
 374+ 9299 36 0D        	ld (hl),$0d
 375+ 929B 08           	ex af,af
 376+ 929C 18 3C        	jr 1F
 377+ 929E              tercuad
 378+ 929E 3E 03        	ld a,3
 379+ 92A0 32 45 88     	ld (Cuad_objeto),a
 380+ 92A3 21 20 48     	ld hl,$4820
 381+ 92A6 22 55 88     	ld (Limite_horizontal),hl
 382+ 92A9 21 57 88     	ld hl,Limite_vertical
 383+ 92AC 36 12        	ld (hl),$12
 384+ 92AE 08           	ex af,af
 385+ 92AF 18 29        	jr 1F
 386+ 92B1 CD EC 92     primit call column
 387+ 92B4 38 13        	jr c, primcuad
 388+ 92B6              segcuad
 389+ 92B6 3E 02        	ld a,2
 390+ 92B8 32 45 88     	ld (Cuad_objeto),a
 391+ 92BB 21 C0 4F     	ld hl,$4fc0
 392+ 92BE 22 55 88     	ld (Limite_horizontal),hl
 393+ 92C1 21 57 88     	ld hl,Limite_vertical
 394+ 92C4 36 0D        	ld (hl),$0d
 395+ 92C6 08           	ex af,af
 396+ 92C7 18 11        	jr 1F
 397+ 92C9              primcuad
 398+ 92C9 3E 01        	ld a,1
 399+ 92CB 32 45 88     	ld (Cuad_objeto),a
 400+ 92CE 21 C0 4F     	ld hl,$4fc0
 401+ 92D1 22 55 88     	ld (Limite_horizontal),hl
 402+ 92D4 21 57 88     	ld hl,Limite_vertical
 403+ 92D7 36 12        	ld (hl),$12
 404+ 92D9 08           	ex af,af
 405+ 92DA
 406+ 92DA C5           1 push bc
 407+ 92DB E5           	push hl
 408+ 92DC D5           	push de
 409+ 92DD
 410+ 92DD 2A 33 88     	ld hl,(Posicion_actual)
 411+ 92E0 CD 79 9A     	call Genera_coordenadas
 412+ 92E3
 413+ 92E3 D1           	pop de
 414+ 92E4 E1           	pop hl
 415+ 92E5 C1           	pop bc
 416+ 92E6
 417+ 92E6 21 53 88     	ld hl,Ctrl_0
 418+ 92E9 CB EE        	set 5,(hl)
 419+ 92EB C9           	ret
 420+ 92EC
 421+ 92EC              ; ------------------------------------------------------------------------------------------------------------------
 422+ 92EC
 423+ 92EC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 92EC              ;
 425+ 92EC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 92EC
 427+ 92EC 7D           column ld a,l
 428+ 92ED E6 1F        	and $1f
 429+ 92EF FE 10         	cp $10
 430+ 92F1 C9            	ret
 431+ 92F2
 432+ 92F2              ; --------------------------------------------------------------------------------------------------------------------
 433+ 92F2              ;
 434+ 92F2              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 92F2              ;
 436+ 92F2              ; 14/12/22
 437+ 92F2              ;
 438+ 92F2              ;	Modifica: A y BC.
 439+ 92F2
 440+ 92F2 3A 45 88     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 92F5 E6 01        	and 1
 442+ 92F7 28 17        	jr z,1F
 443+ 92F9
 444+ 92F9              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 92F9
 446+ 92F9 3A 37 88     	ld a,(Coordenada_X)
 447+ 92FC 47           	ld b,a
 448+ 92FD 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 92FE 79           	ld a,c
 450+ 92FF 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9300 38 08        	jr c,2F
 452+ 9302 47           	ld b,a
 453+ 9303 79           	ld a,c
 454+ 9304 90           	sub b
 455+ 9305 32 54 88     	ld (Columnas),a
 456+ 9308 18 1B        	jr 4F
 457+ 930A 79           2 ld a,c
 458+ 930B 32 54 88     	ld (Columnas),a
 459+ 930E 18 15        	jr 4F
 460+ 9310
 461+ 9310              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9310
 463+ 9310 3A 37 88     1 ld a,(Coordenada_X)
 464+ 9313 81           	add c
 465+ 9314 3D           	dec a
 466+ 9315 D6 1F        	sub $1f
 467+ 9317 38 08        	jr c,3F
 468+ 9319 47           	ld b,a
 469+ 931A 79           	ld a,c
 470+ 931B 90           	sub b
 471+ 931C 32 54 88     	ld (Columnas),a
 472+ 931F 18 04        	jr 4F
 473+ 9321 79           3 ld a,c
 474+ 9322 32 54 88     	ld (Columnas),a
 475+ 9325 D9           4 exx
 476+ 9326 4F           	ld c,a
 477+ 9327 D9           	exx
 478+ 9328 C9            ret
 479+ 9329
 480+ 9329              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9329              ;
 482+ 9329              ;   19/7/23
 483+ 9329              ;
 484+ 9329              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9329              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9329              ;
 487+ 9329              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9329              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9329              ;
 490+ 9329              ;	DESTRUYE: HL,B Y A.
 491+ 9329
 492+ 9329 3A 45 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 932C FE 02        	cp 2
 494+ 932E 38 18        	jr c,1F
 495+ 9330 28 16        	jr z,1F
 496+ 9332 E6 01        	and 1
 497+ 9334 28 0D        	jr z,3F
 498+ 9336
 499+ 9336              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9336
 501+ 9336 CD 7C 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9339
 503+ 9339 7D           9 ld a,l
 504+ 933A E6 1F        	and $1f
 505+ 933C 28 2A        	jr z,7F
 506+ 933E 2B           	dec hl
 507+ 933F 10 F8        	djnz 9B
 508+ 9341 18 25        	jr 7F
 509+ 9343
 510+ 9343              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9343
 512+ 9343 2A 33 88     3 ld hl,(Posicion_actual)
 513+ 9346 18 20        	jr 7F
 514+ 9348
 515+ 9348 28 14        1 jr z,2F
 516+ 934A
 517+ 934A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 934A
 519+ 934A CD 7C 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 934D
 521+ 934D 7D           4 ld a,l
 522+ 934E E6 1F        	and $1f
 523+ 9350 28 03        	jr z,6F
 524+ 9352 2B           	dec hl
 525+ 9353 10 F8        	djnz 4B
 526+ 9355 06 0F        6 ld b,15
 527+ 9357 CD DD 93     5 call PreviousScan
 528+ 935A 10 FB        	djnz 5B
 529+ 935C 18 0A        	jr 7F
 530+ 935E
 531+ 935E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 935E
 533+ 935E CD 7C 93     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9361 06 0F        	ld b,15
 535+ 9363 CD DD 93     8 call PreviousScan
 536+ 9366 10 FB        	djnz 8B
 537+ 9368
 538+ 9368 E5           7 push hl
 539+ 9369 DD E1        	pop ix
 540+ 936B
 541+ 936B 2A 35 88     	ld hl,(Puntero_objeto)
 542+ 936E E5           	push hl
 543+ 936F FD E1        	pop iy
 544+ 9371
 545+ 9371              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9371
 547+ 9371 3A 53 88     	ld a,(Ctrl_0)
 548+ 9374 CB 77        	bit 6,a
 549+ 9376 C8           	ret z
 550+ 9377
 551+ 9377              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9377              ; _ entidad / Amadeus´.
 553+ 9377
 554+ 9377 DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 937B
 556+ 937B C9           	ret
 557+ 937C
 558+ 937C              ; --------------------------------------------------------------------------------------------------------------------
 559+ 937C              ;
 560+ 937C              ;	2/1/23
 561+ 937C              ;
 562+ 937C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 937C              ;
 564+ 937C              ;	Tras esta rutina tenemos:
 565+ 937C              ;
 566+ 937C              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 937C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 937C              ;
 569+ 937C              ;	DESTRUYE!!!!! HL,B y A.
 570+ 937C
 571+ 937C 2A 33 88     Operandos ld hl,(Posicion_actual)
 572+ 937F 3A 54 88     	ld a,(Columnas)
 573+ 9382 3D           	dec a
 574+ 9383 20 01        	jr nz,1F
 575+ 9385 3C           	inc a
 576+ 9386 47           1 ld b,a
 577+ 9387 C9           	ret
 578+ 9388
 579+ 9388              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9388              ;
 581+ 9388              ;	3/1/23
 582+ 9388              ;
 583+ 9388              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9388              ;
 585+ 9388              ;	Destruye: A,B,HL y DE.
 586+ 9388
 587+ 9388              Define_rutina_de_impresion
 588+ 9388
 589+ 9388 3A 32 88     	ld a,(Columns)
 590+ 938B 47           	ld b,a
 591+ 938C 3A 54 88     	ld a,(Columnas)
 592+ 938F B8           	cp b
 593+ 9390 20 0D        	jr nz,2f
 594+ 9392
 595+ 9392              ;	La entidad se imprime entera.
 596+ 9392
 597+ 9392 21 B1 94     	ld hl, Indice_entidades_completas
 598+ 9395 E6 01        	and 1
 599+ 9397 28 02        	jr z,1F
 600+ 9399
 601+ 9399 23           	inc hl
 602+ 939A 23           	inc hl
 603+ 939B
 604+ 939B CD 93 8A     1 call Extrae_address
 605+ 939E C9           	ret		;	ret
 606+ 939F
 607+ 939F              ;	La entidad no se imprime entera en pantalla.
 608+ 939F
 609+ 939F 3A 45 88     2 ld a,(Cuad_objeto)
 610+ 93A2 E6 01        	and 1
 611+ 93A4 28 17        	jr z,3F
 612+ 93A6
 613+ 93A6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 93A6
 615+ 93A6 21 B5 94     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 93A9 3A 32 88     4 ld a,(Columns)
 617+ 93AC E6 01        	and 1
 618+ 93AE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 93B0
 620+ 93B0 23           	inc hl
 621+ 93B1 23           	inc hl
 622+ 93B2
 623+ 93B2 3A 54 88     	ld a,(Columnas)
 624+ 93B5 E6 01        	and 1
 625+ 93B7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 93B9
 627+ 93B9 23           	inc hl
 628+ 93BA 23           	inc hl
 629+ 93BB
 630+ 93BB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 93BD
 632+ 93BD 21 BB 94     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 93C0 18 E7        	jr 4B
 634+ 93C2
 635+ 93C2              ; --------------------------------------------------------------------------------------------------------------------
 636+ 93C2              ;
 637+ 93C2              ;	Prepara_draw
 638+ 93C2              ;
 639+ 93C2              ;	Es una rutina de carga.
 640+ 93C2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 93C2              ;
 642+ 93C2              ;	FUNCIONAMIENTO:
 643+ 93C2              ;
 644+ 93C2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 93C2              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 93C2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 93C2              ;
 648+ 93C2              ;	DESTRUYE:
 649+ 93C2              ;
 650+ 93C2              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 93C2
 652+ 93C2 21 31 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 93C5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 93C6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 93C7 4E           	ld c,(hl)
 656+ 93C8 2A 33 88     	ld hl,(Posicion_actual)
 657+ 93CB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 93CD C9           	ret
 659+ 93CE
 660+ 93CE              ;----------------------------------------------------------------------------------------------------------------
 661+ 93CE              ;
 662+ 93CE              ;	5/08/22
 663+ 93CE              ;
 664+ 93CE              ;   NextScan.
 665+ 93CE              ;
 666+ 93CE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 93CE              ;
 668+ 93CE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 93CE              ;
 670+ 93CE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 93CE              ;
 672+ 93CE              ;       DESTRUIDOS: AF y HL !!!
 673+ 93CE              ;
 674+ 93CE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 93CE              ;
 676+ 93CE
 677+ 93CE 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 93CF 7C               ld a,h
 679+ 93D0 E6 07            and 7
 680+ 93D2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 93D3
 682+ 93D3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 93D4 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 93D6 6F               ld l,a
 685+ 93D7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 93D8
 687+ 93D8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 93D9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 93DB 67               ld h,a
 690+ 93DC C9               ret
 691+ 93DD
 692+ 93DD              ;----------------------------------------------------------------------------------------------------------------
 693+ 93DD              ;
 694+ 93DD              ;	5/08/22
 695+ 93DD              ;
 696+ 93DD              ;   PreviousScan.
 697+ 93DD              ;
 698+ 93DD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 93DD              ;
 700+ 93DD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 93DD              ;
 702+ 93DD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 93DD              ;
 704+ 93DD              ;       DESTRUIDOS: AF y HL !!!
 705+ 93DD              ;
 706+ 93DD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 93DD              ;
 708+ 93DD
 709+ 93DD 7C           PreviousScan ld a,h
 710+ 93DE 25               dec h               ; Dec H.
 711+ 93DF E6 07            and 7
 712+ 93E1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 93E2
 714+ 93E2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 93E3 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 93E5 6F               ld l,a
 717+ 93E6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 93E7
 719+ 93E7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 93E8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 93EA 67               ld h,a
 722+ 93EB C9               ret
 723+ 93EC
 724+ 93EC              ; -----------------------------------------------------------------------------------
 725+ 93EC              ;
 726+ 93EC              ;	31/7/23
 727+ 93EC              ;
 728+ 93EC              ;	Rutina principal de pintado de entidades.
 729+ 93EC              ;	Extrae la foto del frame, (entidades).
 730+ 93EC
 731+ 93EC              Extrae_foto_entidades
 732+ 93EC
 733+ 93EC 21 01 70     	ld hl,Album_de_fotos+1
 734+ 93EF 7E           	ld a,(hl)
 735+ 93F0 A7           	and a
 736+ 93F1 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 93F2
 738+ 93F2              ;	No hay datos, (entidades para pintar en este frame).
 739+ 93F2
 740+ 93F2 3A 7E 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 93F5 A7           	and a
 742+ 93F6 C8           	ret z
 743+ 93F7
 744+ 93F7              ; -----------------------------------
 745+ 93F7
 746+ 93F7 ED 73 83 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 93FB 31 00 70     	ld sp,Album_de_fotos
 748+ 93FE
 749+ 93FE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9400 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9401 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9402
 753+ 9402 ED 73 85 88  	ld (Stack_2),sp
 754+ 9406 ED 7B 83 88  	ld sp,(Stack)
 755+ 940A
 756+ 940A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 940A
 758+ 940A 3E CD        	ld a,$cd
 759+ 940C 32 14 94     	ld (Imprime),a
 760+ 940F EB           	ex de,hl
 761+ 9410 22 15 94     	ld (Imprime+1),hl
 762+ 9413 EB           	ex de,hl
 763+ 9414
 764+ 9414              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9414
 766+ 9414 00 00 00     Imprime db 0,0,0
 767+ 9417
 768+ 9417 ED 73 83 88  	ld (Stack),sp
 769+ 941B
 770+ 941B 3A 7E 88     	ld a,(Numero_de_malotes)
 771+ 941E 3D           	dec a
 772+ 941F 28 09        	jr z,1F
 773+ 9421 32 7E 88      	ld (Numero_de_malotes),a
 774+ 9424
 775+ 9424 ED 7B 85 88  	ld sp,(Stack_2)
 776+ 9428 18 D4        	jr 2B
 777+ 942A
 778+ 942A AF           1 xor a
 779+ 942B 32 85 88     	ld (Stack_2),a
 780+ 942E
 781+ 942E C9           	ret
 782+ 942F
 783+ 942F              ; -----------------------------------------------------------------------------------
 784+ 942F              ;
 785+ 942F              ;	28/2/23
 786+ 942F              ;
 787+ 942F              ;	Pinta los disparos generados.
 788+ 942F
 789+ 942F              Extrae_foto_disparos
 790+ 942F
 791+ 942F 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 9432 7E               ld a,(hl)
 793+ 9433 A7               and a
 794+ 9434 C8               ret z
 795+ 9435
 796+ 9435 3A 93 88     	ld a,(Numero_de_disparotes)
 797+ 9438 A7           	and a
 798+ 9439 C8           	ret z
 799+ 943A ED 73 83 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 943E 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 9441
 802+ 9441 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9443 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9444 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9445
 806+ 9445 ED 73 85 88  	ld (Stack_2),sp
 807+ 9449 ED 7B 83 88  	ld sp,(Stack)
 808+ 944D
 809+ 944D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 944D
 811+ 944D 3E CD        	ld a,$cd
 812+ 944F 32 57 94     	ld (Imprime2),a
 813+ 9452 EB           	ex de,hl
 814+ 9453 22 58 94     	ld (Imprime2+1),hl
 815+ 9456 EB           	ex de,hl
 816+ 9457
 817+ 9457              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9457
 819+ 9457 00 00 00     Imprime2 db 0,0,0
 820+ 945A
 821+ 945A 3A 93 88     	ld a,(Numero_de_disparotes)
 822+ 945D 3D           	dec a
 823+ 945E 28 09        	jr z,1F
 824+ 9460 32 93 88      	ld (Numero_de_disparotes),a
 825+ 9463
 826+ 9463 ED 7B 85 88  	ld sp,(Stack_2)
 827+ 9467 18 D8        	jr 2B
 828+ 9469
 829+ 9469 AF           1 xor a
 830+ 946A 32 85 88     	ld (Stack_2),a
 831+ 946D C9           	ret
 832+ 946E
 833+ 946E              ; -----------------------------------------------------------------------------------
 834+ 946E              ;
 835+ 946E              ;	4/9/23
 836+ 946E              ;
 837+ 946E              ;	Rutina principal de pintado de Amadeus.
 838+ 946E              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 946E
 840+ 946E 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9471 7E           	ld a,(hl)
 842+ 9472 A7           	and a
 843+ 9473 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9474
 845+ 9474 3A 7E 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9477 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9478 C8           	ret z
 848+ 9479
 849+ 9479              ; -----------------------------------
 850+ 9479
 851+ 9479 ED 73 83 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 947D 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 9480
 854+ 9480 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9482 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9483 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9484
 858+ 9484 ED 73 85 88  	ld (Stack_2),sp
 859+ 9488 ED 7B 83 88  	ld sp,(Stack)
 860+ 948C
 861+ 948C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 948C
 863+ 948C 3E CD        	ld a,$cd
 864+ 948E 32 96 94     	ld (Imprime_Amadeus),a
 865+ 9491 EB           	ex de,hl
 866+ 9492 22 97 94     	ld (Imprime_Amadeus+1),hl
 867+ 9495 EB           	ex de,hl
 868+ 9496
 869+ 9496              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9496
 871+ 9496 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9499
 873+ 9499 ED 73 83 88  	ld (Stack),sp
 874+ 949D
 875+ 949D 3A 7E 88     	ld a,(Numero_de_malotes)
 876+ 94A0 3D           	dec a
 877+ 94A1 28 09        	jr z,1F
 878+ 94A3 32 7E 88      	ld (Numero_de_malotes),a
 879+ 94A6
 880+ 94A6 ED 7B 85 88  	ld sp,(Stack_2)
 881+ 94AA 18 D4        	jr 2B
 882+ 94AC
 883+ 94AC AF           1 xor a
 884+ 94AD 32 85 88     	ld (Stack_2),a
 885+ 94B0
 886+ 94B0 C9           	ret
# file closed: Draw_XOR.asm
1759  94B1              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 94B1              ;   índices de Rutinas de impresión.
   2+ 94B1
   3+ 94B1 C1 94        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 94B3 EE 94            defw Pinta_Amadeus_3x2
   5+ 94B5
   6+ 94B5 44 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 94B7 E4 95            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 94B9 98 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 94BB
  10+ 94BB 6E 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 94BD 72 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 94BF 26 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 94C1
  14+ 94C1
  15+ 94C1              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 94C1              ;
  17+ 94C1              ;   12/12/22
  18+ 94C1              ;
  19+ 94C1              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 94C1              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 94C1              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 94C1              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 94C1              ;
  24+ 94C1              ;   Modifica: DE y HL.
  25+ 94C1
  26+ 94C1 ED 73 83 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 94C5 FD F9        	ld sp,iy
  28+ 94C7 06 10            ld b,16
  29+ 94C9 D1           1 pop de
  30+ 94CA 7B               ld a,e
  31+ 94CB AE               xor (hl)
  32+ 94CC 77           	ld (hl),a
  33+ 94CD 23           	inc hl
  34+ 94CE 7A               ld a,d
  35+ 94CF AE               xor (hl)
  36+ 94D0 77           	ld (hl),a
  37+ 94D1 2B           	dec hl
  38+ 94D2 24           	inc h
  39+ 94D3 7C               ld a,h
  40+ 94D4 E6 07            and 7
  41+ 94D6 20 0A            jr nz,2F
  42+ 94D8 7D               ld a,l
  43+ 94D9 C6 20            add a,$20
  44+ 94DB 6F               ld l,a
  45+ 94DC 38 04            jr c,2F
  46+ 94DE 7C               ld a,h
  47+ 94DF D6 08            sub 8
  48+ 94E1 67               ld h,a
  49+ 94E2 7C           2 ld a,h
  50+ 94E3 FE 58            cp $58
  51+ 94E5 28 02            jr z,3F
  52+ 94E7 10 E0            djnz 1B
  53+ 94E9 ED 7B 83 88  3 ld sp,(Stack)
  54+ 94ED C9           	ret
  55+ 94EE
  56+ 94EE ED 73 83 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 94F2 FD F9        	ld sp,iy
  58+ 94F4 06 08            ld b,8
  59+ 94F6 D1           1 pop de
  60+ 94F7 7B               ld a,e
  61+ 94F8 AE               xor (hl)
  62+ 94F9 77           	ld (hl),a
  63+ 94FA 23           	inc hl
  64+ 94FB 7A               ld a,d
  65+ 94FC AE               xor (hl)
  66+ 94FD 77           	ld (hl),a
  67+ 94FE 23           	inc hl
  68+ 94FF D1           	pop de
  69+ 9500 7B               ld a,e
  70+ 9501 AE               xor (hl)
  71+ 9502 77           	ld (hl),a
  72+ 9503 2B           	dec hl
  73+ 9504 2B           	dec hl
  74+ 9505 24           	inc h
  75+ 9506 7C               ld a,h
  76+ 9507 E6 07            and 7
  77+ 9509 20 0A            jr nz,2F
  78+ 950B 7D               ld a,l
  79+ 950C C6 20            add a,$20
  80+ 950E 6F               ld l,a
  81+ 950F 38 04            jr c,2F
  82+ 9511 7C               ld a,h
  83+ 9512 D6 08            sub 8
  84+ 9514 67               ld h,a
  85+ 9515 7C           2 ld a,h
  86+ 9516 FE 58            cp $58
  87+ 9518 28 25            jr z,4F
  88+ 951A 7A               ld a,d
  89+ 951B AE               xor (hl)
  90+ 951C 77               ld (hl),a
  91+ 951D D1           	pop de
  92+ 951E 23           	inc hl
  93+ 951F 7B               ld a,e
  94+ 9520 AE               xor (hl)
  95+ 9521 77           	ld (hl),a
  96+ 9522 23           	inc hl
  97+ 9523 7A               ld a,d
  98+ 9524 AE               xor (hl)
  99+ 9525 77           	ld (hl),a
 100+ 9526 2B           	dec hl
 101+ 9527 2B           	dec hl
 102+ 9528 24           	inc h
 103+ 9529 7C               ld a,h
 104+ 952A E6 07            and 7
 105+ 952C 20 0A            jr nz,3F
 106+ 952E 7D               ld a,l
 107+ 952F C6 20            add a,$20
 108+ 9531 6F               ld l,a
 109+ 9532 38 04            jr c,3F
 110+ 9534 7C               ld a,h
 111+ 9535 D6 08            sub 8
 112+ 9537 67               ld h,a
 113+ 9538 7C           3 ld a,h
 114+ 9539 FE 58            cp $58
 115+ 953B 28 02            jr z,4F
 116+ 953D 10 B7            djnz 1B
 117+ 953F ED 7B 83 88  4 ld sp,(Stack)
 118+ 9543 C9           	ret
 119+ 9544
 120+ 9544              ; ---------------------------------------------------
 121+ 9544
 122+ 9544 ED 73 83 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9548 FD F9        	ld sp,iy
 124+ 954A
 125+ 954A              ; >>>
 126+ 954A
 127+ 954A 06 10            ld b,16
 128+ 954C D1           1 pop de
 129+ 954D 7A           	ld a,d
 130+ 954E AE           	xor (hl)
 131+ 954F 77           	ld (hl),a
 132+ 9550 24           	inc h
 133+ 9551 7C               ld a,h
 134+ 9552 E6 07            and 7
 135+ 9554 20 0C            jr nz,2F
 136+ 9556 7D               ld a,l
 137+ 9557 C6 20            add a,$20
 138+ 9559 6F               ld l,a
 139+ 955A 38 06            jr c,2F
 140+ 955C 7C               ld a,h
 141+ 955D D6 08            sub 8
 142+ 955F 67               ld h,a
 143+ 9560 18 00            jr 2F
 144+ 9562 7C           2 ld a,h
 145+ 9563 FE 58            cp $58
 146+ 9565 28 02            jr z,3F
 147+ 9567 10 E3            djnz 1B
 148+ 9569 ED 7B 83 88  3 ld sp,(Stack)
 149+ 956D C9           	ret
 150+ 956E
 151+ 956E ED 73 83 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9572 FD F9        	ld sp,iy
 153+ 9574
 154+ 9574              ; >>>
 155+ 9574
 156+ 9574 06 10            ld b,16
 157+ 9576 D1           1 pop de
 158+ 9577 7B           	ld a,e
 159+ 9578 AE           	xor (hl)
 160+ 9579 77           	ld (hl),a
 161+ 957A 24           	inc h
 162+ 957B 7C               ld a,h
 163+ 957C E6 07            and 7
 164+ 957E 20 0C            jr nz,2F
 165+ 9580 7D               ld a,l
 166+ 9581 C6 20            add a,$20
 167+ 9583 6F               ld l,a
 168+ 9584 38 06            jr c,2F
 169+ 9586 7C               ld a,h
 170+ 9587 D6 08            sub 8
 171+ 9589 67               ld h,a
 172+ 958A 18 00            jr 2F
 173+ 958C 7C           2 ld a,h
 174+ 958D FE 58            cp $58
 175+ 958F 28 02            jr z,3F
 176+ 9591 10 E3            djnz 1B
 177+ 9593 ED 7B 83 88  3 ld sp,(Stack)
 178+ 9597 C9           	ret
 179+ 9598
 180+ 9598              ; ---------------------------------------------------
 181+ 9598
 182+ 9598 ED 73 83 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 959C FD F9        	ld sp,iy
 184+ 959E 06 08            ld b,8
 185+ 95A0 D1           1 pop de
 186+ 95A1 7A           	ld a,d
 187+ 95A2 AE           	xor (hl)
 188+ 95A3 77           	ld (hl),a
 189+ 95A4 23           	inc hl
 190+ 95A5 D1           	pop de
 191+ 95A6 7B           	ld a,e
 192+ 95A7 AE           	xor (hl)
 193+ 95A8 77           	ld (hl),a
 194+ 95A9 2B           	dec hl
 195+ 95AA 24            	inc h
 196+ 95AB 7C               ld a,h
 197+ 95AC E6 07            and 7
 198+ 95AE 20 0A            jr nz,2F
 199+ 95B0 7D               ld a,l
 200+ 95B1 C6 20            add a,$20
 201+ 95B3 6F               ld l,a
 202+ 95B4 38 04            jr c,2F
 203+ 95B6 7C               ld a,h
 204+ 95B7 D6 08            sub 8
 205+ 95B9 67               ld h,a
 206+ 95BA 7C           2 ld a,h
 207+ 95BB FE 58            cp $58
 208+ 95BD 28 20            jr z,4F
 209+ 95BF D1               pop de
 210+ 95C0 7B           	ld a,e
 211+ 95C1 AE           	xor (hl)
 212+ 95C2 77           	ld (hl),a
 213+ 95C3 23           	inc hl
 214+ 95C4 7A           	ld a,d
 215+ 95C5 AE           	xor (hl)
 216+ 95C6 77           	ld (hl),a
 217+ 95C7 2B           	dec hl
 218+ 95C8 24           	inc h
 219+ 95C9 7C               ld a,h
 220+ 95CA E6 07            and 7
 221+ 95CC 20 0A            jr nz,3F
 222+ 95CE 7D               ld a,l
 223+ 95CF C6 20            add a,$20
 224+ 95D1 6F               ld l,a
 225+ 95D2 38 04            jr c,3F
 226+ 95D4 7C               ld a,h
 227+ 95D5 D6 08            sub 8
 228+ 95D7 67               ld h,a
 229+ 95D8 7C           3 ld a,h
 230+ 95D9 FE 58            cp $58
 231+ 95DB 28 02            jr z,4F
 232+ 95DD 10 C1            djnz 1B
 233+ 95DF ED 7B 83 88  4 ld sp,(Stack)
 234+ 95E3 C9           	ret
 235+ 95E4
 236+ 95E4 ED 73 83 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 95E8 FD F9        	ld sp,iy
 238+ 95EA 06 08            ld b,8
 239+ 95EC D1           1 pop de
 240+ 95ED D1           	pop de
 241+ 95EE 7B           	ld a,e
 242+ 95EF AE           	xor (hl)
 243+ 95F0 77           	ld (hl),a
 244+ 95F1 24            	inc h
 245+ 95F2 7C               ld a,h
 246+ 95F3 E6 07            and 7
 247+ 95F5 20 0A            jr nz,2F
 248+ 95F7 7D               ld a,l
 249+ 95F8 C6 20            add a,$20
 250+ 95FA 6F               ld l,a
 251+ 95FB 38 04            jr c,2F
 252+ 95FD 7C               ld a,h
 253+ 95FE D6 08            sub 8
 254+ 9600 67               ld h,a
 255+ 9601 7C           2 ld a,h
 256+ 9602 FE 58            cp $58
 257+ 9604 28 1B            jr z,4F
 258+ 9606 D1               pop de
 259+ 9607 7A           	ld a,d
 260+ 9608 AE           	xor (hl)
 261+ 9609 77           	ld (hl),a
 262+ 960A 24           	inc h
 263+ 960B 7C               ld a,h
 264+ 960C E6 07            and 7
 265+ 960E 20 0A            jr nz,3F
 266+ 9610 7D               ld a,l
 267+ 9611 C6 20            add a,$20
 268+ 9613 6F               ld l,a
 269+ 9614 38 04            jr c,3F
 270+ 9616 7C               ld a,h
 271+ 9617 D6 08            sub 8
 272+ 9619 67               ld h,a
 273+ 961A 7C           3 ld a,h
 274+ 961B FE 58            cp $58
 275+ 961D 28 02            jr z,4F
 276+ 961F 10 CB            djnz 1B
 277+ 9621 ED 7B 83 88  4 ld sp,(Stack)
 278+ 9625 C9           	ret
 279+ 9626
 280+ 9626 ED 73 83 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 962A FD F9        	ld sp,iy
 282+ 962C 06 08            ld b,8
 283+ 962E D1           1 pop de
 284+ 962F 7B           	ld a,e
 285+ 9630 AE           	xor (hl)
 286+ 9631 77           	ld (hl),a
 287+ 9632 23           	inc hl
 288+ 9633 7A           	ld a,d
 289+ 9634 AE           	xor (hl)
 290+ 9635 77           	ld (hl),a
 291+ 9636 2B           	dec hl
 292+ 9637 24             	inc h
 293+ 9638 7C               ld a,h
 294+ 9639 E6 07            and 7
 295+ 963B 20 0A            jr nz,2F
 296+ 963D 7D               ld a,l
 297+ 963E C6 20            add a,$20
 298+ 9640 6F               ld l,a
 299+ 9641 38 04            jr c,2F
 300+ 9643 7C               ld a,h
 301+ 9644 D6 08            sub 8
 302+ 9646 67               ld h,a
 303+ 9647 7C           2 ld a,h
 304+ 9648 FE 58            cp $58
 305+ 964A 28 21            jr z,4F
 306+ 964C D1               pop de
 307+ 964D 7A           	ld a,d
 308+ 964E AE           	xor (hl)
 309+ 964F 77           	ld (hl),a
 310+ 9650 23           	inc hl
 311+ 9651 D1               pop de
 312+ 9652 7B           	ld a,e
 313+ 9653 AE           	xor (hl)
 314+ 9654 77           	ld (hl),a
 315+ 9655 2B           	dec hl
 316+ 9656 24           	inc h
 317+ 9657 7C               ld a,h
 318+ 9658 E6 07            and 7
 319+ 965A 20 0A            jr nz,3F
 320+ 965C 7D               ld a,l
 321+ 965D C6 20            add a,$20
 322+ 965F 6F               ld l,a
 323+ 9660 38 04            jr c,3F
 324+ 9662 7C               ld a,h
 325+ 9663 D6 08            sub 8
 326+ 9665 67               ld h,a
 327+ 9666 7C           3 ld a,h
 328+ 9667 FE 58            cp $58
 329+ 9669 28 02            jr z,4F
 330+ 966B 10 C1            djnz 1B
 331+ 966D ED 7B 83 88  4 ld sp,(Stack)
 332+ 9671 C9           	ret
 333+ 9672
 334+ 9672 ED 73 83 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9676 FD F9        	ld sp,iy
 336+ 9678 06 08            ld b,8
 337+ 967A D1           1 pop de
 338+ 967B 7B           	ld a,e
 339+ 967C AE           	xor (hl)
 340+ 967D 77           	ld (hl),a
 341+ 967E 24            	inc h
 342+ 967F 7C               ld a,h
 343+ 9680 E6 07            and 7
 344+ 9682 20 0A            jr nz,2F
 345+ 9684 7D               ld a,l
 346+ 9685 C6 20            add a,$20
 347+ 9687 6F               ld l,a
 348+ 9688 38 04            jr c,2F
 349+ 968A 7C               ld a,h
 350+ 968B D6 08            sub 8
 351+ 968D 67               ld h,a
 352+ 968E 7C           2 ld a,h
 353+ 968F FE 58            cp $58
 354+ 9691 28 1C            jr z,4F
 355+ 9693 D1               pop de
 356+ 9694 7A           	ld a,d
 357+ 9695 AE           	xor (hl)
 358+ 9696 77           	ld (hl),a
 359+ 9697 24           	inc h
 360+ 9698 7C               ld a,h
 361+ 9699 E6 07            and 7
 362+ 969B 20 0A            jr nz,3F
 363+ 969D 7D               ld a,l
 364+ 969E C6 20            add a,$20
 365+ 96A0 6F               ld l,a
 366+ 96A1 38 04            jr c,3F
 367+ 96A3 7C               ld a,h
 368+ 96A4 D6 08            sub 8
 369+ 96A6 67               ld h,a
 370+ 96A7 7C           3 ld a,h
 371+ 96A8 FE 58            cp $58
 372+ 96AA 28 03            jr z,4F
 373+ 96AC D1               pop de
 374+ 96AD 10 CB            djnz 1B
 375+ 96AF ED 7B 83 88  4 ld sp,(Stack)
 376+ 96B3 C9           	ret
 377+ 96B4
 378+ 96B4              ; ---------------------------------------------------
 379+ 96B4              ;
 380+ 96B4              ;   27/02/23
 381+ 96B4              ;
 382+ 96B4              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 96B4              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 96B4              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 96B4
 386+ 96B4 ED 73 83 88  Pinta_Disparo ld (Stack),sp
 387+ 96B8 FD F9            ld sp,iy
 388+ 96BA 06 03            ld b,3
 389+ 96BC D1           1 pop de
 390+ 96BD 7B               ld a,e
 391+ 96BE AE               xor (hl)
 392+ 96BF 77               ld (hl),a
 393+ 96C0 23               inc hl
 394+ 96C1 7A               ld a,d
 395+ 96C2 AE               xor (hl)
 396+ 96C3 77               ld (hl),a
 397+ 96C4 2B               dec hl
 398+ 96C5
 399+ 96C5 24               inc h
 400+ 96C6 7C               ld a,h
 401+ 96C7 E6 07            and 7
 402+ 96C9 20 0A            jr nz,2F
 403+ 96CB 7D               ld a,l
 404+ 96CC C6 20            add a,$20
 405+ 96CE 6F               ld l,a
 406+ 96CF 38 04            jr c,2F
 407+ 96D1 7C               ld a,h
 408+ 96D2 D6 08            sub 8
 409+ 96D4 67               ld h,a
 410+ 96D5 7C           2 ld a,h
 411+ 96D6 FE 58            cp $58
 412+ 96D8 28 02            jr z,3F
 413+ 96DA
 414+ 96DA 10 E0            djnz 1B
 415+ 96DC ED 7B 83 88  3 ld sp,(Stack)
 416+ 96E0 C9               ret
 417+ 96E1
# file closed: Rutinas_de_impresion_sprites.asm
1760  96E1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 96E1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 96E1              ;
   3+ 96E1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 96E1              ;
   5+ 96E1              ; *****************************************************************************************************************************************************************************************
   6+ 96E1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 96E1
   8+ 96E1 7C           calcula_tercio ld a,h
   9+ 96E2 E6 18        	and $18
  10+ 96E4 CB 2F        	sra a
  11+ 96E6 CB 2F        	sra a
  12+ 96E8 CB 2F        	sra a
  13+ 96EA C9           	ret
  14+ 96EB
# file closed: calcula_tercio.asm
1761  96EB              	include "Cls.asm"
# file opened: Cls.asm
   1+ 96EB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 96EB              ;
   3+ 96EB              ;
   4+ 96EB              ;	CLS.
   5+ 96EB              ;
   6+ 96EB              ;	Limpia la pantalla y define sus atributos.
   7+ 96EB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 96EB              ;
   9+ 96EB              ;	COLORES: 0 ..... NEGRO
  10+ 96EB              ;    		 1 ..... AZUL
  11+ 96EB              ; 			 2 ..... ROJO
  12+ 96EB              ;			 3 ..... MAGENTA
  13+ 96EB              ; 			 4 ..... VERDE
  14+ 96EB              ; 			 5 ..... CIAN
  15+ 96EB              ;			 6 ..... AMARILLO
  16+ 96EB              ; 			 7 ..... BLANCO
  17+ 96EB              ;
  18+ 96EB              ;	INPUT: A contiene los atributos de pantalla.
  19+ 96EB              ;
  20+ 96EB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 96EB
  22+ 96EB
  23+ 96EB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 96EE 11 01 40     	LD DE,$4001
  25+ 96F1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 96F4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 96F6 ED B0        	LDIR
  28+ 96F8 01 FF 02     	LD BC,767
  29+ 96FB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 96FC ED B0        	LDIR
  31+ 96FE C9           	ret
  32+ 96FF
# file closed: Cls.asm
1762  96FF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 96FF
   2+ 96FF              ; ******************************************************************************************************************************************************************************************
   3+ 96FF              ;
   4+ 96FF              ;   20/05/23
   5+ 96FF              ;
   6+ 96FF              ;	Recompone_posicion_inicio
   7+ 96FF              ;
   8+ 96FF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 96FF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 96FF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 96FF              ;	_ a una u otra rutina.
  12+ 96FF
  13+ 96FF              Recompone_posicion_inicio
  14+ 96FF
  15+ 96FF 2A 43 88     	ld hl,(Posicion_inicio)
  16+ 9702 7D           	ld a,l
  17+ 9703 E6 1F        	and $1f
  18+ 9705 28 16        	jr z,1F
  19+ 9707
  20+ 9707 FE 1F        	cp $1f
  21+ 9709 28 0D        	jr z,3F
  22+ 970B
  23+ 970B 21 58 88     	ld hl,Ctrl_2
  24+ 970E CB C6        	set 0,(hl)
  25+ 9710 2A 35 88     	ld hl,(Puntero_objeto)
  26+ 9713 22 73 88     	ld (Repone_puntero_objeto),hl
  27+ 9716 18 08        	jr 2F
  28+ 9718
  29+ 9718 CD C6 98     3 call Mov_left
  30+ 971B 18 03        	jr 2F
  31+ 971D
  32+ 971D CD A3 97     1 call Mov_right
  33+ 9720 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9723 22 35 88     	ld (Puntero_objeto),hl
  35+ 9726 C9           	ret
  36+ 9727
  37+ 9727              ; ******************************************************************************************************************************************************************************************
  38+ 9727              ;
  39+ 9727              ;   27/05/23
  40+ 9727              ;
  41+ 9727              ;	Mov_down
  42+ 9727              ;
  43+ 9727              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9727              ;
  45+ 9727              ;
  46+ 9727              Mov_down
  47+ 9727
  48+ 9727 CD 91 97     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 972A              ;																	; _ repone (Puntero_objeto).
  50+ 972A 21 53 88     	ld hl,Ctrl_0
  51+ 972D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 972F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 972F              ; 																	; _ en el caso de que no lo haya.
  54+ 972F 3A 5D 88     	ld a,(Vel_down)
  55+ 9732 47           	ld b,a
  56+ 9733 2A 33 88         ld hl,(Posicion_actual)
  57+ 9736 CD E1 96     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9739 E6 02        	and 2
  59+ 973B 28 17        	jr z,1F
  60+ 973D
  61+ 973D              ; Nos encontramos en el último tercio de pantalla.
  62+ 973D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 973D
  64+ 973D 7C           	ld a,h
  65+ 973E FE 57        	cp $57
  66+ 9740 20 12        	jr nz,1F
  67+ 9742
  68+ 9742 7D           	ld a,l
  69+ 9743 C6 20        	add $20
  70+ 9745 30 0D        	jr nc,1F
  71+ 9747
  72+ 9747              ; ------------------------------
  73+ 9747              ;
  74+ 9747              ;	12/01/24
  75+ 9747
  76+ 9747              ;	call Reaparece_arriba
  77+ 9747 CD 53 9A     	call Reinicio
  78+ 974A
  79+ 974A              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 974A
  81+ 974A 3A 91 88     	ld a,(Ctrl_3)
  82+ 974D CB CF        	set 1,a
  83+ 974F 32 91 88     	ld (Ctrl_3),a
  84+ 9752
  85+ 9752 18 08        	jr 3F
  86+ 9754              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9754              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9754              ; ------------------------------
  89+ 9754
  90+ 9754 CD CE 93     1 call NextScan
  91+ 9757 22 33 88     	ld (Posicion_actual),hl
  92+ 975A 10 DA            djnz 2B
  93+ 975C CD 79 9A     3 call Genera_coordenadas
  94+ 975F C9           	ret
  95+ 9760
  96+ 9760              ; ******************************************************************************************************************************************************************************************
  97+ 9760              ;
  98+ 9760              ;   27/05/23
  99+ 9760              ;
 100+ 9760              ;	Mov_up
 101+ 9760              ;
 102+ 9760              ; 	Mueve el Sprite hacia arriba.
 103+ 9760              ;
 104+ 9760              ;
 105+ 9760              Mov_up
 106+ 9760
 107+ 9760 CD 91 97     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9763              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9763 21 53 88     	ld hl,Ctrl_0
 110+ 9766 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9768              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9768              ; 																		; _ en el caso de que no lo haya.
 113+ 9768 3A 5C 88     	ld a,(Vel_up)
 114+ 976B 47           	ld b,a
 115+ 976C 2A 33 88     	ld hl,(Posicion_actual)
 116+ 976F CD E1 96     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9772 A7           	and a
 118+ 9773 20 10        	jr nz,1F
 119+ 9775
 120+ 9775              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9775              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9775
 123+ 9775 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9776 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9778 20 0B            jr nz,1F
 126+ 977A 7D               ld a,l
 127+ 977B D6 20            sub $20
 128+ 977D 30 06            jr nc,1F
 129+ 977F 25               dec h
 130+ 9780
 131+ 9780              ; -----------------------------
 132+ 9780 CD 34 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9783              ;	call Reinicio
 134+ 9783              ; -----------------------------
 135+ 9783
 136+ 9783 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9785 CD DD 93     1 call PreviousScan
 138+ 9788 22 33 88     	ld (Posicion_actual),hl
 139+ 978B 10 E2            djnz 3B
 140+ 978D CD 79 9A     2 call Genera_coordenadas
 141+ 9790 C9           	ret
 142+ 9791
 143+ 9791              ; -----------------------------
 144+ 9791              ;
 145+ 9791              ;	27/5/23
 146+ 9791              ;
 147+ 9791              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9791              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9791              ;
 150+ 9791              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9791              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9791              ;
 153+ 9791              ;	Modifica: A y (Puntero_objeto).
 154+ 9791
 155+ 9791 3A 58 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9794 CB 47        	bit 0,a
 157+ 9796 C8           	ret z
 158+ 9797 CB 87        	res 0,a
 159+ 9799 32 58 88     	ld (Ctrl_2),a
 160+ 979C 2A 73 88     	ld hl,(Repone_puntero_objeto)
 161+ 979F 22 35 88     	ld (Puntero_objeto),hl
 162+ 97A2 C9           	ret
 163+ 97A3
 164+ 97A3              ; ******************************************************************************************************************************************************************************************
 165+ 97A3              ;
 166+ 97A3              ;	19/10/22
 167+ 97A3              ;
 168+ 97A3              ;	Mov_right.
 169+ 97A3              ;
 170+ 97A3              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 97A3              ;
 172+ 97A3
 173+ 97A3 3A 53 88     Mov_right ld a,(Ctrl_0)
 174+ 97A6 CB 77        	bit 6,a
 175+ 97A8 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 97AA
 177+ 97AA CD E2 99     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 97AD C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 97AE
 180+ 97AE 21 53 88     	ld hl,Ctrl_0
 181+ 97B1 CB E6        	set 4,(hl)
 182+ 97B3 18 52        	jr 8F
 183+ 97B5
 184+ 97B5 21 53 88     10 ld hl,Ctrl_0
 185+ 97B8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 97BA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 97BA              ; 																	; _ en el caso de que no lo haya.
 188+ 97BA 3A 37 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 97BD FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 97BF 20 46        	jr nz,8F
 191+ 97C1
 192+ 97C1 3A 39 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 97C4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 97C5 28 40        	jr z,8F
 195+ 97C7
 196+ 97C7              ; ---------- ---------- ----------
 197+ 97C7              ;
 198+ 97C7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 97C7
 200+ 97C7 3A 5B 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 97CA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 97CC 28 11        	jr z,1F
 203+ 97CE 38 06        	jr c,6F
 204+ 97D0 FE 04        	cp 4
 205+ 97D2 28 14        	jr z,7F
 206+ 97D4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 97D6
 208+ 97D6              ; ---------- ---------- ----------
 209+ 97D6              ;
 210+ 97D6              ; Perfiles de velocidad
 211+ 97D6              ;
 212+ 97D6
 213+ 97D6 3A 39 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 97D9 FE FE        	cp $fe
 215+ 97DB 20 2A        	jr nz,8F
 216+ 97DD 18 10        	jr 3F
 217+ 97DF 3A 39 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 97E2 FE FD        	cp $fd
 219+ 97E4 20 21        	jr nz,8F
 220+ 97E6 18 07        	jr 3F
 221+ 97E8 3A 39 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 97EB FE FB        	cp $fb
 223+ 97ED 20 18        	jr nz,8F
 224+ 97EF
 225+ 97EF              ; ---------- ---------- ----------
 226+ 97EF
 227+ 97EF              3
 228+ 97EF CD 22 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 97F2              ;	call Reinicio
 230+ 97F2
 231+ 97F2              ; ---------- ---------- ----------
 232+ 97F2              ;
 233+ 97F2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 97F2
 235+ 97F2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 97F4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 97F5 CD 0E 98     	call DESPLZ_DER
 238+ 97F8 C1           	pop bc
 239+ 97F9 10 F9        	djnz 5B
 240+ 97FB 2A 33 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 97FE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 97FF 22 33 88     	ld (Posicion_actual),hl
 243+ 9802 CD 79 9A     	call Genera_coordenadas
 244+ 9805 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9807
 246+ 9807              ; ---------- ---------- ----------
 247+ 9807
 248+ 9807 2A 33 88     8 ld hl,(Posicion_actual)
 249+ 980A CD 0E 98     	call DESPLZ_DER
 250+ 980D C9           2 ret
 251+ 980E
 252+ 980E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 980E              ;
 254+ 980E              ;	22/9/22
 255+ 980E              ;
 256+ 980E
 257+ 980E CD 1D 98     DESPLZ_DER call Desplaza_derecha
 258+ 9811 CD 69 98         call modifica_parametros_1er_DESPLZ_2
 259+ 9814 CD 92 98         call Ciclo_completo
 260+ 9817 21 53 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 981A CB FE        	set 7,(hl)
 262+ 981C C9           	ret
 263+ 981D
 264+ 981D              ; ******************************************************************************************************************************************************************************************
 265+ 981D              ;	15/02/23
 266+ 981D              ;
 267+ 981D
 268+ 981D 3A 5B 88     Desplaza_derecha ld a,(Vel_right)
 269+ 9820 47           	ld b,a
 270+ 9821 2A 3F 88     	ld hl,(Puntero_DESPLZ_der)
 271+ 9824 23           1 inc hl
 272+ 9825 23           	inc hl
 273+ 9826 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9828 22 3F 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 982B CD 93 8A     	call Extrae_address
 276+ 982E 22 35 88     	ld (Puntero_objeto),hl
 277+ 9831
 278+ 9831              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9831
 280+ 9831              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9831              ; Cuántos movimientos hemos hecho ??
 282+ 9831              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9831
 284+ 9831 2A 3B 88     7 ld hl,(Indice_Sprite_der)
 285+ 9834 EB           	ex de,hl
 286+ 9835 A7           	and a
 287+ 9836 ED 52        	sbc hl,de
 288+ 9838 CB 3D        	srl l
 289+ 983A 3E 08        6 ld a,8
 290+ 983C 95           	sub l
 291+ 983D 30 1E        	jr nc,3F
 292+ 983F
 293+ 983F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 983F              ; B="0".
 295+ 983F
 296+ 983F 04           4 inc b
 297+ 9840 3C           	inc a
 298+ 9841 20 FC        	jr nz,4B
 299+ 9843 78           	ld a,b
 300+ 9844 08           	ex af,af
 301+ 9845 2A 3B 88     	ld hl,(Indice_Sprite_der)
 302+ 9848 23           5 inc hl
 303+ 9849 23           	inc hl
 304+ 984A 10 FC        	djnz 5B
 305+ 984C 22 3F 88     	ld (Puntero_DESPLZ_der),hl
 306+ 984F CD 93 8A     	call Extrae_address
 307+ 9852 22 35 88     	ld (Puntero_objeto),hl
 308+ 9855
 309+ 9855              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9855              ; _(Posicion_actual).
 311+ 9855
 312+ 9855 21 33 88     	ld hl,Posicion_actual
 313+ 9858 34           	inc (hl)
 314+ 9859 08               ex af,af
 315+ 985A 6F           	ld l,a
 316+ 985B 18 DD        	jr 6B
 317+ 985D
 318+ 985D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 985D
 320+ 985D 47           3 ld b,a
 321+ 985E 2A 3D 88     	ld hl,(Indice_Sprite_izq)
 322+ 9861 23           2 inc hl
 323+ 9862 23           	inc hl
 324+ 9863 10 FC        	djnz 2B
 325+ 9865 22 41 88     	ld (Puntero_DESPLZ_izq),hl
 326+ 9868 C9           8 ret
 327+ 9869
 328+ 9869              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9869              ;
 330+ 9869              ;	24/7/22
 331+ 9869              ;
 332+ 9869              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9869              ;
 334+ 9869              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9869              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9869              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9869
 338+ 9869 3A 39 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 986C A7           	and a
 340+ 986D 20 1F        	jr nz,1F
 341+ 986F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9871 32 39 88         ld (CTRL_DESPLZ),a
 343+ 9874
 344+ 9874 21 32 88     	ld hl,Columns
 345+ 9877 34           	inc (hl)
 346+ 9878 3A 45 88     	ld a,(Cuad_objeto)
 347+ 987B E6 01        	and 1
 348+ 987D 28 0F        	jr z,1F
 349+ 987F 2A 33 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9882 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9883 22 33 88     	ld (Posicion_actual),hl
 352+ 9886 CD 79 9A     	call Genera_coordenadas
 353+ 9889 CD EE 99     	call Inc_CTRL_DESPLZ
 354+ 988C 18 03        	jr 2F
 355+ 988E CD EE 99     1 call Inc_CTRL_DESPLZ
 356+ 9891 C9           2 ret
 357+ 9892
 358+ 9892              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9892              ;
 360+ 9892              ;	24/7/22
 361+ 9892              ;
 362+ 9892              ;	Ciclo_completo.
 363+ 9892              ;
 364+ 9892              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9892              ;
 366+ 9892              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9892              ; 	Decrementamos (Columns).
 368+ 9892              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9892              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9892
 371+ 9892
 372+ 9892 3A 39 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9895 FE FF        	cp $ff
 374+ 9897 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9899 E6 F0        	and $f0
 376+ 989B 20 28        	jr nz,3F
 377+ 989D
 378+ 989D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 989D
 380+ 989D 3A 39 88     	ld a,(CTRL_DESPLZ)
 381+ 98A0 47           	ld b,a
 382+ 98A1 3E F8        	ld a,$f8
 383+ 98A3 80           	add b
 384+ 98A4 32 39 88     	ld (CTRL_DESPLZ),a
 385+ 98A7 18 1C        	jr 3F
 386+ 98A9 21 32 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 98AC 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 98AD AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 98AE 32 39 88     	ld (CTRL_DESPLZ),a
 390+ 98B1 3A 45 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 98B4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 98B6 20 0A        	jr nz,2F
 393+ 98B8 2A 33 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 98BB 23           	inc hl
 395+ 98BC 22 33 88     	ld (Posicion_actual),hl
 396+ 98BF CD 79 9A     	call Genera_coordenadas
 397+ 98C2
 398+ 98C2              ; Inicia el puntero de Sprite.
 399+ 98C2
 400+ 98C2 CD A8 8A     2 call Inicia_puntero_objeto_der
 401+ 98C5 C9           3 ret
 402+ 98C6
 403+ 98C6              ; ******************************************************************************************************************************************************************************************
 404+ 98C6              ;
 405+ 98C6              ;	15/02/23
 406+ 98C6              ;
 407+ 98C6              ;	Mov_left.
 408+ 98C6              ;
 409+ 98C6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 98C6              ;
 411+ 98C6              Mov_left
 412+ 98C6
 413+ 98C6 21 53 88     	ld hl,Ctrl_0
 414+ 98C9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 98CB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 98CB              ; 																	; _ en el caso de que no lo haya.
 417+ 98CB 3A 53 88     	ld a,(Ctrl_0)
 418+ 98CE CB 77        	bit 6,a
 419+ 98D0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 98D2
 421+ 98D2 CD E8 99     	call Stop_Amadeus_left
 422+ 98D5 C8           	ret z
 423+ 98D6 20 4A        	jr nz,8F
 424+ 98D8
 425+ 98D8 3A 37 88     11 ld a,(Coordenada_X)
 426+ 98DB A7           	and a
 427+ 98DC 20 44        	jr nz,8F
 428+ 98DE
 429+ 98DE 3A 39 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 98E1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 98E2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 98E4
 433+ 98E4              ; ---------- ---------- ----------
 434+ 98E4
 435+ 98E4 3A 5A 88     	ld a,(Vel_left)
 436+ 98E7 FE 02        	cp 2
 437+ 98E9 28 0F        	jr z,1F
 438+ 98EB 38 04        	jr c,6F
 439+ 98ED FE 04        	cp 4
 440+ 98EF 28 12        	jr z,7F
 441+ 98F1
 442+ 98F1              ; ---------- ---------- ----------
 443+ 98F1
 444+ 98F1 3A 39 88     6 ld a,(CTRL_DESPLZ)
 445+ 98F4 FE F8        	cp $f8
 446+ 98F6 20 2A        	jr nz,8F
 447+ 98F8 18 10        	jr 4F
 448+ 98FA 3A 39 88     1 ld a,(CTRL_DESPLZ)
 449+ 98FD FE F9        	cp $f9
 450+ 98FF 20 21        	jr nz,8F
 451+ 9901 18 07        	jr 4F
 452+ 9903 3A 39 88     7 ld a,(CTRL_DESPLZ)
 453+ 9906 FE FB        	cp $fb
 454+ 9908 20 18        	jr nz,8F
 455+ 990A
 456+ 990A              ; ---------- ---------- ----------
 457+ 990A
 458+ 990A              4
 459+ 990A CD 10 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 990D              ;	call Reinicio
 461+ 990D
 462+ 990D              ; ---------- ---------- ----------
 463+ 990D
 464+ 990D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 990F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9910
 467+ 9910              ;	ld hl,(Indice_Sprite_izq)
 468+ 9910              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9910
 470+ 9910 CD 29 99     	call DESPLZ_IZQ
 471+ 9913 C1           	pop bc
 472+ 9914 10 F9        	djnz 5B
 473+ 9916 2A 33 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9919 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 991A 22 33 88     	ld (Posicion_actual),hl
 476+ 991D CD 79 9A     	call Genera_coordenadas
 477+ 9920 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9922
 479+ 9922              ; ---------- ---------- ----------
 480+ 9922
 481+ 9922              ; Movemos, no hay recolocación.
 482+ 9922
 483+ 9922 2A 33 88     8 ld hl,(Posicion_actual)
 484+ 9925 CD 29 99     	call DESPLZ_IZQ
 485+ 9928 C9           2 ret
 486+ 9929
 487+ 9929              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9929              ;
 489+ 9929              ;	22/9/22
 490+ 9929
 491+ 9929              DESPLZ_IZQ
 492+ 9929
 493+ 9929 CD 38 99     	call Desplaza_izquierda
 494+ 992C CD 84 99         call modifica_parametros_1er_DESPLZ
 495+ 992F CD AC 99     	call Ciclo_completo_2
 496+ 9932 21 53 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9935 CB BE        	res 7,(hl)
 498+ 9937 C9           	ret
 499+ 9938
 500+ 9938              Desplaza_izquierda
 501+ 9938
 502+ 9938 3A 5A 88     	ld a,(Vel_left)
 503+ 993B 47           	ld b,a
 504+ 993C 2A 41 88     	ld hl,(Puntero_DESPLZ_izq)
 505+ 993F 23           1 inc hl
 506+ 9940 23           	inc hl
 507+ 9941 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9943 22 41 88     	ld (Puntero_DESPLZ_izq),hl
 509+ 9946 CD 93 8A     	call Extrae_address
 510+ 9949 22 35 88     	ld (Puntero_objeto),hl
 511+ 994C
 512+ 994C              ; Modifica (Puntero_DESPLZ_der).
 513+ 994C
 514+ 994C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 994C              ; Cuántos movimientos hemos hecho ??
 516+ 994C              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 994C
 518+ 994C 2A 3D 88     7 ld hl,(Indice_Sprite_izq)
 519+ 994F EB           	ex de,hl
 520+ 9950 A7           	and a
 521+ 9951 ED 52        	sbc hl,de
 522+ 9953 CB 3D        	srl l
 523+ 9955 3E 08        6 ld a,8
 524+ 9957 95           	sub l
 525+ 9958 30 1E        	jr nc,3F
 526+ 995A
 527+ 995A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 995A              ; B="0".
 529+ 995A
 530+ 995A 04           4 inc b
 531+ 995B 3C           	inc a
 532+ 995C 20 FC        	jr nz,4B
 533+ 995E 78           	ld a,b
 534+ 995F 08           	ex af,af
 535+ 9960 2A 3D 88     	ld hl,(Indice_Sprite_izq)
 536+ 9963 23           5 inc hl
 537+ 9964 23           	inc hl
 538+ 9965 10 FC        	djnz 5B
 539+ 9967 22 41 88     	ld (Puntero_DESPLZ_izq),hl
 540+ 996A CD 93 8A     	call Extrae_address
 541+ 996D 22 35 88     	ld (Puntero_objeto),hl
 542+ 9970
 543+ 9970              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9970              ; _(Posicion_actual).
 545+ 9970
 546+ 9970 21 33 88     	ld hl,Posicion_actual
 547+ 9973 35           	dec (hl)
 548+ 9974 08           	ex af,af
 549+ 9975 6F           	ld l,a
 550+ 9976 18 DD        	jr 6B
 551+ 9978
 552+ 9978              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9978
 554+ 9978 47           3 ld b,a
 555+ 9979 2A 3B 88     	ld hl,(Indice_Sprite_der)
 556+ 997C 23           2 inc hl
 557+ 997D 23           	inc hl
 558+ 997E 10 FC        	djnz 2B
 559+ 9980 22 3F 88     	ld (Puntero_DESPLZ_der),hl
 560+ 9983 C9           8 ret
 561+ 9984
 562+ 9984              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9984              ;
 564+ 9984              ;	modifica_parametros_1er_DESPLZ
 565+ 9984              ;
 566+ 9984              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9984              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9984              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9984
 570+ 9984 3A 39 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9987 A7           	and a
 572+ 9988 20 1E        	jr nz,1F
 573+ 998A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 998B 32 39 88         ld (CTRL_DESPLZ),a
 575+ 998E 21 32 88     	ld hl,Columns
 576+ 9991 34           	inc (hl)
 577+ 9992 3A 45 88     	ld a,(Cuad_objeto)
 578+ 9995 E6 01        	and 1
 579+ 9997 20 0F        	jr nz,1F
 580+ 9999 2A 33 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 999C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 999D 22 33 88     	ld (Posicion_actual),hl
 583+ 99A0 CD 79 9A     	call Genera_coordenadas
 584+ 99A3 CD FF 99     	call Dec_CTRL_DESPLZ
 585+ 99A6 18 03        	jr 2F
 586+ 99A8 CD FF 99     1 call Dec_CTRL_DESPLZ
 587+ 99AB C9           2 ret
 588+ 99AC
 589+ 99AC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 99AC
 591+ 99AC 3A 39 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 99AF FE F7        	cp $f7
 593+ 99B1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 99B3 30 2C        	jr nc,3F
 595+ 99B5
 596+ 99B5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 99B5
 598+ 99B5 06 00        	ld b,0
 599+ 99B7 04           4 inc b
 600+ 99B8 3C           	inc a
 601+ 99B9 FE F7        	cp $f7
 602+ 99BB 20 FA        	jr nz,4B
 603+ 99BD 3E FF        	ld a,$ff
 604+ 99BF 90           	sub b
 605+ 99C0 32 39 88     	ld (CTRL_DESPLZ),a
 606+ 99C3 18 1C        	jr 3F
 607+ 99C5
 608+ 99C5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 99C5
 610+ 99C5 21 32 88     1 ld hl,Columns
 611+ 99C8 35           	dec (hl)
 612+ 99C9 AF           	xor a
 613+ 99CA 32 39 88     	ld (CTRL_DESPLZ),a
 614+ 99CD 3A 45 88     	ld a,(Cuad_objeto)
 615+ 99D0 E6 01        	and 1
 616+ 99D2 28 0A        	jr z,2F
 617+ 99D4 2A 33 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 99D7 2B           	dec hl
 619+ 99D8 22 33 88     	ld (Posicion_actual),hl
 620+ 99DB CD 79 9A     	call Genera_coordenadas
 621+ 99DE
 622+ 99DE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 99DE
 624+ 99DE CD BB 8A     2 call Inicia_puntero_objeto_izq
 625+ 99E1 C9           3 ret
 626+ 99E2
 627+ 99E2              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 99E2              ;
 629+ 99E2              ;	19/10/22
 630+ 99E2              ;
 631+ 99E2              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 99E2              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 99E2
 634+ 99E2 3A 37 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 99E5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 99E7 C9           	ret
 637+ 99E8
 638+ 99E8              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 99E8              ;
 640+ 99E8              ;	19/10/22
 641+ 99E8              ;
 642+ 99E8              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 99E8              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 99E8
 645+ 99E8 3A 37 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 99EB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 99ED C9           	ret
 648+ 99EE
 649+ 99EE              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 99EE              ;
 651+ 99EE              ;	24/7/22
 652+ 99EE              ;
 653+ 99EE              ;	Inc_CTRL_DESPLZ
 654+ 99EE              ;
 655+ 99EE              ;
 656+ 99EE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 99EE
 658+ 99EE 21 39 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 99F1 3A 5B 88     	ld a,(Vel_right)
 660+ 99F4 A7           	and a
 661+ 99F5 28 06        	jr z,1F
 662+ 99F7 47           	ld b,a
 663+ 99F8 34           3 inc (hl)
 664+ 99F9 10 FD        	djnz 3B
 665+ 99FB 18 01        	jr 2F
 666+ 99FD 34           1 inc (hl)
 667+ 99FE C9           2 ret
 668+ 99FF
 669+ 99FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 99FF              ;
 671+ 99FF              ;	5/2/23
 672+ 99FF              ;
 673+ 99FF              ;	Dec_CTRL_DESPLZ
 674+ 99FF              ;
 675+ 99FF              ;
 676+ 99FF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 99FF
 678+ 99FF 21 39 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9A02 3A 5A 88     	ld a,(Vel_left)
 680+ 9A05 A7           	and a
 681+ 9A06 28 06        	jr z,1F
 682+ 9A08 47           	ld b,a
 683+ 9A09 35           3 dec (hl)
 684+ 9A0A 10 FD        	djnz 3B
 685+ 9A0C 18 01        	jr 2F
 686+ 9A0E 35           1 dec (hl)
 687+ 9A0F C9           2 ret
 688+ 9A10
 689+ 9A10              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9A10
 691+ 9A10 2A 33 88     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9A13 01 1F 00     	ld bc,31
 693+ 9A16 A7           	and a
 694+ 9A17 ED 4A        	adc hl,bc
 695+ 9A19 22 33 88     	ld (Posicion_actual),hl
 696+ 9A1C 21 53 88     	ld hl,Ctrl_0														; $xxx1
 697+ 9A1F CB C6        	set 0,(hl)
 698+ 9A21 C9           	ret
 699+ 9A22
 700+ 9A22              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9A22
 702+ 9A22 2A 33 88     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9A25 01 1F 00     	ld bc,31
 704+ 9A28 A7           	and a
 705+ 9A29 ED 42        	sbc hl,bc
 706+ 9A2B 22 33 88     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9A2E 21 53 88     	ld hl,Ctrl_0
 708+ 9A31 CB CE        	set 1,(hl)
 709+ 9A33 C9           	ret
 710+ 9A34
 711+ 9A34              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9A34
 713+ 9A34 24           Reaparece_abajo inc h
 714+ 9A35 01 E0 17     	ld bc,$17e0
 715+ 9A38 A7           	and a
 716+ 9A39 ED 4A        	adc hl,bc
 717+ 9A3B 22 33 88     	ld (Posicion_actual),hl
 718+ 9A3E 21 53 88     	ld hl,Ctrl_0
 719+ 9A41 CB D6        	set 2,(hl)
 720+ 9A43 C9           	ret
 721+ 9A44
 722+ 9A44              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9A44
 724+ 9A44 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9A47 A7           	and a
 726+ 9A48 ED 42        	sbc hl,bc
 727+ 9A4A 22 33 88     	ld (Posicion_actual),hl
 728+ 9A4D 21 53 88     	ld hl,Ctrl_0
 729+ 9A50 CB DE        	set 3,(hl)
 730+ 9A52 C9           	ret
 731+ 9A53
 732+ 9A53              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9A53              ;
 734+ 9A53              ;	15/07/23
 735+ 9A53
 736+ 9A53              Reinicio
 737+ 9A53
 738+ 9A53              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9A53
 740+ 9A53 AF           	xor a
 741+ 9A54 21 6A 88     	ld hl,Puntero_indice_mov_bucle
 742+ 9A57 CD 75 9A     	call Limpia_contenido_hl
 743+ 9A5A
 744+ 9A5A 21 33 88     	ld hl,Posicion_actual
 745+ 9A5D CD 75 9A     	call Limpia_contenido_hl
 746+ 9A60
 747+ 9A60 CD 9E 86     	call Inicializa_Puntero_indice_mov
 748+ 9A63 CD 36 9D     	call Inicia_Puntero_mov
 749+ 9A66
 750+ 9A66 21 6C 88     	ld hl,Incrementa_puntero
 751+ 9A69 06 05        	ld b,5
 752+ 9A6B 77           1 ld (hl),a
 753+ 9A6C 23           	inc hl
 754+ 9A6D 10 FC        	djnz 1B
 755+ 9A6F
 756+ 9A6F 21 58 88     	ld hl,Ctrl_2
 757+ 9A72 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9A74
 759+ 9A74 C9           	ret
 760+ 9A75
 761+ 9A75 77           Limpia_contenido_hl	ld (hl),a
 762+ 9A76 23           	inc hl
 763+ 9A77 77           	ld (hl),a
 764+ 9A78 C9           	ret
 765+ 9A79
 766+ 9A79
# file closed: Direcciones.asm
1763  9A79              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9A79              ; ------------------------------------------------------------------------
   2+ 9A79              ;
   3+ 9A79              ;	30/1/24
   4+ 9A79              ;
   5+ 9A79              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9A79              ;	Fila superior "0", Columna izquierda "0".
   7+ 9A79              ;
   8+ 9A79              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9A79              ;
  10+ 9A79              ;	Modifica: A,BC y DE.
  11+ 9A79
  12+ 9A79 7D           Genera_coordenadas ld a,l
  13+ 9A7A E6 1F        	and $1f
  14+ 9A7C 32 37 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9A7F
  16+ 9A7F 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9A80 FE 40        	cp $40
  18+ 9A82 38 1C        	jr c,4F
  19+ 9A84
  20+ 9A84 CD E1 96     	call calcula_tercio
  21+ 9A87 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9A88
  23+ 9A88 1E 00        	ld e,0
  24+ 9A8A 7D           	ld a,l
  25+ 9A8B E6 E0        	and $e0
  26+ 9A8D 28 01        	jr z,1F
  27+ 9A8F 04           	inc b
  28+ 9A90
  29+ 9A90 04           1 inc b
  30+ 9A91 05           	dec b
  31+ 9A92 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9A94              ;														; _ , salimos.
  33+ 9A94 1C           3 inc e
  34+ 9A95 D6 20        	sub 32
  35+ 9A97 20 FB        	jr nz,3B
  36+ 9A99 10 F5        	djnz 1B
  37+ 9A9B
  38+ 9A9B 7B           2 ld a,e
  39+ 9A9C 32 38 88     	ld (Coordenada_y),a
  40+ 9A9F C9           	ret
  41+ 9AA0
  42+ 9AA0 AF           4 xor a
  43+ 9AA1 32 38 88     	ld (Coordenada_y),a
  44+ 9AA4 C9           	ret
  45+ 9AA5
  46+ 9AA5              ; ------------------------------------------------------------------------
  47+ 9AA5              ;	28/05/23
  48+ 9AA5              ;
  49+ 9AA5              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9AA5              ;	Fila superior "0", Columna izquierda "0".
  51+ 9AA5              ;
  52+ 9AA5              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9AA5              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9AA5              ;
  55+ 9AA5              ;		DE="$120d"
  56+ 9AA5              ;
  57+ 9AA5              ;		D, (Coordenada_X), Columnas, $12
  58+ 9AA5              ;		E, (Coordenada_y), Filas, $0d
  59+ 9AA5              ;
  60+ 9AA5              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9AA5
  62+ 9AA5              ;	Modifica: A,BC y DE.
  63+ 9AA5
  64+ 9AA5
  65+ 9AA5              Genera_coordenadas_disparo
  66+ 9AA5
  67+ 9AA5              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9AA5
  69+ 9AA5 7D           	ld a,l
  70+ 9AA6 E6 1F        	and $1f
  71+ 9AA8 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9AA9 CD E1 96     	call calcula_tercio
  73+ 9AAC 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9AAD 1E 00        	ld e,0
  75+ 9AAF 7D           	ld a,l
  76+ 9AB0 E6 E0        	and $e0
  77+ 9AB2 28 01        	jr z,1F
  78+ 9AB4 04           	inc b
  79+ 9AB5 1C           1 inc e
  80+ 9AB6 D6 20        	sub 32
  81+ 9AB8 20 FB        	jr nz,1B
  82+ 9ABA 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9ABC C9           	ret
  84+ 9ABD
# file closed: Genera_coordenadas.asm
1764  9ABD              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9ABD              ; Relojes y temporizaciones.
   2+ 9ABD
   3+ 9ABD              ; ------------------------------------------------------
   4+ 9ABD              ;
   5+ 9ABD              ;	16/7/23
   6+ 9ABD              ;
   7+ 9ABD              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9ABD              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9ABD              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9ABD              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9ABD              ;
  12+ 9ABD              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9ABD              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9ABD
  15+ 9ABD              ; Disparo_entidad db 1
  16+ 9ABD              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9ABD              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9ABD
  19+ 9ABD              Habilita_disparos
  20+ 9ABD
  21+ 9ABD 7E           	ld a,(hl)
  22+ 9ABE A7           	and a
  23+ 9ABF C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9AC0
  25+ 9AC0 EB           	ex de,hl
  26+ 9AC1
  27+ 9AC1 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9AC2 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9AC3
  30+ 9AC3              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9AC3
  32+ 9AC3 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9AC4 7E           	ld a,(hl)
  34+ 9AC5 23           	inc hl
  35+ 9AC6 77           	ld (hl),a
  36+ 9AC7
  37+ 9AC7 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9AC8 3E 01        	ld a,1
  39+ 9ACA 77           	ld (hl),a
  40+ 9ACB C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1765  9ACC              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9ACC
   2+ 9ACC
   3+ 9ACC              ;   07/07/23
   4+ 9ACC              ;
   5+ 9ACC              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9ACC              ;
   7+ 9ACC              ;   Codificación:
   8+ 9ACC              ;
   9+ 9ACC              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9ACC              ;
  11+ 9ACC              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9ACC              ;
  13+ 9ACC              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9ACC              ;
  15+ 9ACC              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9ACC              ;
  17+ 9ACC              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9ACC              ;                               ..... %01000010 Vel_up 4
  19+ 9ACC              ;                                               Vel_down 2
  20+ 9ACC              ;                               ..... $42
  21+ 9ACC              ;
  22+ 9ACC              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9ACC              ;
  24+ 9ACC              ;                               ..... %01000010 Vel_left 4
  25+ 9ACC              ;                                               Vel_right 2
  26+ 9ACC              ;                               ..... $42
  27+ 9ACC              ;
  28+ 9ACC              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9ACC              ;
  30+ 9ACC              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9ACC              ;
  32+ 9ACC              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9ACC              ;
  34+ 9ACC              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9ACC              ;                                     $53
  36+ 9ACC              ;
  37+ 9ACC              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9ACC              ;
  39+ 9ACC              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9ACC              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9ACC              ;
  42+ 9ACC              ;                       Arriba ..... $81
  43+ 9ACC              ;                       Arriba - izquierda ..... $a1
  44+ 9ACC              ;                       Arriba - derecha ..... $91
  45+ 9ACC              ;
  46+ 9ACC              ;                       Abajo ..... $41
  47+ 9ACC              ;                       Abajo - izquierda ..... $61
  48+ 9ACC              ;                       Abajo - derecha ..... $51
  49+ 9ACC              ;
  50+ 9ACC              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9ACC              ;
  52+ 9ACC              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9ACC              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9ACC              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9ACC              ;
  56+ 9ACC              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9ACC              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9ACC              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9ACC              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9ACC              ;
  61+ 9ACC              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9ACC              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9ACC              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9ACC              ;
  65+ 9ACC              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9ACC              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9ACC              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9ACC              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9ACC
  70+ 9ACC              ; ----- ----- ----- ----- -----
  71+ 9ACC
  72+ 9ACC F8 9A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9ACE 00 9B            defw F_1
  74+ 9AD0 0A 9B            defw F_2
  75+ 9AD2 14 9B            defw Codo_abajo_derecha
  76+ 9AD4 48 9B            defw Derecha_y_subiendo
  77+ 9AD6 52 9B            defw Derecha_y_subiendo_1
  78+ 9AD8 5C 9B            defw F_3
  79+ 9ADA 66 9B            defw F_4
  80+ 9ADC 70 9B            defw Derecha_y_bajando
  81+ 9ADE 7A 9B            defw Derecha_y_bajando_1
  82+ 9AE0 84 9B            defw Derecha_y_bajando_2
  83+ 9AE2 8E 9B            defw Codo_derecha_abajo
  84+ 9AE4 BE 9B            defw Codo_abajo_izq.
  85+ 9AE6 F2 9B            defw Izquierda_y_subiendo
  86+ 9AE8 FC 9B            defw Izquierda_y_subiendo_1
  87+ 9AEA 06 9C            defw F_5
  88+ 9AEC 10 9C            defw F_6
  89+ 9AEE 1A 9C            defw Izquierda_y_bajando
  90+ 9AF0 24 9C            defw Izquierda_y_bajando_1
  91+ 9AF2 2E 9C            defw Izquierda_y_bajando_2
  92+ 9AF4 38 9C            defw Codo_izquierda_abajo
  93+ 9AF6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9AF8
  95+ 9AF8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9AFC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9B00
  98+ 9B00 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9B04 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9B08 08 00
 100+ 9B0A 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9B0E 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9B12 0F FE
 102+ 9B14
 103+ 9B14 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9B18 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9B1C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9B20 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9B24 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9B28 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9B2C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9B30 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9B34 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9B38 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9B3C 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9B40 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9B44 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9B48
 117+ 9B48 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9B4C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9B50 06 00
 119+ 9B52
 120+ 9B52 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9B56 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9B5A 02 00
 122+ 9B5C
 123+ 9B5C 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9B60 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9B64 04 00
 125+ 9B66 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9B6A 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9B6E 08 00
 127+ 9B70
 128+ 9B70 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9B74 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9B78 02 00
 130+ 9B7A
 131+ 9B7A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9B7E 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9B82 06 00
 133+ 9B84
 134+ 9B84 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9B88 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9B8C 06 00
 136+ 9B8E
 137+ 9B8E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9B8E
 139+ 9B8E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9B92 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9B96 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9B9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9B9E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9BA2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9BA6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9BAA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9BAE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9BB2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9BB6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9BBA 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9BBE
 152+ 9BBE 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9BC2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9BC6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9BCA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9BCE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9BD2 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9BD6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9BDA 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9BDE 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9BE2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9BE6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9BEA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9BEE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9BF2
 166+ 9BF2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9BF6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9BFA 06 00
 168+ 9BFC
 169+ 9BFC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9C00 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9C04 02 00
 171+ 9C06
 172+ 9C06 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9C0A 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9C0E 04 00
 174+ 9C10 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9C14 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9C18 08 00
 176+ 9C1A
 177+ 9C1A 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9C1E 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9C22 02 00
 179+ 9C24
 180+ 9C24 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9C28 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9C2C 06 00
 182+ 9C2E
 183+ 9C2E 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9C32 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9C36 06 00
 185+ 9C38
 186+ 9C38 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9C3C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9C40 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9C44 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9C48 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9C4C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9C50 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9C54 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9C58 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9C5C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9C60 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9C64 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9C68
 199+ 9C68              ; ----- ----- ----- ----- -----
 200+ 9C68              ;
 201+ 9C68              ;   28/12/23
 202+ 9C68
 203+ 9C68              Movimiento
 204+ 9C68
 205+ 9C68              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9C68
 207+ 9C68 3A 58 88         ld a,(Ctrl_2)
 208+ 9C6B CB 57            bit 2,a
 209+ 9C6D 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9C6F
 211+ 9C6F 2A 68 88         ld hl,(Puntero_mov)
 212+ 9C72 7E               ld a,(hl)
 213+ 9C73
 214+ 9C73              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9C73
 216+ 9C73              Inicia_desplazamiento.
 217+ 9C73
 218+ 9C73              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9C73
 220+ 9C73 CD 73 9D         call Ajusta_velocidad_desplazamiento
 221+ 9C76
 222+ 9C76              ; Iniciamos (Repetimos_mov).
 223+ 9C76
 224+ 9C76 7E               ld a,(hl)
 225+ 9C77 E6 0F            and $0f
 226+ 9C79 32 6E 88         ld (Repetimos_desplazamiento),a
 227+ 9C7C 32 6F 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9C7F
 229+ 9C7F              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9C7F
 231+ 9C7F 23               inc hl
 232+ 9C80 7E               ld a,(hl)
 233+ 9C81 32 71 88         ld (Cola_de_desplazamiento),a
 234+ 9C84 2B               dec hl
 235+ 9C85
 236+ 9C85 21 58 88         ld hl,Ctrl_2
 237+ 9C88 CB D6            set 2,(hl)
 238+ 9C8A
 239+ 9C8A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9C8A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9C8A
 242+ 9C8A              Desplazamiento_iniciado
 243+ 9C8A
 244+ 9C8A CD 41 9D         call Aplica_desplazamiento
 245+ 9C8D
 246+ 9C8D              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9C8D
 248+ 9C8D 3A 91 88         ld a,(Ctrl_3)
 249+ 9C90 CB 57            bit 2,a
 250+ 9C92 C0               ret nz
 251+ 9C93
 252+ 9C93 3A 58 88         ld a,(Ctrl_2)
 253+ 9C96 CB 67            bit 4,a
 254+ 9C98 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9C99
 256+ 9C99 21 6E 88     3 ld hl,Repetimos_desplazamiento
 257+ 9C9C 35               dec (hl)
 258+ 9C9D C0               ret nz
 259+ 9C9E
 260+ 9C9E              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9C9E              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9C9E              ; Analiza (Cola_de_desplazamiento).
 263+ 9C9E
 264+ 9C9E 3A 71 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9CA1 A7               and a
 266+ 9CA2 CC 9C 9D         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9CA5 28 30            jr z,Reinicia_el_movimiento
 268+ 9CA7
 269+ 9CA7 FE FF            cp $ff
 270+ 9CA9 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9CAB
 272+ 9CAB FE FE            cp $fe
 273+ 9CAD CC 1A 9D         call z,Fijamos_bucle
 274+ 9CB0 28 25            jr z,Reinicia_el_movimiento
 275+ 9CB2
 276+ 9CB2 FE FD            cp $fd
 277+ 9CB4 20 11            jr nz,1F
 278+ 9CB6
 279+ 9CB6              ; ---
 280+ 9CB6              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9CB6
 282+ 9CB6 3A 58 88         ld a,(Ctrl_2)
 283+ 9CB9 CB 5F            bit 3,a
 284+ 9CBB 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9CBD
 286+ 9CBD              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9CBD
 288+ 9CBD 21 58 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9CC0 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9CC2
 291+ 9CC2 CD 2B 9D         call Inicia_Repetimos_movimiento
 292+ 9CC5 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9CC7              ; ---
 294+ 9CC7
 295+ 9CC7 FE 01        1 cp 1
 296+ 9CC9 CA 04 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9CCC
 298+ 9CCC 3D               dec a
 299+ 9CCD 32 71 88         ld (Cola_de_desplazamiento),a
 300+ 9CD0
 301+ 9CD0 3A 6F 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9CD3 32 6E 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9CD6              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9CD6 C9               ret
 305+ 9CD7
 306+ 9CD7              Reinicia_el_movimiento
 307+ 9CD7
 308+ 9CD7 3A 58 88         ld a,(Ctrl_2)
 309+ 9CDA CB 5F            bit 3,a
 310+ 9CDC 28 1B            jr z,2F
 311+ 9CDE
 312+ 9CDE              ; (Cola_de_desplazamiento)="254".
 313+ 9CDE
 314+ 9CDE 21 70 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9CE1 35               dec (hl)
 316+ 9CE2 20 15            jr nz,2F
 317+ 9CE4
 318+ 9CE4              ; Fin de las repeticiones del último movimiento.
 319+ 9CE4
 320+ 9CE4 21 58 88         ld hl,Ctrl_2
 321+ 9CE7 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9CE9
 323+ 9CE9 2A 68 88         ld hl,(Puntero_mov)
 324+ 9CEC 23               inc hl
 325+ 9CED 23               inc hl
 326+ 9CEE 23               inc hl
 327+ 9CEF 22 68 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9CF2              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9CF2 7E               ld a,(hl)
 330+ 9CF3 32 71 88         ld (Cola_de_desplazamiento),a
 331+ 9CF6
 332+ 9CF6 C3 9E 9C         jp Cola
 333+ 9CF9
 334+ 9CF9 CD 36 9D     2 call Inicia_Puntero_mov
 335+ 9CFC
 336+ 9CFC 21 58 88         ld hl,Ctrl_2
 337+ 9CFF CB 96            res 2,(hl)
 338+ 9D01
 339+ 9D01 C3 68 9C         jp Movimiento
 340+ 9D04
 341+ 9D04              Siguiente_desplazamiento
 342+ 9D04
 343+ 9D04              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9D04              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9D04
 346+ 9D04 21 58 88         ld hl,Ctrl_2
 347+ 9D07 CB 96            res 2,(hl)
 348+ 9D09
 349+ 9D09 2A 68 88         ld hl,(Puntero_mov)
 350+ 9D0C 23               inc hl
 351+ 9D0D 23               inc hl
 352+ 9D0E 22 68 88         ld (Puntero_mov),hl
 353+ 9D11
 354+ 9D11 7E               ld a,(hl)
 355+ 9D12 A7               and a
 356+ 9D13 CC 9C 9D         call z,Incrementa_Puntero_indice_mov
 357+ 9D16 CA D7 9C         jp z,Reinicia_el_movimiento
 358+ 9D19
 359+ 9D19 C9               ret
 360+ 9D1A
 361+ 9D1A              ; Subrutinas -----------------------------------------
 362+ 9D1A              ; ---------- --------- --------- ---------- ----------
 363+ 9D1A              ;
 364+ 9D1A              ;   24/07/23
 365+ 9D1A              ;
 366+ 9D1A              ;   Fijamos_bucle
 367+ 9D1A              ;
 368+ 9D1A              ;
 369+ 9D1A
 370+ 9D1A              Fijamos_bucle
 371+ 9D1A
 372+ 9D1A 3A 6C 88         ld a,(Incrementa_puntero)
 373+ 9D1D 3C               inc a
 374+ 9D1E 32 6D 88         ld (Incrementa_puntero_backup),a
 375+ 9D21
 376+ 9D21 CD 9C 9D         call Incrementa_Puntero_indice_mov
 377+ 9D24 2A 66 88         ld hl,(Puntero_indice_mov)
 378+ 9D27 22 6A 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9D2A C9               ret
 380+ 9D2B
 381+ 9D2B              ; ---------- --------- --------- ---------- ----------
 382+ 9D2B              ;
 383+ 9D2B              ;   07/7/23
 384+ 9D2B              ;
 385+ 9D2B              ;   Inicia_Repetimos_movimiento
 386+ 9D2B              ;
 387+ 9D2B              ;
 388+ 9D2B
 389+ 9D2B              Inicia_Repetimos_movimiento
 390+ 9D2B
 391+ 9D2B              ; Iniciamos (Repetimos_movimiento).
 392+ 9D2B
 393+ 9D2B DD 2A 68 88      ld ix,(Puntero_mov)
 394+ 9D2F DD 7E 02         ld a,(ix+2)
 395+ 9D32 32 70 88         ld (Repetimos_movimiento),a
 396+ 9D35
 397+ 9D35 C9               ret
 398+ 9D36
 399+ 9D36              ; ---------- --------- --------- ---------- ----------
 400+ 9D36              ;
 401+ 9D36              ;   26/6/23
 402+ 9D36              ;
 403+ 9D36              ;   Inicia_Puntero_mov
 404+ 9D36              ;
 405+ 9D36              ;
 406+ 9D36
 407+ 9D36 2A 66 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9D39 5E               ld e,(hl)
 409+ 9D3A 23               inc hl
 410+ 9D3B 56               ld d,(hl)
 411+ 9D3C EB               ex de,hl
 412+ 9D3D 22 68 88         ld (Puntero_mov),hl
 413+ 9D40 C9               ret
 414+ 9D41
 415+ 9D41              ; ---------- --------- --------- ---------- ----------
 416+ 9D41              ;
 417+ 9D41              ;   27/06/23
 418+ 9D41              ;
 419+ 9D41              ;   Aplica_movimiento.
 420+ 9D41
 421+ 9D41              Aplica_desplazamiento
 422+ 9D41
 423+ 9D41              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9D41
 425+ 9D41 2A 68 88         ld hl, (Puntero_mov)
 426+ 9D44
 427+ 9D44 7E               ld a,(hl)
 428+ 9D45 E6 F0            and $f0
 429+ 9D47 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9D48
 431+ 9D48 CB 7E            bit 7,(hl)
 432+ 9D4A 28 03            jr z,1F
 433+ 9D4C CD 60 97         call Mov_up
 434+ 9D4F 2A 68 88     1 ld hl, (Puntero_mov)
 435+ 9D52 CB 76            bit 6,(hl)
 436+ 9D54 28 09            jr z,2F
 437+ 9D56 CD 27 97         call Mov_down
 438+ 9D59
 439+ 9D59              ; Se ha aplicado reinicio ???
 440+ 9D59              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9D59
 442+ 9D59 3A 91 88         ld a,(Ctrl_3)
 443+ 9D5C CB 57            bit 2,a
 444+ 9D5E C0               ret nz
 445+ 9D5F
 446+ 9D5F 2A 68 88     2 ld hl, (Puntero_mov)
 447+ 9D62 CB 6E            bit 5,(hl)
 448+ 9D64 28 03            jr z,3F
 449+ 9D66 CD C6 98         call Mov_left
 450+ 9D69 2A 68 88     3 ld hl, (Puntero_mov)
 451+ 9D6C CB 66            bit 4,(hl)
 452+ 9D6E C8               ret z
 453+ 9D6F CD A3 97         call Mov_right
 454+ 9D72 C9               ret
 455+ 9D73
 456+ 9D73              ; ---------- --------- --------- ---------- ----------
 457+ 9D73              ;
 458+ 9D73              ;   26/06/23
 459+ 9D73              ;
 460+ 9D73              ;   Ajusta_velocidad_desplazamiento.
 461+ 9D73
 462+ 9D73              Ajusta_velocidad_desplazamiento
 463+ 9D73
 464+ 9D73              ; 1er byte de la cadena de movimiento.
 465+ 9D73              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9D73
 467+ 9D73 CD 91 9D         call Extrae_nibble_alto
 468+ 9D76
 469+ 9D76 32 5C 88         ld (Vel_up),a
 470+ 9D79 79               ld a,c
 471+ 9D7A E6 0F            and $0f
 472+ 9D7C 32 5D 88         ld (Vel_down),a
 473+ 9D7F
 474+ 9D7F              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9D7F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9D7F
 477+ 9D7F 23               inc hl
 478+ 9D80 CD 91 9D         call Extrae_nibble_alto
 479+ 9D83
 480+ 9D83 32 5A 88         ld (Vel_left),a
 481+ 9D86 79               ld a,c
 482+ 9D87 E6 0F            and $0f
 483+ 9D89 32 5B 88         ld (Vel_right),a
 484+ 9D8C
 485+ 9D8C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9D8C
 487+ 9D8C 23               inc hl
 488+ 9D8D 22 68 88         ld (Puntero_mov),hl
 489+ 9D90 C9               ret
 490+ 9D91
 491+ 9D91 06 04        Extrae_nibble_alto ld b,4
 492+ 9D93 7E               ld a,(hl)
 493+ 9D94 4F               ld c,a
 494+ 9D95 E6 F0            and $f0
 495+ 9D97 CB 3F        1 srl a
 496+ 9D99 10 FC            djnz 1B
 497+ 9D9B C9               ret
 498+ 9D9C
 499+ 9D9C              ; ---------- --------- --------- ---------- ----------
 500+ 9D9C              ;
 501+ 9D9C              ;   5/7/23
 502+ 9D9C              ;
 503+ 9D9C              ;   Incrementa_Puntero_indice_mov
 504+ 9D9C
 505+ 9D9C              Incrementa_Puntero_indice_mov
 506+ 9D9C
 507+ 9D9C 21 6C 88         ld hl,Incrementa_puntero
 508+ 9D9F 34               inc (hl)
 509+ 9DA0
 510+ 9DA0 2A 66 88         ld hl,(Puntero_indice_mov)
 511+ 9DA3 01 02 00         ld bc,2
 512+ 9DA6 A7               and a
 513+ 9DA7 09               add hl,bc
 514+ 9DA8 22 66 88         ld (Puntero_indice_mov),hl
 515+ 9DAB
 516+ 9DAB 7E               ld a,(hl)
 517+ 9DAC A7               and a
 518+ 9DAD
 519+ 9DAD              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9DAD
 521+ 9DAD              ;    jr z,$
 522+ 9DAD
 523+ 9DAD              ;! Reinicia el Patrón de movimiento.
 524+ 9DAD
 525+ 9DAD CC B2 9D         call z,Inicializa_Puntero_indice_mov_2
 526+ 9DB0
 527+ 9DB0 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9DB1
 529+ 9DB1 C9               ret
 530+ 9DB2
 531+ 9DB2              ; ---------- --------- --------- ---------- ----------
 532+ 9DB2              ;
 533+ 9DB2              ;   15/01/24
 534+ 9DB2              ;
 535+ 9DB2              ;   Inicializa_Puntero_indice_mov
 536+ 9DB2
 537+ 9DB2              Inicializa_Puntero_indice_mov_2
 538+ 9DB2
 539+ 9DB2              ; Existe etiqueta de bucle principal???
 540+ 9DB2
 541+ 9DB2 2A 6A 88         ld hl,(Puntero_indice_mov_bucle)
 542+ 9DB5 24               inc h
 543+ 9DB6 25               dec h
 544+ 9DB7 28 05            jr z,2F
 545+ 9DB9
 546+ 9DB9 22 66 88         ld (Puntero_indice_mov),hl
 547+ 9DBC 18 14            jr 3F
 548+ 9DBE
 549+ 9DBE              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9DBE
 551+ 9DBE 3A 6C 88     2 ld a,(Incrementa_puntero)
 552+ 9DC1 47               ld b,a
 553+ 9DC2
 554+ 9DC2 2A 66 88         ld hl,(Puntero_indice_mov)
 555+ 9DC5 2B           1 dec hl
 556+ 9DC6 2B               dec hl
 557+ 9DC7 10 FC            djnz 1B
 558+ 9DC9 22 66 88         ld (Puntero_indice_mov),hl
 559+ 9DCC
 560+ 9DCC AF               xor a
 561+ 9DCD 32 6C 88         ld (Incrementa_puntero),a
 562+ 9DD0 18 06            jr 4F
 563+ 9DD2
 564+ 9DD2 3A 6D 88     3 ld a,(Incrementa_puntero_backup)
 565+ 9DD5 32 6C 88         ld (Incrementa_puntero),a
 566+ 9DD8 C9           4 ret
 567+ 9DD9
 568+ 9DD9              ; ----------------------------------------------------------------------
 569+ 9DD9              ;
 570+ 9DD9              ;   30/01/24
 571+ 9DD9              ;
 572+ 9DD9              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9DD9
 574+ 9DD9 3A 30 88     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9DDC CD AC 87         call Calcula_salto_en_BC
 576+ 9DDF 21 5E 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9DE2 A7               and a
 578+ 9DE3 ED 4A            adc hl,bc
 579+ 9DE5 C9               ret
 580+ 9DE6
 581+ 9DE6              ; ----------------------------------------------------------------------
 582+ 9DE6              ;
 583+ 9DE6              ;   30/01/24
 584+ 9DE6              ;
 585+ 9DE6              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 586+ 9DE6              ;
 587+ 9DE6              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 588+ 9DE6
 589+ 9DE6 4E           Transfiere_datos_de_contadores ld c,(hl)
 590+ 9DE7 23               inc hl
 591+ 9DE8 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 592+ 9DE9 69               ld l,c
 593+ 9DEA 60               ld h,b
 594+ 9DEB 22 51 88         ld (Contador_de_mov_masticados),hl
 595+ 9DEE C9               ret
 596+ 9DEF
 597+ 9DEF
# file closed: Patrones_de_mov.asm
1766  9DEF              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9DEF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9DEF              ;
   3+ 9DEF              ;	12/12/23
   4+ 9DEF              ;
   5+ 9DEF              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9DEF
   7+ 9DEF              ;	ADC HL,SP	LD (addr),SP
   8+ 9DEF              ;	ADD HL,SP	LD SP,(addr)
   9+ 9DEF              ;	ADD IX,SP	LD SP,nn
  10+ 9DEF              ; 	ADD IY,SP	LD SP,HL
  11+ 9DEF              ;				LD SP,IX
  12+ 9DEF              ;	DEC SP		LD SP,IY
  13+ 9DEF
  14+ 9DEF              ;	EX (SP),HL
  15+ 9DEF              ;	EX (SP),IX
  16+ 9DEF              ;	EX (SP),IY
  17+ 9DEF
  18+ 9DEF              ;	INC SP
  19+ 9DEF
  20+ 9DEF                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 ED 73 83 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 711A
  36+ 711A              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 711A
  38+ 711A 31 4D 88         ld sp,Variables_de_borrado+6
  39+ 711D
  40+ 711D E5               push hl
  41+ 711E DD E5            push ix
  42+ 7120 FD E5            push iy
  43+ 7122
  44+ 7122 31 4F 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 7125 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 7127              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 7127
  48+ 7127 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 712A
  50+ 712A E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 712B DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 712D FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 712F
  54+ 712F              ; Disparo o entidad?
  55+ 712F
  56+ 712F 3A 72 88         ld a,(Ctrl_1)
  57+ 7132 CB 47            bit 0,a
  58+ 7134 28 05            jr z,2F
  59+ 7136
  60+ 7136 2A 8B 88         ld hl,(Stack_snapshot_disparos)
  61+ 7139 18 0F            jr 4F
  62+ 713B
  63+ 713B              ; No es disparo. Entidad/Amadeus ????
  64+ 713B
  65+ 713B 3A 53 88     2 ld a,(Ctrl_0)
  66+ 713E CB 77            bit 6,a
  67+ 7140 28 05            jr z,7F
  68+ 7142
  69+ 7142              ; Guardamos foto de Amadeus.
  70+ 7142
  71+ 7142 2A 8F 88         ld hl,(End_Snapshot_Amadeus)
  72+ 7145 18 03            jr 4F
  73+ 7147
  74+ 7147 2A 89 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 714A
  76+ 714A 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 714C
  78+ 714C D1           1 pop de
  79+ 714D 73               ld (hl),e
  80+ 714E 23               inc hl
  81+ 714F 72               ld (hl),d
  82+ 7150 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 7151 10 F9            djnz 1B
  84+ 7153
  85+ 7153              ; Disparo o entidad ?
  86+ 7153
  87+ 7153 3A 72 88         ld a,(Ctrl_1)
  88+ 7156 CB 47            bit 0,a
  89+ 7158 28 05            jr z,5F
  90+ 715A
  91+ 715A 22 8B 88         ld (Stack_snapshot_disparos),hl
  92+ 715D 18 12            jr 6F
  93+ 715F
  94+ 715F              ; Entidad o Amadeus ?
  95+ 715F
  96+ 715F 3A 53 88     5 ld a,(Ctrl_0)
  97+ 7162 CB 77            bit 6,a
  98+ 7164 28 08            jr z,8F
  99+ 7166
 100+ 7166 22 8F 88         ld (End_Snapshot_Amadeus),hl
 101+ 7169 ED 7B 83 88      ld sp,(Stack)
 102+ 716D C9               ret
 103+ 716E
 104+ 716E 22 89 88     8 ld (Stack_snapshot),hl
 105+ 7171 ED 7B 83 88  6 ld sp,(Stack)
 106+ 7175
 107+ 7175 C9               ret
 108+ 7176
 109+ 7176              ; -----------------------------------------------------------------------------
 110+ 7176              ;
 111+ 7176              ;   21/11/23
 112+ 7176
 113+ 7176              Limpia_y_reinicia_Stack_Snapshot
 114+ 7176
 115+ 7176              ;   Limpia Album_de_fotos.
 116+ 7176
 117+ 7176 2A 89 88         ld hl,(Stack_snapshot)
 118+ 7179 7D               ld a,l
 119+ 717A A7               and a
 120+ 717B C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 717C
 122+ 717C 47               ld b,a
 123+ 717D 04               inc b
 124+ 717E
 125+ 717E 36 00        1 ld (hl),0
 126+ 7180 2D               dec l
 127+ 7181 10 FB            djnz 1B
 128+ 7183
 129+ 7183              ;   Reinicializa (Stack_snapshot).
 130+ 7183
 131+ 7183 AF               xor a
 132+ 7184 32 89 88         ld (Stack_snapshot),a
 133+ 7187
 134+ 7187 C9               ret
# file closed: Guarda_foto_registros.asm
1767  7188
1768  7188              	SAVESNA "Pruebas.sna", START
1769  7188
1770  7188
1771  7188
1772  7188
# file closed: Banco_de_pruebas.asm
