# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1A 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 51 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD FA 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 62 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E 3A 52 89     	ld a,(Contador_de_frames_2)
  58  AA21 FE 01        	cp 1
  59  AA23 20 09        	jr nz,1F
  60  AA25 3A 51 89     	ld a,(Contador_de_frames)
  61  AA28 FE 56        	cp $56	; $56 Último frame que no falla.
  62  AA2A 28 FE        	jr z,$
  63  AA2C 30 FE        	jr nc,$
  64  AA2E
  65  AA2E              ;! Debuggg
  66  AA2E
  67  AA2E FD E1        1 pop iy
  68  AA30 DD E1        	pop ix
  69  AA32 F1           	pop af
  70  AA33 C1           	pop bc
  71  AA34 D1           	pop de
  72  AA35 E1           	pop hl
  73  AA36 D9           	exx
  74  AA37 C1           	pop bc
  75  AA38 D1           	pop de
  76  AA39 E1           	pop hl
  77  AA3A 08           	ex af,af'
  78  AA3B F1           	pop af
  79  AA3C 08           	ex af,af'
  80  AA3D D9           	exx
  81  AA3E
  82  AA3E ED 7B 1A 89  	ld sp,(Stack_3)
  83  AA42
  84  AA42 FB           	ei
  85  AA43 ED 4D        	reti
  86  AA45
  87  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA45
  89  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 20 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 26 89        	defw End_Snapshot_1
 267+ 8500 2A 89        	defw End_Snapshot_2
 268+ 8502 2E 89        	defw End_Snapshot_3
 269+ 8504 22 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 28 89        	defw End_Snapshot_disparos_1
 271+ 8508 2C 89        	defw End_Snapshot_disparos_2
 272+ 850A 30 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 5E 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 5E 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CD 87        	defw Nivel_2
   7+ 87BE DA 87        	defw Nivel_3
   8+ 87C0 EA 87        	defw Nivel_4
   9+ 87C2 FC 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CD 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D2 01 02
  21+ 87D4 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D8 01 02
  22+ 87DA 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DB 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DF 01
  24+ 87E0 03 01 01 01  	db 3,1,1,1,1
  24+ 87E4 01
  25+ 87E5 03 01 01 01  	db 3,1,1,1,1
  25+ 87E9 01
  26+ 87EA 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EB 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EF 01
  28+ 87F0 04 01 01 01  	db 4,1,1,1,1
  28+ 87F4 01
  29+ 87F5 04 01 01 01  	db 4,1,1,1,1
  29+ 87F9 01
  30+ 87FA 02 03        	db 2,3
  31+ 87FC 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FD 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8801 01
  33+ 8802 05 01 01 01  	db 5,1,1,1,1
  33+ 8806 01
  34+ 8807 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880B 01
  35+ 880C 05 01 01 01  	db 5,1,1,1,1
  35+ 8810 01
  36+ 8811
  37+ 8811              ;---------------------------------------------------------------------------------------------------------------
  38+ 8811              ;
  39+ 8811              ;   3/9/23
  40+ 8811              ;
  41+ 8811              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8811              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8811              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8811              ;	_en la caja DRAW correspondiente.
  45+ 8811              ;
  46+ 8811              ;	MODIFICA: HL,DE y A.
  47+ 8811              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8811
  49+ 8811              Inicializa_Punteros_de_nivel
  50+ 8811
  51+ 8811 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8814 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8817 CD 8B 8C     	call Extrae_address
  54+ 881A 7E           	ld a,(hl)
  55+ 881B 32 0E 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881E 23           	inc hl
  57+ 881F 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8822 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8823
  60+ 8823              ;---------------------------------------------------------------------------------------------------------------
  61+ 8823              ;
  62+ 8823              ;   13/5/23
  63+ 8823              ;
  64+ 8823              ;	Destruye A,BC,HL,DE
  65+ 8823
  66+ 8823              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8823              ;	_del juego.
  68+ 8823
  69+ 8823              Prepara_cajas
  70+ 8823
  71+ 8823              ; Preparamos los punteros de las cajas.
  72+ 8823
  73+ 8823 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8826 CD 8B 8C     	call Extrae_address
  75+ 8829 CD 66 88     	call Avanza_caja
  76+ 882C
  77+ 882C CD AA 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882F
  79+ 882F 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 8832
  81+ 8832              ; HL está en los datos del nivel correspondiente.
  82+ 8832              ; B actuará como contador de cajas.
  83+ 8832
  84+ 8832 C5           1 push bc
  85+ 8833
  86+ 8833 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8834 CD 57 88     	call PreparaBC
  88+ 8837
  89+ 8837 21 96 87     	ld hl,Indice_de_entidades
  90+ 883A CD 5F 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883D 22 14 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8840
  93+ 8840 CD 70 88     	call Datos_de_entidad_a_caja
  94+ 8843
  95+ 8843 2A 0C 89     	ld hl,(Indice_restore_caja)
  96+ 8846 CD 8B 8C     	call Extrae_address
  97+ 8849 CD 66 88     	call Avanza_caja
  98+ 884C
  99+ 884C 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884F 23           	inc hl
 101+ 8850 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8853
 103+ 8853 C1           	pop bc
 104+ 8854 10 DC        	djnz 1B
 105+ 8856 C9           	ret
 106+ 8857
 107+ 8857 CB 27        PreparaBC sla a
 108+ 8859 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885B 4F           	ld c,a
 110+ 885C 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885E C9           	ret
 112+ 885F
 113+ 885F A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8860 ED 4A        	adc hl,bc
 115+ 8862 CD 8B 8C     	call Extrae_address
 116+ 8865 C9           	ret
 117+ 8866
 118+ 8866 22 08 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8869 13           	inc de
 120+ 886A 13           	inc de
 121+ 886B EB           	ex de,hl
 122+ 886C 22 0C 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886F C9           	ret
 124+ 8870
 125+ 8870              Datos_de_entidad_a_caja
 126+ 8870
 127+ 8870              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8870
 129+ 8870
 130+ 8870 ED 5B 08 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8874
 132+ 8874 01 02 00     	ld bc,2
 133+ 8877 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8879
 135+ 8879 01 07 00     	ld bc,7
 136+ 887C CD A4 88     	call Situa_DE
 137+ 887F
 138+ 887F 01 05 00     	ld bc,5
 139+ 8882 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8884
 141+ 8884 01 04 00     	ld bc,4
 142+ 8887 CD A4 88     	call Situa_DE
 143+ 888A
 144+ 888A 01 07 00     	ld bc,7
 145+ 888D ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888F
 147+ 888F 01 12 00     	ld bc,18
 148+ 8892 CD A4 88     	call Situa_DE
 149+ 8895
 150+ 8895 01 02 00     	ld bc,2
 151+ 8898 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 889A
 153+ 889A              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 889A              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 889A
 156+ 889A 01 0F 00     	ld bc,15									; *****
 157+ 889D CD A4 88     	call Situa_DE
 158+ 88A0
 159+ 88A0 3E 03        	ld a,3
 160+ 88A2 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A3
 162+ 88A3 C9           	ret
 163+ 88A4
 164+ 88A4 EB           Situa_DE ex de,hl
 165+ 88A5 A7           	and a
 166+ 88A6 ED 4A        	adc hl,bc
 167+ 88A8 EB           	ex de,hl
 168+ 88A9 C9           	ret
 169+ 88AA
 170+ 88AA              ;---------------------------------------------------------------------------------------------------------------
 171+ 88AA              ;
 172+ 88AA              ;	21/5/23
 173+ 88AA              ;
 174+ 88AA              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88AA              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88AA              ;
 177+ 88AA              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88AA              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88AA              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88AA              ;
 181+ 88AA              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88AA              ;	MODIFICA: A y B.
 183+ 88AA              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88AA
 185+ 88AA              Admin_num_entidades
 186+ 88AA
 187+ 88AA              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88AA
 189+ 88AA 3A 0E 89     	ld a,(Numero_de_entidades)
 190+ 88AD A7           	and a
 191+ 88AE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AE              ;	jr z,$
 193+ 88AE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AE
 195+ 88AE 20 03        	jr nz,3F
 196+ 88B0
 197+ 88B0              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88B0
 199+ 88B0 CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B3
 201+ 88B3 3A 0E 89     3 ld a,(Numero_de_entidades)
 202+ 88B6 FE 0A        	cp 10
 203+ 88B8 38 08        	jr c,1F
 204+ 88BA
 205+ 88BA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88BA              ; Actualizamos variables.
 207+ 88BA
 208+ 88BA 3E 0A        	ld a,10
 209+ 88BC 32 0F 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BF 47           	ld b,a
 211+ 88C0 18 04        	jr 2F
 212+ 88C2
 213+ 88C2              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C2              ; (Numero_de_entidades)="0".
 215+ 88C2
 216+ 88C2 32 0F 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C5 47           	ld b,a
 218+ 88C6 C9           2 ret
# file closed: Niveles.asm
  92  88C7
  93  88C7              ; ******************************************************************************************************************************************************************************************
  94  88C7              ; Constantes.
  95  88C7              ; ******************************************************************************************************************************************************************************************
  96  88C7              ;
  97  88C7              ; 4/9/23
  98  88C7              ;
  99  88C7              ; Constantes generales.
 100  88C7              ;
 101  88C7
 102  88C7              Sprite_vacio equ $f000
 103  88C7              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C7              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C7              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C7              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C7
 108  88C7              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C7              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C7              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C7              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C7              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C7              ;
 114  88C7              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C7              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C7              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C7              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C7              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C7              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C7
 121  88C7              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C7              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C7
 124  88C7
 125  88C7
 126  88C7              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C7
 128  88C7              ; ******************************************************************************************************************************************************************************************
 129  88C7              ; Variables.
 130  88C7              ; ******************************************************************************************************************************************************************************************
 131  88C7              ;
 132  88C7              ; 28/07/23
 133  88C7              ;
 134  88C7              ; Variables de DRAW. (Motor principal).
 135  88C7              ;
 136  88C7              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C7
 138  88C7 00           Filas db 0												; Filas. [DRAW]
 139  88C8 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CF
 145  88CF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CF
 147  88CF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88D0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88D0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88D0 00           Attr db 0												; Atributos de la entidad:
 151  88D1
 152  88D1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D1              ;
 154  88D1              ;	COLORES: 0 ..... NEGRO
 155  88D1              ;    		 1 ..... AZUL
 156  88D1              ; 			 2 ..... ROJO
 157  88D1              ;			 3 ..... MAGENTA
 158  88D1              ; 			 4 ..... VERDE
 159  88D1              ; 			 5 ..... CIAN
 160  88D1              ;			 6 ..... AMARILLO
 161  88D1              ; 			 7 ..... BLANCO
 162  88D1
 163  88D1 00 00        Indice_Sprite_der defw 0
 164  88D3 00 00        Indice_Sprite_izq defw 0
 165  88D5 00 00        Puntero_DESPLZ_der defw 0
 166  88D7 00 00        Puntero_DESPLZ_izq defw 0
 167  88D9
 168  88D9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DC
 171  88DC              ; Variables de objeto. (Características).
 172  88DC
 173  88DC 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DD 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DE 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DF 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88E0
 178  88E0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E1 00 00 00...  Variables_de_borrado ds 6
 182  88E7
 183  88E7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E9 00 00        	defw 0
 185  88EB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88ED 00 00 00 00  	db 0,0,0,0
 187  88F1
 188  88F1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F1
 190  88F1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F2              ;
 196  88F2              ; 														DESCRIPCIÖN:
 197  88F2              ;
 198  88F2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F2              ;
 212  88F2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F2
 216  88F2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F2
 218  88F2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F6 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F8              ;
 222  88F8              ;
 223  88F8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F9 00           Incrementa_puntero_backup db 0
 227  88FA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FE              ;
 233  88FE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FE              ;
 237  88FE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FE              ;
 242  88FE              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FE
 246  88FE
 247  88FE              ; Variables de funcionamiento. [DRAW].
 248  88FE
 249  88FE 00           Columnas db 0
 250  88FF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8901              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8901 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8902
 254  8902              ; variables de control general.
 255  8902
 256  8902 00           Ctrl_2 db 0
 257  8903              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8903              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8903              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8903              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8903              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8903              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8903              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8903              ;
 265  8903              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8903              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8903              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8903              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8903              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8903
 271  8903 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8904
 273  8904              ;! 61 Bytes por entidad.
 274  8904
 275  8904              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8904              ;					         		---------;      ;---------
 277  8904
 278  8904
 279  8904              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8904
 281  8904 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8905
 283  8905              ;														DESCRIPCIÓN:
 284  8905              ;
 285  8905              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8905              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8905              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8905              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8905              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8905              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8905
 292  8905              ;														BIT 3, Recarga de nueva oleada.
 293  8905              ;														BIT 4, Recarga de nueva oleada.
 294  8905              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8905              ;														BIT 6, **** Frame completo.
 296  8905              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8905
 298  8905 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8907              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8907              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8907              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8907
 303  8907 00           Ctrl_3 db 0												; Byte de control de propósito general.
 304  8908
 305  8908              ;														DESCRIPCIÓN:
 306  8908              ;
 307  8908              ;														BIT 0,
 308  8908
 309  8908              ; Gestión de ENTIDADES y CAJAS.
 310  8908
 311  8908 00 00        Puntero_store_caja defw 0
 312  890A 00 00        Puntero_restore_caja defw 0
 313  890C 00 00        Indice_restore_caja defw 0
 314  890E 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890F 00           Numero_parcial_de_entidades db 0
 316  8910 00           Entidades_en_curso db 0									; ..... ..... .....
 317  8911 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8912              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8912              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8912              ;														; _ (Numero_de_malotes)="0".
 321  8912 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8914 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8916              ;														; _ puntero (Indice_entidades).
 324  8916
 325  8916
 326  8916              ;---------------------------------------------------------------------------------------------------------------
 327  8916              ;
 328  8916              ;	2/9/23
 329  8916              ;
 330  8916              ;	Álbumes.
 331  8916
 332  8916 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8918              ;														; _variable para almacenar lo posición del puntero_
 334  8918              ; 														; _de pila, SP.
 335  8918 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  891A              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  891A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891C 00 00        Stack_snapshot defw 0
 339  891E 00 00        Stack_snapshot_disparos defw 0
 340  8920
 341  8920 00 00        End_Snapshot defw 0
 342  8922              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8922 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8924              ;														; _el snapshot de los registros del siguiente disparo.
 345  8924              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8924 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8926 00 00        End_Snapshot_1 defw 0
 348  8928 00 00        End_Snapshot_disparos_1 defw 0
 349  892A 00 00        End_Snapshot_2 defw 0
 350  892C 00 00        End_Snapshot_disparos_2 defw 0
 351  892E 00 00        End_Snapshot_3 defw 0
 352  8930 00 00        End_Snapshot_disparos_3 defw 0
 353  8932
 354  8932 00 00        Puntero_indice_album_de_fotos defw 0
 355  8934 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8936
 357  8936 00 00        Puntero_indice_End_Snapshot defw 0
 358  8938 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  893A 00 00        Puntero_de_End_Snapshot defw 0
 360  893C 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893E
 362  893E              ;---------------------------------------------------------------------------------------------------------------
 363  893E
 364  893E              ; Gestión de Disparos.
 365  893E
 366  893E 00           Numero_de_disparotes db 0
 367  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 368  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 369  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 370  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 371  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 372  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 373  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 374  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 375  8946              ;														; _produzca colisión.
 376  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 377  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 378  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 379  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 380  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 381  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 382  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 383  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 384  8951
 385  8951              ;---------------------------------------------------------------------------------------------------------------
 386  8951
 387  8951              ; Relojes y temporizaciones.
 388  8951
 389  8951 00           Contador_de_frames db 0
 390  8952 00           Contador_de_frames_2 db 0
 391  8953
 392  8953 04           Clock_explosion db 4
 393  8954 1E           Clock_Entidades_en_curso db 30
 394  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 395  8956              ;														; Repite la oleada de entidades.
 396  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 397  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 398  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 399  8959
 400  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 401  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 402  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 403  895C
 404  895C              ;---------------------------------------------------------------------------------------------------------------
 405  895C
 406  895C              ; Gestión de NIVELES.
 407  895C
 408  895C 00           Nivel db 0												; Nivel actual del juego.
 409  895D 00 00        Puntero_indice_NIVELES defw 0
 410  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 411  8961              ; 														; _ que definen el NIVEL.
 412  8961              ; Y todo comienza aquí .....
 413  8961              ;
 414  8961              ; Rutina principal *************************************************************************************************************************************************************************
 415  8961              ;
 416  8961              ;	14/11/22
 417  8961
 418  8961              START
 419  8961
 420  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 421  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 422  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 423  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 424  896A F3           	DI
 425  896B
 426  896B 3E 07        	ld a,%00000111
 427  896D CD 8B 99     	call Cls
 428  8970
 429  8970 CD 64 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 430  8973
 431  8973              ; INICIALIZACIÓN.
 432  8973
 433  8973 CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 434  8976
 435  8976 CD 23 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 436  8979
 437  8979 CD 8C 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 438  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 439  897C CD A2 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 440  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 441  897F              ; ----------
 442  897F
 443  897F CD 14 8D     	call Restore_entidad
 444  8982
 445  8982 21 0F 89     	ld hl,Numero_parcial_de_entidades
 446  8985 46           	ld b,(hl)
 447  8986 04           	inc b
 448  8987 05           	dec b
 449  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 450  898A
 451  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 452  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 453  898A              ;	Pintamos el resto de entidades:
 454  898A
 455  898A              ;	INICIA ENTIDADES !!!!!
 456  898A
 457  898A C5           1 push bc  												; Guardo el contador de entidades.
 458  898B CD 59 8B     	call Inicia_entidad
 459  898E C1           	pop bc
 460  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 461  8991
 462  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 463  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 464  8991
 465  8991 3A 04 89     	ld a,(Ctrl_1)
 466  8994 CB 5F        	bit 3,a
 467  8996 20 00        	jr nz,5F											; Loop
 468  8998
 469  8998              ; 	INICIA AMADEUS !!!!!
 470  8998
 471  8998              3
 472  8998
 473  8998              ;	call Restore_Amadeus
 474  8998              ;	call Inicia_Puntero_objeto
 475  8998              ;	call Draw
 476  8998              ;	call Guarda_foto_registros
 477  8998              ;	call Guarda_datos_de_borrado_Amadeus
 478  8998
 479  8998              ;	ld de,Amadeus_db
 480  8998              ;	call Store_Amadeus
 481  8998
 482  8998              ; 	INICIA DISPAROS !!!!!
 483  8998
 484  8998              ;	call Inicia_Puntero_Disparo_Entidades
 485  8998              ;	call Inicia_Puntero_Disparo_Amadeus
 486  8998
 487  8998              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 488  8998
 489  8998 CD 8C 8B     5 call Inicia_punteros_de_cajas
 490  899B CD 14 8D     	call Restore_entidad
 491  899E
 492  899E 3A 04 89     	ld a,(Ctrl_1)
 493  89A1 CB 5F        	bit 3,a
 494  89A3 28 07        	jr z,6F
 495  89A5
 496  89A5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 497  89A5
 498  89A5 21 04 89     	ld hl,Ctrl_1
 499  89A8 CB 9E        	res 3,(hl)
 500  89AA 18 04        	jr Main
 501  89AC
 502  89AC
 503  89AC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 504  89AC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 505  89AC              ; _ para situarnos en el siguiente album.
 506  89AC
 507  89AC CD D3 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 508  89AF F3           	di
 509  89B0
 510  89B0              ; ------------------------------------
 511  89B0
 512  89B0              Main
 513  89B0              ;
 514  89B0              ;	3/8/23
 515  89B0
 516  89B0 3E 01            ld a,1
 517  89B2 D3 FE        	out ($fe),a											; Azul.
 518  89B4
 519  89B4 FB           	ei
 520  89B5
 521  89B5 3A 54 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 522  89B8 47           	ld b,a
 523  89B9 3A 51 89     	ld a,(Contador_de_frames)
 524  89BC B8           	cp b
 525  89BD 20 18        	jr nz,13F
 526  89BF
 527  89BF 3A 0F 89     	ld a,(Numero_parcial_de_entidades)
 528  89C2 47           	ld b,a
 529  89C3 3A 10 89     	ld a,(Entidades_en_curso)
 530  89C6 B8           	cp b
 531  89C7 28 0E        	jr z,13F
 532  89C9 30 0C        	jr nc,13F
 533  89CB
 534  89CB 3C           	inc a
 535  89CC 32 10 89     	ld (Entidades_en_curso),a
 536  89CF
 537  89CF 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 538  89D2
 539  89D2              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 540  89D2              ;! _ IMPREDECIBLE !!!!
 541  89D2
 542  89D2 C6 64        	add 100
 543  89D4 32 54 89     	ld (Clock_Entidades_en_curso),a
 544  89D7
 545  89D7              ; Habilita disparos.
 546  89D7
 547  89D7 21 56 89     13 ld hl,Disparo_Amadeus
 548  89DA 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 549  89DD CD 4F 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 550  89E0
 551  89E0 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 552  89E3 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 553  89E6 CD 4F 9D     	call Habilita_disparos
 554  89E9
 555  89E9              ; COLISIONES.
 556  89E9
 557  89E9 CD 60 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 558  89EC
 559  89EC              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 560  89EC              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 561  89EC              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 562  89EC
 563  89EC AF           	xor a
 564  89ED 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 565  89F0
 566  89F0 CD 8C 8B     	call Inicia_punteros_de_cajas
 567  89F3 CD 14 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 568  89F6              ; 														; _ en DRAW.
 569  89F6 3A C7 88     	ld a,(Filas)
 570  89F9 A7           	and a
 571  89FA 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 572  89FC CD 26 8D     	call Incrementa_punteros_de_cajas
 573  89FF 18 F2        	jr 12B
 574  8A01
 575  8A01              ; ---------------------------------------------------------------------------------------
 576  8A01
 577  8A01 3A 0F 89     10 ld a,(Numero_parcial_de_entidades)
 578  8A04 47               ld b,a
 579  8A05 A7           	and a
 580  8A06 20 14        	jr nz,11F
 581  8A08
 582  8A08 21 04 89     	ld hl,Ctrl_1
 583  8A0B CB 66        	bit 4,(hl)
 584  8A0D C2 9D 8A     	jp nz,16F
 585  8A10
 586  8A10 21 04 89     	ld hl,Ctrl_1
 587  8A13 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 588  8A15
 589  8A15 3A 51 89     	ld a,(Contador_de_frames)
 590  8A18 3C           	inc a
 591  8A19 32 55 89     	ld (Activa_recarga_cajas),a
 592  8A1C
 593  8A1C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 594  8A1C
 595  8A1C 3A 10 89     11 ld a,(Entidades_en_curso)
 596  8A1F A7           	and a
 597  8A20 CA 9D 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 598  8A23 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 599  8A24
 600  8A24              ; Código que ejecutamos con cada entidad:
 601  8A24              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 602  8A24
 603  8A24 C5           15 push bc 												; Nº de entidades en curso.
 604  8A25
 605  8A25              ; Impacto ???
 606  8A25
 607  8A25 3A E0 88     	ld a,(Impacto)
 608  8A28 A7           	and a
 609  8A29 28 32        	jr z,8F
 610  8A2B
 611  8A2B              ; Hay Impacto en esta entidad.
 612  8A2B
 613  8A2B 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 614  8A2E 35           	dec (hl)
 615  8A2F 20 66        	jr nz,17F
 616  8A31
 617  8A31              ;! Velocidad de la animación de la explosión.
 618  8A31
 619  8A31 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 620  8A33              ;														; _,(velocidad de la explosión).
 621  8A33
 622  8A33              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 623  8A33 18 FE        	jr $
 624  8A35
 625  8A35 CD E7 8D     	call Repone_datos_de_borrado
 626  8A38 CD 2D 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 627  8A3B
 628  8A3B
 629  8A3B              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 630  8A3B
 631  8A3B 3A 02 89     	ld a,(Ctrl_2)
 632  8A3E CB 4F        	bit 1,a
 633  8A40 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 634  8A42
 635  8A42              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 636  8A42
 637  8A42 3A CF 88     	ld a,(CTRL_DESPLZ)
 638  8A45 A7           	and a
 639  8A46 20 08        	jr nz,18F
 640  8A48
 641  8A48 21 84 84     	ld hl,Indice_Explosion_2x2-2
 642  8A4B 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 643  8A4E 18 06        	jr 19F
 644  8A50
 645  8A50 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 646  8A53 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 647  8A56
 648  8A56 21 02 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 649  8A59 CB CE        	set 1,(hl)
 650  8A5B 18 22        	jr 7F
 651  8A5D
 652  8A5D              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 653  8A5D              ; _con las coordenadas de la entidad almacenada en DRAW.
 654  8A5D
 655  8A5D 3A 04 89     8 ld a,(Ctrl_1)
 656  8A60 CB 57        	bit 2,a
 657  8A62 28 1B        	jr z,7F
 658  8A64
 659  8A64 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 660  8A67 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 661  8A68              ;														; E contiene la coordenada_X del disparo.
 662  8A68 2A CD 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 663  8A6B              ;														; H FILA, (Coordenada_y de la entidad).
 664  8A6B A7           	and a
 665  8A6C ED 52        	sbc hl,de
 666  8A6E
 667  8A6E CD 97 92     	call Determina_resultado_comparativa
 668  8A71
 669  8A71 78           	ld a,b
 670  8A72 A7           	and a
 671  8A73 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 672  8A75
 673  8A75              ; ----- ----- -----
 674  8A75
 675  8A75 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 676  8A77 32 E0 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 677  8A7A
 678  8A7A 21 04 89     	ld hl,Ctrl_1
 679  8A7D CB 96        	res 2,(hl)
 680  8A7F
 681  8A7F CD F5 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 682  8A82
 683  8A82 3A F1 88     	ld a,(Ctrl_0)
 684  8A85 CB 67        	bit 4,a
 685  8A87 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 686  8A89
 687  8A89              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 688  8A89              ; [[[
 689  8A89 CD AF 8D     	call Detecta_disparo_entidad
 690  8A8C              ; ]]]
 691  8A8C
 692  8A8C CD 6D 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 693  8A8F CD B5 8D     	call Guarda_datos_de_borrado
 694  8A92
 695  8A92 21 F1 88     	ld hl,Ctrl_0
 696  8A95 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 697  8A97
 698  8A97 CD D9 8C     17 call Store_Restore_cajas
 699  8A9A
 700  8A9A C1           	pop bc
 701  8A9B 10 87        	djnz 15B
 702  8A9D
 703  8A9D              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 704  8A9D              ; Hemos gestionado todas las unidades.
 705  8A9D              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 706  8A9D
 707  8A9D              ;	ld hl,Ctrl_1
 708  8A9D              ;	res 2,(hl)
 709  8A9D
 710  8A9D CD D3 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 711  8AA0              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 712  8AA0              ;														; _ interrupción.
 713  8AA0              ; ----------------------------------------
 714  8AA0
 715  8AA0 3A 04 89     	ld a,(Ctrl_1) 										; Existe Loop?
 716  8AA3 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 717  8AA5 CA B0 89     	jp z,Main
 718  8AA8
 719  8AA8 3A 51 89     	ld a,(Contador_de_frames)
 720  8AAB 47           	ld b,a
 721  8AAC 3A 55 89     	ld a,(Activa_recarga_cajas)
 722  8AAF B8           	cp b
 723  8AB0 28 08        	jr z,20F
 724  8AB2
 725  8AB2 21 04 89     	ld hl,Ctrl_1
 726  8AB5 CB E6        	set 4,(hl)
 727  8AB7 C3 B0 89     	jp Main
 728  8ABA
 729  8ABA 21 04 89     20 ld hl,Ctrl_1
 730  8ABD CB A6        	res 4,(hl)
 731  8ABF
 732  8ABF F3           	di
 733  8AC0
 734  8AC0 3A 51 89     	ld a,(Contador_de_frames)
 735  8AC3
 736  8AC3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 737  8AC3              ;! _ IMPREDECIBLE !!!!
 738  8AC3
 739  8AC3 C6 0A        	add 10
 740  8AC5 32 54 89     	ld (Clock_Entidades_en_curso),a
 741  8AC8
 742  8AC8 C3 76 89     	jp 4B
 743  8ACB
 744  8ACB C9           	ret
 745  8ACC
 746  8ACC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 747  8ACC
 748  8ACC              Gestiona_Amadeus
 749  8ACC
 750  8ACC 3E 04            ld a,4
 751  8ACE D3 FE        	out ($fe),a											; Azul.
 752  8AD0
 753  8AD0 CD 3B 8D     	call Restore_Amadeus
 754  8AD3
 755  8AD3              ;! Activa/desactiva impacto con Amadeus.
 756  8AD3
 757  8AD3 3A E0 88     	ld a,(Impacto)
 758  8AD6 A7           	and a
 759  8AD7 20 FE        	jr nz,$
 760  8AD9
 761  8AD9 CD 46 8B     	call Mov_Amadeus
 762  8ADC
 763  8ADC 3A F1 88     	ld a,(Ctrl_0)
 764  8ADF CB 67        	bit 4,a
 765  8AE1 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 766  8AE3
 767  8AE3 CD 6D 8B     	call Guarda_foto_entidad_a_pintar
 768  8AE6 CD C7 8D     	call Guarda_datos_de_borrado_Amadeus
 769  8AE9
 770  8AE9 21 F1 88     14 ld hl,Ctrl_0
 771  8AEC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 772  8AEE
 773  8AEE 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 774  8AF1 CD 4D 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 775  8AF4
 776  8AF4              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 777  8AF4
 778  8AF4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 779  8AF4
 780  8AF4              ;	call Calcula_numero_de_disparotes
 781  8AF4
 782  8AF4 C9           	ret
 783  8AF5
 784  8AF5              ; --------------------------------------------------------------------------------------------------------------
 785  8AF5              ;
 786  8AF5              ;	27/05/23
 787  8AF5
 788  8AF5              Mov_obj
 789  8AF5
 790  8AF5 3A 02 89     	ld a,(Ctrl_2)
 791  8AF8 CB 4F        	bit 1,a
 792  8AFA 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 793  8AFC
 794  8AFC              ; Explosión:
 795  8AFC
 796  8AFC 3A 03 89     	ld a,(Frames_explosion)
 797  8AFF A7           	and a
 798  8B00 20 11        	jr nz,4F
 799  8B02
 800  8B02              ; Una alimaña menos!!!!!!!!!1
 801  8B02
 802  8B02 CD 56 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 803  8B05 21 0F 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 804  8B08 35           	dec (hl)
 805  8B09 21 10 89     	ld hl,Entidades_en_curso
 806  8B0C 35           	dec (hl)
 807  8B0D 21 0E 89     	ld hl,Numero_de_entidades
 808  8B10 35           	dec (hl)
 809  8B11 18 32        	jr 3F
 810  8B13
 811  8B13              ; -----
 812  8B13
 813  8B13              ;	`Movemos´ la explosión.
 814  8B13
 815  8B13 2A D5 88     4 ld hl,(Puntero_DESPLZ_der)
 816  8B16 23           	inc hl
 817  8B17 23           	inc hl
 818  8B18 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 819  8B1B CD 8B 8C     	call Extrae_address
 820  8B1E 22 CB 88     	ld (Puntero_objeto),hl
 821  8B21
 822  8B21 21 03 89     	ld hl,Frames_explosion
 823  8B24 35           	dec (hl)
 824  8B25
 825  8B25              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 826  8B25 18 1E        	jr 3F
 827  8B27
 828  8B27 AF           2 xor a
 829  8B28 32 F1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 830  8B2B
 831  8B2B              ; Movemos Entidades malignas.
 832  8B2B
 833  8B2B CD FA 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 834  8B2E
 835  8B2E 3A F1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 836  8B31 CB 67        	bit 4,a
 837  8B33 C8           	ret z
 838  8B34
 839  8B34              ; Ha habido desplazamiento de la entidad maligna.
 840  8B34              ; Ha llegado a zona de AMADEUS ???
 841  8B34
 842  8B34 3A CE 88     	ld a,(Coordenada_y)
 843  8B37 FE 14        	cp $14
 844  8B39 D4 25 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 845  8B3C              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 846  8B3C              ; ---------
 847  8B3C
 848  8B3C CD 74 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 849  8B3F CD E7 8D     	call Repone_datos_de_borrado
 850  8B42 CD 2D 8C     	call Limpia_Variables_de_borrado
 851  8B45
 852  8B45 C9           3 ret													; _de la misma.
 853  8B46
 854  8B46              ; --------------------------------------------------------------------------------------------------------------
 855  8B46              ;
 856  8B46              ;	29/1/23
 857  8B46
 858  8B46              Mov_Amadeus
 859  8B46
 860  8B46 CD 78 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 861  8B49
 862  8B49 3A F1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 863  8B4C CB 67        	bit 4,a
 864  8B4E C8           	ret z
 865  8B4F
 866  8B4F              ; ---------
 867  8B4F
 868  8B4F CD 74 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 869  8B52 CD D7 8D     	call Repone_datos_de_borrado_Amadeus
 870  8B55 CD 2D 8C     	call Limpia_Variables_de_borrado
 871  8B58
 872  8B58 C9           	ret
 873  8B59
 874  8B59              ; -----------------------------------------------------------------------------------
 875  8B59
 876  8B59 CD 91 8C     Inicia_entidad	call Inicia_Puntero_objeto
 877  8B5C CD 9F 99     	call Recompone_posicion_inicio
 878  8B5F CD 7E 93     	call Draw
 879  8B62 CD A0 7F     	call Guarda_foto_registros
 880  8B65 CD B5 8D     	call Guarda_datos_de_borrado
 881  8B68 F3           	di
 882  8B69 CD D9 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 883  8B6C C9           	ret
 884  8B6D
 885  8B6D              ; --------------------------------------------------------------------------------------------------------------
 886  8B6D              ;
 887  8B6D              ;	31/08/23
 888  8B6D              ;
 889  8B6D              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 890  8B6D              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 891  8B6D
 892  8B6D              Guarda_foto_entidad_a_pintar
 893  8B6D
 894  8B6D              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 895  8B6D
 896  8B6D CD 7E 93     	call Draw
 897  8B70 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 898  8B73 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 899  8B74
 900  8B74              ; --------------------------------------------------------------------------------------------------------------
 901  8B74              ;
 902  8B74              ;	19/9/23
 903  8B74
 904  8B74 21 C7 88     Prepara_var_pintado ld hl,Filas
 905  8B77 11 E7 88     	ld de,Variables_de_pintado
 906  8B7A 01 08 00     	ld bc,8
 907  8B7D ED B0        	ldir
 908  8B7F C9           	ret
 909  8B80
 910  8B80              ; --------------------------------------------------------------------------------------------------------------
 911  8B80
 912  8B80 21 E7 88     Repone_pintar ld hl,Variables_de_pintado
 913  8B83 11 C7 88     	ld de,Filas
 914  8B86 01 08 00     	ld bc,8
 915  8B89 ED B0        	ldir
 916  8B8B C9           	ret
 917  8B8C
 918  8B8C              ; *************************************************************************************************************************************************************
 919  8B8C              ;
 920  8B8C              ; 8/1/23
 921  8B8C              ;
 922  8B8C              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 923  8B8C              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 924  8B8C              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 925  8B8C
 926  8B8C              ; Destruye HL y DE !!!!!
 927  8B8C
 928  8B8C              Inicia_punteros_de_cajas
 929  8B8C
 930  8B8C 21 8C 85     	ld hl,Indice_de_cajas
 931  8B8F CD 8B 8C         call Extrae_address
 932  8B92 22 08 89         ld (Puntero_store_caja),hl
 933  8B95 21 8E 85     	ld hl,Indice_de_cajas+2
 934  8B98 22 0C 89     	ld (Indice_restore_caja),hl
 935  8B9B CD 8B 8C     	call Extrae_address
 936  8B9E 22 0A 89     	ld (Puntero_restore_caja),hl
 937  8BA1 C9               ret
 938  8BA2
 939  8BA2              ; ---------------------------------------------------------------
 940  8BA2              ;
 941  8BA2              ;	9/8/23
 942  8BA2              ;
 943  8BA2              ;	Inicialización y gestión de álbumes de fotos y cajas.
 944  8BA2
 945  8BA2              Inicia_punteros_de_albumes_y_malotes
 946  8BA2
 947  8BA2 21 EC 84     	ld hl,Indice_album_de_fotos
 948  8BA5 22 32 89     	ld (Puntero_indice_album_de_fotos),hl
 949  8BA8 CD 8B 8C     	call Extrae_address
 950  8BAB 22 1C 89     	ld (Stack_snapshot),hl
 951  8BAE
 952  8BAE 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 953  8BB1 22 34 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 954  8BB4 CD 8B 8C     	call Extrae_address
 955  8BB7 22 1E 89     	ld (Stack_snapshot_disparos),hl
 956  8BBA
 957  8BBA 21 FC 84     	ld hl,Indice_End_Snapshot
 958  8BBD 22 36 89     	ld (Puntero_indice_End_Snapshot),hl
 959  8BC0 CD 8B 8C     	call Extrae_address
 960  8BC3 22 3A 89     	ld (Puntero_de_End_Snapshot),hl
 961  8BC6
 962  8BC6 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 963  8BC9 22 38 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 964  8BCC CD 8B 8C     	call Extrae_address
 965  8BCF 22 3C 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 966  8BD2
 967  8BD2 C9           	ret
 968  8BD3
 969  8BD3              ;	23/9/23
 970  8BD3
 971  8BD3              Avanza_puntero_de_album_de_fotos_y_malotes
 972  8BD3
 973  8BD3              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 974  8BD3
 975  8BD3              ; Estamos en el último álbum del índice???.
 976  8BD3
 977  8BD3 F3           	di
 978  8BD4 2A 32 89     	ld hl,(Puntero_indice_album_de_fotos)
 979  8BD7 01 F2 84     	ld bc,Indice_album_de_fotos+6
 980  8BDA A7           	and a
 981  8BDB ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 982  8BDD 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 983  8BDF FB           	ei
 984  8BE0
 985  8BE0 21 04 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 986  8BE3 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 987  8BE5 76           	halt
 988  8BE6 C9           	ret
 989  8BE7
 990  8BE7 2A 32 89     1 ld hl,(Puntero_indice_album_de_fotos)
 991  8BEA 23           	inc hl
 992  8BEB 23           	inc hl
 993  8BEC 22 32 89     	ld (Puntero_indice_album_de_fotos),hl
 994  8BEF CD 8B 8C     	call Extrae_address
 995  8BF2 22 1C 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 996  8BF5
 997  8BF5 2A 36 89     	ld hl,(Puntero_indice_End_Snapshot)
 998  8BF8 23           	inc hl
 999  8BF9 23           	inc hl
1000  8BFA 22 36 89     	ld (Puntero_indice_End_Snapshot),hl
1001  8BFD CD 8B 8C     	call Extrae_address
1002  8C00 22 3A 89     	ld (Puntero_de_End_Snapshot),hl
1003  8C03
1004  8C03 FB           	ei
1005  8C04 C9           	ret
1006  8C05
1007  8C05              ; *************************************************************************************************************************************************************
1008  8C05              ;
1009  8C05              ; 8/1/23
1010  8C05              ;
1011  8C05              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1012  8C05
1013  8C05 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1014  8C08 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1015  8C0B C9           	ret
1016  8C0C 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1017  8C0F 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1018  8C12 C9           	ret
1019  8C13
1020  8C13              ; -------------------------------------------------------------------------------------------------------------
1021  8C13              ;
1022  8C13              ; 21/9/23
1023  8C13              ;
1024  8C13
1025  8C13              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1026  8C13
1027  8C13              Limpia_album_Amadeus
1028  8C13
1029  8C13 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1030  8C16 7E           	ld a,(hl)
1031  8C17 A7           	and a
1032  8C18 C8           	ret z
1033  8C19
1034  8C19 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1035  8C1C 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1036  8C1F 01 0B 00     	ld bc,11
1037  8C22 AF           	xor a
1038  8C23 77           	ld (hl),a
1039  8C24 ED B0        	ldir
1040  8C26
1041  8C26 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1042  8C29 22 24 89     	ld (End_Snapshot_Amadeus),hl
1043  8C2C
1044  8C2C C9           	ret
1045  8C2D
1046  8C2D 21 E1 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1047  8C30 11 E2 88     	ld de,Variables_de_borrado+1
1048  8C33 01 05 00     	ld bc,5
1049  8C36 AF           	xor a
1050  8C37 77           	ld (hl),a
1051  8C38 ED B0        	ldir
1052  8C3A C9           	ret
1053  8C3B
1054  8C3B              ; -------------------------------------------------------------------------------------------------------------
1055  8C3B              ;
1056  8C3B              ; 8/9/23
1057  8C3B              ;
1058  8C3B
1059  8C3B              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1060  8C3B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1061  8C3B
1062  8C3B              Calcula_numero_de_malotes
1063  8C3B
1064  8C3B 21 00 70     	ld hl,Album_de_fotos
1065  8C3E EB           	ex de,hl
1066  8C3F 2A 20 89     	ld hl,(End_Snapshot)
1067  8C42
1068  8C42 7C           	ld a,h
1069  8C43 A7           	and a
1070  8C44 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1071  8C46
1072  8C46 06 00        4 ld b,0
1073  8C48 7D           	ld a,l
1074  8C49 93           	sub e
1075  8C4A 28 07        	jr z,1F
1076  8C4C
1077  8C4C              ; Nº de malotes no es "0".
1078  8C4C
1079  8C4C D6 06        2 sub 6
1080  8C4E 04           	inc b
1081  8C4F A7           	and a
1082  8C50 20 FA        	jr nz,2B
1083  8C52 78           	ld a,b
1084  8C53
1085  8C53 32 11 89     1 ld (Numero_de_malotes),a
1086  8C56 C9           	ret
1087  8C57
1088  8C57              ; -------------------------------------------------------------------------------------------------------------
1089  8C57              ;
1090  8C57              ; 8/9/23
1091  8C57              ;
1092  8C57
1093  8C57              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1094  8C57              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1095  8C57
1096  8C57              Calcula_malotes_Amadeus
1097  8C57
1098  8C57 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1099  8C5A EB           	ex de,hl
1100  8C5B 2A 24 89     	ld hl,(End_Snapshot_Amadeus)
1101  8C5E
1102  8C5E 7C           	ld a,h
1103  8C5F A7           	and a
1104  8C60 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1105  8C62
1106  8C62 06 00        	ld b,0
1107  8C64 7D           	ld a,l
1108  8C65 93           	sub e
1109  8C66 28 07        	jr z,1F
1110  8C68
1111  8C68              ; Nº de malotes no es "0".
1112  8C68
1113  8C68 D6 06        2 sub 6
1114  8C6A 04           	inc b
1115  8C6B A7           	and a
1116  8C6C 20 FA        	jr nz,2B
1117  8C6E 78           	ld a,b
1118  8C6F
1119  8C6F 32 11 89     1 ld (Numero_de_malotes),a
1120  8C72 C9           	ret
1121  8C73
1122  8C73              ; -------------------------------------------------------------------------------------------------------------
1123  8C73              ;
1124  8C73              ; 28/2/23
1125  8C73              ;
1126  8C73
1127  8C73              Calcula_numero_de_disparotes
1128  8C73
1129  8C73 21 50 71     	ld hl,Album_de_fotos_disparos
1130  8C76 EB           	ex de,hl
1131  8C77 2A 3C 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1132  8C7A
1133  8C7A 06 00        	ld b,0
1134  8C7C 7D           	ld a,l
1135  8C7D 93           	sub e
1136  8C7E 28 07        	jr z,1F
1137  8C80
1138  8C80              ; Nº de malotes no es "0".
1139  8C80
1140  8C80 D6 06        2 sub 6
1141  8C82 04           	inc b
1142  8C83 A7           	and a
1143  8C84 20 FA        	jr nz,2B
1144  8C86 78           	ld a,b
1145  8C87
1146  8C87 32 3E 89     1 ld (Numero_de_disparotes),a
1147  8C8A C9           	ret
1148  8C8B
1149  8C8B              ; *************************************************************************************************************************************************************
1150  8C8B              ;
1151  8C8B              ; 20/10/22
1152  8C8B              ;
1153  8C8B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1154  8C8B              ;
1155  8C8B              ; Destruye el puntero y DE !!!!!
1156  8C8B
1157  8C8B 5E           Extrae_address ld e,(hl)
1158  8C8C 23           	inc hl
1159  8C8D 56           	ld d,(hl)
1160  8C8E 2B           	dec hl
1161  8C8F EB           	ex de,hl
1162  8C90 C9           	ret
1163  8C91
1164  8C91              ; *************************************************************************************************************************************************************
1165  8C91              ;
1166  8C91              ;	7/2/23
1167  8C91              ;
1168  8C91              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1169  8C91              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1170  8C91              ;
1171  8C91              ;   Destruye HL y BC !!!!!,
1172  8C91              ;
1173  8C91              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1174  8C91              ;					"0" ..... Izquierda.
1175  8C91
1176  8C91              Inicia_Puntero_objeto
1177  8C91
1178  8C91 3A DB 88     	ld a,(Cuad_objeto)
1179  8C94 E6 01        	and 1
1180  8C96 F5           	push af
1181  8C97 CC B5 8C     	call z,Inicia_puntero_objeto_izq
1182  8C9A F1           	pop af
1183  8C9B 28 2B        	jr z,1F
1184  8C9D CD A2 8C     	call Inicia_puntero_objeto_der
1185  8CA0 18 26        	jr 1F
1186  8CA2
1187  8CA2              ; Arrancamos desde la parte izquierda de la pantalla.
1188  8CA2              ; Iniciamos (Indice_Sprite_der).
1189  8CA2
1190  8CA2 2A D1 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1191  8CA5 22 D5 88     	ld (Puntero_DESPLZ_der),hl
1192  8CA8 CD 8B 8C     	call Extrae_address
1193  8CAB 22 CB 88     	ld (Puntero_objeto),hl
1194  8CAE
1195  8CAE 2A D3 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1196  8CB1 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
1197  8CB4 C9           	ret
1198  8CB5
1199  8CB5              ; Arrancamos desde la parte derecha de la pantalla.
1200  8CB5              ; Iniciamos (Indice_Sprite_izq).
1201  8CB5
1202  8CB5 2A D3 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1203  8CB8 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
1204  8CBB CD 8B 8C     	call Extrae_address
1205  8CBE 22 CB 88     	ld (Puntero_objeto),hl
1206  8CC1
1207  8CC1 2A D1 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1208  8CC4 22 D5 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1209  8CC7 C9           	ret
1210  8CC8
1211  8CC8              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1212  8CC8
1213  8CC8 21 40 83     1 ld hl,Amadeus
1214  8CCB ED 4B CB 88  	ld bc,(Puntero_objeto)
1215  8CCF B7 ED 42     	sub hl,bc
1216  8CD2 C0           	ret nz
1217  8CD3 21 F1 88     	ld hl,Ctrl_0
1218  8CD6 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1219  8CD8 C9           	ret 												; _de nuestra nave en los extremos.
1220  8CD9
1221  8CD9              ; *************************************************************************************************************************************************************
1222  8CD9              ;
1223  8CD9              ;	14/5/23
1224  8CD9              ;
1225  8CD9              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1226  8CD9              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1227  8CD9
1228  8CD9              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1229  8CD9              ;	_de la 2ª y 3ª entidad respectivamente.
1230  8CD9
1231  8CD9              Store_Restore_cajas
1232  8CD9
1233  8CD9 E5           	push hl
1234  8CDA D5           	push de
1235  8CDB C5            	push bc
1236  8CDC
1237  8CDC              ;	STORE !!!!!
1238  8CDC              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1239  8CDC
1240  8CDC 21 C7 88     	ld hl,Filas
1241  8CDF ED 5B 08 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1242  8CE3 01 3D 00     	ld bc,61
1243  8CE6 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1244  8CE8
1245  8CE8              ; 	Entidad_sospechosa. 20/4/23
1246  8CE8
1247  8CE8 3A E0 88     	ld a,(Impacto)
1248  8CEB A7           	and a
1249  8CEC 28 0C        	jr z,1F
1250  8CEE
1251  8CEE 2A 08 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1252  8CF1 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1253  8CF4 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1254  8CF5 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1255  8CF7 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1256  8CFA
1257  8CFA              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1258  8CFA
1259  8CFA 2A 0A 89     1 ld hl,(Puntero_restore_caja)
1260  8CFD 7E           	ld a,(hl)
1261  8CFE A7           	and a
1262  8CFF F5           	push af
1263  8D00 28 08        	jr z,2F
1264  8D02
1265  8D02 11 C7 88     	ld de,Filas
1266  8D05 01 3D 00     	ld bc,61
1267  8D08 ED B0        	ldir
1268  8D0A
1269  8D0A CD 26 8D     2 call Incrementa_punteros_de_cajas
1270  8D0D
1271  8D0D F1           	pop af
1272  8D0E 28 EA        	jr z,1B
1273  8D10
1274  8D10 C1           	pop bc
1275  8D11 D1           	pop de
1276  8D12 E1           	pop hl
1277  8D13
1278  8D13 C9           	ret
1279  8D14
1280  8D14              ; **************************************************************************************************
1281  8D14              ;
1282  8D14              ;	12/05/23
1283  8D14              ;
1284  8D14              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1285  8D14
1286  8D14 E5           Restore_entidad push hl
1287  8D15 D5           	push de
1288  8D16 C5            	push bc
1289  8D17
1290  8D17 2A 08 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1291  8D1A 11 C7 88     	ld de,Filas
1292  8D1D 01 3D 00     	ld bc,61
1293  8D20 ED B0        	ldir
1294  8D22
1295  8D22 C1           	pop bc
1296  8D23 D1           	pop de
1297  8D24 E1           	pop hl
1298  8D25 C9           	ret
1299  8D26
1300  8D26              ; **************************************************************************************************
1301  8D26              ;
1302  8D26              ;	08/05/23
1303  8D26              ;
1304  8D26              ;	Incrementamos los dos punteros de entidades. (+1).
1305  8D26
1306  8D26              Incrementa_punteros_de_cajas
1307  8D26
1308  8D26 2A 0A 89     	ld hl,(Puntero_restore_caja)
1309  8D29 22 08 89     	ld (Puntero_store_caja),hl
1310  8D2C 2A 0C 89     	ld hl,(Indice_restore_caja)
1311  8D2F 23           	inc hl
1312  8D30 23           	inc hl
1313  8D31 22 0C 89     	ld (Indice_restore_caja),hl
1314  8D34 CD 8B 8C         call Extrae_address
1315  8D37 22 0A 89         ld (Puntero_restore_caja),hl
1316  8D3A C9               ret
1317  8D3B
1318  8D3B              ; **************************************************************************************************
1319  8D3B              ;
1320  8D3B              ;	25/01/23
1321  8D3B              ;
1322  8D3B              ;	Restore_Amadeus
1323  8D3B              ;
1324  8D3B              ;	Cargamos en DRAW los parámetros de Amadeus.
1325  8D3B              ;
1326  8D3B
1327  8D3B E5           Restore_Amadeus	push hl
1328  8D3C D5           	push de
1329  8D3D C5            	push bc
1330  8D3E 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1331  8D41 11 C7 88     	ld de,Filas
1332  8D44 01 3D 00     	ld bc,61
1333  8D47 ED B0        	ldir
1334  8D49 C1           	pop bc
1335  8D4A D1           	pop de
1336  8D4B E1           	pop hl
1337  8D4C C9           	ret
1338  8D4D
1339  8D4D              ; *************************************************************************************************************************************************************
1340  8D4D              ;
1341  8D4D              ;	29/04/23
1342  8D4D              ;
1343  8D4D              ;	Store_Amadeus
1344  8D4D              ;
1345  8D4D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1346  8D4D              ;
1347  8D4D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1348  8D4D              ;
1349  8D4D              ;	DESTRUYE: HL y BC y DE.
1350  8D4D
1351  8D4D 21 C7 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1352  8D50 01 3D 00     	ld bc,61
1353  8D53 ED B0        	ldir
1354  8D55 C9           	ret
1355  8D56
1356  8D56              ; -----------------------------------------------------------
1357  8D56              ;
1358  8D56              ;	27/04/23
1359  8D56              ;
1360  8D56              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1361  8D56              ;
1362  8D56              ;	Destruye: HL,BC,DE,A
1363  8D56
1364  8D56 21 C7 88     Borra_datos_entidad ld hl,Filas
1365  8D59 01 3C 00     	ld bc,60
1366  8D5C AF           	xor a
1367  8D5D 77           	ld (hl),a
1368  8D5E 11 C8 88     	ld de,Filas+1
1369  8D61 ED B0        	ldir
1370  8D63 C9           	ret
1371  8D64
1372  8D64              ; -----------------------------------------------------------
1373  8D64
1374  8D64              ; Teclado.
1375  8D64
1376  8D64 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1377  8D66 DB FE        	in a,($fe)
1378  8D68 E6 01        	and $01
1379  8D6A 28 02        	jr z,1f
1380  8D6C 18 F6        	jr Pulsa_ENTER
1381  8D6E C9           1 ret
1382  8D6F
1383  8D6F              ; **************************************************************************************************
1384  8D6F              ;
1385  8D6F              ; Temporización.
1386  8D6F
1387  8D6F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1388  8D6F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1389  8D6F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1390  8D6F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1391  8D6F
1392  8D6F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1393  8D6F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1394  8D6F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1395  8D6F
1396  8D6F              ; A partir de $4f61 no hace falta DELAY.
1397  8D6F
1398  8D6F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1399  8D6F
1400  8D6F 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1401  8D72 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1402  8D73 78           	LD A,B
1403  8D74 A7           	AND A
1404  8D75 20 FB        	JR NZ,wait
1405  8D77 C9           	RET
1406  8D78
1407  8D78              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1408  8D78              ;
1409  8D78              ;	5/3/23
1410  8D78              ;
1411  8D78              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1412  8D78
1413  8D78              Movimiento_Amadeus
1414  8D78
1415  8D78              ; Disparo.
1416  8D78
1417  8D78 3A 56 89     	ld a,(Disparo_Amadeus)
1418  8D7B A7           	and a
1419  8D7C 20 02        	jr nz,1F
1420  8D7E 18 15        	jr 2F
1421  8D80
1422  8D80 3E F7        1 ld a,$f7													; "5" para disparar.
1423  8D82 DB FE        	in a,($fe)
1424  8D84 E6 10        	and $10
1425  8D86
1426  8D86 F5           	push af
1427  8D87 CC 88 8E     	call z,Genera_disparo
1428  8D8A F1           	pop af
1429  8D8B 20 08        	jr nz,2F
1430  8D8D
1431  8D8D 3A 56 89     	ld a,(Disparo_Amadeus)
1432  8D90 EE 01        	xor 1
1433  8D92 32 56 89     	ld (Disparo_Amadeus),a
1434  8D95
1435  8D95 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1436  8D97 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1437  8D99 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1438  8D9B CC 59 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1439  8D9E
1440  8D9E 3E F7        	ld a,$f7
1441  8DA0 DB FE        	in a,($fe)
1442  8DA2 E6 01        	and $01
1443  8DA4 C8           	ret z
1444  8DA5
1445  8DA5 3E F7        	ld a,$f7
1446  8DA7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1447  8DA9 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1448  8DAB CC 3B 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1449  8DAE C9           	ret
1450  8DAF
1451  8DAF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1452  8DAF              ;
1453  8DAF              ;	Rutina provisional para que los malotes cagen balas.
1454  8DAF
1455  8DAF              Detecta_disparo_entidad
1456  8DAF
1457  8DAF 3A 59 89     	ld a,(Disparo_entidad)
1458  8DB2 A7           	and a
1459  8DB3 C8           	ret z
1460  8DB4
1461  8DB4              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1462  8DB4
1463  8DB4              ;	ld a,$7f				; Detecta SPACE.
1464  8DB4              ;	in a,($fe)
1465  8DB4              ;	and 1
1466  8DB4              ;	ret nz
1467  8DB4
1468  8DB4              ;	call Genera_disparo
1469  8DB4 C9           	ret
1470  8DB5
1471  8DB5              ; ----------------------------------------------------------------------
1472  8DB5              ;
1473  8DB5              ;	8/9/23
1474  8DB5
1475  8DB5              Guarda_datos_de_borrado
1476  8DB5
1477  8DB5 F3           	di
1478  8DB6
1479  8DB6 2A 1C 89     	ld hl,(Stack_snapshot)
1480  8DB9
1481  8DB9 2B           	dec hl
1482  8DBA 7E           	ld a,(hl)
1483  8DBB A7           	and a
1484  8DBC C8           	ret z										; Salimos si es álbum está vacío.
1485  8DBD
1486  8DBD 11 E6 88     	ld de,Variables_de_borrado+5
1487  8DC0 01 06 00     	ld bc,6
1488  8DC3 ED B8        	lddr
1489  8DC5
1490  8DC5 FB           	ei
1491  8DC6
1492  8DC6 C9           	ret
1493  8DC7
1494  8DC7              ; ----------------------------------------------------------------------
1495  8DC7              ;
1496  8DC7              ;	8/9/23
1497  8DC7
1498  8DC7 2A 24 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1499  8DCA 2B            	dec hl
1500  8DCB 7E           	ld a,(hl)
1501  8DCC A7           	and a
1502  8DCD C8           	ret z										; Salimos si es álbum está vacío.
1503  8DCE
1504  8DCE 11 E6 88     	ld de,Variables_de_borrado+5
1505  8DD1 01 06 00     	ld bc,6
1506  8DD4 ED B8        	lddr
1507  8DD6 C9           	ret
1508  8DD7
1509  8DD7              ; ----------------------------------------------------------------------
1510  8DD7              ;
1511  8DD7              ;	9/9/23
1512  8DD7
1513  8DD7              Repone_datos_de_borrado_Amadeus
1514  8DD7
1515  8DD7 21 E1 88     	ld hl,Variables_de_borrado
1516  8DDA 11 A0 72     	ld de,Album_de_fotos_Amadeus
1517  8DDD 01 06 00     	ld bc,6
1518  8DE0 ED B0        	ldir
1519  8DE2
1520  8DE2 EB           	ex de,hl
1521  8DE3 22 24 89     	ld (End_Snapshot_Amadeus),hl
1522  8DE6
1523  8DE6 C9           	ret
1524  8DE7
1525  8DE7              ; ----------------------------------------------------------------------
1526  8DE7              ;
1527  8DE7              ;	18/9/23
1528  8DE7              ;
1529  8DE7
1530  8DE7              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1531  8DE7              ;	_ Album_de_fotos correspondiente.
1532  8DE7
1533  8DE7              ;	DI.
1534  8DE7
1535  8DE7              Repone_datos_de_borrado
1536  8DE7
1537  8DE7 F3           	di
1538  8DE8
1539  8DE8 ED 5B 1C 89  	ld de,(Stack_snapshot)
1540  8DEC 21 E1 88     	ld hl,Variables_de_borrado
1541  8DEF 01 06 00     	ld bc,6
1542  8DF2 ED B0        	ldir
1543  8DF4
1544  8DF4 EB           	ex de,hl
1545  8DF5 22 1C 89     	ld (Stack_snapshot),hl
1546  8DF8
1547  8DF8 FB           	ei
1548  8DF9
1549  8DF9 C9           	ret
1550  8DFA
1551  8DFA              ; ----------------------------------------------------------------------
1552  8DFA              ;
1553  8DFA              ;	11/8/23
1554  8DFA
1555  8DFA              Gestiona_entidades
1556  8DFA
1557  8DFA 3E 02        	ld a,2
1558  8DFC D3 FE            out ($fe),a											; Rojo.
1559  8DFE
1560  8DFE              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1561  8DFE              ; _ , no gestionamos los álbumes de fotos.
1562  8DFE
1563  8DFE 2A 32 89     	ld hl,(Puntero_indice_album_de_fotos)
1564  8E01 01 EC 84     	ld bc,Indice_album_de_fotos
1565  8E04 A7           	and a
1566  8E05 ED 42        	sbc hl,bc
1567  8E07
1568  8E07              ;	jr z,$
1569  8E07 C8           	ret z
1570  8E08
1571  8E08              ;	call Extrae_foto_disparos
1572  8E08              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1573  8E08
1574  8E08 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1575  8E0B
1576  8E0B              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1577  8E0B
1578  8E0B 3A 04 89     	ld a,(Ctrl_1)
1579  8E0E CB 6F        	bit 5,a
1580  8E10 20 22        	jr nz,1F
1581  8E12
1582  8E12              ; No hemos terminado de guardar el último FRAME.
1583  8E12
1584  8E12 2A 32 89     	ld hl,(Puntero_indice_album_de_fotos)
1585  8E15 2B           	dec hl
1586  8E16 2B           	dec hl
1587  8E17 22 32 89     	ld (Puntero_indice_album_de_fotos),hl
1588  8E1A
1589  8E1A 2A 36 89     	ld hl,(Puntero_indice_End_Snapshot)
1590  8E1D 2B           	dec hl
1591  8E1E 2B           	dec hl
1592  8E1F 22 36 89     	ld (Puntero_indice_End_Snapshot),hl
1593  8E22 CD 8B 8C     	call Extrae_address
1594  8E25 22 3A 89     	ld (Puntero_de_End_Snapshot),hl
1595  8E28
1596  8E28 CD 8B 8C     	call Extrae_address
1597  8E2B
1598  8E2B              ; Esta vacío este album???
1599  8E2B
1600  8E2B 24           	inc h
1601  8E2C 25           	dec h
1602  8E2D 28 05        	jr z,1F
1603  8E2F
1604  8E2F              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1605  8E2F
1606  8E2F 22 1C 89     	ld (Stack_snapshot),hl
1607  8E32 18 09        	jr 2F
1608  8E34
1609  8E34              ; FRAME completo.
1610  8E34
1611  8E34 2A 32 89     1 ld hl,(Puntero_indice_album_de_fotos)
1612  8E37 CD 8B 8C     	call Extrae_address
1613  8E3A 22 1C 89     	ld (Stack_snapshot),hl
1614  8E3D
1615  8E3D              ;	En este punto:
1616  8E3D
1617  8E3D              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1618  8E3D              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1619  8E3D
1620  8E3D 21 04 89     2 ld hl,Ctrl_1
1621  8E40 CB AE        	res 5,(hl)
1622  8E42
1623  8E42 C9           	ret
1624  8E43
1625  8E43              ; -----------------------------------------------------------------------------------
1626  8E43
1627  8E43              Pinta_Amadeus
1628  8E43
1629  8E43 3E 06        	ld a,6
1630  8E45 D3 FE            out ($fe),a										; Amarillo
1631  8E47
1632  8E47 CD 57 8C        	call Calcula_malotes_Amadeus
1633  8E4A CD 0E 97     	call Extrae_foto_Amadeus
1634  8E4D CD 13 8C     	call Limpia_album_Amadeus
1635  8E50
1636  8E50 C9           	ret
1637  8E51
1638  8E51              Pinta_entidades
1639  8E51
1640  8E51 2A 32 89     	ld hl,(Puntero_indice_album_de_fotos)
1641  8E54 01 EC 84     	ld bc,Indice_album_de_fotos
1642  8E57 A7           	and a
1643  8E58 ED 42        	sbc hl,bc
1644  8E5A
1645  8E5A              ;	jr z,$
1646  8E5A C8           	ret z
1647  8E5B
1648  8E5B              ; Pintamos siempre que esté completo Album_de_fotos.
1649  8E5B
1650  8E5B CD 3B 8C     	call Calcula_numero_de_malotes
1651  8E5E CD 8C 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1652  8E61
1653  8E61 C9           	ret
1654  8E62
1655  8E62              ; -----------------------------------------------------------------------------------
1656  8E62
1657  8E62              Actualiza_relojes
1658  8E62
1659  8E62 21 51 89     	ld hl,Contador_de_frames
1660  8E65 7E           	ld a,(hl)
1661  8E66 FE FF        	cp $ff
1662  8E68 20 04        	jr nz,1F
1663  8E6A 34           	inc (hl)
1664  8E6B 21 52 89     	ld hl,Contador_de_frames_2
1665  8E6E 34           1 inc (hl)											; 0 - 255
1666  8E6F C9           	ret
1667  8E70
1668  8E70              ; ---------------------------------------------------------------
1669  8E70              ;
1670  8E70              ;	27/9/23
1671  8E70
1672  8E70              Guarda_parametros_DRAW
1673  8E70
1674  8E70 21 C7 88     	ld hl,Filas
1675  8E73 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1676  8E76 01 3D 00     	ld bc,61
1677  8E79 ED B0        	ldir
1678  8E7B C9           	ret
1679  8E7C
1680  8E7C              Recupera_parametros_DRAW
1681  8E7C
1682  8E7C 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1683  8E7F 11 C7 88     	ld de,Filas
1684  8E82 01 3D 00     	ld bc,61
1685  8E85 ED B0        	ldir
1686  8E87 C9           	ret
1687  8E88
1688  8E88              ; ---------------------------------------------------------------
1689  8E88
1690  8E88
1691  8E88              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E88              ; ******************************************************************************************************************************************************************************************
   2+ 8E88              ;
   3+ 8E88              ;   21/07/23
   4+ 8E88              ;
   5+ 8E88              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E88              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E88              ;
   8+ 8E88              ;
   9+ 8E88              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E88              ;
  11+ 8E88              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E88              ;               _ hacen las entidades hacia abajo.
  13+ 8E88              ;
  14+ 8E88              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E88              ;
  16+ 8E88              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E88              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E88              ;
  19+ 8E88              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E88              ;           _ la bala.
  21+ 8E88              ;
  22+ 8E88              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E88              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E88              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E88              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E88              ;           _ en el momento de generarse la bala)).
  27+ 8E88
  28+ 8E88              Genera_disparo
  29+ 8E88
  30+ 8E88              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E88              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E88              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E88              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E88              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E88              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E88              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E88
  38+ 8E88              ; Exclusiones:
  39+ 8E88
  40+ 8E88 3A DF 88         ld a,(Vel_down)
  41+ 8E8B 47               ld b,a
  42+ 8E8C 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E8F B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E90 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E91 3A FE 88         ld a,(Columnas)
  46+ 8E94 47               ld b,a
  47+ 8E95 3A C8 88         ld a,(Columns)
  48+ 8E98 B8               cp b
  49+ 8E99 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E9A
  51+ 8E9A              ; ----- ----- -----
  52+ 8E9A
  53+ 8E9A 3A F1 88         ld a,(Ctrl_0)
  54+ 8E9D CB 77            bit 6,a
  55+ 8E9F 20 06            jr nz,14F
  56+ 8EA1
  57+ 8EA1 3A CE 88         ld a,(Coordenada_y)
  58+ 8EA4 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EA6 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EA7
  61+ 8EA7 21 00 80     14 ld hl,Indice_disparo
  62+ 8EAA 3A CF 88         ld a,(CTRL_DESPLZ)
  63+ 8EAD 4F               ld c,a
  64+ 8EAE 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EB0              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EB0              ;                                            ""        ""       "f9", B="1"
  67+ 8EB0              ;                                            ""        ""       "fb", B="2"
  68+ 8EB0              ;                                            ""        ""       "fb", B="3"
  69+ 8EB0 A7               and a
  70+ 8EB1 28 10            jr z,1F
  71+ 8EB3 E6 01            and 1
  72+ 8EB5 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EB6
  74+ 8EB6 79               ld a,c
  75+ 8EB7 16 F9            ld d,$f9
  76+ 8EB9 23           2 inc hl
  77+ 8EBA 23               inc hl
  78+ 8EBB 04               inc b
  79+ 8EBC BA               cp d
  80+ 8EBD 28 04            jr z,1F
  81+ 8EBF 14               inc d
  82+ 8EC0 14               inc d
  83+ 8EC1 18 F6            jr 2B
  84+ 8EC3
  85+ 8EC3 CD 8B 8C     1 call Extrae_address
  86+ 8EC6 E5               push hl
  87+ 8EC7 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EC9 DD 21 54 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8ECD
  90+ 8ECD              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8ECD              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8ECD
  93+ 8ECD 3A F1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8ED0 CB 77            bit 6,a
  95+ 8ED2 20 04            jr nz,19F
  96+ 8ED4
  97+ 8ED4 AF               xor a
  98+ 8ED5 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8ED8
 100+ 8ED8 3A DB 88     19 ld a,(Cuad_objeto)
 101+ 8EDB FE 02            cp 2
 102+ 8EDD 38 66            jr c,3F
 103+ 8EDF 28 64            jr z,3F
 104+ 8EE1
 105+ 8EE1              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EE1
 107+ 8EE1 E6 01            and 1
 108+ 8EE3 28 30            jr z,4F
 109+ 8EE5
 110+ 8EE5              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EE5              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EE5              ;
 113+ 8EE5              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EE5              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EE5              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EE5
 117+ 8EE5 2A C9 88     	ld hl,(Posicion_actual)
 118+ 8EE8
 119+ 8EE8              ;   Amadeus o entidad ???.
 120+ 8EE8
 121+ 8EE8 3A F1 88         ld a,(Ctrl_0)
 122+ 8EEB CB 77            bit 6,a
 123+ 8EED 28 0A            jr z,8F
 124+ 8EEF
 125+ 8EEF              ; 	Dispara Amadeus.
 126+ 8EEF
 127+ 8EEF 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EF1 CD 7D 96         call PreviousScan
 129+ 8EF4 CD 7D 96         call PreviousScan
 130+ 8EF7
 131+ 8EF7              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EF7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EF7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EF7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EF7
 136+ 8EF7 18 11            jr 10F
 137+ 8EF9
 138+ 8EF9              ; 	Dispara Entidad.
 139+ 8EF9
 140+ 8EF9 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EFC              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EFC
 143+ 8EFC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EFC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EFC
 146+ 8EFC C5               push bc
 147+ 8EFD 06 10            ld b,16
 148+ 8EFF CD 6E 96     9 call NextScan
 149+ 8F02 10 FB            djnz 9B
 150+ 8F04 C1               pop bc
 151+ 8F05 CD 6F 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F08 18 06            jr 17F
 153+ 8F0A
 154+ 8F0A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F0A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F0A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F0A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F0A
 159+ 8F0A CD 6F 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F0D CD E4 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F10              ;                                                      ; _al generar el disparo.
 162+ 8F10
 163+ 8F10              ; 	LLegados a este punto tendremos:
 164+ 8F10              ;
 165+ 8F10              ;       Puntero_objeto_disparo en IY.
 166+ 8F10              ;       Rutinas_de_impresion en IX.
 167+ 8F10              ;       Puntero_de_impresion en HL.
 168+ 8F10              ;       Impacto/Dirección en BC.
 169+ 8F10
 170+ 8F10 CD 77 8F     17 call Almacena_disparo
 171+ 8F13 18 52            jr 6F                                             ; RET.
 172+ 8F15
 173+ 8F15              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F15              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F15              ;
 176+ 8F15              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F15              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F15              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F15
 180+ 8F15 2A C9 88     4 ld hl,(Posicion_actual)
 181+ 8F18
 182+ 8F18              ;   Amadeus o entidad ???.
 183+ 8F18
 184+ 8F18 3A F1 88         ld a,(Ctrl_0)
 185+ 8F1B CB 77            bit 6,a
 186+ 8F1D 28 0A            jr z,11F
 187+ 8F1F
 188+ 8F1F              ; 	Dispara Amadeus.
 189+ 8F1F
 190+ 8F1F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F21 CD 7D 96         call PreviousScan
 192+ 8F24 CD 7D 96         call PreviousScan
 193+ 8F27
 194+ 8F27              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F27              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F27              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F27
 199+ 8F27 18 11            jr 13F
 200+ 8F29
 201+ 8F29              ; 	Dispara Entidad.
 202+ 8F29
 203+ 8F29 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F2C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F2C
 206+ 8F2C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F2C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F2C
 209+ 8F2C C5               push bc
 210+ 8F2D 06 10            ld b,16
 211+ 8F2F CD 6E 96     12 call NextScan
 212+ 8F32 10 FB            djnz 12B
 213+ 8F34 C1               pop bc
 214+ 8F35
 215+ 8F35 CD 68 8F         call Ajusta_disparo_parte_derecha
 216+ 8F38 18 06            jr 18F
 217+ 8F3A
 218+ 8F3A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F3A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F3A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F3A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F3A
 223+ 8F3A CD 68 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F3D CD E4 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F40              ;                                                       ; _al generar el disparo.
 226+ 8F40
 227+ 8F40              ; LLegados a este punto tendremos:
 228+ 8F40              ;
 229+ 8F40              ;       Puntero_objeto_disparo en IY.
 230+ 8F40              ;       Rutinas_de_impresion en IX.
 231+ 8F40              ;       Puntero_de_impresion en HL.
 232+ 8F40              ;       Impacto/Dirección en BC.
 233+ 8F40
 234+ 8F40 CD 77 8F     18 call Almacena_disparo
 235+ 8F43 18 22            jr 6F                                               ; RET.
 236+ 8F45
 237+ 8F45              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F45
 239+ 8F45 28 11        3 jr z,5F
 240+ 8F47
 241+ 8F47              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F47              ;
 243+ 8F47              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F47              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F47              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F47              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F47
 248+ 8F47              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F47              ;	   ""        ""       "f9", B="1"
 250+ 8F47              ;	   ""        ""       "fb", B="2"
 251+ 8F47              ; 	   ""        ""       "fb", B="3"
 252+ 8F47
 253+ 8F47 2A C9 88     	ld hl,(Posicion_actual)
 254+ 8F4A CD 6E 96     	call NextScan
 255+ 8F4D
 256+ 8F4D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F4D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F4D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F4D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F4D
 261+ 8F4D CD 6F 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F50
 263+ 8F50              ; 	No se produce impacto. B="$80"
 264+ 8F50              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F50
 266+ 8F50 01 80 80         ld bc,$8080
 267+ 8F53
 268+ 8F53              ; 	LLegados a este punto tendremos:
 269+ 8F53              ;
 270+ 8F53              ;       Puntero_objeto_disparo en IY.
 271+ 8F53              ;       Rutinas_de_impresion en IX.
 272+ 8F53              ;       Puntero_de_impresion en HL.
 273+ 8F53              ;       Impacto/Dirección en BC.
 274+ 8F53
 275+ 8F53 CD 77 8F         call Almacena_disparo
 276+ 8F56 18 0F            jr 6F                                           ; RET.
 277+ 8F58
 278+ 8F58              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F58              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F58              ;
 281+ 8F58              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F58              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F58              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F58              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F58
 286+ 8F58 2A C9 88     5 ld hl,(Posicion_actual)
 287+ 8F5B CD 6E 96     	call NextScan
 288+ 8F5E
 289+ 8F5E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F5E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F5E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F5E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F5E
 294+ 8F5E CD 68 8F         call Ajusta_disparo_parte_derecha
 295+ 8F61
 296+ 8F61              ; 	No se produce impacto. B="$80"
 297+ 8F61              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F61
 299+ 8F61 01 80 80     15 ld bc,$8080
 300+ 8F64
 301+ 8F64              ; 	LLegados a este punto tendremos:
 302+ 8F64              ;
 303+ 8F64              ;       Puntero_objeto_disparo en IY.
 304+ 8F64              ;       Rutinas_de_impresion en IX.
 305+ 8F64              ;       Puntero_de_impresion en HL.
 306+ 8F64              ;       Impacto/Dirección en BC.
 307+ 8F64
 308+ 8F64 CD 77 8F         call Almacena_disparo
 309+ 8F67
 310+ 8F67 C9           6 ret
 311+ 8F68
 312+ 8F68              ; ----------------------------------------------------------------
 313+ 8F68              ;
 314+ 8F68              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F68              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F68              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F68
 318+ 8F68 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F69 FE 02            cp 2
 320+ 8F6B 38 01            jr c,1F
 321+ 8F6D 23               inc hl
 322+ 8F6E C9           1 ret
 323+ 8F6F
 324+ 8F6F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F70 FE 01        	cp 1
 326+ 8F72 20 01        	jr nz,1F
 327+ 8F74 2B           	dec hl
 328+ 8F75 2B           1 dec hl
 329+ 8F76 C9               ret
 330+ 8F77
 331+ 8F77              ; ----------------------------------------------------------------
 332+ 8F77              ;
 333+ 8F77              ;   25/02/23
 334+ 8F77              ;
 335+ 8F77              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F77              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F77              ;
 338+ 8F77              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F77              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F77
 341+ 8F77              Almacena_disparo
 342+ 8F77
 343+ 8F77 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F78 F1               pop af
 345+ 8F79 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F7A
 347+ 8F7A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F7B E6 01            and 1
 349+ 8F7D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F7F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F7F              ; 	Dispara AMADEUS.
 352+ 8F7F
 353+ 8F7F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F7F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F7F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F7F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F7F
 358+ 8F7F C5               push bc
 359+ 8F80 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F83 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F86 A7               and a
 362+ 8F87 ED 42            sbc hl,bc
 363+ 8F89 CC 0C 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F8C C1               pop bc
 365+ 8F8D 28 54            jr z,4F
 366+ 8F8F
 367+ 8F8F 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F92 23               inc hl
 369+ 8F93 23               inc hl
 370+ 8F94 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F97              ;                                                   ; _ Disparo_(+1).
 372+ 8F97 18 18            jr 2F
 373+ 8F99
 374+ 8F99              ; Dispara una entidad.
 375+ 8F99
 376+ 8F99 C5           1 push bc
 377+ 8F9A 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F9D 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FA0 A7               and a
 380+ 8FA1 ED 42            sbc hl,bc
 381+ 8FA3 CC 05 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FA6 C1               pop bc
 383+ 8FA7 28 3A            jr z,4F
 384+ 8FA9
 385+ 8FA9 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FAC 23               inc hl
 387+ 8FAD 23               inc hl
 388+ 8FAE 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FB1              ;                                                   ; _ Disparo_(+1).
 390+ 8FB1 CD 8B 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FB4              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FB4              ;
 393+ 8FB4              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FB4              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FB4              ;                                                     Puntero_de_impresion en HL.
 396+ 8FB4              ;                                                     Impacto/Dirección en BC.
 397+ 8FB4
 398+ 8FB4 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FB5 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FB6 23               inc hl                                          ; _ al siguiente.
 401+ 8FB7 A7               and a
 402+ 8FB8 20 C0            jr nz,3B
 403+ 8FBA
 404+ 8FBA 08               ex af,af
 405+ 8FBB ED 73 16 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FBF F9               ld sp,hl
 407+ 8FC0
 408+ 8FC0 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FC2 F5               push af                                         ; Puntero de impresión.
 410+ 8FC3 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FC5 C5               push bc                                         ; Control.
 412+ 8FC6
 413+ 8FC6 ED 7B 16 89      ld sp,(Stack)
 414+ 8FCA
 415+ 8FCA              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FCA
 417+ 8FCA 21 04 89     	ld hl,Ctrl_1
 418+ 8FCD CB C6        	set 0,(hl)
 419+ 8FCF
 420+ 8FCF DD E5        	push ix
 421+ 8FD1 E1               pop hl
 422+ 8FD2 F5               push af
 423+ 8FD3 DD E1            pop ix
 424+ 8FD5
 425+ 8FD5 CD A0 7F     	call Guarda_foto_registros
 426+ 8FD8
 427+ 8FD8 21 04 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FDB CB 86        	res 0,(hl)
 429+ 8FDD
 430+ 8FDD              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FDD              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FDD
 433+ 8FDD CD 0C 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FE0 CD 05 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FE3
 436+ 8FE3 C9           4 ret
 437+ 8FE4
 438+ 8FE4              ; ----------------------------------------------------------------
 439+ 8FE4              ;
 440+ 8FE4              ;   4/3/23
 441+ 8FE4              ;
 442+ 8FE4              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FE4              ;   _ al generarse el disparo.
 444+ 8FE4              ;
 445+ 8FE4              ;       "$80" ..... No se produce colisión.
 446+ 8FE4              ;       "$81" ..... Se produce colisión.
 447+ 8FE4              ;
 448+ 8FE4              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FE4              ;         _ que forman el disparo.
 450+ 8FE4
 451+ 8FE4
 452+ 8FE4              Comprueba_Colision
 453+ 8FE4
 454+ 8FE4              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FE4
 456+ 8FE4 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FE6 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FE7
 459+ 8FE7 CD 1D 90         call Modifica_H_Velocidad_disparo
 460+ 8FEA
 461+ 8FEA 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FEB FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FED 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FEF
 465+ 8FEF 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FF1 CD 0D 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FF4
 468+ 8FF4 7B               ld a,e
 469+ 8FF5 E6 01            and 1
 470+ 8FF7 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FF9              ;                                                  ; _ para activar IMPACTO.
 472+ 8FF9 E1               pop hl
 473+ 8FFA E5               push hl
 474+ 8FFB CD 6E 96         call NextScan
 475+ 8FFE
 476+ 8FFE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FFF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9001 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9003              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9003 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9005 CD 0D 90         call Bucle_2
 482+ 9008
 483+ 9008 43           1 ld b,e
 484+ 9009 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 900A FD E1            pop iy
 486+ 900C C9               ret
 487+ 900D
 488+ 900D              ; ---------- ----------
 489+ 900D
 490+ 900D 06 02        Bucle_2 ld b,2
 491+ 900F FD 7E 00     2 ld a,(iy)
 492+ 9012 A6               and (hl)
 493+ 9013 28 02            jr z,1F
 494+ 9015 1E 81            ld e,$81
 495+ 9017 23           1 inc hl
 496+ 9018 FD 23            inc iy
 497+ 901A 10 F3            djnz 2B
 498+ 901C C9               ret
 499+ 901D
 500+ 901D              ; ---------- ----------
 501+ 901D              ;
 502+ 901D              ;   21/7/23
 503+ 901D
 504+ 901D              Modifica_H_Velocidad_disparo
 505+ 901D
 506+ 901D 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9020 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9022 D0               ret nc                                         ; _ incrementamos H.
 509+ 9023 24               inc h
 510+ 9024
 511+ 9024 C9               ret
 512+ 9025
 513+ 9025              ; -------------------------------------------------------------------------------------------------------------
 514+ 9025              ;
 515+ 9025              ;   11/04/23
 516+ 9025              ;
 517+ 9025              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9025              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9025              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9025              ;
 521+ 9025              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9025
 523+ 9025              Compara_coordenadas_X
 524+ 9025
 525+ 9025              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9025              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9025
 528+ 9025              ; Preparamos registros:
 529+ 9025
 530+ 9025 21 CD 88         ld hl,Filas+6
 531+ 9028 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9029 23               inc hl
 533+ 902A 23               inc hl
 534+ 902B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 902C 43               ld b,e
 536+ 902D
 537+ 902D 21 DB 88         ld hl,Filas+20
 538+ 9030 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9031 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 9034 CD 50 92         call Guarda_coordenadas_X
 541+ 9037
 542+ 9037              ; Preparamos registros:
 543+ 9037
 544+ 9037 21 A4 85         ld hl,Amadeus_db+6
 545+ 903A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 903B 23               inc hl
 547+ 903C 23               inc hl
 548+ 903D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 903E 7B               ld a,e
 550+ 903F 08               ex af,af'
 551+ 9040 21 B2 85         ld hl,Amadeus_db+20
 552+ 9043 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9044 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 9047 CD 50 92         call Guarda_coordenadas_X
 555+ 904A
 556+ 904A              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 904A              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 904A
 559+ 904A 04               inc b
 560+ 904B 05               dec b
 561+ 904C 28 04            jr z,1F
 562+ 904E 06 03            ld b,3
 563+ 9050 18 02            jr 2F
 564+ 9052 06 02        1 ld b,2
 565+ 9054 08           2 ex af,af'
 566+ 9055 3C               inc a
 567+ 9056 3D               dec a
 568+ 9057 28 04            jr z,5F
 569+ 9059 0E 03            ld c,3
 570+ 905B 18 02            jr 6F
 571+ 905D 0E 02        5 ld c,2
 572+ 905F 79           6 ld a,c
 573+ 9060 08               ex af,af'
 574+ 9061 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 9064 1A           4 ld a,(de)
 576+ 9065 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 9068 BE           3 cp (hl)
 578+ 9069 28 0E            jr z,7F
 579+ 906B 23               inc hl
 580+ 906C 0D               dec c
 581+ 906D 20 F9            jr nz,3B
 582+ 906F 13               inc de
 583+ 9070 08               ex af,af'
 584+ 9071 4F               ld c,a
 585+ 9072 08               ex af,af'
 586+ 9073 10 EF            djnz 4B
 587+ 9075
 588+ 9075              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9075
 590+ 9075 CD 8C 92     8 call Limpia_Coordenadas_X
 591+ 9078 C9               ret
 592+ 9079
 593+ 9079 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 907B 32 E0 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 907E 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9081 CB D6            set 2,(hl)
 597+ 9083 18 F0            jr 8B
 598+ 9085
 599+ 9085              ; -----------------------------------------------------------------------
 600+ 9085              ;
 601+ 9085              ;   17/04/23
 602+ 9085              ;
 603+ 9085
 604+ 9085              Detecta_colision_nave_entidad
 605+ 9085
 606+ 9085              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9085
 608+ 9085 2A C9 88         ld hl,(Posicion_actual)
 609+ 9088 CD C9 95         call Calcula_puntero_de_impresion
 610+ 908B
 611+ 908B              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 908B              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 908B
 614+ 908B DD E5            push ix
 615+ 908D E1               pop hl
 616+ 908E E5               push hl
 617+ 908F
 618+ 908F              ; ----- ----- -----
 619+ 908F 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9091 06 0A            ld b,10
 621+ 9093 CD C3 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9096 7B               ld a,e
 623+ 9097 FE 05            cp 5
 624+ 9099 38 0E            jr c,3F
 625+ 909B
 626+ 909B              ; LLegados a este punto:
 627+ 909B              ;
 628+ 909B              ;   HAY COLISIÓN !!!!!.
 629+ 909B              ;
 630+ 909B              ;   .db (Impacto) de Amadeus a "1".
 631+ 909B              ;   SET el bit3 de (Impacto2).
 632+ 909B              ;
 633+ 909B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 909B
 635+ 909B 21 B7 85         ld hl,Amadeus_db+25
 636+ 909E 36 01            ld (hl),1
 637+ 90A0 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90A3 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90A5 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90A7 18 18            jr 1F
 641+ 90A9
 642+ 90A9              ; -----
 643+ 90A9
 644+ 90A9 E1           3 pop hl
 645+ 90AA CD 6E 96         call NextScan
 646+ 90AD E5               push hl
 647+ 90AE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90AF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90B1 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90B3 30 0C            jr nc,1F
 651+ 90B5              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90B5 10 DC            djnz 2B
 653+ 90B7
 654+ 90B7              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90B7
 656+ 90B7              ; LLegados a este punto:
 657+ 90B7              ;
 658+ 90B7              ;   NO HAY COLISIÓN !!!!!.
 659+ 90B7              ;
 660+ 90B7              ;   .db (Impacto) de Amadeus a "0".
 661+ 90B7              ;   RES el bit2 de (Impacto2).
 662+ 90B7              ;
 663+ 90B7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90B7              ;   Lo colocamos a "0".
 665+ 90B7
 666+ 90B7 21 43 89         ld hl,Impacto2
 667+ 90BA CB 96            res 2,(hl)
 668+ 90BC 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90BF 36 00            ld (hl),0
 670+ 90C1
 671+ 90C1 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90C2 C9               ret
 673+ 90C3
 674+ 90C3               ; ---------- ----------
 675+ 90C3
 676+ 90C3 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90C4 3A C8 88         ld a,(Columns)
 678+ 90C7 47               ld b,a
 679+ 90C8 FD 7E 00     2 ld a,(iy)
 680+ 90CB BE               cp (hl)
 681+ 90CC 28 01            jr z,1F
 682+ 90CE
 683+ 90CE 1C               inc e
 684+ 90CF
 685+ 90CF 23           1 inc hl
 686+ 90D0 FD 23            inc iy
 687+ 90D2 10 F4            djnz 2B
 688+ 90D4 C1               pop bc
 689+ 90D5 C9               ret
 690+ 90D6
 691+ 90D6              ; -------------------------------------------------------------------------------------------------------------
 692+ 90D6              ;
 693+ 90D6              ;   13/03/23
 694+ 90D6              ;
 695+ 90D6              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90D6              ;
 697+ 90D6              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90D6
 699+ 90D6 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90D9 7E               ld a,(hl)
 701+ 90DA A7               and a
 702+ 90DB C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90DC
 704+ 90DC 44               ld b,h
 705+ 90DD 4D               ld c,l
 706+ 90DE 2A 1E 89         ld hl,(Stack_snapshot_disparos)
 707+ 90E1 E5               push hl
 708+ 90E2 A7               and a
 709+ 90E3 ED 42            sbc hl,bc
 710+ 90E5 E5               push hl
 711+ 90E6 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90E7
 713+ 90E7 E1               pop hl
 714+ 90E8 54               ld d,h
 715+ 90E9 5D               ld e,l
 716+ 90EA 1B               dec de
 717+ 90EB ED B8            lddr                                                ; Limpiamos.
 718+ 90ED
 719+ 90ED 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90F0 22 1E 89         ld (Stack_snapshot_disparos),hl
 721+ 90F3
 722+ 90F3 C9               ret
 723+ 90F4
 724+ 90F4              ; -------------------------------------------------------------------------------------------------------------
 725+ 90F4              ;
 726+ 90F4              ;   18/07/23
 727+ 90F4              ;
 728+ 90F4
 729+ 90F4              Motor_de_disparos
 730+ 90F4
 731+ 90F4              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90F4
 733+ 90F4 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90F7 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90FA
 736+ 90FA CD 8B 8C     2 call Extrae_address
 737+ 90FD 7E               ld a,(hl)
 738+ 90FE A7               and a
 739+ 90FF 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9101
 741+ 9101              ; ----- ----- ----- ----- ----- -----
 742+ 9101
 743+ 9101 C5               push bc
 744+ 9102 CD C6 91         call foto_disparo_a_borrar
 745+ 9105
 746+ 9105              ; Existe colisión con este disparo???
 747+ 9105
 748+ 9105 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9106 7E               ld a,(hl)
 750+ 9107 2B               dec hl
 751+ 9108 E6 01            and 1
 752+ 910A 28 1D            jr z,9F
 753+ 910C
 754+ 910C              ;   En este punto:
 755+ 910C              ;
 756+ 910C              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 910C              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 910C              ;   _con la entidad).
 759+ 910C              ;
 760+ 910C              ;   Disparo_2A defw 0                                ; Control.
 761+ 910C              ;    defw 0                                          ; Puntero objeto.
 762+ 910C              ;    defw 0                                          ; Puntero de impresión.
 763+ 910C              ;    defw 0                                          ; Rutina de impresión.
 764+ 910C
 765+ 910C E5               push hl
 766+ 910D
 767+ 910D 06 04            ld b,4
 768+ 910F 23           19 inc hl
 769+ 9110 10 FD            djnz 19B
 770+ 9112
 771+ 9112 CD 8B 8C         call Extrae_address
 772+ 9115 CD 37 9D         call Genera_coordenadas_disparo
 773+ 9118
 774+ 9118              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9118
 776+ 9118 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 911B 72               ld (hl),d
 778+ 911C 23               inc hl
 779+ 911D 73               ld (hl),e
 780+ 911E
 781+ 911E              ; Elimino el disparo de la base de datos.
 782+ 911E
 783+ 911E E1               pop hl
 784+ 911F CD 45 92         call Elimina_disparo_de_base_de_datos
 785+ 9122 21 43 89         ld hl,Impacto2
 786+ 9125 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9127
 788+ 9127 18 06            jr 11F
 789+ 9129
 790+ 9129 CD EF 91     9 call Mueve_disparo
 791+ 912C CD C6 91         call foto_disparo_a_borrar
 792+ 912F
 793+ 912F C1           11 pop bc
 794+ 9130 18 04            jr 7F
 795+ 9132
 796+ 9132              ; ----- ----- ----- ----- ----- -----
 797+ 9132
 798+ 9132 ED 42        1 sbc hl,bc
 799+ 9134 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9136
 801+ 9136 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9139 23               inc hl
 803+ 913A 23               inc hl
 804+ 913B 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 913E 18 BA            jr 2B
 806+ 9140
 807+ 9140 CD 0C 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9143              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9143
 810+ 9143              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9143
 812+ 9143 01 8A 85         ld bc,Disparo_11
 813+ 9146 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9149
 815+ 9149 CD 8B 8C     5 call Extrae_address
 816+ 914C 7E               ld a,(hl)
 817+ 914D A7               and a
 818+ 914E 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9150
 820+ 9150              ; ----- ----- ----- ----- ----- -----
 821+ 9150
 822+ 9150 C5               push bc
 823+ 9151 CD C6 91         call foto_disparo_a_borrar
 824+ 9154
 825+ 9154              ; Existe colisión con este disparo???
 826+ 9154
 827+ 9154 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9155 7E               ld a,(hl)
 829+ 9156 2B               dec hl
 830+ 9157 E6 01            and 1
 831+ 9159 28 4D            jr z,10F
 832+ 915B
 833+ 915B              ;! La colisión se produce con Amadeus???
 834+ 915B              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 915B
 836+ 915B E5               push hl
 837+ 915C
 838+ 915C 06 04            ld b,4
 839+ 915E 23           16 inc hl
 840+ 915F 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9161
 842+ 9161 CD 8B 8C         call Extrae_address
 843+ 9164 CD 37 9D         call Genera_coordenadas_disparo
 844+ 9167
 845+ 9167 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9168 FE 16            cp $16
 847+ 916A 38 2A            jr c,15F
 848+ 916C
 849+ 916C
 850+ 916C              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 916C
 852+ 916C D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 916D
 854+ 916D              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 916D
 856+ 916D
 857+ 916D 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9170
 859+ 9170              ; Coordenada X de Amadeus en D.
 860+ 9170
 861+ 9170 7D               ld a,l
 862+ 9171 E6 1F            and $1F
 863+ 9173 57               ld d,a
 864+ 9174
 865+ 9174 21 A6 85         ld hl,Amadeus_db+8
 866+ 9177 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9178
 868+ 9178 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 917B CD 50 92         call Guarda_coordenadas_X
 870+ 917E
 871+ 917E D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 917F
 873+ 917F              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 917F
 875+ 917F 06 02            ld b,2
 876+ 9181 C5           20 push bc
 877+ 9182
 878+ 9182 06 03            ld b,3
 879+ 9184 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 9187 7E           18 ld a,(hl)
 881+ 9188 BA               cp d
 882+ 9189 20 04            jr nz,17F
 883+ 918B
 884+ 918B              ;! Colisión Amadeus !!!!!!!!!!
 885+ 918B
 886+ 918B C1               pop bc
 887+ 918C E1               pop hl
 888+ 918D 18 0D            jr 14F
 889+ 918F
 890+ 918F 23           17 inc hl
 891+ 9190 10 F5            djnz 18B
 892+ 9192
 893+ 9192 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9193
 895+ 9193 C1               pop bc
 896+ 9194 10 EB            djnz 20B
 897+ 9196
 898+ 9196
 899+ 9196              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9196              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9196
 902+ 9196 E1           15 pop hl
 903+ 9197 23               inc hl
 904+ 9198 35               dec (hl)
 905+ 9199 2B               dec hl
 906+ 919A 18 0C            jr 10F
 907+ 919C
 908+ 919C              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 919C              ; _ almacén de coordenadas_X de Amadeus.
 910+ 919C
 911+ 919C E5           14 push hl
 912+ 919D CD 45 92         call Elimina_disparo_de_base_de_datos
 913+ 91A0 21 43 89         ld hl,Impacto2
 914+ 91A3 CB CE            set 1,(hl)
 915+ 91A5 E1               pop hl
 916+ 91A6 18 06            jr 12F
 917+ 91A8
 918+ 91A8              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91A8
 920+ 91A8 CD EF 91     10 call Mueve_disparo
 921+ 91AB CD C6 91         call foto_disparo_a_borrar
 922+ 91AE C1           12 pop bc
 923+ 91AF
 924+ 91AF 18 04            jr 8F
 925+ 91B1
 926+ 91B1              ; ----- ----- ----- ----- ----- -----
 927+ 91B1
 928+ 91B1 ED 42        4 sbc hl,bc
 929+ 91B3 28 0A            jr z,6F
 930+ 91B5
 931+ 91B5 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91B8 23               inc hl
 933+ 91B9 23               inc hl
 934+ 91BA 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91BD 18 8A            jr 5B
 936+ 91BF
 937+ 91BF CD 05 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91C2 CD 8C 92         call Limpia_Coordenadas_X
 939+ 91C5 C9               ret
 940+ 91C6
 941+ 91C6              ; ------------------------------------------------------------------
 942+ 91C6
 943+ 91C6              foto_disparo_a_borrar
 944+ 91C6
 945+ 91C6 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91C7 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91C8 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91C9
 949+ 91C9 E5               push hl
 950+ 91CA 23               inc hl
 951+ 91CB 23               inc hl
 952+ 91CC ED 73 16 89      ld (Stack),sp
 953+ 91D0 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91D1 FD E1            pop iy
 955+ 91D3 DD E1            pop ix
 956+ 91D5 E1               pop hl
 957+ 91D6 ED 7B 16 89      ld sp,(Stack)
 958+ 91DA 3A 04 89         ld a,(Ctrl_1)
 959+ 91DD CB C7            set 0,a
 960+ 91DF 32 04 89         ld (Ctrl_1),a
 961+ 91E2 CD A0 7F         call Guarda_foto_registros
 962+ 91E5 3A 04 89         ld a,(Ctrl_1)
 963+ 91E8 CB 87            res 0,a
 964+ 91EA 32 04 89         ld (Ctrl_1),a
 965+ 91ED E1               pop hl
 966+ 91EE C9               ret
 967+ 91EF
 968+ 91EF              ;---------------------------------------------------
 969+ 91EF              ;
 970+ 91EF              ;   18/07/23
 971+ 91EF              ;
 972+ 91EF
 973+ 91EF              Mueve_disparo
 974+ 91EF
 975+ 91EF              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91EF              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91EF              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91EF
 979+ 91EF E5               push hl
 980+ 91F0
 981+ 91F0 7E               ld a,(hl)
 982+ 91F1
 983+ 91F1 06 04            ld b,4
 984+ 91F3 23           1 inc hl
 985+ 91F4 10 FD            djnz 1B
 986+ 91F6
 987+ 91F6              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91F6
 989+ 91F6 CD 8B 8C         call Extrae_address
 990+ 91F9
 991+ 91F9 E6 01            and 1
 992+ 91FB 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91FD
 994+ 91FD              ; Disparo hacia arriba, (Amadeus).
 995+ 91FD
 996+ 91FD              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91FD              ; _ de la dificultad.
 998+ 91FD
 999+ 91FD CD 7D 96         call PreviousScan
1000+ 9200 CD 7D 96         call PreviousScan
1001+ 9203 CD 7D 96         call PreviousScan
1002+ 9206 CD 7D 96         call PreviousScan
1003+ 9209
1004+ 9209              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9209
1006+ 9209 7C               ld a,h
1007+ 920A FE 40            cp $40
1008+ 920C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 920E
1010+ 920E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 920E
1012+ 920E EB               ex de,hl
1013+ 920F 06 04            ld b,4
1014+ 9211 2B           6 dec hl
1015+ 9212 10 FD            djnz 6B
1016+ 9214
1017+ 9214 CD 45 92         call Elimina_disparo_de_base_de_datos
1018+ 9217 E1               pop hl
1019+ 9218 18 10            jr 7F
1020+ 921A
1021+ 921A              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 921A              ; HL contiene el puntero de impresión del disparo.
1023+ 921A              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 921A
1025+ 921A D5           3 push de
1026+ 921B C5               push bc
1027+ 921C
1028+ 921C CD E4 8F         call Comprueba_Colision
1029+ 921F
1030+ 921F              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 921F
1032+ 921F 78               ld a,b
1033+ 9220
1034+ 9220 C1               pop bc
1035+ 9221 D1               pop de
1036+ 9222
1037+ 9222 EB               ex de,hl
1038+ 9223
1039+ 9223 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9224 23               inc hl                                      ; _ movimiento.
1041+ 9225 72               ld (hl),d
1042+ 9226
1043+ 9226 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9227
1045+ 9227 23               inc hl                                      ; _ en curso.
1046+ 9228 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9229 2B               dec hl
1048+ 922A
1049+ 922A C9           7 ret
1050+ 922B
1051+ 922B              ; Disparo hacia abajo, (Entidad).
1052+ 922B
1053+ 922B 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 922E 47               ld b,a
1055+ 922F
1056+ 922F CD 6E 96     4 call NextScan
1057+ 9232 10 FB            djnz 4B
1058+ 9234
1059+ 9234              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9234
1061+ 9234 7C               ld a,h
1062+ 9235 FE 58            cp $58
1063+ 9237 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9239
1065+ 9239 EB               ex de,hl
1066+ 923A 06 04            ld b,4
1067+ 923C 2B           5 dec hl
1068+ 923D 10 FD            djnz 5B
1069+ 923F
1070+ 923F CD 45 92         call Elimina_disparo_de_base_de_datos
1071+ 9242 E1               pop hl
1072+ 9243 18 E5            jr 7B
1073+ 9245
1074+ 9245              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9245
1076+ 9245 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9248 AF               xor a
1078+ 9249 77               ld (hl),a
1079+ 924A 54               ld d,h
1080+ 924B 5D               ld e,l
1081+ 924C 13               inc de
1082+ 924D ED B0            ldir
1083+ 924F C9               ret
1084+ 9250
1085+ 9250              ; -----------------------------------------------------------------
1086+ 9250              ;
1087+ 9250              ;   19/7/23
1088+ 9250              ;
1089+ 9250              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9250              ;
1091+ 9250              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9250              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9250              ;
1094+ 9250              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9250              ;
1096+ 9250              ;   INPUTS:
1097+ 9250              ;
1098+ 9250              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9250              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9250
1101+ 9250              ;   MODIFICA: A, HL, BC y DE.
1102+ 9250
1103+ 9250              Guarda_coordenadas_X
1104+ 9250
1105+ 9250 7B               ld a,e
1106+ 9251 A7               and a
1107+ 9252 20 04            jr nz,1F
1108+ 9254
1109+ 9254 06 02            ld b,2
1110+ 9256 18 02            jr 2F
1111+ 9258
1112+ 9258 06 03        1 ld b,3
1113+ 925A 72           2 ld (hl),d
1114+ 925B 23               inc hl
1115+ 925C 14               inc d
1116+ 925D 10 FB            djnz 2B
1117+ 925F
1118+ 925F C9               ret
1119+ 9260
1120+ 9260              ; -----------------------------------------------------------------
1121+ 9260              ;
1122+ 9260              ;   12/04/23
1123+ 9260              ;
1124+ 9260
1125+ 9260 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9263 A7               and a
1127+ 9264 C8               ret z
1128+ 9265
1129+ 9265 FE 04            cp 4
1130+ 9267 20 09            jr nz,1F
1131+ 9269
1132+ 9269
1133+ 9269              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9269
1135+ 9269 CD 85 90         call Detecta_colision_nave_entidad
1136+ 926C
1137+ 926C 21 43 89         ld hl,Impacto2
1138+ 926F CB 5E            bit 3,(hl)
1139+ 9271 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9272
1141+ 9272              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9272              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9272
1144+ 9272 21 43 89     1 ld hl,Impacto2
1145+ 9275 CB 4E            bit 1,(hl)
1146+ 9277 28 07            jr z,2F
1147+ 9279
1148+ 9279 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 927C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 927E 18 0B            jr 3F
1151+ 9280
1152+ 9280 21 43 89     2 ld hl,Impacto2
1153+ 9283 CB 46            bit 0,(hl)
1154+ 9285 C8               ret z
1155+ 9286
1156+ 9286              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9286
1158+ 9286 21 04 89         ld hl,Ctrl_1
1159+ 9289 CB D6            set 2,(hl)
1160+ 928B
1161+ 928B C9           3 ret
1162+ 928C
1163+ 928C              ; -----------------------------------------------------------------
1164+ 928C              ;
1165+ 928C              ;   19/7/23
1166+ 928C              ;
1167+ 928C              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 928C
1169+ 928C AF           Limpia_Coordenadas_X xor a
1170+ 928D 06 06            ld b,6
1171+ 928F 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 9292 77           1 ld (hl),a
1173+ 9293 23               inc hl
1174+ 9294 10 FC            djnz 1B
1175+ 9296 C9               ret
1176+ 9297
1177+ 9297              ; -----------------------------------------------------------------
1178+ 9297              ;
1179+ 9297              ;   25/04/23
1180+ 9297              ;
1181+ 9297
1182+ 9297              Determina_resultado_comparativa
1183+ 9297
1184+ 9297              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9297              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9297              ;
1187+ 9297              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9297              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9297              ;
1190+ 9297              ;   SBC HL,DE
1191+ 9297
1192+ 9297              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9297              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9297
1195+ 9297              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9297              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9297
1198+ 9297
1199+ 9297 3A DB 88         ld a,(Cuad_objeto)
1200+ 929A FE 02            cp 2
1201+ 929C 28 26            jr z,2F
1202+ 929E 38 24            jr c,2F
1203+ 92A0
1204+ 92A0              ; Cuadrantes 3º y 4º
1205+ 92A0
1206+ 92A0 E6 01            and 1
1207+ 92A2 28 10            jr z,4F
1208+ 92A4
1209+ 92A4              ; Cuadrante 3º
1210+ 92A4
1211+ 92A4 7C               ld a,h
1212+ 92A5 06 00            ld b,0
1213+ 92A7
1214+ 92A7 CD 32 93         call Compara_cositas_H3
1215+ 92AA
1216+ 92AA 04               inc b
1217+ 92AB 05               dec b
1218+ 92AC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92AD
1220+ 92AD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92AE 06 00            ld b,0
1222+ 92B0
1223+ 92B0 CD 44 93         call Compara_cositas_L3
1224+ 92B3 C9               ret
1225+ 92B4
1226+ 92B4              ; Cuadrante 4º
1227+ 92B4
1228+ 92B4 7C           4 ld a,h
1229+ 92B5 06 00            ld b,0
1230+ 92B7
1231+ 92B7 CD 56 93         call Compara_cositas_H4
1232+ 92BA
1233+ 92BA 04               inc b
1234+ 92BB 05               dec b
1235+ 92BC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92BD
1237+ 92BD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92BE 06 00            ld b,0
1239+ 92C0
1240+ 92C0 CD 6C 93         call Compara_cositas_L4
1241+ 92C3 C9               ret
1242+ 92C4
1243+ 92C4              ; Cuadrantes 1º y 2º.
1244+ 92C4
1245+ 92C4 28 10        2 jr z,3F
1246+ 92C6
1247+ 92C6              ; 1er Cuadrante
1248+ 92C6
1249+ 92C6 7C               ld a,h
1250+ 92C7 06 00            ld b,0
1251+ 92C9
1252+ 92C9 CD 0A 93         call Compara_cositas_H1
1253+ 92CC
1254+ 92CC 04               inc b
1255+ 92CD 05               dec b
1256+ 92CE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92CF
1258+ 92CF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92D0 06 00            ld b,0
1260+ 92D2
1261+ 92D2 CD 20 93         call Compara_cositas_L1
1262+ 92D5 C9               ret
1263+ 92D6
1264+ 92D6
1265+ 92D6              ; 2º Cuadrante
1266+ 92D6
1267+ 92D6 7C           3 ld a,h
1268+ 92D7 06 00            ld b,0
1269+ 92D9
1270+ 92D9 CD E6 92         call Compara_cositas_H2
1271+ 92DC
1272+ 92DC 04               inc b
1273+ 92DD 05               dec b
1274+ 92DE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92DF
1276+ 92DF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92E0 06 00            ld b,0
1278+ 92E2
1279+ 92E2 CD F8 92         call Compara_cositas_L2
1280+ 92E5 C9               ret
1281+ 92E6
1282+ 92E6 A7           Compara_cositas_H2 and a
1283+ 92E7 28 0D            jr z,1F
1284+ 92E9              ;    cp $fd
1285+ 92E9              ;    jr z,1F
1286+ 92E9              ;    cp $fe
1287+ 92E9              ;    jr z,1F
1288+ 92E9 FE FF            cp $ff
1289+ 92EB 28 09            jr z,1F
1290+ 92ED FE 01            cp $01
1291+ 92EF 28 05            jr z,1F
1292+ 92F1 FE 02            cp $02
1293+ 92F3 28 01            jr z,1F
1294+ 92F5 C0               ret nz
1295+ 92F6 04           1 inc b
1296+ 92F7 C9               ret
1297+ 92F8
1298+ 92F8 A7           Compara_cositas_L2 and a
1299+ 92F9 28 0D            jr z,1F
1300+ 92FB              ;    cp $fd
1301+ 92FB              ;    jr z,1F
1302+ 92FB FE FE            cp $fe
1303+ 92FD 28 09            jr z,1F
1304+ 92FF FE FF            cp $ff
1305+ 9301 28 05            jr z,1F
1306+ 9303 FE 01            cp $01
1307+ 9305 28 01            jr z,1F
1308+ 9307              ;    cp $02
1309+ 9307              ;    jr z,1F
1310+ 9307 C0               ret nz
1311+ 9308 04           1 inc b
1312+ 9309 C9               ret
1313+ 930A
1314+ 930A A7           Compara_cositas_H1 and a
1315+ 930B 28 11            jr z,1F
1316+ 930D              ;    cp $fd
1317+ 930D              ;    jr z,1F
1318+ 930D              ;    cp $fe
1319+ 930D              ;    jr z,1F
1320+ 930D FE FF            cp $ff
1321+ 930F 28 0D            jr z,1F
1322+ 9311 FE 01            cp $01
1323+ 9313 28 09            jr z,1F
1324+ 9315 FE 02            cp $02
1325+ 9317 28 05            jr z,1F
1326+ 9319 FE 03            cp $03
1327+ 931B 28 01            jr z,1F
1328+ 931D C0               ret nz
1329+ 931E 04           1 inc b
1330+ 931F C9               ret
1331+ 9320
1332+ 9320 A7           Compara_cositas_L1 and a
1333+ 9321 28 0D            jr z,1F
1334+ 9323              ;    cp $fd
1335+ 9323              ;    jr z,1F
1336+ 9323              ;    cp $fe
1337+ 9323              ;    jr z,1F
1338+ 9323              ;    cp $ff
1339+ 9323              ;    jr z,1F
1340+ 9323 FE 01            cp $01
1341+ 9325 28 09            jr z,1F
1342+ 9327 FE 02            cp $02
1343+ 9329 28 05            jr z,1F
1344+ 932B FE 03            cp $03
1345+ 932D 28 01            jr z,1F
1346+ 932F C0               ret nz
1347+ 9330 04           1 inc b
1348+ 9331 C9               ret
1349+ 9332
1350+ 9332 A7           Compara_cositas_H3 and a
1351+ 9333 28 0D            jr z,1F
1352+ 9335              ;    cp $fd
1353+ 9335              ;    jr z,1F
1354+ 9335 FE FE            cp $fe
1355+ 9337 28 09            jr z,1F
1356+ 9339 FE FF            cp $ff
1357+ 933B 28 05            jr z,1F
1358+ 933D FE 01            cp $01
1359+ 933F 28 01            jr z,1F
1360+ 9341              ;    cp $02
1361+ 9341              ;    jr z,1F
1362+ 9341              ;    cp $03
1363+ 9341              ;    jr z,1F
1364+ 9341 C0               ret nz
1365+ 9342 04           1 inc b
1366+ 9343 C9               ret
1367+ 9344
1368+ 9344 A7           Compara_cositas_L3 and a
1369+ 9345 28 0D            jr z,1F
1370+ 9347              ;    cp $fd
1371+ 9347              ;    jr z,1F
1372+ 9347              ;    cp $fe
1373+ 9347              ;    jr z,1F
1374+ 9347              ;    cp $ff
1375+ 9347              ;    jr z,1F
1376+ 9347 FE 01            cp $01
1377+ 9349 28 09            jr z,1F
1378+ 934B FE 02            cp $02
1379+ 934D 28 05            jr z,1F
1380+ 934F FE 03            cp $03
1381+ 9351 28 01            jr z,1F
1382+ 9353 C0               ret nz
1383+ 9354 04           1 inc b
1384+ 9355 C9               ret
1385+ 9356
1386+ 9356 A7           Compara_cositas_H4 and a
1387+ 9357 28 11            jr z,1F
1388+ 9359 FE FD            cp $fd
1389+ 935B 28 0D            jr z,1F
1390+ 935D FE FE            cp $fe
1391+ 935F 28 09            jr z,1F
1392+ 9361 FE FF            cp $ff
1393+ 9363 28 05            jr z,1F
1394+ 9365 FE 01            cp $01
1395+ 9367 28 01            jr z,1F
1396+ 9369              ;    cp $02
1397+ 9369              ;    jr z,1F
1398+ 9369              ;    cp $03
1399+ 9369              ;    jr z,1F
1400+ 9369 C0               ret nz
1401+ 936A 04           1 inc b
1402+ 936B C9               ret
1403+ 936C
1404+ 936C A7           Compara_cositas_L4 and a
1405+ 936D 28 0D            jr z,1F
1406+ 936F              ;    cp $fd
1407+ 936F              ;    jr z,1F
1408+ 936F FE FE            cp $fe
1409+ 9371 28 09            jr z,1F
1410+ 9373 FE FF            cp $ff
1411+ 9375 28 05            jr z,1F
1412+ 9377 FE 01            cp $01
1413+ 9379 28 01            jr z,1F
1414+ 937B              ;    cp $02
1415+ 937B              ;    jr z,1F
1416+ 937B              ;    cp $03
1417+ 937B              ;    jr z,1F
1418+ 937B C0               ret nz
1419+ 937C 04           1 inc b
1420+ 937D C9               ret
# file closed: Disparo.asm
1692  937E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 937E              ; ******************************************************************************************************************************************************************************************
   2+ 937E              ;
   3+ 937E              ; 26/06/23
   4+ 937E              ;
   5+ 937E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 937E
   7+ 937E CD 62 96     Draw call Prepara_draw
   8+ 9381 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9382 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9383 28 05        	jr z,2F
  11+ 9385
  12+ 9385 3A DB 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9388 18 0C        	jr 1F
  14+ 938A
  15+ 938A 2A D9 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 938D 22 C9 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9390 CD 1F 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9393              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9393 CD C4 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9396
  21+ 9396 3A F1 88     1 ld a,(Ctrl_0)
  22+ 9399 CB 6F        	bit 5,a
  23+ 939B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 939D
  25+ 939D CD B5 93     	call Comprueba_limite_horizontal
  26+ 93A0 CD 45 94     	call Comprueba_limite_vertical
  27+ 93A3
  28+ 93A3              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93A3              ; -----------------------
  30+ 93A3              ; -----------------------
  31+ 93A3              ; -----------------------
  32+ 93A3
  33+ 93A3 CD 92 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93A6 CD C9 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93A9 CD 28 96     	call Define_rutina_de_impresion
  36+ 93AC
  37+ 93AC 3A F1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93AF CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93B1 32 F1 88     	ld (Ctrl_0),a
  40+ 93B4
  41+ 93B4 C9           	ret
  42+ 93B5
  43+ 93B5              ; *******************************************************************************************************************************************************************************************
  44+ 93B5              ;	21/01/23
  45+ 93B5              ;
  46+ 93B5              ; 	Comprueba_limite_horizontal.
  47+ 93B5              ;
  48+ 93B5              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93B5              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93B5              ;
  51+ 93B5              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93B5              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93B5              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93B5              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93B5
  56+ 93B5
  57+ 93B5
  58+ 93B5 3A F1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93B8 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93BA 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93BC E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93BE 32 F1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93C1 18 09            jr 6F
  64+ 93C3 CB 5F        1 bit 3,a
  65+ 93C5 28 0A            jr z,2F
  66+ 93C7 E6 F7            and $f7
  67+ 93C9 32 F1 88         ld (Ctrl_0),a
  68+ 93CC CD 1F 95     6 call Inicializacion
  69+ 93CF 18 5B            jr 5F
  70+ 93D1 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93D2
  72+ 93D2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93D2              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93D2
  75+ 93D2 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93D3 2A FF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93D6 CD 81 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93D9 67           	ld h,a
  79+ 93DA EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93DB CD 81 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93DE 67           	ld h,a
  82+ 93DF A7           	and a
  83+ 93E0 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93E2 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93E3 3A DB 88     	ld a,(Cuad_objeto)
  86+ 93E6 FE 02        	cp 2
  87+ 93E8 38 1E        	jr c,3F
  88+ 93EA 28 1C        	jr z,3F
  89+ 93EC 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93ED 28 23            jr z,7F
  91+ 93EF 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93F1 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93F3 E1           	pop hl
  94+ 93F4
  95+ 93F4              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93F4              ; _para indicar con E="2" en caso necesario.
  97+ 93F4
  98+ 93F4 E5               push hl
  99+ 93F5 C5               push bc
 100+ 93F6 CD 81 99     	call calcula_tercio
 101+ 93F9 FE 01        	cp 1
 102+ 93FB 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93FD CD 2D 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9400 28 26            jr z,9F
 105+ 9402 38 24            jr c,9F
 106+ 9404 1E 00        11 ld e,0
 107+ 9406 18 22            jr 8F
 108+ 9408 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9409 28 07        	jr z, 7F
 110+ 940B 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 940D 1E 00         	ld e,0
 112+ 940F E1           	pop hl
 113+ 9410 18 04        	jr 4F
 114+ 9412 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9414 18 15            jr 10F
 116+ 9416
 117+ 9416              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9416              ; _para indicar con E="2" en caso necesario.
 119+ 9416
 120+ 9416 E5           4 push hl
 121+ 9417 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9418 CD 81 99     	call calcula_tercio
 123+ 941B FE 01        	cp 1
 124+ 941D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 941F CD 2D 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9422 28 04            jr z,9F
 127+ 9424 30 02            jr nc,9F
 128+ 9426 18 02        	jr 8F
 129+ 9428 1E 02        9 ld e,2
 130+ 942A C1           8 pop bc
 131+ 942B E1           10 pop hl
 132+ 942C C9           5 ret
 133+ 942D
 134+ 942D              ; --------------------
 135+ 942D              ;
 136+ 942D              ; 25/08/22
 137+ 942D
 138+ 942D CD 81 99     Comprueba_centro call calcula_tercio
 139+ 9430 67               ld h,a
 140+ 9431 08           	ex af,af
 141+ 9432 FE 02        	cp 2
 142+ 9434 38 07        	jr c,1F
 143+ 9436 28 05        	jr z,1F
 144+ 9438 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 943B 18 03        	jr 2F
 146+ 943D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9440 08           2 ex af,af
 148+ 9441 A7               and a
 149+ 9442 ED 42            sbc hl,bc
 150+ 9444 C9               ret
 151+ 9445
 152+ 9445              ; *********************************************************************************************************************************************************************************************
 153+ 9445              ;
 154+ 9445              ;   16/8/22
 155+ 9445              ;
 156+ 9445              ;	Comprueba_limite_vertical
 157+ 9445              ;
 158+ 9445              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9445              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9445              ;
 161+ 9445
 162+ 9445 2A C9 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9448 7D           	ld a,l
 164+ 9449 E6 1F        	and $1F
 165+ 944B 57           	ld d,a
 166+ 944C 3A 01 89     	ld a,(Limite_vertical)
 167+ 944F BA           	cp d 											; Límite - Posición.
 168+ 9450 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9451 3A DB 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9454 CB 47        	bit 0,a
 171+ 9456 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9458
 173+ 9458              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9458
 175+ 9458 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9459 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 945B
 178+ 945B              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 945B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 945B
 181+ 945B 3A CD 88         ld a,(Coordenada_X)
 182+ 945E 16 0F            ld d,Centro_izquierda
 183+ 9460 A7               and a
 184+ 9461 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9462 28 1E            jr z,3F
 186+ 9464 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9466              ;                                                    ; _salimos sin modificar nada.
 188+ 9466 18 0E            jr 2F
 189+ 9468 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9469 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 946B
 192+ 946B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 946B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 946B
 195+ 946B 3A CD 88         ld a,(Coordenada_X)
 196+ 946E 16 10            ld d,Centro_derecha
 197+ 9470 A7               and a
 198+ 9471 92               sub d
 199+ 9472 28 0E            jr z,3F
 200+ 9474 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9476              ;                                                    ; _salimos sin modificar nada.
 202+ 9476 CB 43        2 bit 0,e
 203+ 9478 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 947A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 947B CD 0F 95         call Modificaccionne
 206+ 947E C1           	pop bc
 207+ 947F CD 1F 95         call Inicializacion
 208+ 9482 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9483
 210+ 9483              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9483
 212+ 9483 C5           4 push bc
 213+ 9484 01 C8 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9487 0A           	ld a,(bc)
 215+ 9488 3D           	dec a
 216+ 9489 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 948A 7D           	ld a,l
 218+ 948B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 948C CB 47        	bit 0,a
 220+ 948E 28 03        	jr z,5F
 221+ 9490 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9491 18 2E        	jr 7F
 223+ 9493
 224+ 9493              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9493
 226+ 9493 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9494 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9495 3A F1 88     	ld a,(Ctrl_0)
 229+ 9498 CB 4F        	bit 1,a
 230+ 949A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 949C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 949D
 233+ 949D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 949D
 235+ 949D 1C               inc e
 236+ 949E 1D               dec e
 237+ 949F 20 07            jr nz,12F
 238+ 94A1 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94A2 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94A3 22 C9 88     	ld (Posicion_actual),hl
 241+ 94A6 18 44        13 jr 9F
 242+ 94A8 CB 43        12 bit 0,e
 243+ 94AA 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94AC              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94AC C1           	pop bc
 246+ 94AD 18 D3        	jr 3B
 247+ 94AF 80           14 add b
 248+ 94B0 6F               ld l,a
 249+ 94B1 22 C9 88     	ld (Posicion_actual),hl
 250+ 94B4 CD 0F 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94B7 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94B9 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94BB 32 F1 88         ld (Ctrl_0),a
 254+ 94BE F1           	pop af
 255+ 94BF 18 2B        	jr 9F
 256+ 94C1
 257+ 94C1              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94C1
 259+ 94C1 F5           7 push af
 260+ 94C2 3A F1 88     	ld a,(Ctrl_0)
 261+ 94C5 CB 47        	bit 0,a
 262+ 94C7 20 1D        	jr nz,8F
 263+ 94C9 F1           	pop af
 264+ 94CA
 265+ 94CA              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94CA
 267+ 94CA 1C           	inc e
 268+ 94CB 1D               dec e
 269+ 94CC 20 07            jr nz,10F
 270+ 94CE 90           	sub b
 271+ 94CF 6F               ld l,a
 272+ 94D0 22 C9 88     	ld (Posicion_actual),hl
 273+ 94D3 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94D5              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94D5 CB 43        10 bit 0,e
 276+ 94D7 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94D9              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94D9 C1           	pop bc
 279+ 94DA 18 A6        	jr 3B
 280+ 94DC 90           16 sub b
 281+ 94DD 6F               ld l,a
 282+ 94DE 22 C9 88     	ld (Posicion_actual),hl
 283+ 94E1 CD 0F 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94E4 18 06            jr 9F
 285+ 94E6 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94E8 32 F1 88         ld (Ctrl_0),a
 287+ 94EB F1           	pop af
 288+ 94EC C1           9 pop bc
 289+ 94ED 1E 00        	ld e,0
 290+ 94EF CD 1F 95         call Inicializacion
 291+ 94F2 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94F3 08           	ex af,af
 293+ 94F4 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94F5 18 8B            jr 3B
 295+ 94F7
 296+ 94F7              ; --------------------
 297+ 94F7
 298+ 94F7 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94F9 CD 7D 96     1 call PreviousScan
 300+ 94FC 10 FB            djnz 1B
 301+ 94FE 22 C9 88     	ld (Posicion_actual),hl
 302+ 9501 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9502 C9           	ret
 304+ 9503
 305+ 9503              ; --------------------
 306+ 9503
 307+ 9503 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9505 CD 6E 96     1 call NextScan
 309+ 9508 10 FB            djnz 1B
 310+ 950A 22 C9 88     	ld (Posicion_actual),hl
 311+ 950D AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 950E C9           	ret
 313+ 950F
 314+ 950F              ; --------------------
 315+ 950F              ;
 316+ 950F              ;	22/01/23
 317+ 950F              ;
 318+ 950F              ;	E="1". Hemos cambiado de cuadrante.
 319+ 950F              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 950F              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 950F
 322+ 950F
 323+ 950F              Modificaccionne
 324+ 950F
 325+ 950F 3A DB 88     	ld a,(Cuad_objeto)
 326+ 9512 FE 02        	cp 2
 327+ 9514 CC F7 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9517 DC F7 94         call c,Modifica_Pos_actual
 329+ 951A C8           	ret z
 330+ 951B CD 03 95         call Modifica_Pos_actual2
 331+ 951E C9               ret
 332+ 951F
 333+ 951F              ; *************************************************************************************************************************************************************************************************
 334+ 951F              ;
 335+ 951F              ;	13/8/22
 336+ 951F              ;
 337+ 951F              ;	Inicializacion
 338+ 951F              ;
 339+ 951F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 951F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 951F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 951F              ;
 343+ 951F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 951F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 951F              ;	_ desaparece/aparece.
 346+ 951F
 347+ 951F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 951F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 951F              ;
 350+ 951F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 951F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 951F              ; 		   [E] ="0"
 353+ 951F
 354+ 951F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 951F
 356+ 951F CD 81 99     Inicializacion call calcula_tercio
 357+ 9522 28 36        	jr z,primit
 358+ 9524 E6 02        	and 2
 359+ 9526 20 07        	jr nz,segmit
 360+ 9528 7D           	ld a,l
 361+ 9529 FE 7F        	cp $7f
 362+ 952B 38 2D        	jr c,primit
 363+ 952D 28 2B        	jr z,primit
 364+ 952F CD 8C 95     segmit call column
 365+ 9532 38 13        	jr c,tercuad
 366+ 9534 3E 04        cuarcuad ld a,4
 367+ 9536 32 DB 88     	ld (Cuad_objeto),a
 368+ 9539 21 20 48     	ld hl,$4820
 369+ 953C 22 FF 88     	ld (Limite_horizontal),hl
 370+ 953F 21 01 89     	ld hl,Limite_vertical
 371+ 9542 36 0D        	ld (hl),$0d
 372+ 9544 08           	ex af,af
 373+ 9545 18 3C        	jr 1F
 374+ 9547              tercuad
 375+ 9547 3E 03        	ld a,3
 376+ 9549 32 DB 88     	ld (Cuad_objeto),a
 377+ 954C 21 20 48     	ld hl,$4820
 378+ 954F 22 FF 88     	ld (Limite_horizontal),hl
 379+ 9552 21 01 89     	ld hl,Limite_vertical
 380+ 9555 36 12        	ld (hl),$12
 381+ 9557 08           	ex af,af
 382+ 9558 18 29        	jr 1F
 383+ 955A CD 8C 95     primit call column
 384+ 955D 38 13        	jr c, primcuad
 385+ 955F              segcuad
 386+ 955F 3E 02        	ld a,2
 387+ 9561 32 DB 88     	ld (Cuad_objeto),a
 388+ 9564 21 C0 4F     	ld hl,$4fc0
 389+ 9567 22 FF 88     	ld (Limite_horizontal),hl
 390+ 956A 21 01 89     	ld hl,Limite_vertical
 391+ 956D 36 0D        	ld (hl),$0d
 392+ 956F 08           	ex af,af
 393+ 9570 18 11        	jr 1F
 394+ 9572              primcuad
 395+ 9572 3E 01        	ld a,1
 396+ 9574 32 DB 88     	ld (Cuad_objeto),a
 397+ 9577 21 C0 4F     	ld hl,$4fc0
 398+ 957A 22 FF 88     	ld (Limite_horizontal),hl
 399+ 957D 21 01 89     	ld hl,Limite_vertical
 400+ 9580 36 12        	ld (hl),$12
 401+ 9582 08           	ex af,af
 402+ 9583 CD 0C 9D     1 call Genera_coordenadas
 403+ 9586 21 F1 88     	ld hl,Ctrl_0
 404+ 9589 CB EE        	set 5,(hl)
 405+ 958B C9           	ret
 406+ 958C
 407+ 958C              ; ------------------------------------------------------------------------------------------------------------------
 408+ 958C
 409+ 958C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 958C              ;
 411+ 958C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 958C
 413+ 958C 7D           column ld a,l
 414+ 958D E6 1F        	and $1f
 415+ 958F FE 10         	cp $10
 416+ 9591 C9            	ret
 417+ 9592
 418+ 9592              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9592              ;
 420+ 9592              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9592              ;
 422+ 9592              ; 14/12/22
 423+ 9592              ;
 424+ 9592              ;	Modifica: A y BC.
 425+ 9592
 426+ 9592 3A DB 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9595 E6 01        	and 1
 428+ 9597 28 17        	jr z,1F
 429+ 9599
 430+ 9599              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9599
 432+ 9599 3A CD 88     	ld a,(Coordenada_X)
 433+ 959C 47           	ld b,a
 434+ 959D 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 959E 79           	ld a,c
 436+ 959F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95A0 38 08        	jr c,2F
 438+ 95A2 47           	ld b,a
 439+ 95A3 79           	ld a,c
 440+ 95A4 90           	sub b
 441+ 95A5 32 FE 88     	ld (Columnas),a
 442+ 95A8 18 1B        	jr 4F
 443+ 95AA 79           2 ld a,c
 444+ 95AB 32 FE 88     	ld (Columnas),a
 445+ 95AE 18 15        	jr 4F
 446+ 95B0
 447+ 95B0              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95B0
 449+ 95B0 3A CD 88     1 ld a,(Coordenada_X)
 450+ 95B3 81           	add c
 451+ 95B4 3D           	dec a
 452+ 95B5 D6 1F        	sub $1f
 453+ 95B7 38 08        	jr c,3F
 454+ 95B9 47           	ld b,a
 455+ 95BA 79           	ld a,c
 456+ 95BB 90           	sub b
 457+ 95BC 32 FE 88     	ld (Columnas),a
 458+ 95BF 18 04        	jr 4F
 459+ 95C1 79           3 ld a,c
 460+ 95C2 32 FE 88     	ld (Columnas),a
 461+ 95C5 D9           4 exx
 462+ 95C6 4F           	ld c,a
 463+ 95C7 D9           	exx
 464+ 95C8 C9            ret
 465+ 95C9
 466+ 95C9              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95C9              ;
 468+ 95C9              ;   19/7/23
 469+ 95C9              ;
 470+ 95C9              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95C9              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95C9              ;
 473+ 95C9              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95C9              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95C9              ;
 476+ 95C9              ;	DESTRUYE: HL,B Y A.
 477+ 95C9
 478+ 95C9 3A DB 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95CC FE 02        	cp 2
 480+ 95CE 38 18        	jr c,1F
 481+ 95D0 28 16        	jr z,1F
 482+ 95D2 E6 01        	and 1
 483+ 95D4 28 0D        	jr z,3F
 484+ 95D6
 485+ 95D6              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95D6
 487+ 95D6 CD 1C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95D9
 489+ 95D9 7D           9 ld a,l
 490+ 95DA E6 1F        	and $1f
 491+ 95DC 28 2A        	jr z,7F
 492+ 95DE 2B           	dec hl
 493+ 95DF 10 F8        	djnz 9B
 494+ 95E1 18 25        	jr 7F
 495+ 95E3
 496+ 95E3              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95E3
 498+ 95E3 2A C9 88     3 ld hl,(Posicion_actual)
 499+ 95E6 18 20        	jr 7F
 500+ 95E8
 501+ 95E8 28 14        1 jr z,2F
 502+ 95EA
 503+ 95EA              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95EA
 505+ 95EA CD 1C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95ED
 507+ 95ED 7D           4 ld a,l
 508+ 95EE E6 1F        	and $1f
 509+ 95F0 28 03        	jr z,6F
 510+ 95F2 2B           	dec hl
 511+ 95F3 10 F8        	djnz 4B
 512+ 95F5 06 0F        6 ld b,15
 513+ 95F7 CD 7D 96     5 call PreviousScan
 514+ 95FA 10 FB        	djnz 5B
 515+ 95FC 18 0A        	jr 7F
 516+ 95FE
 517+ 95FE              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95FE
 519+ 95FE CD 1C 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9601 06 0F        	ld b,15
 521+ 9603 CD 7D 96     8 call PreviousScan
 522+ 9606 10 FB        	djnz 8B
 523+ 9608
 524+ 9608 E5           7 push hl
 525+ 9609 DD E1        	pop ix
 526+ 960B
 527+ 960B 2A CB 88     	ld hl,(Puntero_objeto)
 528+ 960E E5           	push hl
 529+ 960F FD E1        	pop iy
 530+ 9611
 531+ 9611              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9611
 533+ 9611 3A F1 88     	ld a,(Ctrl_0)
 534+ 9614 CB 77        	bit 6,a
 535+ 9616 C8           	ret z
 536+ 9617
 537+ 9617              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9617              ; _ entidad / Amadeus´.
 539+ 9617
 540+ 9617 DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 961B
 542+ 961B C9           	ret
 543+ 961C
 544+ 961C              ; --------------------------------------------------------------------------------------------------------------------
 545+ 961C              ;
 546+ 961C              ;	2/1/23
 547+ 961C              ;
 548+ 961C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 961C              ;
 550+ 961C              ;	Tras esta rutina tenemos:
 551+ 961C              ;
 552+ 961C              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 961C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 961C              ;
 555+ 961C              ;	DESTRUYE!!!!! HL,B y A.
 556+ 961C
 557+ 961C 2A C9 88     Operandos ld hl,(Posicion_actual)
 558+ 961F 3A FE 88     	ld a,(Columnas)
 559+ 9622 3D           	dec a
 560+ 9623 20 01        	jr nz,1F
 561+ 9625 3C           	inc a
 562+ 9626 47           1 ld b,a
 563+ 9627 C9           	ret
 564+ 9628
 565+ 9628              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9628              ;
 567+ 9628              ;	3/1/23
 568+ 9628              ;
 569+ 9628              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9628              ;
 571+ 9628              ;	Destruye: A,B,HL y DE.
 572+ 9628
 573+ 9628              Define_rutina_de_impresion
 574+ 9628
 575+ 9628 3A C8 88     	ld a,(Columns)
 576+ 962B 47           	ld b,a
 577+ 962C 3A FE 88     	ld a,(Columnas)
 578+ 962F B8           	cp b
 579+ 9630 20 0D        	jr nz,2f
 580+ 9632
 581+ 9632              ;	La entidad se imprime entera.
 582+ 9632
 583+ 9632 21 51 97     	ld hl, Indice_entidades_completas
 584+ 9635 E6 01        	and 1
 585+ 9637 28 02        	jr z,1F
 586+ 9639
 587+ 9639 23           	inc hl
 588+ 963A 23           	inc hl
 589+ 963B
 590+ 963B CD 8B 8C     1 call Extrae_address
 591+ 963E C9           	ret		;	ret
 592+ 963F
 593+ 963F              ;	La entidad no se imprime entera en pantalla.
 594+ 963F
 595+ 963F 3A DB 88     2 ld a,(Cuad_objeto)
 596+ 9642 E6 01        	and 1
 597+ 9644 28 17        	jr z,3F
 598+ 9646
 599+ 9646              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9646
 601+ 9646 21 55 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9649 3A C8 88     4 ld a,(Columns)
 603+ 964C E6 01        	and 1
 604+ 964E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9650
 606+ 9650 23           	inc hl
 607+ 9651 23           	inc hl
 608+ 9652
 609+ 9652 3A FE 88     	ld a,(Columnas)
 610+ 9655 E6 01        	and 1
 611+ 9657 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9659
 613+ 9659 23           	inc hl
 614+ 965A 23           	inc hl
 615+ 965B
 616+ 965B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 965D
 618+ 965D 21 5B 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9660 18 E7        	jr 4B
 620+ 9662
 621+ 9662              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9662              ;
 623+ 9662              ;	Prepara_draw
 624+ 9662              ;
 625+ 9662              ;	Es una rutina de carga.
 626+ 9662              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9662              ;
 628+ 9662              ;	FUNCIONAMIENTO:
 629+ 9662              ;
 630+ 9662              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9662              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9662              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9662              ;
 634+ 9662              ;	DESTRUYE:
 635+ 9662              ;
 636+ 9662              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9662
 638+ 9662 21 C7 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9665 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9666 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9667 4E           	ld c,(hl)
 642+ 9668 2A C9 88     	ld hl,(Posicion_actual)
 643+ 966B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 966D C9           	ret
 645+ 966E
 646+ 966E              ;----------------------------------------------------------------------------------------------------------------
 647+ 966E              ;
 648+ 966E              ;	5/08/22
 649+ 966E              ;
 650+ 966E              ;   NextScan.
 651+ 966E              ;
 652+ 966E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 966E              ;
 654+ 966E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 966E              ;
 656+ 966E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 966E              ;
 658+ 966E              ;       DESTRUIDOS: AF y HL !!!
 659+ 966E              ;
 660+ 966E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 966E              ;
 662+ 966E
 663+ 966E 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 966F 7C               ld a,h
 665+ 9670 E6 07            and 7
 666+ 9672 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9673
 668+ 9673 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9674 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9676 6F               ld l,a
 671+ 9677 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9678
 673+ 9678 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9679 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 967B 67               ld h,a
 676+ 967C C9               ret
 677+ 967D
 678+ 967D              ;----------------------------------------------------------------------------------------------------------------
 679+ 967D              ;
 680+ 967D              ;	5/08/22
 681+ 967D              ;
 682+ 967D              ;   PreviousScan.
 683+ 967D              ;
 684+ 967D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 967D              ;
 686+ 967D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 967D              ;
 688+ 967D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 967D              ;
 690+ 967D              ;       DESTRUIDOS: AF y HL !!!
 691+ 967D              ;
 692+ 967D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 967D              ;
 694+ 967D
 695+ 967D 7C           PreviousScan ld a,h
 696+ 967E 25               dec h               ; Dec H.
 697+ 967F E6 07            and 7
 698+ 9681 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9682
 700+ 9682 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9683 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9685 6F               ld l,a
 703+ 9686 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9687
 705+ 9687 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9688 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 968A 67               ld h,a
 708+ 968B C9               ret
 709+ 968C
 710+ 968C              ; -----------------------------------------------------------------------------------
 711+ 968C              ;
 712+ 968C              ;	31/7/23
 713+ 968C              ;
 714+ 968C              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 968C              ;	Extrae fotos de Album_de_fotos.
 716+ 968C
 717+ 968C              Extrae_foto_entidades
 718+ 968C
 719+ 968C 21 01 70     	ld hl,Album_de_fotos+1
 720+ 968F 7E           	ld a,(hl)
 721+ 9690 A7           	and a
 722+ 9691 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9692
 724+ 9692 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9695 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9696 C8           	ret z
 727+ 9697
 728+ 9697              ; -----------------------------------
 729+ 9697
 730+ 9697 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 969B 31 00 70     	ld sp,Album_de_fotos
 732+ 969E
 733+ 969E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96A0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96A1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96A2
 737+ 96A2 ED 73 18 89  	ld (Stack_2),sp
 738+ 96A6 ED 7B 16 89  	ld sp,(Stack)
 739+ 96AA
 740+ 96AA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96AA
 742+ 96AA 3E CD        	ld a,$cd
 743+ 96AC 32 B4 96     	ld (Imprime),a
 744+ 96AF EB           	ex de,hl
 745+ 96B0 22 B5 96     	ld (Imprime+1),hl
 746+ 96B3 EB           	ex de,hl
 747+ 96B4
 748+ 96B4              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96B4
 750+ 96B4 00 00 00     Imprime db 0,0,0
 751+ 96B7
 752+ 96B7 ED 73 16 89  	ld (Stack),sp
 753+ 96BB
 754+ 96BB 3A 11 89     	ld a,(Numero_de_malotes)
 755+ 96BE 3D           	dec a
 756+ 96BF 28 09        	jr z,1F
 757+ 96C1 32 11 89      	ld (Numero_de_malotes),a
 758+ 96C4
 759+ 96C4 ED 7B 18 89  	ld sp,(Stack_2)
 760+ 96C8 18 D4        	jr 2B
 761+ 96CA
 762+ 96CA AF           1 xor a
 763+ 96CB 32 18 89     	ld (Stack_2),a
 764+ 96CE
 765+ 96CE C9           	ret
 766+ 96CF
 767+ 96CF              ; -----------------------------------------------------------------------------------
 768+ 96CF              ;
 769+ 96CF              ;	28/2/23
 770+ 96CF              ;
 771+ 96CF              ;	Pinta los disparos generados.
 772+ 96CF
 773+ 96CF              Extrae_foto_disparos
 774+ 96CF
 775+ 96CF 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96D2 7E               ld a,(hl)
 777+ 96D3 A7               and a
 778+ 96D4 C8               ret z
 779+ 96D5
 780+ 96D5 3A 3E 89     	ld a,(Numero_de_disparotes)
 781+ 96D8 A7           	and a
 782+ 96D9 C8           	ret z
 783+ 96DA ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96DE 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96E1
 786+ 96E1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96E3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96E4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96E5
 790+ 96E5 ED 73 18 89  	ld (Stack_2),sp
 791+ 96E9 ED 7B 16 89  	ld sp,(Stack)
 792+ 96ED
 793+ 96ED              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96ED
 795+ 96ED 3E CD        	ld a,$cd
 796+ 96EF 32 F7 96     	ld (Imprime2),a
 797+ 96F2 EB           	ex de,hl
 798+ 96F3 22 F8 96     	ld (Imprime2+1),hl
 799+ 96F6 EB           	ex de,hl
 800+ 96F7
 801+ 96F7              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96F7
 803+ 96F7 00 00 00     Imprime2 db 0,0,0
 804+ 96FA
 805+ 96FA 3A 3E 89     	ld a,(Numero_de_disparotes)
 806+ 96FD 3D           	dec a
 807+ 96FE 28 09        	jr z,1F
 808+ 9700 32 3E 89      	ld (Numero_de_disparotes),a
 809+ 9703
 810+ 9703 ED 7B 18 89  	ld sp,(Stack_2)
 811+ 9707 18 D8        	jr 2B
 812+ 9709
 813+ 9709 AF           1 xor a
 814+ 970A 32 18 89     	ld (Stack_2),a
 815+ 970D C9           	ret
 816+ 970E
 817+ 970E              ; -----------------------------------------------------------------------------------
 818+ 970E              ;
 819+ 970E              ;	4/9/23
 820+ 970E              ;
 821+ 970E              ;	Rutina principal de pintado de Amadeus.
 822+ 970E              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 970E
 824+ 970E 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 9711 7E           	ld a,(hl)
 826+ 9712 A7           	and a
 827+ 9713 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 9714
 829+ 9714 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 9717 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 9718 C8           	ret z
 832+ 9719
 833+ 9719              ; -----------------------------------
 834+ 9719
 835+ 9719 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 971D 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9720
 838+ 9720 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9722 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9723 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9724
 842+ 9724 ED 73 18 89  	ld (Stack_2),sp
 843+ 9728 ED 7B 16 89  	ld sp,(Stack)
 844+ 972C
 845+ 972C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 972C
 847+ 972C 3E CD        	ld a,$cd
 848+ 972E 32 36 97     	ld (Imprime_Amadeus),a
 849+ 9731 EB           	ex de,hl
 850+ 9732 22 37 97     	ld (Imprime_Amadeus+1),hl
 851+ 9735 EB           	ex de,hl
 852+ 9736
 853+ 9736              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9736
 855+ 9736 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9739
 857+ 9739 ED 73 16 89  	ld (Stack),sp
 858+ 973D
 859+ 973D 3A 11 89     	ld a,(Numero_de_malotes)
 860+ 9740 3D           	dec a
 861+ 9741 28 09        	jr z,1F
 862+ 9743 32 11 89      	ld (Numero_de_malotes),a
 863+ 9746
 864+ 9746 ED 7B 18 89  	ld sp,(Stack_2)
 865+ 974A 18 D4        	jr 2B
 866+ 974C
 867+ 974C AF           1 xor a
 868+ 974D 32 18 89     	ld (Stack_2),a
 869+ 9750
 870+ 9750 C9           	ret
# file closed: Draw_XOR.asm
1693  9751              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9751              ;   índices de Rutinas de impresión.
   2+ 9751
   3+ 9751 61 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9753 8E 97            defw Pinta_Amadeus_3x2
   5+ 9755
   6+ 9755 E4 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9757 84 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9759 38 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 975B
  10+ 975B 0E 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 975D 12 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 975F C6 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9761
  14+ 9761
  15+ 9761              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9761              ;
  17+ 9761              ;   12/12/22
  18+ 9761              ;
  19+ 9761              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9761              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9761              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9761              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9761              ;
  24+ 9761              ;   Modifica: DE y HL.
  25+ 9761
  26+ 9761 ED 73 16 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9765 FD F9        	ld sp,iy
  28+ 9767 06 10            ld b,16
  29+ 9769 D1           1 pop de
  30+ 976A 7B               ld a,e
  31+ 976B AE               xor (hl)
  32+ 976C 77           	ld (hl),a
  33+ 976D 23           	inc hl
  34+ 976E 7A               ld a,d
  35+ 976F AE               xor (hl)
  36+ 9770 77           	ld (hl),a
  37+ 9771 2B           	dec hl
  38+ 9772 24           	inc h
  39+ 9773 7C               ld a,h
  40+ 9774 E6 07            and 7
  41+ 9776 20 0A            jr nz,2F
  42+ 9778 7D               ld a,l
  43+ 9779 C6 20            add a,$20
  44+ 977B 6F               ld l,a
  45+ 977C 38 04            jr c,2F
  46+ 977E 7C               ld a,h
  47+ 977F D6 08            sub 8
  48+ 9781 67               ld h,a
  49+ 9782 7C           2 ld a,h
  50+ 9783 FE 58            cp $58
  51+ 9785 28 02            jr z,3F
  52+ 9787 10 E0            djnz 1B
  53+ 9789 ED 7B 16 89  3 ld sp,(Stack)
  54+ 978D C9           	ret
  55+ 978E
  56+ 978E ED 73 16 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9792 FD F9        	ld sp,iy
  58+ 9794 06 08            ld b,8
  59+ 9796 D1           1 pop de
  60+ 9797 7B               ld a,e
  61+ 9798 AE               xor (hl)
  62+ 9799 77           	ld (hl),a
  63+ 979A 23           	inc hl
  64+ 979B 7A               ld a,d
  65+ 979C AE               xor (hl)
  66+ 979D 77           	ld (hl),a
  67+ 979E 23           	inc hl
  68+ 979F D1           	pop de
  69+ 97A0 7B               ld a,e
  70+ 97A1 AE               xor (hl)
  71+ 97A2 77           	ld (hl),a
  72+ 97A3 2B           	dec hl
  73+ 97A4 2B           	dec hl
  74+ 97A5 24           	inc h
  75+ 97A6 7C               ld a,h
  76+ 97A7 E6 07            and 7
  77+ 97A9 20 0A            jr nz,2F
  78+ 97AB 7D               ld a,l
  79+ 97AC C6 20            add a,$20
  80+ 97AE 6F               ld l,a
  81+ 97AF 38 04            jr c,2F
  82+ 97B1 7C               ld a,h
  83+ 97B2 D6 08            sub 8
  84+ 97B4 67               ld h,a
  85+ 97B5 7C           2 ld a,h
  86+ 97B6 FE 58            cp $58
  87+ 97B8 28 25            jr z,4F
  88+ 97BA 7A               ld a,d
  89+ 97BB AE               xor (hl)
  90+ 97BC 77               ld (hl),a
  91+ 97BD D1           	pop de
  92+ 97BE 23           	inc hl
  93+ 97BF 7B               ld a,e
  94+ 97C0 AE               xor (hl)
  95+ 97C1 77           	ld (hl),a
  96+ 97C2 23           	inc hl
  97+ 97C3 7A               ld a,d
  98+ 97C4 AE               xor (hl)
  99+ 97C5 77           	ld (hl),a
 100+ 97C6 2B           	dec hl
 101+ 97C7 2B           	dec hl
 102+ 97C8 24           	inc h
 103+ 97C9 7C               ld a,h
 104+ 97CA E6 07            and 7
 105+ 97CC 20 0A            jr nz,3F
 106+ 97CE 7D               ld a,l
 107+ 97CF C6 20            add a,$20
 108+ 97D1 6F               ld l,a
 109+ 97D2 38 04            jr c,3F
 110+ 97D4 7C               ld a,h
 111+ 97D5 D6 08            sub 8
 112+ 97D7 67               ld h,a
 113+ 97D8 7C           3 ld a,h
 114+ 97D9 FE 58            cp $58
 115+ 97DB 28 02            jr z,4F
 116+ 97DD 10 B7            djnz 1B
 117+ 97DF ED 7B 16 89  4 ld sp,(Stack)
 118+ 97E3 C9           	ret
 119+ 97E4
 120+ 97E4              ; ---------------------------------------------------
 121+ 97E4
 122+ 97E4 ED 73 16 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97E8 FD F9        	ld sp,iy
 124+ 97EA
 125+ 97EA              ; >>>
 126+ 97EA
 127+ 97EA 06 10            ld b,16
 128+ 97EC D1           1 pop de
 129+ 97ED 7A           	ld a,d
 130+ 97EE AE           	xor (hl)
 131+ 97EF 77           	ld (hl),a
 132+ 97F0 24           	inc h
 133+ 97F1 7C               ld a,h
 134+ 97F2 E6 07            and 7
 135+ 97F4 20 0C            jr nz,2F
 136+ 97F6 7D               ld a,l
 137+ 97F7 C6 20            add a,$20
 138+ 97F9 6F               ld l,a
 139+ 97FA 38 06            jr c,2F
 140+ 97FC 7C               ld a,h
 141+ 97FD D6 08            sub 8
 142+ 97FF 67               ld h,a
 143+ 9800 18 00            jr 2F
 144+ 9802 7C           2 ld a,h
 145+ 9803 FE 58            cp $58
 146+ 9805 28 02            jr z,3F
 147+ 9807 10 E3            djnz 1B
 148+ 9809 ED 7B 16 89  3 ld sp,(Stack)
 149+ 980D C9           	ret
 150+ 980E
 151+ 980E ED 73 16 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9812 FD F9        	ld sp,iy
 153+ 9814
 154+ 9814              ; >>>
 155+ 9814
 156+ 9814 06 10            ld b,16
 157+ 9816 D1           1 pop de
 158+ 9817 7B           	ld a,e
 159+ 9818 AE           	xor (hl)
 160+ 9819 77           	ld (hl),a
 161+ 981A 24           	inc h
 162+ 981B 7C               ld a,h
 163+ 981C E6 07            and 7
 164+ 981E 20 0C            jr nz,2F
 165+ 9820 7D               ld a,l
 166+ 9821 C6 20            add a,$20
 167+ 9823 6F               ld l,a
 168+ 9824 38 06            jr c,2F
 169+ 9826 7C               ld a,h
 170+ 9827 D6 08            sub 8
 171+ 9829 67               ld h,a
 172+ 982A 18 00            jr 2F
 173+ 982C 7C           2 ld a,h
 174+ 982D FE 58            cp $58
 175+ 982F 28 02            jr z,3F
 176+ 9831 10 E3            djnz 1B
 177+ 9833 ED 7B 16 89  3 ld sp,(Stack)
 178+ 9837 C9           	ret
 179+ 9838
 180+ 9838              ; ---------------------------------------------------
 181+ 9838
 182+ 9838 ED 73 16 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 983C FD F9        	ld sp,iy
 184+ 983E 06 08            ld b,8
 185+ 9840 D1           1 pop de
 186+ 9841 7A           	ld a,d
 187+ 9842 AE           	xor (hl)
 188+ 9843 77           	ld (hl),a
 189+ 9844 23           	inc hl
 190+ 9845 D1           	pop de
 191+ 9846 7B           	ld a,e
 192+ 9847 AE           	xor (hl)
 193+ 9848 77           	ld (hl),a
 194+ 9849 2B           	dec hl
 195+ 984A 24            	inc h
 196+ 984B 7C               ld a,h
 197+ 984C E6 07            and 7
 198+ 984E 20 0A            jr nz,2F
 199+ 9850 7D               ld a,l
 200+ 9851 C6 20            add a,$20
 201+ 9853 6F               ld l,a
 202+ 9854 38 04            jr c,2F
 203+ 9856 7C               ld a,h
 204+ 9857 D6 08            sub 8
 205+ 9859 67               ld h,a
 206+ 985A 7C           2 ld a,h
 207+ 985B FE 58            cp $58
 208+ 985D 28 20            jr z,4F
 209+ 985F D1               pop de
 210+ 9860 7B           	ld a,e
 211+ 9861 AE           	xor (hl)
 212+ 9862 77           	ld (hl),a
 213+ 9863 23           	inc hl
 214+ 9864 7A           	ld a,d
 215+ 9865 AE           	xor (hl)
 216+ 9866 77           	ld (hl),a
 217+ 9867 2B           	dec hl
 218+ 9868 24           	inc h
 219+ 9869 7C               ld a,h
 220+ 986A E6 07            and 7
 221+ 986C 20 0A            jr nz,3F
 222+ 986E 7D               ld a,l
 223+ 986F C6 20            add a,$20
 224+ 9871 6F               ld l,a
 225+ 9872 38 04            jr c,3F
 226+ 9874 7C               ld a,h
 227+ 9875 D6 08            sub 8
 228+ 9877 67               ld h,a
 229+ 9878 7C           3 ld a,h
 230+ 9879 FE 58            cp $58
 231+ 987B 28 02            jr z,4F
 232+ 987D 10 C1            djnz 1B
 233+ 987F ED 7B 16 89  4 ld sp,(Stack)
 234+ 9883 C9           	ret
 235+ 9884
 236+ 9884 ED 73 16 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9888 FD F9        	ld sp,iy
 238+ 988A 06 08            ld b,8
 239+ 988C D1           1 pop de
 240+ 988D D1           	pop de
 241+ 988E 7B           	ld a,e
 242+ 988F AE           	xor (hl)
 243+ 9890 77           	ld (hl),a
 244+ 9891 24            	inc h
 245+ 9892 7C               ld a,h
 246+ 9893 E6 07            and 7
 247+ 9895 20 0A            jr nz,2F
 248+ 9897 7D               ld a,l
 249+ 9898 C6 20            add a,$20
 250+ 989A 6F               ld l,a
 251+ 989B 38 04            jr c,2F
 252+ 989D 7C               ld a,h
 253+ 989E D6 08            sub 8
 254+ 98A0 67               ld h,a
 255+ 98A1 7C           2 ld a,h
 256+ 98A2 FE 58            cp $58
 257+ 98A4 28 1B            jr z,4F
 258+ 98A6 D1               pop de
 259+ 98A7 7A           	ld a,d
 260+ 98A8 AE           	xor (hl)
 261+ 98A9 77           	ld (hl),a
 262+ 98AA 24           	inc h
 263+ 98AB 7C               ld a,h
 264+ 98AC E6 07            and 7
 265+ 98AE 20 0A            jr nz,3F
 266+ 98B0 7D               ld a,l
 267+ 98B1 C6 20            add a,$20
 268+ 98B3 6F               ld l,a
 269+ 98B4 38 04            jr c,3F
 270+ 98B6 7C               ld a,h
 271+ 98B7 D6 08            sub 8
 272+ 98B9 67               ld h,a
 273+ 98BA 7C           3 ld a,h
 274+ 98BB FE 58            cp $58
 275+ 98BD 28 02            jr z,4F
 276+ 98BF 10 CB            djnz 1B
 277+ 98C1 ED 7B 16 89  4 ld sp,(Stack)
 278+ 98C5 C9           	ret
 279+ 98C6
 280+ 98C6 ED 73 16 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98CA FD F9        	ld sp,iy
 282+ 98CC 06 08            ld b,8
 283+ 98CE D1           1 pop de
 284+ 98CF 7B           	ld a,e
 285+ 98D0 AE           	xor (hl)
 286+ 98D1 77           	ld (hl),a
 287+ 98D2 23           	inc hl
 288+ 98D3 7A           	ld a,d
 289+ 98D4 AE           	xor (hl)
 290+ 98D5 77           	ld (hl),a
 291+ 98D6 2B           	dec hl
 292+ 98D7 24             	inc h
 293+ 98D8 7C               ld a,h
 294+ 98D9 E6 07            and 7
 295+ 98DB 20 0A            jr nz,2F
 296+ 98DD 7D               ld a,l
 297+ 98DE C6 20            add a,$20
 298+ 98E0 6F               ld l,a
 299+ 98E1 38 04            jr c,2F
 300+ 98E3 7C               ld a,h
 301+ 98E4 D6 08            sub 8
 302+ 98E6 67               ld h,a
 303+ 98E7 7C           2 ld a,h
 304+ 98E8 FE 58            cp $58
 305+ 98EA 28 21            jr z,4F
 306+ 98EC D1               pop de
 307+ 98ED 7A           	ld a,d
 308+ 98EE AE           	xor (hl)
 309+ 98EF 77           	ld (hl),a
 310+ 98F0 23           	inc hl
 311+ 98F1 D1               pop de
 312+ 98F2 7B           	ld a,e
 313+ 98F3 AE           	xor (hl)
 314+ 98F4 77           	ld (hl),a
 315+ 98F5 2B           	dec hl
 316+ 98F6 24           	inc h
 317+ 98F7 7C               ld a,h
 318+ 98F8 E6 07            and 7
 319+ 98FA 20 0A            jr nz,3F
 320+ 98FC 7D               ld a,l
 321+ 98FD C6 20            add a,$20
 322+ 98FF 6F               ld l,a
 323+ 9900 38 04            jr c,3F
 324+ 9902 7C               ld a,h
 325+ 9903 D6 08            sub 8
 326+ 9905 67               ld h,a
 327+ 9906 7C           3 ld a,h
 328+ 9907 FE 58            cp $58
 329+ 9909 28 02            jr z,4F
 330+ 990B 10 C1            djnz 1B
 331+ 990D ED 7B 16 89  4 ld sp,(Stack)
 332+ 9911 C9           	ret
 333+ 9912
 334+ 9912 ED 73 16 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9916 FD F9        	ld sp,iy
 336+ 9918 06 08            ld b,8
 337+ 991A D1           1 pop de
 338+ 991B 7B           	ld a,e
 339+ 991C AE           	xor (hl)
 340+ 991D 77           	ld (hl),a
 341+ 991E 24            	inc h
 342+ 991F 7C               ld a,h
 343+ 9920 E6 07            and 7
 344+ 9922 20 0A            jr nz,2F
 345+ 9924 7D               ld a,l
 346+ 9925 C6 20            add a,$20
 347+ 9927 6F               ld l,a
 348+ 9928 38 04            jr c,2F
 349+ 992A 7C               ld a,h
 350+ 992B D6 08            sub 8
 351+ 992D 67               ld h,a
 352+ 992E 7C           2 ld a,h
 353+ 992F FE 58            cp $58
 354+ 9931 28 1C            jr z,4F
 355+ 9933 D1               pop de
 356+ 9934 7A           	ld a,d
 357+ 9935 AE           	xor (hl)
 358+ 9936 77           	ld (hl),a
 359+ 9937 24           	inc h
 360+ 9938 7C               ld a,h
 361+ 9939 E6 07            and 7
 362+ 993B 20 0A            jr nz,3F
 363+ 993D 7D               ld a,l
 364+ 993E C6 20            add a,$20
 365+ 9940 6F               ld l,a
 366+ 9941 38 04            jr c,3F
 367+ 9943 7C               ld a,h
 368+ 9944 D6 08            sub 8
 369+ 9946 67               ld h,a
 370+ 9947 7C           3 ld a,h
 371+ 9948 FE 58            cp $58
 372+ 994A 28 03            jr z,4F
 373+ 994C D1               pop de
 374+ 994D 10 CB            djnz 1B
 375+ 994F ED 7B 16 89  4 ld sp,(Stack)
 376+ 9953 C9           	ret
 377+ 9954
 378+ 9954              ; ---------------------------------------------------
 379+ 9954              ;
 380+ 9954              ;   27/02/23
 381+ 9954              ;
 382+ 9954              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9954              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9954              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9954
 386+ 9954 ED 73 16 89  Pinta_Disparo ld (Stack),sp
 387+ 9958 FD F9            ld sp,iy
 388+ 995A 06 03            ld b,3
 389+ 995C D1           1 pop de
 390+ 995D 7B               ld a,e
 391+ 995E AE               xor (hl)
 392+ 995F 77               ld (hl),a
 393+ 9960 23               inc hl
 394+ 9961 7A               ld a,d
 395+ 9962 AE               xor (hl)
 396+ 9963 77               ld (hl),a
 397+ 9964 2B               dec hl
 398+ 9965
 399+ 9965 24               inc h
 400+ 9966 7C               ld a,h
 401+ 9967 E6 07            and 7
 402+ 9969 20 0A            jr nz,2F
 403+ 996B 7D               ld a,l
 404+ 996C C6 20            add a,$20
 405+ 996E 6F               ld l,a
 406+ 996F 38 04            jr c,2F
 407+ 9971 7C               ld a,h
 408+ 9972 D6 08            sub 8
 409+ 9974 67               ld h,a
 410+ 9975 7C           2 ld a,h
 411+ 9976 FE 58            cp $58
 412+ 9978 28 02            jr z,3F
 413+ 997A
 414+ 997A 10 E0            djnz 1B
 415+ 997C ED 7B 16 89  3 ld sp,(Stack)
 416+ 9980 C9               ret
 417+ 9981
# file closed: Rutinas_de_impresion_sprites.asm
1694  9981              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9981              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9981              ;
   3+ 9981              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9981              ;
   5+ 9981              ; *****************************************************************************************************************************************************************************************
   6+ 9981              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9981
   8+ 9981 7C           calcula_tercio ld a,h
   9+ 9982 E6 18        	and $18
  10+ 9984 CB 2F        	sra a
  11+ 9986 CB 2F        	sra a
  12+ 9988 CB 2F        	sra a
  13+ 998A C9           	ret
  14+ 998B
# file closed: calcula_tercio.asm
1695  998B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 998B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 998B              ;
   3+ 998B              ;
   4+ 998B              ;	CLS.
   5+ 998B              ;
   6+ 998B              ;	Limpia la pantalla y define sus atributos.
   7+ 998B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 998B              ;
   9+ 998B              ;	COLORES: 0 ..... NEGRO
  10+ 998B              ;    		 1 ..... AZUL
  11+ 998B              ; 			 2 ..... ROJO
  12+ 998B              ;			 3 ..... MAGENTA
  13+ 998B              ; 			 4 ..... VERDE
  14+ 998B              ; 			 5 ..... CIAN
  15+ 998B              ;			 6 ..... AMARILLO
  16+ 998B              ; 			 7 ..... BLANCO
  17+ 998B              ;
  18+ 998B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 998B              ;
  20+ 998B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 998B
  22+ 998B
  23+ 998B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 998E 11 01 40     	LD DE,$4001
  25+ 9991 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9994 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9996 ED B0        	LDIR
  28+ 9998 01 FF 02     	LD BC,767
  29+ 999B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 999C ED B0        	LDIR
  31+ 999E C9           	ret
  32+ 999F
# file closed: Cls.asm
1696  999F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 999F              ; ******************************************************************************************************************************************************************************************
   2+ 999F              ;
   3+ 999F              ;   20/05/23
   4+ 999F              ;
   5+ 999F              ;	Recompone_posicion_inicio
   6+ 999F              ;
   7+ 999F              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 999F              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 999F              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 999F              ;	_ a una u otra rutina.
  11+ 999F
  12+ 999F              Recompone_posicion_inicio
  13+ 999F
  14+ 999F 2A D9 88     	ld hl,(Posicion_inicio)
  15+ 99A2 7D           	ld a,l
  16+ 99A3 E6 1F        	and $1f
  17+ 99A5 28 16        	jr z,1F
  18+ 99A7
  19+ 99A7 FE 1F        	cp $1f
  20+ 99A9 28 0D        	jr z,3F
  21+ 99AB
  22+ 99AB 21 02 89     	ld hl,Ctrl_2
  23+ 99AE CB C6        	set 0,(hl)
  24+ 99B0 2A CB 88     	ld hl,(Puntero_objeto)
  25+ 99B3 22 05 89     	ld (Repone_puntero_objeto),hl
  26+ 99B6 18 08        	jr 2F
  27+ 99B8
  28+ 99B8 CD 59 9B     3 call Mov_left
  29+ 99BB 18 03        	jr 2F
  30+ 99BD
  31+ 99BD CD 3B 9A     1 call Mov_right
  32+ 99C0 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99C3 22 CB 88     	ld (Puntero_objeto),hl
  34+ 99C6 C9           	ret
  35+ 99C7
  36+ 99C7              ; ******************************************************************************************************************************************************************************************
  37+ 99C7              ;
  38+ 99C7              ;   27/05/23
  39+ 99C7              ;
  40+ 99C7              ;	Mov_down
  41+ 99C7              ;
  42+ 99C7              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99C7              ;
  44+ 99C7              ;
  45+ 99C7              Mov_down
  46+ 99C7
  47+ 99C7 CD 29 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99CA              ;																	; _ repone (Puntero_objeto).
  49+ 99CA 21 F1 88     	ld hl,Ctrl_0
  50+ 99CD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99CF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99CF              ; 																	; _ en el caso de que no lo haya.
  53+ 99CF 3A DF 88     	ld a,(Vel_down)
  54+ 99D2 47           	ld b,a
  55+ 99D3 2A C9 88         ld hl,(Posicion_actual)
  56+ 99D6 CD 81 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99D9 E6 02        	and 2
  58+ 99DB 28 0F        	jr z,1F
  59+ 99DD
  60+ 99DD              ; Nos encontramos en el último tercio de pantalla.
  61+ 99DD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99DD
  63+ 99DD 7C           	ld a,h
  64+ 99DE FE 57        	cp $57
  65+ 99E0 20 0A        	jr nz,1F
  66+ 99E2
  67+ 99E2 7D           	ld a,l
  68+ 99E3 C6 20        	add $20
  69+ 99E5 30 05        	jr nc,1F
  70+ 99E7
  71+ 99E7              ; ------------------------------
  72+ 99E7              ;	call Reaparece_arriba
  73+ 99E7 CD E6 9C     	call Reinicio
  74+ 99EA              ; ------------------------------
  75+ 99EA
  76+ 99EA 18 08        	jr 3F
  77+ 99EC CD 6E 96     1 call NextScan
  78+ 99EF 22 C9 88     	ld (Posicion_actual),hl
  79+ 99F2 10 E2            djnz 2B
  80+ 99F4 CD 0C 9D     3 call Genera_coordenadas
  81+ 99F7 C9           	ret
  82+ 99F8
  83+ 99F8              ; ******************************************************************************************************************************************************************************************
  84+ 99F8              ;
  85+ 99F8              ;   27/05/23
  86+ 99F8              ;
  87+ 99F8              ;	Mov_up
  88+ 99F8              ;
  89+ 99F8              ; 	Mueve el Sprite hacia arriba.
  90+ 99F8              ;
  91+ 99F8              ;
  92+ 99F8              Mov_up
  93+ 99F8
  94+ 99F8 CD 29 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99FB              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99FB 21 F1 88     	ld hl,Ctrl_0
  97+ 99FE CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A00              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A00              ; 																		; _ en el caso de que no lo haya.
 100+ 9A00 3A DE 88     	ld a,(Vel_up)
 101+ 9A03 47           	ld b,a
 102+ 9A04 2A C9 88     	ld hl,(Posicion_actual)
 103+ 9A07 CD 81 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A0A A7           	and a
 105+ 9A0B 20 10        	jr nz,1F
 106+ 9A0D
 107+ 9A0D              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A0D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A0D
 110+ 9A0D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A0E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A10 20 0B            jr nz,1F
 113+ 9A12 7D               ld a,l
 114+ 9A13 D6 20            sub $20
 115+ 9A15 30 06            jr nc,1F
 116+ 9A17 25               dec h
 117+ 9A18
 118+ 9A18              ; -----------------------------
 119+ 9A18 CD C7 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A1B              ;	call Reinicio
 121+ 9A1B              ; -----------------------------
 122+ 9A1B
 123+ 9A1B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A1D CD 7D 96     1 call PreviousScan
 125+ 9A20 22 C9 88     	ld (Posicion_actual),hl
 126+ 9A23 10 E2            djnz 3B
 127+ 9A25 CD 0C 9D     2 call Genera_coordenadas
 128+ 9A28 C9           	ret
 129+ 9A29
 130+ 9A29              ; -----------------------------
 131+ 9A29              ;
 132+ 9A29              ;	27/5/23
 133+ 9A29              ;
 134+ 9A29              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A29              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A29              ;
 137+ 9A29              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A29              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A29              ;
 140+ 9A29              ;	Modifica: A y (Puntero_objeto).
 141+ 9A29
 142+ 9A29 3A 02 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A2C CB 47        	bit 0,a
 144+ 9A2E C8           	ret z
 145+ 9A2F CB 87        	res 0,a
 146+ 9A31 32 02 89     	ld (Ctrl_2),a
 147+ 9A34 2A 05 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A37 22 CB 88     	ld (Puntero_objeto),hl
 149+ 9A3A C9           	ret
 150+ 9A3B
 151+ 9A3B              ; ******************************************************************************************************************************************************************************************
 152+ 9A3B              ;
 153+ 9A3B              ;	19/10/22
 154+ 9A3B              ;
 155+ 9A3B              ;	Mov_right.
 156+ 9A3B              ;
 157+ 9A3B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A3B              ;
 159+ 9A3B
 160+ 9A3B 21 F1 88     Mov_right ld hl,Ctrl_0
 161+ 9A3E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A40              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A40              ; 																	; _ en el caso de que no lo haya.
 164+ 9A40 3A F1 88     	ld a,(Ctrl_0)
 165+ 9A43 CB 77        	bit 6,a
 166+ 9A45 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A47
 168+ 9A47 CD 75 9C     	call Stop_Amadeus_right
 169+ 9A4A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A4B 18 4D        	jr 8F
 171+ 9A4D
 172+ 9A4D 3A CD 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A50 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A52 20 46        	jr nz,8F
 175+ 9A54
 176+ 9A54 3A CF 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A57 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A58 28 40        	jr z,8F
 179+ 9A5A
 180+ 9A5A              ; ---------- ---------- ----------
 181+ 9A5A              ;
 182+ 9A5A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A5A
 184+ 9A5A 3A DD 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A5D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A5F 28 11        	jr z,1F
 187+ 9A61 38 06        	jr c,6F
 188+ 9A63 FE 04        	cp 4
 189+ 9A65 28 14        	jr z,7F
 190+ 9A67 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A69
 192+ 9A69              ; ---------- ---------- ----------
 193+ 9A69              ;
 194+ 9A69              ; Perfiles de velocidad
 195+ 9A69              ;
 196+ 9A69
 197+ 9A69 3A CF 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A6C FE FE        	cp $fe
 199+ 9A6E 20 2A        	jr nz,8F
 200+ 9A70 18 10        	jr 3F
 201+ 9A72 3A CF 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A75 FE FD        	cp $fd
 203+ 9A77 20 21        	jr nz,8F
 204+ 9A79 18 07        	jr 3F
 205+ 9A7B 3A CF 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A7E FE FB        	cp $fb
 207+ 9A80 20 18        	jr nz,8F
 208+ 9A82
 209+ 9A82              ; ---------- ---------- ----------
 210+ 9A82
 211+ 9A82              3
 212+ 9A82 CD B5 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A85              ;	call Reinicio
 214+ 9A85
 215+ 9A85              ; ---------- ---------- ----------
 216+ 9A85              ;
 217+ 9A85              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A85
 219+ 9A85 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A87 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A88 CD A1 9A     	call DESPLZ_DER
 222+ 9A8B C1           	pop bc
 223+ 9A8C 10 F9        	djnz 5B
 224+ 9A8E 2A C9 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A91 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A92 22 C9 88     	ld (Posicion_actual),hl
 227+ 9A95 CD 0C 9D     	call Genera_coordenadas
 228+ 9A98 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A9A
 230+ 9A9A              ; ---------- ---------- ----------
 231+ 9A9A
 232+ 9A9A 2A C9 88     8 ld hl,(Posicion_actual)
 233+ 9A9D CD A1 9A     	call DESPLZ_DER
 234+ 9AA0 C9           2 ret
 235+ 9AA1
 236+ 9AA1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AA1              ;
 238+ 9AA1              ;	22/9/22
 239+ 9AA1              ;
 240+ 9AA1
 241+ 9AA1 CD B0 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AA4 CD FC 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9AA7 CD 25 9B         call Ciclo_completo
 244+ 9AAA 21 F1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AAD CB FE        	set 7,(hl)
 246+ 9AAF C9           	ret
 247+ 9AB0
 248+ 9AB0              ; ******************************************************************************************************************************************************************************************
 249+ 9AB0              ;	15/02/23
 250+ 9AB0              ;
 251+ 9AB0
 252+ 9AB0 3A DD 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AB3 47           	ld b,a
 254+ 9AB4 2A D5 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AB7 23           1 inc hl
 256+ 9AB8 23           	inc hl
 257+ 9AB9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9ABB 22 D5 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9ABE CD 8B 8C     	call Extrae_address
 260+ 9AC1 22 CB 88     	ld (Puntero_objeto),hl
 261+ 9AC4
 262+ 9AC4              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AC4
 264+ 9AC4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AC4              ; Cuántos movimientos hemos hecho ??
 266+ 9AC4              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AC4
 268+ 9AC4 2A D1 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AC7 EB           	ex de,hl
 270+ 9AC8 A7           	and a
 271+ 9AC9 ED 52        	sbc hl,de
 272+ 9ACB CB 3D        	srl l
 273+ 9ACD 3E 08        6 ld a,8
 274+ 9ACF 95           	sub l
 275+ 9AD0 30 1E        	jr nc,3F
 276+ 9AD2
 277+ 9AD2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AD2              ; B="0".
 279+ 9AD2
 280+ 9AD2 04           4 inc b
 281+ 9AD3 3C           	inc a
 282+ 9AD4 20 FC        	jr nz,4B
 283+ 9AD6 78           	ld a,b
 284+ 9AD7 08           	ex af,af
 285+ 9AD8 2A D1 88     	ld hl,(Indice_Sprite_der)
 286+ 9ADB 23           5 inc hl
 287+ 9ADC 23           	inc hl
 288+ 9ADD 10 FC        	djnz 5B
 289+ 9ADF 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AE2 CD 8B 8C     	call Extrae_address
 291+ 9AE5 22 CB 88     	ld (Puntero_objeto),hl
 292+ 9AE8
 293+ 9AE8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AE8              ; _(Posicion_actual).
 295+ 9AE8
 296+ 9AE8 21 C9 88     	ld hl,Posicion_actual
 297+ 9AEB 34           	inc (hl)
 298+ 9AEC 08               ex af,af
 299+ 9AED 6F           	ld l,a
 300+ 9AEE 18 DD        	jr 6B
 301+ 9AF0
 302+ 9AF0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AF0
 304+ 9AF0 47           3 ld b,a
 305+ 9AF1 2A D3 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AF4 23           2 inc hl
 307+ 9AF5 23           	inc hl
 308+ 9AF6 10 FC        	djnz 2B
 309+ 9AF8 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AFB C9           8 ret
 311+ 9AFC
 312+ 9AFC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AFC              ;
 314+ 9AFC              ;	24/7/22
 315+ 9AFC              ;
 316+ 9AFC              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AFC              ;
 318+ 9AFC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AFC              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AFC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AFC
 322+ 9AFC 3A CF 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AFF A7           	and a
 324+ 9B00 20 1F        	jr nz,1F
 325+ 9B02 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B04 32 CF 88         ld (CTRL_DESPLZ),a
 327+ 9B07
 328+ 9B07 21 C8 88     	ld hl,Columns
 329+ 9B0A 34           	inc (hl)
 330+ 9B0B 3A DB 88     	ld a,(Cuad_objeto)
 331+ 9B0E E6 01        	and 1
 332+ 9B10 28 0F        	jr z,1F
 333+ 9B12 2A C9 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B15 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B16 22 C9 88     	ld (Posicion_actual),hl
 336+ 9B19 CD 0C 9D     	call Genera_coordenadas
 337+ 9B1C CD 81 9C     	call Inc_CTRL_DESPLZ
 338+ 9B1F 18 03        	jr 2F
 339+ 9B21 CD 81 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B24 C9           2 ret
 341+ 9B25
 342+ 9B25              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B25              ;
 344+ 9B25              ;	24/7/22
 345+ 9B25              ;
 346+ 9B25              ;	Ciclo_completo.
 347+ 9B25              ;
 348+ 9B25              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B25              ;
 350+ 9B25              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B25              ; 	Decrementamos (Columns).
 352+ 9B25              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B25              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B25
 355+ 9B25
 356+ 9B25 3A CF 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B28 FE FF        	cp $ff
 358+ 9B2A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B2C E6 F0        	and $f0
 360+ 9B2E 20 28        	jr nz,3F
 361+ 9B30
 362+ 9B30              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B30
 364+ 9B30 3A CF 88     	ld a,(CTRL_DESPLZ)
 365+ 9B33 47           	ld b,a
 366+ 9B34 3E F8        	ld a,$f8
 367+ 9B36 80           	add b
 368+ 9B37 32 CF 88     	ld (CTRL_DESPLZ),a
 369+ 9B3A 18 1C        	jr 3F
 370+ 9B3C 21 C8 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B3F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B40 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B41 32 CF 88     	ld (CTRL_DESPLZ),a
 374+ 9B44 3A DB 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B47 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B49 20 0A        	jr nz,2F
 377+ 9B4B 2A C9 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B4E 23           	inc hl
 379+ 9B4F 22 C9 88     	ld (Posicion_actual),hl
 380+ 9B52 CD 0C 9D     	call Genera_coordenadas
 381+ 9B55
 382+ 9B55              ; Inicia el puntero de Sprite.
 383+ 9B55
 384+ 9B55 CD A2 8C     2 call Inicia_puntero_objeto_der
 385+ 9B58 C9           3 ret
 386+ 9B59
 387+ 9B59              ; ******************************************************************************************************************************************************************************************
 388+ 9B59              ;
 389+ 9B59              ;	15/02/23
 390+ 9B59              ;
 391+ 9B59              ;	Mov_left.
 392+ 9B59              ;
 393+ 9B59              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B59              ;
 395+ 9B59              Mov_left
 396+ 9B59
 397+ 9B59 21 F1 88     	ld hl,Ctrl_0
 398+ 9B5C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B5E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B5E              ; 																	; _ en el caso de que no lo haya.
 401+ 9B5E 3A F1 88     	ld a,(Ctrl_0)
 402+ 9B61 CB 77        	bit 6,a
 403+ 9B63 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B65
 405+ 9B65 CD 7B 9C     	call Stop_Amadeus_left
 406+ 9B68 C8           	ret z
 407+ 9B69 20 4A        	jr nz,8F
 408+ 9B6B
 409+ 9B6B 3A CD 88     11 ld a,(Coordenada_X)
 410+ 9B6E A7           	and a
 411+ 9B6F 20 44        	jr nz,8F
 412+ 9B71
 413+ 9B71 3A CF 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B74 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B75 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B77
 417+ 9B77              ; ---------- ---------- ----------
 418+ 9B77
 419+ 9B77 3A DC 88     	ld a,(Vel_left)
 420+ 9B7A FE 02        	cp 2
 421+ 9B7C 28 0F        	jr z,1F
 422+ 9B7E 38 04        	jr c,6F
 423+ 9B80 FE 04        	cp 4
 424+ 9B82 28 12        	jr z,7F
 425+ 9B84
 426+ 9B84              ; ---------- ---------- ----------
 427+ 9B84
 428+ 9B84 3A CF 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B87 FE F8        	cp $f8
 430+ 9B89 20 2A        	jr nz,8F
 431+ 9B8B 18 10        	jr 4F
 432+ 9B8D 3A CF 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B90 FE F9        	cp $f9
 434+ 9B92 20 21        	jr nz,8F
 435+ 9B94 18 07        	jr 4F
 436+ 9B96 3A CF 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B99 FE FB        	cp $fb
 438+ 9B9B 20 18        	jr nz,8F
 439+ 9B9D
 440+ 9B9D              ; ---------- ---------- ----------
 441+ 9B9D
 442+ 9B9D              4
 443+ 9B9D CD A3 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BA0              ;	call Reinicio
 445+ 9BA0
 446+ 9BA0              ; ---------- ---------- ----------
 447+ 9BA0
 448+ 9BA0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BA2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BA3
 451+ 9BA3              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BA3              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BA3
 454+ 9BA3 CD BC 9B     	call DESPLZ_IZQ
 455+ 9BA6 C1           	pop bc
 456+ 9BA7 10 F9        	djnz 5B
 457+ 9BA9 2A C9 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BAC 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BAD 22 C9 88     	ld (Posicion_actual),hl
 460+ 9BB0 CD 0C 9D     	call Genera_coordenadas
 461+ 9BB3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BB5
 463+ 9BB5              ; ---------- ---------- ----------
 464+ 9BB5
 465+ 9BB5              ; Movemos, no hay recolocación.
 466+ 9BB5
 467+ 9BB5 2A C9 88     8 ld hl,(Posicion_actual)
 468+ 9BB8 CD BC 9B     	call DESPLZ_IZQ
 469+ 9BBB C9           2 ret
 470+ 9BBC
 471+ 9BBC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BBC              ;
 473+ 9BBC              ;	22/9/22
 474+ 9BBC
 475+ 9BBC              DESPLZ_IZQ
 476+ 9BBC
 477+ 9BBC CD CB 9B     	call Desplaza_izquierda
 478+ 9BBF CD 17 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BC2 CD 3F 9C     	call Ciclo_completo_2
 480+ 9BC5 21 F1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BC8 CB BE        	res 7,(hl)
 482+ 9BCA C9           	ret
 483+ 9BCB
 484+ 9BCB              Desplaza_izquierda
 485+ 9BCB
 486+ 9BCB 3A DC 88     	ld a,(Vel_left)
 487+ 9BCE 47           	ld b,a
 488+ 9BCF 2A D7 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BD2 23           1 inc hl
 490+ 9BD3 23           	inc hl
 491+ 9BD4 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BD6 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BD9 CD 8B 8C     	call Extrae_address
 494+ 9BDC 22 CB 88     	ld (Puntero_objeto),hl
 495+ 9BDF
 496+ 9BDF              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BDF
 498+ 9BDF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BDF              ; Cuántos movimientos hemos hecho ??
 500+ 9BDF              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BDF
 502+ 9BDF 2A D3 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BE2 EB           	ex de,hl
 504+ 9BE3 A7           	and a
 505+ 9BE4 ED 52        	sbc hl,de
 506+ 9BE6 CB 3D        	srl l
 507+ 9BE8 3E 08        6 ld a,8
 508+ 9BEA 95           	sub l
 509+ 9BEB 30 1E        	jr nc,3F
 510+ 9BED
 511+ 9BED              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BED              ; B="0".
 513+ 9BED
 514+ 9BED 04           4 inc b
 515+ 9BEE 3C           	inc a
 516+ 9BEF 20 FC        	jr nz,4B
 517+ 9BF1 78           	ld a,b
 518+ 9BF2 08           	ex af,af
 519+ 9BF3 2A D3 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BF6 23           5 inc hl
 521+ 9BF7 23           	inc hl
 522+ 9BF8 10 FC        	djnz 5B
 523+ 9BFA 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BFD CD 8B 8C     	call Extrae_address
 525+ 9C00 22 CB 88     	ld (Puntero_objeto),hl
 526+ 9C03
 527+ 9C03              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C03              ; _(Posicion_actual).
 529+ 9C03
 530+ 9C03 21 C9 88     	ld hl,Posicion_actual
 531+ 9C06 35           	dec (hl)
 532+ 9C07 08           	ex af,af
 533+ 9C08 6F           	ld l,a
 534+ 9C09 18 DD        	jr 6B
 535+ 9C0B
 536+ 9C0B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C0B
 538+ 9C0B 47           3 ld b,a
 539+ 9C0C 2A D1 88     	ld hl,(Indice_Sprite_der)
 540+ 9C0F 23           2 inc hl
 541+ 9C10 23           	inc hl
 542+ 9C11 10 FC        	djnz 2B
 543+ 9C13 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C16 C9           8 ret
 545+ 9C17
 546+ 9C17              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C17              ;
 548+ 9C17              ;	modifica_parametros_1er_DESPLZ
 549+ 9C17              ;
 550+ 9C17              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C17              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C17              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C17
 554+ 9C17 3A CF 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C1A A7           	and a
 556+ 9C1B 20 1E        	jr nz,1F
 557+ 9C1D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C1E 32 CF 88         ld (CTRL_DESPLZ),a
 559+ 9C21 21 C8 88     	ld hl,Columns
 560+ 9C24 34           	inc (hl)
 561+ 9C25 3A DB 88     	ld a,(Cuad_objeto)
 562+ 9C28 E6 01        	and 1
 563+ 9C2A 20 0F        	jr nz,1F
 564+ 9C2C 2A C9 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C2F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C30 22 C9 88     	ld (Posicion_actual),hl
 567+ 9C33 CD 0C 9D     	call Genera_coordenadas
 568+ 9C36 CD 92 9C     	call Dec_CTRL_DESPLZ
 569+ 9C39 18 03        	jr 2F
 570+ 9C3B CD 92 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C3E C9           2 ret
 572+ 9C3F
 573+ 9C3F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C3F
 575+ 9C3F 3A CF 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C42 FE F7        	cp $f7
 577+ 9C44 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C46 30 2C        	jr nc,3F
 579+ 9C48
 580+ 9C48              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C48
 582+ 9C48 06 00        	ld b,0
 583+ 9C4A 04           4 inc b
 584+ 9C4B 3C           	inc a
 585+ 9C4C FE F7        	cp $f7
 586+ 9C4E 20 FA        	jr nz,4B
 587+ 9C50 3E FF        	ld a,$ff
 588+ 9C52 90           	sub b
 589+ 9C53 32 CF 88     	ld (CTRL_DESPLZ),a
 590+ 9C56 18 1C        	jr 3F
 591+ 9C58
 592+ 9C58              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C58
 594+ 9C58 21 C8 88     1 ld hl,Columns
 595+ 9C5B 35           	dec (hl)
 596+ 9C5C AF           	xor a
 597+ 9C5D 32 CF 88     	ld (CTRL_DESPLZ),a
 598+ 9C60 3A DB 88     	ld a,(Cuad_objeto)
 599+ 9C63 E6 01        	and 1
 600+ 9C65 28 0A        	jr z,2F
 601+ 9C67 2A C9 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C6A 2B           	dec hl
 603+ 9C6B 22 C9 88     	ld (Posicion_actual),hl
 604+ 9C6E CD 0C 9D     	call Genera_coordenadas
 605+ 9C71
 606+ 9C71              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C71
 608+ 9C71 CD B5 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C74 C9           3 ret
 610+ 9C75
 611+ 9C75              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C75              ;
 613+ 9C75              ;	19/10/22
 614+ 9C75              ;
 615+ 9C75              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C75              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C75
 618+ 9C75 3A CD 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C78 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C7A C9           	ret
 621+ 9C7B
 622+ 9C7B              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C7B              ;
 624+ 9C7B              ;	19/10/22
 625+ 9C7B              ;
 626+ 9C7B              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C7B              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C7B
 629+ 9C7B 3A CD 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C7E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C80 C9           	ret
 632+ 9C81
 633+ 9C81              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C81              ;
 635+ 9C81              ;	24/7/22
 636+ 9C81              ;
 637+ 9C81              ;	Inc_CTRL_DESPLZ
 638+ 9C81              ;
 639+ 9C81              ;
 640+ 9C81              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C81
 642+ 9C81 21 CF 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C84 3A DD 88     	ld a,(Vel_right)
 644+ 9C87 A7           	and a
 645+ 9C88 28 06        	jr z,1F
 646+ 9C8A 47           	ld b,a
 647+ 9C8B 34           3 inc (hl)
 648+ 9C8C 10 FD        	djnz 3B
 649+ 9C8E 18 01        	jr 2F
 650+ 9C90 34           1 inc (hl)
 651+ 9C91 C9           2 ret
 652+ 9C92
 653+ 9C92              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C92              ;
 655+ 9C92              ;	5/2/23
 656+ 9C92              ;
 657+ 9C92              ;	Dec_CTRL_DESPLZ
 658+ 9C92              ;
 659+ 9C92              ;
 660+ 9C92              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C92
 662+ 9C92 21 CF 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C95 3A DC 88     	ld a,(Vel_left)
 664+ 9C98 A7           	and a
 665+ 9C99 28 06        	jr z,1F
 666+ 9C9B 47           	ld b,a
 667+ 9C9C 35           3 dec (hl)
 668+ 9C9D 10 FD        	djnz 3B
 669+ 9C9F 18 01        	jr 2F
 670+ 9CA1 35           1 dec (hl)
 671+ 9CA2 C9           2 ret
 672+ 9CA3
 673+ 9CA3              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CA3
 675+ 9CA3 2A C9 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CA6 01 1F 00     	ld bc,31
 677+ 9CA9 A7           	and a
 678+ 9CAA ED 4A        	adc hl,bc
 679+ 9CAC 22 C9 88     	ld (Posicion_actual),hl
 680+ 9CAF 21 F1 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CB2 CB C6        	set 0,(hl)
 682+ 9CB4 C9           	ret
 683+ 9CB5
 684+ 9CB5              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CB5
 686+ 9CB5 2A C9 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CB8 01 1F 00     	ld bc,31
 688+ 9CBB A7           	and a
 689+ 9CBC ED 42        	sbc hl,bc
 690+ 9CBE 22 C9 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CC1 21 F1 88     	ld hl,Ctrl_0
 692+ 9CC4 CB CE        	set 1,(hl)
 693+ 9CC6 C9           	ret
 694+ 9CC7
 695+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CC7
 697+ 9CC7 24           Reaparece_abajo inc h
 698+ 9CC8 01 E0 17     	ld bc,$17e0
 699+ 9CCB A7           	and a
 700+ 9CCC ED 4A        	adc hl,bc
 701+ 9CCE 22 C9 88     	ld (Posicion_actual),hl
 702+ 9CD1 21 F1 88     	ld hl,Ctrl_0
 703+ 9CD4 CB D6        	set 2,(hl)
 704+ 9CD6 C9           	ret
 705+ 9CD7
 706+ 9CD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CD7
 708+ 9CD7 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CDA A7           	and a
 710+ 9CDB ED 42        	sbc hl,bc
 711+ 9CDD 22 C9 88     	ld (Posicion_actual),hl
 712+ 9CE0 21 F1 88     	ld hl,Ctrl_0
 713+ 9CE3 CB DE        	set 3,(hl)
 714+ 9CE5 C9           	ret
 715+ 9CE6
 716+ 9CE6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CE6              ;
 718+ 9CE6              ;	15/07/23
 719+ 9CE6
 720+ 9CE6              Reinicio
 721+ 9CE6
 722+ 9CE6              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CE6
 724+ 9CE6 AF           	xor a
 725+ 9CE7 21 F6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CEA CD 08 9D     	call Limpia_contenido_hl
 727+ 9CED
 728+ 9CED 21 C9 88     	ld hl,Posicion_actual
 729+ 9CF0 CD 08 9D     	call Limpia_contenido_hl
 730+ 9CF3
 731+ 9CF3 CD 3A A0     	call Inicializa_Puntero_indice_mov
 732+ 9CF6 CD C4 9F     	call Inicia_Puntero_mov
 733+ 9CF9
 734+ 9CF9 21 F8 88     	ld hl,Incrementa_puntero
 735+ 9CFC 06 05        	ld b,5
 736+ 9CFE 77           1 ld (hl),a
 737+ 9CFF 23           	inc hl
 738+ 9D00 10 FC        	djnz 1B
 739+ 9D02
 740+ 9D02 21 02 89     	ld hl,Ctrl_2
 741+ 9D05 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D07
 743+ 9D07 C9           	ret
 744+ 9D08
 745+ 9D08 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D09 23           	inc hl
 747+ 9D0A 77           	ld (hl),a
 748+ 9D0B C9           	ret
 749+ 9D0C
 750+ 9D0C
# file closed: Direcciones.asm
1697  9D0C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D0C              ; ------------------------------------------------------------------------
   2+ 9D0C              ;
   3+ 9D0C              ;	02/04/23
   4+ 9D0C              ;
   5+ 9D0C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D0C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D0C              ;
   8+ 9D0C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D0C              ;
  10+ 9D0C              ;	Modifica: A,BC y DE.
  11+ 9D0C
  12+ 9D0C C5           Genera_coordenadas push bc
  13+ 9D0D E5           	push hl
  14+ 9D0E D5           	push de
  15+ 9D0F
  16+ 9D0F 2A C9 88     	ld hl,(Posicion_actual)
  17+ 9D12
  18+ 9D12 7D           	ld a,l
  19+ 9D13 E6 1F        	and $1f
  20+ 9D15 32 CD 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D18
  22+ 9D18 CD 81 99     	call calcula_tercio
  23+ 9D1B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D1C
  25+ 9D1C 1E 00        	ld e,0
  26+ 9D1E 7D           	ld a,l
  27+ 9D1F E6 E0        	and $e0
  28+ 9D21 28 01        	jr z,1F
  29+ 9D23 04           	inc b
  30+ 9D24
  31+ 9D24 04           1 inc b
  32+ 9D25 05           	dec b
  33+ 9D26 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D28              ;														; _ , salimos.
  35+ 9D28 1C           3 inc e
  36+ 9D29 D6 20        	sub 32
  37+ 9D2B 20 FB        	jr nz,3B
  38+ 9D2D 10 F5        	djnz 1B
  39+ 9D2F
  40+ 9D2F 7B           2 ld a,e
  41+ 9D30 32 CE 88     	ld (Coordenada_y),a
  42+ 9D33
  43+ 9D33 D1           	pop de
  44+ 9D34 E1           	pop hl
  45+ 9D35 C1           	pop bc
  46+ 9D36
  47+ 9D36 C9           	ret
  48+ 9D37
  49+ 9D37              ; ------------------------------------------------------------------------
  50+ 9D37              ;	28/05/23
  51+ 9D37              ;
  52+ 9D37              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D37              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D37              ;
  55+ 9D37              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D37              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D37              ;
  58+ 9D37              ;		DE="$120d"
  59+ 9D37              ;
  60+ 9D37              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D37              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D37              ;
  63+ 9D37              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D37
  65+ 9D37              ;	Modifica: A,BC y DE.
  66+ 9D37
  67+ 9D37
  68+ 9D37              Genera_coordenadas_disparo
  69+ 9D37
  70+ 9D37              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D37
  72+ 9D37 7D           	ld a,l
  73+ 9D38 E6 1F        	and $1f
  74+ 9D3A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D3B CD 81 99     	call calcula_tercio
  76+ 9D3E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D3F 1E 00        	ld e,0
  78+ 9D41 7D           	ld a,l
  79+ 9D42 E6 E0        	and $e0
  80+ 9D44 28 01        	jr z,1F
  81+ 9D46 04           	inc b
  82+ 9D47 1C           1 inc e
  83+ 9D48 D6 20        	sub 32
  84+ 9D4A 20 FB        	jr nz,1B
  85+ 9D4C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D4E C9           	ret
  87+ 9D4F
# file closed: Genera_coordenadas.asm
1698  9D4F              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D4F              ; Relojes y temporizaciones.
   2+ 9D4F
   3+ 9D4F              ; ------------------------------------------------------
   4+ 9D4F              ;
   5+ 9D4F              ;	16/7/23
   6+ 9D4F              ;
   7+ 9D4F              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D4F              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D4F              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D4F              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D4F              ;
  12+ 9D4F              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D4F              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D4F
  15+ 9D4F              ; Disparo_entidad db 1
  16+ 9D4F              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D4F              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D4F
  19+ 9D4F              Habilita_disparos
  20+ 9D4F
  21+ 9D4F 7E           	ld a,(hl)
  22+ 9D50 A7           	and a
  23+ 9D51 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D52
  25+ 9D52 EB           	ex de,hl
  26+ 9D53
  27+ 9D53 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D54 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D55
  30+ 9D55              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D55
  32+ 9D55 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D56 7E           	ld a,(hl)
  34+ 9D57 23           	inc hl
  35+ 9D58 77           	ld (hl),a
  36+ 9D59
  37+ 9D59 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D5A 3E 01        	ld a,1
  39+ 9D5C 77           	ld (hl),a
  40+ 9D5D C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1699  9D5E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D5E
   2+ 9D5E
   3+ 9D5E              ;   07/07/23
   4+ 9D5E              ;
   5+ 9D5E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D5E              ;
   7+ 9D5E              ;   Codificación:
   8+ 9D5E              ;
   9+ 9D5E              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D5E              ;
  11+ 9D5E              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D5E              ;
  13+ 9D5E              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D5E              ;
  15+ 9D5E              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D5E              ;
  17+ 9D5E              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D5E              ;                               ..... %01000010 Vel_up 4
  19+ 9D5E              ;                                               Vel_down 2
  20+ 9D5E              ;                               ..... $42
  21+ 9D5E              ;
  22+ 9D5E              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D5E              ;
  24+ 9D5E              ;                               ..... %01000010 Vel_left 4
  25+ 9D5E              ;                                               Vel_right 2
  26+ 9D5E              ;                               ..... $42
  27+ 9D5E              ;
  28+ 9D5E              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D5E              ;
  30+ 9D5E              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D5E              ;
  32+ 9D5E              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D5E              ;
  34+ 9D5E              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D5E              ;                                     $53
  36+ 9D5E              ;
  37+ 9D5E              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D5E              ;
  39+ 9D5E              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D5E              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D5E              ;
  42+ 9D5E              ;                       Arriba ..... $81
  43+ 9D5E              ;                       Arriba - izquierda ..... $a1
  44+ 9D5E              ;                       Arriba - derecha ..... $91
  45+ 9D5E              ;
  46+ 9D5E              ;                       Abajo ..... $41
  47+ 9D5E              ;                       Abajo - izquierda ..... $61
  48+ 9D5E              ;                       Abajo - derecha ..... $51
  49+ 9D5E              ;
  50+ 9D5E              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D5E              ;
  52+ 9D5E              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D5E              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D5E              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D5E              ;
  56+ 9D5E              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D5E              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D5E              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D5E              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D5E              ;
  61+ 9D5E              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D5E              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D5E              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D5E              ;
  65+ 9D5E              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D5E              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D5E              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D5E              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D5E
  70+ 9D5E              ; ----- ----- ----- ----- -----
  71+ 9D5E
  72+ 9D5E 8A 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D60 92 9D            defw F_1
  74+ 9D62 9C 9D            defw F_2
  75+ 9D64 A6 9D            defw Codo_abajo_derecha
  76+ 9D66 DA 9D            defw Derecha_y_subiendo
  77+ 9D68 E4 9D            defw Derecha_y_subiendo_1
  78+ 9D6A EE 9D            defw F_3
  79+ 9D6C F8 9D            defw F_4
  80+ 9D6E 02 9E            defw Derecha_y_bajando
  81+ 9D70 0C 9E            defw Derecha_y_bajando_1
  82+ 9D72 16 9E            defw Derecha_y_bajando_2
  83+ 9D74 20 9E            defw Codo_derecha_abajo
  84+ 9D76 50 9E            defw Codo_abajo_izq.
  85+ 9D78 84 9E            defw Izquierda_y_subiendo
  86+ 9D7A 8E 9E            defw Izquierda_y_subiendo_1
  87+ 9D7C 98 9E            defw F_5
  88+ 9D7E A2 9E            defw F_6
  89+ 9D80 AC 9E            defw Izquierda_y_bajando
  90+ 9D82 B6 9E            defw Izquierda_y_bajando_1
  91+ 9D84 C0 9E            defw Izquierda_y_bajando_2
  92+ 9D86 CA 9E            defw Codo_izquierda_abajo
  93+ 9D88 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D8A
  95+ 9D8A 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D8E 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D92
  98+ 9D92 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D96 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D9A 08 00
 100+ 9D9C 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DA0 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DA4 0F FE
 102+ 9DA6
 103+ 9DA6 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DAA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DAE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DB2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DB6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DBA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DBE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DC2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DC6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DCA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DCE 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DD2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DD6 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DDA
 117+ 9DDA 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DDE 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DE2 06 00
 119+ 9DE4
 120+ 9DE4 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DE8 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DEC 02 00
 122+ 9DEE
 123+ 9DEE 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DF2 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DF6 04 00
 125+ 9DF8 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DFC 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E00 08 00
 127+ 9E02
 128+ 9E02 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E06 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E0A 02 00
 130+ 9E0C
 131+ 9E0C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E10 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E14 06 00
 133+ 9E16
 134+ 9E16 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E1A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E1E 06 00
 136+ 9E20
 137+ 9E20              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E20
 139+ 9E20 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E24 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E28 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E2C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E30 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E34 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E38 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E3C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E40 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E48 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E4C 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E50
 152+ 9E50 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E54 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E58 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E5C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E60 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E64 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E68 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E6C 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E70 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E74 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E78 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E7C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E80 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E84
 166+ 9E84 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E88 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E8C 06 00
 168+ 9E8E
 169+ 9E8E 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E92 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E96 02 00
 171+ 9E98
 172+ 9E98 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E9C 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EA0 04 00
 174+ 9EA2 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EA6 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EAA 08 00
 176+ 9EAC
 177+ 9EAC 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EB0 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EB4 02 00
 179+ 9EB6
 180+ 9EB6 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EBA 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EBE 06 00
 182+ 9EC0
 183+ 9EC0 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EC4 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EC8 06 00
 185+ 9ECA
 186+ 9ECA 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9ECE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9ED2 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9ED6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EDA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EDE 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EE2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EE6 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EEA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EEE 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EF2 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EF6 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EFA
 199+ 9EFA              ; ----- ----- ----- ----- -----
 200+ 9EFA              ;
 201+ 9EFA              ;   27/06/23
 202+ 9EFA
 203+ 9EFA              Movimiento
 204+ 9EFA
 205+ 9EFA              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EFA
 207+ 9EFA              ;    ld hl,(Posicion_actual)
 208+ 9EFA
 209+ 9EFA FB               ei
 210+ 9EFB
 211+ 9EFB 3A 02 89         ld a,(Ctrl_2)
 212+ 9EFE CB 57            bit 2,a
 213+ 9F00 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F02
 215+ 9F02 2A F4 88         ld hl,(Puntero_mov)
 216+ 9F05 7E               ld a,(hl)
 217+ 9F06
 218+ 9F06              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F06
 220+ 9F06              Inicia_desplazamiento.
 221+ 9F06
 222+ 9F06              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F06
 224+ 9F06 CD FB 9F         call Ajusta_velocidad_desplazamiento
 225+ 9F09
 226+ 9F09              ; Iniciamos (Repetimos_mov).
 227+ 9F09
 228+ 9F09 7E               ld a,(hl)
 229+ 9F0A E6 0F            and $0f
 230+ 9F0C 32 FA 88         ld (Repetimos_desplazamiento),a
 231+ 9F0F 32 FB 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F12
 233+ 9F12              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F12
 235+ 9F12 23               inc hl
 236+ 9F13 7E               ld a,(hl)
 237+ 9F14 32 FD 88         ld (Cola_de_desplazamiento),a
 238+ 9F17 2B               dec hl
 239+ 9F18
 240+ 9F18 21 02 89         ld hl,Ctrl_2
 241+ 9F1B CB D6            set 2,(hl)
 242+ 9F1D
 243+ 9F1D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F1D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F1D
 246+ 9F1D              Desplazamiento_iniciado
 247+ 9F1D
 248+ 9F1D CD CF 9F         call Aplica_desplazamiento
 249+ 9F20
 250+ 9F20 3A 02 89         ld a,(Ctrl_2)
 251+ 9F23 CB 67            bit 4,a
 252+ 9F25 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F26
 254+ 9F26 21 FA 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F29 35               dec (hl)
 256+ 9F2A C0               ret nz
 257+ 9F2B
 258+ 9F2B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F2B              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F2B              ; Analiza (Cola_de_desplazamiento).
 261+ 9F2B
 262+ 9F2B 3A FD 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F2E A7               and a
 264+ 9F2F CC 24 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F32 28 30            jr z,Reinicia_el_movimiento
 266+ 9F34
 267+ 9F34 FE FF            cp $ff
 268+ 9F36 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F38
 270+ 9F38 FE FE            cp $fe
 271+ 9F3A CC A8 9F         call z,Fijamos_bucle
 272+ 9F3D 28 25            jr z,Reinicia_el_movimiento
 273+ 9F3F
 274+ 9F3F FE FD            cp $fd
 275+ 9F41 20 11            jr nz,1F
 276+ 9F43
 277+ 9F43              ; ---
 278+ 9F43              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F43
 280+ 9F43 3A 02 89         ld a,(Ctrl_2)
 281+ 9F46 CB 5F            bit 3,a
 282+ 9F48 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F4A
 284+ 9F4A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F4A
 286+ 9F4A 21 02 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F4D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F4F
 289+ 9F4F CD B9 9F         call Inicia_Repetimos_movimiento
 290+ 9F52 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F54              ; ---
 292+ 9F54
 293+ 9F54 FE 01        1 cp 1
 294+ 9F56 CA 92 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F59
 296+ 9F59 3D               dec a
 297+ 9F5A 32 FD 88         ld (Cola_de_desplazamiento),a
 298+ 9F5D
 299+ 9F5D 3A FB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F60 32 FA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F63              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F63 C9               ret
 303+ 9F64
 304+ 9F64              Reinicia_el_movimiento
 305+ 9F64
 306+ 9F64 F3               di
 307+ 9F65
 308+ 9F65 3A 02 89         ld a,(Ctrl_2)
 309+ 9F68 CB 5F            bit 3,a
 310+ 9F6A 28 1B            jr z,2F
 311+ 9F6C
 312+ 9F6C              ; (Cola_de_desplazamiento)="254".
 313+ 9F6C
 314+ 9F6C 21 FC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F6F 35               dec (hl)
 316+ 9F70 20 15            jr nz,2F
 317+ 9F72
 318+ 9F72              ; Fin de las repeticiones del último movimiento.
 319+ 9F72
 320+ 9F72 21 02 89         ld hl,Ctrl_2
 321+ 9F75 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F77
 323+ 9F77 2A F4 88         ld hl,(Puntero_mov)
 324+ 9F7A 23               inc hl
 325+ 9F7B 23               inc hl
 326+ 9F7C 23               inc hl
 327+ 9F7D 22 F4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F80              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F80 7E               ld a,(hl)
 330+ 9F81 32 FD 88         ld (Cola_de_desplazamiento),a
 331+ 9F84
 332+ 9F84 C3 2B 9F         jp Cola
 333+ 9F87
 334+ 9F87 CD C4 9F     2 call Inicia_Puntero_mov
 335+ 9F8A
 336+ 9F8A 21 02 89         ld hl,Ctrl_2
 337+ 9F8D CB 96            res 2,(hl)
 338+ 9F8F
 339+ 9F8F C3 FA 9E         jp Movimiento
 340+ 9F92
 341+ 9F92              Siguiente_desplazamiento
 342+ 9F92
 343+ 9F92              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F92              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F92
 346+ 9F92 21 02 89         ld hl,Ctrl_2
 347+ 9F95 CB 96            res 2,(hl)
 348+ 9F97
 349+ 9F97 2A F4 88         ld hl,(Puntero_mov)
 350+ 9F9A 23               inc hl
 351+ 9F9B 23               inc hl
 352+ 9F9C 22 F4 88         ld (Puntero_mov),hl
 353+ 9F9F
 354+ 9F9F 7E               ld a,(hl)
 355+ 9FA0 A7               and a
 356+ 9FA1 CC 24 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FA4 CA 64 9F         jp z,Reinicia_el_movimiento
 358+ 9FA7
 359+ 9FA7 C9               ret
 360+ 9FA8              ; Subrutinas -----------------------------------------
 361+ 9FA8              ; ---------- --------- --------- ---------- ----------
 362+ 9FA8              ;
 363+ 9FA8              ;   24/07/23
 364+ 9FA8              ;
 365+ 9FA8              ;   Fijamos_bucle
 366+ 9FA8              ;
 367+ 9FA8              ;
 368+ 9FA8
 369+ 9FA8              Fijamos_bucle
 370+ 9FA8
 371+ 9FA8 3A F8 88         ld a,(Incrementa_puntero)
 372+ 9FAB 3C               inc a
 373+ 9FAC 32 F9 88         ld (Incrementa_puntero_backup),a
 374+ 9FAF
 375+ 9FAF CD 24 A0         call Incrementa_Puntero_indice_mov
 376+ 9FB2 2A F2 88         ld hl,(Puntero_indice_mov)
 377+ 9FB5 22 F6 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FB8 C9               ret
 379+ 9FB9
 380+ 9FB9              ; ---------- --------- --------- ---------- ----------
 381+ 9FB9              ;
 382+ 9FB9              ;   07/7/23
 383+ 9FB9              ;
 384+ 9FB9              ;   Inicia_Repetimos_movimiento
 385+ 9FB9              ;
 386+ 9FB9              ;
 387+ 9FB9
 388+ 9FB9              Inicia_Repetimos_movimiento
 389+ 9FB9
 390+ 9FB9              ; Iniciamos (Repetimos_movimiento).
 391+ 9FB9
 392+ 9FB9 DD 2A F4 88      ld ix,(Puntero_mov)
 393+ 9FBD DD 7E 02         ld a,(ix+2)
 394+ 9FC0 32 FC 88         ld (Repetimos_movimiento),a
 395+ 9FC3
 396+ 9FC3 C9               ret
 397+ 9FC4
 398+ 9FC4              ; ---------- --------- --------- ---------- ----------
 399+ 9FC4              ;
 400+ 9FC4              ;   26/6/23
 401+ 9FC4              ;
 402+ 9FC4              ;   Inicia_Puntero_mov
 403+ 9FC4              ;
 404+ 9FC4              ;
 405+ 9FC4
 406+ 9FC4 2A F2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FC7 5E               ld e,(hl)
 408+ 9FC8 23               inc hl
 409+ 9FC9 56               ld d,(hl)
 410+ 9FCA EB               ex de,hl
 411+ 9FCB 22 F4 88         ld (Puntero_mov),hl
 412+ 9FCE C9               ret
 413+ 9FCF
 414+ 9FCF              ; ---------- --------- --------- ---------- ----------
 415+ 9FCF              ;
 416+ 9FCF              ;   27/06/23
 417+ 9FCF              ;
 418+ 9FCF              ;   Aplica_movimiento.
 419+ 9FCF
 420+ 9FCF              Aplica_desplazamiento
 421+ 9FCF
 422+ 9FCF              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FCF
 424+ 9FCF 2A F4 88         ld hl, (Puntero_mov)
 425+ 9FD2
 426+ 9FD2 7E               ld a,(hl)
 427+ 9FD3 E6 F0            and $f0
 428+ 9FD5 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FD6
 430+ 9FD6 CB 7E            bit 7,(hl)
 431+ 9FD8 28 03            jr z,1F
 432+ 9FDA CD F8 99         call Mov_up
 433+ 9FDD 2A F4 88     1 ld hl, (Puntero_mov)
 434+ 9FE0 CB 76            bit 6,(hl)
 435+ 9FE2 28 03            jr z,2F
 436+ 9FE4 CD C7 99         call Mov_down
 437+ 9FE7 2A F4 88     2 ld hl, (Puntero_mov)
 438+ 9FEA CB 6E            bit 5,(hl)
 439+ 9FEC 28 03            jr z,3F
 440+ 9FEE CD 59 9B         call Mov_left
 441+ 9FF1 2A F4 88     3 ld hl, (Puntero_mov)
 442+ 9FF4 CB 66            bit 4,(hl)
 443+ 9FF6 C8               ret z
 444+ 9FF7 CD 3B 9A         call Mov_right
 445+ 9FFA C9               ret
 446+ 9FFB
 447+ 9FFB              ; ---------- --------- --------- ---------- ----------
 448+ 9FFB              ;
 449+ 9FFB              ;   26/06/23
 450+ 9FFB              ;
 451+ 9FFB              ;   Ajusta_velocidad_desplazamiento.
 452+ 9FFB
 453+ 9FFB              Ajusta_velocidad_desplazamiento
 454+ 9FFB
 455+ 9FFB              ; 1er byte de la cadena de movimiento.
 456+ 9FFB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ 9FFB
 458+ 9FFB CD 19 A0         call Extrae_nibble_alto
 459+ 9FFE
 460+ 9FFE 32 DE 88         ld (Vel_up),a
 461+ A001 79               ld a,c
 462+ A002 E6 0F            and $0f
 463+ A004 32 DF 88         ld (Vel_down),a
 464+ A007
 465+ A007              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A007              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A007
 468+ A007 23               inc hl
 469+ A008 CD 19 A0         call Extrae_nibble_alto
 470+ A00B
 471+ A00B 32 DC 88         ld (Vel_left),a
 472+ A00E 79               ld a,c
 473+ A00F E6 0F            and $0f
 474+ A011 32 DD 88         ld (Vel_right),a
 475+ A014
 476+ A014              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A014
 478+ A014 23               inc hl
 479+ A015 22 F4 88         ld (Puntero_mov),hl
 480+ A018 C9               ret
 481+ A019
 482+ A019 06 04        Extrae_nibble_alto ld b,4
 483+ A01B 7E               ld a,(hl)
 484+ A01C 4F               ld c,a
 485+ A01D E6 F0            and $f0
 486+ A01F CB 3F        1 srl a
 487+ A021 10 FC            djnz 1B
 488+ A023 C9               ret
 489+ A024
 490+ A024              ; ---------- --------- --------- ---------- ----------
 491+ A024              ;
 492+ A024              ;   5/7/23
 493+ A024              ;
 494+ A024              ;   Incrementa_Puntero_indice_mov
 495+ A024
 496+ A024              Incrementa_Puntero_indice_mov
 497+ A024
 498+ A024 21 F8 88         ld hl,Incrementa_puntero
 499+ A027 34               inc (hl)
 500+ A028
 501+ A028 2A F2 88         ld hl,(Puntero_indice_mov)
 502+ A02B 01 02 00         ld bc,2
 503+ A02E A7               and a
 504+ A02F 09               add hl,bc
 505+ A030 22 F2 88         ld (Puntero_indice_mov),hl
 506+ A033
 507+ A033 7E               ld a,(hl)
 508+ A034 A7               and a
 509+ A035
 510+ A035              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A035
 512+ A035              ;    jr z,$
 513+ A035
 514+ A035              ;! Reinicia el Patrón de movimiento.
 515+ A035
 516+ A035 CC 3A A0         call z,Inicializa_Puntero_indice_mov
 517+ A038
 518+ A038 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A039
 520+ A039 C9               ret
 521+ A03A
 522+ A03A
 523+ A03A              ; ---------- --------- --------- ---------- ----------
 524+ A03A              ;
 525+ A03A              ;   24/07/23
 526+ A03A              ;
 527+ A03A              ;   Inicializa_Puntero_indice_mov
 528+ A03A
 529+ A03A              Inicializa_Puntero_indice_mov
 530+ A03A
 531+ A03A              ; Existe etiqueta de bucle principal???
 532+ A03A
 533+ A03A 2A F6 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A03D 24               inc h
 535+ A03E 25               dec h
 536+ A03F 28 05            jr z,2F
 537+ A041
 538+ A041 22 F2 88         ld (Puntero_indice_mov),hl
 539+ A044 18 14            jr 3F
 540+ A046
 541+ A046              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A046
 543+ A046 3A F8 88     2 ld a,(Incrementa_puntero)
 544+ A049 47               ld b,a
 545+ A04A
 546+ A04A 2A F2 88         ld hl,(Puntero_indice_mov)
 547+ A04D 2B           1 dec hl
 548+ A04E 2B               dec hl
 549+ A04F 10 FC            djnz 1B
 550+ A051 22 F2 88         ld (Puntero_indice_mov),hl
 551+ A054
 552+ A054 AF               xor a
 553+ A055 32 F8 88         ld (Incrementa_puntero),a
 554+ A058 18 06            jr 4F
 555+ A05A
 556+ A05A 3A F9 88     3 ld a,(Incrementa_puntero_backup)
 557+ A05D 32 F8 88         ld (Incrementa_puntero),a
 558+ A060 C9           4 ret
 559+ A061
 560+ A061
 561+ A061
# file closed: Patrones_de_mov.asm
1700  A061              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A061              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A061              ;
   3+ A061              ;	4/9/23
   4+ A061              ;
   5+ A061              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A061
   7+ A061              ;	ADC HL,SP	LD (addr),SP
   8+ A061              ;	ADD HL,SP	LD SP,(addr)
   9+ A061              ;	ADD IX,SP	LD SP,nn
  10+ A061              ; 	ADD IY,SP	LD SP,HL
  11+ A061              ;				LD SP,IX
  12+ A061              ;	DEC SP		LD SP,IY
  13+ A061
  14+ A061              ;	EX (SP),HL
  15+ A061              ;	EX (SP),IX
  16+ A061              ;	EX (SP),IY
  17+ A061
  18+ A061              ;	INC SP
  19+ A061
  20+ A061                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 16 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 04 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1E 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A F1 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 24 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 1C 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 04 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1E 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A F1 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 24 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 16 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 1C 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 16 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 3A 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 113+ 7FFE
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ec
 118+ 72EC
 119+ 72EC              Gestiona_albumes_de_fotos
 120+ 72EC
 121+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72EC              ;   Vaciamos Album_de_fotos.
 123+ 72EC
 124+ 72EC              ;   Album_de_fotos. Contiene datos ???
 125+ 72EC
 126+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72EF 7E               ld a,(hl)
 128+ 72F0 A7               and a
 129+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72F3
 131+ 72F3 2A 20 89         ld hl,(End_Snapshot)
 132+ 72F6 01 00 70         ld bc,Album_de_fotos
 133+ 72F9 11 01 70         ld de,Album_de_fotos+1
 134+ 72FC AF               xor a
 135+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72FE
 137+ 72FE CD 8E 73         call Limpia_album
 138+ 7301
 139+ 7301 21 00 00         ld hl,0
 140+ 7304 22 20 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 7307
 142+ 7307              ; ----- ----- ----- -----
 143+ 7307
 144+ 7307              ;   Album_de_fotos_1. Contiene datos ???
 145+ 7307
 146+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 730A 7E               ld a,(hl)
 148+ 730B A7               and a
 149+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 730E              ;                               ; _ información del album2 al album1.
 151+ 730E
 152+ 730E              ; ----- ----- ----- -----
 153+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 730E
 155+ 730E 2A 26 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 7317
 159+ 7317 CD 8E 73         call Limpia_album
 160+ 731A
 161+ 731A              ;   Calculamos (End_Snapshot)
 162+ 731A
 163+ 731A A7               and a
 164+ 731B ED 4A            adc hl,bc
 165+ 731D 22 20 89         ld (End_Snapshot),hl
 166+ 7320
 167+ 7320              ;   Limpiamos Album_de_fotos_1.
 168+ 7320
 169+ 7320 2A 26 89         ld hl,(End_Snapshot_1)
 170+ 7323 01 54 70         ld bc,Album_de_fotos_1
 171+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 172+ 7329 AF               xor a
 173+ 732A 02               ld (bc),a
 174+ 732B
 175+ 732B CD 8E 73         call Limpia_album
 176+ 732E
 177+ 732E 21 00 00         ld hl,0
 178+ 7331 22 26 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 7334
 180+ 7334              ; ----- ----- ----- -----
 181+ 7334
 182+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 183+ 7334
 184+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 7337 7E               ld a,(hl)
 186+ 7338 A7               and a
 187+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 733B              ;                               ; _ información del album3 al album2.
 189+ 733B              ; ----- ----- ----- -----
 190+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 733B
 192+ 733B 2A 2A 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7344
 196+ 7344 CD 8E 73         call Limpia_album
 197+ 7347
 198+ 7347              ;   Calculamos (End_Snapshot_1):
 199+ 7347
 200+ 7347 A7               and a
 201+ 7348 ED 4A            adc hl,bc
 202+ 734A 22 26 89         ld (End_Snapshot_1),hl
 203+ 734D
 204+ 734D              ;   Limpiamos Album_de_fotos_2.
 205+ 734D
 206+ 734D 2A 2A 89         ld hl,(End_Snapshot_2)
 207+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7356 AF               xor a
 210+ 7357 02               ld (bc),a
 211+ 7358
 212+ 7358 CD 8E 73         call Limpia_album
 213+ 735B
 214+ 735B 21 00 00         ld hl,0
 215+ 735E 22 2A 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7361
 217+ 7361              ; ----- ----- ----- -----
 218+ 7361
 219+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7361
 221+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7364 7E               ld a,(hl)
 223+ 7365 A7               and a
 224+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7367
 226+ 7367              ; ----- ----- ----- -----
 227+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7367
 229+ 7367 2A 2E 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7370
 233+ 7370 CD 8E 73         call Limpia_album
 234+ 7373
 235+ 7373              ;   Calculamos (End_Snapshot_2):
 236+ 7373
 237+ 7373 A7               and a
 238+ 7374 ED 4A            adc hl,bc
 239+ 7376 22 2A 89         ld (End_Snapshot_2),hl
 240+ 7379
 241+ 7379              ;   Limpiamos Album_de_fotos_3.
 242+ 7379
 243+ 7379 2A 2E 89         ld hl,(End_Snapshot_3)
 244+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7382 AF               xor a
 247+ 7383 02               ld (bc),a
 248+ 7384
 249+ 7384 CD 8E 73         call Limpia_album
 250+ 7387
 251+ 7387 21 00 00         ld hl,0
 252+ 738A 22 2E 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 738D C9               ret
 254+ 738E
 255+ 738E              ; ----------------------------------------------------
 256+ 738E              ;
 257+ 738E              ;   10/8/23
 258+ 738E              ;
 259+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 738E              ;
 261+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 738E              ;           BC ..... Dirección de inicio del álbum.
 263+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 738E
 265+ 738E              ;    ld hl,(End_Snapshot)
 266+ 738E              ;    ld bc,Album_de_fotos
 267+ 738E              ;    ld de,Album_de_fotos+1
 268+ 738E
 269+ 738E              ;   MODIFICA: A,HL,BC y DE.
 270+ 738E
 271+ 738E              Limpia_album
 272+ 738E D5               push de                     ; Guardo DESTINO.
 273+ 738F C5               push bc                     ; Guardo ORIGEN.
 274+ 7390 ED 42            sbc hl,bc
 275+ 7392 4D               ld c,l
 276+ 7393 44               ld b,h
 277+ 7394 E1               pop hl
 278+ 7395 C5               push bc
 279+ 7396 ED B0            ldir
 280+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 739A C9               ret                         ; _ a otro).
 283+ 739B              ;
 284+ 739B
 285+ 739B              ; -----------------------------------------------
 286+ 739B
 287+ 739B
 288+ 739B
 289+ 739B
 290+ 739B
# file closed: Guarda_foto_registros.asm
1701  739B
1702  739B              	SAVESNA "Pruebas.sna", START
1703  739B
1704  739B
1705  739B
1706  739B
# file closed: Banco_de_pruebas.asm
