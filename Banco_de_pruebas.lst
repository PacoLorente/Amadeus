# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 2D 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD 3C A2     	call Pinta_disparos_Amadeus
  73  82F6 CD 27 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 57 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 37 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 55 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 55 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 58 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 47 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 5A 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 54 89        	defw Disparo_2
  40+ 8927 4E 89        	defw Disparo_3
  41+ 8929 48 89        	defw Disparo_4
  42+ 892B 42 89        	defw Disparo_5
  43+ 892D 3C 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00           Disparo_7 db 0	     						; Control.
  49+ 8937
  50+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893A 00 00        	defw 0									; Puntero de impresión.
  52+ 893C 00           Disparo_6 db 0		    					; Control.
  53+ 893D
  54+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8940 00 00        	defw 0									; Puntero de impresión.
  56+ 8942 00           Disparo_5 db 0			    				; Control.
  57+ 8943
  58+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8946 00 00        	defw 0									; Puntero de impresión.
  60+ 8948 00           Disparo_4 db 0				     			; Control.
  61+ 8949
  62+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 894C 00 00        	defw 0									; Puntero de impresión.
  64+ 894E 00           Disparo_3 db 0					    		; Control.
  65+ 894F
  66+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8952 00 00        	defw 0									; Puntero de impresión.
  68+ 8954 00           Disparo_2 db 0						    	; Control.
  69+ 8955
  70+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 8958 00 00        	defw 0									; Puntero de impresión.
  72+ 895A 00           Disparo_1 db 0							    ; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 148  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A7 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01 01 01  	db 1,1,1,1,1,1	 							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA5 01 01
  18+ 8BA7
  19+ 8BA7 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA8 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB0 01 02
  22+ 8BB2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB6 01 02
  23+ 8BB8
# file closed: Niveles.asm
 149  8BB8
 150  8BB8              ; --------------------------------------------------------------------------------
 151  8BB8              ;
 152  8BB8              ; 12/05/24
 153  8BB8              ;
 154  8BB8              ; Parámetros DRAW.
 155  8BB8              ;
 156  8BB8
 157  8BB8              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BB8
 159  8BB8 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BB9              ;															- Patrón de movimiento.
 161  8BB9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BBA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BBB
 164  8BBB 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BBC              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BBC
 167  8BBC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BBC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BBC              ; Ejemplos.
 170  8BBC
 171  8BBC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BBC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BBC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BBC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BBC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BBC
 177  8BBC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BBD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BBD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BBD
 181  8BBD 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BBF              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BBF
 184  8BBF 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC1
 186  8BC1              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC1
 188  8BC1 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BC3              ;														; _palabras que componen el "movimiento_masticado".
 190  8BC3
 191  8BC3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BC3
 193  8BC3 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BC4              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BC4              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BC4              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BC4              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BC4
 199  8BC4 00           Ctrl_2 db 0
 200  8BC5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BC5              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BC5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BC5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BC5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BC5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BC5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BC5              ;
 208  8BC5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BC5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BC5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BC5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BC5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BC5              ;														BIT 4, ???
 214  8BC5              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BC5
 216  8BC5 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BC6              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BC6              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BC6              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BC6              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BC6              ;
 222  8BC6              ; 														DESCRIPCIÖN:
 223  8BC6              ;
 224  8BC6              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BC6              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BC6              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BC6              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BC6              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BC6              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BC6              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BC6              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BC6              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BC6              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BC6              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BC6              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BC6              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BC6              ;
 238  8BC6              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BC6              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BC6              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BC6
 242  8BC6              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BC6
 244  8BC6 00           Filas db 0												; Filas. [DRAW]
 245  8BC7 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BC8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BCA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BCC
 249  8BCC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BCC
 251  8BCC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BCD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BCD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BCD
 255  8BCD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BCD
 257  8BCD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BCD              ;
 259  8BCD              ;	COLORES: 0 ..... NEGRO
 260  8BCD              ;    		 1 ..... AZUL
 261  8BCD              ; 			 2 ..... ROJO
 262  8BCD              ;			 3 ..... MAGENTA
 263  8BCD              ; 			 4 ..... VERDE
 264  8BCD              ; 			 5 ..... CIAN
 265  8BCD              ;			 6 ..... AMARILLO
 266  8BCD              ; 			 7 ..... BLANCO
 267  8BCD
 268  8BCD 00 00        Indice_Sprite_der defw 0
 269  8BCF 00 00        Indice_Sprite_izq defw 0
 270  8BD1 00 00        Puntero_DESPLZ_der defw 0
 271  8BD3 00 00        Puntero_DESPLZ_izq defw 0
 272  8BD5
 273  8BD5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BD7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BD8 00           Columnas db 0
 276  8BD9 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BDB              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BDB 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BDC
 280  8BDC              ; variables de control general.
 281  8BDC
 282  8BDC 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BDD
 284  8BDD              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BDD
 286  8BDD              Perfiles_de_velocidad
 287  8BDD
 288  8BDD 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BDE 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BDF 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE1
 293  8BE1              ; Contadores de 16 bits.
 294  8BE1
 295  8BE1 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BE9
 300  8BE9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BE9
 302  8BE9 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BEB 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BED 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BEF              ;
 306  8BEF              ;
 307  8BEF 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF0              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF0              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF0 00           Incrementa_puntero_backup db 0
 311  8BF1 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF2              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF2 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BF3 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BF4 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BF5              ;
 317  8BF5              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BF5              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BF5              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BF5              ;
 321  8BF5              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BF5              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BF5              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BF5              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BF5              ;
 326  8BF5              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BF5              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BF5              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BF5
 330  8BF5 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BF6
 332  8BF6              ;														DESCRIPCIÓN:
 333  8BF6              ;
 334  8BF6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BF6              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BF6              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BF6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BF6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BF6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BF6
 341  8BF6              ;														BIT 3, Recarga de nueva oleada.
 342  8BF6              ;														BIT 4, Recarga de nueva oleada.
 343  8BF6              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BF6              ;														BIT 6, **** Frame completo.
 345  8BF6              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BF6
 347  8BF6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BF8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BF8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BF8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BF8
 352  8BF8              ; Gestión de ENTIDADES y CAJAS.
 353  8BF8
 354  8BF8 00 00        Puntero_store_caja defw 0
 355  8BFA 00 00        Puntero_restore_caja defw 0
 356  8BFC 00 00        Indice_restore_caja defw 0
 357  8BFE 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8BFF 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C00 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C01
 361  8C01 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C03 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C05              ;														; _ puntero (Indice_entidades).
 364  8C05
 365  8C05              ;---------------------------------------------------------------------------------------------------------------
 366  8C05              ;
 367  8C05              ;	13/10/24
 368  8C05              ;
 369  8C05              ;	Álbumes.
 370  8C05
 371  8C05 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C07              ;														; _variable para almacenar lo posición del puntero_
 373  8C07              ; 														; _de pila, SP.
 374  8C07 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C09              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C09
 377  8C09              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C09
 379  8C09 00 00        Album_de_pintado defw 0
 380  8C0B 00 00        Album_de_borrado defw 0
 381  8C0D 00 00        Album_de_pintado_Amadeus defw 0
 382  8C0F 00 00        Album_de_borrado_Amadeus defw 0
 383  8C11
 384  8C11 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C13 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C15
 387  8C15 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C17 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C19
 390  8C19
 391  8C19 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C1B
 393  8C1B 00           Num_de_bytes_album_de_disparos db 0
 394  8C1C 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C1D
 396  8C1D 07           Numero_de_disparos_de_entidades db 7
 397  8C1E
 398  8C1E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C1F 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C20
 401  8C20 00 00        Techo_Scanlines_album defw 0
 402  8C22 00 00        Techo_Scanlines_album_2 defw 0
 403  8C24 00           Switch db 0
 404  8C25 00 00        Techo defw 0
 405  8C27 00 00        Scanlines_album_SP defw 0
 406  8C29 00 89        India_SP defw Tabla_de_pintado
 407  8C2B 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C2D
 409  8C2D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C2E              ;
 411  8C2E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C2E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C2E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C2E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C2E              ;																Habilita el borrado/pintado de sprites.
 416  8C2E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C2E              ;																_ a la baja.
 418  8C2E              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C2E              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C2E              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C2E              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C2E              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C2E              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C2E
 425  8C2E 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C2F              ;
 427  8C2F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C2F              ;
 429  8C2F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C2F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C2F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C2F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C2F              ;
 434  8C2F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C2F              ;															_ masticados ya generados.
 436  8C2F              ;
 437  8C2F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C2F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C2F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C2F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C2F
 442  8C2F 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C30              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 444  8C30              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 445  8C30
 446  8C30              ; Gestión de Disparos.
 447  8C30
 448  8C30 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 449  8C32 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 450  8C34 00           Impacto2 db 0											; Byte de control de impactos.
 451  8C35
 452  8C35              ;
 453  8C35              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 454  8C35              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 455  8C35              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 456  8C35              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 457  8C35
 458  8C35
 459  8C35
 460  8C35
 461  8C35
 462  8C35
 463  8C35
 464  8C35 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 465  8C37              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 466  8C37              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 467  8C37
 468  8C37 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 469  8C39              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 470  8C39 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8C3C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8C3C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C3F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 474  8C3F
 475  8C3F              ;---------------------------------------------------------------------------------------------------------------
 476  8C3F
 477  8C3F              ; Relojes y temporizaciones.
 478  8C3F
 479  8C3F 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 480  8C40 05           Clock_explosion_Amadeus db 5
 481  8C41 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 482  8C42
 483  8C42 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 484  8C44 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 485  8C46 00           Numero_rnd_disparos db 0
 486  8C47
 487  8C47 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 488  8C49 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 489  8C4A              ;														; Repite la oleada de entidades.
 490  8C4A A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 491  8C4B A0           CLOCK_disparos_de_entidades db $a0
 492  8C4C
 493  8C4C              ;---------------------------------------------------------------------------------------------------------------
 494  8C4C
 495  8C4C              ; Gestión de NIVELES.
 496  8C4C
 497  8C4C 00           Nivel db 0												; Nivel actual del juego.
 498  8C4D 00 00        Puntero_indice_NIVELES defw 0
 499  8C4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8C51              ; 														; _ que definen el NIVEL.
 501  8C51
 502  8C51              ; ---------------------------------------------------------------------------------------------------------------
 503  8C51
 504  8C51              ; Temporizaciones Shield.
 505  8C51
 506  8C51 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 507  8C55 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 508  8C57 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 509  8C58 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 510  8C59 00           Shield_3 db 0
 511  8C5A
 512  8C5A 03           Lives db 3
 513  8C5B
 514  8C5B              ; 	INICIO  *************************************************************************************************************************************************************************
 515  8C5B              ;
 516  8C5B              ;	5/1/24
 517  8C5B
 518  8C5B              START
 519  8C5B
 520  8C5B 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 521  8C5E 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 522  8C60 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 523  8C62 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 524  8C64 F3           	DI
 525  8C65
 526  8C65              ; Limpiamos pantalla.
 527  8C65
 528  8C65 3E 07        	ld a,%00000111
 529  8C67 CD D4 94     	call Cls
 530  8C6A CD 2C 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 531  8C6D
 532  8C6D              ; INICIALIZACIÓN.
 533  8C6D
 534  8C6D 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 535  8C6F CD 79 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 536  8C72
 537  8C72 CD C1 8E     	call Extrae_numero_aleatorio_y_avanza
 538  8C75
 539  8C75 6F           	ld l,a
 540  8C76 26 00        	ld h,0
 541  8C78 22 47 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C7B
 543  8C7B              ;	Inicializa 1er Nivel.
 544  8C7B
 545  8C7B 21 94 8B     	ld hl,Indice_de_niveles
 546  8C7E 22 4D 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 547  8C81 CD A9 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 548  8C84              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 549  8C84              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 550  8C84              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 551  8C84
 552  8C84              ;	Inicia los álbumes de líneas.
 553  8C84
 554  8C84 CD 7A 90     	call Inicia_albumes_de_lineas
 555  8C87              ;
 556  8C87 CD 8A 90     	call Inicia_albumes_de_lineas_Amadeus
 557  8C8A CD 97 90     	call Inicia_albumes_de_disparos
 558  8C8D
 559  8C8D CD EE 92     4 call Inicia_Entidades
 560  8C90 CD 51 93     	call Inicia_Amadeus
 561  8C93
 562  8C93              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 563  8C93              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 564  8C93              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 565  8C93
 566  8C93 11 6D 89     	ld de,Amadeus_BOX
 567  8C96 CD A4 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 568  8C99 CD 94 93     	call Limpiamos_bandeja_DRAW
 569  8C9C
 570  8C9C              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 571  8C9C
 572  8C9C 06 3C        	ld b,60
 573  8C9E CD 7A 9D     2 call Amadeus_a_izquierda
 574  8CA1 10 FB        	djnz 2B
 575  8CA3
 576  8CA3 CD 58 90     	call Genera_datos_de_impresion_Amadeus
 577  8CA6
 578  8CA6              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 579  8CA6
 580  8CA6 CD B3 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 581  8CA9
 582  8CA9 CD 37 91     	call Inicia_Shield
 583  8CAC
 584  8CAC 2A 27 8C     6 ld hl,(Scanlines_album_SP)
 585  8CAF 22 20 8C     	ld (Techo_Scanlines_album),hl
 586  8CB2
 587  8CB2 2A 0B 8C     	ld hl,(Album_de_borrado)
 588  8CB5 22 27 8C     	ld (Scanlines_album_SP),hl
 589  8CB8
 590  8CB8 21 00 89     	ld hl,Tabla_de_pintado
 591  8CBB 22 29 8C     	ld (India_SP),hl
 592  8CBE
 593  8CBE 21 2D 8C     	ld hl,Ctrl_3
 594  8CC1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 595  8CC3 CB D6        	set 2,(hl)
 596  8CC5 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 597  8CC7
 598  8CC7 FB           	ei 													; Ha de apuntar a $5c3a.
 599  8CC8
 600  8CC8 76           	halt
 601  8CC9
 602  8CC9              ; ------------------------------------
 603  8CC9
 604  8CC9              Main
 605  8CC9              ;
 606  8CC9              ; 25/10/24
 607  8CC9
 608  8CC9              ; Gestión de disparos.
 609  8CC9
 610  8CC9 CD 96 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 611  8CCC CD 6D 9F     	call Motor_de_disparos_entidades
 612  8CCF CD E8 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 613  8CD2
 614  8CD2              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 615  8CD2              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 616  8CD2              ; Este hecho lo indica el bit2 de (Impacto2).
 617  8CD2
 618  8CD2 CD 85 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 619  8CD5
 620  8CD5              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 621  8CD5
 622  8CD5 21 4B 8C     	ld hl,CLOCK_disparos_de_entidades
 623  8CD8 35           	dec (hl)
 624  8CD9 CC DF 8D     	call z,Autoriza_disparo_de_entidades
 625  8CDC
 626  8CDC 2A 47 8C     	ld hl,(Clock_next_entity)
 627  8CDF ED 4B 78 5C  	ld bc,(FRAMES)
 628  8CE3 A7           	and a
 629  8CE4 ED 42        	sbc hl,bc
 630  8CE6 20 16        	jr nz,1F
 631  8CE8
 632  8CE8              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 633  8CE8              ; _ (Clock_next_entity) para la siguiente entidad.
 634  8CE8
 635  8CE8 3A FF 8B     	ld a,(Numero_parcial_de_entidades)
 636  8CEB 47           	ld b,a
 637  8CEC 3A 00 8C     	ld a,(Entidades_en_curso)
 638  8CEF B8           	cp b
 639  8CF0 28 0C        	jr z,1F
 640  8CF2 30 0A        	jr nc,1F
 641  8CF4
 642  8CF4 3C           	inc a
 643  8CF5 32 00 8C     	ld (Entidades_en_curso),a
 644  8CF8
 645  8CF8              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 646  8CF8
 647  8CF8 CD C1 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 648  8CFB CD DD 8E     	call Define_Clock_next_entity
 649  8CFE
 650  8CFE 3A 00 8C     1 ld a,(Entidades_en_curso)
 651  8D01 A7           	and a
 652  8D02 CA 7C 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 653  8D05 47           	ld b,a												; No hay entidades que gestionar.
 654  8D06
 655  8D06              ; ( Código que ejecutamos con cada entidad: ).
 656  8D06
 657  8D06              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 658  8D06              ;
 659  8D06              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 660  8D06
 661  8D06 21 00 89     	ld hl,Tabla_de_pintado
 662  8D09 22 29 8C     	ld (India_SP),hl
 663  8D0C
 664  8D0C 21 2D 8C     	ld hl,Ctrl_3
 665  8D0F CB D6        	set 2,(hl)
 666  8D11 CD 6B 8E     	call Change
 667  8D14
 668  8D14 C5           2 push bc 												; Nº de entidades en curso.
 669  8D15
 670  8D15 CD 04 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 671  8D18 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 672  8D1C
 673  8D1C              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 674  8D1C
 675  8D1C              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 676  8D1C              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 677  8D1C
 678  8D1C 3A 34 8C     	ld a,(Impacto2)
 679  8D1F CB 5F        	bit 3,a
 680  8D21 C4 7F A1     	call nz,Compara_con_coordenadas_de_disparo
 681  8D24
 682  8D24 3A BC 8B     	ld a,(Impacto)
 683  8D27 CB 4F        	bit 1,a
 684  8D29 C4 14 92     	call nz,Genera_explosion
 685  8D2C 20 31        	jr nz,Gestiona_siguiente_entidad
 686  8D2E
 687  8D2E 3A BC 8B     	ld a,(Impacto)
 688  8D31 A7           	and a
 689  8D32 28 0C        	jr z,3F
 690  8D34
 691  8D34              ; IMPACTO en entidad por colisión con Amadeus.
 692  8D34
 693  8D34              ; 5/7/24
 694  8D34              ; Nota importante:
 695  8D34              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 696  8D34              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 697  8D34              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 698  8D34
 699  8D34 3A 71 89     	ld a,(Impacto_Amadeus)
 700  8D37 A7           	and a
 701  8D38 C4 14 92     	call nz,Genera_explosion
 702  8D3B 20 22        	jr nz,Gestiona_siguiente_entidad
 703  8D3D
 704  8D3D              ; Falsa colisión !!!
 705  8D3D
 706  8D3D 32 BC 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 707  8D40
 708  8D40              ; -------------------------------------------
 709  8D40
 710  8D40 CD 21 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 711  8D43 CD 4B 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 712  8D46 CD 11 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 713  8D49 CD 14 95     	call Genera_datos_de_impresion
 714  8D4C CD B7 93     	call Decrementa_Contador_de_mov_masticados
 715  8D4F
 716  8D4F              ; -------------------------------------------
 717  8D4F
 718  8D4F              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 719  8D4F
 720  8D4F 2A BD 8B     	ld hl,(Puntero_de_impresion)
 721  8D52 CD E8 94     	call Genera_coordenadas
 722  8D55
 723  8D55              ; TODO: Generamos disparo ???
 724  8D55
 725  8D55 3A 1F 8C     	ld a,(Permiso_de_disparo_Entidades)
 726  8D58 A7           	and a
 727  8D59 C4 F4 8D     	call nz,Entidad_genera_disparo_si_procede
 728  8D5C
 729  8D5C CD 03 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 730  8D5F
 731  8D5F              Gestiona_siguiente_entidad
 732  8D5F
 733  8D5F CD 89 93      	call Store_Restore_cajas
 734  8D62 C1           	pop bc
 735  8D63 10 AF        	djnz 2B
 736  8D65
 737  8D65              ; Hemos gestionado todas las entidades.
 738  8D65              ; ----- ----- -----
 739  8D65
 740  8D65 CD 35 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 741  8D68 CD 4C 8F     	call Ordena_tabla_de_impresion
 742  8D6B CD B3 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 743  8D6E
 744  8D6E CD F2 8E     	call Borra_diferencia
 745  8D71
 746  8D71 3A 2D 8C     	ld a,(Ctrl_3)
 747  8D74 CB 5F        	bit 3,a
 748  8D76 20 04        	jr nz,Gestion_de_Amadeus
 749  8D78
 750  8D78 EB           	ex de,hl
 751  8D79 71           	ld (hl),c
 752  8D7A 2C           	inc l
 753  8D7B 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 754  8D7C
 755  8D7C              ;! GESTIONA AMADEUS !!!!!!!!!!
 756  8D7C
 757  8D7C              Gestion_de_Amadeus
 758  8D7C
 759  8D7C 21 2D 8C     	ld hl,Ctrl_3
 760  8D7F CB 76        	bit 6,(hl)
 761  8D81 28 13        	jr z,Amadeus_vivo
 762  8D83
 763  8D83              ; Amadeus ha sido destruido.
 764  8D83              ; Decrementa (Temp_new_live).
 765  8D83
 766  8D83 21 41 8C     	ld hl,Temp_new_live
 767  8D86 35           	dec (hl)
 768  8D87 20 34        	jr nz,End_frame
 769  8D89
 770  8D89              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 771  8D89
 772  8D89 21 5A 8C     	ld hl,Lives
 773  8D8C 35           	dec (hl)
 774  8D8D
 775  8D8D              ;! Fin del juego
 776  8D8D
 777  8D8D F3           	di
 778  8D8E 28 FE        	jr z,$
 779  8D90 FB           	ei
 780  8D91
 781  8D91              ; Nueva nave.
 782  8D91
 783  8D91 CD 11 8E     	call Reinicia_Amadeus
 784  8D94 18 27        	jr End_frame
 785  8D96
 786  8D96              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 787  8D96
 788  8D96              Amadeus_vivo
 789  8D96
 790  8D96 21 2F 8C     	ld hl,Ctrl_5
 791  8D99 CB 66        	bit 4,(hl)
 792  8D9B 28 07        	jr z,5F
 793  8D9D
 794  8D9D              ; El bit4 de Ctrl_5 a "1" indica que un disparo de entidad ha alcanzado a Amadeus.
 795  8D9D              ; Iniciamos el proceso de explosión de Amadeus.
 796  8D9D
 797  8D9D CB A6        	res 4,(hl)
 798  8D9F 21 71 89     	ld hl,Impacto_Amadeus
 799  8DA2 36 01        	ld (hl),1
 800  8DA4
 801  8DA4 3A 71 89     5 ld a,(Impacto_Amadeus)
 802  8DA7 A7           	and a
 803  8DA8 C4 44 92     	call nz, Genera_explosion_Amadeus
 804  8DAB 20 10        	jr nz, End_frame
 805  8DAD
 806  8DAD CD F1 91     	call Teclado
 807  8DB0 21 2D 8C     	ld hl,Ctrl_3
 808  8DB3
 809  8DB3 CB 6E        	bit 5,(hl)
 810  8DB5 28 06        	jr z,End_frame
 811  8DB7
 812  8DB7              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 813  8DB7
 814  8DB7 CD 86 8E     	call Change_Amadeus
 815  8DBA CD 58 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 816  8DBD
 817  8DBD              End_frame
 818  8DBD
 819  8DBD              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 820  8DBD              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 821  8DBD
 822  8DBD CD AA A0     	call Genera_datos_de_impresion_disparos_Entidades
 823  8DC0 CD 6E A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 824  8DC3 CD C4 A1     	call Calcula_bytes_pintado_disparos
 825  8DC6 CD D1 A1     	call Limpia_album_de_pintado_disparos_entidades
 826  8DC9
 827  8DC9              ; ------------ ------------- --------------
 828  8DC9
 829  8DC9 2A 0B 8C     	ld hl,(Album_de_borrado)
 830  8DCC 22 27 8C     	ld (Scanlines_album_SP),hl
 831  8DCF
 832  8DCF 21 2D 8C     	ld hl,Ctrl_3
 833  8DD2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 834  8DD4 CB 9E        	res 3,(hl)
 835  8DD6 CB A6        	res 4,(hl)
 836  8DD8
 837  8DD8 AF           	xor a
 838  8DD9 D3 FE        	out ($fe),a
 839  8DDB
 840  8DDB 76           	halt
 841  8DDC
 842  8DDC              ; ----------------------------------------
 843  8DDC
 844  8DDC              ;	ld a,(Ctrl_1) 										; Existe Loop?
 845  8DDC              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 846  8DDC CA C9 8C     	jp z,Main
 847  8DDF
 848  8DDF              ;------------------------------------------
 849  8DDF              ;
 850  8DDF              ;	2/10/24
 851  8DDF
 852  8DDF              Autoriza_disparo_de_entidades
 853  8DDF
 854  8DDF 3E 01        	ld a,1
 855  8DE1 32 1F 8C     	ld (Permiso_de_disparo_Entidades),a
 856  8DE4
 857  8DE4 3A 4A 8C     	ld a,(Repone_CLOCK_disparos)
 858  8DE7 FE 19        	cp 25
 859  8DE9 38 02        	jr c,1F
 860  8DEB
 861  8DEB D6 0A        	sub 10
 862  8DED
 863  8DED 32 4A 8C     1 ld (Repone_CLOCK_disparos),a
 864  8DF0 32 4B 8C     	ld (CLOCK_disparos_de_entidades),a
 865  8DF3
 866  8DF3 C9           	ret
 867  8DF4
 868  8DF4              ;------------------------------------------
 869  8DF4              ;
 870  8DF4              ;	14/09/24
 871  8DF4              ;
 872  8DF4              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 873  8DF4
 874  8DF4              Entidad_genera_disparo_si_procede
 875  8DF4
 876  8DF4 2A 44 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 877  8DF7 CB 06        	rlc (hl)
 878  8DF9
 879  8DF9 DC FA A0     	call c,Genera_disparo_de_entidad_maldosa
 880  8DFC
 881  8DFC C9           	ret
 882  8DFD
 883  8DFD              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 884  8DFD              ;
 885  8DFD              ;	30/09/24
 886  8DFD
 887  8DFD              Actuaiza_sp_de_disparos_de_entidades
 888  8DFD
 889  8DFD 2A 44 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 890  8E00 23           	inc hl
 891  8E01 22 44 8C     	ld (Puntero_num_aleatorios_disparos),hl
 892  8E04
 893  8E04 11 FD 88     	ld de,Numeros_aleatorios+7
 894  8E07 7B           	ld a,e
 895  8E08 95           	sub l
 896  8E09 C0           	ret nz
 897  8E0A
 898  8E0A 21 F6 88     1 ld hl,Numeros_aleatorios
 899  8E0D 22 44 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 900  8E10 C9           	ret
 901  8E11
 902  8E11              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 903  8E11              ;
 904  8E11              ;	24/07/24
 905  8E11
 906  8E11              Reinicia_Amadeus
 907  8E11
 908  8E11              ;	Reinicia posición y estado.
 909  8E11
 910  8E11 21 CF 50     	ld hl,$50cf
 911  8E14 22 72 89     	ld (p.imp.amadeus),hl
 912  8E17 21 F0 E0     	ld hl,$e0f0
 913  8E1A 22 74 89     	ld (Pamm_Amadeus),hl
 914  8E1D 21 3D 00     	ld hl,$003d
 915  8E20 22 76 89     	ld (Comm_Amadeus),hl
 916  8E23
 917  8E23              ;	limpiamos el álbum de borrado.
 918  8E23
 919  8E23 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
 920  8E26
 921  8E26 AF           	xor a
 922  8E27 77           	ld (hl),a
 923  8E28
 924  8E28 E5           	push hl
 925  8E29 D1           	pop de
 926  8E2A 13           	inc de
 927  8E2B
 928  8E2B 01 23 00     	ld bc,35
 929  8E2E ED B0        	ldir
 930  8E30
 931  8E30 CD 58 90     	call Genera_datos_de_impresion_Amadeus
 932  8E33
 933  8E33              ;	Reinicia temporizaciones.
 934  8E33
 935  8E33 CD 37 91     	call Inicia_Shield
 936  8E36
 937  8E36 3E 5A        	ld a,90
 938  8E38 32 57 8C     	ld (Shield),a
 939  8E3B
 940  8E3B 3E 64        	ld a,100
 941  8E3D 32 41 8C     	ld (Temp_new_live),a
 942  8E40
 943  8E40              ; 	Restauramos el FLAG: Amadeus vivo.
 944  8E40
 945  8E40 21 2D 8C     	ld hl,Ctrl_3
 946  8E43 CB B6        	res 6,(hl)
 947  8E45
 948  8E45              ;	Fuerza la impresión de la nave en el siguiente frame.
 949  8E45
 950  8E45 21 2D 8C      	ld hl,Ctrl_3
 951  8E48 CB EE        	set 5,(hl)
 952  8E4A
 953  8E4A C9           	ret
 954  8E4B
 955  8E4B              ; --------------------------------------------------------------------------------------------------------------
 956  8E4B              ;
 957  8E4B              ;	12/05/24
 958  8E4B
 959  8E4B 3A C3 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 960  8E4E CB 27        	sla a
 961  8E50 32 C3 8B     	ld (Velocidad),a
 962  8E53 E6 10        	and $10
 963  8E55 C8           	ret z
 964  8E56
 965  8E56              ; Restaura (Velocidad) a razón del nº de vueltas.
 966  8E56
 967  8E56 3A BB 8B     	ld a,(Contador_de_vueltas)
 968  8E59 CB 2F        	sra a
 969  8E5B CB 2F        	sra a
 970  8E5D 32 C3 8B     	ld (Velocidad),a
 971  8E60
 972  8E60 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 973  8E63 23           	inc hl
 974  8E64 23           	inc hl
 975  8E65 23           	inc hl
 976  8E66 23           	inc hl
 977  8E67 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 978  8E6A
 979  8E6A C9           	ret
 980  8E6B
 981  8E6B              ; --------------------------------------------------------------------------------------------------------------
 982  8E6B              ;
 983  8E6B              ;	25/08/24
 984  8E6B
 985  8E6B              Change
 986  8E6B
 987  8E6B 3A 24 8C     	ld a,(Switch)
 988  8E6E EE 01        	xor 1
 989  8E70 32 24 8C     	ld (Switch),a
 990  8E73 2A 09 8C     	ld hl,(Album_de_pintado)
 991  8E76 ED 5B 0B 8C  	ld de,(Album_de_borrado)
 992  8E7A EB           	ex de,hl
 993  8E7B 22 09 8C     	ld (Album_de_pintado),hl
 994  8E7E 22 27 8C     	ld (Scanlines_album_SP),hl
 995  8E81 ED 53 0B 8C  	ld (Album_de_borrado),de
 996  8E85 C9           	ret
 997  8E86
 998  8E86              Change_Amadeus
 999  8E86
1000  8E86 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1001  8E89 ED 5B 0F 8C  	ld de,(Album_de_borrado_Amadeus)
1002  8E8D EB           	ex de,hl
1003  8E8E 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
1004  8E91 ED 53 0F 8C  	ld (Album_de_borrado_Amadeus),de
1005  8E95 C9           	ret
1006  8E96
1007  8E96              Change_Disparos
1008  8E96
1009  8E96              ; Álbumes de Amadeus.
1010  8E96
1011  8E96 2A 11 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1012  8E99 ED 5B 13 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1013  8E9D EB           	ex de,hl
1014  8E9E 22 11 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1015  8EA1 ED 53 13 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1016  8EA5 CD B9 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1017  8EA8
1018  8EA8              ; Álbumes de entidades.
1019  8EA8
1020  8EA8 2A 15 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1021  8EAB ED 5B 17 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1022  8EAF EB           	ex de,hl
1023  8EB0 22 15 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1024  8EB3 ED 53 17 8C  	ld (Album_de_borrado_disparos_Entidades),de
1025  8EB7 22 19 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1026  8EBA
1027  8EBA 3A 1B 8C     	ld a,(Num_de_bytes_album_de_disparos)
1028  8EBD 32 1C 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1029  8EC0
1030  8EC0 C9           	ret
1031  8EC1
1032  8EC1              ; ------------------------------------
1033  8EC1              ;
1034  8EC1              ; 1/05/24
1035  8EC1
1036  8EC1              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1037  8EC1              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1038  8EC1
1039  8EC1              ;	DESTRUYE: HL,DE,A
1040  8EC1              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1041  8EC1
1042  8EC1              ;	Variables implicadas: (RND_SP).
1043  8EC1
1044  8EC1              Extrae_numero_aleatorio_y_avanza
1045  8EC1
1046  8EC1 21 00 89     	ld hl,Tabla_de_pintado
1047  8EC4 EB           	ex de,hl
1048  8EC5 2A 42 8C     	ld hl,(RND_SP)
1049  8EC8 EB           	ex de,hl
1050  8EC9 A7           	and a
1051  8ECA ED 52        	sbc hl,de
1052  8ECC
1053  8ECC 2A 42 8C     	ld hl,(RND_SP)
1054  8ECF 20 06        	jr nz,1F
1055  8ED1
1056  8ED1              ; Sitúa HL al principio de la tabla de nº aleatorios.
1057  8ED1
1058  8ED1 21 F6 88     	ld hl,Numeros_aleatorios
1059  8ED4 22 42 8C     	ld (RND_SP),HL
1060  8ED7
1061  8ED7              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1062  8ED7
1063  8ED7 7E           1 ld a,(hl)
1064  8ED8 23           	inc hl
1065  8ED9 22 42 8C     	ld (RND_SP),hl
1066  8EDC C9           	ret
1067  8EDD
1068  8EDD              ; ------------------------------------
1069  8EDD              ;
1070  8EDD              ; 1/05/24
1071  8EDD
1072  8EDD              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1073  8EDD              ; (1 a 4 segundos).
1074  8EDD              ; Actualizamos (Clock_next_entity) con A.
1075  8EDD
1076  8EDD              ;	DESTRUYE: A y B.
1077  8EDD              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1078  8EDD              ;			 Actualiza (Clock_next_entity) con A.
1079  8EDD
1080  8EDD              ;	Variables implicadas: (Clock_next_entity).
1081  8EDD
1082  8EDD              ; Notas:
1083  8EDD
1084  8EDD              ; 	$32 1 seg.
1085  8EDD              ; 	$64 2 seg.
1086  8EDD              ; 	$96 3 seg.
1087  8EDD              ; 	$c8 4 seg.
1088  8EDD              ; 	$fa 5 seg.
1089  8EDD
1090  8EDD              ; $ffff 1310,7 seg, 22 minutos.
1091  8EDD
1092  8EDD              ;	$0100  5 seg. aproximadamente.
1093  8EDD              ;	$0200 10 seg. aproximadamente.
1094  8EDD              ;	$0300 15 seg. aproximadamente.
1095  8EDD              ;	$0400 20 seg. aproximadamente.
1096  8EDD              ;	$0500 25 seg. aproximadamente.
1097  8EDD              ;	$0600 30 seg. aproximadamente.
1098  8EDD
1099  8EDD              Define_Clock_next_entity
1100  8EDD
1101  8EDD FE 34        	cp $34
1102  8EDF 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1103  8EE1
1104  8EE1              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1105  8EE1
1106  8EE1 4F           3 ld c,a
1107  8EE2 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1108  8EE4 2A 78 5C     	ld hl,(FRAMES)
1109  8EE7 A7           	and a
1110  8EE8 ED 4A        	adc hl,bc
1111  8EEA 22 47 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1112  8EED C9           	ret
1113  8EEE
1114  8EEE 3E 34        1 ld a,$34
1115  8EF0 18 EF        	jr 3B
1116  8EF2
1117  8EF2              ; ------------------------------------
1118  8EF2              ;
1119  8EF2              ; 18/03/24
1120  8EF2
1121  8EF2              Borra_diferencia
1122  8EF2
1123  8EF2 ED 4B 27 8C  	ld bc,(Scanlines_album_SP)
1124  8EF6
1125  8EF6 3A 24 8C     	ld a,(Switch)
1126  8EF9 A7           	and a
1127  8EFA 28 08        	jr z,2F
1128  8EFC
1129  8EFC 2A 22 8C     	ld hl,(Techo_Scanlines_album_2)
1130  8EFF 11 22 8C     	ld de,Techo_Scanlines_album_2
1131  8F02 18 06        	jr 3F
1132  8F04
1133  8F04 2A 20 8C     2 ld hl,(Techo_Scanlines_album)
1134  8F07 11 20 8C     	ld de,Techo_Scanlines_album
1135  8F0A
1136  8F0A              ; Diferencia.
1137  8F0A
1138  8F0A ED 42        3 sbc hl,bc
1139  8F0C
1140  8F0C C8           	ret z
1141  8F0D D8           	ret c
1142  8F0E
1143  8F0E              ; Nuevo techo, (más bajo que el anterior).
1144  8F0E              ; Fijamos nuevo techo y borramos bytes sobrantes.
1145  8F0E
1146  8F0E EB           	ex de,hl
1147  8F0F
1148  8F0F 71           	ld (hl),c
1149  8F10 2C           	inc l
1150  8F11 70           	ld (hl),b
1151  8F12
1152  8F12 AF           	xor a
1153  8F13 43           	ld b,e
1154  8F14
1155  8F14 2A 27 8C     	ld hl,(Scanlines_album_SP)
1156  8F17
1157  8F17 77           1 ld (hl),a
1158  8F18 23           	inc hl
1159  8F19 10 FC        	djnz 1B
1160  8F1B
1161  8F1B              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1162  8F1B
1163  8F1B 21 2D 8C     	ld hl,Ctrl_3
1164  8F1E CB DE        	set 3,(hl)
1165  8F20
1166  8F20 C9           	ret
1167  8F21
1168  8F21              ; --------------------------------------------------------------------------------------------------------------
1169  8F21              ;
1170  8F21              ;	26/3/24
1171  8F21
1172  8F21              Recauda_informacion_de_entidad_en_curso
1173  8F21
1174  8F21              ; Almacena la Coordenada Y de la entidad en curso.
1175  8F21
1176  8F21              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1177  8F21
1178  8F21 3A BA 8B     	ld a,(Coordenada_y)
1179  8F24 2A 29 8C     	ld hl,(India_SP)
1180  8F27 77           	ld (hl),a
1181  8F28 2C           	inc l
1182  8F29
1183  8F29              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1184  8F29
1185  8F29 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
1186  8F2D
1187  8F2D 73           	ld (hl),e
1188  8F2E 2C           	inc l
1189  8F2F 72           	ld (hl),d
1190  8F30 2C           	inc l
1191  8F31
1192  8F31 22 29 8C     	ld (India_SP),hl
1193  8F34
1194  8F34 C9           	ret
1195  8F35
1196  8F35              ; --------------------------------------------------------------------------------------------------------------
1197  8F35              ;
1198  8F35              ;	27/03/24
1199  8F35              ;
1200  8F35
1201  8F35              Inicializa_India_y_limpia_Tabla_de_impresion
1202  8F35
1203  8F35 2A 29 8C     	ld hl,(India_SP)
1204  8F38 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1205  8F3B
1206  8F3B 79           	ld a,c
1207  8F3C 95           	sub l
1208  8F3D 28 06        	jr z,2F
1209  8F3F 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1210  8F40              ;														; _ y pasamos a inicializar (India_SP).
1211  8F40 AF           	xor a
1212  8F41
1213  8F41 77           1 ld (hl),a
1214  8F42 2C           	inc l
1215  8F43 10 FC        	djnz 1B												; Limpia Tabla.
1216  8F45
1217  8F45 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1218  8F48 22 29 8C     	ld (India_SP),hl
1219  8F4B
1220  8F4B C9           	ret
1221  8F4C
1222  8F4C              ; --------------------------------------------------------------------------------------------------------------
1223  8F4C              ;
1224  8F4C              ;	31/3/24
1225  8F4C
1226  8F4C              Ordena_tabla_de_impresion
1227  8F4C
1228  8F4C              ; 5794 T/states.
1229  8F4C              ; 6278 T/states.
1230  8F4C              ; 5310 T/states.
1231  8F4C
1232  8F4C              ; Inicializamos punteros (India_SP) e (India_2_SP).
1233  8F4C              ; Inicializamos contador de comparaciones, [C].
1234  8F4C              ; Cargamos los registros A y B para efectuar comparación.
1235  8F4C
1236  8F4C FD 2E 00     	ld iyl,0
1237  8F4F
1238  8F4F 3A 00 8C     	ld a,(Entidades_en_curso)
1239  8F52 FE 04        	cp 4 	;	4
1240  8F54 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1241  8F55
1242  8F55 3D           	dec a
1243  8F56 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1244  8F57 51           	ld d,c 										; Copia de respaldo.
1245  8F58
1246  8F58 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1247  8F59
1248  8F59 21 03 89     	ld hl,Tabla_de_pintado+3
1249  8F5C 46           	ld b,(hl)
1250  8F5D 22 2B 8C     	ld (India_2_SP),hl
1251  8F60
1252  8F60 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1253  8F61 DC 89 8F     	call c, Avanza_India_2_SP
1254  8F64 CC 89 8F     	call z, Avanza_India_2_SP
1255  8F67
1256  8F67 FD 2D        	dec iyl
1257  8F69 28 18        	jr z,2F
1258  8F6B
1259  8F6B
1260  8F6B              ; --------------------------------------------------------------------------------------------------------------
1261  8F6B              ;
1262  8F6B              ;	7/4/24
1263  8F6B
1264  8F6B              Trueque
1265  8F6B
1266  8F6B              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1267  8F6B              ;  			A contiene en nº de fila de (India_SP).
1268  8F6B              ;			HL contiene (India_2_SP).
1269  8F6B
1270  8F6B D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1271  8F6C E5           	push hl										; Preservo (India_2_SP).
1272  8F6D
1273  8F6D ED 5B 29 8C  	ld de,(India_SP)
1274  8F71 EB           	ex de,hl
1275  8F72 70           	ld (hl),b
1276  8F73 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1277  8F74
1278  8F74 CD B5 8F     	call Intercambia_1_byte
1279  8F77 CD B5 8F     	call Intercambia_1_byte
1280  8F7A
1281  8F7A
1282  8F7A              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1283  8F7A              ; Recuperamos (India_2_SP) en HL.
1284  8F7A
1285  8F7A 2A 29 8C     	ld hl,(India_SP)
1286  8F7D 7E           	ld a,(hl)
1287  8F7E
1288  8F7E E1           	pop hl
1289  8F7F D1           	pop de
1290  8F80
1291  8F80              ; --------------------------------------------------------------------------------------------------------------
1292  8F80
1293  8F80 CD 89 8F     	call Avanza_India_2_SP
1294  8F83
1295  8F83 14           2 inc d
1296  8F84 15           	dec d
1297  8F85 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1298  8F86 18 D8        	jr 1B
1299  8F88
1300  8F88 C9           	ret
1301  8F89
1302  8F89              ; ----- ----- ----- ----- -----
1303  8F89
1304  8F89              Avanza_India_2_SP
1305  8F89
1306  8F89 0D           	dec c
1307  8F8A 28 0A        	jr z,Avanza_punteros_indios
1308  8F8C
1309  8F8C FD 2C        	inc iyl
1310  8F8E
1311  8F8E 2C           	inc l
1312  8F8F 2C           	inc l
1313  8F90 2C           	inc l
1314  8F91
1315  8F91 46           	ld b,(hl)
1316  8F92 22 2B 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1317  8F95
1318  8F95 C9           	ret
1319  8F96
1320  8F96              ; ----- ----- ----- ----- -----
1321  8F96
1322  8F96              Avanza_punteros_indios
1323  8F96
1324  8F96 15           	dec d
1325  8F97 28 15        	jr z,Prepara_salida
1326  8F99
1327  8F99 4A           	ld c,d
1328  8F9A
1329  8F9A 2A 29 8C     	ld hl,(India_SP)
1330  8F9D 2C           	inc l
1331  8F9E 2C           	inc l
1332  8F9F 2C           	inc l
1333  8FA0 7E           	ld a,(hl)
1334  8FA1 22 29 8C     	ld (India_SP),hl
1335  8FA4
1336  8FA4 2C           	inc l
1337  8FA5 2C           	inc l
1338  8FA6 2C           	inc l
1339  8FA7 46           	ld b,(hl)
1340  8FA8 22 2B 8C     	ld (India_2_SP),hl
1341  8FAB
1342  8FAB FD 2C        	inc iyl
1343  8FAD
1344  8FAD C9           	ret
1345  8FAE
1346  8FAE              Prepara_salida
1347  8FAE
1348  8FAE 21 00 89     	ld hl,Tabla_de_pintado
1349  8FB1 22 29 8C     	ld (India_SP),hl
1350  8FB4 C9           	ret
1351  8FB5
1352  8FB5
1353  8FB5 2C           Intercambia_1_byte inc l
1354  8FB6 1C           	inc e
1355  8FB7 46           	ld b,(hl)
1356  8FB8 1A           	ld a,(de)
1357  8FB9 EB           	ex de,hl
1358  8FBA 70           	ld (hl),b
1359  8FBB 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1360  8FBC C9           	ret
1361  8FBD
1362  8FBD              ; -----------------------------------------------------------------------------------
1363  8FBD              ;
1364  8FBD              ;	20/01/24
1365  8FBD              ;
1366  8FBD              ;
1367  8FBD
1368  8FBD              Construye_movimientos_masticados_entidad
1369  8FBD
1370  8FBD 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1371  8FC0 E5           	push hl
1372  8FC1 CD 04 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1373  8FC4              ;															; _ el (Contador_de_mov_masticados).
1374  8FC4 CD CF 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1375  8FC7              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1376  8FC7 CD 00 9A     	call Recompone_posicion_inicio
1377  8FCA
1378  8FCA CD 30 97     1 call Draw
1379  8FCD CD E9 8F     	call Guarda_movimiento_masticado
1380  8FD0
1381  8FD0 CD AD 9D     	call Movimiento
1382  8FD3
1383  8FD3 3A 2D 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1384  8FD6 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1385  8FD8 28 F0        	jr z,1B
1386  8FDA
1387  8FDA              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1388  8FDA              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1389  8FDA
1390  8FDA E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1391  8FDB 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1392  8FDE
1393  8FDE              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1394  8FDE
1395  8FDE CD 11 9F     	call Situa_en_contador_general_de_mov_masticados
1396  8FE1
1397  8FE1              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1398  8FE1              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1399  8FE1
1400  8FE1 ED 4B C1 8B  	ld bc,(Contador_de_mov_masticados)
1401  8FE5
1402  8FE5 71           	ld (hl),c
1403  8FE6 23           	inc hl
1404  8FE7 70           	ld (hl),b
1405  8FE8
1406  8FE8 C9           	ret
1407  8FE9
1408  8FE9              ; -----------------------------------------------------------------------------------
1409  8FE9              ;
1410  8FE9              ;	28/12/23
1411  8FE9              ;
1412  8FE9              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1413  8FE9              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1414  8FE9
1415  8FE9              Guarda_movimiento_masticado
1416  8FE9
1417  8FE9 ED 73 05 8C  	ld (Stack),sp
1418  8FED ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1419  8FF1
1420  8FF1 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1421  8FF3 FD E5            push iy 												; Pushea Puntero_objeto.
1422  8FF5
1423  8FF5 ED 7B 05 8C      ld sp,(Stack)
1424  8FF9
1425  8FF9 2A C1 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1426  8FFC 23           	inc hl
1427  8FFD 22 C1 8B     	ld (Contador_de_mov_masticados),hl
1428  9000
1429  9000 CD 04 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1430  9003              ;															; _ el (Contador_de_mov_masticados).
1431  9003 C9               ret
1432  9004
1433  9004              ; --------------------------------------------------------------------------------------------------------------
1434  9004              ;
1435  9004              ;	12/1/24
1436  9004              ;
1437  9004              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1438  9004
1439  9004              Actualiza_Puntero_de_almacen_de_mov_masticados
1440  9004
1441  9004 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1442  9007 01 04 00     	ld bc,4
1443  900A A7           	and a
1444  900B ED 4A        	adc hl,bc
1445  900D 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1446  9010 C9           	ret
1447  9011
1448  9011              ; --------------------------------------------------------------------------------------------------------------
1449  9011              ;
1450  9011              ;	24/03/24
1451  9011              ;
1452  9011              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1453  9011              ;
1454  9011              ;	IX contiene el puntero de impresión.
1455  9011              ;	DE contiene (Puntero_objeto).
1456  9011
1457  9011
1458  9011              Cargamos_registros_con_mov_masticado
1459  9011
1460  9011 ED 73 05 8C  	ld (Stack),sp
1461  9015 ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1462  9019
1463  9019 D1           	pop de 															; DE contiene Puntero_objeto
1464  901A DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1465  901C
1466  901C ED 73 BF 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1467  9020 ED 7B 05 8C  	ld sp,(Stack)
1468  9024
1469  9024 7B           	ld a,e
1470  9025 82           	add d															; Comprueba si ya no hay datos en el almacén.
1471  9026
1472  9026 CC BF 93     	call z,Reinicia_entidad_maliciosa
1473  9029
1474  9029 C9           	ret
1475  902A
1476  902A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1477  902A              ;
1478  902A              ;	22/7/24
1479  902A
1480  902A              Cargamos_registros_con_explosion
1481  902A
1482  902A
1483  902A 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1484  902D CD C9 90     	call Extrae_address
1485  9030
1486  9030 5D           	ld e,l
1487  9031 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1488  9032
1489  9032 DD 2A BD 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1490  9036
1491  9036 C9           	ret
1492  9037
1493  9037
1494  9037              Cargamos_registros_con_explosion_Amadeus
1495  9037
1496  9037 2A 74 89     	ld hl,(Pamm_Amadeus)
1497  903A CD C9 90     	call Extrae_address
1498  903D
1499  903D 5D           	ld e,l
1500  903E 54           	ld d,h
1501  903F
1502  903F DD 2A 72 89  	ld ix,(p.imp.amadeus)
1503  9043
1504  9043 C9           	ret
1505  9044
1506  9044              ; --------------------------------------------------------------------------------------------------------------
1507  9044              ;
1508  9044              ;	17/06/24
1509  9044              ;
1510  9044              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1511  9044              ;
1512  9044              ;	IX contiene el puntero de impresión.
1513  9044              ;	DE contiene (Puntero_objeto).
1514  9044
1515  9044
1516  9044              Cargamos_registros_con_mov_masticado_Amadeus
1517  9044
1518  9044 ED 73 05 8C  	ld (Stack),sp
1519  9048 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1520  904C D1           	pop de 															; DE contiene Puntero_objeto
1521  904D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1522  904F DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1523  9053 ED 7B 05 8C  	ld sp,(Stack)
1524  9057 C9           	ret
1525  9058
1526  9058              ; ---------------------------------------------------------------------------------------------------------------------
1527  9058              ;
1528  9058              ;	18/6/24
1529  9058              ;
1530  9058              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1531  9058
1532  9058              Genera_datos_de_impresion_Amadeus
1533  9058
1534  9058 3A 71 89     	ld a,(Impacto_Amadeus)
1535  905B A7           	and a
1536  905C 20 03        	jr nz,1F
1537  905E
1538  905E              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1539  905E              ; _apuntando a la correspondiente explosión.
1540  905E
1541  905E CD 44 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1542  9061
1543  9061 DD 7D        1 ld a,ixl
1544  9063 E6 1F        	and $1f
1545  9065 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1546  9068
1547  9068 2A 27 8C     	ld hl,(Scanlines_album_SP)
1548  906B E5           	push hl
1549  906C
1550  906C 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1551  906F 22 27 8C     	ld (Scanlines_album_SP),hl
1552  9072
1553  9072 CD 14 95     	call Genera_datos_de_impresion
1554  9075
1555  9075 E1           	pop hl
1556  9076 22 27 8C     	ld (Scanlines_album_SP),hl
1557  9079
1558  9079 C9           	ret
1559  907A
1560  907A              ; ---------------------------------------------------------------------------------------------------------------------
1561  907A              ;
1562  907A              ;	13/03/24
1563  907A              ;
1564  907A              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1565  907A
1566  907A              Inicia_albumes_de_lineas
1567  907A
1568  907A 21 00 80     	ld hl,Scanlines_album
1569  907D 22 09 8C     	ld (Album_de_pintado),hl
1570  9080 22 27 8C     	ld (Scanlines_album_SP),hl
1571  9083
1572  9083 21 1A 81     	ld hl,Scanlines_album_2
1573  9086 22 0B 8C     	ld (Album_de_borrado),hl
1574  9089
1575  9089 C9           	ret
1576  908A
1577  908A              Inicia_albumes_de_lineas_Amadeus
1578  908A
1579  908A 21 34 82     	ld hl,Amadeus_scanlines_album
1580  908D 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
1581  9090 21 58 82     	ld hl,Amadeus_scanlines_album_2
1582  9093 22 0F 8C     	ld (Album_de_borrado_Amadeus),hl
1583  9096
1584  9096 C9           	ret
1585  9097
1586  9097              Inicia_albumes_de_disparos
1587  9097
1588  9097 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1589  909A 22 11 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1590  909D 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1591  90A0 22 13 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1592  90A3
1593  90A3 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1594  90A6 22 15 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1595  90A9 22 19 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1596  90AC
1597  90AC 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1598  90AF 22 17 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1599  90B2
1600  90B2 C9           	ret
1601  90B3
1602  90B3              ; ---------------------------------------------------------------------------------------------------------------------
1603  90B3              ;
1604  90B3              ; 8/1/23
1605  90B3              ;
1606  90B3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1607  90B3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1608  90B3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1609  90B3
1610  90B3              ; Destruye HL y DE !!!!!
1611  90B3
1612  90B3              Inicia_punteros_de_cajas
1613  90B3
1614  90B3 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1615  90B6 CD C9 90         call Extrae_address
1616  90B9 22 F8 8B         ld (Puntero_store_caja),hl
1617  90BC 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1618  90BF 22 FC 8B     	ld (Indice_restore_caja),hl
1619  90C2 CD C9 90     	call Extrae_address
1620  90C5 22 FA 8B     	ld (Puntero_restore_caja),hl
1621  90C8 C9               ret
1622  90C9
1623  90C9              ; *************************************************************************************************************************************************************
1624  90C9
1625  90C9              ;
1626  90C9              ; 20/10/22
1627  90C9              ;
1628  90C9              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1629  90C9              ;
1630  90C9              ; Destruye el puntero y DE !!!!!
1631  90C9
1632  90C9 5E           Extrae_address ld e,(hl)
1633  90CA 23           	inc hl
1634  90CB 56           	ld d,(hl)
1635  90CC 2B           	dec hl
1636  90CD EB           	ex de,hl
1637  90CE C9           	ret
1638  90CF
1639  90CF              ; *************************************************************************************************************************************************************
1640  90CF              ;
1641  90CF              ;	20/1/24
1642  90CF              ;
1643  90CF              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1644  90CF              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1645  90CF              ;
1646  90CF              ;   Destruye HL y BC !!!!!,
1647  90CF              ;
1648  90CF              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1649  90CF              ;					"0" ..... Izquierda.
1650  90CF
1651  90CF              Inicia_Puntero_objeto
1652  90CF
1653  90CF 3A D7 8B     	ld a,(Cuad_objeto)
1654  90D2 E6 01        	and 1
1655  90D4 F5           	push af
1656  90D5 CC F1 90     	call z,Inicia_puntero_objeto_izq
1657  90D8 F1           	pop af
1658  90D9 C8           	ret z
1659  90DA CD DE 90     	call Inicia_puntero_objeto_der
1660  90DD C9           	ret
1661  90DE
1662  90DE              ; Arrancamos desde la parte izquierda de la pantalla.
1663  90DE              ; Iniciamos (Indice_Sprite_der).
1664  90DE
1665  90DE 2A CD 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1666  90E1 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
1667  90E4 CD C9 90     	call Extrae_address
1668  90E7 22 CA 8B     	ld (Puntero_objeto),hl
1669  90EA
1670  90EA 2A CF 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1671  90ED 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1672  90F0 C9           	ret
1673  90F1
1674  90F1              ; Arrancamos desde la parte derecha de la pantalla.
1675  90F1              ; Iniciamos (Indice_Sprite_izq).
1676  90F1
1677  90F1 2A CF 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1678  90F4 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1679  90F7 CD C9 90     	call Extrae_address
1680  90FA 22 CA 8B     	ld (Puntero_objeto),hl
1681  90FD
1682  90FD 2A CD 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1683  9100 22 D1 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1684  9103 C9           	ret
1685  9104
1686  9104              ; **************************************************************************************************
1687  9104              ;
1688  9104              ;	06/07/24
1689  9104              ;
1690  9104              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1691  9104
1692  9104              Restore_entidad
1693  9104
1694  9104 2A F8 8B     	ld hl,(Puntero_store_caja)
1695  9107 7E           	ld a,(hl)
1696  9108 A7           	and a
1697  9109 CC 17 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1698  910C 28 F6        	jr z,Restore_entidad
1699  910E
1700  910E 11 B8 8B     	ld de,Bandeja_DRAW
1701  9111 01 0C 00     	ld bc,12
1702  9114 ED B0        	ldir
1703  9116 C9           	ret
1704  9117
1705  9117              ; **************************************************************************************************
1706  9117              ;
1707  9117              ;	08/05/23
1708  9117              ;
1709  9117              ;	Incrementamos los dos punteros de entidades. (+1).
1710  9117
1711  9117              Incrementa_punteros_de_cajas
1712  9117
1713  9117 2A FA 8B     	ld hl,(Puntero_restore_caja)
1714  911A 22 F8 8B     	ld (Puntero_store_caja),hl
1715  911D 2A FC 8B     	ld hl,(Indice_restore_caja)
1716  9120 23           	inc hl
1717  9121 23           	inc hl
1718  9122 22 FC 8B     	ld (Indice_restore_caja),hl
1719  9125 CD C9 90         call Extrae_address
1720  9128 22 FA 8B         ld (Puntero_restore_caja),hl
1721  912B C9               ret
1722  912C
1723  912C              ; -----------------------------------------------------------
1724  912C
1725  912C              ; Teclado.
1726  912C
1727  912C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1728  912E DB FE        	in a,($fe)
1729  9130 E6 01        	and $01
1730  9132 28 02        	jr z,1f
1731  9134 18 F6        	jr Pulsa_ENTER
1732  9136 C9           1 ret
1733  9137
1734  9137              ; **************************************************************************************************
1735  9137              ;
1736  9137              ; Temporización.
1737  9137
1738  9137              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1739  9137              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1740  9137              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1741  9137              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1742  9137
1743  9137              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1744  9137              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1745  9137              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1746  9137
1747  9137              ; A partir de $4f61 no hace falta DELAY.
1748  9137
1749  9137              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1750  9137
1751  9137              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1752  9137              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1753  9137              ;	LD A,B
1754  9137              ;	AND A
1755  9137              ;	JR NZ,wait
1756  9137              ;	RET
1757  9137
1758  9137              ; ---------------------------------------------------------------------------------------------------------------
1759  9137              ;
1760  9137              ;	13/07/24
1761  9137              ;
1762  9137
1763  9137              Inicia_Shield
1764  9137
1765  9137 21 51 8C     	ld hl,Datos_Shield
1766  913A 22 55 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1767  913D
1768  913D 7E           	ld a,(hl)
1769  913E 32 58 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1770  9141
1771  9141 3E 01        	ld a,1
1772  9143 32 59 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1773  9146
1774  9146 C9           	ret
1775  9147
1776  9147              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1777  9147              ;
1778  9147              ;	4/6/24
1779  9147              ;
1780  9147              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1781  9147              ;
1782  9147              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1783  9147              ;
1784  9147
1785  9147              Actualiza_pantalla
1786  9147
1787  9147 3E 02        	ld a,2
1788  9149 D3 FE        	out ($fe),a
1789  914B
1790  914B 3A 2D 8C     	ld a,(Ctrl_3)
1791  914E CB 57        	bit 2,a
1792  9150 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1793  9152
1794  9152              Borrando_entidades
1795  9152
1796  9152 2A 27 8C     	ld hl,(Scanlines_album_SP)
1797  9155 CD C9 90     	call Extrae_address
1798  9158 24           	inc h
1799  9159 25           	dec h
1800  915A 28 05        	jr z,Pintando_entidades
1801  915C CD 0D 96     	call Pinta_Sprites
1802  915F 18 F1        	jr Borrando_entidades
1803  9161
1804  9161              Pintando_entidades
1805  9161
1806  9161 2A 29 8C     	ld hl,(India_SP)
1807  9164 2C           	inc l
1808  9165 CD C9 90     	call Extrae_address
1809  9168 24           	inc h
1810  9169 25           	dec h
1811  916A 28 0E        	jr z,Ejecuta_escudo
1812  916C 1C           	inc e
1813  916D 1C           	inc e
1814  916E ED 53 29 8C  	ld (India_SP),de
1815  9172 CD C9 90     	call Extrae_address
1816  9175 CD 0D 96     	call Pinta_Sprites
1817  9178 18 E7        	jr Pintando_entidades
1818  917A
1819  917A              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1820  917A
1821  917A              Ejecuta_escudo
1822  917A
1823  917A 3A 57 8C     	ld a,(Shield)
1824  917D A7           	and a
1825  917E 20 2F        	jr nz,Aplica_Shield
1826  9180
1827  9180              Borrando_Amadeus
1828  9180
1829  9180 21 2D 8C     	ld hl,Ctrl_3
1830  9183 CB 6E        	bit 5,(hl)
1831  9185 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1832  9187
1833  9187 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1834  918A CD C9 90     	call Extrae_address
1835  918D 24           	inc h
1836  918E 25           	dec h
1837  918F 28 03        	jr z,Pintando_Amadeus
1838  9191 CD 0D 96     	call Pinta_Sprites
1839  9194
1840  9194              Pintando_Amadeus
1841  9194
1842  9194 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1843  9197 CD C9 90     	call Extrae_address
1844  919A 24           	inc h
1845  919B 25           	dec h
1846  919C 28 03        	jr z,1F
1847  919E CD 0D 96     	call Pinta_Sprites
1848  91A1
1849  91A1              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1850  91A1
1851  91A1 21 2D 8C     1 ld hl,Ctrl_3
1852  91A4 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1853  91A6 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1854  91A8 CB AE        	res 5,(hl)
1855  91AA
1856  91AA 3E 01        	ld a,1												; Borde azul.
1857  91AC D3 FE        	out ($fe),a
1858  91AE
1859  91AE C9           	ret
1860  91AF
1861  91AF              Aplica_Shield
1862  91AF
1863  91AF              ;	Bit 1 "1" (Shield_3) Sólo borra.
1864  91AF              ;		  "0"     ""     Borra/Pinta.
1865  91AF              ;	Bit 2    ""  RET.	 No borra, no pinta.
1866  91AF
1867  91AF 21 59 8C     	ld hl,Shield_3
1868  91B2
1869  91B2 CB 5E        	bit 3,(hl)
1870  91B4 20 DE        	jr nz,Pintando_Amadeus
1871  91B6
1872  91B6 CB 56        	bit 2,(hl)
1873  91B8 20 E7        	jr nz,1B
1874  91BA
1875  91BA CB 4E        	bit 1,(hl)
1876  91BC C4 C3 91     	call nz,Borra_Amadeus_shield
1877  91BF
1878  91BF 28 BF        	jr z,Borrando_Amadeus
1879  91C1 18 DE        	jr 1B
1880  91C3
1881  91C3              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1882  91C3
1883  91C3              Borra_Amadeus_shield
1884  91C3
1885  91C3 3A 2D 8C     	ld a,(Ctrl_3)
1886  91C6 CB 6F        	bit 5,a
1887  91C8 28 08        	jr z,1F
1888  91CA
1889  91CA 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1890  91CD CD C9 90     	call Extrae_address
1891  91D0 18 06        	jr 2F
1892  91D2
1893  91D2 2A 0D 8C     1 ld hl,(Album_de_pintado_Amadeus)
1894  91D5 CD C9 90     	call Extrae_address
1895  91D8
1896  91D8 CD 0D 96     2 call Pinta_Sprites
1897  91DB
1898  91DB AF           	xor a
1899  91DC 3C           	inc a											; Asegura NZ en la salida de la rutina.
1900  91DD
1901  91DD C9           	ret
1902  91DE
1903  91DE              Pinta_Amadeus_shield
1904  91DE
1905  91DE 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1906  91E1 CD C9 90     	call Extrae_address
1907  91E4 CD 0D 96     	call Pinta_Sprites
1908  91E7
1909  91E7 AF           	xor a
1910  91E8 3C           	inc a											; Asegura NZ en la salida de la rutina.
1911  91E9
1912  91E9 C9           	ret
1913  91EA
1914  91EA              Borra_Pinta_Amadeus_shield
1915  91EA
1916  91EA CD C3 91     	call Borra_Amadeus_shield
1917  91ED CD DE 91     	call Pinta_Amadeus_shield
1918  91F0 C9           	ret
1919  91F1
1920  91F1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1921  91F1              ;
1922  91F1              ;	19/6/24
1923  91F1              ;
1924  91F1
1925  91F1              Teclado
1926  91F1
1927  91F1              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1928  91F1
1929  91F1 3E F7        	ld a,$f7												; "5" para disparar.
1930  91F3 DB FE        	in a,($fe)
1931  91F5 E6 10        	and $10
1932  91F7
1933  91F7 CC 8D A2     	call z,Genera_disparo_Amadeus
1934  91FA
1935  91FA 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1936  91FC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1937  91FE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1938  9200 CC 7A 9D         call z,Amadeus_a_izquierda
1939  9203
1940  9203 3E F7        	ld a,$f7
1941  9205 DB FE        	in a,($fe)
1942  9207 E6 01        	and $01
1943  9209 C8           	ret z
1944  920A
1945  920A 3E F7        	ld a,$f7
1946  920C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1947  920E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1948  9210 CC 92 9D     	call z,Amadeus_a_derecha
1949  9213
1950  9213 C9           	ret
1951  9214
1952  9214              ; ------------------------------------------------------------------------------------------------------------------------
1953  9214              ;
1954  9214              ;	06/07/24
1955  9214              ;
1956  9214
1957  9214              Genera_explosion
1958  9214
1959  9214 21 3F 8C     	ld hl,Clock_explosion
1960  9217 35           	dec (hl)
1961  9218 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1962  921A
1963  921A              Borra_entidad_colisionada
1964  921A
1965  921A CD 21 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1966  921D CD 2A 90     	call Cargamos_registros_con_explosion
1967  9220 CD 14 95     	call Genera_datos_de_impresion
1968  9223
1969  9223 AF           	xor a
1970  9224 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1971  9225
1972  9225 C9           	ret
1973  9226
1974  9226              Siguiente_frame_explosion
1975  9226
1976  9226 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1977  9228
1978  9228              ; Avanza Frame de explosión.
1979  9228
1980  9228 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1981  922B 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1982  922E
1983  922E 79           	ld a,c
1984  922F 95           	sub l
1985  9230 20 0B        	jr nz,1F
1986  9232
1987  9232              ; Fín de la entidad !!!!!!!!!!!!!
1988  9232
1989  9232 21 FF 8B     	ld hl,Numero_parcial_de_entidades
1990  9235 35           	dec (hl)
1991  9236 23           	inc hl
1992  9237 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1993  9238
1994  9238 CD 94 93     	call Limpiamos_bandeja_DRAW
1995  923B 18 DD        	jr Borra_entidad_colisionada
1996  923D
1997  923D 23           1 inc hl
1998  923E 23           	inc hl
1999  923F 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2000  9242 18 D6        	jr Borra_entidad_colisionada
2001  9244
2002  9244              ; ----- ----- ----- ----- -----
2003  9244
2004  9244              Genera_explosion_Amadeus
2005  9244
2006  9244 21 40 8C     	ld hl,Clock_explosion_Amadeus
2007  9247 35           	dec (hl)
2008  9248 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2009  924A
2010  924A              Borra_Amadeus_impactado
2011  924A
2012  924A CD 86 8E     	call Change_Amadeus
2013  924D CD 37 90     	call Cargamos_registros_con_explosion_Amadeus
2014  9250 CD 58 90     	call Genera_datos_de_impresion_Amadeus
2015  9253
2016  9253 21 2D 8C     	ld hl,Ctrl_3
2017  9256 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2018  9258
2019  9258 AF           	xor a
2020  9259 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2021  925A
2022  925A C9           	ret
2023  925B
2024  925B              Siguiente_frame_explosion_Amadeus
2025  925B
2026  925B 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2027  925D
2028  925D              ; Avanza Frame de explosión.
2029  925D
2030  925D 2A 74 89     	ld hl,(Pamm_Amadeus)
2031  9260 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2032  9263
2033  9263 79           	ld a,c
2034  9264 95           	sub l
2035  9265 20 0B        	jr nz,1F
2036  9267
2037  9267              ; Fín de Amadeus !!!!!!!!!!!!!
2038  9267              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2039  9267
2040  9267 AF           	xor a
2041  9268 32 71 89     	ld (Impacto_Amadeus),a
2042  926B 21 2D 8C     	ld hl,Ctrl_3
2043  926E CB F6        	set 6,(hl)
2044  9270
2045  9270 18 D8        	jr Borra_Amadeus_impactado
2046  9272
2047  9272 23           1 inc hl
2048  9273 23           	inc hl
2049  9274 22 74 89     	ld (Pamm_Amadeus),hl
2050  9277 18 D1        	jr Borra_Amadeus_impactado
2051  9279
2052  9279              ; ---------------------------------------------------------------
2053  9279
2054  9279              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9279              ; ******************************************************************************************************************************************************************************************
   2+ 9279              ;
   3+ 9279              ;   21/04/24
   4+ 9279              ;
   5+ 9279              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9279              ;   (XOR) bit a bit.
   7+ 9279              ;
   8+ 9279              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9279
  10+ 9279              Derivando_RND
  11+ 9279
  12+ 9279 21 F6 88         ld hl,Numeros_aleatorios
  13+ 927C
  14+ 927C ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 927E C5               push bc
  16+ 927F              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 927F 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9282              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9282
  20+ 9282 A7           6 and a                                 ; Carry a "0".
  21+ 9283 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9285 30 02            jr nc,1F
  23+ 9287
  24+ 9287 CB C1            set 0,c
  25+ 9289
  26+ 9289 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 928A E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 928C 5F               ld e,a
  29+ 928D
  30+ 928D 7A               ld a,d
  31+ 928E E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9290 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9292
  34+ 9292 CB 3F            srl a
  35+ 9294
  36+ 9294 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9295
  38+ 9295 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9296 28 04            jr z,4F
  40+ 9298
  41+ 9298 CB FF            set 7,a
  42+ 929A 18 02            jr 5F
  43+ 929C
  44+ 929C CB BF        4 res 7,a
  45+ 929E
  46+ 929E CB 21        5 sla c
  47+ 92A0 10 E0            djnz 6B
  48+ 92A2
  49+ 92A2 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92A3
  51+ 92A3 77               ld (hl),a
  52+ 92A4 23               inc hl
  53+ 92A5 C1               pop bc
  54+ 92A6 10 D4            djnz 3B
  55+ 92A8
  56+ 92A8 C9               ret
  57+ 92A9
  58+ 92A9
  59+ 92A9
# file closed: RND_Derivando.asm
2055  92A9              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92A9              ;---------------------------------------------------------------------------------------------------------------
   2+ 92A9              ;
   3+ 92A9              ;   8/3/24
   4+ 92A9              ;
   5+ 92A9              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 92A9              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 92A9              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 92A9              ;	_ de la 1ª entidad del Nivel.
   9+ 92A9              ;
  10+ 92A9              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 92A9
  12+ 92A9              ;	MODIFICA: HL,DE y A.
  13+ 92A9              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 92A9
  15+ 92A9              Inicializa_Nivel
  16+ 92A9
  17+ 92A9 2A 4D 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 92AC CD C9 90     	call Extrae_address
  19+ 92AF 7E           	ld a,(hl)
  20+ 92B0 32 FE 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92B3 23           	inc hl
  22+ 92B4 CD C1 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92B7 22 4F 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92BA CD CA 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92BD
  26+ 92BD CD DB 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92C0 C9           	ret
  28+ 92C1
  29+ 92C1              ; ----------------------
  30+ 92C1
  31+ 92C1 11 DD 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92C4 01 04 00     	ld bc,4
  33+ 92C7 ED B0        	ldir
  34+ 92C9 C9           	ret
  35+ 92CA
  36+ 92CA 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92CB CD 65 94         call Calcula_salto_en_BC
  38+ 92CE 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92D1 A7               and a
  40+ 92D2 ED 4A            adc hl,bc
  41+ 92D4 CD C9 90         call Extrae_address
  42+ 92D7 22 E9 8B         ld (Puntero_indice_mov),hl
  43+ 92DA C9               ret
  44+ 92DB
  45+ 92DB 3A B8 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92DE CD 65 94     	call Calcula_salto_en_BC
  47+ 92E1 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92E4 A7               and a
  49+ 92E5 ED 4A            adc hl,bc
  50+ 92E7 CD C9 90         call Extrae_address
  51+ 92EA 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92ED C9           	ret
  53+ 92EE
  54+ 92EE              ;---------------------------------------------------------------------------------------------------------------
  55+ 92EE              ;
  56+ 92EE              ;   5/1/24
  57+ 92EE              ;
  58+ 92EE              ;	Destruye A,BC,HL,DE
  59+ 92EE
  60+ 92EE              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92EE              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92EE
  63+ 92EE              Inicia_Entidades
  64+ 92EE
  65+ 92EE              ; Preparamos los punteros de las cajas de entidades:
  66+ 92EE
  67+ 92EE CD B3 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92F1              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92F1 CD AD 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92F4
  71+ 92F4 2A 4F 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92F7
  73+ 92F7 22 4F 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92FA
  75+ 92FA CD 13 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92FD
  77+ 92FD 2A 4F 8C     	ld hl,(Datos_de_nivel)
  78+ 9300
  79+ 9300              ; En este punto:
  80+ 9300              ;
  81+ 9300              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9300              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9300
  84+ 9300 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9301
  86+ 9301 7E           	ld a,(hl)
  87+ 9302 CD 7F 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9305
  89+ 9305 CD 77 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9308
  91+ 9308              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9308
  93+ 9308 CD 35 94     	call Busca_mov_masticados_segun_tipo
  94+ 930B
  95+ 930B A7           	and a
  96+ 930C 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 930E
  98+ 930E              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 930E
 100+ 930E              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 930E              ;	_ de este tipo de entidad.
 102+ 930E
 103+ 930E CD 11 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 9311 CD 1E 9F     	call Transfiere_datos_de_contadores
 105+ 9314
 106+ 9314 18 06        	jr 4F
 107+ 9316
 108+ 9316 CD BD 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9319
 110+ 9319              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9319              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9319              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9319              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9319              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9319
 116+ 9319 CD F3 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 931C              ;																; _ Mov_masticados ya generados.
 118+ 931C
 119+ 931C CD 11 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 931F
 121+ 931F DD E5        	push ix
 122+ 9321 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9322
 124+ 9322 D5           	push de
 125+ 9323 CD E8 94     	call Genera_coordenadas
 126+ 9326
 127+ 9326 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 128+ 932A CD 21 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 932D D1           	pop de
 130+ 932E
 131+ 932E CD 14 95     	call Genera_datos_de_impresion
 132+ 9331              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9331              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9331              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9331              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9331
 137+ 9331 CD B7 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9334
 139+ 9334              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9334
 141+ 9334 ED 5B F8 8B  	ld de,(Puntero_store_caja)
 142+ 9338 CD A4 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 933B
 144+ 933B CD 94 93     	call Limpiamos_bandeja_DRAW
 145+ 933E CD 17 91     	call Incrementa_punteros_de_cajas
 146+ 9341
 147+ 9341              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9341              ; _ entidad del Nivel.
 149+ 9341
 150+ 9341 3A 2E 8C     	ld a,(Ctrl_4)
 151+ 9344 E6 F0        	and $f0
 152+ 9346 32 2E 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9349
 154+ 9349              ; Siguiente entidad del Nivel.
 155+ 9349
 156+ 9349 2A 4F 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 934C 23           	inc hl 														; _ entidad del Nivel.
 158+ 934D
 159+ 934D C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 934E
 161+ 934E 10 A7        	djnz 2B
 162+ 9350
 163+ 9350 C9           	ret
 164+ 9351
 165+ 9351              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9351              ;
 167+ 9351              ;	27/5/24
 168+ 9351              ;
 169+ 9351              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9351              ;
 171+ 9351
 172+ 9351              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9351              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9351
 175+ 9351 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9354 CD 77 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9357
 178+ 9357
 179+ 9357              Construye_movimientos_masticados_Amadeus
 180+ 9357
 181+ 9357 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 935A CD 04 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 935D              ;															; _ el (Contador_de_mov_masticados).
 184+ 935D CD CF 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9360              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9360
 187+ 9360              ; Generamos movimientos masticados de Amadeus.
 188+ 9360
 189+ 9360 06 79        	ld b,121												; $0079, 121d.
 190+ 9362
 191+ 9362 C5           1 push bc
 192+ 9363 CD 30 97     	call Draw
 193+ 9366 CD E9 8F     	call Guarda_movimiento_masticado
 194+ 9369
 195+ 9369 CD A4 9A     	call Mov_right
 196+ 936C CD A4 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 936F
 198+ 936F C1           	pop bc
 199+ 9370 10 F0        	djnz 1B
 200+ 9372
 201+ 9372              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9372
 203+ 9372              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9372              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9372
 206+ 9372 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9375 01 08 00     	ld bc,8
 208+ 9378 A7           	and a
 209+ 9379 ED 42        	sbc hl,bc
 210+ 937B 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 937E
 212+ 937E C9           	ret
 213+ 937F
 214+ 937F              ; ---------------------------------------------------------------------
 215+ 937F              ;
 216+ 937F              ;	10/02/24
 217+ 937F              ;
 218+ 937F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 937F              ;
 220+ 937F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 937F
 222+ 937F              Definicion_segun_tipo
 223+ 937F
 224+ 937F CD 65 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9382 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9385 CD 6D 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9388 C9           	ret
 228+ 9389
 229+ 9389              ; ---------------------------------------------------------------------
 230+ 9389              ;
 231+ 9389              ;	6/7/24
 232+ 9389
 233+ 9389
 234+ 9389              Store_Restore_cajas
 235+ 9389
 236+ 9389 ED 5B F8 8B  	ld de,(Puntero_store_caja)
 237+ 938D CD A4 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9390 CD 17 91     	call Incrementa_punteros_de_cajas
 239+ 9393 C9           	ret
 240+ 9394
 241+ 9394              ; ---------------------------------------------------------------------
 242+ 9394              ;
 243+ 9394              ;	23/6/24
 244+ 9394              ;
 245+ 9394              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9394              ;
 247+ 9394              ;	MODIFY: HL
 248+ 9394
 249+ 9394              Limpiamos_bandeja_DRAW
 250+ 9394
 251+ 9394 ED 73 05 8C  	ld (Stack),sp
 252+ 9398 31 DD 8B     	ld sp,Vel_left
 253+ 939B
 254+ 939B AF           	xor a
 255+ 939C 67           	ld h,a
 256+ 939D 6F           	ld l,a
 257+ 939E
 258+ 939E E5           	push hl
 259+ 939F E5           	push hl
 260+ 93A0 E5           	push hl
 261+ 93A1 E5           	push hl
 262+ 93A2 E5           	push hl
 263+ 93A3 E5           	push hl
 264+ 93A4 E5           	push hl
 265+ 93A5 E5           	push hl
 266+ 93A6 E5           	push hl
 267+ 93A7 E5           	push hl
 268+ 93A8 E5           	push hl
 269+ 93A9 E5           	push hl
 270+ 93AA E5           	push hl
 271+ 93AB E5           	push hl
 272+ 93AC E5           	push hl
 273+ 93AD E5           	push hl
 274+ 93AE E5           	push hl
 275+ 93AF E5           	push hl
 276+ 93B0
 277+ 93B0 33           	inc sp
 278+ 93B1
 279+ 93B1 E5           	push hl
 280+ 93B2 ED 7B 05 8C  	ld sp,(Stack)
 281+ 93B6
 282+ 93B6 C9           	ret
 283+ 93B7
 284+ 93B7              ; ---------------------------------------------------------------------
 285+ 93B7              ;
 286+ 93B7              ;	24/03/24
 287+ 93B7
 288+ 93B7 2A C1 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93BA 2B           	dec hl
 290+ 93BB 22 C1 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93BE C9           	ret
 292+ 93BF
 293+ 93BF              ; ---------------------------------------------------------------------
 294+ 93BF              ;
 295+ 93BF              ;	8/5/24
 296+ 93BF
 297+ 93BF              Reinicia_entidad_maliciosa
 298+ 93BF
 299+ 93BF              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93BF
 301+ 93BF CD 11 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93C2 CD 1E 9F     	call Transfiere_datos_de_contadores
 303+ 93C5
 304+ 93C5              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93C5
 306+ 93C5 3A B8 8B     	ld a,(Tipo)
 307+ 93C8 CD 7F 93     	call Definicion_segun_tipo
 308+ 93CB
 309+ 93CB E5           	push hl
 310+ 93CC DD E1        	pop ix
 311+ 93CE
 312+ 93CE DD 6E 0B     	ld l,(ix+11)
 313+ 93D1 DD 66 0C     	ld h,(ix+12)
 314+ 93D4
 315+ 93D4 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93D7
 317+ 93D7 CD 11 90     	call Cargamos_registros_con_mov_masticado
 318+ 93DA
 319+ 93DA              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93DA              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93DA              ; Ejemplos.
 322+ 93DA
 323+ 93DA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93DA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93DA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93DA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93DA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93DA
 329+ 93DA 21 BB 8B     	ld hl,Contador_de_vueltas
 330+ 93DD CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93DF
 332+ 93DF 7E           	ld a,(hl)
 333+ 93E0 CB 2F        	sra a
 334+ 93E2 CB 2F        	sra a
 335+ 93E4
 336+ 93E4 32 C3 8B     	ld (Velocidad),a
 337+ 93E7
 338+ 93E7 3E 40        	ld a,$40
 339+ 93E9 BE           	cp (hl)
 340+ 93EA C0           	ret nz
 341+ 93EB
 342+ 93EB              ; Límitador.
 343+ 93EB
 344+ 93EB              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93EB
 346+ 93EB CB 2E        	sra (hl)
 347+ 93ED 21 C3 8B     	ld hl,Velocidad
 348+ 93F0 CB 2E        	sra (hl)
 349+ 93F2
 350+ 93F2 C9           	ret
 351+ 93F3
 352+ 93F3              ; ---------------------------------------------------------------------
 353+ 93F3              ;
 354+ 93F3              ;	22/01/24
 355+ 93F3
 356+ 93F3 21 2E 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93F6 CB 46        	bit 0,(hl)
 358+ 93F8 20 0D        	jr nz,1F
 359+ 93FA CB 4E        	bit 1,(hl)
 360+ 93FC 20 0C        	jr nz,2F
 361+ 93FE CB 56        	bit 2,(hl)
 362+ 9400 20 0B        	jr nz,3F
 363+ 9402 CB 5E        	bit 3,(hl)
 364+ 9404 20 0A        	jr nz,4F
 365+ 9406 C9           	ret
 366+ 9407
 367+ 9407 CB E6        1 set 4,(hl)
 368+ 9409 C9           	ret
 369+ 940A CB EE        2 set 5,(hl)
 370+ 940C C9           	ret
 371+ 940D CB F6        3 set 6,(hl)
 372+ 940F C9           	ret
 373+ 9410 CB FE        4 set 7,(hl)
 374+ 9412 C9           	ret
 375+ 9413
 376+ 9413              ; ---------------------------------------------------------------------
 377+ 9413              ;
 378+ 9413              ;	23/01/24
 379+ 9413              ;
 380+ 9413              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9413              ;
 382+ 9413              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9413              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9413              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9413              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9413
 387+ 9413              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9413
 389+ 9413 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9414 3D           	dec a
 391+ 9415 20 06        	jr nz,1F
 392+ 9417
 393+ 9417              ; --- Tipo_1
 394+ 9417
 395+ 9417 21 2E 8C     	ld hl,Ctrl_4
 396+ 941A CB C6        	set 0,(hl)
 397+ 941C C9           	ret
 398+ 941D
 399+ 941D 3D           1 dec a
 400+ 941E 20 06        	jr nz,2F
 401+ 9420
 402+ 9420              ; --- Tipo_2
 403+ 9420
 404+ 9420 21 2E 8C     	ld hl,Ctrl_4
 405+ 9423 CB CE        	set 1,(hl)
 406+ 9425 C9           	ret
 407+ 9426
 408+ 9426 3D           2 dec a
 409+ 9427 20 06        	jr nz,3F
 410+ 9429
 411+ 9429              ; --- Tipo_3
 412+ 9429
 413+ 9429 21 2E 8C     	ld hl,Ctrl_4
 414+ 942C CB D6        	set 2,(hl)
 415+ 942E C9           	ret
 416+ 942F
 417+ 942F              ; --- Tipo_3
 418+ 942F
 419+ 942F 21 2E 8C     3 ld hl,Ctrl_4
 420+ 9432 CB D6        	set 2,(hl)
 421+ 9434 C9           	ret
 422+ 9435
 423+ 9435              ; ---------------------------------------------------------------------
 424+ 9435              ;
 425+ 9435              ;	22/01/24
 426+ 9435
 427+ 9435 21 2E 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9438 CB 46        	bit 0,(hl)
 429+ 943A 20 0E        	jr nz,1F
 430+ 943C
 431+ 943C CB 4E        	bit 1,(hl)
 432+ 943E 20 10        	jr nz,2F
 433+ 9440
 434+ 9440 CB 56        	bit 2,(hl)
 435+ 9442 20 12        	jr nz,3F
 436+ 9444
 437+ 9444 CB 5E        	bit 3,(hl)
 438+ 9446 20 14        	jr nz,4F
 439+ 9448 18 19        	jr 6F
 440+ 944A
 441+ 944A              ; Entidad_de_Tipo_1.
 442+ 944A
 443+ 944A CB 66        1 bit 4,(hl)
 444+ 944C 28 15        	jr z,6F
 445+ 944E 18 10        	jr 5F
 446+ 9450
 447+ 9450              ; Entidad_de_Tipo_2.
 448+ 9450
 449+ 9450 CB 6E        2 bit 5,(hl)
 450+ 9452 28 0F        	jr z,6F
 451+ 9454 18 0A        	jr 5F
 452+ 9456
 453+ 9456              ; Entidad_de_Tipo_3.
 454+ 9456
 455+ 9456 CB 76        3 bit 6,(hl)
 456+ 9458 28 09        	jr z,6F
 457+ 945A 18 04        	jr 5F
 458+ 945C
 459+ 945C              ; Entidad_de_Tipo_4.
 460+ 945C
 461+ 945C CB 7E        4 bit 7,(hl)
 462+ 945E 28 03        	jr z,6F
 463+ 9460
 464+ 9460              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9460
 466+ 9460 AF           5 xor a
 467+ 9461 3C           	inc a
 468+ 9462 C9           	ret
 469+ 9463
 470+ 9463              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9463
 472+ 9463 AF           6 xor a
 473+ 9464 C9           	ret
 474+ 9465
 475+ 9465              ;	------------------------------------------------------------------------------------
 476+ 9465              ;
 477+ 9465              ;	12/01/24
 478+ 9465              ;
 479+ 9465              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9465              ;
 481+ 9465              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9465              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9465
 484+ 9465 CB 27        Calcula_salto_en_BC sla a
 485+ 9467 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9469 4F           	ld c,a
 487+ 946A 06 00        	ld b,0
 488+ 946C C9           	ret
 489+ 946D
 490+ 946D              ; ------------------------------------------------------------------
 491+ 946D              ;
 492+ 946D              ;	19/1/24
 493+ 946D              ;
 494+ 946D              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 946D              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 946D
 497+ 946D A7           Situa_en_datos_de_definicion and a
 498+ 946E ED 4A        	adc hl,bc
 499+ 9470 CD C9 90     	call Extrae_address
 500+ 9473 22 03 8C         ld (Datos_de_entidad),hl
 501+ 9476 C9           	ret
 502+ 9477
 503+ 9477              ; ------------------------------------------------------------------
 504+ 9477
 505+ 9477              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9477              ; 	inc de
 507+ 9477              ; 	inc de
 508+ 9477              ; 	ex de,hl
 509+ 9477              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9477              ; 	ret
 511+ 9477
 512+ 9477              ; ----------------------------------------------------------------------------------------------------------
 513+ 9477              ;
 514+ 9477              ;	24/6/24
 515+ 9477              ;
 516+ 9477              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9477              ;	_ de entidad.
 518+ 9477              ;
 519+ 9477              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9477              ;
 521+ 9477              ;
 522+ 9477              ;	MODIFICA: HL,DE y BC
 523+ 9477
 524+ 9477
 525+ 9477              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9477
 527+ 9477 11 B8 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 947A 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 947B 12           	ld (de),a
 530+ 947C 23           	inc hl
 531+ 947D              ;
 532+ 947D 11 C6 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9480 01 02 00     	ld bc,2
 534+ 9483 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9485              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9485 11 BB 8B     	ld de,Contador_de_vueltas
 537+ 9488 7E           	ld a,(hl)
 538+ 9489 12           	ld (de),a
 539+ 948A 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 948B
 541+ 948B 11 CD 8B     	ld de,Indice_Sprite_der
 542+ 948E 01 04 00     	ld bc,4
 543+ 9491 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9493
 545+ 9493 11 D5 8B     	ld de,Posicion_inicio
 546+ 9496 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9499 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 949B
 549+ 949B 11 BF 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 949E 01 02 00     	ld bc,2
 551+ 94A1 ED B0        	ldir
 552+ 94A3
 553+ 94A3 C9           	ret
 554+ 94A4
 555+ 94A4              ; ----------------------------------------------------------------------------------------------------------
 556+ 94A4              ;
 557+ 94A4              ;	1/8/24
 558+ 94A4              ;
 559+ 94A4
 560+ 94A4              Parametros_de_bandeja_DRAW_a_caja
 561+ 94A4
 562+ 94A4 21 B8 8B     	ld hl,Bandeja_DRAW
 563+ 94A7 01 0C 00     	ld bc,12
 564+ 94AA ED B0        	ldir
 565+ 94AC C9           	ret
 566+ 94AD
 567+ 94AD              ;---------------------------------------------------------------------------------------------------------------
 568+ 94AD              ;
 569+ 94AD              ;	5/1/24
 570+ 94AD              ;
 571+ 94AD              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 94AD              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 94AD              ;
 574+ 94AD              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 94AD              ;
 576+ 94AD              ;	(Numero_parcial_de_entidades)="7".
 577+ 94AD              ;
 578+ 94AD              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 94AD              ;
 580+ 94AD              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 94AD              ;
 582+ 94AD              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 94AD              ;	MODIFICA: A y B.
 584+ 94AD              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 94AD
 586+ 94AD              Inicializa_Numero_parcial_de_entidades
 587+ 94AD
 588+ 94AD              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 94AD
 590+ 94AD 3A FE 8B     	ld a,(Numero_de_entidades)
 591+ 94B0 A7           	and a
 592+ 94B1
 593+ 94B1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94B1              ;	jr z,$
 595+ 94B1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94B1
 597+ 94B1 20 03        	jr nz,3F
 598+ 94B3
 599+ 94B3              ; ---------- ---------- ----------
 600+ 94B3
 601+ 94B3              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94B3              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94B3
 604+ 94B3 CD A9 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94B6
 606+ 94B6              ; ---------- ---------- ----------
 607+ 94B6
 608+ 94B6 3A FE 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94B9 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94BB 38 08        	jr c,1F
 611+ 94BD
 612+ 94BD              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94BD              ; Actualizamos variables.
 614+ 94BD
 615+ 94BD 3E 07        	ld a,7
 616+ 94BF 32 FF 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94C2 47           	ld b,a
 618+ 94C3 18 04        	jr 2F
 619+ 94C5
 620+ 94C5              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94C5              ; (Numero_de_entidades)="0".
 622+ 94C5
 623+ 94C5 32 FF 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94C8 47           	ld b,a
 625+ 94C9 C9           2 ret
 626+ 94CA
# file closed: Rutinas_de_inicio_y_niveles.asm
2056  94CA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94CA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94CA              ;
   3+ 94CA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94CA              ;
   5+ 94CA              ; *****************************************************************************************************************************************************************************************
   6+ 94CA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94CA
   8+ 94CA 7C           calcula_tercio ld a,h
   9+ 94CB E6 18        	and $18
  10+ 94CD CB 2F        	sra a
  11+ 94CF CB 2F        	sra a
  12+ 94D1 CB 2F        	sra a
  13+ 94D3 C9           	ret
  14+ 94D4
# file closed: calcula_tercio.asm
2057  94D4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94D4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94D4              ;
   3+ 94D4              ;
   4+ 94D4              ;	CLS.
   5+ 94D4              ;
   6+ 94D4              ;	Limpia la pantalla y define sus atributos.
   7+ 94D4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94D4              ;
   9+ 94D4              ;	COLORES: 0 ..... NEGRO
  10+ 94D4              ;    		 1 ..... AZUL
  11+ 94D4              ; 			 2 ..... ROJO
  12+ 94D4              ;			 3 ..... MAGENTA
  13+ 94D4              ; 			 4 ..... VERDE
  14+ 94D4              ; 			 5 ..... CIAN
  15+ 94D4              ;			 6 ..... AMARILLO
  16+ 94D4              ; 			 7 ..... BLANCO
  17+ 94D4              ;
  18+ 94D4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94D4              ;
  20+ 94D4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94D4
  22+ 94D4
  23+ 94D4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94D7 11 01 40     	LD DE,$4001
  25+ 94DA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94DD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94DF ED B0        	LDIR
  28+ 94E1 01 FF 02     	LD BC,767
  29+ 94E4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94E5 ED B0        	LDIR
  31+ 94E7 C9           	ret
  32+ 94E8
# file closed: Cls.asm
2058  94E8              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94E8              ; ------------------------------------------------------------------------
   2+ 94E8              ;
   3+ 94E8              ;	30/1/24
   4+ 94E8              ;
   5+ 94E8              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94E8              ;	Fila superior "0", Columna izquierda "0".
   7+ 94E8              ;
   8+ 94E8              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94E8              ;
  10+ 94E8              ;	Modifica: A,BC y DE.
  11+ 94E8
  12+ 94E8 7D           Genera_coordenadas ld a,l
  13+ 94E9 E6 1F        	and $1f
  14+ 94EB 32 B9 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94EE
  16+ 94EE 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94EF FE 40        	cp $40
  18+ 94F1 38 1C        	jr c,4F
  19+ 94F3
  20+ 94F3 CD CA 94     	call calcula_tercio
  21+ 94F6 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94F7
  23+ 94F7 1E 00        	ld e,0
  24+ 94F9 7D           	ld a,l
  25+ 94FA E6 E0        	and $e0
  26+ 94FC 28 01        	jr z,1F
  27+ 94FE 04           	inc b
  28+ 94FF
  29+ 94FF 04           1 inc b
  30+ 9500 05           	dec b
  31+ 9501 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9503              ;														; _ , salimos.
  33+ 9503 1C           3 inc e
  34+ 9504 D6 20        	sub 32
  35+ 9506 20 FB        	jr nz,3B
  36+ 9508 10 F5        	djnz 1B
  37+ 950A
  38+ 950A 7B           2 ld a,e
  39+ 950B 32 BA 8B     	ld (Coordenada_y),a
  40+ 950E C9           	ret
  41+ 950F
  42+ 950F AF           4 xor a
  43+ 9510 32 BA 8B     	ld (Coordenada_y),a
  44+ 9513 C9           	ret
  45+ 9514
# file closed: Genera_coordenadas.asm
2059  9514              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9514              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9514              ;
   3+ 9514              ;	20/09/24
   4+ 9514              ;
   5+ 9514              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9514              ;   DE contiene Puntero_objeto.
   7+ 9514              ;   IX contiene el Puntero de impresión.
   8+ 9514
   9+ 9514              Genera_datos_de_impresion
  10+ 9514
  11+ 9514 ED 73 05 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9518
  13+ 9518 31 BF 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 951B DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 951D
  16+ 951D 2A 27 8C         ld hl,(Scanlines_album_SP)
  17+ 9520
  18+ 9520 3E 05            ld a,5
  19+ 9522 85               add l
  20+ 9523 6F               ld l,a
  21+ 9524
  22+ 9524 F9               ld sp,hl
  23+ 9525 22 27 8C         ld (Scanlines_album_SP),hl
  24+ 9528
  25+ 9528 21 00 00         ld hl,0
  26+ 952B
  27+ 952B DD E5            push ix
  28+ 952D 3B               dec sp
  29+ 952E ED 7A            adc hl,sp
  30+ 9530 D5               push de
  31+ 9531
  32+ 9531              ; Recuperamos SP.
  33+ 9531
  34+ 9531 ED 7B 05 8C      ld sp,(Stack)
  35+ 9535
  36+ 9535 E5               push hl
  37+ 9536 F1               pop af
  38+ 9537 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9538
  40+ 9538              ; Tenemos el encabezado listo.
  41+ 9538              ; Preparamos registros para generar los scanlines.
  42+ 9538
  43+ 9538 DD E5            push ix
  44+ 953A E1               pop hl                                          ; 1er scanline en HL.
  45+ 953B
  46+ 953B ED 5B 27 8C      ld de,(Scanlines_album_SP)
  47+ 953F
  48+ 953F              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 953F              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 953F
  51+ 953F 7C               ld a,h
  52+ 9540 FE 50            cp $50
  53+ 9542 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9544
  55+ 9544 20 05            jr nz,2F
  56+ 9546
  57+ 9546 7D               ld a,l
  58+ 9547 FE E0            cp $e0
  59+ 9549 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 954B
  61+ 954B 7D           2 ld a,l
  62+ 954C FE C0            cp $c0
  63+ 954E D2 E4 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9551
  65+ 9551              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9551
  67+ 9551 CD E2 99         call NextScan
  68+ 9554 EB               ex de,hl
  69+ 9555
  70+ 9555 73               ld (hl),e
  71+ 9556 23               inc hl
  72+ 9557 72               ld (hl),d
  73+ 9558 23               inc hl
  74+ 9559
  75+ 9559 EB               ex de,hl
  76+ 955A
  77+ 955A CD E2 99         call NextScan
  78+ 955D EB               ex de,hl
  79+ 955E
  80+ 955E 73               ld (hl),e
  81+ 955F 23               inc hl
  82+ 9560 72               ld (hl),d
  83+ 9561 23               inc hl
  84+ 9562
  85+ 9562 EB               ex de,hl
  86+ 9563
  87+ 9563 CD E2 99         call NextScan
  88+ 9566 EB               ex de,hl
  89+ 9567
  90+ 9567 73               ld (hl),e
  91+ 9568 23               inc hl
  92+ 9569 72               ld (hl),d
  93+ 956A 23               inc hl
  94+ 956B
  95+ 956B EB               ex de,hl
  96+ 956C
  97+ 956C CD E2 99         call NextScan
  98+ 956F EB               ex de,hl
  99+ 9570
 100+ 9570 73               ld (hl),e
 101+ 9571 23               inc hl
 102+ 9572 72               ld (hl),d
 103+ 9573 23               inc hl
 104+ 9574
 105+ 9574 EB               ex de,hl
 106+ 9575
 107+ 9575 CD E2 99         call NextScan
 108+ 9578 EB               ex de,hl
 109+ 9579
 110+ 9579 73               ld (hl),e
 111+ 957A 23               inc hl
 112+ 957B 72               ld (hl),d
 113+ 957C 23               inc hl
 114+ 957D
 115+ 957D EB               ex de,hl
 116+ 957E
 117+ 957E CD E2 99         call NextScan
 118+ 9581 EB               ex de,hl
 119+ 9582
 120+ 9582 73               ld (hl),e
 121+ 9583 23               inc hl
 122+ 9584 72               ld (hl),d
 123+ 9585 23               inc hl
 124+ 9586
 125+ 9586 EB               ex de,hl
 126+ 9587
 127+ 9587 CD E2 99         call NextScan
 128+ 958A EB               ex de,hl
 129+ 958B
 130+ 958B 73               ld (hl),e
 131+ 958C 23               inc hl
 132+ 958D 72               ld (hl),d
 133+ 958E 23               inc hl
 134+ 958F
 135+ 958F EB               ex de,hl
 136+ 9590
 137+ 9590 CD E2 99         call NextScan
 138+ 9593 EB               ex de,hl
 139+ 9594
 140+ 9594 73               ld (hl),e
 141+ 9595 23               inc hl
 142+ 9596 72               ld (hl),d
 143+ 9597 23               inc hl
 144+ 9598
 145+ 9598 EB               ex de,hl
 146+ 9599
 147+ 9599 CD E2 99         call NextScan
 148+ 959C EB               ex de,hl
 149+ 959D
 150+ 959D 73               ld (hl),e
 151+ 959E 23               inc hl
 152+ 959F 72               ld (hl),d
 153+ 95A0 23               inc hl
 154+ 95A1
 155+ 95A1 EB               ex de,hl
 156+ 95A2
 157+ 95A2 CD E2 99         call NextScan
 158+ 95A5 EB               ex de,hl
 159+ 95A6
 160+ 95A6 73               ld (hl),e
 161+ 95A7 23               inc hl
 162+ 95A8 72               ld (hl),d
 163+ 95A9 23               inc hl
 164+ 95AA
 165+ 95AA EB               ex de,hl
 166+ 95AB
 167+ 95AB CD E2 99         call NextScan
 168+ 95AE EB               ex de,hl
 169+ 95AF
 170+ 95AF 73               ld (hl),e
 171+ 95B0 23               inc hl
 172+ 95B1 72               ld (hl),d
 173+ 95B2 23               inc hl
 174+ 95B3
 175+ 95B3 EB               ex de,hl
 176+ 95B4
 177+ 95B4 CD E2 99         call NextScan
 178+ 95B7 EB               ex de,hl
 179+ 95B8
 180+ 95B8 73               ld (hl),e
 181+ 95B9 23               inc hl
 182+ 95BA 72               ld (hl),d
 183+ 95BB 23               inc hl
 184+ 95BC
 185+ 95BC EB               ex de,hl
 186+ 95BD
 187+ 95BD CD E2 99         call NextScan
 188+ 95C0 EB               ex de,hl
 189+ 95C1
 190+ 95C1 73               ld (hl),e
 191+ 95C2 23               inc hl
 192+ 95C3 72               ld (hl),d
 193+ 95C4 23               inc hl
 194+ 95C5
 195+ 95C5 EB               ex de,hl
 196+ 95C6
 197+ 95C6 CD E2 99         call NextScan
 198+ 95C9 EB               ex de,hl
 199+ 95CA
 200+ 95CA 73               ld (hl),e
 201+ 95CB 23               inc hl
 202+ 95CC 72               ld (hl),d
 203+ 95CD 23               inc hl
 204+ 95CE
 205+ 95CE EB               ex de,hl
 206+ 95CF
 207+ 95CF CD E2 99         call NextScan
 208+ 95D2 EB               ex de,hl
 209+ 95D3
 210+ 95D3              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95D3              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95D3              ;   _ generar sus scanlines.
 213+ 95D3
 214+ 95D3              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95D3
 216+ 95D3 73               ld (hl),e
 217+ 95D4 23               inc hl
 218+ 95D5 72               ld (hl),d
 219+ 95D6 23               inc hl
 220+ 95D7
 221+ 95D7              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95D7
 223+ 95D7 22 27 8C         ld (Scanlines_album_SP),hl
 224+ 95DA
 225+ 95DA EB               ex de,hl
 226+ 95DB
 227+ 95DB              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95DB
 229+ 95DB              ;    call NextScan
 230+ 95DB              ;    call NextScan
 231+ 95DB
 232+ 95DB 22 32 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95DE
 234+ 95DE              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95DE
 236+ 95DE 08               ex af,af
 237+ 95DF
 238+ 95DF F5               push af
 239+ 95E0 E1               pop hl
 240+ 95E1
 241+ 95E1 36 10            ld (hl),16
 242+ 95E3
 243+ 95E3 C9               ret
 244+ 95E4
 245+ 95E4              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95E4
 247+ 95E4              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95E4
 249+ 95E4 3E 57            ld a,$57
 250+ 95E6 94               sub h
 251+ 95E7 47               ld b,a
 252+ 95E8
 253+ 95E8 3E DF            ld a,$df
 254+ 95EA BD               cp l
 255+ 95EB 38 04            jr c,1F
 256+ 95ED
 257+ 95ED 3E 08            ld a,8
 258+ 95EF 80               add b
 259+ 95F0 47               ld b,a
 260+ 95F1
 261+ 95F1              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95F1              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95F1
 264+ 95F1 48           1 ld c,b
 265+ 95F2 0C               inc c
 266+ 95F3
 267+ 95F3 04               inc b
 268+ 95F4 05               dec b
 269+ 95F5 20 02            jr nz,3F
 270+ 95F7
 271+ 95F7 18 0B            jr 6F
 272+ 95F9
 273+ 95F9 CD E2 99     3 call NextScan
 274+ 95FC EB               ex de,hl
 275+ 95FD
 276+ 95FD 73               ld (hl),e
 277+ 95FE 23               inc hl
 278+ 95FF 72               ld (hl),d
 279+ 9600 23               inc hl
 280+ 9601
 281+ 9601 EB               ex de,hl
 282+ 9602 10 F5            djnz 3B
 283+ 9604
 284+ 9604 ED 53 27 8C  6 ld (Scanlines_album_SP),de
 285+ 9608
 286+ 9608 08           5 ex af,af
 287+ 9609 F5               push af
 288+ 960A E1               pop hl
 289+ 960B
 290+ 960B 71               ld (hl),c
 291+ 960C
 292+ 960C C9               ret
 293+ 960D
# file closed: Genera_datos_de_impresion.asm
2060  960D              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 960D              ; -----------------------------------------------------------------------------
   2+ 960D              ;
   3+ 960D              ;   11/03/24
   4+ 960D              ;
   5+ 960D
   6+ 960D              Pinta_Sprites
   7+ 960D
   8+ 960D              ;    ld hl,(Scanlines_album_SP)
   9+ 960D              ;    call Extrae_address
  10+ 960D
  11+ 960D              ;    inc h
  12+ 960D              ;    dec h
  13+ 960D              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 960D
  15+ 960D ED 73 05 8C      ld (Stack),sp
  16+ 9611
  17+ 9611 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9612              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9612 2C               inc l
  20+ 9613 2C               inc l
  21+ 9614
  22+ 9614 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9615
  24+ 9615 2C               inc l
  25+ 9616 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9617
  27+ 9617              ;   Seleccionamos rutina de impresión:
  28+ 9617
  29+ 9617 3E 10            ld a,16
  30+ 9619 B8               cp b
  31+ 961A C2 16 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 961D
  33+ 961D              ;   Rutinas:
  34+ 961D
  35+ 961D              Pinta_rapido    ;   1520 t/states.
  36+ 961D
  37+ 961D E1               pop hl
  38+ 961E
  39+ 961E 1A               ld a,(de)
  40+ 961F AE               xor (hl)
  41+ 9620 77               ld (hl),a
  42+ 9621 2C               inc l
  43+ 9622 1C               inc e
  44+ 9623 1A               ld a,(de)
  45+ 9624 AE               xor (hl)
  46+ 9625 77               ld (hl),a
  47+ 9626 2C               inc l
  48+ 9627 1C               inc e
  49+ 9628 1A               ld a,(de)
  50+ 9629 AE               xor (hl)
  51+ 962A 77               ld (hl),a
  52+ 962B 13               inc de
  53+ 962C
  54+ 962C E1               pop hl
  55+ 962D
  56+ 962D 1A               ld a,(de)
  57+ 962E AE               xor (hl)
  58+ 962F 77               ld (hl),a
  59+ 9630 2C               inc l
  60+ 9631 1C               inc e
  61+ 9632 1A               ld a,(de)
  62+ 9633 AE               xor (hl)
  63+ 9634 77               ld (hl),a
  64+ 9635 2C               inc l
  65+ 9636 1C               inc e
  66+ 9637 1A               ld a,(de)
  67+ 9638 AE               xor (hl)
  68+ 9639 77               ld (hl),a
  69+ 963A 13               inc de
  70+ 963B
  71+ 963B E1               pop hl
  72+ 963C
  73+ 963C 1A               ld a,(de)
  74+ 963D AE               xor (hl)
  75+ 963E 77               ld (hl),a
  76+ 963F 2C               inc l
  77+ 9640 1C               inc e
  78+ 9641 1A               ld a,(de)
  79+ 9642 AE               xor (hl)
  80+ 9643 77               ld (hl),a
  81+ 9644 2C               inc l
  82+ 9645 1C               inc e
  83+ 9646 1A               ld a,(de)
  84+ 9647 AE               xor (hl)
  85+ 9648 77               ld (hl),a
  86+ 9649 13               inc de
  87+ 964A
  88+ 964A E1               pop hl
  89+ 964B
  90+ 964B 1A               ld a,(de)
  91+ 964C AE               xor (hl)
  92+ 964D 77               ld (hl),a
  93+ 964E 2C               inc l
  94+ 964F 1C               inc e
  95+ 9650 1A               ld a,(de)
  96+ 9651 AE               xor (hl)
  97+ 9652 77               ld (hl),a
  98+ 9653 2C               inc l
  99+ 9654 1C               inc e
 100+ 9655 1A               ld a,(de)
 101+ 9656 AE               xor (hl)
 102+ 9657 77               ld (hl),a
 103+ 9658 13               inc de
 104+ 9659
 105+ 9659 E1               pop hl
 106+ 965A
 107+ 965A 1A               ld a,(de)
 108+ 965B AE               xor (hl)
 109+ 965C 77               ld (hl),a
 110+ 965D 2C               inc l
 111+ 965E 1C               inc e
 112+ 965F 1A               ld a,(de)
 113+ 9660 AE               xor (hl)
 114+ 9661 77               ld (hl),a
 115+ 9662 2C               inc l
 116+ 9663 1C               inc e
 117+ 9664 1A               ld a,(de)
 118+ 9665 AE               xor (hl)
 119+ 9666 77               ld (hl),a
 120+ 9667 13               inc de
 121+ 9668
 122+ 9668 E1               pop hl
 123+ 9669
 124+ 9669 1A               ld a,(de)
 125+ 966A AE               xor (hl)
 126+ 966B 77               ld (hl),a
 127+ 966C 2C               inc l
 128+ 966D 1C               inc e
 129+ 966E 1A               ld a,(de)
 130+ 966F AE               xor (hl)
 131+ 9670 77               ld (hl),a
 132+ 9671 2C               inc l
 133+ 9672 1C               inc e
 134+ 9673 1A               ld a,(de)
 135+ 9674 AE               xor (hl)
 136+ 9675 77               ld (hl),a
 137+ 9676 13               inc de
 138+ 9677
 139+ 9677 E1               pop hl
 140+ 9678
 141+ 9678 1A               ld a,(de)
 142+ 9679 AE               xor (hl)
 143+ 967A 77               ld (hl),a
 144+ 967B 2C               inc l
 145+ 967C 1C               inc e
 146+ 967D 1A               ld a,(de)
 147+ 967E AE               xor (hl)
 148+ 967F 77               ld (hl),a
 149+ 9680 2C               inc l
 150+ 9681 1C               inc e
 151+ 9682 1A               ld a,(de)
 152+ 9683 AE               xor (hl)
 153+ 9684 77               ld (hl),a
 154+ 9685 13               inc de
 155+ 9686
 156+ 9686 E1               pop hl
 157+ 9687
 158+ 9687 1A               ld a,(de)
 159+ 9688 AE               xor (hl)
 160+ 9689 77               ld (hl),a
 161+ 968A 2C               inc l
 162+ 968B 1C               inc e
 163+ 968C 1A               ld a,(de)
 164+ 968D AE               xor (hl)
 165+ 968E 77               ld (hl),a
 166+ 968F 2C               inc l
 167+ 9690 1C               inc e
 168+ 9691 1A               ld a,(de)
 169+ 9692 AE               xor (hl)
 170+ 9693 77               ld (hl),a
 171+ 9694 13               inc de
 172+ 9695
 173+ 9695 E1               pop hl
 174+ 9696
 175+ 9696 1A               ld a,(de)
 176+ 9697 AE               xor (hl)
 177+ 9698 77               ld (hl),a
 178+ 9699 2C               inc l
 179+ 969A 1C               inc e
 180+ 969B 1A               ld a,(de)
 181+ 969C AE               xor (hl)
 182+ 969D 77               ld (hl),a
 183+ 969E 2C               inc l
 184+ 969F 1C               inc e
 185+ 96A0 1A               ld a,(de)
 186+ 96A1 AE               xor (hl)
 187+ 96A2 77               ld (hl),a
 188+ 96A3 13               inc de
 189+ 96A4
 190+ 96A4 E1               pop hl
 191+ 96A5
 192+ 96A5 1A               ld a,(de)
 193+ 96A6 AE               xor (hl)
 194+ 96A7 77               ld (hl),a
 195+ 96A8 2C               inc l
 196+ 96A9 1C               inc e
 197+ 96AA 1A               ld a,(de)
 198+ 96AB AE               xor (hl)
 199+ 96AC 77               ld (hl),a
 200+ 96AD 2C               inc l
 201+ 96AE 1C               inc e
 202+ 96AF 1A               ld a,(de)
 203+ 96B0 AE               xor (hl)
 204+ 96B1 77               ld (hl),a
 205+ 96B2 13               inc de
 206+ 96B3
 207+ 96B3 E1               pop hl
 208+ 96B4
 209+ 96B4 1A               ld a,(de)
 210+ 96B5 AE               xor (hl)
 211+ 96B6 77               ld (hl),a
 212+ 96B7 2C               inc l
 213+ 96B8 1C               inc e
 214+ 96B9 1A               ld a,(de)
 215+ 96BA AE               xor (hl)
 216+ 96BB 77               ld (hl),a
 217+ 96BC 2C               inc l
 218+ 96BD 1C               inc e
 219+ 96BE 1A               ld a,(de)
 220+ 96BF AE               xor (hl)
 221+ 96C0 77               ld (hl),a
 222+ 96C1 13               inc de
 223+ 96C2
 224+ 96C2 E1               pop hl
 225+ 96C3
 226+ 96C3 1A               ld a,(de)
 227+ 96C4 AE               xor (hl)
 228+ 96C5 77               ld (hl),a
 229+ 96C6 2C               inc l
 230+ 96C7 1C               inc e
 231+ 96C8 1A               ld a,(de)
 232+ 96C9 AE               xor (hl)
 233+ 96CA 77               ld (hl),a
 234+ 96CB 2C               inc l
 235+ 96CC 1C               inc e
 236+ 96CD 1A               ld a,(de)
 237+ 96CE AE               xor (hl)
 238+ 96CF 77               ld (hl),a
 239+ 96D0 13               inc de
 240+ 96D1
 241+ 96D1 E1               pop hl
 242+ 96D2
 243+ 96D2 1A               ld a,(de)
 244+ 96D3 AE               xor (hl)
 245+ 96D4 77               ld (hl),a
 246+ 96D5 2C               inc l
 247+ 96D6 1C               inc e
 248+ 96D7 1A               ld a,(de)
 249+ 96D8 AE               xor (hl)
 250+ 96D9 77               ld (hl),a
 251+ 96DA 2C               inc l
 252+ 96DB 1C               inc e
 253+ 96DC 1A               ld a,(de)
 254+ 96DD AE               xor (hl)
 255+ 96DE 77               ld (hl),a
 256+ 96DF 13               inc de
 257+ 96E0
 258+ 96E0 E1               pop hl
 259+ 96E1
 260+ 96E1 1A               ld a,(de)
 261+ 96E2 AE               xor (hl)
 262+ 96E3 77               ld (hl),a
 263+ 96E4 2C               inc l
 264+ 96E5 1C               inc e
 265+ 96E6 1A               ld a,(de)
 266+ 96E7 AE               xor (hl)
 267+ 96E8 77               ld (hl),a
 268+ 96E9 2C               inc l
 269+ 96EA 1C               inc e
 270+ 96EB 1A               ld a,(de)
 271+ 96EC AE               xor (hl)
 272+ 96ED 77               ld (hl),a
 273+ 96EE 13               inc de
 274+ 96EF
 275+ 96EF E1               pop hl
 276+ 96F0
 277+ 96F0 1A               ld a,(de)
 278+ 96F1 AE               xor (hl)
 279+ 96F2 77               ld (hl),a
 280+ 96F3 2C               inc l
 281+ 96F4 1C               inc e
 282+ 96F5 1A               ld a,(de)
 283+ 96F6 AE               xor (hl)
 284+ 96F7 77               ld (hl),a
 285+ 96F8 2C               inc l
 286+ 96F9 1C               inc e
 287+ 96FA 1A               ld a,(de)
 288+ 96FB AE               xor (hl)
 289+ 96FC 77               ld (hl),a
 290+ 96FD 13               inc de
 291+ 96FE
 292+ 96FE E1               pop hl
 293+ 96FF
 294+ 96FF 1A               ld a,(de)
 295+ 9700 AE               xor (hl)
 296+ 9701 77               ld (hl),a
 297+ 9702 2C               inc l
 298+ 9703 1C               inc e
 299+ 9704 1A               ld a,(de)
 300+ 9705 AE               xor (hl)
 301+ 9706 77               ld (hl),a
 302+ 9707 2C               inc l
 303+ 9708 1C               inc e
 304+ 9709 1A               ld a,(de)
 305+ 970A AE               xor (hl)
 306+ 970B 77               ld (hl),a
 307+ 970C 13               inc de
 308+ 970D
 309+ 970D ED 73 27 8C      ld (Scanlines_album_SP),sp
 310+ 9711 ED 7B 05 8C      ld sp,(Stack)
 311+ 9715 C9               ret
 312+ 9716
 313+ 9716              Pinta_lento
 314+ 9716
 315+ 9716 E1           1 pop hl
 316+ 9717
 317+ 9717 1A               ld a,(de)
 318+ 9718 AE               xor (hl)
 319+ 9719 77               ld (hl),a
 320+ 971A 2C               inc l
 321+ 971B 1C               inc e
 322+ 971C 1A               ld a,(de)
 323+ 971D AE               xor (hl)
 324+ 971E 77               ld (hl),a
 325+ 971F 2C               inc l
 326+ 9720 1C               inc e
 327+ 9721 1A               ld a,(de)
 328+ 9722 AE               xor (hl)
 329+ 9723 77               ld (hl),a
 330+ 9724 13               inc de
 331+ 9725
 332+ 9725 10 EF            djnz 1B
 333+ 9727
 334+ 9727 ED 73 27 8C      ld (Scanlines_album_SP),sp
 335+ 972B ED 7B 05 8C      ld sp,(Stack)
 336+ 972F C9               ret
# file closed: Pinta_Sprites.asm
2061  9730              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9730              ; ******************************************************************************************************************************************************************************************
   2+ 9730              ;
   3+ 9730              ; 26/06/23
   4+ 9730              ;
   5+ 9730              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9730
   7+ 9730              Draw
   8+ 9730
   9+ 9730 CD D6 99     	call Prepara_draw
  10+ 9733 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9734 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9735 28 05        	jr z,2F
  13+ 9737
  14+ 9737 3A D7 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 973A 18 0C        	jr 1F
  16+ 973C
  17+ 973C 2A D5 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 973F 22 C8 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9742 CD CE 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9745              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9745
  22+ 9745 CD 75 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9748
  24+ 9748 3A C5 8B     1 ld a,(Ctrl_0)
  25+ 974B CB 6F        	bit 5,a
  26+ 974D 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 974F
  28+ 974F CD 64 97     	call Comprueba_limite_horizontal
  29+ 9752 CD F4 97     	call Comprueba_limite_vertical
  30+ 9755
  31+ 9755              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9755              ; -----------------------
  33+ 9755              ; -----------------------
  34+ 9755              ; -----------------------
  35+ 9755
  36+ 9755 CD 4A 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9758 CD 81 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 975B
  39+ 975B 3A C5 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 975E CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9760 32 C5 8B     	ld (Ctrl_0),a
  42+ 9763
  43+ 9763 C9           	ret
  44+ 9764
  45+ 9764              ; *******************************************************************************************************************************************************************************************
  46+ 9764              ;	21/01/23
  47+ 9764              ;
  48+ 9764              ; 	Comprueba_limite_horizontal.
  49+ 9764              ;
  50+ 9764              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9764              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9764              ;
  53+ 9764              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9764              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9764              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9764              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9764
  58+ 9764
  59+ 9764
  60+ 9764 3A C5 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9767 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9769 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 976B E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 976D 32 C5 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9770 18 09            jr 6F
  66+ 9772 CB 5F        1 bit 3,a
  67+ 9774 28 0A            jr z,2F
  68+ 9776 E6 F7            and $f7
  69+ 9778 32 C5 8B         ld (Ctrl_0),a
  70+ 977B CD CE 98     6 call Inicializacion
  71+ 977E 18 5B            jr 5F
  72+ 9780 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9781
  74+ 9781              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9781              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9781
  77+ 9781 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9782 2A D9 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9785 CD CA 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9788 67           	ld h,a
  81+ 9789 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 978A CD CA 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 978D 67           	ld h,a
  84+ 978E A7           	and a
  85+ 978F ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9791 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9792 3A D7 8B     	ld a,(Cuad_objeto)
  88+ 9795 FE 02        	cp 2
  89+ 9797 38 1E        	jr c,3F
  90+ 9799 28 1C        	jr z,3F
  91+ 979B 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 979C 28 23            jr z,7F
  93+ 979E 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97A0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97A2 E1           	pop hl
  96+ 97A3
  97+ 97A3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97A3              ; _para indicar con E="2" en caso necesario.
  99+ 97A3
 100+ 97A3 E5               push hl
 101+ 97A4 C5               push bc
 102+ 97A5 CD CA 94     	call calcula_tercio
 103+ 97A8 FE 01        	cp 1
 104+ 97AA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97AC CD DC 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97AF 28 26            jr z,9F
 107+ 97B1 38 24            jr c,9F
 108+ 97B3 1E 00        11 ld e,0
 109+ 97B5 18 22            jr 8F
 110+ 97B7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97B8 28 07        	jr z, 7F
 112+ 97BA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97BC 1E 00         	ld e,0
 114+ 97BE E1           	pop hl
 115+ 97BF 18 04        	jr 4F
 116+ 97C1 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97C3 18 15            jr 10F
 118+ 97C5
 119+ 97C5              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97C5              ; _para indicar con E="2" en caso necesario.
 121+ 97C5
 122+ 97C5 E5           4 push hl
 123+ 97C6 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97C7 CD CA 94     	call calcula_tercio
 125+ 97CA FE 01        	cp 1
 126+ 97CC 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97CE CD DC 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97D1 28 04            jr z,9F
 129+ 97D3 30 02            jr nc,9F
 130+ 97D5 18 02        	jr 8F
 131+ 97D7 1E 02        9 ld e,2
 132+ 97D9 C1           8 pop bc
 133+ 97DA E1           10 pop hl
 134+ 97DB C9           5 ret
 135+ 97DC
 136+ 97DC              ; --------------------
 137+ 97DC              ;
 138+ 97DC              ; 25/08/22
 139+ 97DC
 140+ 97DC CD CA 94     Comprueba_centro call calcula_tercio
 141+ 97DF 67               ld h,a
 142+ 97E0 08           	ex af,af
 143+ 97E1 FE 02        	cp 2
 144+ 97E3 38 07        	jr c,1F
 145+ 97E5 28 05        	jr z,1F
 146+ 97E7 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97EA 18 03        	jr 2F
 148+ 97EC 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97EF 08           2 ex af,af
 150+ 97F0 A7               and a
 151+ 97F1 ED 42            sbc hl,bc
 152+ 97F3 C9               ret
 153+ 97F4
 154+ 97F4              ; *********************************************************************************************************************************************************************************************
 155+ 97F4              ;
 156+ 97F4              ;   16/8/22
 157+ 97F4              ;
 158+ 97F4              ;	Comprueba_limite_vertical
 159+ 97F4              ;
 160+ 97F4              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97F4              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97F4              ;
 163+ 97F4
 164+ 97F4 2A C8 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97F7 7D           	ld a,l
 166+ 97F8 E6 1F        	and $1F
 167+ 97FA 57           	ld d,a
 168+ 97FB 3A DB 8B     	ld a,(Limite_vertical)
 169+ 97FE BA           	cp d 											; Límite - Posición.
 170+ 97FF 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9800 3A D7 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9803 CB 47        	bit 0,a
 173+ 9805 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9807
 175+ 9807              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9807
 177+ 9807 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9808 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 980A
 180+ 980A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 980A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 980A
 183+ 980A 3A B9 8B         ld a,(Coordenada_X)
 184+ 980D 16 0F            ld d,Centro_izquierda
 185+ 980F A7               and a
 186+ 9810 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9811 28 1E            jr z,3F
 188+ 9813 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9815              ;                                                    ; _salimos sin modificar nada.
 190+ 9815 18 0E            jr 2F
 191+ 9817 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9818 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 981A
 194+ 981A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 981A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 981A
 197+ 981A 3A B9 8B         ld a,(Coordenada_X)
 198+ 981D 16 10            ld d,Centro_derecha
 199+ 981F A7               and a
 200+ 9820 92               sub d
 201+ 9821 28 0E            jr z,3F
 202+ 9823 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9825              ;                                                    ; _salimos sin modificar nada.
 204+ 9825 CB 43        2 bit 0,e
 205+ 9827 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9829 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 982A CD BE 98         call Modificaccionne
 208+ 982D C1           	pop bc
 209+ 982E CD CE 98         call Inicializacion
 210+ 9831 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9832
 212+ 9832              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9832
 214+ 9832 C5           4 push bc
 215+ 9833 01 C7 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9836 0A           	ld a,(bc)
 217+ 9837 3D           	dec a
 218+ 9838 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9839 7D           	ld a,l
 220+ 983A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 983B CB 47        	bit 0,a
 222+ 983D 28 03        	jr z,5F
 223+ 983F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9840 18 2E        	jr 7F
 225+ 9842
 226+ 9842              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9842
 228+ 9842 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9843 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9844 3A C5 8B     	ld a,(Ctrl_0)
 231+ 9847 CB 4F        	bit 1,a
 232+ 9849 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 984B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 984C
 235+ 984C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 984C
 237+ 984C 1C               inc e
 238+ 984D 1D               dec e
 239+ 984E 20 07            jr nz,12F
 240+ 9850 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9851 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9852 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9855 18 44        13 jr 9F
 244+ 9857 CB 43        12 bit 0,e
 245+ 9859 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 985B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 985B C1           	pop bc
 248+ 985C 18 D3        	jr 3B
 249+ 985E 80           14 add b
 250+ 985F 6F               ld l,a
 251+ 9860 22 C8 8B     	ld (Posicion_actual),hl
 252+ 9863 CD BE 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9866 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9868 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 986A 32 C5 8B         ld (Ctrl_0),a
 256+ 986D F1           	pop af
 257+ 986E 18 2B        	jr 9F
 258+ 9870
 259+ 9870              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9870
 261+ 9870 F5           7 push af
 262+ 9871 3A C5 8B     	ld a,(Ctrl_0)
 263+ 9874 CB 47        	bit 0,a
 264+ 9876 20 1D        	jr nz,8F
 265+ 9878 F1           	pop af
 266+ 9879
 267+ 9879              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9879
 269+ 9879 1C           	inc e
 270+ 987A 1D               dec e
 271+ 987B 20 07            jr nz,10F
 272+ 987D 90           	sub b
 273+ 987E 6F               ld l,a
 274+ 987F 22 C8 8B     	ld (Posicion_actual),hl
 275+ 9882 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9884              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9884 CB 43        10 bit 0,e
 278+ 9886 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9888              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9888 C1           	pop bc
 281+ 9889 18 A6        	jr 3B
 282+ 988B 90           16 sub b
 283+ 988C 6F               ld l,a
 284+ 988D 22 C8 8B     	ld (Posicion_actual),hl
 285+ 9890 CD BE 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9893 18 06            jr 9F
 287+ 9895 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9897 32 C5 8B         ld (Ctrl_0),a
 289+ 989A F1           	pop af
 290+ 989B C1           9 pop bc
 291+ 989C 1E 00        	ld e,0
 292+ 989E CD CE 98         call Inicializacion
 293+ 98A1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98A2 08           	ex af,af
 295+ 98A3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98A4 18 8B            jr 3B
 297+ 98A6
 298+ 98A6              ; --------------------
 299+ 98A6
 300+ 98A6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98A8 CD F1 99     1 call PreviousScan
 302+ 98AB 10 FB            djnz 1B
 303+ 98AD 22 C8 8B     	ld (Posicion_actual),hl
 304+ 98B0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98B1 C9           	ret
 306+ 98B2
 307+ 98B2              ; --------------------
 308+ 98B2
 309+ 98B2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98B4 CD E2 99     1 call NextScan
 311+ 98B7 10 FB            djnz 1B
 312+ 98B9 22 C8 8B     	ld (Posicion_actual),hl
 313+ 98BC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98BD C9           	ret
 315+ 98BE
 316+ 98BE              ; --------------------
 317+ 98BE              ;
 318+ 98BE              ;	22/01/23
 319+ 98BE              ;
 320+ 98BE              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98BE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98BE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98BE
 324+ 98BE
 325+ 98BE              Modificaccionne
 326+ 98BE
 327+ 98BE 3A D7 8B     	ld a,(Cuad_objeto)
 328+ 98C1 FE 02        	cp 2
 329+ 98C3 CC A6 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98C6 DC A6 98         call c,Modifica_Pos_actual
 331+ 98C9 C8           	ret z
 332+ 98CA CD B2 98         call Modifica_Pos_actual2
 333+ 98CD C9               ret
 334+ 98CE
 335+ 98CE              ; *************************************************************************************************************************************************************************************************
 336+ 98CE              ;
 337+ 98CE              ;	13/8/22
 338+ 98CE              ;
 339+ 98CE              ;	Inicializacion
 340+ 98CE              ;
 341+ 98CE              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98CE              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98CE              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98CE              ;
 345+ 98CE              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98CE              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98CE              ;	_ desaparece/aparece.
 348+ 98CE
 349+ 98CE              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98CE              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98CE              ;
 352+ 98CE              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98CE              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98CE              ; 		   [E] ="0"
 355+ 98CE
 356+ 98CE              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98CE
 358+ 98CE CD CA 94     Inicializacion call calcula_tercio
 359+ 98D1 28 36        	jr z,primit
 360+ 98D3 E6 02        	and 2
 361+ 98D5 20 07        	jr nz,segmit
 362+ 98D7 7D           	ld a,l
 363+ 98D8 FE 7F        	cp $7f
 364+ 98DA 38 2D        	jr c,primit
 365+ 98DC 28 2B        	jr z,primit
 366+ 98DE CD 44 99     segmit call column
 367+ 98E1 38 13        	jr c,tercuad
 368+ 98E3 3E 04        cuarcuad ld a,4
 369+ 98E5 32 D7 8B     	ld (Cuad_objeto),a
 370+ 98E8 21 20 48     	ld hl,$4820
 371+ 98EB 22 D9 8B     	ld (Limite_horizontal),hl
 372+ 98EE 21 DB 8B     	ld hl,Limite_vertical
 373+ 98F1 36 0D        	ld (hl),$0d
 374+ 98F3 08           	ex af,af
 375+ 98F4 18 3C        	jr 1F
 376+ 98F6              tercuad
 377+ 98F6 3E 03        	ld a,3
 378+ 98F8 32 D7 8B     	ld (Cuad_objeto),a
 379+ 98FB 21 20 48     	ld hl,$4820
 380+ 98FE 22 D9 8B     	ld (Limite_horizontal),hl
 381+ 9901 21 DB 8B     	ld hl,Limite_vertical
 382+ 9904 36 12        	ld (hl),$12
 383+ 9906 08           	ex af,af
 384+ 9907 18 29        	jr 1F
 385+ 9909 CD 44 99     primit call column
 386+ 990C 38 13        	jr c, primcuad
 387+ 990E              segcuad
 388+ 990E 3E 02        	ld a,2
 389+ 9910 32 D7 8B     	ld (Cuad_objeto),a
 390+ 9913 21 C0 4F     	ld hl,$4fc0
 391+ 9916 22 D9 8B     	ld (Limite_horizontal),hl
 392+ 9919 21 DB 8B     	ld hl,Limite_vertical
 393+ 991C 36 0D        	ld (hl),$0d
 394+ 991E 08           	ex af,af
 395+ 991F 18 11        	jr 1F
 396+ 9921              primcuad
 397+ 9921 3E 01        	ld a,1
 398+ 9923 32 D7 8B     	ld (Cuad_objeto),a
 399+ 9926 21 C0 4F     	ld hl,$4fc0
 400+ 9929 22 D9 8B     	ld (Limite_horizontal),hl
 401+ 992C 21 DB 8B     	ld hl,Limite_vertical
 402+ 992F 36 12        	ld (hl),$12
 403+ 9931 08           	ex af,af
 404+ 9932
 405+ 9932 C5           1 push bc
 406+ 9933 E5           	push hl
 407+ 9934 D5           	push de
 408+ 9935
 409+ 9935 2A C8 8B     	ld hl,(Posicion_actual)
 410+ 9938 CD E8 94     	call Genera_coordenadas
 411+ 993B
 412+ 993B D1           	pop de
 413+ 993C E1           	pop hl
 414+ 993D C1           	pop bc
 415+ 993E
 416+ 993E 21 C5 8B     	ld hl,Ctrl_0
 417+ 9941 CB EE        	set 5,(hl)
 418+ 9943 C9           	ret
 419+ 9944
 420+ 9944              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9944
 422+ 9944              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9944              ;
 424+ 9944              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9944
 426+ 9944 7D           column ld a,l
 427+ 9945 E6 1F        	and $1f
 428+ 9947 FE 10         	cp $10
 429+ 9949 C9            	ret
 430+ 994A
 431+ 994A              ; --------------------------------------------------------------------------------------------------------------------
 432+ 994A              ;
 433+ 994A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 994A              ;
 435+ 994A              ; 14/12/22
 436+ 994A              ;
 437+ 994A              ;	Modifica: A y BC.
 438+ 994A
 439+ 994A 3A D7 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 994D E6 01        	and 1
 441+ 994F 28 17        	jr z,1F
 442+ 9951
 443+ 9951              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9951
 445+ 9951 3A B9 8B     	ld a,(Coordenada_X)
 446+ 9954 47           	ld b,a
 447+ 9955 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9956 79           	ld a,c
 449+ 9957 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9958 38 08        	jr c,2F
 451+ 995A 47           	ld b,a
 452+ 995B 79           	ld a,c
 453+ 995C 90           	sub b
 454+ 995D 32 D8 8B     	ld (Columnas),a
 455+ 9960 18 1B        	jr 4F
 456+ 9962 79           2 ld a,c
 457+ 9963 32 D8 8B     	ld (Columnas),a
 458+ 9966 18 15        	jr 4F
 459+ 9968
 460+ 9968              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9968
 462+ 9968 3A B9 8B     1 ld a,(Coordenada_X)
 463+ 996B 81           	add c
 464+ 996C 3D           	dec a
 465+ 996D D6 1F        	sub $1f
 466+ 996F 38 08        	jr c,3F
 467+ 9971 47           	ld b,a
 468+ 9972 79           	ld a,c
 469+ 9973 90           	sub b
 470+ 9974 32 D8 8B     	ld (Columnas),a
 471+ 9977 18 04        	jr 4F
 472+ 9979 79           3 ld a,c
 473+ 997A 32 D8 8B     	ld (Columnas),a
 474+ 997D D9           4 exx
 475+ 997E 4F           	ld c,a
 476+ 997F D9           	exx
 477+ 9980 C9            ret
 478+ 9981
 479+ 9981              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9981              ;
 481+ 9981              ;   19/7/23
 482+ 9981              ;
 483+ 9981              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9981              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9981              ;
 486+ 9981              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9981              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9981              ;
 489+ 9981              ;	DESTRUYE: HL,B Y A.
 490+ 9981
 491+ 9981 3A D7 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9984 FE 02        	cp 2
 493+ 9986 38 18        	jr c,1F
 494+ 9988 28 16        	jr z,1F
 495+ 998A E6 01        	and 1
 496+ 998C 28 0D        	jr z,3F
 497+ 998E
 498+ 998E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 998E
 500+ 998E CD CA 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9991
 502+ 9991 7D           9 ld a,l
 503+ 9992 E6 1F        	and $1f
 504+ 9994 28 2A        	jr z,7F
 505+ 9996 2B           	dec hl
 506+ 9997 10 F8        	djnz 9B
 507+ 9999 18 25        	jr 7F
 508+ 999B
 509+ 999B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 999B
 511+ 999B 2A C8 8B     3 ld hl,(Posicion_actual)
 512+ 999E 18 20        	jr 7F
 513+ 99A0
 514+ 99A0 28 14        1 jr z,2F
 515+ 99A2
 516+ 99A2              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99A2
 518+ 99A2 CD CA 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99A5
 520+ 99A5 7D           4 ld a,l
 521+ 99A6 E6 1F        	and $1f
 522+ 99A8 28 03        	jr z,6F
 523+ 99AA 2B           	dec hl
 524+ 99AB 10 F8        	djnz 4B
 525+ 99AD 06 0F        6 ld b,15
 526+ 99AF CD F1 99     5 call PreviousScan
 527+ 99B2 10 FB        	djnz 5B
 528+ 99B4 18 0A        	jr 7F
 529+ 99B6
 530+ 99B6              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99B6
 532+ 99B6 CD CA 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99B9 06 0F        	ld b,15
 534+ 99BB CD F1 99     8 call PreviousScan
 535+ 99BE 10 FB        	djnz 8B
 536+ 99C0
 537+ 99C0 E5           7 push hl
 538+ 99C1 DD E1        	pop ix
 539+ 99C3
 540+ 99C3 2A CA 8B     	ld hl,(Puntero_objeto)
 541+ 99C6 E5           	push hl
 542+ 99C7 FD E1        	pop iy
 543+ 99C9
 544+ 99C9 C9           	ret
 545+ 99CA
 546+ 99CA              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99CA              ;
 548+ 99CA              ;	2/1/23
 549+ 99CA              ;
 550+ 99CA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99CA              ;
 552+ 99CA              ;	Tras esta rutina tenemos:
 553+ 99CA              ;
 554+ 99CA              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99CA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99CA              ;
 557+ 99CA              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99CA
 559+ 99CA 2A C8 8B     Operandos ld hl,(Posicion_actual)
 560+ 99CD 3A D8 8B     	ld a,(Columnas)
 561+ 99D0 3D           	dec a
 562+ 99D1 20 01        	jr nz,1F
 563+ 99D3 3C           	inc a
 564+ 99D4 47           1 ld b,a
 565+ 99D5 C9           	ret
 566+ 99D6
 567+ 99D6              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99D6              ;
 569+ 99D6              ;	Prepara_draw
 570+ 99D6              ;
 571+ 99D6              ;	Es una rutina de carga.
 572+ 99D6              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99D6              ;
 574+ 99D6              ;	FUNCIONAMIENTO:
 575+ 99D6              ;
 576+ 99D6              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99D6              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99D6              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99D6              ;
 580+ 99D6              ;	DESTRUYE:
 581+ 99D6              ;
 582+ 99D6              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99D6
 584+ 99D6 21 C6 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99D9 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99DA 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99DB 4E           	ld c,(hl)
 588+ 99DC 2A C8 8B     	ld hl,(Posicion_actual)
 589+ 99DF 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99E1 C9           	ret
 591+ 99E2
 592+ 99E2              ;----------------------------------------------------------------------------------------------------------------
 593+ 99E2              ;
 594+ 99E2              ;	5/08/22
 595+ 99E2              ;
 596+ 99E2              ;   NextScan.
 597+ 99E2              ;
 598+ 99E2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99E2              ;
 600+ 99E2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99E2              ;
 602+ 99E2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99E2              ;
 604+ 99E2              ;       DESTRUIDOS: AF y HL !!!
 605+ 99E2              ;
 606+ 99E2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99E2              ;
 608+ 99E2
 609+ 99E2 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99E3 7C               ld a,h
 611+ 99E4 E6 07            and 7
 612+ 99E6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99E7
 614+ 99E7 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99E8 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99EA 6F               ld l,a
 617+ 99EB D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99EC
 619+ 99EC 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99ED D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99EF 67               ld h,a
 622+ 99F0 C9               ret
 623+ 99F1
 624+ 99F1              ;----------------------------------------------------------------------------------------------------------------
 625+ 99F1              ;
 626+ 99F1              ;	5/08/22
 627+ 99F1              ;
 628+ 99F1              ;   PreviousScan.
 629+ 99F1              ;
 630+ 99F1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99F1              ;
 632+ 99F1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99F1              ;
 634+ 99F1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99F1              ;
 636+ 99F1              ;       DESTRUIDOS: AF y HL !!!
 637+ 99F1              ;
 638+ 99F1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99F1              ;
 640+ 99F1
 641+ 99F1 7C           PreviousScan ld a,h
 642+ 99F2 25               dec h               ; Dec H.
 643+ 99F3 E6 07            and 7
 644+ 99F5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99F6
 646+ 99F6 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99F7 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99F9 6F               ld l,a
 649+ 99FA D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99FB
 651+ 99FB 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99FC C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99FE 67               ld h,a
 654+ 99FF C9               ret
 655+ 9A00
 656+ 9A00
 657+ 9A00
 658+ 9A00
 659+ 9A00
 660+ 9A00
 661+ 9A00
 662+ 9A00
 663+ 9A00
 664+ 9A00
 665+ 9A00
 666+ 9A00
# file closed: Draw_XOR.asm
2062  9A00              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A00
   2+ 9A00              ; ******************************************************************************************************************************************************************************************
   3+ 9A00              ;
   4+ 9A00              ;   20/05/23
   5+ 9A00              ;
   6+ 9A00              ;	Recompone_posicion_inicio
   7+ 9A00              ;
   8+ 9A00              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A00              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A00              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A00              ;	_ a una u otra rutina.
  12+ 9A00
  13+ 9A00              Recompone_posicion_inicio
  14+ 9A00
  15+ 9A00 2A D5 8B     	ld hl,(Posicion_inicio)
  16+ 9A03 7D           	ld a,l
  17+ 9A04 E6 1F        	and $1f
  18+ 9A06 28 16        	jr z,1F
  19+ 9A08
  20+ 9A08 FE 1F        	cp $1f
  21+ 9A0A 28 0D        	jr z,3F
  22+ 9A0C
  23+ 9A0C 21 C4 8B     	ld hl,Ctrl_2
  24+ 9A0F CB C6        	set 0,(hl)
  25+ 9A11 2A CA 8B     	ld hl,(Puntero_objeto)
  26+ 9A14 22 F6 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A17 18 08        	jr 2F
  28+ 9A19
  29+ 9A19 CD C7 9B     3 call Mov_left
  30+ 9A1C 18 03        	jr 2F
  31+ 9A1E
  32+ 9A1E CD A4 9A     1 call Mov_right
  33+ 9A21 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A24 22 CA 8B     	ld (Puntero_objeto),hl
  35+ 9A27 C9           	ret
  36+ 9A28
  37+ 9A28              ; ******************************************************************************************************************************************************************************************
  38+ 9A28              ;
  39+ 9A28              ;   27/05/23
  40+ 9A28              ;
  41+ 9A28              ;	Mov_down
  42+ 9A28              ;
  43+ 9A28              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A28              ;
  45+ 9A28              ;
  46+ 9A28              Mov_down
  47+ 9A28
  48+ 9A28 CD 92 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A2B              ;																	; _ repone (Puntero_objeto).
  50+ 9A2B 21 C5 8B     	ld hl,Ctrl_0
  51+ 9A2E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A30              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A30              ; 																	; _ en el caso de que no lo haya.
  54+ 9A30 3A E0 8B     	ld a,(Vel_down)
  55+ 9A33 47           	ld b,a
  56+ 9A34 2A C8 8B         ld hl,(Posicion_actual)
  57+ 9A37 CD CA 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A3A E6 02        	and 2
  59+ 9A3C 28 17        	jr z,1F
  60+ 9A3E
  61+ 9A3E              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A3E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A3E
  64+ 9A3E 7C           	ld a,h
  65+ 9A3F FE 57        	cp $57
  66+ 9A41 20 12        	jr nz,1F
  67+ 9A43
  68+ 9A43 7D           	ld a,l
  69+ 9A44 C6 20        	add $20
  70+ 9A46 30 0D        	jr nc,1F
  71+ 9A48
  72+ 9A48              ; ------------------------------
  73+ 9A48              ;
  74+ 9A48              ;	12/01/24
  75+ 9A48
  76+ 9A48              ;	call Reaparece_arriba
  77+ 9A48 CD 54 9D     	call Reinicio
  78+ 9A4B
  79+ 9A4B              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A4B
  81+ 9A4B 3A 2D 8C     	ld a,(Ctrl_3)
  82+ 9A4E CB CF        	set 1,a
  83+ 9A50 32 2D 8C     	ld (Ctrl_3),a
  84+ 9A53
  85+ 9A53 18 08        	jr 3F
  86+ 9A55              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A55              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A55              ; ------------------------------
  89+ 9A55
  90+ 9A55 CD E2 99     1 call NextScan
  91+ 9A58 22 C8 8B     	ld (Posicion_actual),hl
  92+ 9A5B 10 DA            djnz 2B
  93+ 9A5D CD E8 94     3 call Genera_coordenadas
  94+ 9A60 C9           	ret
  95+ 9A61
  96+ 9A61              ; ******************************************************************************************************************************************************************************************
  97+ 9A61              ;
  98+ 9A61              ;   27/05/23
  99+ 9A61              ;
 100+ 9A61              ;	Mov_up
 101+ 9A61              ;
 102+ 9A61              ; 	Mueve el Sprite hacia arriba.
 103+ 9A61              ;
 104+ 9A61              ;
 105+ 9A61              Mov_up
 106+ 9A61
 107+ 9A61 CD 92 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A64              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A64 21 C5 8B     	ld hl,Ctrl_0
 110+ 9A67 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A69              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A69              ; 																		; _ en el caso de que no lo haya.
 113+ 9A69 3A DF 8B     	ld a,(Vel_up)
 114+ 9A6C 47           	ld b,a
 115+ 9A6D 2A C8 8B     	ld hl,(Posicion_actual)
 116+ 9A70 CD CA 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A73 A7           	and a
 118+ 9A74 20 10        	jr nz,1F
 119+ 9A76
 120+ 9A76              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A76              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A76
 123+ 9A76 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A77 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A79 20 0B            jr nz,1F
 126+ 9A7B 7D               ld a,l
 127+ 9A7C D6 20            sub $20
 128+ 9A7E 30 06            jr nc,1F
 129+ 9A80 25               dec h
 130+ 9A81
 131+ 9A81              ; -----------------------------
 132+ 9A81 CD 35 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A84              ;	call Reinicio
 134+ 9A84              ; -----------------------------
 135+ 9A84
 136+ 9A84 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A86 CD F1 99     1 call PreviousScan
 138+ 9A89 22 C8 8B     	ld (Posicion_actual),hl
 139+ 9A8C 10 E2            djnz 3B
 140+ 9A8E CD E8 94     2 call Genera_coordenadas
 141+ 9A91 C9           	ret
 142+ 9A92
 143+ 9A92              ; -----------------------------
 144+ 9A92              ;
 145+ 9A92              ;	27/5/23
 146+ 9A92              ;
 147+ 9A92              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A92              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A92              ;
 150+ 9A92              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A92              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A92              ;
 153+ 9A92              ;	Modifica: A y (Puntero_objeto).
 154+ 9A92
 155+ 9A92 3A C4 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A95 CB 47        	bit 0,a
 157+ 9A97 C8           	ret z
 158+ 9A98 CB 87        	res 0,a
 159+ 9A9A 32 C4 8B     	ld (Ctrl_2),a
 160+ 9A9D 2A F6 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9AA0 22 CA 8B     	ld (Puntero_objeto),hl
 162+ 9AA3 C9           	ret
 163+ 9AA4
 164+ 9AA4              ; ******************************************************************************************************************************************************************************************
 165+ 9AA4              ;
 166+ 9AA4              ;	19/10/22
 167+ 9AA4              ;
 168+ 9AA4              ;	Mov_right.
 169+ 9AA4              ;
 170+ 9AA4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AA4              ;
 172+ 9AA4
 173+ 9AA4 3A C5 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AA7 CB 77        	bit 6,a
 175+ 9AA9 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AAB
 177+ 9AAB CD E3 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AAE C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AAF
 180+ 9AAF 21 C5 8B     	ld hl,Ctrl_0
 181+ 9AB2 CB E6        	set 4,(hl)
 182+ 9AB4 18 52        	jr 8F
 183+ 9AB6
 184+ 9AB6 21 C5 8B     10 ld hl,Ctrl_0
 185+ 9AB9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9ABB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9ABB              ; 																	; _ en el caso de que no lo haya.
 188+ 9ABB 3A B9 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9ABE FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AC0 20 46        	jr nz,8F
 191+ 9AC2
 192+ 9AC2 3A CC 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AC5 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AC6 28 40        	jr z,8F
 195+ 9AC8
 196+ 9AC8              ; ---------- ---------- ----------
 197+ 9AC8              ;
 198+ 9AC8              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AC8
 200+ 9AC8 3A DE 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ACB FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9ACD 28 11        	jr z,1F
 203+ 9ACF 38 06        	jr c,6F
 204+ 9AD1 FE 04        	cp 4
 205+ 9AD3 28 14        	jr z,7F
 206+ 9AD5 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AD7
 208+ 9AD7              ; ---------- ---------- ----------
 209+ 9AD7              ;
 210+ 9AD7              ; Perfiles de velocidad
 211+ 9AD7              ;
 212+ 9AD7
 213+ 9AD7 3A CC 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ADA FE FE        	cp $fe
 215+ 9ADC 20 2A        	jr nz,8F
 216+ 9ADE 18 10        	jr 3F
 217+ 9AE0 3A CC 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AE3 FE FD        	cp $fd
 219+ 9AE5 20 21        	jr nz,8F
 220+ 9AE7 18 07        	jr 3F
 221+ 9AE9 3A CC 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AEC FE FB        	cp $fb
 223+ 9AEE 20 18        	jr nz,8F
 224+ 9AF0
 225+ 9AF0              ; ---------- ---------- ----------
 226+ 9AF0
 227+ 9AF0              3
 228+ 9AF0 CD 23 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AF3              ;	call Reinicio
 230+ 9AF3
 231+ 9AF3              ; ---------- ---------- ----------
 232+ 9AF3              ;
 233+ 9AF3              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AF3
 235+ 9AF3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AF5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AF6 CD 0F 9B     	call DESPLZ_DER
 238+ 9AF9 C1           	pop bc
 239+ 9AFA 10 F9        	djnz 5B
 240+ 9AFC 2A C8 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AFF 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B00 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9B03 CD E8 94     	call Genera_coordenadas
 244+ 9B06 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B08
 246+ 9B08              ; ---------- ---------- ----------
 247+ 9B08
 248+ 9B08 2A C8 8B     8 ld hl,(Posicion_actual)
 249+ 9B0B CD 0F 9B     	call DESPLZ_DER
 250+ 9B0E C9           2 ret
 251+ 9B0F
 252+ 9B0F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B0F              ;
 254+ 9B0F              ;	22/9/22
 255+ 9B0F              ;
 256+ 9B0F
 257+ 9B0F CD 1E 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B12 CD 6A 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B15 CD 93 9B         call Ciclo_completo
 260+ 9B18 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B1B CB FE        	set 7,(hl)
 262+ 9B1D C9           	ret
 263+ 9B1E
 264+ 9B1E              ; ******************************************************************************************************************************************************************************************
 265+ 9B1E              ;	15/02/23
 266+ 9B1E              ;
 267+ 9B1E
 268+ 9B1E 3A DE 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B21 47           	ld b,a
 270+ 9B22 2A D1 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B25 23           1 inc hl
 272+ 9B26 23           	inc hl
 273+ 9B27 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B29 22 D1 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B2C CD C9 90     	call Extrae_address
 276+ 9B2F 22 CA 8B     	ld (Puntero_objeto),hl
 277+ 9B32
 278+ 9B32              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B32
 280+ 9B32              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B32              ; Cuántos movimientos hemos hecho ??
 282+ 9B32              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B32
 284+ 9B32 2A CD 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B35 EB           	ex de,hl
 286+ 9B36 A7           	and a
 287+ 9B37 ED 52        	sbc hl,de
 288+ 9B39 CB 3D        	srl l
 289+ 9B3B 3E 08        6 ld a,8
 290+ 9B3D 95           	sub l
 291+ 9B3E 30 1E        	jr nc,3F
 292+ 9B40
 293+ 9B40              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B40              ; B="0".
 295+ 9B40
 296+ 9B40 04           4 inc b
 297+ 9B41 3C           	inc a
 298+ 9B42 20 FC        	jr nz,4B
 299+ 9B44 78           	ld a,b
 300+ 9B45 08           	ex af,af
 301+ 9B46 2A CD 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B49 23           5 inc hl
 303+ 9B4A 23           	inc hl
 304+ 9B4B 10 FC        	djnz 5B
 305+ 9B4D 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B50 CD C9 90     	call Extrae_address
 307+ 9B53 22 CA 8B     	ld (Puntero_objeto),hl
 308+ 9B56
 309+ 9B56              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B56              ; _(Posicion_actual).
 311+ 9B56
 312+ 9B56 21 C8 8B     	ld hl,Posicion_actual
 313+ 9B59 34           	inc (hl)
 314+ 9B5A 08               ex af,af
 315+ 9B5B 6F           	ld l,a
 316+ 9B5C 18 DD        	jr 6B
 317+ 9B5E
 318+ 9B5E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B5E
 320+ 9B5E 47           3 ld b,a
 321+ 9B5F 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B62 23           2 inc hl
 323+ 9B63 23           	inc hl
 324+ 9B64 10 FC        	djnz 2B
 325+ 9B66 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B69 C9           8 ret
 327+ 9B6A
 328+ 9B6A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B6A              ;
 330+ 9B6A              ;	24/7/22
 331+ 9B6A              ;
 332+ 9B6A              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B6A              ;
 334+ 9B6A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B6A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B6A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B6A
 338+ 9B6A 3A CC 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B6D A7           	and a
 340+ 9B6E 20 1F        	jr nz,1F
 341+ 9B70 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B72 32 CC 8B         ld (CTRL_DESPLZ),a
 343+ 9B75
 344+ 9B75 21 C7 8B     	ld hl,Columns
 345+ 9B78 34           	inc (hl)
 346+ 9B79 3A D7 8B     	ld a,(Cuad_objeto)
 347+ 9B7C E6 01        	and 1
 348+ 9B7E 28 0F        	jr z,1F
 349+ 9B80 2A C8 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B83 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B84 22 C8 8B     	ld (Posicion_actual),hl
 352+ 9B87 CD E8 94     	call Genera_coordenadas
 353+ 9B8A CD EF 9C     	call Inc_CTRL_DESPLZ
 354+ 9B8D 18 03        	jr 2F
 355+ 9B8F CD EF 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B92 C9           2 ret
 357+ 9B93
 358+ 9B93              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B93              ;
 360+ 9B93              ;	24/7/22
 361+ 9B93              ;
 362+ 9B93              ;	Ciclo_completo.
 363+ 9B93              ;
 364+ 9B93              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B93              ;
 366+ 9B93              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B93              ; 	Decrementamos (Columns).
 368+ 9B93              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B93              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B93
 371+ 9B93
 372+ 9B93 3A CC 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B96 FE FF        	cp $ff
 374+ 9B98 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B9A E6 F0        	and $f0
 376+ 9B9C 20 28        	jr nz,3F
 377+ 9B9E
 378+ 9B9E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B9E
 380+ 9B9E 3A CC 8B     	ld a,(CTRL_DESPLZ)
 381+ 9BA1 47           	ld b,a
 382+ 9BA2 3E F8        	ld a,$f8
 383+ 9BA4 80           	add b
 384+ 9BA5 32 CC 8B     	ld (CTRL_DESPLZ),a
 385+ 9BA8 18 1C        	jr 3F
 386+ 9BAA 21 C7 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BAD 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BAE AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BAF 32 CC 8B     	ld (CTRL_DESPLZ),a
 390+ 9BB2 3A D7 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BB5 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BB7 20 0A        	jr nz,2F
 393+ 9BB9 2A C8 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BBC 23           	inc hl
 395+ 9BBD 22 C8 8B     	ld (Posicion_actual),hl
 396+ 9BC0 CD E8 94     	call Genera_coordenadas
 397+ 9BC3
 398+ 9BC3              ; Inicia el puntero de Sprite.
 399+ 9BC3
 400+ 9BC3 CD DE 90     2 call Inicia_puntero_objeto_der
 401+ 9BC6 C9           3 ret
 402+ 9BC7
 403+ 9BC7              ; ******************************************************************************************************************************************************************************************
 404+ 9BC7              ;
 405+ 9BC7              ;	15/02/23
 406+ 9BC7              ;
 407+ 9BC7              ;	Mov_left.
 408+ 9BC7              ;
 409+ 9BC7              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BC7              ;
 411+ 9BC7              Mov_left
 412+ 9BC7
 413+ 9BC7 21 C5 8B     	ld hl,Ctrl_0
 414+ 9BCA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BCC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BCC              ; 																	; _ en el caso de que no lo haya.
 417+ 9BCC 3A C5 8B     	ld a,(Ctrl_0)
 418+ 9BCF CB 77        	bit 6,a
 419+ 9BD1 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BD3
 421+ 9BD3 CD E9 9C     	call Stop_Amadeus_left
 422+ 9BD6 C8           	ret z
 423+ 9BD7 20 4A        	jr nz,8F
 424+ 9BD9
 425+ 9BD9 3A B9 8B     11 ld a,(Coordenada_X)
 426+ 9BDC A7           	and a
 427+ 9BDD 20 44        	jr nz,8F
 428+ 9BDF
 429+ 9BDF 3A CC 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BE2 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BE3 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BE5
 433+ 9BE5              ; ---------- ---------- ----------
 434+ 9BE5
 435+ 9BE5 3A DD 8B     	ld a,(Vel_left)
 436+ 9BE8 FE 02        	cp 2
 437+ 9BEA 28 0F        	jr z,1F
 438+ 9BEC 38 04        	jr c,6F
 439+ 9BEE FE 04        	cp 4
 440+ 9BF0 28 12        	jr z,7F
 441+ 9BF2
 442+ 9BF2              ; ---------- ---------- ----------
 443+ 9BF2
 444+ 9BF2 3A CC 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BF5 FE F8        	cp $f8
 446+ 9BF7 20 2A        	jr nz,8F
 447+ 9BF9 18 10        	jr 4F
 448+ 9BFB 3A CC 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BFE FE F9        	cp $f9
 450+ 9C00 20 21        	jr nz,8F
 451+ 9C02 18 07        	jr 4F
 452+ 9C04 3A CC 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9C07 FE FB        	cp $fb
 454+ 9C09 20 18        	jr nz,8F
 455+ 9C0B
 456+ 9C0B              ; ---------- ---------- ----------
 457+ 9C0B
 458+ 9C0B              4
 459+ 9C0B CD 11 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C0E              ;	call Reinicio
 461+ 9C0E
 462+ 9C0E              ; ---------- ---------- ----------
 463+ 9C0E
 464+ 9C0E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C10 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C11
 467+ 9C11              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C11              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C11
 470+ 9C11 CD 2A 9C     	call DESPLZ_IZQ
 471+ 9C14 C1           	pop bc
 472+ 9C15 10 F9        	djnz 5B
 473+ 9C17 2A C8 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C1A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C1B 22 C8 8B     	ld (Posicion_actual),hl
 476+ 9C1E CD E8 94     	call Genera_coordenadas
 477+ 9C21 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C23
 479+ 9C23              ; ---------- ---------- ----------
 480+ 9C23
 481+ 9C23              ; Movemos, no hay recolocación.
 482+ 9C23
 483+ 9C23 2A C8 8B     8 ld hl,(Posicion_actual)
 484+ 9C26 CD 2A 9C     	call DESPLZ_IZQ
 485+ 9C29 C9           2 ret
 486+ 9C2A
 487+ 9C2A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C2A              ;
 489+ 9C2A              ;	22/9/22
 490+ 9C2A
 491+ 9C2A              DESPLZ_IZQ
 492+ 9C2A
 493+ 9C2A CD 39 9C     	call Desplaza_izquierda
 494+ 9C2D CD 85 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C30 CD AD 9C     	call Ciclo_completo_2
 496+ 9C33 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C36 CB BE        	res 7,(hl)
 498+ 9C38 C9           	ret
 499+ 9C39
 500+ 9C39              Desplaza_izquierda
 501+ 9C39
 502+ 9C39 3A DD 8B     	ld a,(Vel_left)
 503+ 9C3C 47           	ld b,a
 504+ 9C3D 2A D3 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C40 23           1 inc hl
 506+ 9C41 23           	inc hl
 507+ 9C42 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C44 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C47 CD C9 90     	call Extrae_address
 510+ 9C4A 22 CA 8B     	ld (Puntero_objeto),hl
 511+ 9C4D
 512+ 9C4D              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C4D
 514+ 9C4D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C4D              ; Cuántos movimientos hemos hecho ??
 516+ 9C4D              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C4D
 518+ 9C4D 2A CF 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C50 EB           	ex de,hl
 520+ 9C51 A7           	and a
 521+ 9C52 ED 52        	sbc hl,de
 522+ 9C54 CB 3D        	srl l
 523+ 9C56 3E 08        6 ld a,8
 524+ 9C58 95           	sub l
 525+ 9C59 30 1E        	jr nc,3F
 526+ 9C5B
 527+ 9C5B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C5B              ; B="0".
 529+ 9C5B
 530+ 9C5B 04           4 inc b
 531+ 9C5C 3C           	inc a
 532+ 9C5D 20 FC        	jr nz,4B
 533+ 9C5F 78           	ld a,b
 534+ 9C60 08           	ex af,af
 535+ 9C61 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C64 23           5 inc hl
 537+ 9C65 23           	inc hl
 538+ 9C66 10 FC        	djnz 5B
 539+ 9C68 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C6B CD C9 90     	call Extrae_address
 541+ 9C6E 22 CA 8B     	ld (Puntero_objeto),hl
 542+ 9C71
 543+ 9C71              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C71              ; _(Posicion_actual).
 545+ 9C71
 546+ 9C71 21 C8 8B     	ld hl,Posicion_actual
 547+ 9C74 35           	dec (hl)
 548+ 9C75 08           	ex af,af
 549+ 9C76 6F           	ld l,a
 550+ 9C77 18 DD        	jr 6B
 551+ 9C79
 552+ 9C79              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C79
 554+ 9C79 47           3 ld b,a
 555+ 9C7A 2A CD 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C7D 23           2 inc hl
 557+ 9C7E 23           	inc hl
 558+ 9C7F 10 FC        	djnz 2B
 559+ 9C81 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C84 C9           8 ret
 561+ 9C85
 562+ 9C85              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C85              ;
 564+ 9C85              ;	modifica_parametros_1er_DESPLZ
 565+ 9C85              ;
 566+ 9C85              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C85              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C85              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C85
 570+ 9C85 3A CC 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C88 A7           	and a
 572+ 9C89 20 1E        	jr nz,1F
 573+ 9C8B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C8C 32 CC 8B         ld (CTRL_DESPLZ),a
 575+ 9C8F 21 C7 8B     	ld hl,Columns
 576+ 9C92 34           	inc (hl)
 577+ 9C93 3A D7 8B     	ld a,(Cuad_objeto)
 578+ 9C96 E6 01        	and 1
 579+ 9C98 20 0F        	jr nz,1F
 580+ 9C9A 2A C8 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C9D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C9E 22 C8 8B     	ld (Posicion_actual),hl
 583+ 9CA1 CD E8 94     	call Genera_coordenadas
 584+ 9CA4 CD 00 9D     	call Dec_CTRL_DESPLZ
 585+ 9CA7 18 03        	jr 2F
 586+ 9CA9 CD 00 9D     1 call Dec_CTRL_DESPLZ
 587+ 9CAC C9           2 ret
 588+ 9CAD
 589+ 9CAD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CAD
 591+ 9CAD 3A CC 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CB0 FE F7        	cp $f7
 593+ 9CB2 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CB4 30 2C        	jr nc,3F
 595+ 9CB6
 596+ 9CB6              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CB6
 598+ 9CB6 06 00        	ld b,0
 599+ 9CB8 04           4 inc b
 600+ 9CB9 3C           	inc a
 601+ 9CBA FE F7        	cp $f7
 602+ 9CBC 20 FA        	jr nz,4B
 603+ 9CBE 3E FF        	ld a,$ff
 604+ 9CC0 90           	sub b
 605+ 9CC1 32 CC 8B     	ld (CTRL_DESPLZ),a
 606+ 9CC4 18 1C        	jr 3F
 607+ 9CC6
 608+ 9CC6              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CC6
 610+ 9CC6 21 C7 8B     1 ld hl,Columns
 611+ 9CC9 35           	dec (hl)
 612+ 9CCA AF           	xor a
 613+ 9CCB 32 CC 8B     	ld (CTRL_DESPLZ),a
 614+ 9CCE 3A D7 8B     	ld a,(Cuad_objeto)
 615+ 9CD1 E6 01        	and 1
 616+ 9CD3 28 0A        	jr z,2F
 617+ 9CD5 2A C8 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CD8 2B           	dec hl
 619+ 9CD9 22 C8 8B     	ld (Posicion_actual),hl
 620+ 9CDC CD E8 94     	call Genera_coordenadas
 621+ 9CDF
 622+ 9CDF              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CDF
 624+ 9CDF CD F1 90     2 call Inicia_puntero_objeto_izq
 625+ 9CE2 C9           3 ret
 626+ 9CE3
 627+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CE3              ;
 629+ 9CE3              ;	19/10/22
 630+ 9CE3              ;
 631+ 9CE3              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CE3              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CE3
 634+ 9CE3 3A B9 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CE6 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CE8 C9           	ret
 637+ 9CE9
 638+ 9CE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CE9              ;
 640+ 9CE9              ;	19/10/22
 641+ 9CE9              ;
 642+ 9CE9              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CE9              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CE9
 645+ 9CE9 3A B9 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CEC FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CEE C9           	ret
 648+ 9CEF
 649+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CEF              ;
 651+ 9CEF              ;	24/7/22
 652+ 9CEF              ;
 653+ 9CEF              ;	Inc_CTRL_DESPLZ
 654+ 9CEF              ;
 655+ 9CEF              ;
 656+ 9CEF              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CEF
 658+ 9CEF 21 CC 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CF2 3A DE 8B     	ld a,(Vel_right)
 660+ 9CF5 A7           	and a
 661+ 9CF6 28 06        	jr z,1F
 662+ 9CF8 47           	ld b,a
 663+ 9CF9 34           3 inc (hl)
 664+ 9CFA 10 FD        	djnz 3B
 665+ 9CFC 18 01        	jr 2F
 666+ 9CFE 34           1 inc (hl)
 667+ 9CFF C9           2 ret
 668+ 9D00
 669+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D00              ;
 671+ 9D00              ;	5/2/23
 672+ 9D00              ;
 673+ 9D00              ;	Dec_CTRL_DESPLZ
 674+ 9D00              ;
 675+ 9D00              ;
 676+ 9D00              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D00
 678+ 9D00 21 CC 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D03 3A DD 8B     	ld a,(Vel_left)
 680+ 9D06 A7           	and a
 681+ 9D07 28 06        	jr z,1F
 682+ 9D09 47           	ld b,a
 683+ 9D0A 35           3 dec (hl)
 684+ 9D0B 10 FD        	djnz 3B
 685+ 9D0D 18 01        	jr 2F
 686+ 9D0F 35           1 dec (hl)
 687+ 9D10 C9           2 ret
 688+ 9D11
 689+ 9D11              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D11
 691+ 9D11 2A C8 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D14 01 1F 00     	ld bc,31
 693+ 9D17 A7           	and a
 694+ 9D18 ED 4A        	adc hl,bc
 695+ 9D1A 22 C8 8B     	ld (Posicion_actual),hl
 696+ 9D1D 21 C5 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D20 CB C6        	set 0,(hl)
 698+ 9D22 C9           	ret
 699+ 9D23
 700+ 9D23              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D23
 702+ 9D23 2A C8 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D26 01 1F 00     	ld bc,31
 704+ 9D29 A7           	and a
 705+ 9D2A ED 42        	sbc hl,bc
 706+ 9D2C 22 C8 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D2F 21 C5 8B     	ld hl,Ctrl_0
 708+ 9D32 CB CE        	set 1,(hl)
 709+ 9D34 C9           	ret
 710+ 9D35
 711+ 9D35              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D35
 713+ 9D35 24           Reaparece_abajo inc h
 714+ 9D36 01 E0 17     	ld bc,$17e0
 715+ 9D39 A7           	and a
 716+ 9D3A ED 4A        	adc hl,bc
 717+ 9D3C 22 C8 8B     	ld (Posicion_actual),hl
 718+ 9D3F 21 C5 8B     	ld hl,Ctrl_0
 719+ 9D42 CB D6        	set 2,(hl)
 720+ 9D44 C9           	ret
 721+ 9D45
 722+ 9D45              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D45
 724+ 9D45 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D48 A7           	and a
 726+ 9D49 ED 42        	sbc hl,bc
 727+ 9D4B 22 C8 8B     	ld (Posicion_actual),hl
 728+ 9D4E 21 C5 8B     	ld hl,Ctrl_0
 729+ 9D51 CB DE        	set 3,(hl)
 730+ 9D53 C9           	ret
 731+ 9D54
 732+ 9D54              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D54              ;
 734+ 9D54              ;	15/07/23
 735+ 9D54
 736+ 9D54              Reinicio
 737+ 9D54
 738+ 9D54              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D54
 740+ 9D54 AF           	xor a
 741+ 9D55 21 ED 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D58 CD 76 9D     	call Limpia_contenido_hl
 743+ 9D5B
 744+ 9D5B 21 C8 8B     	ld hl,Posicion_actual
 745+ 9D5E CD 76 9D     	call Limpia_contenido_hl
 746+ 9D61
 747+ 9D61 CD CA 92     	call Inicializa_Puntero_indice_mov
 748+ 9D64 CD 75 9E     	call Inicia_Puntero_mov
 749+ 9D67
 750+ 9D67 21 EF 8B     	ld hl,Incrementa_puntero
 751+ 9D6A 06 05        	ld b,5
 752+ 9D6C 77           1 ld (hl),a
 753+ 9D6D 23           	inc hl
 754+ 9D6E 10 FC        	djnz 1B
 755+ 9D70
 756+ 9D70 21 C4 8B     	ld hl,Ctrl_2
 757+ 9D73 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D75
 759+ 9D75 C9           	ret
 760+ 9D76
 761+ 9D76 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D77 23           	inc hl
 763+ 9D78 77           	ld (hl),a
 764+ 9D79 C9           	ret
 765+ 9D7A
 766+ 9D7A              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D7A              ;
 768+ 9D7A              ;	18/6/24
 769+ 9D7A              ;
 770+ 9D7A
 771+ 9D7A              Amadeus_a_izquierda
 772+ 9D7A
 773+ 9D7A              ;	Actualiza contador de movimientos.
 774+ 9D7A
 775+ 9D7A 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D7D 35           	dec (hl)
 777+ 9D7E 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D80
 779+ 9D80 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D83 2B           	dec hl
 781+ 9D84 2B           	dec hl
 782+ 9D85 2B           	dec hl
 783+ 9D86 2B           	dec hl
 784+ 9D87 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D8A
 786+ 9D8A 21 2D 8C     	ld hl,Ctrl_3
 787+ 9D8D CB EE        	set 5,(hl)
 788+ 9D8F
 789+ 9D8F C9           	ret
 790+ 9D90
 791+ 9D90 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D91 C9           	ret
 793+ 9D92
 794+ 9D92
 795+ 9D92              Amadeus_a_derecha
 796+ 9D92
 797+ 9D92              ;	Actualiza contador de movimientos.
 798+ 9D92
 799+ 9D92 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D95 34           	inc (hl)
 801+ 9D96 3E 7A        	ld a,$7a
 802+ 9D98 BE           	cp (hl)
 803+ 9D99 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D9B
 805+ 9D9B 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D9E 23           	inc hl
 807+ 9D9F 23           	inc hl
 808+ 9DA0 23           	inc hl
 809+ 9DA1 23           	inc hl
 810+ 9DA2 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DA5
 812+ 9DA5 21 2D 8C     	ld hl,Ctrl_3
 813+ 9DA8 CB EE        	set 5,(hl)
 814+ 9DAA C9           	ret
 815+ 9DAB
 816+ 9DAB 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DAC C9           	ret
# file closed: Direcciones.asm
2063  9DAD              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DAD              ; ----- ----- ----- ----- -----
   2+ 9DAD              ;
   3+ 9DAD              ;   28/12/23
   4+ 9DAD
   5+ 9DAD              Movimiento
   6+ 9DAD
   7+ 9DAD              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DAD
   9+ 9DAD 3A C4 8B         ld a,(Ctrl_2)
  10+ 9DB0 CB 57            bit 2,a
  11+ 9DB2 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DB4
  13+ 9DB4 2A EB 8B         ld hl,(Puntero_mov)
  14+ 9DB7 7E               ld a,(hl)
  15+ 9DB8
  16+ 9DB8              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DB8
  18+ 9DB8              Inicia_desplazamiento.
  19+ 9DB8
  20+ 9DB8              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DB8
  22+ 9DB8 CD AB 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DBB
  24+ 9DBB              ; Iniciamos (Repetimos_mov).
  25+ 9DBB
  26+ 9DBB 7E               ld a,(hl)
  27+ 9DBC E6 0F            and $0f
  28+ 9DBE 32 F1 8B         ld (Repetimos_desplazamiento),a
  29+ 9DC1 32 F2 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DC4
  31+ 9DC4              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DC4
  33+ 9DC4 23               inc hl
  34+ 9DC5 7E               ld a,(hl)
  35+ 9DC6 32 F4 8B         ld (Cola_de_desplazamiento),a
  36+ 9DC9 2B               dec hl
  37+ 9DCA
  38+ 9DCA 21 C4 8B         ld hl,Ctrl_2
  39+ 9DCD CB D6            set 2,(hl)
  40+ 9DCF
  41+ 9DCF              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DCF              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DCF
  44+ 9DCF              Desplazamiento_iniciado
  45+ 9DCF
  46+ 9DCF CD 7F 9E         call Aplica_desplazamiento
  47+ 9DD2
  48+ 9DD2              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DD2
  50+ 9DD2 3A 2D 8C         ld a,(Ctrl_3)
  51+ 9DD5 CB 4F            bit 1,a
  52+ 9DD7 C0               ret nz
  53+ 9DD8
  54+ 9DD8 21 F1 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DDB 35               dec (hl)
  56+ 9DDC C0               ret nz
  57+ 9DDD
  58+ 9DDD              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DDD              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DDD              ; Analiza (Cola_de_desplazamiento).
  61+ 9DDD
  62+ 9DDD 3A F4 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DE0 A7               and a
  64+ 9DE1 CC D4 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DE4 28 30            jr z,Reinicia_el_movimiento
  66+ 9DE6
  67+ 9DE6 FE FF            cp $ff
  68+ 9DE8 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DEA
  70+ 9DEA FE FE            cp $fe
  71+ 9DEC CC 59 9E         call z,Fijamos_bucle
  72+ 9DEF 28 25            jr z,Reinicia_el_movimiento
  73+ 9DF1
  74+ 9DF1 FE FD            cp $fd
  75+ 9DF3 20 11            jr nz,1F
  76+ 9DF5
  77+ 9DF5              ; ---
  78+ 9DF5              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DF5
  80+ 9DF5 3A C4 8B         ld a,(Ctrl_2)
  81+ 9DF8 CB 5F            bit 3,a
  82+ 9DFA 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DFC
  84+ 9DFC              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DFC
  86+ 9DFC 21 C4 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DFF CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E01
  89+ 9E01 CD 6A 9E         call Inicia_Repetimos_movimiento
  90+ 9E04 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E06              ; ---
  92+ 9E06
  93+ 9E06 FE 01        1 cp 1
  94+ 9E08 CA 43 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E0B
  96+ 9E0B 3D               dec a
  97+ 9E0C 32 F4 8B         ld (Cola_de_desplazamiento),a
  98+ 9E0F
  99+ 9E0F 3A F2 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E12 32 F1 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E15              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E15 C9               ret
 103+ 9E16
 104+ 9E16              Reinicia_el_movimiento
 105+ 9E16
 106+ 9E16 3A C4 8B         ld a,(Ctrl_2)
 107+ 9E19 CB 5F            bit 3,a
 108+ 9E1B 28 1B            jr z,2F
 109+ 9E1D
 110+ 9E1D              ; (Cola_de_desplazamiento)="254".
 111+ 9E1D
 112+ 9E1D 21 F3 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E20 35               dec (hl)
 114+ 9E21 20 15            jr nz,2F
 115+ 9E23
 116+ 9E23              ; Fin de las repeticiones del último movimiento.
 117+ 9E23
 118+ 9E23 21 C4 8B         ld hl,Ctrl_2
 119+ 9E26 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E28
 121+ 9E28 2A EB 8B         ld hl,(Puntero_mov)
 122+ 9E2B 23               inc hl
 123+ 9E2C 23               inc hl
 124+ 9E2D 23               inc hl
 125+ 9E2E 22 EB 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E31              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E31 7E               ld a,(hl)
 128+ 9E32 32 F4 8B         ld (Cola_de_desplazamiento),a
 129+ 9E35
 130+ 9E35 C3 DD 9D         jp Cola
 131+ 9E38
 132+ 9E38 CD 75 9E     2 call Inicia_Puntero_mov
 133+ 9E3B
 134+ 9E3B 21 C4 8B         ld hl,Ctrl_2
 135+ 9E3E CB 96            res 2,(hl)
 136+ 9E40
 137+ 9E40 C3 AD 9D         jp Movimiento
 138+ 9E43
 139+ 9E43              Siguiente_desplazamiento
 140+ 9E43
 141+ 9E43              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E43              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E43
 144+ 9E43 21 C4 8B         ld hl,Ctrl_2
 145+ 9E46 CB 96            res 2,(hl)
 146+ 9E48
 147+ 9E48 2A EB 8B         ld hl,(Puntero_mov)
 148+ 9E4B 23               inc hl
 149+ 9E4C 23               inc hl
 150+ 9E4D 22 EB 8B         ld (Puntero_mov),hl
 151+ 9E50
 152+ 9E50 7E               ld a,(hl)
 153+ 9E51 A7               and a
 154+ 9E52 CC D4 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E55 CA 16 9E         jp z,Reinicia_el_movimiento
 156+ 9E58
 157+ 9E58 C9               ret
 158+ 9E59
 159+ 9E59              ; Subrutinas -----------------------------------------
 160+ 9E59              ; ---------- --------- --------- ---------- ----------
 161+ 9E59              ;
 162+ 9E59              ;   24/07/23
 163+ 9E59              ;
 164+ 9E59              ;   Fijamos_bucle
 165+ 9E59              ;
 166+ 9E59              ;
 167+ 9E59
 168+ 9E59              Fijamos_bucle
 169+ 9E59
 170+ 9E59 3A EF 8B         ld a,(Incrementa_puntero)
 171+ 9E5C 3C               inc a
 172+ 9E5D 32 F0 8B         ld (Incrementa_puntero_backup),a
 173+ 9E60
 174+ 9E60 CD D4 9E         call Incrementa_Puntero_indice_mov
 175+ 9E63 2A E9 8B         ld hl,(Puntero_indice_mov)
 176+ 9E66 22 ED 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E69 C9               ret
 178+ 9E6A
 179+ 9E6A              ; ---------- --------- --------- ---------- ----------
 180+ 9E6A              ;
 181+ 9E6A              ;   07/7/23
 182+ 9E6A              ;
 183+ 9E6A              ;   Inicia_Repetimos_movimiento
 184+ 9E6A              ;
 185+ 9E6A              ;
 186+ 9E6A
 187+ 9E6A              Inicia_Repetimos_movimiento
 188+ 9E6A
 189+ 9E6A              ; Iniciamos (Repetimos_movimiento).
 190+ 9E6A
 191+ 9E6A DD 2A EB 8B      ld ix,(Puntero_mov)
 192+ 9E6E DD 7E 02         ld a,(ix+2)
 193+ 9E71 32 F3 8B         ld (Repetimos_movimiento),a
 194+ 9E74
 195+ 9E74 C9               ret
 196+ 9E75
 197+ 9E75              ; ---------- --------- --------- ---------- ----------
 198+ 9E75              ;
 199+ 9E75              ;   26/6/23
 200+ 9E75              ;
 201+ 9E75              ;   Inicia_Puntero_mov
 202+ 9E75              ;
 203+ 9E75              ;
 204+ 9E75
 205+ 9E75 2A E9 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E78 CD C9 90         call Extrae_address
 207+ 9E7B 22 EB 8B         ld (Puntero_mov),hl
 208+ 9E7E C9               ret
 209+ 9E7F
 210+ 9E7F              ; ---------- --------- --------- ---------- ----------
 211+ 9E7F              ;
 212+ 9E7F              ;   27/06/23
 213+ 9E7F              ;
 214+ 9E7F              ;   Aplica_movimiento.
 215+ 9E7F
 216+ 9E7F              Aplica_desplazamiento
 217+ 9E7F
 218+ 9E7F              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E7F
 220+ 9E7F 2A EB 8B         ld hl, (Puntero_mov)
 221+ 9E82
 222+ 9E82 7E               ld a,(hl)
 223+ 9E83 E6 F0            and $f0
 224+ 9E85 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E86
 226+ 9E86 CB 7E            bit 7,(hl)
 227+ 9E88 28 03            jr z,1F
 228+ 9E8A CD 61 9A         call Mov_up
 229+ 9E8D 2A EB 8B     1 ld hl, (Puntero_mov)
 230+ 9E90 CB 76            bit 6,(hl)
 231+ 9E92 28 03            jr z,2F
 232+ 9E94 CD 28 9A         call Mov_down
 233+ 9E97
 234+ 9E97              ; Se ha aplicado reinicio ???
 235+ 9E97              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E97
 237+ 9E97              ;    ld a,(Ctrl_3)
 238+ 9E97              ;    bit 1,a
 239+ 9E97              ;    ret nz
 240+ 9E97
 241+ 9E97 2A EB 8B     2 ld hl, (Puntero_mov)
 242+ 9E9A CB 6E            bit 5,(hl)
 243+ 9E9C 28 03            jr z,3F
 244+ 9E9E CD C7 9B         call Mov_left
 245+ 9EA1 2A EB 8B     3 ld hl, (Puntero_mov)
 246+ 9EA4 CB 66            bit 4,(hl)
 247+ 9EA6 C8               ret z
 248+ 9EA7 CD A4 9A         call Mov_right
 249+ 9EAA C9               ret
 250+ 9EAB
 251+ 9EAB              ; ---------- --------- --------- ---------- ----------
 252+ 9EAB              ;
 253+ 9EAB              ;   26/06/23
 254+ 9EAB              ;
 255+ 9EAB              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EAB
 257+ 9EAB              Ajusta_velocidad_desplazamiento
 258+ 9EAB
 259+ 9EAB              ; 1er byte de la cadena de movimiento.
 260+ 9EAB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EAB
 262+ 9EAB CD C9 9E         call Extrae_nibble_alto
 263+ 9EAE
 264+ 9EAE 32 DF 8B         ld (Vel_up),a
 265+ 9EB1 79               ld a,c
 266+ 9EB2 E6 0F            and $0f
 267+ 9EB4 32 E0 8B         ld (Vel_down),a
 268+ 9EB7
 269+ 9EB7              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EB7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EB7
 272+ 9EB7 23               inc hl
 273+ 9EB8 CD C9 9E         call Extrae_nibble_alto
 274+ 9EBB
 275+ 9EBB 32 DD 8B         ld (Vel_left),a
 276+ 9EBE 79               ld a,c
 277+ 9EBF E6 0F            and $0f
 278+ 9EC1 32 DE 8B         ld (Vel_right),a
 279+ 9EC4
 280+ 9EC4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EC4
 282+ 9EC4 23               inc hl
 283+ 9EC5 22 EB 8B         ld (Puntero_mov),hl
 284+ 9EC8 C9               ret
 285+ 9EC9
 286+ 9EC9 06 04        Extrae_nibble_alto ld b,4
 287+ 9ECB 7E               ld a,(hl)
 288+ 9ECC 4F               ld c,a
 289+ 9ECD E6 F0            and $f0
 290+ 9ECF CB 3F        1 srl a
 291+ 9ED1 10 FC            djnz 1B
 292+ 9ED3 C9               ret
 293+ 9ED4
 294+ 9ED4              ; ---------- --------- --------- ---------- ----------
 295+ 9ED4              ;
 296+ 9ED4              ;   5/7/23
 297+ 9ED4              ;
 298+ 9ED4              ;   Incrementa_Puntero_indice_mov
 299+ 9ED4
 300+ 9ED4              Incrementa_Puntero_indice_mov
 301+ 9ED4
 302+ 9ED4 21 EF 8B         ld hl,Incrementa_puntero
 303+ 9ED7 34               inc (hl)
 304+ 9ED8
 305+ 9ED8 2A E9 8B         ld hl,(Puntero_indice_mov)
 306+ 9EDB 01 02 00         ld bc,2
 307+ 9EDE A7               and a
 308+ 9EDF 09               add hl,bc
 309+ 9EE0 22 E9 8B         ld (Puntero_indice_mov),hl
 310+ 9EE3
 311+ 9EE3 7E               ld a,(hl)
 312+ 9EE4 A7               and a
 313+ 9EE5
 314+ 9EE5              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EE5
 316+ 9EE5              ;    jr z,$
 317+ 9EE5
 318+ 9EE5              ;! Reinicia el Patrón de movimiento.
 319+ 9EE5
 320+ 9EE5 CC EA 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EE8
 322+ 9EE8 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EE9
 324+ 9EE9 C9               ret
 325+ 9EEA
 326+ 9EEA              ; ---------- --------- --------- ---------- ----------
 327+ 9EEA              ;
 328+ 9EEA              ;   15/01/24
 329+ 9EEA              ;
 330+ 9EEA              ;   Inicializa_Puntero_indice_mov
 331+ 9EEA
 332+ 9EEA              Inicializa_Puntero_indice_mov_2
 333+ 9EEA
 334+ 9EEA              ; Existe etiqueta de bucle principal???
 335+ 9EEA
 336+ 9EEA 2A ED 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EED 24               inc h
 338+ 9EEE 25               dec h
 339+ 9EEF 28 05            jr z,2F
 340+ 9EF1
 341+ 9EF1 22 E9 8B         ld (Puntero_indice_mov),hl
 342+ 9EF4 18 14            jr 3F
 343+ 9EF6
 344+ 9EF6              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EF6
 346+ 9EF6 3A EF 8B     2 ld a,(Incrementa_puntero)
 347+ 9EF9 47               ld b,a
 348+ 9EFA
 349+ 9EFA 2A E9 8B         ld hl,(Puntero_indice_mov)
 350+ 9EFD 2B           1 dec hl
 351+ 9EFE 2B               dec hl
 352+ 9EFF 10 FC            djnz 1B
 353+ 9F01 22 E9 8B         ld (Puntero_indice_mov),hl
 354+ 9F04
 355+ 9F04 AF               xor a
 356+ 9F05 32 EF 8B         ld (Incrementa_puntero),a
 357+ 9F08 18 06            jr 4F
 358+ 9F0A
 359+ 9F0A 3A F0 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F0D 32 EF 8B         ld (Incrementa_puntero),a
 361+ 9F10 C9           4 ret
 362+ 9F11
 363+ 9F11              ; ----------------------------------------------------------------------
 364+ 9F11              ;
 365+ 9F11              ;   30/01/24
 366+ 9F11              ;
 367+ 9F11              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F11
 369+ 9F11 3A B8 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F14 CD 65 94         call Calcula_salto_en_BC
 371+ 9F17 21 E1 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F1A A7               and a
 373+ 9F1B ED 4A            adc hl,bc
 374+ 9F1D C9               ret
 375+ 9F1E
 376+ 9F1E              ; ----------------------------------------------------------------------
 377+ 9F1E              ;
 378+ 9F1E              ;   30/01/24
 379+ 9F1E              ;
 380+ 9F1E              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F1E              ;
 382+ 9F1E              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F1E
 384+ 9F1E 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F1F 23               inc hl
 386+ 9F20 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F21 69               ld l,c
 388+ 9F22 60               ld h,b
 389+ 9F23 22 C1 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F26 C9               ret
 391+ 9F27
# file closed: Movimiento.asm
2064  9F27              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F27              ; --------------------------------------------------------------------------------------
   2+ 9F27              ;
   3+ 9F27              ;   25/10/24
   4+ 9F27              ;
   5+ 9F27
   6+ 9F27              Pinta_disparos_Entidades
   7+ 9F27
   8+ 9F27 ED 73 05 8C      ld (Stack),sp
   9+ 9F2B ED 7B 17 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F2F
  11+ 9F2F 3E 02            ld a,2
  12+ 9F31 08               ex af,af
  13+ 9F32
  14+ 9F32 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F34              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F34              ;                                     _ No encontraría "0".
  17+ 9F34 FD E1        4 pop iy
  18+ 9F36 D1               pop de                          ; 1er .db IYL
  19+ 9F37              ;                                   ; 2º  .db IYH
  20+ 9F37              ;                                   ; 3er .db E.
  21+ 9F37              ;   Album vacío ???
  22+ 9F37
  23+ 9F37 FD 7D            ld a,iyl
  24+ 9F39 FD 84            add iyh
  25+ 9F3B 83               add e
  26+ 9F3C 28 1F            jr z,1F
  27+ 9F3E
  28+ 9F3E              ;   Imprime album, (contiene datos).
  29+ 9F3E
  30+ 9F3E 3B               dec sp
  31+ 9F3F
  32+ 9F3F E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F40
  34+ 9F40              ; Imprime el 1er scanline del disparo.
  35+ 9F40
  36+ 9F40 FD 7D            ld a,iyl
  37+ 9F42 AE               xor (hl)
  38+ 9F43 77               ld (hl),a
  39+ 9F44
  40+ 9F44 2C               inc l
  41+ 9F45
  42+ 9F45 FD 7C            ld a,iyh
  43+ 9F47 AE               xor (hl)
  44+ 9F48 77               ld (hl),a
  45+ 9F49
  46+ 9F49 2C               inc l
  47+ 9F4A
  48+ 9F4A 7B               ld a,e
  49+ 9F4B AE               xor (hl)
  50+ 9F4C 77               ld (hl),a
  51+ 9F4D
  52+ 9F4D              ; Imprime el 2º scanline del disparo.
  53+ 9F4D
  54+ 9F4D E1               pop hl
  55+ 9F4E
  56+ 9F4E FD 7D            ld a,iyl
  57+ 9F50 AE               xor (hl)
  58+ 9F51 77               ld (hl),a
  59+ 9F52
  60+ 9F52 2C               inc l
  61+ 9F53
  62+ 9F53 FD 7C            ld a,iyh
  63+ 9F55 AE               xor (hl)
  64+ 9F56 77               ld (hl),a
  65+ 9F57
  66+ 9F57 2C               inc l
  67+ 9F58
  68+ 9F58 7B               ld a,e
  69+ 9F59 AE               xor (hl)
  70+ 9F5A 77               ld (hl),a
  71+ 9F5B
  72+ 9F5B 10 D7            djnz 4B
  73+ 9F5D
  74+ 9F5D 08           1 ex af,af
  75+ 9F5E 3D               dec a
  76+ 9F5F 20 05            jr nz,2F
  77+ 9F61
  78+ 9F61 ED 7B 05 8C      ld sp,(Stack)
  79+ 9F65 C9               ret
  80+ 9F66
  81+ 9F66 ED 7B 15 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F6A 08               ex af,af
  83+ 9F6B 18 C5            jr 3B
  84+ 9F6D
  85+ 9F6D              ; --------------------------------------------------------------------------------------
  86+ 9F6D              ;
  87+ 9F6D              ;   30/10/24
  88+ 9F6D              ;
  89+ 9F6D
  90+ 9F6D              Motor_de_disparos_entidades
  91+ 9F6D
  92+ 9F6D 3A 1D 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F70 FE 07            cp 7
  94+ 9F72 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F73
  96+ 9F73 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F75 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F78
  99+ 9F78 CD C9 90     1 call Extrae_address
 100+ 9F7B 1C               inc e
 101+ 9F7C 1C               inc e
 102+ 9F7D ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F81
 104+ 9F81               ; Caja vacía ???
 105+ 9F81
 106+ 9F81 2D               dec l
 107+ 9F82 7E               ld a,(hl)
 108+ 9F83 A7               and a
 109+ 9F84 28 3D            jr z,3F                                                              ; Caja vacía.
 110+ 9F86
 111+ 9F86              ; --- Trabajamos con caja:
 112+ 9F86
 113+ 9F86 2C               inc l
 114+ 9F87
 115+ 9F87              ; --- Existe posibilidad de impacto ???
 116+ 9F87
 117+ 9F87 CB 46            bit 0,(hl)
 118+ 9F89 C4 C7 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F8C
 120+ 9F8C CD 36 A0         call Rota_disparo_si_procede
 121+ 9F8F
 122+ 9F8F              ; ------------------------------------------------------------
 123+ 9F8F
 124+ 9F8F 2D               dec l
 125+ 9F90 2D               dec l
 126+ 9F91
 127+ 9F91 CD C9 90         call Extrae_address
 128+ 9F94
 129+ 9F94              ;   (Puntero_de_impresion) del disparo en HL
 130+ 9F94              ;   Hay que modificar el puntero de impresión ??? ---------------------
 131+ 9F94
 132+ 9F94 3A 2F 8C         ld a,(Ctrl_5)
 133+ 9F97 CB 57            bit 2,a
 134+ 9F99 28 09            jr z,4F
 135+ 9F9B
 136+ 9F9B CB 97            res 2,a
 137+ 9F9D 32 2F 8C         ld (Ctrl_5),a
 138+ 9FA0 2C               inc l
 139+ 9FA1 2C               inc l
 140+ 9FA2 18 0C            jr 5F
 141+ 9FA4
 142+ 9FA4 CB 5F        4 bit 3,a
 143+ 9FA6 28 08            jr z,5F
 144+ 9FA8
 145+ 9FA8 CB 9F            res 3,a
 146+ 9FAA 32 2F 8C         ld (Ctrl_5),a
 147+ 9FAD 2D               dec l
 148+ 9FAE 2D               dec l
 149+ 9FAF 2D               dec l
 150+ 9FB0
 151+ 9FB0              ; ---------------------------------------------------------------------
 152+ 9FB0
 153+ 9FB0              ;! Velocidad del disparo de entidades.
 154+ 9FB0
 155+ 9FB0 CD E2 99     5 call NextScan
 156+ 9FB3 CD E2 99         call NextScan
 157+ 9FB6
 158+ 9FB6              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 159+ 9FB6
 160+ 9FB6 CD 13 A0         call Fin_de_disparo_de_entidad
 161+ 9FB9
 162+ 9FB9 EB               ex de,hl
 163+ 9FBA
 164+ 9FBA 73               ld (hl),e
 165+ 9FBB 23               inc hl
 166+ 9FBC 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 167+ 9FBD
 168+ 9FBD 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 169+ 9FC0 18 02            jr 2F
 170+ 9FC2
 171+ 9FC2 C9               ret
 172+ 9FC3
 173+ 9FC3 EB           3 ex de,hl
 174+ 9FC4 10 B2        2 djnz 1B
 175+ 9FC6
 176+ 9FC6 C9               ret
 177+ 9FC7
 178+ 9FC7              ; ------------- ------------- ------------
 179+ 9FC7              ;
 180+ 9FC7              ;   1/11/24
 181+ 9FC7
 182+ 9FC7              Comprueba_impacto_con_Amadeus
 183+ 9FC7
 184+ 9FC7              ;   El disparo se encuentra en zona de Amadeus.
 185+ 9FC7              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 186+ 9FC7
 187+ 9FC7              ;   Modificamos registros, así que guardamos ...
 188+ 9FC7
 189+ 9FC7 C5               push bc
 190+ 9FC8 E5               push hl
 191+ 9FC9 D5               push de
 192+ 9FCA
 193+ 9FCA 2D               dec l
 194+ 9FCB 2D               dec l
 195+ 9FCC
 196+ 9FCC CD C9 90         call Extrae_address
 197+ 9FCF
 198+ 9FCF 3A 6E 89         ld a,(CX_Amadeus)
 199+ 9FD2 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 200+ 9FD3
 201+ 9FD3 7D               ld a,l
 202+ 9FD4 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 203+ 9FD6
 204+ 9FD6 06 03            ld b,3
 205+ 9FD8
 206+ 9FD8 B9           1 cp c
 207+ 9FD9 28 14            jr z,Coincidencia
 208+ 9FDB 0C               inc c
 209+ 9FDC 10 FA            djnz 1B
 210+ 9FDE
 211+ 9FDE 0D               dec c
 212+ 9FDF 0D               dec c
 213+ 9FE0 0D               dec c
 214+ 9FE1
 215+ 9FE1 3C               inc a
 216+ 9FE2 B9               cp c
 217+ 9FE3 28 0A            jr z,Coincidencia
 218+ 9FE5
 219+ 9FE5 3C               inc a
 220+ 9FE6 B9               cp c
 221+ 9FE7 28 06            jr z,Coincidencia
 222+ 9FE9
 223+ 9FE9 D1           2 pop de
 224+ 9FEA E1               pop hl
 225+ 9FEB C1               pop bc
 226+ 9FEC
 227+ 9FEC              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 228+ 9FEC
 229+ 9FEC CB 86            res 0,(hl)
 230+ 9FEE
 231+ 9FEE C9               ret
 232+ 9FEF
 233+ 9FEF              Coincidencia
 234+ 9FEF
 235+ 9FEF              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 236+ 9FEF              ;   Existe posibilidad de impacto.
 237+ 9FEF              ;   Vamos a averiguarlo ...
 238+ 9FEF
 239+ 9FEF 1D               dec e
 240+ 9FF0 1D               dec e
 241+ 9FF1 1D               dec e
 242+ 9FF2
 243+ 9FF2              ; DE en Puntero_objeto del disparo.
 244+ 9FF2              ; HL en Puntero_de_impresión del disparo.
 245+ 9FF2
 246+ 9FF2              ; Comparador:
 247+ 9FF2
 248+ 9FF2 06 03            ld b,3
 249+ 9FF4
 250+ 9FF4 1A           3 ld a,(de)
 251+ 9FF5 4F               ld c,a
 252+ 9FF6 A6               and (hl)
 253+ 9FF7 B9               cp c
 254+ 9FF8 20 06            jr nz,Amadeus_impactado
 255+ 9FFA
 256+ 9FFA 2C               inc l
 257+ 9FFB 1C               inc e
 258+ 9FFC
 259+ 9FFC 10 F6            djnz 3B
 260+ 9FFE
 261+ 9FFE 18 E9            jr 2B
 262+ A000
 263+ A000              Amadeus_impactado
 264+ A000
 265+ A000 3A 2F 8C         ld a,(Ctrl_5)
 266+ A003 CB E7            set 4,a
 267+ A005 32 2F 8C         ld (Ctrl_5),a
 268+ A008
 269+ A008              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 270+ A008
 271+ A008 11 60 88         ld de,Indice_Explosion_Amadeus
 272+ A00B 21 74 89         ld hl,Pamm_Amadeus
 273+ A00E
 274+ A00E 73               ld (hl),e
 275+ A00F 23               inc hl
 276+ A010 72               ld (hl),d
 277+ A011
 278+ A011 18 D6            jr 2B
 279+ A013
 280+ A013              ; ------------- ------------- ------------
 281+ A013              ;
 282+ A013              ;   31/10/24
 283+ A013
 284+ A013              Fin_de_disparo_de_entidad
 285+ A013
 286+ A013              ; Estamos en zona de Amadeus ??
 287+ A013
 288+ A013 7C               ld a,h
 289+ A014 FE 54            cp $54
 290+ A016 38 0D            jr c,1F
 291+ A018
 292+ A018 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 293+ A019
 294+ A019 5D               ld e,l
 295+ A01A 54               ld d,h
 296+ A01B
 297+ A01B 21 E0 57         ld hl,$57e0
 298+ A01E ED 52            sbc hl,de
 299+ A020
 300+ A020 38 6F            jr c,Elimina_disparo_entidad
 301+ A022
 302+ A022 6B               ld l,e
 303+ A023 62               ld h,d
 304+ A024
 305+ A024 D1               pop de
 306+ A025
 307+ A025 7C           1 ld a,h
 308+ A026 FE 50            cp $50
 309+ A028 D8               ret c
 310+ A029
 311+ A029 7D               ld a,l
 312+ A02A FE C0            cp $c0
 313+ A02C D8               ret c
 314+ A02D
 315+ A02D              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 316+ A02D              ; Así podremos comprobar si hay colisión más adelante.
 317+ A02D
 318+ A02D 1C               inc e
 319+ A02E 1C               inc e
 320+ A02F
 321+ A02F EB               ex de,hl
 322+ A030 CB C6            set 0,(hl)
 323+ A032 EB               ex de,hl
 324+ A033
 325+ A033 1D               dec e
 326+ A034 1D               dec e
 327+ A035
 328+ A035 C9               ret
 329+ A036
 330+ A036              ; ----------------------------------------------------------
 331+ A036              ;
 332+ A036              ;   08/10/24
 333+ A036
 334+ A036              ;   Estructura de un disparo de entidades.
 335+ A036
 336+ A036              ;   Disparo_1 defw 0								; Puntero objeto.
 337+ A036              ; 	defw 0											; Puntero de impresión.
 338+ A036              ;	defw 0											; Control.
 339+ A036
 340+ A036              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 341+ A036              ;   _de la entidad en el momento de disparar.
 342+ A036
 343+ A036              ;   El byte alto muestra la siguiente información:
 344+ A036              ;
 345+ A036              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 346+ A036              ;                        _antes de desplazarse a derecha/izquierda.
 347+ A036              ;
 348+ A036              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 349+ A036              ;
 350+ A036              ;                        10xx ..... Izquierda.
 351+ A036              ;                        01xx ..... Derecha.
 352+ A036              ;                        00xx ..... Recto.
 353+ A036
 354+ A036              Rota_disparo_si_procede
 355+ A036
 356+ A036              ;   Nos situamos en el byte alto de (Control).
 357+ A036
 358+ A036 CB 76            bit 6,(hl)
 359+ A038 20 2D            jr nz,Rota_a_derecha
 360+ A03A CB 7E            bit 7,(hl)
 361+ A03C C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 362+ A03D
 363+ A03D              Rota_a_izq
 364+ A03D
 365+ A03D E5               push hl
 366+ A03E
 367+ A03E 7D               ld a,l
 368+ A03F D6 05            sub 5
 369+ A041 6F               ld l,a
 370+ A042
 371+ A042 E5               push hl
 372+ A043 FD E1            pop iy
 373+ A045
 374+ A045 A7               and a
 375+ A046
 376+ A046 FD CB 02 16      rl (iy+02)
 377+ A04A FD CB 01 16      rl (iy+01)
 378+ A04E FD CB 00 16      rl (iy+00)
 379+ A052
 380+ A052 30 3B            jr nc,Exit
 381+ A054
 382+ A054              ; Desplazamiento completo hasta Carry.
 383+ A054              ; Modificamos datos y decremento (Puntero_de_impresión).
 384+ A054
 385+ A054 FD 36 02 03      ld (iy+02),$03
 386+ A058 FD 36 01 00      ld (iy+01),$00
 387+ A05C FD 36 00 00      ld (iy+00),$00
 388+ A060
 389+ A060 21 2F 8C         ld hl,Ctrl_5
 390+ A063 CB DE            set 3,(hl)
 391+ A065
 392+ A065 18 28            jr Exit
 393+ A067
 394+ A067              Rota_a_derecha
 395+ A067
 396+ A067 E5               push hl
 397+ A068
 398+ A068 7D               ld a,l
 399+ A069 D6 05            sub 5
 400+ A06B 6F               ld l,a
 401+ A06C
 402+ A06C E5               push hl
 403+ A06D FD E1            pop iy
 404+ A06F
 405+ A06F A7               and a
 406+ A070
 407+ A070 FD CB 00 1E      rr (iy+00)
 408+ A074 FD CB 01 1E      rr (iy+01)
 409+ A078 FD CB 02 1E      rr (iy+02)
 410+ A07C
 411+ A07C 30 11            jr nc,Exit
 412+ A07E
 413+ A07E              ; Desplazamiento completo hasta Carry.
 414+ A07E              ; Modificamos datos e incremento (Puntero_de_impresión).
 415+ A07E
 416+ A07E FD 36 00 01      ld (iy+00),$01
 417+ A082 FD 36 01 80      ld (iy+01),$80
 418+ A086 FD 36 02 00      ld (iy+02),$00
 419+ A08A
 420+ A08A 21 2F 8C         ld hl,Ctrl_5
 421+ A08D CB D6            set 2,(hl)
 422+ A08F
 423+ A08F E1           Exit pop hl
 424+ A090 C9               ret
 425+ A091
 426+ A091              ; ------------ ----------- ------------
 427+ A091              ;
 428+ A091              ;   25/9/24
 429+ A091
 430+ A091              Elimina_disparo_entidad
 431+ A091
 432+ A091 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 433+ A094 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 434+ A095
 435+ A095 E1               pop hl
 436+ A096 E5               push hl
 437+ A097
 438+ A097 2C               inc l
 439+ A098 2C               inc l
 440+ A099
 441+ A099 CD A1 A0         call Borra_6_bytes
 442+ A09C
 443+ A09C D1               pop de
 444+ A09D
 445+ A09D 21 00 00         ld hl,0
 446+ A0A0
 447+ A0A0 C9               ret
 448+ A0A1
 449+ A0A1              ; ----- ----- ----- ----- -----
 450+ A0A1
 451+ A0A1              Borra_6_bytes
 452+ A0A1
 453+ A0A1 16 06            ld d,6                                                    ; Contador
 454+ A0A3 AF               xor a                                                     ; Borrador
 455+ A0A4 77           1 ld (hl),a
 456+ A0A5 2D               dec l
 457+ A0A6 15               dec d
 458+ A0A7 20 FB            jr nz,1B
 459+ A0A9
 460+ A0A9 C9               ret
 461+ A0AA
 462+ A0AA              ; --------------------------------------------------------------------------------------
 463+ A0AA              ;
 464+ A0AA              ;   12/10/24
 465+ A0AA              ;
 466+ A0AA
 467+ A0AA              Genera_datos_de_impresion_disparos_Entidades
 468+ A0AA
 469+ A0AA 3E 07            ld a,7
 470+ A0AC 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 471+ A0AD
 472+ A0AD              ; ---------------
 473+ A0AD
 474+ A0AD              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 475+ A0AD
 476+ A0AD 21 23 89          ld hl,Indice_de_disparos_entidades
 477+ A0B0
 478+ A0B0 CD C9 90     1 call Extrae_address
 479+ A0B3
 480+ A0B3 13               inc de
 481+ A0B4 13               inc de
 482+ A0B5
 483+ A0B5 ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 484+ A0B9
 485+ A0B9 2D               dec l
 486+ A0BA 7E               ld a,(hl)
 487+ A0BB A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 488+ A0BC 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 489+ A0BE
 490+ A0BE              ; ----- ----- ----- -----
 491+ A0BE
 492+ A0BE 2D               dec l
 493+ A0BF CD C9 90         call Extrae_address
 494+ A0C2 E5               push hl
 495+ A0C3
 496+ A0C3 1D               dec e
 497+ A0C4
 498+ A0C4 EB               ex de,hl
 499+ A0C5
 500+ A0C5 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 501+ A0C6 2D               dec l
 502+ A0C7 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 503+ A0C8 2D               dec l
 504+ A0C9 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 505+ A0CA
 506+ A0CA E1               pop hl                                                    ;? Puntero de impresión en HL.
 507+ A0CB
 508+ A0CB              Genera_scanlines_de_los_disparos_de_entidades.
 509+ A0CB
 510+ A0CB FD 2A 19 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 511+ A0CF FD 73 00         ld (iy+0),e
 512+ A0D2 FD 70 01         ld (iy+1),b
 513+ A0D5 FD 71 02         ld (iy+2),c
 514+ A0D8
 515+ A0D8 FD 75 03         ld (iy+3),l
 516+ A0DB FD 74 04         ld (iy+4),h
 517+ A0DE
 518+ A0DE CD E2 99         call NextScan
 519+ A0E1
 520+ A0E1 FD 75 05         ld (iy+5),l
 521+ A0E4 FD 74 06         ld (iy+6),h
 522+ A0E7
 523+ A0E7 FD E5            push iy
 524+ A0E9 E1               pop hl
 525+ A0EA
 526+ A0EA 3E 07            ld a,7
 527+ A0EC 85               add l
 528+ A0ED 6F               ld l,a
 529+ A0EE
 530+ A0EE 22 19 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 531+ A0F1
 532+ A0F1              ; ----- ----- ----- -----
 533+ A0F1
 534+ A0F1              Situa_en_siguiente_caja
 535+ A0F1
 536+ A0F1 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 537+ A0F2 3D               dec a
 538+ A0F3 C8               ret z
 539+ A0F4
 540+ A0F4 08               ex af,af
 541+ A0F5 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 542+ A0F8 18 B6            jr 1B
 543+ A0FA
 544+ A0FA              ; --------------------------------------------------------------------------------------
 545+ A0FA              ;
 546+ A0FA              ;   12/10/24
 547+ A0FA              ;
 548+ A0FA
 549+ A0FA              Genera_disparo_de_entidad_maldosa
 550+ A0FA
 551+ A0FA              ;   Estructura de un disparo de entidades.
 552+ A0FA
 553+ A0FA              ;   Disparo_1 defw 0								; Puntero objeto.
 554+ A0FA              ; 	defw 0											; Puntero de impresión.
 555+ A0FA              ;	defw 0											; Control.
 556+ A0FA
 557+ A0FA              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 558+ A0FA              ;   _de la entidad en el momento de disparar.
 559+ A0FA
 560+ A0FA              ;   El byte de control muestra la siguiente información:
 561+ A0FA
 562+ A0FA              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 563+ A0FA              ;
 564+ A0FA              ;                        10xx ..... Izquierda.
 565+ A0FA              ;                        01xx ..... Derecha.
 566+ A0FA              ;                        00xx ..... Recto.
 567+ A0FA
 568+ A0FA              ;*  Exclusiones.
 569+ A0FA
 570+ A0FA              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 571+ A0FA              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 572+ A0FA
 573+ A0FA 3A 1D 8C         ld a,(Numero_de_disparos_de_entidades)
 574+ A0FD A7               and a
 575+ A0FE C8               ret z
 576+ A0FF
 577+ A0FF 3A BA 8B         ld a,(Coordenada_y)
 578+ A102 A7               and a
 579+ A103 C8               ret z
 580+ A104
 581+ A104 3D               dec a
 582+ A105 C8               ret z
 583+ A106
 584+ A106 FE 10            cp 16
 585+ A108 D0               ret nc
 586+ A109
 587+ A109              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 588+ A109              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 589+ A109              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 590+ A109
 591+ A109 21 1F 8C         ld hl,Permiso_de_disparo_Entidades
 592+ A10C 35               dec (hl)                                            ; No más disparos en este FRAME.
 593+ A10D
 594+ A10D              ;   Decrementa el numero de disparos de entidades.
 595+ A10D
 596+ A10D 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 597+ A110 35               dec (hl)
 598+ A111
 599+ A111 21 23 89         ld hl,Indice_de_disparos_entidades
 600+ A114
 601+ A114 CD C9 90     1 call Extrae_address
 602+ A117
 603+ A117 13               inc de
 604+ A118 13               inc de
 605+ A119
 606+ A119 ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 607+ A11D
 608+ A11D              ;   Comprobamos si la caja está vacía.
 609+ A11D
 610+ A11D 2D               dec l
 611+ A11E 7E               ld a,(hl)
 612+ A11F A7               and a
 613+ A120 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 614+ A122 2C               inc l
 615+ A123
 616+ A123              ;   Caja vacía, vamos a generar un disparo.
 617+ A123              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 618+ A123
 619+ A123 CD 44 A1         call Genera_byte_inclinacion
 620+ A126
 621+ A126 7E               ld a,(hl)
 622+ A127 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 623+ A128
 624+ A128 2D               dec l
 625+ A129
 626+ A129 CD 60 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 627+ A12C
 628+ A12C 70               ld (hl),b
 629+ A12D 2D               dec l
 630+ A12E 71               ld (hl),c
 631+ A12F
 632+ A12F 2D               dec l
 633+ A130
 634+ A130              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 635+ A130
 636+ A130 FD 7E 02         ld a,(iy+02)
 637+ A133 77               ld (hl),a
 638+ A134 2D               dec l
 639+ A135
 640+ A135 FD 7E 01         ld a,(iy+01)
 641+ A138 77               ld (hl),a
 642+ A139 2D               dec l
 643+ A13A
 644+ A13A FD 7E 00         ld a,(iy+00)
 645+ A13D 77               ld (hl),a
 646+ A13E
 647+ A13E C9               ret
 648+ A13F
 649+ A13F              ;   --- --- ---
 650+ A13F
 651+ A13F              Situa_en_siguiente_disparo
 652+ A13F
 653+ A13F 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 654+ A142 18 D0            jr 1B
 655+ A144
 656+ A144              ; --------------------------------------------------------------------------------------
 657+ A144              ;
 658+ A144              ;   09/10/24
 659+ A144              ;
 660+ A144
 661+ A144              Genera_byte_inclinacion
 662+ A144
 663+ A144              ; Determina tendencia del disparo.
 664+ A144
 665+ A144 3A 6E 89         ld a,(CX_Amadeus)
 666+ A147 47               ld b,a
 667+ A148 3A B9 8B         ld a,(Coordenada_X)
 668+ A14B 90               sub b
 669+ A14C 38 07            jr c,Disparo_a_derecha
 670+ A14E
 671+ A14E FE 06        Disparo_a_izquierda cp 6
 672+ A150
 673+ A150 D8               ret c
 674+ A151 C8               ret z
 675+ A152
 676+ A152 CB FE            set 7,(hl)
 677+ A154 C9               ret
 678+ A155
 679+ A155 47           Disparo_a_derecha ld b,a
 680+ A156 3E FF            ld a,$ff
 681+ A158 90               sub b
 682+ A159
 683+ A159 FE 05            cp 5
 684+ A15B
 685+ A15B D8               ret c
 686+ A15C C8               ret z
 687+ A15D
 688+ A15D CB F6            set 6,(hl)
 689+ A15F C9               ret
 690+ A160
 691+ A160              ; --------------------------------------------------------------------------------------
 692+ A160              ;
 693+ A160              ;   09/10/24
 694+ A160              ;
 695+ A160
 696+ A160              Modifica_puntero_de_impresion
 697+ A160
 698+ A160              ;   Puntero de impresión del disparo en BC.
 699+ A160
 700+ A160 E5               push hl
 701+ A161
 702+ A161 2A 32 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 703+ A164 CD E2 99         call NextScan
 704+ A167
 705+ A167 4D               ld c,l
 706+ A168 44               ld b,h
 707+ A169
 708+ A169 E1               pop hl
 709+ A16A
 710+ A16A 08               ex af,af
 711+ A16B CB 77            bit 6,a
 712+ A16D 28 06            jr z,1F
 713+ A16F
 714+ A16F FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 715+ A173 0C               inc c
 716+ A174 C9               ret
 717+ A175
 718+ A175 CB 7F        1 bit 7,a
 719+ A177 28 F6            jr z,2B
 720+ A179
 721+ A179 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 722+ A17D 0D               dec c
 723+ A17E
 724+ A17E C9               ret
 725+ A17F
 726+ A17F              ; --------------------------------------------------------------------------------------
 727+ A17F              ;
 728+ A17F              ;   31/08/24
 729+ A17F              ;
 730+ A17F
 731+ A17F              Compara_con_coordenadas_de_disparo
 732+ A17F
 733+ A17F 3A BA 8B         ld a,(Coordenada_y)
 734+ A182 47               ld b,a
 735+ A183 3A 37 8C         ld a,(Coordenadas_disparo_certero)
 736+ A186 90               sub b
 737+ A187
 738+ A187              ; A = "0" ok
 739+ A187              ; A = "1" ok
 740+ A187
 741+ A187 28 08            jr z,Comprueba_coordenada_X
 742+ A189 3D               dec a
 743+ A18A 28 05            jr z,Comprueba_coordenada_X
 744+ A18C
 745+ A18C              ; A = "$ff" ok
 746+ A18C
 747+ A18C FE FE            cp $fe
 748+ A18E 28 01            jr z,Comprueba_coordenada_X
 749+ A190
 750+ A190 C9               ret
 751+ A191
 752+ A191              Comprueba_coordenada_X
 753+ A191
 754+ A191 3A B9 8B         ld a,(Coordenada_X)
 755+ A194 47               ld b,a
 756+ A195 21 38 8C         ld hl,Coordenadas_disparo_certero+1
 757+ A198 7E               ld a,(hl)
 758+ A199 90               sub b
 759+ A19A
 760+ A19A              ; A = "0" ok
 761+ A19A              ; A = "1" ok
 762+ A19A
 763+ A19A 28 09            jr z,Activa_Impacto_en_entidad
 764+ A19C 3D               dec a
 765+ A19D 28 06            jr z,Activa_Impacto_en_entidad
 766+ A19F
 767+ A19F              ; A = "2" ok
 768+ A19F
 769+ A19F 3D               dec a
 770+ A1A0 28 03            jr z,Activa_Impacto_en_entidad
 771+ A1A2
 772+ A1A2              ; A = "$ff"
 773+ A1A2
 774+ A1A2 FE FD            cp $fd
 775+ A1A4 C0               ret nz
 776+ A1A5
 777+ A1A5              Activa_Impacto_en_entidad
 778+ A1A5
 779+ A1A5              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 780+ A1A5
 781+ A1A5 3E 02            ld a,2
 782+ A1A7 32 BC 8B         ld (Impacto),a
 783+ A1AA
 784+ A1AA              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 785+ A1AA
 786+ A1AA 11 C0 87         ld de,Indice_Explosion_entidades
 787+ A1AD 21 BF 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 788+ A1B0
 789+ A1B0 73               ld (hl),e
 790+ A1B1 23               inc hl
 791+ A1B2 72               ld (hl),d
 792+ A1B3
 793+ A1B3              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 794+ A1B3
 795+ A1B3 21 34 8C         ld hl,Impacto2
 796+ A1B6 CB 9E            res 3,(hl)
 797+ A1B8
 798+ A1B8 C9               ret
 799+ A1B9
 800+ A1B9              ; --------------------------------------------------------------------------------------
 801+ A1B9              ;
 802+ A1B9              ;   13/10/24
 803+ A1B9              ;
 804+ A1B9
 805+ A1B9              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 806+ A1B9
 807+ A1B9              Limpia_album_de_pintado_disparos_Amadeus
 808+ A1B9
 809+ A1B9 2A 11 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 810+ A1BC 06 06            ld b,6
 811+ A1BE AF               xor a
 812+ A1BF 77           1 ld (hl),a
 813+ A1C0 2C               inc l
 814+ A1C1 10 FC            djnz 1B
 815+ A1C3
 816+ A1C3 C9               ret
 817+ A1C4
 818+ A1C4              ; --------------------------------------------------------------------------------------
 819+ A1C4              ;
 820+ A1C4              ;   29/09/24
 821+ A1C4              ;
 822+ A1C4
 823+ A1C4              Calcula_bytes_pintado_disparos
 824+ A1C4
 825+ A1C4 2A 15 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 826+ A1C7 45               ld b,l
 827+ A1C8 2A 19 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 828+ A1CB 7D               ld a,l
 829+ A1CC
 830+ A1CC 90               sub b
 831+ A1CD 32 1B 8C         ld (Num_de_bytes_album_de_disparos),a
 832+ A1D0
 833+ A1D0 C9               ret
 834+ A1D1
 835+ A1D1              ; --------------------------------------------------------------------------------------
 836+ A1D1              ;
 837+ A1D1              ;   26/10/24
 838+ A1D1              ;
 839+ A1D1              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 840+ A1D1              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 841+ A1D1              ;   _disparos que el álbum del FRAME actual).
 842+ A1D1
 843+ A1D1              Limpia_album_de_pintado_disparos_entidades
 844+ A1D1
 845+ A1D1 21 1C 8C         ld hl,Num_de_bytes_album_de_disparos+1
 846+ A1D4 7E               ld a,(hl)
 847+ A1D5 2D               dec l
 848+ A1D6 46               ld b,(hl)
 849+ A1D7 90               sub b
 850+ A1D8
 851+ A1D8 D8               ret c
 852+ A1D9 C8               ret z
 853+ A1DA
 854+ A1DA F5               push af
 855+ A1DB 80               add b
 856+ A1DC 77               ld (hl),a
 857+ A1DD F1               pop af
 858+ A1DE
 859+ A1DE              ; Clean.
 860+ A1DE
 861+ A1DE 47           2 ld b,a
 862+ A1DF AF               xor a
 863+ A1E0 2A 19 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 864+ A1E3 77           1 ld (hl),a
 865+ A1E4 23               inc hl
 866+ A1E5 10 FC            djnz 1B
 867+ A1E7
 868+ A1E7 C9               ret
 869+ A1E8
 870+ A1E8              ; --------------------------------------------------------------------------------------
 871+ A1E8              ;
 872+ A1E8              ;   29/09/24
 873+ A1E8              ;
 874+ A1E8
 875+ A1E8              Motor_Disparos_Amadeus
 876+ A1E8
 877+ A1E8 21 20 89         ld hl,Disparo_Amad+1
 878+ A1EB
 879+ A1EB 34               inc (hl)
 880+ A1EC 35               dec (hl)
 881+ A1ED
 882+ A1ED C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 883+ A1EE
 884+ A1EE              ;   Esta caja contiene un disparo.
 885+ A1EE
 886+ A1EE CD F5 A1         call Consulta_Impacto
 887+ A1F1 CC 0E A2         call z,Mueve_disparo_Amadeus
 888+ A1F4
 889+ A1F4 C9               ret
 890+ A1F5
 891+ A1F5              ; ----------------------
 892+ A1F5              ;
 893+ A1F5              ;
 894+ A1F5              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 895+ A1F5              ;
 896+ A1F5              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 897+ A1F5
 898+ A1F5
 899+ A1F5              Consulta_Impacto
 900+ A1F5
 901+ A1F5              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 902+ A1F5              ;   _sea lo más coherente posible.
 903+ A1F5
 904+ A1F5 E5               push hl
 905+ A1F6 2B               dec hl
 906+ A1F7 CD EA A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 907+ A1FA E1               pop hl
 908+ A1FB 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 909+ A1FC
 910+ A1FC C8               ret z
 911+ A1FD
 912+ A1FD 3A 34 8C         ld a,(Impacto2)
 913+ A200 CB DF            set 3,a
 914+ A202 32 34 8C         ld (Impacto2),a
 915+ A205
 916+ A205 E5               push hl
 917+ A206 CD D7 A2         call Genera_coordenadas_de_disparo_Amadeus
 918+ A209 E1               pop hl
 919+ A20A CD 27 A2         call Elimina_disparo_Amadeus
 920+ A20D
 921+ A20D C9               ret
 922+ A20E
 923+ A20E              ; ----------------------
 924+ A20E              ;
 925+ A20E              ;
 926+ A20E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 927+ A20E
 928+ A20E              Mueve_disparo_Amadeus
 929+ A20E
 930+ A20E CD C9 90         call Extrae_address
 931+ A211
 932+ A211 CD F1 99         call PreviousScan
 933+ A214 CD F1 99         call PreviousScan
 934+ A217 CD F1 99         call PreviousScan
 935+ A21A CD F1 99         call PreviousScan
 936+ A21D
 937+ A21D              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 938+ A21D
 939+ A21D 7C               ld a,h
 940+ A21E D6 40            sub $40
 941+ A220 EB               ex de,hl
 942+ A221 38 04            jr c,Elimina_disparo_Amadeus
 943+ A223
 944+ A223               ; Introduce nuevo puntero_de_impresión en la caja.
 945+ A223
 946+ A223 73               ld (hl),e
 947+ A224 23               inc hl
 948+ A225 72               ld (hl),d
 949+ A226
 950+ A226 C9               ret
 951+ A227
 952+ A227              ; ----------------------
 953+ A227              ;
 954+ A227              ;   29/9/24
 955+ A227
 956+ A227              Elimina_disparo_Amadeus
 957+ A227
 958+ A227              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 959+ A227              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 960+ A227
 961+ A227              ;   Disparo_1A defw 0									; Puntero objeto.
 962+ A227              ;   	defw 0											; Puntero de impresión.
 963+ A227
 964+ A227 2B               dec hl
 965+ A228 2B               dec hl
 966+ A229
 967+ A229 AF               xor a
 968+ A22A 77               ld (hl),a
 969+ A22B 23               inc hl
 970+ A22C 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 971+ A22D
 972+ A22D 23               inc hl
 973+ A22E 77               ld (hl),a
 974+ A22F 23               inc hl
 975+ A230 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 976+ A231
 977+ A231 3E 01            ld a,1
 978+ A233 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 979+ A236
 980+ A236 CD B9 A1         call Limpia_album_de_pintado_disparos_Amadeus
 981+ A239
 982+ A239 AF               xor a
 983+ A23A 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 984+ A23B
 985+ A23B C9               ret
 986+ A23C
 987+ A23C              ; --------------------------------------------------------------------------------------
 988+ A23C              ;
 989+ A23C              ;   13/10/24
 990+ A23C              ;
 991+ A23C
 992+ A23C              Pinta_disparos_Amadeus
 993+ A23C
 994+ A23C 06 02            ld b,2
 995+ A23E ED 73 05 8C      ld (Stack),sp
 996+ A242 ED 7B 13 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 997+ A246 D1           3 pop de
 998+ A247 14               inc d
 999+ A248 15               dec d
1000+ A249 28 1C            jr z,1F
1001+ A24B E1               pop hl
1002+ A24C
1003+ A24C              Imprime_scanlines_en_pantalla
1004+ A24C
1005+ A24C              ; 1er scanline
1006+ A24C
1007+ A24C 1A               ld a,(de)
1008+ A24D AE               xor (hl)
1009+ A24E 77               ld (hl),a
1010+ A24F
1011+ A24F 1C               inc e
1012+ A250 2C               inc l
1013+ A251
1014+ A251 1A               ld a,(de)
1015+ A252 AE               xor (hl)
1016+ A253 77               ld (hl),a
1017+ A254
1018+ A254 1D               dec e
1019+ A255 E1               pop hl
1020+ A256
1021+ A256              ; 2º scanline
1022+ A256
1023+ A256 1A               ld a,(de)
1024+ A257 AE               xor (hl)
1025+ A258 77               ld (hl),a
1026+ A259
1027+ A259 1C               inc e
1028+ A25A 2C               inc l
1029+ A25B
1030+ A25B 1A               ld a,(de)
1031+ A25C AE               xor (hl)
1032+ A25D 77               ld (hl),a
1033+ A25E
1034+ A25E 1D               dec e
1035+ A25F
1036+ A25F 18 06            jr 1F
1037+ A261
1038+ A261 ED 7B 11 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1039+ A265 18 DF            jr 3B
1040+ A267 10 F8        1 djnz 2B
1041+ A269 ED 7B 05 8C      ld sp,(Stack)
1042+ A26D C9               ret
1043+ A26E
1044+ A26E              ; --------------------------------------------------------------------------------------
1045+ A26E              ;
1046+ A26E              ;   13/10/24
1047+ A26E              ;
1048+ A26E              ;   Modifica: HL,BC y DE.
1049+ A26E
1050+ A26E
1051+ A26E              Genera_datos_de_impresion_disparos_Amadeus
1052+ A26E
1053+ A26E ED 73 05 8C      ld (Stack),sp
1054+ A272 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1055+ A275 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1056+ A276
1057+ A276 14               inc d                                                     ;? Salimos si no hay disparo.
1058+ A277 15               dec d
1059+ A278
1060+ A278 28 0E            jr z,Salida
1061+ A27A
1062+ A27A              Genera_scanlines_de_disparo_Amadeus
1063+ A27A
1064+ A27A E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1065+ A27B              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1066+ A27B ED 7B 11 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1067+ A27F
1068+ A27F C1               pop bc
1069+ A280 C1               pop bc
1070+ A281 C1               pop bc
1071+ A282
1072+ A282 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1073+ A283 CD F1 99         call PreviousScan
1074+ A286 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1075+ A287 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1076+ A288
1077+ A288              Salida
1078+ A288
1079+ A288 ED 7B 05 8C      ld sp,(Stack)
1080+ A28C
1081+ A28C C9               ret
1082+ A28D
1083+ A28D              ; --------------------------------------------------------------------------------------
1084+ A28D              ;
1085+ A28D              ;   12/09/24
1086+ A28D              ;
1087+ A28D
1088+ A28D              Genera_disparo_Amadeus
1089+ A28D
1090+ A28D              ;*  Exclusiones.
1091+ A28D
1092+ A28D 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
1093+ A290 A7               and a
1094+ A291 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1095+ A292
1096+ A292 3D               dec a
1097+ A293 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1098+ A296
1099+ A296              Define_puntero_objeto_disparo
1100+ A296
1101+ A296              ;   Inicializamos contador.
1102+ A296
1103+ A296 06 00            ld b,0
1104+ A298
1105+ A298 2A 72 89         ld hl,(p.imp.amadeus)
1106+ A29B 2C               inc l
1107+ A29C
1108+ A29C 3E 80            ld a,$80
1109+ A29E BE               cp (hl)
1110+ A29F 28 0D            jr z,1F
1111+ A2A1
1112+ A2A1 04               inc b
1113+ A2A2
1114+ A2A2 3E 60            ld a,$60
1115+ A2A4 BE               cp (hl)
1116+ A2A5 28 07            jr z,1F
1117+ A2A7
1118+ A2A7
1119+ A2A7 04               inc b
1120+ A2A8
1121+ A2A8 3E 18            ld a,$18
1122+ A2AA BE               cp (hl)
1123+ A2AB 28 01            jr z,1F
1124+ A2AD
1125+ A2AD 04               inc b
1126+ A2AE
1127+ A2AE              ;   Calcula el Puntero_de_impresión del disparo.
1128+ A2AE
1129+ A2AE              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1130+ A2AE
1131+ A2AE CD F1 99     1 call PreviousScan
1132+ A2B1
1133+ A2B1 78               ld a,b
1134+ A2B2 CB 3F            srl a
1135+ A2B4 28 03            jr z,4F
1136+ A2B6
1137+ A2B6              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1138+ A2B6 E5               push hl
1139+ A2B7 18 02            jr 5F
1140+ A2B9 2D           4 dec l
1141+ A2BA E5               push hl
1142+ A2BB              ; ---
1143+ A2BB
1144+ A2BB              ;   Calcula el Puntero_objeto del disparo.
1145+ A2BB
1146+ A2BB 21 76 83     5 ld hl,Indice_disparo_Amadeus
1147+ A2BE 04               inc b
1148+ A2BF 05               dec b
1149+ A2C0 28 04            jr z,2F
1150+ A2C2
1151+ A2C2              ;   Nos desplazamos por el índice de disparos.
1152+ A2C2
1153+ A2C2 2C           3 inc l
1154+ A2C3 2C               inc l
1155+ A2C4 10 FC            djnz 3B
1156+ A2C6
1157+ A2C6              ; --- Guarda el Puntero_objeto del disparo en la pila.
1158+ A2C6 CD C9 90     2 call Extrae_address
1159+ A2C9 E5               push hl
1160+ A2CA              ; ---
1161+ A2CA
1162+ A2CA              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1163+ A2CA              ; HL en el 1er .db de la caja.
1164+ A2CA
1165+ A2CA 21 1F 89         ld hl,Disparo_Amad
1166+ A2CD
1167+ A2CD 06 02            ld b,2
1168+ A2CF
1169+ A2CF D1           6 pop de
1170+ A2D0 73               ld (hl),e
1171+ A2D1 23               inc hl
1172+ A2D2 72               ld (hl),d
1173+ A2D3 23               inc hl
1174+ A2D4
1175+ A2D4 10 F9            djnz 6B
1176+ A2D6
1177+ A2D6 C9               ret
1178+ A2D7
1179+ A2D7              Genera_coordenadas_de_disparo_Amadeus
1180+ A2D7
1181+ A2D7              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1182+ A2D7              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1183+ A2D7              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1184+ A2D7
1185+ A2D7 CD C9 90         call Extrae_address
1186+ A2DA CD E8 94         call Genera_coordenadas
1187+ A2DD
1188+ A2DD 3D               dec a
1189+ A2DE
1190+ A2DE 21 37 8C         ld hl,Coordenadas_disparo_certero
1191+ A2E1 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1192+ A2E2 23               inc hl
1193+ A2E3 3A B9 8B         ld a,(Coordenada_X)
1194+ A2E6 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1195+ A2E7
1196+ A2E7 AF               xor a
1197+ A2E8 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1198+ A2E9
1199+ A2E9 C9               ret
1200+ A2EA
1201+ A2EA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1202+ A2EA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1203+ A2EA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1204+ A2EA
1205+ A2EA              ; ----------------------------------------------
1206+ A2EA              ;
1207+ A2EA              ;   27/08/24
1208+ A2EA              ;
1209+ A2EA              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1210+ A2EA              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1211+ A2EA
1212+ A2EA              Detecta_impacto_en_disparo_de_Amadeus
1213+ A2EA
1214+ A2EA              Extraccion_de_datos
1215+ A2EA
1216+ A2EA 13               inc de
1217+ A2EB 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1218+ A2EC
1219+ A2EC 5E               ld e,(hl)
1220+ A2ED 23               inc hl
1221+ A2EE 56               ld d,(hl)
1222+ A2EF
1223+ A2EF 23               inc hl
1224+ A2F0
1225+ A2F0 4E               ld c,(hl)
1226+ A2F1 23               inc hl
1227+ A2F2 46               ld b,(hl)
1228+ A2F3
1229+ A2F3 C5               push bc
1230+ A2F4 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1231+ A2F5
1232+ A2F5              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1233+ A2F5
1234+ A2F5 CD F1 99         call PreviousScan
1235+ A2F8 CD F1 99         call PreviousScan
1236+ A2FB
1237+ A2FB              Detecta_impacto_
1238+ A2FB
1239+ A2FB 1A               ld a,(de)
1240+ A2FC A6               and (hl)
1241+ A2FD C0               ret nz
1242+ A2FE
1243+ A2FE 13               inc de
1244+ A2FF 23               inc hl
1245+ A300
1246+ A300 1A               ld a,(de)
1247+ A301 A6               and (hl)
1248+ A302 C9               ret
1249+ A303
1250+ A303              ; -------------------------------------------------------------------------------------------------------------
1251+ A303              ;
1252+ A303              ;   8/8/24
1253+ A303              ;
1254+ A303              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1255+ A303              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1256+ A303              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1257+ A303              ;
1258+ A303              ;   MODIFICA: HL,DE,BC y A.
1259+ A303              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1260+ A303              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1261+ A303
1262+ A303              Colision_Entidad_Amadeus
1263+ A303
1264+ A303              ; Posible contacto de entidad con Amadeus. ?????
1265+ A303
1266+ A303              ; Exclusiones:
1267+ A303
1268+ A303 3A 57 8C         ld a,(Shield)
1269+ A306 A7               and a
1270+ A307 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1271+ A308
1272+ A308 21 2D 8C         ld hl,Ctrl_3
1273+ A30B CB 76            bit 6,(hl)
1274+ A30D C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1275+ A30E
1276+ A30E 21 34 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1277+ A311 CB 56            bit 2,(hl)
1278+ A313 C0               ret nz
1279+ A314
1280+ A314 3A BA 8B     	ld a,(Coordenada_y)
1281+ A317 FE 14        	cp $14
1282+ A319 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1283+ A31A
1284+ A31A 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1285+ A31D A7               and a
1286+ A31E C0               ret nz
1287+ A31F
1288+ A31F              Genera_coordenadas_X
1289+ A31F
1290+ A31F              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1291+ A31F              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1292+ A31F
1293+ A31F              ;   Limpiamos almacenes.
1294+ A31F
1295+ A31F              ;    call Limpia_Coordenadas_X
1296+ A31F
1297+ A31F              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1298+ A31F
1299+ A31F 21 39 8C         ld hl,Coordenadas_X_Entidad
1300+ A322 3A B9 8B         ld a,(Coordenada_X)
1301+ A325 CD 47 A3         call Guarda_coordenadas_X
1302+ A328
1303+ A328              ;   Almacenamos las coordenadas X de Amadeus.
1304+ A328
1305+ A328 3A 6E 89         ld a,(CX_Amadeus)
1306+ A32B CD 47 A3         call Guarda_coordenadas_X
1307+ A32E CD 5B A3         call Compara_coordenadas_X
1308+ A331 C0               ret nz
1309+ A332
1310+ A332 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1311+ A334 32 BC 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1312+ A337
1313+ A337 2A F8 8B         ld hl,(Puntero_store_caja)
1314+ A33A 2C               inc l
1315+ A33B 2C               inc l
1316+ A33C 2C               inc l
1317+ A33D 2C               inc l
1318+ A33E 22 35 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1319+ A341
1320+ A341 21 34 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1321+ A344 CB D6            set 2,(hl)
1322+ A346
1323+ A346 C9               ret
1324+ A347
1325+ A347               ; ----- ----- ----- ----- -----
1326+ A347
1327+ A347 77           Guarda_coordenadas_X ld (hl),a
1328+ A348 3C               inc a
1329+ A349 2C               inc l
1330+ A34A 77               ld (hl),a
1331+ A34B 3C               inc a
1332+ A34C 2C               inc l
1333+ A34D 77               ld (hl),a
1334+ A34E 2C               inc l
1335+ A34F C9               ret
1336+ A350
1337+ A350 AF           Limpia_Coordenadas_X xor a
1338+ A351 06 06            ld b,6
1339+ A353 21 3C 8C         ld hl,Coordenadas_X_Amadeus
1340+ A356 77           1 ld (hl),a
1341+ A357 23               inc hl
1342+ A358 10 FC            djnz 1B
1343+ A35A C9               ret
1344+ A35B
1345+ A35B              ; ----- ----- ----- ----- -----
1346+ A35B
1347+ A35B              Compara_coordenadas_X
1348+ A35B
1349+ A35B DD 21 39 8C      ld ix,Coordenadas_X_Entidad
1350+ A35F DD 7E 00         ld a,(ix+0)
1351+ A362 CD 70 A3         call Comparando
1352+ A365 C8               ret z
1353+ A366
1354+ A366 3C               inc a
1355+ A367 CD 7F A3         call Comparando_1
1356+ A36A C8               ret z
1357+ A36B
1358+ A36B 3C               inc a
1359+ A36C CD 7F A3         call Comparando_1
1360+ A36F C9               ret
1361+ A370
1362+ A370              ; ----- ----- ----- ----- -----
1363+ A370              ;
1364+ A370              ;   4/12/23
1365+ A370              ;
1366+ A370              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1367+ A370
1368+ A370              Comparando
1369+ A370
1370+ A370 DD 2C            inc ixl
1371+ A372 DD 2C            inc ixl
1372+ A374 DD 2C            inc ixl
1373+ A376
1374+ A376 DD 46 00         ld b,(ix+0)
1375+ A379 DD 4E 01         ld c,(ix+1)
1376+ A37C DD 56 02         ld d,(ix+2)
1377+ A37F
1378+ A37F B8           Comparando_1 cp b
1379+ A380 C8               ret z
1380+ A381 B9               cp c
1381+ A382 C8               ret z
1382+ A383 BA               cp d
1383+ A384 C9               ret
1384+ A385
1385+ A385              ; -----------------------------------------------------------------------
1386+ A385              ;
1387+ A385              ;   04/7/24
1388+ A385              ;
1389+ A385
1390+ A385              Detecta_colision_nave_entidad
1391+ A385
1392+ A385              ; Exclusiones:
1393+ A385
1394+ A385              ; Salimos de la rutina si no hay advertencia de posible colisión.
1395+ A385
1396+ A385 21 34 8C     	ld hl,Impacto2
1397+ A388 CB 56        	bit 2,(hl)
1398+ A38A C8           	ret z
1399+ A38B
1400+ A38B              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1401+ A38B
1402+ A38B 2A 74 89         ld hl,(Pamm_Amadeus)
1403+ A38E CD C9 90         call Extrae_address
1404+ A391 54               ld d,h
1405+ A392 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1406+ A393
1407+ A393 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1408+ A396 06 10            ld b,16                                        ; Contador de scanlines en B.
1409+ A398 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1410+ A39B
1411+ A39B C5           1 push bc
1412+ A39C 06 03            ld b,3
1413+ A39E E5               push hl
1414+ A39F
1415+ A39F              ; .db
1416+ A39F
1417+ A39F 1A           3 ld a,(de)
1418+ A3A0 A7               and a
1419+ A3A1 20 03            jr nz,4F
1420+ A3A3
1421+ A3A3 2C               inc l
1422+ A3A4 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1423+ A3A6
1424+ A3A6 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1425+ A3A8 28 04            jr z,2F
1426+ A3AA
1427+ A3AA              ; Impacto.
1428+ A3AA FD 2D            dec iyl
1429+ A3AC 28 22            jr z,5F
1430+ A3AE
1431+ A3AE 1C           2 inc e
1432+ A3AF 10 EE            djnz 3B
1433+ A3B1
1434+ A3B1 E1               pop hl
1435+ A3B2
1436+ A3B2              ; Hay salto de línea en el puntero de impresión ???
1437+ A3B2
1438+ A3B2 7C               ld a,h
1439+ A3B3 D6 57            sub $57
1440+ A3B5 20 0A            jr nz,6F
1441+ A3B7
1442+ A3B7              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1443+ A3B7
1444+ A3B7 2A 72 89         ld hl,(p.imp.amadeus)
1445+ A3BA 3E 20            ld a,$20
1446+ A3BC A7               and a
1447+ A3BD 85               add l
1448+ A3BE 6F               ld l,a
1449+ A3BF 18 01            jr 7F
1450+ A3C1
1451+ A3C1 24           6 inc h
1452+ A3C2
1453+ A3C2 C1           7 pop bc
1454+ A3C3 10 D6            djnz 1B
1455+ A3C5
1456+ A3C5              ;   Fin de la comparativa.
1457+ A3C5
1458+ A3C5              ;   NO HAY COLISIÓN !!!!!.
1459+ A3C5              ;
1460+ A3C5              ;   .db (Impacto) de Amadeus a "0".
1461+ A3C5              ;   RES el bit2 de (Impacto2).
1462+ A3C5              ;
1463+ A3C5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1464+ A3C5              ;   Lo colocamos a "0".
1465+ A3C5
1466+ A3C5 21 34 8C         ld hl,Impacto2
1467+ A3C8 CB 96            res 2,(hl)
1468+ A3CA 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)
1469+ A3CD 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1470+ A3CF C9               ret
1471+ A3D0
1472+ A3D0              ;   COLISIÓN !!!!!.
1473+ A3D0              ;
1474+ A3D0              ;   .db (Impacto) de Amadeus a "1".
1475+ A3D0              ;   SET el bit3 de (Impacto2).
1476+ A3D0              ;
1477+ A3D0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1478+ A3D0
1479+ A3D0 E1           5 pop hl
1480+ A3D1 C1               pop bc
1481+ A3D2
1482+ A3D2 21 71 89         ld hl,Impacto_Amadeus
1483+ A3D5 36 01            ld (hl),1
1484+ A3D7 21 34 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1485+ A3DA CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1486+ A3DC
1487+ A3DC 11 C0 87         ld de,Indice_Explosion_entidades
1488+ A3DF 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1489+ A3E2
1490+ A3E2 23               inc hl
1491+ A3E3 23               inc hl
1492+ A3E4 23               inc hl
1493+ A3E5
1494+ A3E5 73               ld (hl),e
1495+ A3E6 23               inc hl
1496+ A3E7 72               ld (hl),d
1497+ A3E8
1498+ A3E8              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1499+ A3E8
1500+ A3E8 11 60 88         ld de,Indice_Explosion_Amadeus
1501+ A3EB 21 74 89         ld hl,Pamm_Amadeus
1502+ A3EE
1503+ A3EE 73               ld (hl),e
1504+ A3EF 23               inc hl
1505+ A3F0 72               ld (hl),d
1506+ A3F1
1507+ A3F1 C9               ret
1508+ A3F2
1509+ A3F2
1510+ A3F2
# file closed: Disparo.asm
2065  A3F2
2066  A3F2              	SAVESNA "Pruebas.sna", START
2067  A3F2
2068  A3F2
2069  A3F2
2070  A3F2
# file closed: Banco_de_pruebas.asm
