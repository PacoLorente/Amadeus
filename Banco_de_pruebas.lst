# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A3 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD DA 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD FD 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 AD 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B A3 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 3B 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8939 01 01
  18+ 893B
  19+ 893B 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893C 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8940 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8944 01 02
  22+ 8946 02 01 01 01  	db 2,1,1,1,1,2
  22+ 894A 01 02
  23+ 894C
# file closed: Niveles.asm
 108  894C
 109  894C              ; ******************************************************************************************************************************************************************************************
 110  894C              ; Constantes.
 111  894C              ; ******************************************************************************************************************************************************************************************
 112  894C              ;
 113  894C              ; 25/12/23
 114  894C
 115  894C              ;
 116  894C              ; Constantes.
 117  894C              ;
 118  894C
 119  894C              Sprite_vacio equ $eae0
 120  894C              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  894C              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  894C              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  894C              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  894C
 125  894C              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 126  894C
 127  894C              Almacen_de_movimientos_masticados_Amadeus equ $e700
 128  894C              ;
 129  894C              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 130  894C              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 131  894C              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 132  894C              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 133  894C              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 134  894C              ;														; 55 Bytes.
 135  894C
 136  894C              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 137  894C              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 138  894C
 139  894C              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 140  894C
 141  894C              ; ******************************************************************************************************************************************************************************************
 142  894C              ; Variables.
 143  894C              ; ******************************************************************************************************************************************************************************************
 144  894C              ;
 145  894C              ; 18/01/24
 146  894C              ;
 147  894C              ; Variables de DRAW. (Motor principal).	42 Bytes.
 148  894C              ;
 149  894C
 150  894C              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 151  894C
 152  894C 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 153  894D              ;															- Patrón de movimiento.
 154  894D              ;															- Aspecto
 155  894D 00           Filas db 0												; Filas. [DRAW]
 156  894E 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 157  894F 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 158  8951 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 159  8953 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 160  8954 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 161  8955
 162  8955              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 163  8955
 164  8955 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 165  8956              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 166  8956              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 167  8956 00           Attr db 0												; Atributos de la entidad:
 168  8957
 169  8957              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 170  8957              ;
 171  8957              ;	COLORES: 0 ..... NEGRO
 172  8957              ;    		 1 ..... AZUL
 173  8957              ; 			 2 ..... ROJO
 174  8957              ;			 3 ..... MAGENTA
 175  8957              ; 			 4 ..... VERDE
 176  8957              ; 			 5 ..... CIAN
 177  8957              ;			 6 ..... AMARILLO
 178  8957              ; 			 7 ..... BLANCO
 179  8957
 180  8957 00 00        Indice_Sprite_der defw 0
 181  8959 00 00        Indice_Sprite_izq defw 0
 182  895B 00 00        Puntero_DESPLZ_der defw 0
 183  895D 00 00        Puntero_DESPLZ_izq defw 0
 184  895F
 185  895F 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 186  8961 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 187  8962
 188  8962              ; Variables de objeto. (Características).
 189  8962
 190  8962 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 191  8963              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 192  8963              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 193  8963 00 00 00...  Variables_de_borrado ds 6
 194  8969
 195  8969 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 196  896B              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 197  896B
 198  896B 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 199  896D
 200  896D              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 201  896D              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 202  896D
 203  896D 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 204  896F              ;														; _palabras que componen el "movimiento_masticado".
 205  896F
 206  896F              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 207  896F
 208  896F 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 209  8970              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 210  8970              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 211  8970              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 212  8970              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 213  8970              ;
 214  8970              ; 														DESCRIPCIÖN:
 215  8970              ;
 216  8970              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 217  8970              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 218  8970              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 219  8970              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 220  8970              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 221  8970              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 222  8970              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 223  8970              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 224  8970              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 225  8970              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 226  8970              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 227  8970              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 228  8970              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 229  8970              ;
 230  8970              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 231  8970              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 232  8970              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 233  8970
 234  8970              ; Variables de funcionamiento. [DRAW].
 235  8970
 236  8970 00           Columnas db 0
 237  8971 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 238  8973              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8973 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 240  8974
 241  8974              ; variables de control general.
 242  8974
 243  8974 00           Ctrl_2 db 0
 244  8975              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 245  8975              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 246  8975              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 247  8975              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 248  8975              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 249  8975              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 250  8975              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 251  8975              ;
 252  8975              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 253  8975              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 254  8975              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 255  8975              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 256  8975              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 257  8975              ;														BIT 4, ???
 258  8975              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 259  8975
 260  8975 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 261  8976
 262  8976              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 263  8976
 264  8976              ;					         		---------;      ;---------
 265  8976
 266  8976              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 267  8976
 268  8976              Perfiles_de_velocidad
 269  8976
 270  8976 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 271  8977 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 272  8978 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 273  8979 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 274  897A
 275  897A              ; Contadores de 16 bits.
 276  897A
 277  897A 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 278  897C 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 279  897E 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 280  8980 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 281  8982
 282  8982              ; Movimiento. ------------------------------------------------------------------------------------------------------
 283  8982
 284  8982 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 285  8984 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 286  8986 00 00        Puntero_indice_mov_bucle defw 0							;
 287  8988              ;
 288  8988              ;
 289  8988 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 290  8989              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 291  8989              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 292  8989 00           Incrementa_puntero_backup db 0
 293  898A 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 294  898B              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 295  898B 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 296  898C 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 297  898D 00           Cola_de_desplazamiento db 0								; Este byte indica:
 298  898E              ;
 299  898E              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 300  898E              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 301  898E              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 302  898E              ;
 303  898E              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 304  898E              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 305  898E              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 306  898E              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 307  898E              ;
 308  898E              ;														;	"$ff" ..... Bucle infinito de repetición.
 309  898E              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 310  898E              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 311  898E              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 312  898E
 313  898E 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 314  898F
 315  898F              ;														DESCRIPCIÓN:
 316  898F              ;
 317  898F              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 318  898F              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 319  898F              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 320  898F              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 321  898F              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 322  898F              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 323  898F
 324  898F              ;														BIT 3, Recarga de nueva oleada.
 325  898F              ;														BIT 4, Recarga de nueva oleada.
 326  898F              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 327  898F              ;														BIT 6, **** Frame completo.
 328  898F              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 329  898F
 330  898F 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 331  8991              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 332  8991              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 333  8991              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 334  8991
 335  8991              ; Gestión de ENTIDADES y CAJAS.
 336  8991
 337  8991 00 00        Puntero_store_caja defw 0
 338  8993 00 00        Puntero_restore_caja defw 0
 339  8995 00 00        Indice_restore_caja defw 0
 340  8997 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 341  8998 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 342  8999 00           Entidades_en_curso db 0									; ..... ..... .....
 343  899A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 344  899B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 345  899B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 346  899B              ;														; _ (Numero_de_malotes)="0".
 347  899B 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 348  899D 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 349  899F              ;														; _ puntero (Indice_entidades).
 350  899F
 351  899F              ;---------------------------------------------------------------------------------------------------------------
 352  899F              ;
 353  899F              ;	11/01/24
 354  899F              ;
 355  899F              ;	Álbumes.
 356  899F
 357  899F 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 358  89A1              ;														; _variable para almacenar lo posición del puntero_
 359  89A1              ; 														; _de pila, SP.
 360  89A1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 361  89A3              ;														; La utiliza la rutina [Extrae_foto_registros].
 362  89A3 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 363  89A5 00 80        Stack_snapshot defw Album_de_fotos
 364  89A7 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 365  89A9
 366  89A9              ;End_Snapshot defw Album_de_fotos
 367  89A9              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 368  89A9 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 369  89AB              ;														; _el snapshot de los registros del siguiente disparo.
 370  89AB              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 371  89AB AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 372  89AD
 373  89AD 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 374  89AE              ;
 375  89AE              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 376  89AE              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 377  89AE              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 378  89AE
 379  89AE 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 380  89AF              ;
 381  89AF              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 382  89AF              ;
 383  89AF              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 384  89AF              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 385  89AF              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 386  89AF              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 387  89AF              ;
 388  89AF              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 389  89AF              ;															_ masticados ya generados.
 390  89AF              ;
 391  89AF              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 392  89AF              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 393  89AF              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 394  89AF              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 395  89AF
 396  89AF
 397  89AF              ; Gestión de Disparos.
 398  89AF
 399  89AF 00           Numero_de_disparotes db 0
 400  89B0 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 401  89B2 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 402  89B4 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 403  89B5              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 404  89B5              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 405  89B5 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 406  89B7              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 407  89B7              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 408  89B7              ;														; _produzca colisión.
 409  89B7 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 410  89B9              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 411  89B9 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 412  89BC              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 413  89BC 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 414  89BF              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 415  89BF 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 416  89C0
 417  89C0              ;---------------------------------------------------------------------------------------------------------------
 418  89C0
 419  89C0              ; Relojes y temporizaciones.
 420  89C0
 421  89C0 00           Contador_de_frames db 0
 422  89C1 00           Contador_de_frames_2 db 0
 423  89C2
 424  89C2 04           Clock_explosion db 4
 425  89C3 14           Clock_Entidades_en_curso db 20
 426  89C4 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 427  89C5              ;														; Repite la oleada de entidades.
 428  89C5 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 429  89C6 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 430  89C7 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 431  89C8
 432  89C8 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 433  89C9 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 434  89CA 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 435  89CB
 436  89CB              ;---------------------------------------------------------------------------------------------------------------
 437  89CB
 438  89CB              ; Gestión de NIVELES.
 439  89CB
 440  89CB 00           Nivel db 0												; Nivel actual del juego.
 441  89CC 00 00        Puntero_indice_NIVELES defw 0
 442  89CE 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 443  89D0              ; 														; _ que definen el NIVEL.
 444  89D0              ; Y todo comienza aquí .....
 445  89D0              ;
 446  89D0              ; 	INICIO  *************************************************************************************************************************************************************************
 447  89D0              ;
 448  89D0              ;	5/1/24
 449  89D0
 450  89D0              START
 451  89D0
 452  89D0 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 453  89D3 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 454  89D5 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 455  89D7 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 456  89D9 F3           	DI
 457  89DA
 458  89DA 3E 07        	ld a,%00000111
 459  89DC CD F2 9E     	call Cls
 460  89DF CD 4B 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 461  89E2
 462  89E2              ; INICIALIZACIÓN.
 463  89E2
 464  89E2              ;	Inicializa 1er Nivel.
 465  89E2
 466  89E2 21 28 89     	ld hl,Indice_de_niveles
 467  89E5 22 CC 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 468  89E8 CD 0F 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 469  89EB
 470  89EB              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 471  89EB              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 472  89EB              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 473  89EB
 474  89EB              ;	Provisional, (para desarrollo).
 475  89EB
 476  89EB              	;-
 477  89EB              ;	ld hl,Numero_parcial_de_entidades
 478  89EB              ;	ld b,(hl)
 479  89EB              ;	inc b
 480  89EB              ;	dec b
 481  89EB              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 482  89EB
 483  89EB CD 54 8D     4 call Inicia_Entidades
 484  89EE
 485  89EE CD 0E 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 486  89F1
 487  89F1              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 488  89F1              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 489  89F1              ; (Esto se dá cuando se inicia una nueva oleada).
 490  89F1
 491  89F1              ;	ld a,(Ctrl_1)
 492  89F1              ;	bit 3,a
 493  89F1              ;	jr nz,5F											; Loop
 494  89F1
 495  89F1              ; 	INICIA AMADEUS !!!!!
 496  89F1
 497  89F1              ;3 call Restore_Amadeus
 498  89F1              ;	call Inicia_Puntero_objeto
 499  89F1              ;	call Draw
 500  89F1
 501  89F1              ;	call Guarda_movimiento_masticado	;! Provisional
 502  89F1
 503  89F1              ;	call Guarda_foto_registros
 504  89F1              ;	call Guarda_datos_de_borrado_Amadeus
 505  89F1
 506  89F1              ;	ld de,Amadeus_db
 507  89F1              ;	call Store_Amadeus
 508  89F1
 509  89F1              ; 	INICIA DISPAROS !!!!!
 510  89F1
 511  89F1              ;	call Inicia_Puntero_Disparo_Entidades
 512  89F1              ;	call Inicia_Puntero_Disparo_Amadeus
 513  89F1
 514  89F1              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 515  89F1
 516  89F1              ;5 call Inicia_punteros_de_cajas
 517  89F1              ;	call Restore_entidad
 518  89F1
 519  89F1              ;	ld a,(Ctrl_1)
 520  89F1              ;	bit 3,a
 521  89F1              ;	jr z,6F
 522  89F1
 523  89F1              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 524  89F1
 525  89F1              ;	ld hl,Ctrl_1
 526  89F1              ;	res 3,(hl)
 527  89F1              ;	jr Main
 528  89F1
 529  89F1              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 530  89F1
 531  89F1 21 AD 89     6 ld hl,Ctrl_3
 532  89F4 CB C6        	set 0,(hl)											; Frame completo.
 533  89F6 FB           	ei
 534  89F7 76           	halt
 535  89F8
 536  89F8              ; ------------------------------------
 537  89F8
 538  89F8              Main
 539  89F8              ;
 540  89F8              ;	11/12/23
 541  89F8
 542  89F8              ; Aparece nueva entidad ???
 543  89F8
 544  89F8              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 545  89F8              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 546  89F8              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 547  89F8              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 548  89F8              ;														; _un 2º bloque.
 549  89F8
 550  89F8              ;	ld a,1
 551  89F8              ;	out ($fe),a
 552  89F8
 553  89F8 3A C3 89     	ld a,(Clock_Entidades_en_curso)
 554  89FB 47           	ld b,a
 555  89FC 3A C0 89     	ld a,(Contador_de_frames)
 556  89FF B8           	cp b
 557  8A00 20 18        	jr nz,13F
 558  8A02
 559  8A02              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 560  8A02              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 561  8A02
 562  8A02 3A 98 89     21 ld a,(Numero_parcial_de_entidades)
 563  8A05 47           	ld b,a
 564  8A06 3A 99 89     	ld a,(Entidades_en_curso)
 565  8A09 B8           	cp b
 566  8A0A 28 0E        	jr z,13F
 567  8A0C 30 0C        	jr nc,13F
 568  8A0E
 569  8A0E 3C           	inc a
 570  8A0F 32 99 89     	ld (Entidades_en_curso),a
 571  8A12
 572  8A12              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 573  8A12
 574  8A12 3A C3 89     	ld a,(Clock_Entidades_en_curso)
 575  8A15              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 576  8A15              ;! _ IMPREDECIBLE !!!!
 577  8A15 C6 64        	add 100
 578  8A17 32 C3 89     	ld (Clock_Entidades_en_curso),a
 579  8A1A
 580  8A1A              ; -------------------------------------------------------------------------------------------------------------
 581  8A1A
 582  8A1A              ; Habilita disparos.
 583  8A1A
 584  8A1A              13
 585  8A1A
 586  8A1A              ;	ld hl,Disparo_Amadeus
 587  8A1A              ;	ld de,CLOCK_repone_disparo_Amadeus
 588  8A1A              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  8A1A
 590  8A1A              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  8A1A              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  8A1A              ;	call Habilita_disparos
 593  8A1A
 594  8A1A              ; COLISIONES.
 595  8A1A
 596  8A1A              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  8A1A
 598  8A1A              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  8A1A              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  8A1A              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  8A1A
 602  8A1A              ;	xor a
 603  8A1A              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  8A1A
 605  8A1A              ;	call Inicia_punteros_de_cajas
 606  8A1A              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  8A1A              ; 														; _ en DRAW.
 608  8A1A
 609  8A1A              ;	ld a,(Filas)
 610  8A1A              ;	and a
 611  8A1A              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 612  8A1A              ;	call Incrementa_punteros_de_cajas
 613  8A1A              ;	jr 12B
 614  8A1A
 615  8A1A              ; ---------------------------------------------------------------------------------------
 616  8A1A
 617  8A1A 3A 98 89     10 ld a,(Numero_parcial_de_entidades)
 618  8A1D 47               ld b,a
 619  8A1E A7           	and a
 620  8A1F 20 00        	jr nz,11F
 621  8A21
 622  8A21              ;	ld hl,Ctrl_1;
 623  8A21              ;	bit 4,(hl)
 624  8A21              ;	jp nz,16F
 625  8A21
 626  8A21              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 627  8A21
 628  8A21              ;	ld hl,Ctrl_1
 629  8A21              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 630  8A21
 631  8A21              ;	ld a,(Contador_de_frames)
 632  8A21              ;	inc a
 633  8A21              ;	ld (Activa_recarga_cajas),a
 634  8A21
 635  8A21              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 636  8A21
 637  8A21 3A 99 89     11 ld a,(Entidades_en_curso)
 638  8A24 A7           	and a
 639  8A25 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 640  8A27 47           	ld b,a												; No hay entidades que gestionar.
 641  8A28
 642  8A28              ; ( Código que ejecutamos con cada entidad: ).
 643  8A28
 644  8A28              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 645  8A28
 646  8A28 C5           15 push bc 												; Nº de entidades en curso.
 647  8A29
 648  8A29 CD E1 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 649  8A2C
 650  8A2C
 651  8A2C 3A AD 89     	ld a,(Ctrl_3)
 652  8A2F CB 57        	bit 2,a
 653  8A31 F3           	di
 654  8A32 20 FE        	jr nz,$
 655  8A34 FB           	ei
 656  8A35
 657  8A35
 658  8A35
 659  8A35
 660  8A35              ; Existe "Entidad_guía" ???.
 661  8A35              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 662  8A35
 663  8A35              ;	ld a,(Ctrl_3)
 664  8A35              ;	bit 1,a
 665  8A35              ;	jr nz,22F
 666  8A35
 667  8A35              ; Almacén de "Movimientos_masticados" lleno ???
 668  8A35              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 669  8A35              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 670  8A35
 671  8A35              ;;	ld a,(Ctrl_3)
 672  8A35              ;;	bit 3,a
 673  8A35              ;;	jr nz,22F
 674  8A35
 675  8A35              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 676  8A35
 677  8A35              ;	ld hl,Ctrl_2
 678  8A35              ;	set 5,(hl)
 679  8A35              ;	ld hl,Ctrl_3
 680  8A35              ;	set 1,(hl)
 681  8A35
 682  8A35              ; Impacto ???
 683  8A35
 684  8A35              ;22 ld a,(Impacto)
 685  8A35              ;	and a
 686  8A35              ;	jr z,8F
 687  8A35
 688  8A35              ; Hay Impacto en esta entidad.
 689  8A35
 690  8A35              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 691  8A35              ;	dec (hl)
 692  8A35              ;	jp nz,17F
 693  8A35
 694  8A35              ;! Velocidad de la animación de la explosión.
 695  8A35
 696  8A35              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 697  8A35              ;														; _,(velocidad de la explosión).
 698  8A35              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 699  8A35
 700  8A35              ;	call Repone_datos_de_borrado
 701  8A35              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 702  8A35
 703  8A35              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 704  8A35
 705  8A35              ;	ld a,(Ctrl_2)
 706  8A35              ;	bit 1,a
 707  8A35              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 708  8A35
 709  8A35              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 710  8A35
 711  8A35              ;	ld a,(CTRL_DESPLZ)
 712  8A35              ;	and a
 713  8A35              ;	jr nz,18F
 714  8A35
 715  8A35              ;	ld hl,Indice_Explosion_2x2-2
 716  8A35              ;	ld (Puntero_DESPLZ_der),hl
 717  8A35              ;	jr 19F
 718  8A35
 719  8A35              ;18 ld hl,Indice_Explosion_2x3-2
 720  8A35              ;	ld (Puntero_DESPLZ_der),hl
 721  8A35
 722  8A35              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 723  8A35              ;	set 1,(hl)
 724  8A35              ;	jr 7F
 725  8A35
 726  8A35              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 727  8A35              ; _con las coordenadas de la entidad almacenada en DRAW.
 728  8A35
 729  8A35              ;8 ld a,(Ctrl_1)
 730  8A35              ;	bit 2,a
 731  8A35              ;	jr z,7F
 732  8A35
 733  8A35              ;	ld hl,(Coordenadas_disparo_certero)
 734  8A35              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 735  8A35              ;														; E contiene la coordenada_X del disparo.
 736  8A35              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 737  8A35              ;														; H FILA, (Coordenada_y de la entidad).
 738  8A35              ;	and a
 739  8A35              ;	sbc hl,de
 740  8A35
 741  8A35              ;	call Determina_resultado_comparativa
 742  8A35
 743  8A35              ;	ld a,b
 744  8A35              ;	and a
 745  8A35              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 746  8A35
 747  8A35              ; ----- ----- -----
 748  8A35
 749  8A35              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 750  8A35              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 751  8A35
 752  8A35              ;	ld hl,Ctrl_1
 753  8A35              ;	res 2,(hl)
 754  8A35
 755  8A35 CD 51 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 756  8A38
 757  8A38              ;	ld a,(Ctrl_0)
 758  8A38              ;	bit 4,a
 759  8A38              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 760  8A38
 761  8A38              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 762  8A38              ; [[[
 763  8A38              ;	call Detecta_disparo_entidad
 764  8A38              ; ]]]
 765  8A38
 766  8A38 CD BE 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 767  8A3B
 768  8A3B              ;	ld hl,Ctrl_0
 769  8A3B              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 770  8A3B
 771  8A3B CD AE 8D     17 call Store_Restore_cajas
 772  8A3E
 773  8A3E C1           	pop bc
 774  8A3F
 775  8A3F 10 E7        	djnz 15B
 776  8A41
 777  8A41 CD 0E 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 778  8A44
 779  8A44              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 780  8A44              ; Hemos gestionado todas las unidades.
 781  8A44              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 782  8A44
 783  8A44              ;	ld hl,Ctrl_1
 784  8A44              ;	res 2,(hl)
 785  8A44
 786  8A44 21 AD 89     16 ld hl,Ctrl_3
 787  8A47 CB C6        	set 0,(hl)											; Frame completo.
 788  8A49
 789  8A49 AF           	xor a
 790  8A4A D3 FE        	out ($fe),a
 791  8A4C
 792  8A4C 76           	halt
 793  8A4D
 794  8A4D              ; ----------------------------------------
 795  8A4D
 796  8A4D              ;	ld a,(Ctrl_1) 										; Existe Loop?
 797  8A4D              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 798  8A4D CA F8 89     	jp z,Main
 799  8A50
 800  8A50              ; RECARGA DE NUEVA OLEADA.
 801  8A50
 802  8A50              ;	ld a,(Contador_de_frames)
 803  8A50              ;	ld b,a
 804  8A50              ;	ld a,(Activa_recarga_cajas)
 805  8A50              ;	cp b
 806  8A50              ;	jr z,20F
 807  8A50
 808  8A50              ;	ld hl,Ctrl_1
 809  8A50              ;	set 4,(hl)
 810  8A50              ;	jp Main
 811  8A50
 812  8A50              ;20 ld hl,Ctrl_1
 813  8A50              ;	res 4,(hl)
 814  8A50
 815  8A50              ;	ld a,(Contador_de_frames)
 816  8A50
 817  8A50              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 818  8A50              ;! _ IMPREDECIBLE !!!!
 819  8A50
 820  8A50              ;	add 10
 821  8A50              ;	ld (Clock_Entidades_en_curso),a
 822  8A50
 823  8A50              ;	jp 4B
 824  8A50
 825  8A50 C9           	ret
 826  8A51
 827  8A51              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 828  8A51              ;
 829  8A51              ;	16/11/23
 830  8A51
 831  8A51              ;;Gestiona_Amadeus
 832  8A51
 833  8A51              ;! Activa/desactiva impacto con Amadeus.
 834  8A51
 835  8A51              ;	ld a,(Impacto)
 836  8A51              ;	and a
 837  8A51              ;	jr nz,2F
 838  8A51
 839  8A51              ;;	call Mov_Amadeus
 840  8A51
 841  8A51              ;;2 ld a,(Ctrl_0)
 842  8A51              ;;	bit 4,a
 843  8A51              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 844  8A51
 845  8A51              ;;	call Guarda_foto_entidad_a_pintar
 846  8A51              ;;	call Guarda_datos_de_borrado_Amadeus
 847  8A51
 848  8A51              ;;1 ld hl,Ctrl_0
 849  8A51              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 850  8A51
 851  8A51              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 852  8A51
 853  8A51              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 854  8A51
 855  8A51              ;	call Calcula_numero_de_disparotes
 856  8A51
 857  8A51              ;;	ret
 858  8A51
 859  8A51              ; --------------------------------------------------------------------------------------------------------------
 860  8A51              ;
 861  8A51              ;	15/12/23
 862  8A51
 863  8A51              Mov_obj
 864  8A51
 865  8A51              ;	ld a,(Ctrl_2)
 866  8A51              ;	bit 1,a
 867  8A51              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 868  8A51
 869  8A51              ; Explosión:
 870  8A51
 871  8A51              ;	ld a,(Frames_explosion)
 872  8A51              ;	and a
 873  8A51              ;	jr nz,4F
 874  8A51
 875  8A51              ;!  Una alimaña menos!!!!!!!!!1
 876  8A51
 877  8A51              ; Se trataba de una Entidad_guía ???
 878  8A51
 879  8A51              ;	ld a,(Ctrl_2)
 880  8A51              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 881  8A51              ;	jr z,5F
 882  8A51
 883  8A51              ;	ld hl,Ctrl_3
 884  8A51              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 885  8A51
 886  8A51              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 887  8A51              ;!! _generado puede ser distinto, (aletoriedad).
 888  8A51
 889  8A51              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 890  8A51              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 891  8A51              ;	dec (hl)
 892  8A51              ;	ld hl,Entidades_en_curso
 893  8A51              ;	dec (hl)
 894  8A51              ;	ld hl,Numero_de_entidades
 895  8A51              ;	dec (hl)
 896  8A51              ;	jr 3F
 897  8A51
 898  8A51              ; -----
 899  8A51
 900  8A51              ;	`Movemos´ la explosión.
 901  8A51
 902  8A51              ;4 ld hl,(Puntero_DESPLZ_der)
 903  8A51              ;	inc hl
 904  8A51              ;	inc hl
 905  8A51              ;	call Extrae_address
 906  8A51              ;;	ld (Puntero_objeto),hl
 907  8A51
 908  8A51              ;;	ld hl,Frames_explosion
 909  8A51              ;;	dec (hl)
 910  8A51
 911  8A51              ;;	ld hl,Ctrl_0
 912  8A51              ;;	set 4,(hl);;
 913  8A51
 914  8A51              ;;	jr 3F
 915  8A51
 916  8A51              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 917  8A51
 918  8A51              ;2 xor a
 919  8A51              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 920  8A51
 921  8A51              ; Movemos Entidades malignas.
 922  8A51              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 923  8A51
 924  8A51              ;	ld a,(Ctrl_2)
 925  8A51              ;	bit 5,a
 926  8A51              ;	jr nz,8F
 927  8A51
 928  8A51              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 929  8A51              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 930  8A51              ;	jr 7F
 931  8A51
 932  8A51              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 933  8A51
 934  8A51              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 935  8A51              ;	bit 4,a
 936  8A51              ;	ret z
 937  8A51
 938  8A51              ; Ha habido desplazamiento de la entidad maligna.
 939  8A51              ; Ha llegado a zona de AMADEUS ???
 940  8A51
 941  8A51              ;7 ld a,(Coordenada_y)
 942  8A51              ;	cp $14
 943  8A51              ;	jr c,1F
 944  8A51
 945  8A51              ; ---------
 946  8A51
 947  8A51              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 948  8A51              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 949  8A51
 950  8A51              ;	di
 951  8A51              ;	call Genera_coordenadas_X
 952  8A51              ;	call Compara_coordenadas_X
 953  8A51              ;	ei
 954  8A51
 955  8A51              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 956  8A51
 957  8A51              ; ---------
 958  8A51
 959  8A51              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 960  8A51 CD BF 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 961  8A54 CD 4C 8B     	call Limpia_Variables_de_borrado
 962  8A57
 963  8A57 C9           3 ret
 964  8A58
 965  8A58              ; --------------------------------------------------------------------------------------------------------------
 966  8A58              ;
 967  8A58              ;	29/1/23
 968  8A58
 969  8A58              Mov_Amadeus
 970  8A58
 971  8A58              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 972  8A58
 973  8A58 CD B5 95     	call Mov_right
 974  8A5B
 975  8A5B 3A 6F 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 976  8A5E CB 67        	bit 4,a
 977  8A60 C8           	ret z
 978  8A61
 979  8A61              ; ---------
 980  8A61
 981  8A61              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 982  8A61 CD AF 8C     	call Repone_datos_de_borrado_Amadeus
 983  8A64 CD 4C 8B     	call Limpia_Variables_de_borrado
 984  8A67
 985  8A67 C9           	ret
 986  8A68
 987  8A68              ; -----------------------------------------------------------------------------------
 988  8A68              ;
 989  8A68              ;	20/01/24
 990  8A68              ;
 991  8A68              ;
 992  8A68
 993  8A68              Construye_movimientos_masticados_entidad
 994  8A68
 995  8A68 2A 6B 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 996  8A6B E5           	push hl
 997  8A6C CD B0 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 998  8A6F              ;															; _ el (Contador_de_mov_masticados).
 999  8A6F CD AC 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1000  8A72              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1001  8A72 CD 11 95     	call Recompone_posicion_inicio
1002  8A75
1003  8A75 CD 05 8F     1 call Draw
1004  8A78 CD 94 8A     	call Guarda_movimiento_masticado
1005  8A7B
1006  8A7B CD 8B 98     	call Movimiento
1007  8A7E
1008  8A7E 3A AD 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1009  8A81 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1010  8A83 28 F0        	jr z,1B
1011  8A85
1012  8A85              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1013  8A85              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1014  8A85
1015  8A85 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1016  8A86 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1017  8A89
1018  8A89              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1019  8A89
1020  8A89 CD EF 99     	call Situa_en_contador_general_de_mov_masticados
1021  8A8C
1022  8A8C              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1023  8A8C              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1024  8A8C
1025  8A8C ED 4B 6D 89  	ld bc,(Contador_de_mov_masticados)
1026  8A90 71           	ld (hl),c
1027  8A91 23           	inc hl
1028  8A92 70           	ld (hl),b
1029  8A93
1030  8A93 C9           	ret
1031  8A94
1032  8A94              ; -----------------------------------------------------------------------------------
1033  8A94              ;
1034  8A94              ;	28/12/23
1035  8A94              ;
1036  8A94              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1037  8A94              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1038  8A94
1039  8A94              Guarda_movimiento_masticado
1040  8A94
1041  8A94 ED 73 9F 89  	ld (Stack),sp
1042  8A98 ED 7B 6B 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1043  8A9C
1044  8A9C E5           	push hl
1045  8A9D DD E5            push ix
1046  8A9F FD E5            push iy
1047  8AA1
1048  8AA1 ED 7B 9F 89      ld sp,(Stack)
1049  8AA5
1050  8AA5 2A 6D 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1051  8AA8 23           	inc hl
1052  8AA9 22 6D 89     	ld (Contador_de_mov_masticados),hl
1053  8AAC
1054  8AAC CD B0 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1055  8AAF              ;															; _ el (Contador_de_mov_masticados).
1056  8AAF C9               ret
1057  8AB0
1058  8AB0              ; --------------------------------------------------------------------------------------------------------------
1059  8AB0              ;
1060  8AB0              ;	12/1/24
1061  8AB0              ;
1062  8AB0              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1063  8AB0
1064  8AB0              Actualiza_Puntero_de_almacen_de_mov_masticados
1065  8AB0
1066  8AB0 2A 6B 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1067  8AB3 01 06 00     	ld bc,6
1068  8AB6 A7           	and a
1069  8AB7 ED 4A        	adc hl,bc
1070  8AB9 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1071  8ABC C9           	ret
1072  8ABD
1073  8ABD              ; --------------------------------------------------------------------------------------------------------------
1074  8ABD              ;
1075  8ABD              ;	15/01/24
1076  8ABD              ;
1077  8ABD              ;	Cargamos los registros_
1078  8ABD              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1079  8ABD              ;
1080  8ABD              ;	HL contiene la dirección de la rutina de impresión.
1081  8ABD              ;	IX contiene el puntero de impresión.
1082  8ABD              ;	IY contiene (Puntero_objeto).
1083  8ABD
1084  8ABD
1085  8ABD ED 73 9F 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1086  8AC1 ED 7B 6B 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1087  8AC5
1088  8AC5 FD E1        	pop iy
1089  8AC7 DD E1        	pop ix
1090  8AC9 E1           	pop hl
1091  8ACA
1092  8ACA ED 73 6B 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1093  8ACE
1094  8ACE ED 7B 9F 89  	ld sp,(Stack)
1095  8AD2
1096  8AD2 C9           	ret
1097  8AD3
1098  8AD3              ; --------------------------------------------------------------------------------------------------------------
1099  8AD3              ;
1100  8AD3              ;	28/12/23
1101  8AD3              ;
1102  8AD3              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1103  8AD3              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1104  8AD3
1105  8AD3              Guarda_foto_entidad_a_pintar
1106  8AD3
1107  8AD3 3A 6F 89     	ld a,(Ctrl_0)
1108  8AD6 CB 77        	bit 6,a
1109  8AD8 28 04        	jr z,5F
1110  8ADA
1111  8ADA              ;	Guarda la foto de Amadeus.
1112  8ADA
1113  8ADA              ;	call Draw
1114  8ADA              ;	call Guarda_movimiento_masticado	;! Provisional
1115  8ADA CD BF 80     	call Guarda_foto_registros
1116  8ADD C9           	ret
1117  8ADE
1118  8ADE              ; ENTIDADES!
1119  8ADE              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1120  8ADE
1121  8ADE 3A AD 89     5 ld a,(Ctrl_3)
1122  8AE1 CB 5F        	bit 3,a
1123  8AE3 28 01        	jr z,1F
1124  8AE5
1125  8AE5              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1126  8AE5
1127  8AE5              4
1128  8AE5              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1129  8AE5 C9           	ret
1130  8AE6
1131  8AE6              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1132  8AE6
1133  8AE6 3A AD 89     1 ld a,(Ctrl_3)
1134  8AE9 CB 57        	bit 2,a
1135  8AEB 20 10        	jr nz,6F
1136  8AED
1137  8AED              ; Entidad guía o fantasma ???
1138  8AED
1139  8AED 3A 74 89     	ld a,(Ctrl_2)
1140  8AF0 CB 6F        	bit 5,a
1141  8AF2 20 10        	jr nz,3F
1142  8AF4
1143  8AF4              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1144  8AF4
1145  8AF4 18 EF        	jr 4B
1146  8AF6
1147  8AF6              ; ENTIDAD_GUÍA:
1148  8AF6              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1149  8AF6              ; _guardando "movimientos_masticados".
1150  8AF6
1151  8AF6 3A AD 89     2 ld a,(Ctrl_3)
1152  8AF9 CB 57        	bit 2,a
1153  8AFB 28 07        	jr z,3F
1154  8AFD
1155  8AFD              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1156  8AFD              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1157  8AFD
1158  8AFD CB 97        6 res 2,a
1159  8AFF CB DF        	set 3,a
1160  8B01 32 AD 89     	ld (Ctrl_3),a
1161  8B04
1162  8B04
1163  8B04              ;	Esto sólo lo ejecuta una entidad guía.
1164  8B04
1165  8B04 CD 05 8F     3 	call Draw
1166  8B07 CD 94 8A     	call Guarda_movimiento_masticado
1167  8B0A CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1168  8B0D
1169  8B0D              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1170  8B0D              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1171  8B0D
1172  8B0D              ;	call Convierte_guia_en_fantasma
1173  8B0D C9           	ret
1174  8B0E
1175  8B0E              ; *************************************************************************************************************************************************************
1176  8B0E              ;
1177  8B0E              ; 8/1/23
1178  8B0E              ;
1179  8B0E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1180  8B0E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1181  8B0E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1182  8B0E
1183  8B0E              ; Destruye HL y DE !!!!!
1184  8B0E
1185  8B0E              Inicia_punteros_de_cajas
1186  8B0E
1187  8B0E 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1188  8B11 CD A6 8B         call Extrae_address
1189  8B14 22 91 89         ld (Puntero_store_caja),hl
1190  8B17 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1191  8B1A 22 95 89     	ld (Indice_restore_caja),hl
1192  8B1D CD A6 8B     	call Extrae_address
1193  8B20 22 93 89     	ld (Puntero_restore_caja),hl
1194  8B23 C9               ret
1195  8B24
1196  8B24              ; *************************************************************************************************************************************************************
1197  8B24              ;
1198  8B24              ; 8/1/23
1199  8B24              ;
1200  8B24              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1201  8B24
1202  8B24 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1203  8B27 22 B0 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1204  8B2A C9           	ret
1205  8B2B 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1206  8B2E 22 B2 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1207  8B31 C9           	ret
1208  8B32
1209  8B32              ; -------------------------------------------------------------------------------------------------------------
1210  8B32              ;
1211  8B32              ; 21/9/23
1212  8B32              ;
1213  8B32
1214  8B32              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1215  8B32
1216  8B32              Limpia_album_Amadeus
1217  8B32
1218  8B32 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1219  8B35 7E           	ld a,(hl)
1220  8B36 A7           	and a
1221  8B37 C8           	ret z
1222  8B38
1223  8B38 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1224  8B3B 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1225  8B3E 01 0B 00     	ld bc,11
1226  8B41 AF           	xor a
1227  8B42 77           	ld (hl),a
1228  8B43 ED B0        	ldir
1229  8B45
1230  8B45 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1231  8B48 22 AB 89     	ld (End_Snapshot_Amadeus),hl
1232  8B4B
1233  8B4B C9           	ret
1234  8B4C
1235  8B4C 21 63 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1236  8B4F 11 64 89     	ld de,Variables_de_borrado+1
1237  8B52 01 05 00     	ld bc,5
1238  8B55 AF           	xor a
1239  8B56 77           	ld (hl),a
1240  8B57 ED B0        	ldir
1241  8B59 C9           	ret
1242  8B5A
1243  8B5A              ; -------------------------------------------------------------------------------------------------------------
1244  8B5A              ;
1245  8B5A              ; 8/9/23
1246  8B5A              ;
1247  8B5A
1248  8B5A              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1249  8B5A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1250  8B5A
1251  8B5A              Calcula_numero_de_malotes
1252  8B5A
1253  8B5A 21 00 80     	ld hl,Album_de_fotos
1254  8B5D EB           	ex de,hl
1255  8B5E 2A A5 89     	ld hl,(Stack_snapshot)
1256  8B61
1257  8B61 06 00        	ld b,0
1258  8B63 7D           	ld a,l
1259  8B64 93           	sub e
1260  8B65 28 07        	jr z,1F
1261  8B67
1262  8B67              ; Nº de malotes no es "0".
1263  8B67
1264  8B67 D6 06        2 sub 6
1265  8B69 04           	inc b
1266  8B6A A7           	and a
1267  8B6B 20 FA        	jr nz,2B
1268  8B6D 78           	ld a,b
1269  8B6E
1270  8B6E 32 9A 89     1 ld (Numero_de_malotes),a
1271  8B71 C9           	ret
1272  8B72
1273  8B72              ; -------------------------------------------------------------------------------------------------------------
1274  8B72              ;
1275  8B72              ; 8/9/23
1276  8B72              ;
1277  8B72
1278  8B72              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1279  8B72              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1280  8B72
1281  8B72              Calcula_malotes_Amadeus
1282  8B72
1283  8B72 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1284  8B75 EB           	ex de,hl
1285  8B76 2A AB 89     	ld hl,(End_Snapshot_Amadeus)
1286  8B79
1287  8B79 7C           	ld a,h
1288  8B7A A7           	and a
1289  8B7B 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1290  8B7D
1291  8B7D 06 00        	ld b,0
1292  8B7F 7D           	ld a,l
1293  8B80 93           	sub e
1294  8B81 28 07        	jr z,1F
1295  8B83
1296  8B83              ; Nº de malotes no es "0".
1297  8B83
1298  8B83 D6 06        2 sub 6
1299  8B85 04           	inc b
1300  8B86 A7           	and a
1301  8B87 20 FA        	jr nz,2B
1302  8B89 78           	ld a,b
1303  8B8A
1304  8B8A 32 9A 89     1 ld (Numero_de_malotes),a
1305  8B8D C9           	ret
1306  8B8E
1307  8B8E              ; -------------------------------------------------------------------------------------------------------------
1308  8B8E              ;
1309  8B8E              ; 28/2/23
1310  8B8E              ;
1311  8B8E
1312  8B8E              Calcula_numero_de_disparotes
1313  8B8E
1314  8B8E 21 56 80     	ld hl,Album_de_fotos_disparos
1315  8B91 EB           	ex de,hl
1316  8B92 2A A9 89     	ld hl,(End_Snapshot_disparos)
1317  8B95
1318  8B95 06 00        	ld b,0
1319  8B97 7D           	ld a,l
1320  8B98 93           	sub e
1321  8B99 28 07        	jr z,1F
1322  8B9B
1323  8B9B              ; Nº de malotes no es "0".
1324  8B9B
1325  8B9B D6 06        2 sub 6
1326  8B9D 04           	inc b
1327  8B9E A7           	and a
1328  8B9F 20 FA        	jr nz,2B
1329  8BA1 78           	ld a,b
1330  8BA2
1331  8BA2 32 AF 89     1 ld (Numero_de_disparotes),a
1332  8BA5 C9           	ret
1333  8BA6
1334  8BA6              ; *************************************************************************************************************************************************************
1335  8BA6              ;
1336  8BA6              ; 20/10/22
1337  8BA6              ;
1338  8BA6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1339  8BA6              ;
1340  8BA6              ; Destruye el puntero y DE !!!!!
1341  8BA6
1342  8BA6 5E           Extrae_address ld e,(hl)
1343  8BA7 23           	inc hl
1344  8BA8 56           	ld d,(hl)
1345  8BA9 2B           	dec hl
1346  8BAA EB           	ex de,hl
1347  8BAB C9           	ret
1348  8BAC
1349  8BAC              ; *************************************************************************************************************************************************************
1350  8BAC              ;
1351  8BAC              ;	20/1/24
1352  8BAC              ;
1353  8BAC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1354  8BAC              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1355  8BAC              ;
1356  8BAC              ;   Destruye HL y BC !!!!!,
1357  8BAC              ;
1358  8BAC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1359  8BAC              ;					"0" ..... Izquierda.
1360  8BAC
1361  8BAC              Inicia_Puntero_objeto
1362  8BAC
1363  8BAC 3A 61 89     	ld a,(Cuad_objeto)
1364  8BAF E6 01        	and 1
1365  8BB1 F5           	push af
1366  8BB2 CC CE 8B     	call z,Inicia_puntero_objeto_izq
1367  8BB5 F1           	pop af
1368  8BB6 C8           	ret z
1369  8BB7 CD BB 8B     	call Inicia_puntero_objeto_der
1370  8BBA C9           	ret
1371  8BBB
1372  8BBB              ; Arrancamos desde la parte izquierda de la pantalla.
1373  8BBB              ; Iniciamos (Indice_Sprite_der).
1374  8BBB
1375  8BBB 2A 57 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1376  8BBE 22 5B 89     	ld (Puntero_DESPLZ_der),hl
1377  8BC1 CD A6 8B     	call Extrae_address
1378  8BC4 22 51 89     	ld (Puntero_objeto),hl
1379  8BC7
1380  8BC7 2A 59 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1381  8BCA 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
1382  8BCD C9           	ret
1383  8BCE
1384  8BCE              ; Arrancamos desde la parte derecha de la pantalla.
1385  8BCE              ; Iniciamos (Indice_Sprite_izq).
1386  8BCE
1387  8BCE 2A 59 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1388  8BD1 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
1389  8BD4 CD A6 8B     	call Extrae_address
1390  8BD7 22 51 89     	ld (Puntero_objeto),hl
1391  8BDA
1392  8BDA 2A 57 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1393  8BDD 22 5B 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1394  8BE0 C9           	ret
1395  8BE1
1396  8BE1              ; **************************************************************************************************
1397  8BE1              ;
1398  8BE1              ;	31/01/24
1399  8BE1              ;
1400  8BE1              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1401  8BE1
1402  8BE1              Restore_entidad
1403  8BE1
1404  8BE1 2A 91 89     	ld hl,(Puntero_store_caja)
1405  8BE4 11 4C 89     	ld de,Bandeja_DRAW
1406  8BE7 7E           	ld a,(hl)
1407  8BE8 12           	ld (de),a
1408  8BE9 23           	inc hl 											; (Tipo).
1409  8BEA
1410  8BEA 11 53 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1411  8BED 01 02 00     	ld bc,2
1412  8BF0 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1413  8BF2
1414  8BF2 13           	inc de
1415  8BF3 7E           	ld a,(hl)
1416  8BF4 12           	ld (de),a 										; Transferimos (Attr).
1417  8BF5 23           	inc hl
1418  8BF6
1419  8BF6 11 62 89     	ld de,Impacto
1420  8BF9
1421  8BF9 7E           	ld a,(hl)
1422  8BFA 12           	ld (de),a 										; Transferimos (Impacto).
1423  8BFB 23           	inc hl
1424  8BFC
1425  8BFC 13           	inc de
1426  8BFD
1427  8BFD 01 06 00     	ld bc,6
1428  8C00 ED B0        	ldir
1429  8C02
1430  8C02 01 07 00     	ld bc,7
1431  8C05 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1432  8C07              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1433  8C07 11 74 89     	ld de,Ctrl_2
1434  8C0A
1435  8C0A 7E           	ld a,(hl)
1436  8C0B 12           	ld (de),a 										; Transferimos (Ctrl_2).
1437  8C0C
1438  8C0C C9           	ret
1439  8C0D
1440  8C0D              ; **************************************************************************************************
1441  8C0D              ;
1442  8C0D              ;	08/05/23
1443  8C0D              ;
1444  8C0D              ;	Incrementamos los dos punteros de entidades. (+1).
1445  8C0D
1446  8C0D              Incrementa_punteros_de_cajas
1447  8C0D
1448  8C0D 2A 93 89     	ld hl,(Puntero_restore_caja)
1449  8C10 22 91 89     	ld (Puntero_store_caja),hl
1450  8C13 2A 95 89     	ld hl,(Indice_restore_caja)
1451  8C16 23           	inc hl
1452  8C17 23           	inc hl
1453  8C18 22 95 89     	ld (Indice_restore_caja),hl
1454  8C1B CD A6 8B         call Extrae_address
1455  8C1E 22 93 89         ld (Puntero_restore_caja),hl
1456  8C21 C9               ret
1457  8C22
1458  8C22              ; **************************************************************************************************
1459  8C22              ;
1460  8C22              ;	21/12/23
1461  8C22              ;
1462  8C22              ;	Restore_Amadeus
1463  8C22              ;
1464  8C22              ;	Cargamos en DRAW los parámetros de Amadeus.
1465  8C22              ;
1466  8C22
1467  8C22 E5           Restore_Amadeus	push hl
1468  8C23 D5           	push de
1469  8C24 C5            	push bc
1470  8C25 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1471  8C28 11 4C 89     	ld de,Bandeja_DRAW
1472  8C2B 01 2A 00     	ld bc,42
1473  8C2E ED B0        	ldir
1474  8C30 C1           	pop bc
1475  8C31 D1           	pop de
1476  8C32 E1           	pop hl
1477  8C33 C9           	ret
1478  8C34
1479  8C34              ; *************************************************************************************************************************************************************
1480  8C34              ;
1481  8C34              ;	21/12/23
1482  8C34              ;
1483  8C34              ;	Store_Amadeus
1484  8C34              ;
1485  8C34              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1486  8C34              ;
1487  8C34              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1488  8C34              ;
1489  8C34              ;	DESTRUYE: HL y BC y DE.
1490  8C34
1491  8C34 21 4C 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1492  8C37 01 2A 00     	ld bc,42
1493  8C3A ED B0        	ldir
1494  8C3C C9           	ret
1495  8C3D
1496  8C3D              ; -----------------------------------------------------------
1497  8C3D              ;
1498  8C3D              ;	21/12/23
1499  8C3D              ;
1500  8C3D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1501  8C3D              ;
1502  8C3D              ;	Destruye: HL,BC,DE,A
1503  8C3D
1504  8C3D 21 4C 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1505  8C40 01 29 00     	ld bc,41
1506  8C43 AF           	xor a
1507  8C44 77           	ld (hl),a
1508  8C45 11 4D 89     	ld de,Bandeja_DRAW+1
1509  8C48 ED B0        	ldir
1510  8C4A C9           	ret
1511  8C4B
1512  8C4B              ; -----------------------------------------------------------
1513  8C4B
1514  8C4B              ; Teclado.
1515  8C4B
1516  8C4B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1517  8C4D DB FE        	in a,($fe)
1518  8C4F E6 01        	and $01
1519  8C51 28 02        	jr z,1f
1520  8C53 18 F6        	jr Pulsa_ENTER
1521  8C55 C9           1 ret
1522  8C56
1523  8C56              ; **************************************************************************************************
1524  8C56              ;
1525  8C56              ; Temporización.
1526  8C56
1527  8C56              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1528  8C56              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1529  8C56              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1530  8C56              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1531  8C56
1532  8C56              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1533  8C56              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1534  8C56              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1535  8C56
1536  8C56              ; A partir de $4f61 no hace falta DELAY.
1537  8C56
1538  8C56              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1539  8C56
1540  8C56 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1541  8C59 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1542  8C5A 78           	LD A,B
1543  8C5B A7           	AND A
1544  8C5C 20 FB        	JR NZ,wait
1545  8C5E C9           	RET
1546  8C5F
1547  8C5F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1548  8C5F              ;
1549  8C5F              ;	5/3/23
1550  8C5F              ;
1551  8C5F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1552  8C5F
1553  8C5F              Movimiento_Amadeus
1554  8C5F
1555  8C5F              ; Disparo.
1556  8C5F
1557  8C5F 3A C5 89     	ld a,(Disparo_Amadeus)
1558  8C62 A7           	and a
1559  8C63 20 02        	jr nz,1F
1560  8C65 18 15        	jr 2F
1561  8C67
1562  8C67 3E F7        1 ld a,$f7													; "5" para disparar.
1563  8C69 DB FE        	in a,($fe)
1564  8C6B E6 10        	and $10
1565  8C6D
1566  8C6D F5           	push af
1567  8C6E CC 05 9A     	call z,Genera_disparo
1568  8C71 F1           	pop af
1569  8C72 20 08        	jr nz,2F
1570  8C74
1571  8C74 3A C5 89     	ld a,(Disparo_Amadeus)
1572  8C77 EE 01        	xor 1
1573  8C79 32 C5 89     	ld (Disparo_Amadeus),a
1574  8C7C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1575  8C7E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1576  8C80 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1577  8C82 CC D8 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1578  8C85
1579  8C85 3E F7        	ld a,$f7
1580  8C87 DB FE        	in a,($fe)
1581  8C89 E6 01        	and $01
1582  8C8B C8           	ret z
1583  8C8C
1584  8C8C 3E F7        	ld a,$f7
1585  8C8E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1586  8C90 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1587  8C92 CC B5 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1588  8C95 C9           	ret
1589  8C96
1590  8C96              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1591  8C96              ;
1592  8C96              ;	Rutina provisional para que los malotes cagen balas.
1593  8C96
1594  8C96              Detecta_disparo_entidad
1595  8C96
1596  8C96 3A C8 89     	ld a,(Disparo_entidad)
1597  8C99 A7           	and a
1598  8C9A C8           	ret z
1599  8C9B
1600  8C9B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1601  8C9B
1602  8C9B              ;	ld a,$7f				; Detecta SPACE.
1603  8C9B              ;	in a,($fe)
1604  8C9B              ;	and 1
1605  8C9B              ;	ret nz
1606  8C9B
1607  8C9B CD 05 9A     	call Genera_disparo
1608  8C9E C9           	ret
1609  8C9F
1610  8C9F              ; ----------------------------------------------------------------------
1611  8C9F              ;
1612  8C9F              ;	8/9/23
1613  8C9F
1614  8C9F 2A AB 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1615  8CA2 2B            	dec hl
1616  8CA3 7E           	ld a,(hl)
1617  8CA4 A7           	and a
1618  8CA5 C8           	ret z										; Salimos si es álbum está vacío.
1619  8CA6
1620  8CA6 11 68 89     	ld de,Variables_de_borrado+5
1621  8CA9 01 06 00     	ld bc,6
1622  8CAC ED B8        	lddr
1623  8CAE C9           	ret
1624  8CAF
1625  8CAF              ; ----------------------------------------------------------------------
1626  8CAF              ;
1627  8CAF              ;	9/9/23
1628  8CAF
1629  8CAF              Repone_datos_de_borrado_Amadeus
1630  8CAF
1631  8CAF 21 63 89     	ld hl,Variables_de_borrado
1632  8CB2 11 AC 80     	ld de,Album_de_fotos_Amadeus
1633  8CB5 01 06 00     	ld bc,6
1634  8CB8 ED B0        	ldir
1635  8CBA
1636  8CBA EB           	ex de,hl
1637  8CBB 22 AB 89     	ld (End_Snapshot_Amadeus),hl
1638  8CBE
1639  8CBE C9           	ret
1640  8CBF
1641  8CBF              ; ----------------------------------------------------------------------
1642  8CBF              ;
1643  8CBF              ;	27/10/23
1644  8CBF              ;
1645  8CBF
1646  8CBF              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1647  8CBF              ;	_ Album_de_fotos correspondiente.
1648  8CBF
1649  8CBF              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1650  8CBF              ;	_ durante el proceso de escritura.
1651  8CBF
1652  8CBF              Repone_datos_de_borrado
1653  8CBF
1654  8CBF ED 5B A5 89  	ld de,(Stack_snapshot)
1655  8CC3 21 63 89     	ld hl,Variables_de_borrado
1656  8CC6 01 06 00     	ld bc,6
1657  8CC9 ED B0        	ldir
1658  8CCB
1659  8CCB EB           	ex de,hl
1660  8CCC 22 A5 89     	ld (Stack_snapshot),hl
1661  8CCF
1662  8CCF C9           	ret
1663  8CD0
1664  8CD0              ; --------------------------------------------------------------------------------------
1665  8CD0
1666  8CD0              Pinta_Amadeus
1667  8CD0
1668  8CD0 CD 72 8B        	call Calcula_malotes_Amadeus
1669  8CD3 CD 9E 92     	call Extrae_foto_Amadeus
1670  8CD6 CD 32 8B     	call Limpia_album_Amadeus
1671  8CD9
1672  8CD9 C9           	ret
1673  8CDA
1674  8CDA              Pinta_entidades
1675  8CDA
1676  8CDA              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1677  8CDA
1678  8CDA 3A AD 89     	ld a,(Ctrl_3)
1679  8CDD CB 47        	bit 0,a
1680  8CDF C8           	ret z
1681  8CE0
1682  8CE0 3A AD 89     	ld a,(Ctrl_3)
1683  8CE3 CB 57        	bit 2,a
1684  8CE5 28 0C        	jr z,1F
1685  8CE7
1686  8CE7              ;	Sólo queremos borrar. Estamos reiniciando la entidad. Hemos de modificar (Stack_snapshot) para que la rutina [Extrae_foto_entidades] calcule el nº de malotes correctamente.
1687  8CE7
1688  8CE7 2A A5 89     	ld hl,(Stack_snapshot)
1689  8CEA 01 06 00     	ld bc,6
1690  8CED A7           	and a
1691  8CEE ED 42        	sbc hl,bc
1692  8CF0 22 A5 89     	ld (Stack_snapshot),hl
1693  8CF3
1694  8CF3 CD 5A 8B     1 call Calcula_numero_de_malotes
1695  8CF6 CD 1C 92     	call Extrae_foto_entidades
1696  8CF9 CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1697  8CFC
1698  8CFC C9           	ret
1699  8CFD
1700  8CFD              ; -----------------------------------------------------------------------------------
1701  8CFD              ;
1702  8CFD              ;	10/12/23
1703  8CFD              ;
1704  8CFD              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1705  8CFD
1706  8CFD              Actualiza_relojes
1707  8CFD
1708  8CFD 3A AD 89     	ld a,(Ctrl_3)
1709  8D00 CB 47        	bit 0,a
1710  8D02 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1711  8D03
1712  8D03 21 C0 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1713  8D06 34           	inc (hl)
1714  8D07
1715  8D07 34           	inc (hl)
1716  8D08 35           	dec (hl)
1717  8D09 C0           	ret nz
1718  8D0A
1719  8D0A 21 C1 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1720  8D0D 34           	inc (hl)
1721  8D0E C9           	ret
1722  8D0F
1723  8D0F              ; ---------------------------------------------------------------
1724  8D0F
1725  8D0F              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D0F              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D0F              ;
   3+ 8D0F              ;   19/1/24
   4+ 8D0F              ;
   5+ 8D0F              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D0F              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D0F              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D0F              ;	_ de la 1ª entidad del Nivel.
   9+ 8D0F              ;
  10+ 8D0F              ;	MODIFICA: HL,DE y A.
  11+ 8D0F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8D0F
  13+ 8D0F              Inicializa_Nivel
  14+ 8D0F
  15+ 8D0F 2A CC 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8D12 CD A6 8B     	call Extrae_address
  17+ 8D15 7E           	ld a,(hl)
  18+ 8D16 32 97 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8D19 23           	inc hl
  20+ 8D1A CD 27 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8D1D 22 CE 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D20 CD 30 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D23              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D23 CD 41 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8D26 C9           	ret
  26+ 8D27
  27+ 8D27              ; ----------------------
  28+ 8D27
  29+ 8D27 11 76 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8D2A 01 04 00     	ld bc,4
  31+ 8D2D ED B0        	ldir
  32+ 8D2F C9           	ret
  33+ 8D30
  34+ 8D30 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8D31 CD 81 8E         call Calcula_salto_en_BC
  36+ 8D34 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8D37 A7               and a
  38+ 8D38 ED 4A            adc hl,bc
  39+ 8D3A CD A6 8B         call Extrae_address
  40+ 8D3D 22 82 89         ld (Puntero_indice_mov),hl
  41+ 8D40 C9               ret
  42+ 8D41
  43+ 8D41 3A 4C 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8D44 CD 81 8E     	call Calcula_salto_en_BC
  45+ 8D47 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8D4A A7               and a
  47+ 8D4B ED 4A            adc hl,bc
  48+ 8D4D CD A6 8B         call Extrae_address
  49+ 8D50 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8D53 C9           	ret
  51+ 8D54
  52+ 8D54              ;---------------------------------------------------------------------------------------------------------------
  53+ 8D54              ;
  54+ 8D54              ;   5/1/24
  55+ 8D54              ;
  56+ 8D54              ;	Destruye A,BC,HL,DE
  57+ 8D54
  58+ 8D54              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8D54              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8D54
  61+ 8D54              Inicia_Entidades
  62+ 8D54
  63+ 8D54              ; Preparamos los punteros de las cajas de entidades:
  64+ 8D54
  65+ 8D54 CD 0E 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8D57              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8D57 CD E8 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8D5A
  69+ 8D5A 2A CE 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8D5D
  71+ 8D5D 22 CE 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8D60
  73+ 8D60 CD 2F 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8D63
  75+ 8D63 2A CE 89     	ld hl,(Datos_de_nivel)
  76+ 8D66
  77+ 8D66              ; En este punto:
  78+ 8D66              ;
  79+ 8D66              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8D66              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8D66
  82+ 8D66 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8D67
  84+ 8D67 7E           	ld a,(hl)
  85+ 8D68 CD A4 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8D6B
  87+ 8D6B CD 93 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8D6E
  89+ 8D6E              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8D6E
  91+ 8D6E CD 51 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8D71
  93+ 8D71 A7           	and a
  94+ 8D72 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8D74
  96+ 8D74              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8D74
  98+ 8D74              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8D74              ;	_ de este tipo de entidad.
 100+ 8D74
 101+ 8D74 CD EF 99     	call Situa_en_contador_general_de_mov_masticados
 102+ 8D77 CD FC 99     	call Transfiere_datos_de_contadores
 103+ 8D7A
 104+ 8D7A 18 06        	jr 4F
 105+ 8D7C
 106+ 8D7C CD 68 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8D7F
 108+ 8D7F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8D7F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8D7F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8D7F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8D7F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8D7F
 114+ 8D7F CD 0F 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8D82              ;																; _ Mov_masticados ya generados.
 116+ 8D82 CD BE 8D     4 call Guarda_foto_de_mov_masticado
 117+ 8D85
 118+ 8D85              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8D85
 120+ 8D85 2A 69 89     	ld hl,(Puntero_de_impresion)
 121+ 8D88 CD 06 9F     	call Genera_coordenadas
 122+ 8D8B CD BA 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8D8E CD C8 8D     	call Limpiamos_bandeja_DRAW
 124+ 8D91 CD 0D 8C     	call Incrementa_punteros_de_cajas
 125+ 8D94
 126+ 8D94              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8D94              ; _ entidad del Nivel.
 128+ 8D94
 129+ 8D94 3A AE 89     	ld a,(Ctrl_4)
 130+ 8D97 E6 F0        	and $f0
 131+ 8D99 32 AE 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8D9C
 133+ 8D9C              ; Siguiente entidad del Nivel.
 134+ 8D9C
 135+ 8D9C 2A CE 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8D9F 23           	inc hl 														; _ entidad del Nivel.
 137+ 8DA0
 138+ 8DA0 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8DA1
 140+ 8DA1 10 BA        	djnz 2B
 141+ 8DA3
 142+ 8DA3 C9           	ret
 143+ 8DA4
 144+ 8DA4              ; ---------------------------------------------------------------------
 145+ 8DA4              ;
 146+ 8DA4              ;	10/02/24
 147+ 8DA4              ;
 148+ 8DA4              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8DA4              ;
 150+ 8DA4              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8DA4
 152+ 8DA4              Definicion_segun_tipo
 153+ 8DA4
 154+ 8DA4 CD 81 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8DA7 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8DAA CD 89 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8DAD C9           	ret
 158+ 8DAE
 159+ 8DAE              ; ---------------------------------------------------------------------
 160+ 8DAE              ;
 161+ 8DAE              ;	30/01/24
 162+ 8DAE
 163+ 8DAE
 164+ 8DAE              Store_Restore_cajas
 165+ 8DAE
 166+ 8DAE              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8DAE
 168+ 8DAE 2A 69 89     	ld hl,(Puntero_de_impresion)
 169+ 8DB1 CD 06 9F     	call Genera_coordenadas
 170+ 8DB4
 171+ 8DB4 CD BA 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8DB7 CD C8 8D     	call Limpiamos_bandeja_DRAW
 173+ 8DBA
 174+ 8DBA              ; 	Entidad_sospechosa. 20/4/23
 175+ 8DBA
 176+ 8DBA              ;	ld a,(Impacto)
 177+ 8DBA              ;	and a
 178+ 8DBA              ;	jr z,1F
 179+ 8DBA
 180+ 8DBA              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8DBA              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8DBA              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8DBA              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8DBA              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8DBA
 186+ 8DBA
 187+ 8DBA              ;1 ld hl,(Puntero_restore_caja)
 188+ 8DBA              ;	ld a,(hl)
 189+ 8DBA              ;	and a
 190+ 8DBA              ;	push af
 191+ 8DBA              ;	jr z,2F
 192+ 8DBA
 193+ 8DBA              ;	di
 194+ 8DBA              ;	ld de,Bandeja_DRAW
 195+ 8DBA              ;	ld bc,42
 196+ 8DBA              ;	ldir
 197+ 8DBA              ;	ei
 198+ 8DBA
 199+ 8DBA CD 0D 8C     2 call Incrementa_punteros_de_cajas
 200+ 8DBD C9           	ret
 201+ 8DBE
 202+ 8DBE
 203+ 8DBE              ; ---------------------------------------------------------------------
 204+ 8DBE              ;
 205+ 8DBE              ;	29/01/24
 206+ 8DBE
 207+ 8DBE CD BD 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 208+ 8DC1 CD BF 80     	call Guarda_foto_registros
 209+ 8DC4              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 210+ 8DC4              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 211+ 8DC4              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 212+ 8DC4              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 213+ 8DC4
 214+ 8DC4 CD D3 8D     	call Decrementa_Contador_de_mov_masticados
 215+ 8DC7 C9           	ret
 216+ 8DC8
 217+ 8DC8              ; ---------------------------------------------------------------------
 218+ 8DC8              ;
 219+ 8DC8              ;	25/01/24
 220+ 8DC8
 221+ 8DC8 21 4C 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 222+ 8DCB 06 2A        	ld b,42
 223+ 8DCD AF           	xor a
 224+ 8DCE
 225+ 8DCE 77           1 ld (hl),a
 226+ 8DCF 23           	inc hl
 227+ 8DD0 10 FC        	djnz 1B
 228+ 8DD2
 229+ 8DD2 C9           	ret
 230+ 8DD3
 231+ 8DD3              ; ---------------------------------------------------------------------
 232+ 8DD3              ;
 233+ 8DD3              ;	22/01/24
 234+ 8DD3
 235+ 8DD3 2A 6D 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 236+ 8DD6 2B           	dec hl
 237+ 8DD7
 238+ 8DD7 24           	inc h
 239+ 8DD8 25           	dec h
 240+ 8DD9
 241+ 8DD9 FC E0 8D     	call m,Reinicia_entidad_maliciosa
 242+ 8DDC
 243+ 8DDC              ;	jr nz,1F
 244+ 8DDC
 245+ 8DDC              ;	inc l
 246+ 8DDC              ;	dec l
 247+ 8DDC
 248+ 8DDC              ;	di
 249+ 8DDC              ;	jr z,$
 250+ 8DDC              ;	ei
 251+ 8DDC
 252+ 8DDC 22 6D 89     1 ld (Contador_de_mov_masticados),hl
 253+ 8DDF C9           	ret
 254+ 8DE0
 255+ 8DE0              ; ---------------------------------------------------------------------
 256+ 8DE0              ;
 257+ 8DE0              ;	10/2/24
 258+ 8DE0
 259+ 8DE0              Reinicia_entidad_maliciosa
 260+ 8DE0
 261+ 8DE0              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 262+ 8DE0
 263+ 8DE0 CD EF 99     	call Situa_en_contador_general_de_mov_masticados
 264+ 8DE3 CD FC 99     	call Transfiere_datos_de_contadores
 265+ 8DE6
 266+ 8DE6              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 267+ 8DE6
 268+ 8DE6 3A 4C 89     	ld a,(Tipo)
 269+ 8DE9 CD A4 8D     	call Definicion_segun_tipo
 270+ 8DEC
 271+ 8DEC E5           	push hl
 272+ 8DED DD E1        	pop ix
 273+ 8DEF
 274+ 8DEF DD 6E 0B     	ld l,(ix+11)
 275+ 8DF2 DD 66 0C     	ld h,(ix+12)
 276+ 8DF5
 277+ 8DF5 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 278+ 8DF8
 279+ 8DF8              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 280+ 8DF8              ;	Queremos pintar la entidad en su posición de inicio.
 281+ 8DF8
 282+ 8DF8 2A A5 89     	ld hl,(Stack_snapshot)
 283+ 8DFB 01 06 00     	ld bc,6
 284+ 8DFE A7           	and a
 285+ 8DFF ED 42        	sbc hl,bc
 286+ 8E01 22 A5 89     	ld (Stack_snapshot),hl
 287+ 8E04
 288+ 8E04 CD BD 8A     	call Cargamos_registros_con_mov_masticado
 289+ 8E07 CD BF 80     	call Guarda_foto_registros
 290+ 8E0A
 291+ 8E0A 2A 6D 89     	ld hl,(Contador_de_mov_masticados)
 292+ 8E0D 2B           	dec hl
 293+ 8E0E
 294+ 8E0E C9           	ret
 295+ 8E0F
 296+ 8E0F
 297+ 8E0F
 298+ 8E0F
 299+ 8E0F              ; ---------------------------------------------------------------------
 300+ 8E0F              ;
 301+ 8E0F              ;	22/01/24
 302+ 8E0F
 303+ 8E0F 21 AE 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 304+ 8E12 CB 46        	bit 0,(hl)
 305+ 8E14 20 0D        	jr nz,1F
 306+ 8E16 CB 4E        	bit 1,(hl)
 307+ 8E18 20 0C        	jr nz,2F
 308+ 8E1A CB 56        	bit 2,(hl)
 309+ 8E1C 20 0B        	jr nz,3F
 310+ 8E1E CB 5E        	bit 3,(hl)
 311+ 8E20 20 0A        	jr nz,4F
 312+ 8E22 C9           	ret
 313+ 8E23
 314+ 8E23 CB E6        1 set 4,(hl)
 315+ 8E25 C9           	ret
 316+ 8E26 CB EE        2 set 5,(hl)
 317+ 8E28 C9           	ret
 318+ 8E29 CB F6        3 set 6,(hl)
 319+ 8E2B C9           	ret
 320+ 8E2C CB FE        4 set 7,(hl)
 321+ 8E2E C9           	ret
 322+ 8E2F
 323+ 8E2F              ; ---------------------------------------------------------------------
 324+ 8E2F              ;
 325+ 8E2F              ;	23/01/24
 326+ 8E2F              ;
 327+ 8E2F              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 328+ 8E2F              ;
 329+ 8E2F              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 330+ 8E2F              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 331+ 8E2F              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 332+ 8E2F              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 333+ 8E2F
 334+ 8E2F              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 335+ 8E2F
 336+ 8E2F 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 337+ 8E30 3D           	dec a
 338+ 8E31 20 06        	jr nz,1F
 339+ 8E33
 340+ 8E33              ; --- Tipo_1
 341+ 8E33
 342+ 8E33 21 AE 89     	ld hl,Ctrl_4
 343+ 8E36 CB C6        	set 0,(hl)
 344+ 8E38 C9           	ret
 345+ 8E39
 346+ 8E39 3D           1 dec a
 347+ 8E3A 20 06        	jr nz,2F
 348+ 8E3C
 349+ 8E3C              ; --- Tipo_2
 350+ 8E3C
 351+ 8E3C 21 AE 89     	ld hl,Ctrl_4
 352+ 8E3F CB CE        	set 1,(hl)
 353+ 8E41 C9           	ret
 354+ 8E42
 355+ 8E42 3D           2 dec a
 356+ 8E43 20 06        	jr nz,3F
 357+ 8E45
 358+ 8E45              ; --- Tipo_3
 359+ 8E45
 360+ 8E45 21 AE 89     	ld hl,Ctrl_4
 361+ 8E48 CB D6        	set 2,(hl)
 362+ 8E4A C9           	ret
 363+ 8E4B
 364+ 8E4B              ; --- Tipo_3
 365+ 8E4B
 366+ 8E4B 21 AE 89     3 ld hl,Ctrl_4
 367+ 8E4E CB D6        	set 2,(hl)
 368+ 8E50 C9           	ret
 369+ 8E51
 370+ 8E51              ; ---------------------------------------------------------------------
 371+ 8E51              ;
 372+ 8E51              ;	22/01/24
 373+ 8E51
 374+ 8E51 21 AE 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 375+ 8E54 CB 46        	bit 0,(hl)
 376+ 8E56 20 0E        	jr nz,1F
 377+ 8E58
 378+ 8E58 CB 4E        	bit 1,(hl)
 379+ 8E5A 20 10        	jr nz,2F
 380+ 8E5C
 381+ 8E5C CB 56        	bit 2,(hl)
 382+ 8E5E 20 12        	jr nz,3F
 383+ 8E60
 384+ 8E60 CB 5E        	bit 3,(hl)
 385+ 8E62 20 14        	jr nz,4F
 386+ 8E64 18 19        	jr 6F
 387+ 8E66
 388+ 8E66              ; Entidad_de_Tipo_1.
 389+ 8E66
 390+ 8E66 CB 66        1 bit 4,(hl)
 391+ 8E68 28 15        	jr z,6F
 392+ 8E6A 18 10        	jr 5F
 393+ 8E6C
 394+ 8E6C              ; Entidad_de_Tipo_2.
 395+ 8E6C
 396+ 8E6C CB 6E        2 bit 5,(hl)
 397+ 8E6E 28 0F        	jr z,6F
 398+ 8E70 18 0A        	jr 5F
 399+ 8E72
 400+ 8E72              ; Entidad_de_Tipo_3.
 401+ 8E72
 402+ 8E72 CB 76        3 bit 6,(hl)
 403+ 8E74 28 09        	jr z,6F
 404+ 8E76 18 04        	jr 5F
 405+ 8E78
 406+ 8E78              ; Entidad_de_Tipo_4.
 407+ 8E78
 408+ 8E78 CB 7E        4 bit 7,(hl)
 409+ 8E7A 28 03        	jr z,6F
 410+ 8E7C
 411+ 8E7C              ; Esta entidad TIENE MOV_MASTICADOS.
 412+ 8E7C
 413+ 8E7C AF           5 xor a
 414+ 8E7D 3C           	inc a
 415+ 8E7E C9           	ret
 416+ 8E7F
 417+ 8E7F              ; Esta entidad NO TIENE MOV_MASTICADOS.
 418+ 8E7F
 419+ 8E7F AF           6 xor a
 420+ 8E80 C9           	ret
 421+ 8E81
 422+ 8E81              ;	------------------------------------------------------------------------------------
 423+ 8E81              ;
 424+ 8E81              ;	12/01/24
 425+ 8E81              ;
 426+ 8E81              ;	INPUTS:	A contiene el (Tipo) de entidad.
 427+ 8E81              ;
 428+ 8E81              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 429+ 8E81              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 430+ 8E81
 431+ 8E81 CB 27        Calcula_salto_en_BC sla a
 432+ 8E83 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 433+ 8E85 4F           	ld c,a
 434+ 8E86 06 00        	ld b,0
 435+ 8E88 C9           	ret
 436+ 8E89
 437+ 8E89              ; ------------------------------------------------------------------
 438+ 8E89              ;
 439+ 8E89              ;	19/1/24
 440+ 8E89              ;
 441+ 8E89              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 442+ 8E89              ;	Actualiza (Datos_de_entidad) con esa dirección.
 443+ 8E89
 444+ 8E89 A7           Situa_en_datos_de_definicion and a
 445+ 8E8A ED 4A        	adc hl,bc
 446+ 8E8C CD A6 8B     	call Extrae_address
 447+ 8E8F 22 9D 89         ld (Datos_de_entidad),hl
 448+ 8E92 C9           	ret
 449+ 8E93
 450+ 8E93              ; ------------------------------------------------------------------
 451+ 8E93
 452+ 8E93              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 453+ 8E93              ; 	inc de
 454+ 8E93              ; 	inc de
 455+ 8E93              ; 	ex de,hl
 456+ 8E93              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 457+ 8E93              ; 	ret
 458+ 8E93
 459+ 8E93              ; ----------------------------------------------------------------------------------------------------------
 460+ 8E93              ;
 461+ 8E93              ;	31/1/24
 462+ 8E93              ;
 463+ 8E93              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 464+ 8E93              ;	_ de entidad.
 465+ 8E93              ;
 466+ 8E93              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 467+ 8E93              ;
 468+ 8E93              ;
 469+ 8E93              ;	MODIFICA: HL,DE y BC
 470+ 8E93
 471+ 8E93
 472+ 8E93              Definicion_de_entidad_a_bandeja_DRAW
 473+ 8E93
 474+ 8E93 11 4C 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 475+ 8E96 01 03 00     	ld bc,3
 476+ 8E99 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 477+ 8E9B              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 478+ 8E9B 11 56 89     	ld de,Attr									; DE en (Attr).
 479+ 8E9E 01 05 00     	ld bc,5
 480+ 8EA1 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 481+ 8EA3              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 482+ 8EA3 11 5F 89     	ld de,Posicion_inicio
 483+ 8EA6 01 03 00     	ld bc,3
 484+ 8EA9 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 485+ 8EAB              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 486+ 8EAB 11 6B 89     	ld de,Puntero_de_almacen_de_mov_masticados
 487+ 8EAE 01 02 00     	ld bc,2
 488+ 8EB1 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 489+ 8EB3
 490+ 8EB3 11 75 89     	ld de,Frames_explosion
 491+ 8EB6 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 492+ 8EB8 12           	ld (de),a 									; Vuelco (Frames_explosion).
 493+ 8EB9
 494+ 8EB9 C9           	ret
 495+ 8EBA
 496+ 8EBA              ; ----------------------------------------------------------------------------------------------------------
 497+ 8EBA              ;
 498+ 8EBA              ;	22/01/24
 499+ 8EBA              ;
 500+ 8EBA              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 501+ 8EBA              ;
 502+ 8EBA              ;	Las cajas contienen entidades iniciadas:
 503+ 8EBA              ;
 504+ 8EBA              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 505+ 8EBA              ;
 506+ 8EBA              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 507+ 8EBA              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 508+ 8EBA              ;
 509+ 8EBA              ;	MODIFICA: HL,DE y BC
 510+ 8EBA
 511+ 8EBA 21 4C 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 512+ 8EBD ED 5B 91 89  	ld de,(Puntero_store_caja)
 513+ 8EC1 7E           	ld a,(hl)
 514+ 8EC2 12           	ld (de),a
 515+ 8EC3 13           	inc de 													; (Tipo).
 516+ 8EC4
 517+ 8EC4 21 53 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 518+ 8EC7 01 02 00     	ld bc,2
 519+ 8ECA ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 520+ 8ECC              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 521+ 8ECC 23           	inc hl
 522+ 8ECD 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 523+ 8ECE 12           	ld (de),a
 524+ 8ECF 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 525+ 8ED0
 526+ 8ED0 21 62 89     	ld hl,Impacto
 527+ 8ED3 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 528+ 8ED4 12           	ld (de),a
 529+ 8ED5 13           	inc de 													; (Impacto), volcado a la caja.
 530+ 8ED6              ;															; DE situado ahora en (Variables_de_borrado).
 531+ 8ED6 23           	inc hl
 532+ 8ED7 01 06 00     	ld bc,6
 533+ 8EDA ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 534+ 8EDC              ; 															; DE situado ahora en (Puntero_de_impresión).
 535+ 8EDC 01 07 00     	ld bc,7
 536+ 8EDF ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 537+ 8EE1              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 538+ 8EE1              ;															; HL apunta ahora a (Columnas).
 539+ 8EE1 21 74 89     	ld hl,Ctrl_2
 540+ 8EE4 7E           	ld a,(hl)
 541+ 8EE5 12           	ld (de),a 												; Volcamos (Ctrl_2).
 542+ 8EE6 13           	inc de
 543+ 8EE7
 544+ 8EE7 C9           	ret
 545+ 8EE8
 546+ 8EE8              ;---------------------------------------------------------------------------------------------------------------
 547+ 8EE8              ;
 548+ 8EE8              ;	5/1/24
 549+ 8EE8              ;
 550+ 8EE8              ;	INICIALIZA (Numero_parcial_de_entidades).
 551+ 8EE8              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 552+ 8EE8              ;
 553+ 8EE8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 554+ 8EE8              ;
 555+ 8EE8              ;	(Numero_parcial_de_entidades)="7".
 556+ 8EE8              ;
 557+ 8EE8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 558+ 8EE8              ;
 559+ 8EE8              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 560+ 8EE8              ;
 561+ 8EE8              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 562+ 8EE8              ;	MODIFICA: A y B.
 563+ 8EE8              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 564+ 8EE8
 565+ 8EE8              Inicializa_Numero_parcial_de_entidades
 566+ 8EE8
 567+ 8EE8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 568+ 8EE8
 569+ 8EE8 3A 97 89     	ld a,(Numero_de_entidades)
 570+ 8EEB A7           	and a
 571+ 8EEC
 572+ 8EEC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 573+ 8EEC              ;	jr z,$
 574+ 8EEC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8EEC
 576+ 8EEC 20 03        	jr nz,3F
 577+ 8EEE
 578+ 8EEE              ; ---------- ---------- ----------
 579+ 8EEE
 580+ 8EEE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 581+ 8EEE              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 582+ 8EEE
 583+ 8EEE CD 0F 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 584+ 8EF1
 585+ 8EF1              ; ---------- ---------- ----------
 586+ 8EF1
 587+ 8EF1 3A 97 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 588+ 8EF4 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 589+ 8EF6 38 08        	jr c,1F
 590+ 8EF8
 591+ 8EF8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 592+ 8EF8              ; Actualizamos variables.
 593+ 8EF8
 594+ 8EF8 3E 07        	ld a,7
 595+ 8EFA 32 98 89     	ld (Numero_parcial_de_entidades),a
 596+ 8EFD 47           	ld b,a
 597+ 8EFE 18 04        	jr 2F
 598+ 8F00
 599+ 8F00              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 600+ 8F00              ; (Numero_de_entidades)="0".
 601+ 8F00
 602+ 8F00 32 98 89     1 ld (Numero_parcial_de_entidades),a
 603+ 8F03 47           	ld b,a
 604+ 8F04 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1726  8F05              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F05              ; ******************************************************************************************************************************************************************************************
   2+ 8F05              ;
   3+ 8F05              ; 26/06/23
   4+ 8F05              ;
   5+ 8F05              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F05
   7+ 8F05              Draw
   8+ 8F05
   9+ 8F05 CD F2 91     	call Prepara_draw
  10+ 8F08 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8F09 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8F0A 28 05        	jr z,2F
  13+ 8F0C
  14+ 8F0C 3A 61 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8F0F 18 0C        	jr 1F
  16+ 8F11
  17+ 8F11 2A 5F 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F14 22 4F 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F17 CD A6 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F1A              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F1A
  22+ 8F1A CD 53 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F1D
  24+ 8F1D 3A 6F 89     1 ld a,(Ctrl_0)
  25+ 8F20 CB 6F        	bit 5,a
  26+ 8F22 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F24
  28+ 8F24 CD 3C 8F     	call Comprueba_limite_horizontal
  29+ 8F27 CD CC 8F     	call Comprueba_limite_vertical
  30+ 8F2A
  31+ 8F2A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F2A              ; -----------------------
  33+ 8F2A              ; -----------------------
  34+ 8F2A              ; -----------------------
  35+ 8F2A
  36+ 8F2A CD 22 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F2D CD 59 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F30 CD B8 91     	call Define_rutina_de_impresion
  39+ 8F33
  40+ 8F33 3A 6F 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8F36 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8F38 32 6F 89     	ld (Ctrl_0),a
  43+ 8F3B
  44+ 8F3B C9           	ret
  45+ 8F3C
  46+ 8F3C              ; *******************************************************************************************************************************************************************************************
  47+ 8F3C              ;	21/01/23
  48+ 8F3C              ;
  49+ 8F3C              ; 	Comprueba_limite_horizontal.
  50+ 8F3C              ;
  51+ 8F3C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8F3C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8F3C              ;
  54+ 8F3C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8F3C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8F3C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8F3C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8F3C
  59+ 8F3C
  60+ 8F3C
  61+ 8F3C 3A 6F 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8F3F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8F41 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8F43 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8F45 32 6F 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8F48 18 09            jr 6F
  67+ 8F4A CB 5F        1 bit 3,a
  68+ 8F4C 28 0A            jr z,2F
  69+ 8F4E E6 F7            and $f7
  70+ 8F50 32 6F 89         ld (Ctrl_0),a
  71+ 8F53 CD A6 90     6 call Inicializacion
  72+ 8F56 18 5B            jr 5F
  73+ 8F58 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F59
  75+ 8F59              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F59              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F59
  78+ 8F59 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F5A 2A 71 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F5D CD E8 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F60 67           	ld h,a
  82+ 8F61 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F62 CD E8 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F65 67           	ld h,a
  85+ 8F66 A7           	and a
  86+ 8F67 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F69 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F6A 3A 61 89     	ld a,(Cuad_objeto)
  89+ 8F6D FE 02        	cp 2
  90+ 8F6F 38 1E        	jr c,3F
  91+ 8F71 28 1C        	jr z,3F
  92+ 8F73 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F74 28 23            jr z,7F
  94+ 8F76 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F78 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F7A E1           	pop hl
  97+ 8F7B
  98+ 8F7B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F7B              ; _para indicar con E="2" en caso necesario.
 100+ 8F7B
 101+ 8F7B E5               push hl
 102+ 8F7C C5               push bc
 103+ 8F7D CD E8 9E     	call calcula_tercio
 104+ 8F80 FE 01        	cp 1
 105+ 8F82 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F84 CD B4 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F87 28 26            jr z,9F
 108+ 8F89 38 24            jr c,9F
 109+ 8F8B 1E 00        11 ld e,0
 110+ 8F8D 18 22            jr 8F
 111+ 8F8F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F90 28 07        	jr z, 7F
 113+ 8F92 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8F94 1E 00         	ld e,0
 115+ 8F96 E1           	pop hl
 116+ 8F97 18 04        	jr 4F
 117+ 8F99 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8F9B 18 15            jr 10F
 119+ 8F9D
 120+ 8F9D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8F9D              ; _para indicar con E="2" en caso necesario.
 122+ 8F9D
 123+ 8F9D E5           4 push hl
 124+ 8F9E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8F9F CD E8 9E     	call calcula_tercio
 126+ 8FA2 FE 01        	cp 1
 127+ 8FA4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8FA6 CD B4 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8FA9 28 04            jr z,9F
 130+ 8FAB 30 02            jr nc,9F
 131+ 8FAD 18 02        	jr 8F
 132+ 8FAF 1E 02        9 ld e,2
 133+ 8FB1 C1           8 pop bc
 134+ 8FB2 E1           10 pop hl
 135+ 8FB3 C9           5 ret
 136+ 8FB4
 137+ 8FB4              ; --------------------
 138+ 8FB4              ;
 139+ 8FB4              ; 25/08/22
 140+ 8FB4
 141+ 8FB4 CD E8 9E     Comprueba_centro call calcula_tercio
 142+ 8FB7 67               ld h,a
 143+ 8FB8 08           	ex af,af
 144+ 8FB9 FE 02        	cp 2
 145+ 8FBB 38 07        	jr c,1F
 146+ 8FBD 28 05        	jr z,1F
 147+ 8FBF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8FC2 18 03        	jr 2F
 149+ 8FC4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8FC7 08           2 ex af,af
 151+ 8FC8 A7               and a
 152+ 8FC9 ED 42            sbc hl,bc
 153+ 8FCB C9               ret
 154+ 8FCC
 155+ 8FCC              ; *********************************************************************************************************************************************************************************************
 156+ 8FCC              ;
 157+ 8FCC              ;   16/8/22
 158+ 8FCC              ;
 159+ 8FCC              ;	Comprueba_limite_vertical
 160+ 8FCC              ;
 161+ 8FCC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8FCC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8FCC              ;
 164+ 8FCC
 165+ 8FCC 2A 4F 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8FCF 7D           	ld a,l
 167+ 8FD0 E6 1F        	and $1F
 168+ 8FD2 57           	ld d,a
 169+ 8FD3 3A 73 89     	ld a,(Limite_vertical)
 170+ 8FD6 BA           	cp d 											; Límite - Posición.
 171+ 8FD7 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8FD8 3A 61 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8FDB CB 47        	bit 0,a
 174+ 8FDD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8FDF
 176+ 8FDF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8FDF
 178+ 8FDF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8FE0 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8FE2
 181+ 8FE2              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8FE2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8FE2
 184+ 8FE2 3A 53 89         ld a,(Coordenada_X)
 185+ 8FE5 16 0F            ld d,Centro_izquierda
 186+ 8FE7 A7               and a
 187+ 8FE8 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8FE9 28 1E            jr z,3F
 189+ 8FEB 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8FED              ;                                                    ; _salimos sin modificar nada.
 191+ 8FED 18 0E            jr 2F
 192+ 8FEF 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8FF0 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8FF2
 195+ 8FF2              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8FF2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8FF2
 198+ 8FF2 3A 53 89         ld a,(Coordenada_X)
 199+ 8FF5 16 10            ld d,Centro_derecha
 200+ 8FF7 A7               and a
 201+ 8FF8 92               sub d
 202+ 8FF9 28 0E            jr z,3F
 203+ 8FFB 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8FFD              ;                                                    ; _salimos sin modificar nada.
 205+ 8FFD CB 43        2 bit 0,e
 206+ 8FFF 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9001 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9002 CD 96 90         call Modificaccionne
 209+ 9005 C1           	pop bc
 210+ 9006 CD A6 90         call Inicializacion
 211+ 9009 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 900A
 213+ 900A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 900A
 215+ 900A C5           4 push bc
 216+ 900B 01 4E 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 900E 0A           	ld a,(bc)
 218+ 900F 3D           	dec a
 219+ 9010 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9011 7D           	ld a,l
 221+ 9012 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9013 CB 47        	bit 0,a
 223+ 9015 28 03        	jr z,5F
 224+ 9017 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9018 18 2E        	jr 7F
 226+ 901A
 227+ 901A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 901A
 229+ 901A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 901B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 901C 3A 6F 89     	ld a,(Ctrl_0)
 232+ 901F CB 4F        	bit 1,a
 233+ 9021 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9023 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9024
 236+ 9024              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9024
 238+ 9024 1C               inc e
 239+ 9025 1D               dec e
 240+ 9026 20 07            jr nz,12F
 241+ 9028 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9029 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 902A 22 4F 89     	ld (Posicion_actual),hl
 244+ 902D 18 44        13 jr 9F
 245+ 902F CB 43        12 bit 0,e
 246+ 9031 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9033              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9033 C1           	pop bc
 249+ 9034 18 D3        	jr 3B
 250+ 9036 80           14 add b
 251+ 9037 6F               ld l,a
 252+ 9038 22 4F 89     	ld (Posicion_actual),hl
 253+ 903B CD 96 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 903E 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9040 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9042 32 6F 89         ld (Ctrl_0),a
 257+ 9045 F1           	pop af
 258+ 9046 18 2B        	jr 9F
 259+ 9048
 260+ 9048              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9048
 262+ 9048 F5           7 push af
 263+ 9049 3A 6F 89     	ld a,(Ctrl_0)
 264+ 904C CB 47        	bit 0,a
 265+ 904E 20 1D        	jr nz,8F
 266+ 9050 F1           	pop af
 267+ 9051
 268+ 9051              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9051
 270+ 9051 1C           	inc e
 271+ 9052 1D               dec e
 272+ 9053 20 07            jr nz,10F
 273+ 9055 90           	sub b
 274+ 9056 6F               ld l,a
 275+ 9057 22 4F 89     	ld (Posicion_actual),hl
 276+ 905A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 905C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 905C CB 43        10 bit 0,e
 279+ 905E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9060              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9060 C1           	pop bc
 282+ 9061 18 A6        	jr 3B
 283+ 9063 90           16 sub b
 284+ 9064 6F               ld l,a
 285+ 9065 22 4F 89     	ld (Posicion_actual),hl
 286+ 9068 CD 96 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 906B 18 06            jr 9F
 288+ 906D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 906F 32 6F 89         ld (Ctrl_0),a
 290+ 9072 F1           	pop af
 291+ 9073 C1           9 pop bc
 292+ 9074 1E 00        	ld e,0
 293+ 9076 CD A6 90         call Inicializacion
 294+ 9079 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 907A 08           	ex af,af
 296+ 907B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 907C 18 8B            jr 3B
 298+ 907E
 299+ 907E              ; --------------------
 300+ 907E
 301+ 907E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9080 CD 0D 92     1 call PreviousScan
 303+ 9083 10 FB            djnz 1B
 304+ 9085 22 4F 89     	ld (Posicion_actual),hl
 305+ 9088 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9089 C9           	ret
 307+ 908A
 308+ 908A              ; --------------------
 309+ 908A
 310+ 908A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 908C CD FE 91     1 call NextScan
 312+ 908F 10 FB            djnz 1B
 313+ 9091 22 4F 89     	ld (Posicion_actual),hl
 314+ 9094 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9095 C9           	ret
 316+ 9096
 317+ 9096              ; --------------------
 318+ 9096              ;
 319+ 9096              ;	22/01/23
 320+ 9096              ;
 321+ 9096              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9096              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9096              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9096
 325+ 9096
 326+ 9096              Modificaccionne
 327+ 9096
 328+ 9096 3A 61 89     	ld a,(Cuad_objeto)
 329+ 9099 FE 02        	cp 2
 330+ 909B CC 7E 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 909E DC 7E 90         call c,Modifica_Pos_actual
 332+ 90A1 C8           	ret z
 333+ 90A2 CD 8A 90         call Modifica_Pos_actual2
 334+ 90A5 C9               ret
 335+ 90A6
 336+ 90A6              ; *************************************************************************************************************************************************************************************************
 337+ 90A6              ;
 338+ 90A6              ;	13/8/22
 339+ 90A6              ;
 340+ 90A6              ;	Inicializacion
 341+ 90A6              ;
 342+ 90A6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 90A6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 90A6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 90A6              ;
 346+ 90A6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 90A6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 90A6              ;	_ desaparece/aparece.
 349+ 90A6
 350+ 90A6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 90A6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 90A6              ;
 353+ 90A6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 90A6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 90A6              ; 		   [E] ="0"
 356+ 90A6
 357+ 90A6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 90A6
 359+ 90A6 CD E8 9E     Inicializacion call calcula_tercio
 360+ 90A9 28 36        	jr z,primit
 361+ 90AB E6 02        	and 2
 362+ 90AD 20 07        	jr nz,segmit
 363+ 90AF 7D           	ld a,l
 364+ 90B0 FE 7F        	cp $7f
 365+ 90B2 38 2D        	jr c,primit
 366+ 90B4 28 2B        	jr z,primit
 367+ 90B6 CD 1C 91     segmit call column
 368+ 90B9 38 13        	jr c,tercuad
 369+ 90BB 3E 04        cuarcuad ld a,4
 370+ 90BD 32 61 89     	ld (Cuad_objeto),a
 371+ 90C0 21 20 48     	ld hl,$4820
 372+ 90C3 22 71 89     	ld (Limite_horizontal),hl
 373+ 90C6 21 73 89     	ld hl,Limite_vertical
 374+ 90C9 36 0D        	ld (hl),$0d
 375+ 90CB 08           	ex af,af
 376+ 90CC 18 3C        	jr 1F
 377+ 90CE              tercuad
 378+ 90CE 3E 03        	ld a,3
 379+ 90D0 32 61 89     	ld (Cuad_objeto),a
 380+ 90D3 21 20 48     	ld hl,$4820
 381+ 90D6 22 71 89     	ld (Limite_horizontal),hl
 382+ 90D9 21 73 89     	ld hl,Limite_vertical
 383+ 90DC 36 12        	ld (hl),$12
 384+ 90DE 08           	ex af,af
 385+ 90DF 18 29        	jr 1F
 386+ 90E1 CD 1C 91     primit call column
 387+ 90E4 38 13        	jr c, primcuad
 388+ 90E6              segcuad
 389+ 90E6 3E 02        	ld a,2
 390+ 90E8 32 61 89     	ld (Cuad_objeto),a
 391+ 90EB 21 C0 4F     	ld hl,$4fc0
 392+ 90EE 22 71 89     	ld (Limite_horizontal),hl
 393+ 90F1 21 73 89     	ld hl,Limite_vertical
 394+ 90F4 36 0D        	ld (hl),$0d
 395+ 90F6 08           	ex af,af
 396+ 90F7 18 11        	jr 1F
 397+ 90F9              primcuad
 398+ 90F9 3E 01        	ld a,1
 399+ 90FB 32 61 89     	ld (Cuad_objeto),a
 400+ 90FE 21 C0 4F     	ld hl,$4fc0
 401+ 9101 22 71 89     	ld (Limite_horizontal),hl
 402+ 9104 21 73 89     	ld hl,Limite_vertical
 403+ 9107 36 12        	ld (hl),$12
 404+ 9109 08           	ex af,af
 405+ 910A
 406+ 910A C5           1 push bc
 407+ 910B E5           	push hl
 408+ 910C D5           	push de
 409+ 910D
 410+ 910D 2A 4F 89     	ld hl,(Posicion_actual)
 411+ 9110 CD 06 9F     	call Genera_coordenadas
 412+ 9113
 413+ 9113 D1           	pop de
 414+ 9114 E1           	pop hl
 415+ 9115 C1           	pop bc
 416+ 9116
 417+ 9116 21 6F 89     	ld hl,Ctrl_0
 418+ 9119 CB EE        	set 5,(hl)
 419+ 911B C9           	ret
 420+ 911C
 421+ 911C              ; ------------------------------------------------------------------------------------------------------------------
 422+ 911C
 423+ 911C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 911C              ;
 425+ 911C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 911C
 427+ 911C 7D           column ld a,l
 428+ 911D E6 1F        	and $1f
 429+ 911F FE 10         	cp $10
 430+ 9121 C9            	ret
 431+ 9122
 432+ 9122              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9122              ;
 434+ 9122              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9122              ;
 436+ 9122              ; 14/12/22
 437+ 9122              ;
 438+ 9122              ;	Modifica: A y BC.
 439+ 9122
 440+ 9122 3A 61 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9125 E6 01        	and 1
 442+ 9127 28 17        	jr z,1F
 443+ 9129
 444+ 9129              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9129
 446+ 9129 3A 53 89     	ld a,(Coordenada_X)
 447+ 912C 47           	ld b,a
 448+ 912D 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 912E 79           	ld a,c
 450+ 912F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9130 38 08        	jr c,2F
 452+ 9132 47           	ld b,a
 453+ 9133 79           	ld a,c
 454+ 9134 90           	sub b
 455+ 9135 32 70 89     	ld (Columnas),a
 456+ 9138 18 1B        	jr 4F
 457+ 913A 79           2 ld a,c
 458+ 913B 32 70 89     	ld (Columnas),a
 459+ 913E 18 15        	jr 4F
 460+ 9140
 461+ 9140              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9140
 463+ 9140 3A 53 89     1 ld a,(Coordenada_X)
 464+ 9143 81           	add c
 465+ 9144 3D           	dec a
 466+ 9145 D6 1F        	sub $1f
 467+ 9147 38 08        	jr c,3F
 468+ 9149 47           	ld b,a
 469+ 914A 79           	ld a,c
 470+ 914B 90           	sub b
 471+ 914C 32 70 89     	ld (Columnas),a
 472+ 914F 18 04        	jr 4F
 473+ 9151 79           3 ld a,c
 474+ 9152 32 70 89     	ld (Columnas),a
 475+ 9155 D9           4 exx
 476+ 9156 4F           	ld c,a
 477+ 9157 D9           	exx
 478+ 9158 C9            ret
 479+ 9159
 480+ 9159              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9159              ;
 482+ 9159              ;   19/7/23
 483+ 9159              ;
 484+ 9159              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9159              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9159              ;
 487+ 9159              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9159              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9159              ;
 490+ 9159              ;	DESTRUYE: HL,B Y A.
 491+ 9159
 492+ 9159 3A 61 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 915C FE 02        	cp 2
 494+ 915E 38 18        	jr c,1F
 495+ 9160 28 16        	jr z,1F
 496+ 9162 E6 01        	and 1
 497+ 9164 28 0D        	jr z,3F
 498+ 9166
 499+ 9166              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9166
 501+ 9166 CD AC 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9169
 503+ 9169 7D           9 ld a,l
 504+ 916A E6 1F        	and $1f
 505+ 916C 28 2A        	jr z,7F
 506+ 916E 2B           	dec hl
 507+ 916F 10 F8        	djnz 9B
 508+ 9171 18 25        	jr 7F
 509+ 9173
 510+ 9173              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9173
 512+ 9173 2A 4F 89     3 ld hl,(Posicion_actual)
 513+ 9176 18 20        	jr 7F
 514+ 9178
 515+ 9178 28 14        1 jr z,2F
 516+ 917A
 517+ 917A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 917A
 519+ 917A CD AC 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 917D
 521+ 917D 7D           4 ld a,l
 522+ 917E E6 1F        	and $1f
 523+ 9180 28 03        	jr z,6F
 524+ 9182 2B           	dec hl
 525+ 9183 10 F8        	djnz 4B
 526+ 9185 06 0F        6 ld b,15
 527+ 9187 CD 0D 92     5 call PreviousScan
 528+ 918A 10 FB        	djnz 5B
 529+ 918C 18 0A        	jr 7F
 530+ 918E
 531+ 918E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 918E
 533+ 918E CD AC 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9191 06 0F        	ld b,15
 535+ 9193 CD 0D 92     8 call PreviousScan
 536+ 9196 10 FB        	djnz 8B
 537+ 9198
 538+ 9198 E5           7 push hl
 539+ 9199 DD E1        	pop ix
 540+ 919B
 541+ 919B 2A 51 89     	ld hl,(Puntero_objeto)
 542+ 919E E5           	push hl
 543+ 919F FD E1        	pop iy
 544+ 91A1
 545+ 91A1              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 91A1
 547+ 91A1 3A 6F 89     	ld a,(Ctrl_0)
 548+ 91A4 CB 77        	bit 6,a
 549+ 91A6 C8           	ret z
 550+ 91A7
 551+ 91A7              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 91A7              ; _ entidad / Amadeus´.
 553+ 91A7
 554+ 91A7 DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 91AB
 556+ 91AB C9           	ret
 557+ 91AC
 558+ 91AC              ; --------------------------------------------------------------------------------------------------------------------
 559+ 91AC              ;
 560+ 91AC              ;	2/1/23
 561+ 91AC              ;
 562+ 91AC              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 91AC              ;
 564+ 91AC              ;	Tras esta rutina tenemos:
 565+ 91AC              ;
 566+ 91AC              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 91AC              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 91AC              ;
 569+ 91AC              ;	DESTRUYE!!!!! HL,B y A.
 570+ 91AC
 571+ 91AC 2A 4F 89     Operandos ld hl,(Posicion_actual)
 572+ 91AF 3A 70 89     	ld a,(Columnas)
 573+ 91B2 3D           	dec a
 574+ 91B3 20 01        	jr nz,1F
 575+ 91B5 3C           	inc a
 576+ 91B6 47           1 ld b,a
 577+ 91B7 C9           	ret
 578+ 91B8
 579+ 91B8              ; --------------------------------------------------------------------------------------------------------------------
 580+ 91B8              ;
 581+ 91B8              ;	3/1/23
 582+ 91B8              ;
 583+ 91B8              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 91B8              ;
 585+ 91B8              ;	Destruye: A,B,HL y DE.
 586+ 91B8
 587+ 91B8              Define_rutina_de_impresion
 588+ 91B8
 589+ 91B8 3A 4E 89     	ld a,(Columns)
 590+ 91BB 47           	ld b,a
 591+ 91BC 3A 70 89     	ld a,(Columnas)
 592+ 91BF B8           	cp b
 593+ 91C0 20 0D        	jr nz,2f
 594+ 91C2
 595+ 91C2              ;	La entidad se imprime entera.
 596+ 91C2
 597+ 91C2 21 E1 92     	ld hl, Indice_entidades_completas
 598+ 91C5 E6 01        	and 1
 599+ 91C7 28 02        	jr z,1F
 600+ 91C9
 601+ 91C9 23           	inc hl
 602+ 91CA 23           	inc hl
 603+ 91CB
 604+ 91CB CD A6 8B     1 call Extrae_address
 605+ 91CE C9           	ret		;	ret
 606+ 91CF
 607+ 91CF              ;	La entidad no se imprime entera en pantalla.
 608+ 91CF
 609+ 91CF 3A 61 89     2 ld a,(Cuad_objeto)
 610+ 91D2 E6 01        	and 1
 611+ 91D4 28 17        	jr z,3F
 612+ 91D6
 613+ 91D6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 91D6
 615+ 91D6 21 E5 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 91D9 3A 4E 89     4 ld a,(Columns)
 617+ 91DC E6 01        	and 1
 618+ 91DE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 91E0
 620+ 91E0 23           	inc hl
 621+ 91E1 23           	inc hl
 622+ 91E2
 623+ 91E2 3A 70 89     	ld a,(Columnas)
 624+ 91E5 E6 01        	and 1
 625+ 91E7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 91E9
 627+ 91E9 23           	inc hl
 628+ 91EA 23           	inc hl
 629+ 91EB
 630+ 91EB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 91ED
 632+ 91ED 21 EB 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 91F0 18 E7        	jr 4B
 634+ 91F2
 635+ 91F2              ; --------------------------------------------------------------------------------------------------------------------
 636+ 91F2              ;
 637+ 91F2              ;	Prepara_draw
 638+ 91F2              ;
 639+ 91F2              ;	Es una rutina de carga.
 640+ 91F2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 91F2              ;
 642+ 91F2              ;	FUNCIONAMIENTO:
 643+ 91F2              ;
 644+ 91F2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 91F2              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 91F2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 91F2              ;
 648+ 91F2              ;	DESTRUYE:
 649+ 91F2              ;
 650+ 91F2              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 91F2
 652+ 91F2 21 4D 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 91F5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 91F6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 91F7 4E           	ld c,(hl)
 656+ 91F8 2A 4F 89     	ld hl,(Posicion_actual)
 657+ 91FB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 91FD C9           	ret
 659+ 91FE
 660+ 91FE              ;----------------------------------------------------------------------------------------------------------------
 661+ 91FE              ;
 662+ 91FE              ;	5/08/22
 663+ 91FE              ;
 664+ 91FE              ;   NextScan.
 665+ 91FE              ;
 666+ 91FE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 91FE              ;
 668+ 91FE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 91FE              ;
 670+ 91FE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 91FE              ;
 672+ 91FE              ;       DESTRUIDOS: AF y HL !!!
 673+ 91FE              ;
 674+ 91FE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 91FE              ;
 676+ 91FE
 677+ 91FE 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 91FF 7C               ld a,h
 679+ 9200 E6 07            and 7
 680+ 9202 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9203
 682+ 9203 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9204 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9206 6F               ld l,a
 685+ 9207 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9208
 687+ 9208 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9209 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 920B 67               ld h,a
 690+ 920C C9               ret
 691+ 920D
 692+ 920D              ;----------------------------------------------------------------------------------------------------------------
 693+ 920D              ;
 694+ 920D              ;	5/08/22
 695+ 920D              ;
 696+ 920D              ;   PreviousScan.
 697+ 920D              ;
 698+ 920D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 920D              ;
 700+ 920D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 920D              ;
 702+ 920D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 920D              ;
 704+ 920D              ;       DESTRUIDOS: AF y HL !!!
 705+ 920D              ;
 706+ 920D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 920D              ;
 708+ 920D
 709+ 920D 7C           PreviousScan ld a,h
 710+ 920E 25               dec h               ; Dec H.
 711+ 920F E6 07            and 7
 712+ 9211 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9212
 714+ 9212 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9213 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9215 6F               ld l,a
 717+ 9216 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9217
 719+ 9217 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9218 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 921A 67               ld h,a
 722+ 921B C9               ret
 723+ 921C
 724+ 921C              ; -----------------------------------------------------------------------------------
 725+ 921C              ;
 726+ 921C              ;	31/7/23
 727+ 921C              ;
 728+ 921C              ;	Rutina principal de pintado de entidades.
 729+ 921C              ;	Extrae la foto del frame, (entidades).
 730+ 921C
 731+ 921C              Extrae_foto_entidades
 732+ 921C
 733+ 921C 21 01 80     	ld hl,Album_de_fotos+1
 734+ 921F 7E           	ld a,(hl)
 735+ 9220 A7           	and a
 736+ 9221 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9222
 738+ 9222              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9222
 740+ 9222 3A 9A 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9225 A7           	and a
 742+ 9226 C8           	ret z
 743+ 9227
 744+ 9227              ; -----------------------------------
 745+ 9227
 746+ 9227 ED 73 9F 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 922B 31 00 80     	ld sp,Album_de_fotos
 748+ 922E
 749+ 922E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9230 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9231 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9232
 753+ 9232 ED 73 A1 89  	ld (Stack_2),sp
 754+ 9236 ED 7B 9F 89  	ld sp,(Stack)
 755+ 923A
 756+ 923A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 923A
 758+ 923A 3E CD        	ld a,$cd
 759+ 923C 32 44 92     	ld (Imprime),a
 760+ 923F EB           	ex de,hl
 761+ 9240 22 45 92     	ld (Imprime+1),hl
 762+ 9243 EB           	ex de,hl
 763+ 9244
 764+ 9244              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9244
 766+ 9244 00 00 00     Imprime db 0,0,0
 767+ 9247
 768+ 9247 ED 73 9F 89  	ld (Stack),sp
 769+ 924B
 770+ 924B 3A 9A 89     	ld a,(Numero_de_malotes)
 771+ 924E 3D           	dec a
 772+ 924F 28 09        	jr z,1F
 773+ 9251 32 9A 89      	ld (Numero_de_malotes),a
 774+ 9254
 775+ 9254 ED 7B A1 89  	ld sp,(Stack_2)
 776+ 9258 18 D4        	jr 2B
 777+ 925A
 778+ 925A AF           1 xor a
 779+ 925B 32 A1 89     	ld (Stack_2),a
 780+ 925E
 781+ 925E C9           	ret
 782+ 925F
 783+ 925F              ; -----------------------------------------------------------------------------------
 784+ 925F              ;
 785+ 925F              ;	28/2/23
 786+ 925F              ;
 787+ 925F              ;	Pinta los disparos generados.
 788+ 925F
 789+ 925F              Extrae_foto_disparos
 790+ 925F
 791+ 925F 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9262 7E               ld a,(hl)
 793+ 9263 A7               and a
 794+ 9264 C8               ret z
 795+ 9265
 796+ 9265 3A AF 89     	ld a,(Numero_de_disparotes)
 797+ 9268 A7           	and a
 798+ 9269 C8           	ret z
 799+ 926A ED 73 9F 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 926E 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9271
 802+ 9271 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9273 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9274 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9275
 806+ 9275 ED 73 A1 89  	ld (Stack_2),sp
 807+ 9279 ED 7B 9F 89  	ld sp,(Stack)
 808+ 927D
 809+ 927D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 927D
 811+ 927D 3E CD        	ld a,$cd
 812+ 927F 32 87 92     	ld (Imprime2),a
 813+ 9282 EB           	ex de,hl
 814+ 9283 22 88 92     	ld (Imprime2+1),hl
 815+ 9286 EB           	ex de,hl
 816+ 9287
 817+ 9287              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9287
 819+ 9287 00 00 00     Imprime2 db 0,0,0
 820+ 928A
 821+ 928A 3A AF 89     	ld a,(Numero_de_disparotes)
 822+ 928D 3D           	dec a
 823+ 928E 28 09        	jr z,1F
 824+ 9290 32 AF 89      	ld (Numero_de_disparotes),a
 825+ 9293
 826+ 9293 ED 7B A1 89  	ld sp,(Stack_2)
 827+ 9297 18 D8        	jr 2B
 828+ 9299
 829+ 9299 AF           1 xor a
 830+ 929A 32 A1 89     	ld (Stack_2),a
 831+ 929D C9           	ret
 832+ 929E
 833+ 929E              ; -----------------------------------------------------------------------------------
 834+ 929E              ;
 835+ 929E              ;	4/9/23
 836+ 929E              ;
 837+ 929E              ;	Rutina principal de pintado de Amadeus.
 838+ 929E              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 929E
 840+ 929E 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 92A1 7E           	ld a,(hl)
 842+ 92A2 A7           	and a
 843+ 92A3 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 92A4
 845+ 92A4 3A 9A 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 92A7 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 92A8 C8           	ret z
 848+ 92A9
 849+ 92A9              ; -----------------------------------
 850+ 92A9
 851+ 92A9 ED 73 9F 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 92AD 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 92B0
 854+ 92B0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92B2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92B3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92B4
 858+ 92B4 ED 73 A1 89  	ld (Stack_2),sp
 859+ 92B8 ED 7B 9F 89  	ld sp,(Stack)
 860+ 92BC
 861+ 92BC              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92BC
 863+ 92BC 3E CD        	ld a,$cd
 864+ 92BE 32 C6 92     	ld (Imprime_Amadeus),a
 865+ 92C1 EB           	ex de,hl
 866+ 92C2 22 C7 92     	ld (Imprime_Amadeus+1),hl
 867+ 92C5 EB           	ex de,hl
 868+ 92C6
 869+ 92C6              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92C6
 871+ 92C6 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 92C9
 873+ 92C9 ED 73 9F 89  	ld (Stack),sp
 874+ 92CD
 875+ 92CD 3A 9A 89     	ld a,(Numero_de_malotes)
 876+ 92D0 3D           	dec a
 877+ 92D1 28 09        	jr z,1F
 878+ 92D3 32 9A 89      	ld (Numero_de_malotes),a
 879+ 92D6
 880+ 92D6 ED 7B A1 89  	ld sp,(Stack_2)
 881+ 92DA 18 D4        	jr 2B
 882+ 92DC
 883+ 92DC AF           1 xor a
 884+ 92DD 32 A1 89     	ld (Stack_2),a
 885+ 92E0
 886+ 92E0 C9           	ret
# file closed: Draw_XOR.asm
1727  92E1              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92E1              ;   índices de Rutinas de impresión.
   2+ 92E1
   3+ 92E1 F1 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92E3 1E 93            defw Pinta_Amadeus_3x2
   5+ 92E5
   6+ 92E5 74 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92E7 14 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92E9 C8 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92EB
  10+ 92EB 9E 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92ED A2 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92EF 56 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92F1
  14+ 92F1
  15+ 92F1              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92F1              ;
  17+ 92F1              ;   12/12/22
  18+ 92F1              ;
  19+ 92F1              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92F1              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92F1              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92F1              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92F1              ;
  24+ 92F1              ;   Modifica: DE y HL.
  25+ 92F1
  26+ 92F1 ED 73 9F 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92F5 FD F9        	ld sp,iy
  28+ 92F7 06 10            ld b,16
  29+ 92F9 D1           1 pop de
  30+ 92FA 7B               ld a,e
  31+ 92FB AE               xor (hl)
  32+ 92FC 77           	ld (hl),a
  33+ 92FD 23           	inc hl
  34+ 92FE 7A               ld a,d
  35+ 92FF AE               xor (hl)
  36+ 9300 77           	ld (hl),a
  37+ 9301 2B           	dec hl
  38+ 9302 24           	inc h
  39+ 9303 7C               ld a,h
  40+ 9304 E6 07            and 7
  41+ 9306 20 0A            jr nz,2F
  42+ 9308 7D               ld a,l
  43+ 9309 C6 20            add a,$20
  44+ 930B 6F               ld l,a
  45+ 930C 38 04            jr c,2F
  46+ 930E 7C               ld a,h
  47+ 930F D6 08            sub 8
  48+ 9311 67               ld h,a
  49+ 9312 7C           2 ld a,h
  50+ 9313 FE 58            cp $58
  51+ 9315 28 02            jr z,3F
  52+ 9317 10 E0            djnz 1B
  53+ 9319 ED 7B 9F 89  3 ld sp,(Stack)
  54+ 931D C9           	ret
  55+ 931E
  56+ 931E ED 73 9F 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9322 FD F9        	ld sp,iy
  58+ 9324 06 08            ld b,8
  59+ 9326 D1           1 pop de
  60+ 9327 7B               ld a,e
  61+ 9328 AE               xor (hl)
  62+ 9329 77           	ld (hl),a
  63+ 932A 23           	inc hl
  64+ 932B 7A               ld a,d
  65+ 932C AE               xor (hl)
  66+ 932D 77           	ld (hl),a
  67+ 932E 23           	inc hl
  68+ 932F D1           	pop de
  69+ 9330 7B               ld a,e
  70+ 9331 AE               xor (hl)
  71+ 9332 77           	ld (hl),a
  72+ 9333 2B           	dec hl
  73+ 9334 2B           	dec hl
  74+ 9335 24           	inc h
  75+ 9336 7C               ld a,h
  76+ 9337 E6 07            and 7
  77+ 9339 20 0A            jr nz,2F
  78+ 933B 7D               ld a,l
  79+ 933C C6 20            add a,$20
  80+ 933E 6F               ld l,a
  81+ 933F 38 04            jr c,2F
  82+ 9341 7C               ld a,h
  83+ 9342 D6 08            sub 8
  84+ 9344 67               ld h,a
  85+ 9345 7C           2 ld a,h
  86+ 9346 FE 58            cp $58
  87+ 9348 28 25            jr z,4F
  88+ 934A 7A               ld a,d
  89+ 934B AE               xor (hl)
  90+ 934C 77               ld (hl),a
  91+ 934D D1           	pop de
  92+ 934E 23           	inc hl
  93+ 934F 7B               ld a,e
  94+ 9350 AE               xor (hl)
  95+ 9351 77           	ld (hl),a
  96+ 9352 23           	inc hl
  97+ 9353 7A               ld a,d
  98+ 9354 AE               xor (hl)
  99+ 9355 77           	ld (hl),a
 100+ 9356 2B           	dec hl
 101+ 9357 2B           	dec hl
 102+ 9358 24           	inc h
 103+ 9359 7C               ld a,h
 104+ 935A E6 07            and 7
 105+ 935C 20 0A            jr nz,3F
 106+ 935E 7D               ld a,l
 107+ 935F C6 20            add a,$20
 108+ 9361 6F               ld l,a
 109+ 9362 38 04            jr c,3F
 110+ 9364 7C               ld a,h
 111+ 9365 D6 08            sub 8
 112+ 9367 67               ld h,a
 113+ 9368 7C           3 ld a,h
 114+ 9369 FE 58            cp $58
 115+ 936B 28 02            jr z,4F
 116+ 936D 10 B7            djnz 1B
 117+ 936F ED 7B 9F 89  4 ld sp,(Stack)
 118+ 9373 C9           	ret
 119+ 9374
 120+ 9374              ; ---------------------------------------------------
 121+ 9374
 122+ 9374 ED 73 9F 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9378 FD F9        	ld sp,iy
 124+ 937A
 125+ 937A              ; >>>
 126+ 937A
 127+ 937A 06 10            ld b,16
 128+ 937C D1           1 pop de
 129+ 937D 7A           	ld a,d
 130+ 937E AE           	xor (hl)
 131+ 937F 77           	ld (hl),a
 132+ 9380 24           	inc h
 133+ 9381 7C               ld a,h
 134+ 9382 E6 07            and 7
 135+ 9384 20 0C            jr nz,2F
 136+ 9386 7D               ld a,l
 137+ 9387 C6 20            add a,$20
 138+ 9389 6F               ld l,a
 139+ 938A 38 06            jr c,2F
 140+ 938C 7C               ld a,h
 141+ 938D D6 08            sub 8
 142+ 938F 67               ld h,a
 143+ 9390 18 00            jr 2F
 144+ 9392 7C           2 ld a,h
 145+ 9393 FE 58            cp $58
 146+ 9395 28 02            jr z,3F
 147+ 9397 10 E3            djnz 1B
 148+ 9399 ED 7B 9F 89  3 ld sp,(Stack)
 149+ 939D C9           	ret
 150+ 939E
 151+ 939E ED 73 9F 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 93A2 FD F9        	ld sp,iy
 153+ 93A4
 154+ 93A4              ; >>>
 155+ 93A4
 156+ 93A4 06 10            ld b,16
 157+ 93A6 D1           1 pop de
 158+ 93A7 7B           	ld a,e
 159+ 93A8 AE           	xor (hl)
 160+ 93A9 77           	ld (hl),a
 161+ 93AA 24           	inc h
 162+ 93AB 7C               ld a,h
 163+ 93AC E6 07            and 7
 164+ 93AE 20 0C            jr nz,2F
 165+ 93B0 7D               ld a,l
 166+ 93B1 C6 20            add a,$20
 167+ 93B3 6F               ld l,a
 168+ 93B4 38 06            jr c,2F
 169+ 93B6 7C               ld a,h
 170+ 93B7 D6 08            sub 8
 171+ 93B9 67               ld h,a
 172+ 93BA 18 00            jr 2F
 173+ 93BC 7C           2 ld a,h
 174+ 93BD FE 58            cp $58
 175+ 93BF 28 02            jr z,3F
 176+ 93C1 10 E3            djnz 1B
 177+ 93C3 ED 7B 9F 89  3 ld sp,(Stack)
 178+ 93C7 C9           	ret
 179+ 93C8
 180+ 93C8              ; ---------------------------------------------------
 181+ 93C8
 182+ 93C8 ED 73 9F 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93CC FD F9        	ld sp,iy
 184+ 93CE 06 08            ld b,8
 185+ 93D0 D1           1 pop de
 186+ 93D1 7A           	ld a,d
 187+ 93D2 AE           	xor (hl)
 188+ 93D3 77           	ld (hl),a
 189+ 93D4 23           	inc hl
 190+ 93D5 D1           	pop de
 191+ 93D6 7B           	ld a,e
 192+ 93D7 AE           	xor (hl)
 193+ 93D8 77           	ld (hl),a
 194+ 93D9 2B           	dec hl
 195+ 93DA 24            	inc h
 196+ 93DB 7C               ld a,h
 197+ 93DC E6 07            and 7
 198+ 93DE 20 0A            jr nz,2F
 199+ 93E0 7D               ld a,l
 200+ 93E1 C6 20            add a,$20
 201+ 93E3 6F               ld l,a
 202+ 93E4 38 04            jr c,2F
 203+ 93E6 7C               ld a,h
 204+ 93E7 D6 08            sub 8
 205+ 93E9 67               ld h,a
 206+ 93EA 7C           2 ld a,h
 207+ 93EB FE 58            cp $58
 208+ 93ED 28 20            jr z,4F
 209+ 93EF D1               pop de
 210+ 93F0 7B           	ld a,e
 211+ 93F1 AE           	xor (hl)
 212+ 93F2 77           	ld (hl),a
 213+ 93F3 23           	inc hl
 214+ 93F4 7A           	ld a,d
 215+ 93F5 AE           	xor (hl)
 216+ 93F6 77           	ld (hl),a
 217+ 93F7 2B           	dec hl
 218+ 93F8 24           	inc h
 219+ 93F9 7C               ld a,h
 220+ 93FA E6 07            and 7
 221+ 93FC 20 0A            jr nz,3F
 222+ 93FE 7D               ld a,l
 223+ 93FF C6 20            add a,$20
 224+ 9401 6F               ld l,a
 225+ 9402 38 04            jr c,3F
 226+ 9404 7C               ld a,h
 227+ 9405 D6 08            sub 8
 228+ 9407 67               ld h,a
 229+ 9408 7C           3 ld a,h
 230+ 9409 FE 58            cp $58
 231+ 940B 28 02            jr z,4F
 232+ 940D 10 C1            djnz 1B
 233+ 940F ED 7B 9F 89  4 ld sp,(Stack)
 234+ 9413 C9           	ret
 235+ 9414
 236+ 9414 ED 73 9F 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9418 FD F9        	ld sp,iy
 238+ 941A 06 08            ld b,8
 239+ 941C D1           1 pop de
 240+ 941D D1           	pop de
 241+ 941E 7B           	ld a,e
 242+ 941F AE           	xor (hl)
 243+ 9420 77           	ld (hl),a
 244+ 9421 24            	inc h
 245+ 9422 7C               ld a,h
 246+ 9423 E6 07            and 7
 247+ 9425 20 0A            jr nz,2F
 248+ 9427 7D               ld a,l
 249+ 9428 C6 20            add a,$20
 250+ 942A 6F               ld l,a
 251+ 942B 38 04            jr c,2F
 252+ 942D 7C               ld a,h
 253+ 942E D6 08            sub 8
 254+ 9430 67               ld h,a
 255+ 9431 7C           2 ld a,h
 256+ 9432 FE 58            cp $58
 257+ 9434 28 1B            jr z,4F
 258+ 9436 D1               pop de
 259+ 9437 7A           	ld a,d
 260+ 9438 AE           	xor (hl)
 261+ 9439 77           	ld (hl),a
 262+ 943A 24           	inc h
 263+ 943B 7C               ld a,h
 264+ 943C E6 07            and 7
 265+ 943E 20 0A            jr nz,3F
 266+ 9440 7D               ld a,l
 267+ 9441 C6 20            add a,$20
 268+ 9443 6F               ld l,a
 269+ 9444 38 04            jr c,3F
 270+ 9446 7C               ld a,h
 271+ 9447 D6 08            sub 8
 272+ 9449 67               ld h,a
 273+ 944A 7C           3 ld a,h
 274+ 944B FE 58            cp $58
 275+ 944D 28 02            jr z,4F
 276+ 944F 10 CB            djnz 1B
 277+ 9451 ED 7B 9F 89  4 ld sp,(Stack)
 278+ 9455 C9           	ret
 279+ 9456
 280+ 9456 ED 73 9F 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 945A FD F9        	ld sp,iy
 282+ 945C 06 08            ld b,8
 283+ 945E D1           1 pop de
 284+ 945F 7B           	ld a,e
 285+ 9460 AE           	xor (hl)
 286+ 9461 77           	ld (hl),a
 287+ 9462 23           	inc hl
 288+ 9463 7A           	ld a,d
 289+ 9464 AE           	xor (hl)
 290+ 9465 77           	ld (hl),a
 291+ 9466 2B           	dec hl
 292+ 9467 24             	inc h
 293+ 9468 7C               ld a,h
 294+ 9469 E6 07            and 7
 295+ 946B 20 0A            jr nz,2F
 296+ 946D 7D               ld a,l
 297+ 946E C6 20            add a,$20
 298+ 9470 6F               ld l,a
 299+ 9471 38 04            jr c,2F
 300+ 9473 7C               ld a,h
 301+ 9474 D6 08            sub 8
 302+ 9476 67               ld h,a
 303+ 9477 7C           2 ld a,h
 304+ 9478 FE 58            cp $58
 305+ 947A 28 21            jr z,4F
 306+ 947C D1               pop de
 307+ 947D 7A           	ld a,d
 308+ 947E AE           	xor (hl)
 309+ 947F 77           	ld (hl),a
 310+ 9480 23           	inc hl
 311+ 9481 D1               pop de
 312+ 9482 7B           	ld a,e
 313+ 9483 AE           	xor (hl)
 314+ 9484 77           	ld (hl),a
 315+ 9485 2B           	dec hl
 316+ 9486 24           	inc h
 317+ 9487 7C               ld a,h
 318+ 9488 E6 07            and 7
 319+ 948A 20 0A            jr nz,3F
 320+ 948C 7D               ld a,l
 321+ 948D C6 20            add a,$20
 322+ 948F 6F               ld l,a
 323+ 9490 38 04            jr c,3F
 324+ 9492 7C               ld a,h
 325+ 9493 D6 08            sub 8
 326+ 9495 67               ld h,a
 327+ 9496 7C           3 ld a,h
 328+ 9497 FE 58            cp $58
 329+ 9499 28 02            jr z,4F
 330+ 949B 10 C1            djnz 1B
 331+ 949D ED 7B 9F 89  4 ld sp,(Stack)
 332+ 94A1 C9           	ret
 333+ 94A2
 334+ 94A2 ED 73 9F 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 94A6 FD F9        	ld sp,iy
 336+ 94A8 06 08            ld b,8
 337+ 94AA D1           1 pop de
 338+ 94AB 7B           	ld a,e
 339+ 94AC AE           	xor (hl)
 340+ 94AD 77           	ld (hl),a
 341+ 94AE 24            	inc h
 342+ 94AF 7C               ld a,h
 343+ 94B0 E6 07            and 7
 344+ 94B2 20 0A            jr nz,2F
 345+ 94B4 7D               ld a,l
 346+ 94B5 C6 20            add a,$20
 347+ 94B7 6F               ld l,a
 348+ 94B8 38 04            jr c,2F
 349+ 94BA 7C               ld a,h
 350+ 94BB D6 08            sub 8
 351+ 94BD 67               ld h,a
 352+ 94BE 7C           2 ld a,h
 353+ 94BF FE 58            cp $58
 354+ 94C1 28 1C            jr z,4F
 355+ 94C3 D1               pop de
 356+ 94C4 7A           	ld a,d
 357+ 94C5 AE           	xor (hl)
 358+ 94C6 77           	ld (hl),a
 359+ 94C7 24           	inc h
 360+ 94C8 7C               ld a,h
 361+ 94C9 E6 07            and 7
 362+ 94CB 20 0A            jr nz,3F
 363+ 94CD 7D               ld a,l
 364+ 94CE C6 20            add a,$20
 365+ 94D0 6F               ld l,a
 366+ 94D1 38 04            jr c,3F
 367+ 94D3 7C               ld a,h
 368+ 94D4 D6 08            sub 8
 369+ 94D6 67               ld h,a
 370+ 94D7 7C           3 ld a,h
 371+ 94D8 FE 58            cp $58
 372+ 94DA 28 03            jr z,4F
 373+ 94DC D1               pop de
 374+ 94DD 10 CB            djnz 1B
 375+ 94DF ED 7B 9F 89  4 ld sp,(Stack)
 376+ 94E3 C9           	ret
 377+ 94E4
 378+ 94E4              ; ---------------------------------------------------
 379+ 94E4              ;
 380+ 94E4              ;   27/02/23
 381+ 94E4              ;
 382+ 94E4              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94E4              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94E4              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94E4
 386+ 94E4 ED 73 9F 89  Pinta_Disparo ld (Stack),sp
 387+ 94E8 FD F9            ld sp,iy
 388+ 94EA 06 03            ld b,3
 389+ 94EC D1           1 pop de
 390+ 94ED 7B               ld a,e
 391+ 94EE AE               xor (hl)
 392+ 94EF 77               ld (hl),a
 393+ 94F0 23               inc hl
 394+ 94F1 7A               ld a,d
 395+ 94F2 AE               xor (hl)
 396+ 94F3 77               ld (hl),a
 397+ 94F4 2B               dec hl
 398+ 94F5
 399+ 94F5 24               inc h
 400+ 94F6 7C               ld a,h
 401+ 94F7 E6 07            and 7
 402+ 94F9 20 0A            jr nz,2F
 403+ 94FB 7D               ld a,l
 404+ 94FC C6 20            add a,$20
 405+ 94FE 6F               ld l,a
 406+ 94FF 38 04            jr c,2F
 407+ 9501 7C               ld a,h
 408+ 9502 D6 08            sub 8
 409+ 9504 67               ld h,a
 410+ 9505 7C           2 ld a,h
 411+ 9506 FE 58            cp $58
 412+ 9508 28 02            jr z,3F
 413+ 950A
 414+ 950A 10 E0            djnz 1B
 415+ 950C ED 7B 9F 89  3 ld sp,(Stack)
 416+ 9510 C9               ret
 417+ 9511
# file closed: Rutinas_de_impresion_sprites.asm
1728  9511              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9511
   2+ 9511              ; ******************************************************************************************************************************************************************************************
   3+ 9511              ;
   4+ 9511              ;   20/05/23
   5+ 9511              ;
   6+ 9511              ;	Recompone_posicion_inicio
   7+ 9511              ;
   8+ 9511              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9511              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9511              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9511              ;	_ a una u otra rutina.
  12+ 9511
  13+ 9511              Recompone_posicion_inicio
  14+ 9511
  15+ 9511 2A 5F 89     	ld hl,(Posicion_inicio)
  16+ 9514 7D           	ld a,l
  17+ 9515 E6 1F        	and $1f
  18+ 9517 28 16        	jr z,1F
  19+ 9519
  20+ 9519 FE 1F        	cp $1f
  21+ 951B 28 0D        	jr z,3F
  22+ 951D
  23+ 951D 21 74 89     	ld hl,Ctrl_2
  24+ 9520 CB C6        	set 0,(hl)
  25+ 9522 2A 51 89     	ld hl,(Puntero_objeto)
  26+ 9525 22 8F 89     	ld (Repone_puntero_objeto),hl
  27+ 9528 18 08        	jr 2F
  28+ 952A
  29+ 952A CD D8 96     3 call Mov_left
  30+ 952D 18 03        	jr 2F
  31+ 952F
  32+ 952F CD B5 95     1 call Mov_right
  33+ 9532 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9535 22 51 89     	ld (Puntero_objeto),hl
  35+ 9538 C9           	ret
  36+ 9539
  37+ 9539              ; ******************************************************************************************************************************************************************************************
  38+ 9539              ;
  39+ 9539              ;   27/05/23
  40+ 9539              ;
  41+ 9539              ;	Mov_down
  42+ 9539              ;
  43+ 9539              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9539              ;
  45+ 9539              ;
  46+ 9539              Mov_down
  47+ 9539
  48+ 9539 CD A3 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 953C              ;																	; _ repone (Puntero_objeto).
  50+ 953C 21 6F 89     	ld hl,Ctrl_0
  51+ 953F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9541              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9541              ; 																	; _ en el caso de que no lo haya.
  54+ 9541 3A 79 89     	ld a,(Vel_down)
  55+ 9544 47           	ld b,a
  56+ 9545 2A 4F 89         ld hl,(Posicion_actual)
  57+ 9548 CD E8 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 954B E6 02        	and 2
  59+ 954D 28 17        	jr z,1F
  60+ 954F
  61+ 954F              ; Nos encontramos en el último tercio de pantalla.
  62+ 954F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 954F
  64+ 954F 7C           	ld a,h
  65+ 9550 FE 57        	cp $57
  66+ 9552 20 12        	jr nz,1F
  67+ 9554
  68+ 9554 7D           	ld a,l
  69+ 9555 C6 20        	add $20
  70+ 9557 30 0D        	jr nc,1F
  71+ 9559
  72+ 9559              ; ------------------------------
  73+ 9559              ;
  74+ 9559              ;	12/01/24
  75+ 9559
  76+ 9559              ;	call Reaparece_arriba
  77+ 9559 CD 65 98     	call Reinicio
  78+ 955C
  79+ 955C              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 955C
  81+ 955C 3A AD 89     	ld a,(Ctrl_3)
  82+ 955F CB CF        	set 1,a
  83+ 9561 32 AD 89     	ld (Ctrl_3),a
  84+ 9564
  85+ 9564 18 08        	jr 3F
  86+ 9566              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9566              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9566              ; ------------------------------
  89+ 9566
  90+ 9566 CD FE 91     1 call NextScan
  91+ 9569 22 4F 89     	ld (Posicion_actual),hl
  92+ 956C 10 DA            djnz 2B
  93+ 956E CD 06 9F     3 call Genera_coordenadas
  94+ 9571 C9           	ret
  95+ 9572
  96+ 9572              ; ******************************************************************************************************************************************************************************************
  97+ 9572              ;
  98+ 9572              ;   27/05/23
  99+ 9572              ;
 100+ 9572              ;	Mov_up
 101+ 9572              ;
 102+ 9572              ; 	Mueve el Sprite hacia arriba.
 103+ 9572              ;
 104+ 9572              ;
 105+ 9572              Mov_up
 106+ 9572
 107+ 9572 CD A3 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9575              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9575 21 6F 89     	ld hl,Ctrl_0
 110+ 9578 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 957A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 957A              ; 																		; _ en el caso de que no lo haya.
 113+ 957A 3A 78 89     	ld a,(Vel_up)
 114+ 957D 47           	ld b,a
 115+ 957E 2A 4F 89     	ld hl,(Posicion_actual)
 116+ 9581 CD E8 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9584 A7           	and a
 118+ 9585 20 10        	jr nz,1F
 119+ 9587
 120+ 9587              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9587              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9587
 123+ 9587 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9588 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 958A 20 0B            jr nz,1F
 126+ 958C 7D               ld a,l
 127+ 958D D6 20            sub $20
 128+ 958F 30 06            jr nc,1F
 129+ 9591 25               dec h
 130+ 9592
 131+ 9592              ; -----------------------------
 132+ 9592 CD 46 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9595              ;	call Reinicio
 134+ 9595              ; -----------------------------
 135+ 9595
 136+ 9595 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9597 CD 0D 92     1 call PreviousScan
 138+ 959A 22 4F 89     	ld (Posicion_actual),hl
 139+ 959D 10 E2            djnz 3B
 140+ 959F CD 06 9F     2 call Genera_coordenadas
 141+ 95A2 C9           	ret
 142+ 95A3
 143+ 95A3              ; -----------------------------
 144+ 95A3              ;
 145+ 95A3              ;	27/5/23
 146+ 95A3              ;
 147+ 95A3              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A3              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A3              ;
 150+ 95A3              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A3              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A3              ;
 153+ 95A3              ;	Modifica: A y (Puntero_objeto).
 154+ 95A3
 155+ 95A3 3A 74 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95A6 CB 47        	bit 0,a
 157+ 95A8 C8           	ret z
 158+ 95A9 CB 87        	res 0,a
 159+ 95AB 32 74 89     	ld (Ctrl_2),a
 160+ 95AE 2A 8F 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B1 22 51 89     	ld (Puntero_objeto),hl
 162+ 95B4 C9           	ret
 163+ 95B5
 164+ 95B5              ; ******************************************************************************************************************************************************************************************
 165+ 95B5              ;
 166+ 95B5              ;	19/10/22
 167+ 95B5              ;
 168+ 95B5              ;	Mov_right.
 169+ 95B5              ;
 170+ 95B5              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95B5              ;
 172+ 95B5
 173+ 95B5 3A 6F 89     Mov_right ld a,(Ctrl_0)
 174+ 95B8 CB 77        	bit 6,a
 175+ 95BA 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95BC
 177+ 95BC CD F4 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95BF C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C0
 180+ 95C0 21 6F 89     	ld hl,Ctrl_0
 181+ 95C3 CB E6        	set 4,(hl)
 182+ 95C5 18 52        	jr 8F
 183+ 95C7
 184+ 95C7 21 6F 89     10 ld hl,Ctrl_0
 185+ 95CA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95CC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95CC              ; 																	; _ en el caso de que no lo haya.
 188+ 95CC 3A 53 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95CF FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D1 20 46        	jr nz,8F
 191+ 95D3
 192+ 95D3 3A 55 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95D6 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95D7 28 40        	jr z,8F
 195+ 95D9
 196+ 95D9              ; ---------- ---------- ----------
 197+ 95D9              ;
 198+ 95D9              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95D9
 200+ 95D9 3A 77 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95DC FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95DE 28 11        	jr z,1F
 203+ 95E0 38 06        	jr c,6F
 204+ 95E2 FE 04        	cp 4
 205+ 95E4 28 14        	jr z,7F
 206+ 95E6 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95E8
 208+ 95E8              ; ---------- ---------- ----------
 209+ 95E8              ;
 210+ 95E8              ; Perfiles de velocidad
 211+ 95E8              ;
 212+ 95E8
 213+ 95E8 3A 55 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95EB FE FE        	cp $fe
 215+ 95ED 20 2A        	jr nz,8F
 216+ 95EF 18 10        	jr 3F
 217+ 95F1 3A 55 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F4 FE FD        	cp $fd
 219+ 95F6 20 21        	jr nz,8F
 220+ 95F8 18 07        	jr 3F
 221+ 95FA 3A 55 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95FD FE FB        	cp $fb
 223+ 95FF 20 18        	jr nz,8F
 224+ 9601
 225+ 9601              ; ---------- ---------- ----------
 226+ 9601
 227+ 9601              3
 228+ 9601 CD 34 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9604              ;	call Reinicio
 230+ 9604
 231+ 9604              ; ---------- ---------- ----------
 232+ 9604              ;
 233+ 9604              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9604
 235+ 9604 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9606 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9607 CD 20 96     	call DESPLZ_DER
 238+ 960A C1           	pop bc
 239+ 960B 10 F9        	djnz 5B
 240+ 960D 2A 4F 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9610 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9611 22 4F 89     	ld (Posicion_actual),hl
 243+ 9614 CD 06 9F     	call Genera_coordenadas
 244+ 9617 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9619
 246+ 9619              ; ---------- ---------- ----------
 247+ 9619
 248+ 9619 2A 4F 89     8 ld hl,(Posicion_actual)
 249+ 961C CD 20 96     	call DESPLZ_DER
 250+ 961F C9           2 ret
 251+ 9620
 252+ 9620              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9620              ;
 254+ 9620              ;	22/9/22
 255+ 9620              ;
 256+ 9620
 257+ 9620 CD 2F 96     DESPLZ_DER call Desplaza_derecha
 258+ 9623 CD 7B 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9626 CD A4 96         call Ciclo_completo
 260+ 9629 21 6F 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 962C CB FE        	set 7,(hl)
 262+ 962E C9           	ret
 263+ 962F
 264+ 962F              ; ******************************************************************************************************************************************************************************************
 265+ 962F              ;	15/02/23
 266+ 962F              ;
 267+ 962F
 268+ 962F 3A 77 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9632 47           	ld b,a
 270+ 9633 2A 5B 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9636 23           1 inc hl
 272+ 9637 23           	inc hl
 273+ 9638 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 963A 22 5B 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 963D CD A6 8B     	call Extrae_address
 276+ 9640 22 51 89     	ld (Puntero_objeto),hl
 277+ 9643
 278+ 9643              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9643
 280+ 9643              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9643              ; Cuántos movimientos hemos hecho ??
 282+ 9643              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9643
 284+ 9643 2A 57 89     7 ld hl,(Indice_Sprite_der)
 285+ 9646 EB           	ex de,hl
 286+ 9647 A7           	and a
 287+ 9648 ED 52        	sbc hl,de
 288+ 964A CB 3D        	srl l
 289+ 964C 3E 08        6 ld a,8
 290+ 964E 95           	sub l
 291+ 964F 30 1E        	jr nc,3F
 292+ 9651
 293+ 9651              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9651              ; B="0".
 295+ 9651
 296+ 9651 04           4 inc b
 297+ 9652 3C           	inc a
 298+ 9653 20 FC        	jr nz,4B
 299+ 9655 78           	ld a,b
 300+ 9656 08           	ex af,af
 301+ 9657 2A 57 89     	ld hl,(Indice_Sprite_der)
 302+ 965A 23           5 inc hl
 303+ 965B 23           	inc hl
 304+ 965C 10 FC        	djnz 5B
 305+ 965E 22 5B 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9661 CD A6 8B     	call Extrae_address
 307+ 9664 22 51 89     	ld (Puntero_objeto),hl
 308+ 9667
 309+ 9667              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9667              ; _(Posicion_actual).
 311+ 9667
 312+ 9667 21 4F 89     	ld hl,Posicion_actual
 313+ 966A 34           	inc (hl)
 314+ 966B 08               ex af,af
 315+ 966C 6F           	ld l,a
 316+ 966D 18 DD        	jr 6B
 317+ 966F
 318+ 966F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 966F
 320+ 966F 47           3 ld b,a
 321+ 9670 2A 59 89     	ld hl,(Indice_Sprite_izq)
 322+ 9673 23           2 inc hl
 323+ 9674 23           	inc hl
 324+ 9675 10 FC        	djnz 2B
 325+ 9677 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 967A C9           8 ret
 327+ 967B
 328+ 967B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 967B              ;
 330+ 967B              ;	24/7/22
 331+ 967B              ;
 332+ 967B              ;	modifica_parametros_1er_DESPLZ_2
 333+ 967B              ;
 334+ 967B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 967B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 967B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 967B
 338+ 967B 3A 55 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 967E A7           	and a
 340+ 967F 20 1F        	jr nz,1F
 341+ 9681 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9683 32 55 89         ld (CTRL_DESPLZ),a
 343+ 9686
 344+ 9686 21 4E 89     	ld hl,Columns
 345+ 9689 34           	inc (hl)
 346+ 968A 3A 61 89     	ld a,(Cuad_objeto)
 347+ 968D E6 01        	and 1
 348+ 968F 28 0F        	jr z,1F
 349+ 9691 2A 4F 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9694 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9695 22 4F 89     	ld (Posicion_actual),hl
 352+ 9698 CD 06 9F     	call Genera_coordenadas
 353+ 969B CD 00 98     	call Inc_CTRL_DESPLZ
 354+ 969E 18 03        	jr 2F
 355+ 96A0 CD 00 98     1 call Inc_CTRL_DESPLZ
 356+ 96A3 C9           2 ret
 357+ 96A4
 358+ 96A4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A4              ;
 360+ 96A4              ;	24/7/22
 361+ 96A4              ;
 362+ 96A4              ;	Ciclo_completo.
 363+ 96A4              ;
 364+ 96A4              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A4              ;
 366+ 96A4              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A4              ; 	Decrementamos (Columns).
 368+ 96A4              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A4              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A4
 371+ 96A4
 372+ 96A4 3A 55 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96A7 FE FF        	cp $ff
 374+ 96A9 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96AB E6 F0        	and $f0
 376+ 96AD 20 28        	jr nz,3F
 377+ 96AF
 378+ 96AF              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96AF
 380+ 96AF 3A 55 89     	ld a,(CTRL_DESPLZ)
 381+ 96B2 47           	ld b,a
 382+ 96B3 3E F8        	ld a,$f8
 383+ 96B5 80           	add b
 384+ 96B6 32 55 89     	ld (CTRL_DESPLZ),a
 385+ 96B9 18 1C        	jr 3F
 386+ 96BB 21 4E 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96BE 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96BF AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C0 32 55 89     	ld (CTRL_DESPLZ),a
 390+ 96C3 3A 61 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96C6 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96C8 20 0A        	jr nz,2F
 393+ 96CA 2A 4F 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96CD 23           	inc hl
 395+ 96CE 22 4F 89     	ld (Posicion_actual),hl
 396+ 96D1 CD 06 9F     	call Genera_coordenadas
 397+ 96D4
 398+ 96D4              ; Inicia el puntero de Sprite.
 399+ 96D4
 400+ 96D4 CD BB 8B     2 call Inicia_puntero_objeto_der
 401+ 96D7 C9           3 ret
 402+ 96D8
 403+ 96D8              ; ******************************************************************************************************************************************************************************************
 404+ 96D8              ;
 405+ 96D8              ;	15/02/23
 406+ 96D8              ;
 407+ 96D8              ;	Mov_left.
 408+ 96D8              ;
 409+ 96D8              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96D8              ;
 411+ 96D8              Mov_left
 412+ 96D8
 413+ 96D8 21 6F 89     	ld hl,Ctrl_0
 414+ 96DB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96DD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96DD              ; 																	; _ en el caso de que no lo haya.
 417+ 96DD 3A 6F 89     	ld a,(Ctrl_0)
 418+ 96E0 CB 77        	bit 6,a
 419+ 96E2 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E4
 421+ 96E4 CD FA 97     	call Stop_Amadeus_left
 422+ 96E7 C8           	ret z
 423+ 96E8 20 4A        	jr nz,8F
 424+ 96EA
 425+ 96EA 3A 53 89     11 ld a,(Coordenada_X)
 426+ 96ED A7           	and a
 427+ 96EE 20 44        	jr nz,8F
 428+ 96F0
 429+ 96F0 3A 55 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F3 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F4 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96F6
 433+ 96F6              ; ---------- ---------- ----------
 434+ 96F6
 435+ 96F6 3A 76 89     	ld a,(Vel_left)
 436+ 96F9 FE 02        	cp 2
 437+ 96FB 28 0F        	jr z,1F
 438+ 96FD 38 04        	jr c,6F
 439+ 96FF FE 04        	cp 4
 440+ 9701 28 12        	jr z,7F
 441+ 9703
 442+ 9703              ; ---------- ---------- ----------
 443+ 9703
 444+ 9703 3A 55 89     6 ld a,(CTRL_DESPLZ)
 445+ 9706 FE F8        	cp $f8
 446+ 9708 20 2A        	jr nz,8F
 447+ 970A 18 10        	jr 4F
 448+ 970C 3A 55 89     1 ld a,(CTRL_DESPLZ)
 449+ 970F FE F9        	cp $f9
 450+ 9711 20 21        	jr nz,8F
 451+ 9713 18 07        	jr 4F
 452+ 9715 3A 55 89     7 ld a,(CTRL_DESPLZ)
 453+ 9718 FE FB        	cp $fb
 454+ 971A 20 18        	jr nz,8F
 455+ 971C
 456+ 971C              ; ---------- ---------- ----------
 457+ 971C
 458+ 971C              4
 459+ 971C CD 22 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 971F              ;	call Reinicio
 461+ 971F
 462+ 971F              ; ---------- ---------- ----------
 463+ 971F
 464+ 971F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9721 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9722
 467+ 9722              ;	ld hl,(Indice_Sprite_izq)
 468+ 9722              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9722
 470+ 9722 CD 3B 97     	call DESPLZ_IZQ
 471+ 9725 C1           	pop bc
 472+ 9726 10 F9        	djnz 5B
 473+ 9728 2A 4F 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 972B 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 972C 22 4F 89     	ld (Posicion_actual),hl
 476+ 972F CD 06 9F     	call Genera_coordenadas
 477+ 9732 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9734
 479+ 9734              ; ---------- ---------- ----------
 480+ 9734
 481+ 9734              ; Movemos, no hay recolocación.
 482+ 9734
 483+ 9734 2A 4F 89     8 ld hl,(Posicion_actual)
 484+ 9737 CD 3B 97     	call DESPLZ_IZQ
 485+ 973A C9           2 ret
 486+ 973B
 487+ 973B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 973B              ;
 489+ 973B              ;	22/9/22
 490+ 973B
 491+ 973B              DESPLZ_IZQ
 492+ 973B
 493+ 973B CD 4A 97     	call Desplaza_izquierda
 494+ 973E CD 96 97         call modifica_parametros_1er_DESPLZ
 495+ 9741 CD BE 97     	call Ciclo_completo_2
 496+ 9744 21 6F 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9747 CB BE        	res 7,(hl)
 498+ 9749 C9           	ret
 499+ 974A
 500+ 974A              Desplaza_izquierda
 501+ 974A
 502+ 974A 3A 76 89     	ld a,(Vel_left)
 503+ 974D 47           	ld b,a
 504+ 974E 2A 5D 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9751 23           1 inc hl
 506+ 9752 23           	inc hl
 507+ 9753 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9755 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9758 CD A6 8B     	call Extrae_address
 510+ 975B 22 51 89     	ld (Puntero_objeto),hl
 511+ 975E
 512+ 975E              ; Modifica (Puntero_DESPLZ_der).
 513+ 975E
 514+ 975E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 975E              ; Cuántos movimientos hemos hecho ??
 516+ 975E              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 975E
 518+ 975E 2A 59 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9761 EB           	ex de,hl
 520+ 9762 A7           	and a
 521+ 9763 ED 52        	sbc hl,de
 522+ 9765 CB 3D        	srl l
 523+ 9767 3E 08        6 ld a,8
 524+ 9769 95           	sub l
 525+ 976A 30 1E        	jr nc,3F
 526+ 976C
 527+ 976C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 976C              ; B="0".
 529+ 976C
 530+ 976C 04           4 inc b
 531+ 976D 3C           	inc a
 532+ 976E 20 FC        	jr nz,4B
 533+ 9770 78           	ld a,b
 534+ 9771 08           	ex af,af
 535+ 9772 2A 59 89     	ld hl,(Indice_Sprite_izq)
 536+ 9775 23           5 inc hl
 537+ 9776 23           	inc hl
 538+ 9777 10 FC        	djnz 5B
 539+ 9779 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 977C CD A6 8B     	call Extrae_address
 541+ 977F 22 51 89     	ld (Puntero_objeto),hl
 542+ 9782
 543+ 9782              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9782              ; _(Posicion_actual).
 545+ 9782
 546+ 9782 21 4F 89     	ld hl,Posicion_actual
 547+ 9785 35           	dec (hl)
 548+ 9786 08           	ex af,af
 549+ 9787 6F           	ld l,a
 550+ 9788 18 DD        	jr 6B
 551+ 978A
 552+ 978A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 978A
 554+ 978A 47           3 ld b,a
 555+ 978B 2A 57 89     	ld hl,(Indice_Sprite_der)
 556+ 978E 23           2 inc hl
 557+ 978F 23           	inc hl
 558+ 9790 10 FC        	djnz 2B
 559+ 9792 22 5B 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9795 C9           8 ret
 561+ 9796
 562+ 9796              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9796              ;
 564+ 9796              ;	modifica_parametros_1er_DESPLZ
 565+ 9796              ;
 566+ 9796              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9796              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9796              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9796
 570+ 9796 3A 55 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9799 A7           	and a
 572+ 979A 20 1E        	jr nz,1F
 573+ 979C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 979D 32 55 89         ld (CTRL_DESPLZ),a
 575+ 97A0 21 4E 89     	ld hl,Columns
 576+ 97A3 34           	inc (hl)
 577+ 97A4 3A 61 89     	ld a,(Cuad_objeto)
 578+ 97A7 E6 01        	and 1
 579+ 97A9 20 0F        	jr nz,1F
 580+ 97AB 2A 4F 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97AE 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97AF 22 4F 89     	ld (Posicion_actual),hl
 583+ 97B2 CD 06 9F     	call Genera_coordenadas
 584+ 97B5 CD 11 98     	call Dec_CTRL_DESPLZ
 585+ 97B8 18 03        	jr 2F
 586+ 97BA CD 11 98     1 call Dec_CTRL_DESPLZ
 587+ 97BD C9           2 ret
 588+ 97BE
 589+ 97BE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97BE
 591+ 97BE 3A 55 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C1 FE F7        	cp $f7
 593+ 97C3 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97C5 30 2C        	jr nc,3F
 595+ 97C7
 596+ 97C7              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97C7
 598+ 97C7 06 00        	ld b,0
 599+ 97C9 04           4 inc b
 600+ 97CA 3C           	inc a
 601+ 97CB FE F7        	cp $f7
 602+ 97CD 20 FA        	jr nz,4B
 603+ 97CF 3E FF        	ld a,$ff
 604+ 97D1 90           	sub b
 605+ 97D2 32 55 89     	ld (CTRL_DESPLZ),a
 606+ 97D5 18 1C        	jr 3F
 607+ 97D7
 608+ 97D7              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97D7
 610+ 97D7 21 4E 89     1 ld hl,Columns
 611+ 97DA 35           	dec (hl)
 612+ 97DB AF           	xor a
 613+ 97DC 32 55 89     	ld (CTRL_DESPLZ),a
 614+ 97DF 3A 61 89     	ld a,(Cuad_objeto)
 615+ 97E2 E6 01        	and 1
 616+ 97E4 28 0A        	jr z,2F
 617+ 97E6 2A 4F 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97E9 2B           	dec hl
 619+ 97EA 22 4F 89     	ld (Posicion_actual),hl
 620+ 97ED CD 06 9F     	call Genera_coordenadas
 621+ 97F0
 622+ 97F0              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F0
 624+ 97F0 CD CE 8B     2 call Inicia_puntero_objeto_izq
 625+ 97F3 C9           3 ret
 626+ 97F4
 627+ 97F4              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F4              ;
 629+ 97F4              ;	19/10/22
 630+ 97F4              ;
 631+ 97F4              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F4              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F4
 634+ 97F4 3A 53 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97F7 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97F9 C9           	ret
 637+ 97FA
 638+ 97FA              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97FA              ;
 640+ 97FA              ;	19/10/22
 641+ 97FA              ;
 642+ 97FA              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97FA              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97FA
 645+ 97FA 3A 53 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97FD FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97FF C9           	ret
 648+ 9800
 649+ 9800              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9800              ;
 651+ 9800              ;	24/7/22
 652+ 9800              ;
 653+ 9800              ;	Inc_CTRL_DESPLZ
 654+ 9800              ;
 655+ 9800              ;
 656+ 9800              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9800
 658+ 9800 21 55 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9803 3A 77 89     	ld a,(Vel_right)
 660+ 9806 A7           	and a
 661+ 9807 28 06        	jr z,1F
 662+ 9809 47           	ld b,a
 663+ 980A 34           3 inc (hl)
 664+ 980B 10 FD        	djnz 3B
 665+ 980D 18 01        	jr 2F
 666+ 980F 34           1 inc (hl)
 667+ 9810 C9           2 ret
 668+ 9811
 669+ 9811              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9811              ;
 671+ 9811              ;	5/2/23
 672+ 9811              ;
 673+ 9811              ;	Dec_CTRL_DESPLZ
 674+ 9811              ;
 675+ 9811              ;
 676+ 9811              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9811
 678+ 9811 21 55 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9814 3A 76 89     	ld a,(Vel_left)
 680+ 9817 A7           	and a
 681+ 9818 28 06        	jr z,1F
 682+ 981A 47           	ld b,a
 683+ 981B 35           3 dec (hl)
 684+ 981C 10 FD        	djnz 3B
 685+ 981E 18 01        	jr 2F
 686+ 9820 35           1 dec (hl)
 687+ 9821 C9           2 ret
 688+ 9822
 689+ 9822              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9822
 691+ 9822 2A 4F 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9825 01 1F 00     	ld bc,31
 693+ 9828 A7           	and a
 694+ 9829 ED 4A        	adc hl,bc
 695+ 982B 22 4F 89     	ld (Posicion_actual),hl
 696+ 982E 21 6F 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9831 CB C6        	set 0,(hl)
 698+ 9833 C9           	ret
 699+ 9834
 700+ 9834              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9834
 702+ 9834 2A 4F 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9837 01 1F 00     	ld bc,31
 704+ 983A A7           	and a
 705+ 983B ED 42        	sbc hl,bc
 706+ 983D 22 4F 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9840 21 6F 89     	ld hl,Ctrl_0
 708+ 9843 CB CE        	set 1,(hl)
 709+ 9845 C9           	ret
 710+ 9846
 711+ 9846              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9846
 713+ 9846 24           Reaparece_abajo inc h
 714+ 9847 01 E0 17     	ld bc,$17e0
 715+ 984A A7           	and a
 716+ 984B ED 4A        	adc hl,bc
 717+ 984D 22 4F 89     	ld (Posicion_actual),hl
 718+ 9850 21 6F 89     	ld hl,Ctrl_0
 719+ 9853 CB D6        	set 2,(hl)
 720+ 9855 C9           	ret
 721+ 9856
 722+ 9856              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9856
 724+ 9856 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9859 A7           	and a
 726+ 985A ED 42        	sbc hl,bc
 727+ 985C 22 4F 89     	ld (Posicion_actual),hl
 728+ 985F 21 6F 89     	ld hl,Ctrl_0
 729+ 9862 CB DE        	set 3,(hl)
 730+ 9864 C9           	ret
 731+ 9865
 732+ 9865              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9865              ;
 734+ 9865              ;	15/07/23
 735+ 9865
 736+ 9865              Reinicio
 737+ 9865
 738+ 9865              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9865
 740+ 9865 AF           	xor a
 741+ 9866 21 86 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9869 CD 87 98     	call Limpia_contenido_hl
 743+ 986C
 744+ 986C 21 4F 89     	ld hl,Posicion_actual
 745+ 986F CD 87 98     	call Limpia_contenido_hl
 746+ 9872
 747+ 9872 CD 30 8D     	call Inicializa_Puntero_indice_mov
 748+ 9875 CD 53 99     	call Inicia_Puntero_mov
 749+ 9878
 750+ 9878 21 88 89     	ld hl,Incrementa_puntero
 751+ 987B 06 05        	ld b,5
 752+ 987D 77           1 ld (hl),a
 753+ 987E 23           	inc hl
 754+ 987F 10 FC        	djnz 1B
 755+ 9881
 756+ 9881 21 74 89     	ld hl,Ctrl_2
 757+ 9884 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9886
 759+ 9886 C9           	ret
 760+ 9887
 761+ 9887 77           Limpia_contenido_hl	ld (hl),a
 762+ 9888 23           	inc hl
 763+ 9889 77           	ld (hl),a
 764+ 988A C9           	ret
 765+ 988B
 766+ 988B
# file closed: Direcciones.asm
1729  988B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 988B              ; ----- ----- ----- ----- -----
   2+ 988B              ;
   3+ 988B              ;   28/12/23
   4+ 988B
   5+ 988B              Movimiento
   6+ 988B
   7+ 988B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 988B
   9+ 988B 3A 74 89         ld a,(Ctrl_2)
  10+ 988E CB 57            bit 2,a
  11+ 9890 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9892
  13+ 9892 2A 84 89         ld hl,(Puntero_mov)
  14+ 9895 7E               ld a,(hl)
  15+ 9896
  16+ 9896              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9896
  18+ 9896              Inicia_desplazamiento.
  19+ 9896
  20+ 9896              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9896
  22+ 9896 CD 89 99         call Ajusta_velocidad_desplazamiento
  23+ 9899
  24+ 9899              ; Iniciamos (Repetimos_mov).
  25+ 9899
  26+ 9899 7E               ld a,(hl)
  27+ 989A E6 0F            and $0f
  28+ 989C 32 8A 89         ld (Repetimos_desplazamiento),a
  29+ 989F 32 8B 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98A2
  31+ 98A2              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98A2
  33+ 98A2 23               inc hl
  34+ 98A3 7E               ld a,(hl)
  35+ 98A4 32 8D 89         ld (Cola_de_desplazamiento),a
  36+ 98A7 2B               dec hl
  37+ 98A8
  38+ 98A8 21 74 89         ld hl,Ctrl_2
  39+ 98AB CB D6            set 2,(hl)
  40+ 98AD
  41+ 98AD              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98AD              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98AD
  44+ 98AD              Desplazamiento_iniciado
  45+ 98AD
  46+ 98AD CD 5D 99         call Aplica_desplazamiento
  47+ 98B0
  48+ 98B0              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B0
  50+ 98B0 3A AD 89         ld a,(Ctrl_3)
  51+ 98B3 CB 4F            bit 1,a
  52+ 98B5 C0               ret nz
  53+ 98B6
  54+ 98B6 21 8A 89     3 ld hl,Repetimos_desplazamiento
  55+ 98B9 35               dec (hl)
  56+ 98BA C0               ret nz
  57+ 98BB
  58+ 98BB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98BB              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98BB              ; Analiza (Cola_de_desplazamiento).
  61+ 98BB
  62+ 98BB 3A 8D 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98BE A7               and a
  64+ 98BF CC B2 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98C2 28 30            jr z,Reinicia_el_movimiento
  66+ 98C4
  67+ 98C4 FE FF            cp $ff
  68+ 98C6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98C8
  70+ 98C8 FE FE            cp $fe
  71+ 98CA CC 37 99         call z,Fijamos_bucle
  72+ 98CD 28 25            jr z,Reinicia_el_movimiento
  73+ 98CF
  74+ 98CF FE FD            cp $fd
  75+ 98D1 20 11            jr nz,1F
  76+ 98D3
  77+ 98D3              ; ---
  78+ 98D3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D3
  80+ 98D3 3A 74 89         ld a,(Ctrl_2)
  81+ 98D6 CB 5F            bit 3,a
  82+ 98D8 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98DA
  84+ 98DA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98DA
  86+ 98DA 21 74 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98DD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98DF
  89+ 98DF CD 48 99         call Inicia_Repetimos_movimiento
  90+ 98E2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98E4              ; ---
  92+ 98E4
  93+ 98E4 FE 01        1 cp 1
  94+ 98E6 CA 21 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98E9
  96+ 98E9 3D               dec a
  97+ 98EA 32 8D 89         ld (Cola_de_desplazamiento),a
  98+ 98ED
  99+ 98ED 3A 8B 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F0 32 8A 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F3 C9               ret
 103+ 98F4
 104+ 98F4              Reinicia_el_movimiento
 105+ 98F4
 106+ 98F4 3A 74 89         ld a,(Ctrl_2)
 107+ 98F7 CB 5F            bit 3,a
 108+ 98F9 28 1B            jr z,2F
 109+ 98FB
 110+ 98FB              ; (Cola_de_desplazamiento)="254".
 111+ 98FB
 112+ 98FB 21 8C 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 98FE 35               dec (hl)
 114+ 98FF 20 15            jr nz,2F
 115+ 9901
 116+ 9901              ; Fin de las repeticiones del último movimiento.
 117+ 9901
 118+ 9901 21 74 89         ld hl,Ctrl_2
 119+ 9904 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9906
 121+ 9906 2A 84 89         ld hl,(Puntero_mov)
 122+ 9909 23               inc hl
 123+ 990A 23               inc hl
 124+ 990B 23               inc hl
 125+ 990C 22 84 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 990F              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 990F 7E               ld a,(hl)
 128+ 9910 32 8D 89         ld (Cola_de_desplazamiento),a
 129+ 9913
 130+ 9913 C3 BB 98         jp Cola
 131+ 9916
 132+ 9916 CD 53 99     2 call Inicia_Puntero_mov
 133+ 9919
 134+ 9919 21 74 89         ld hl,Ctrl_2
 135+ 991C CB 96            res 2,(hl)
 136+ 991E
 137+ 991E C3 8B 98         jp Movimiento
 138+ 9921
 139+ 9921              Siguiente_desplazamiento
 140+ 9921
 141+ 9921              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9921              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9921
 144+ 9921 21 74 89         ld hl,Ctrl_2
 145+ 9924 CB 96            res 2,(hl)
 146+ 9926
 147+ 9926 2A 84 89         ld hl,(Puntero_mov)
 148+ 9929 23               inc hl
 149+ 992A 23               inc hl
 150+ 992B 22 84 89         ld (Puntero_mov),hl
 151+ 992E
 152+ 992E 7E               ld a,(hl)
 153+ 992F A7               and a
 154+ 9930 CC B2 99         call z,Incrementa_Puntero_indice_mov
 155+ 9933 CA F4 98         jp z,Reinicia_el_movimiento
 156+ 9936
 157+ 9936 C9               ret
 158+ 9937
 159+ 9937              ; Subrutinas -----------------------------------------
 160+ 9937              ; ---------- --------- --------- ---------- ----------
 161+ 9937              ;
 162+ 9937              ;   24/07/23
 163+ 9937              ;
 164+ 9937              ;   Fijamos_bucle
 165+ 9937              ;
 166+ 9937              ;
 167+ 9937
 168+ 9937              Fijamos_bucle
 169+ 9937
 170+ 9937 3A 88 89         ld a,(Incrementa_puntero)
 171+ 993A 3C               inc a
 172+ 993B 32 89 89         ld (Incrementa_puntero_backup),a
 173+ 993E
 174+ 993E CD B2 99         call Incrementa_Puntero_indice_mov
 175+ 9941 2A 82 89         ld hl,(Puntero_indice_mov)
 176+ 9944 22 86 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9947 C9               ret
 178+ 9948
 179+ 9948              ; ---------- --------- --------- ---------- ----------
 180+ 9948              ;
 181+ 9948              ;   07/7/23
 182+ 9948              ;
 183+ 9948              ;   Inicia_Repetimos_movimiento
 184+ 9948              ;
 185+ 9948              ;
 186+ 9948
 187+ 9948              Inicia_Repetimos_movimiento
 188+ 9948
 189+ 9948              ; Iniciamos (Repetimos_movimiento).
 190+ 9948
 191+ 9948 DD 2A 84 89      ld ix,(Puntero_mov)
 192+ 994C DD 7E 02         ld a,(ix+2)
 193+ 994F 32 8C 89         ld (Repetimos_movimiento),a
 194+ 9952
 195+ 9952 C9               ret
 196+ 9953
 197+ 9953              ; ---------- --------- --------- ---------- ----------
 198+ 9953              ;
 199+ 9953              ;   26/6/23
 200+ 9953              ;
 201+ 9953              ;   Inicia_Puntero_mov
 202+ 9953              ;
 203+ 9953              ;
 204+ 9953
 205+ 9953 2A 82 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9956 CD A6 8B         call Extrae_address
 207+ 9959 22 84 89         ld (Puntero_mov),hl
 208+ 995C C9               ret
 209+ 995D
 210+ 995D              ; ---------- --------- --------- ---------- ----------
 211+ 995D              ;
 212+ 995D              ;   27/06/23
 213+ 995D              ;
 214+ 995D              ;   Aplica_movimiento.
 215+ 995D
 216+ 995D              Aplica_desplazamiento
 217+ 995D
 218+ 995D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 995D
 220+ 995D 2A 84 89         ld hl, (Puntero_mov)
 221+ 9960
 222+ 9960 7E               ld a,(hl)
 223+ 9961 E6 F0            and $f0
 224+ 9963 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9964
 226+ 9964 CB 7E            bit 7,(hl)
 227+ 9966 28 03            jr z,1F
 228+ 9968 CD 72 95         call Mov_up
 229+ 996B 2A 84 89     1 ld hl, (Puntero_mov)
 230+ 996E CB 76            bit 6,(hl)
 231+ 9970 28 03            jr z,2F
 232+ 9972 CD 39 95         call Mov_down
 233+ 9975
 234+ 9975              ; Se ha aplicado reinicio ???
 235+ 9975              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9975
 237+ 9975              ;    ld a,(Ctrl_3)
 238+ 9975              ;    bit 1,a
 239+ 9975              ;    ret nz
 240+ 9975
 241+ 9975 2A 84 89     2 ld hl, (Puntero_mov)
 242+ 9978 CB 6E            bit 5,(hl)
 243+ 997A 28 03            jr z,3F
 244+ 997C CD D8 96         call Mov_left
 245+ 997F 2A 84 89     3 ld hl, (Puntero_mov)
 246+ 9982 CB 66            bit 4,(hl)
 247+ 9984 C8               ret z
 248+ 9985 CD B5 95         call Mov_right
 249+ 9988 C9               ret
 250+ 9989
 251+ 9989              ; ---------- --------- --------- ---------- ----------
 252+ 9989              ;
 253+ 9989              ;   26/06/23
 254+ 9989              ;
 255+ 9989              ;   Ajusta_velocidad_desplazamiento.
 256+ 9989
 257+ 9989              Ajusta_velocidad_desplazamiento
 258+ 9989
 259+ 9989              ; 1er byte de la cadena de movimiento.
 260+ 9989              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9989
 262+ 9989 CD A7 99         call Extrae_nibble_alto
 263+ 998C
 264+ 998C 32 78 89         ld (Vel_up),a
 265+ 998F 79               ld a,c
 266+ 9990 E6 0F            and $0f
 267+ 9992 32 79 89         ld (Vel_down),a
 268+ 9995
 269+ 9995              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9995              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9995
 272+ 9995 23               inc hl
 273+ 9996 CD A7 99         call Extrae_nibble_alto
 274+ 9999
 275+ 9999 32 76 89         ld (Vel_left),a
 276+ 999C 79               ld a,c
 277+ 999D E6 0F            and $0f
 278+ 999F 32 77 89         ld (Vel_right),a
 279+ 99A2
 280+ 99A2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99A2
 282+ 99A2 23               inc hl
 283+ 99A3 22 84 89         ld (Puntero_mov),hl
 284+ 99A6 C9               ret
 285+ 99A7
 286+ 99A7 06 04        Extrae_nibble_alto ld b,4
 287+ 99A9 7E               ld a,(hl)
 288+ 99AA 4F               ld c,a
 289+ 99AB E6 F0            and $f0
 290+ 99AD CB 3F        1 srl a
 291+ 99AF 10 FC            djnz 1B
 292+ 99B1 C9               ret
 293+ 99B2
 294+ 99B2              ; ---------- --------- --------- ---------- ----------
 295+ 99B2              ;
 296+ 99B2              ;   5/7/23
 297+ 99B2              ;
 298+ 99B2              ;   Incrementa_Puntero_indice_mov
 299+ 99B2
 300+ 99B2              Incrementa_Puntero_indice_mov
 301+ 99B2
 302+ 99B2 21 88 89         ld hl,Incrementa_puntero
 303+ 99B5 34               inc (hl)
 304+ 99B6
 305+ 99B6 2A 82 89         ld hl,(Puntero_indice_mov)
 306+ 99B9 01 02 00         ld bc,2
 307+ 99BC A7               and a
 308+ 99BD 09               add hl,bc
 309+ 99BE 22 82 89         ld (Puntero_indice_mov),hl
 310+ 99C1
 311+ 99C1 7E               ld a,(hl)
 312+ 99C2 A7               and a
 313+ 99C3
 314+ 99C3              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C3
 316+ 99C3              ;    jr z,$
 317+ 99C3
 318+ 99C3              ;! Reinicia el Patrón de movimiento.
 319+ 99C3
 320+ 99C3 CC C8 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99C6
 322+ 99C6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99C7
 324+ 99C7 C9               ret
 325+ 99C8
 326+ 99C8              ; ---------- --------- --------- ---------- ----------
 327+ 99C8              ;
 328+ 99C8              ;   15/01/24
 329+ 99C8              ;
 330+ 99C8              ;   Inicializa_Puntero_indice_mov
 331+ 99C8
 332+ 99C8              Inicializa_Puntero_indice_mov_2
 333+ 99C8
 334+ 99C8              ; Existe etiqueta de bucle principal???
 335+ 99C8
 336+ 99C8 2A 86 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99CB 24               inc h
 338+ 99CC 25               dec h
 339+ 99CD 28 05            jr z,2F
 340+ 99CF
 341+ 99CF 22 82 89         ld (Puntero_indice_mov),hl
 342+ 99D2 18 14            jr 3F
 343+ 99D4
 344+ 99D4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99D4
 346+ 99D4 3A 88 89     2 ld a,(Incrementa_puntero)
 347+ 99D7 47               ld b,a
 348+ 99D8
 349+ 99D8 2A 82 89         ld hl,(Puntero_indice_mov)
 350+ 99DB 2B           1 dec hl
 351+ 99DC 2B               dec hl
 352+ 99DD 10 FC            djnz 1B
 353+ 99DF 22 82 89         ld (Puntero_indice_mov),hl
 354+ 99E2
 355+ 99E2 AF               xor a
 356+ 99E3 32 88 89         ld (Incrementa_puntero),a
 357+ 99E6 18 06            jr 4F
 358+ 99E8
 359+ 99E8 3A 89 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99EB 32 88 89         ld (Incrementa_puntero),a
 361+ 99EE C9           4 ret
 362+ 99EF
 363+ 99EF              ; ----------------------------------------------------------------------
 364+ 99EF              ;
 365+ 99EF              ;   30/01/24
 366+ 99EF              ;
 367+ 99EF              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99EF
 369+ 99EF 3A 4C 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99F2 CD 81 8E         call Calcula_salto_en_BC
 371+ 99F5 21 7A 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99F8 A7               and a
 373+ 99F9 ED 4A            adc hl,bc
 374+ 99FB C9               ret
 375+ 99FC
 376+ 99FC              ; ----------------------------------------------------------------------
 377+ 99FC              ;
 378+ 99FC              ;   30/01/24
 379+ 99FC              ;
 380+ 99FC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 99FC              ;
 382+ 99FC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 99FC
 384+ 99FC 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 99FD 23               inc hl
 386+ 99FE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 99FF 69               ld l,c
 388+ 9A00 60               ld h,b
 389+ 9A01 22 6D 89         ld (Contador_de_mov_masticados),hl
 390+ 9A04 C9               ret
 391+ 9A05
# file closed: Movimiento.asm
1730  9A05              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9A05              ; ******************************************************************************************************************************************************************************************
   2+ 9A05              ;
   3+ 9A05              ;   21/07/23
   4+ 9A05              ;
   5+ 9A05              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A05              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A05              ;
   8+ 9A05              ;
   9+ 9A05              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A05              ;
  11+ 9A05              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A05              ;               _ hacen las entidades hacia abajo.
  13+ 9A05              ;
  14+ 9A05              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A05              ;
  16+ 9A05              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A05              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A05              ;
  19+ 9A05              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A05              ;           _ la bala.
  21+ 9A05              ;
  22+ 9A05              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A05              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A05              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A05              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A05              ;           _ en el momento de generarse la bala)).
  27+ 9A05
  28+ 9A05              Genera_disparo
  29+ 9A05
  30+ 9A05              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A05              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A05              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A05              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A05              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A05              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A05              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A05
  38+ 9A05              ; Exclusiones:
  39+ 9A05
  40+ 9A05 3A 79 89         ld a,(Vel_down)
  41+ 9A08 47               ld b,a
  42+ 9A09 3A BF 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9A0C B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9A0D D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9A0E 3A 70 89         ld a,(Columnas)
  46+ 9A11 47               ld b,a
  47+ 9A12 3A 4E 89         ld a,(Columns)
  48+ 9A15 B8               cp b
  49+ 9A16 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9A17
  51+ 9A17              ; ----- ----- -----
  52+ 9A17
  53+ 9A17 3A 6F 89         ld a,(Ctrl_0)
  54+ 9A1A CB 77            bit 6,a
  55+ 9A1C 20 06            jr nz,14F
  56+ 9A1E
  57+ 9A1E 3A 54 89         ld a,(Coordenada_y)
  58+ 9A21 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9A23 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9A24
  61+ 9A24 21 31 81     14 ld hl,Indice_disparo
  62+ 9A27 3A 55 89         ld a,(CTRL_DESPLZ)
  63+ 9A2A 4F               ld c,a
  64+ 9A2B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9A2D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9A2D              ;                                            ""        ""       "f9", B="1"
  67+ 9A2D              ;                                            ""        ""       "fb", B="2"
  68+ 9A2D              ;                                            ""        ""       "fb", B="3"
  69+ 9A2D A7               and a
  70+ 9A2E 28 10            jr z,1F
  71+ 9A30 E6 01            and 1
  72+ 9A32 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9A33
  74+ 9A33 79               ld a,c
  75+ 9A34 16 F9            ld d,$f9
  76+ 9A36 23           2 inc hl
  77+ 9A37 23               inc hl
  78+ 9A38 04               inc b
  79+ 9A39 BA               cp d
  80+ 9A3A 28 04            jr z,1F
  81+ 9A3C 14               inc d
  82+ 9A3D 14               inc d
  83+ 9A3E 18 F6            jr 2B
  84+ 9A40
  85+ 9A40 CD A6 8B     1 call Extrae_address
  86+ 9A43 E5               push hl
  87+ 9A44 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9A46 DD 21 E4 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A4A
  90+ 9A4A              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A4A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A4A
  93+ 9A4A 3A 6F 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A4D CB 77            bit 6,a
  95+ 9A4F 20 04            jr nz,19F
  96+ 9A51
  97+ 9A51 AF               xor a
  98+ 9A52 32 C8 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A55
 100+ 9A55 3A 61 89     19 ld a,(Cuad_objeto)
 101+ 9A58 FE 02            cp 2
 102+ 9A5A 38 66            jr c,3F
 103+ 9A5C 28 64            jr z,3F
 104+ 9A5E
 105+ 9A5E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A5E
 107+ 9A5E E6 01            and 1
 108+ 9A60 28 30            jr z,4F
 109+ 9A62
 110+ 9A62              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A62              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A62              ;
 113+ 9A62              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A62              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A62              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A62
 117+ 9A62 2A 4F 89     	ld hl,(Posicion_actual)
 118+ 9A65
 119+ 9A65              ;   Amadeus o entidad ???.
 120+ 9A65
 121+ 9A65 3A 6F 89         ld a,(Ctrl_0)
 122+ 9A68 CB 77            bit 6,a
 123+ 9A6A 28 0A            jr z,8F
 124+ 9A6C
 125+ 9A6C              ; 	Dispara Amadeus.
 126+ 9A6C
 127+ 9A6C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A6E CD 0D 92         call PreviousScan
 129+ 9A71 CD 0D 92         call PreviousScan
 130+ 9A74
 131+ 9A74              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A74              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A74              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A74              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A74
 136+ 9A74 18 11            jr 10F
 137+ 9A76
 138+ 9A76              ; 	Dispara Entidad.
 139+ 9A76
 140+ 9A76 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A79              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A79
 143+ 9A79              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A79              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A79
 146+ 9A79 C5               push bc
 147+ 9A7A 06 10            ld b,16
 148+ 9A7C CD FE 91     9 call NextScan
 149+ 9A7F 10 FB            djnz 9B
 150+ 9A81 C1               pop bc
 151+ 9A82 CD EC 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A85 18 06            jr 17F
 153+ 9A87
 154+ 9A87              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A87              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A87              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A87              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A87
 159+ 9A87 CD EC 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A8A CD 61 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A8D              ;                                                      ; _al generar el disparo.
 162+ 9A8D
 163+ 9A8D              ; 	LLegados a este punto tendremos:
 164+ 9A8D              ;
 165+ 9A8D              ;       Puntero_objeto_disparo en IY.
 166+ 9A8D              ;       Rutinas_de_impresion en IX.
 167+ 9A8D              ;       Puntero_de_impresion en HL.
 168+ 9A8D              ;       Impacto/Dirección en BC.
 169+ 9A8D
 170+ 9A8D CD F4 9A     17 call Almacena_disparo
 171+ 9A90 18 52            jr 6F                                             ; RET.
 172+ 9A92
 173+ 9A92              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A92              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A92              ;
 176+ 9A92              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A92              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A92              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A92
 180+ 9A92 2A 4F 89     4 ld hl,(Posicion_actual)
 181+ 9A95
 182+ 9A95              ;   Amadeus o entidad ???.
 183+ 9A95
 184+ 9A95 3A 6F 89         ld a,(Ctrl_0)
 185+ 9A98 CB 77            bit 6,a
 186+ 9A9A 28 0A            jr z,11F
 187+ 9A9C
 188+ 9A9C              ; 	Dispara Amadeus.
 189+ 9A9C
 190+ 9A9C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9A9E CD 0D 92         call PreviousScan
 192+ 9AA1 CD 0D 92         call PreviousScan
 193+ 9AA4
 194+ 9AA4              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9AA4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9AA4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9AA4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9AA4
 199+ 9AA4 18 11            jr 13F
 200+ 9AA6
 201+ 9AA6              ; 	Dispara Entidad.
 202+ 9AA6
 203+ 9AA6 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9AA9              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9AA9
 206+ 9AA9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9AA9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9AA9
 209+ 9AA9 C5               push bc
 210+ 9AAA 06 10            ld b,16
 211+ 9AAC CD FE 91     12 call NextScan
 212+ 9AAF 10 FB            djnz 12B
 213+ 9AB1 C1               pop bc
 214+ 9AB2
 215+ 9AB2 CD E5 9A         call Ajusta_disparo_parte_derecha
 216+ 9AB5 18 06            jr 18F
 217+ 9AB7
 218+ 9AB7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9AB7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9AB7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9AB7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9AB7
 223+ 9AB7 CD E5 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9ABA CD 61 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9ABD              ;                                                       ; _al generar el disparo.
 226+ 9ABD
 227+ 9ABD              ; LLegados a este punto tendremos:
 228+ 9ABD              ;
 229+ 9ABD              ;       Puntero_objeto_disparo en IY.
 230+ 9ABD              ;       Rutinas_de_impresion en IX.
 231+ 9ABD              ;       Puntero_de_impresion en HL.
 232+ 9ABD              ;       Impacto/Dirección en BC.
 233+ 9ABD
 234+ 9ABD CD F4 9A     18 call Almacena_disparo
 235+ 9AC0 18 22            jr 6F                                               ; RET.
 236+ 9AC2
 237+ 9AC2              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9AC2
 239+ 9AC2 28 11        3 jr z,5F
 240+ 9AC4
 241+ 9AC4              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9AC4              ;
 243+ 9AC4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9AC4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9AC4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9AC4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9AC4
 248+ 9AC4              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9AC4              ;	   ""        ""       "f9", B="1"
 250+ 9AC4              ;	   ""        ""       "fb", B="2"
 251+ 9AC4              ; 	   ""        ""       "fb", B="3"
 252+ 9AC4
 253+ 9AC4 2A 4F 89     	ld hl,(Posicion_actual)
 254+ 9AC7 CD FE 91     	call NextScan
 255+ 9ACA
 256+ 9ACA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9ACA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9ACA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9ACA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9ACA
 261+ 9ACA CD EC 9A         call Ajusta_disparo_parte_izquierda
 262+ 9ACD
 263+ 9ACD              ; 	No se produce impacto. B="$80"
 264+ 9ACD              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9ACD
 266+ 9ACD 01 80 80         ld bc,$8080
 267+ 9AD0
 268+ 9AD0              ; 	LLegados a este punto tendremos:
 269+ 9AD0              ;
 270+ 9AD0              ;       Puntero_objeto_disparo en IY.
 271+ 9AD0              ;       Rutinas_de_impresion en IX.
 272+ 9AD0              ;       Puntero_de_impresion en HL.
 273+ 9AD0              ;       Impacto/Dirección en BC.
 274+ 9AD0
 275+ 9AD0 CD F4 9A         call Almacena_disparo
 276+ 9AD3 18 0F            jr 6F                                           ; RET.
 277+ 9AD5
 278+ 9AD5              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9AD5              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9AD5              ;
 281+ 9AD5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9AD5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9AD5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9AD5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9AD5
 286+ 9AD5 2A 4F 89     5 ld hl,(Posicion_actual)
 287+ 9AD8 CD FE 91     	call NextScan
 288+ 9ADB
 289+ 9ADB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9ADB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9ADB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9ADB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9ADB
 294+ 9ADB CD E5 9A         call Ajusta_disparo_parte_derecha
 295+ 9ADE
 296+ 9ADE              ; 	No se produce impacto. B="$80"
 297+ 9ADE              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9ADE
 299+ 9ADE 01 80 80     15 ld bc,$8080
 300+ 9AE1
 301+ 9AE1              ; 	LLegados a este punto tendremos:
 302+ 9AE1              ;
 303+ 9AE1              ;       Puntero_objeto_disparo en IY.
 304+ 9AE1              ;       Rutinas_de_impresion en IX.
 305+ 9AE1              ;       Puntero_de_impresion en HL.
 306+ 9AE1              ;       Impacto/Dirección en BC.
 307+ 9AE1
 308+ 9AE1 CD F4 9A         call Almacena_disparo
 309+ 9AE4
 310+ 9AE4 C9           6 ret
 311+ 9AE5
 312+ 9AE5              ; ----------------------------------------------------------------
 313+ 9AE5              ;
 314+ 9AE5              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9AE5              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9AE5              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9AE5
 318+ 9AE5 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9AE6 FE 02            cp 2
 320+ 9AE8 38 01            jr c,1F
 321+ 9AEA 23               inc hl
 322+ 9AEB C9           1 ret
 323+ 9AEC
 324+ 9AEC 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9AED FE 01        	cp 1
 326+ 9AEF 20 01        	jr nz,1F
 327+ 9AF1 2B           	dec hl
 328+ 9AF2 2B           1 dec hl
 329+ 9AF3 C9               ret
 330+ 9AF4
 331+ 9AF4              ; ----------------------------------------------------------------
 332+ 9AF4              ;
 333+ 9AF4              ;   25/02/23
 334+ 9AF4              ;
 335+ 9AF4              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9AF4              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9AF4              ;
 338+ 9AF4              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9AF4              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9AF4
 341+ 9AF4              Almacena_disparo
 342+ 9AF4
 343+ 9AF4 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9AF5 F1               pop af
 345+ 9AF6 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9AF7
 347+ 9AF7 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9AF8 E6 01            and 1
 349+ 9AFA 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9AFC              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9AFC              ; 	Dispara AMADEUS.
 352+ 9AFC
 353+ 9AFC              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9AFC              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9AFC              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9AFC              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9AFC
 358+ 9AFC C5               push bc
 359+ 9AFD 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B00 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B03 A7               and a
 362+ 9B04 ED 42            sbc hl,bc
 363+ 9B06 CC 2B 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9B09 C1               pop bc
 365+ 9B0A 28 54            jr z,4F
 366+ 9B0C
 367+ 9B0C 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9B0F 23               inc hl
 369+ 9B10 23               inc hl
 370+ 9B11 22 B2 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9B14              ;                                                   ; _ Disparo_(+1).
 372+ 9B14 18 18            jr 2F
 373+ 9B16
 374+ 9B16              ; Dispara una entidad.
 375+ 9B16
 376+ 9B16 C5           1 push bc
 377+ 9B17 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9B1A 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9B1D A7               and a
 380+ 9B1E ED 42            sbc hl,bc
 381+ 9B20 CC 24 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9B23 C1               pop bc
 383+ 9B24 28 3A            jr z,4F
 384+ 9B26
 385+ 9B26 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9B29 23               inc hl
 387+ 9B2A 23               inc hl
 388+ 9B2B 22 B0 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9B2E              ;                                                   ; _ Disparo_(+1).
 390+ 9B2E CD A6 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9B31              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9B31              ;
 393+ 9B31              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9B31              ;                                                     Rutinas_de_impresion en IX.
 395+ 9B31              ;                                                     Puntero_de_impresion en HL.
 396+ 9B31              ;                                                     Impacto/Dirección en BC.
 397+ 9B31
 398+ 9B31 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9B32 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9B33 23               inc hl                                          ; _ al siguiente.
 401+ 9B34 A7               and a
 402+ 9B35 20 C0            jr nz,3B
 403+ 9B37
 404+ 9B37 08               ex af,af
 405+ 9B38 ED 73 9F 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9B3C F9               ld sp,hl
 407+ 9B3D
 408+ 9B3D DD E5            push ix                                         ; Rutina de impresión.
 409+ 9B3F F5               push af                                         ; Puntero de impresión.
 410+ 9B40 FD E5            push iy                                         ; Puntero objeto.
 411+ 9B42 C5               push bc                                         ; Control.
 412+ 9B43
 413+ 9B43 ED 7B 9F 89      ld sp,(Stack)
 414+ 9B47
 415+ 9B47              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9B47
 417+ 9B47 21 8E 89     	ld hl,Ctrl_1
 418+ 9B4A CB C6        	set 0,(hl)
 419+ 9B4C
 420+ 9B4C DD E5        	push ix
 421+ 9B4E E1               pop hl
 422+ 9B4F F5               push af
 423+ 9B50 DD E1            pop ix
 424+ 9B52
 425+ 9B52 CD BF 80     	call Guarda_foto_registros
 426+ 9B55
 427+ 9B55 21 8E 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B58 CB 86        	res 0,(hl)
 429+ 9B5A
 430+ 9B5A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B5A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B5A
 433+ 9B5A CD 2B 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B5D CD 24 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B60
 436+ 9B60 C9           4 ret
 437+ 9B61
 438+ 9B61              ; ----------------------------------------------------------------
 439+ 9B61              ;
 440+ 9B61              ;   4/3/23
 441+ 9B61              ;
 442+ 9B61              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B61              ;   _ al generarse el disparo.
 444+ 9B61              ;
 445+ 9B61              ;       "$80" ..... No se produce colisión.
 446+ 9B61              ;       "$81" ..... Se produce colisión.
 447+ 9B61              ;
 448+ 9B61              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B61              ;         _ que forman el disparo.
 450+ 9B61
 451+ 9B61
 452+ 9B61              Comprueba_Colision
 453+ 9B61
 454+ 9B61              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B61
 456+ 9B61 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B63 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B64
 459+ 9B64 CD 9A 9B         call Modifica_H_Velocidad_disparo
 460+ 9B67
 461+ 9B67 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B68 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B6A 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B6C
 465+ 9B6C 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B6E CD 8A 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B71
 468+ 9B71 7B               ld a,e
 469+ 9B72 E6 01            and 1
 470+ 9B74 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B76              ;                                                  ; _ para activar IMPACTO.
 472+ 9B76 E1               pop hl
 473+ 9B77 E5               push hl
 474+ 9B78 CD FE 91         call NextScan
 475+ 9B7B
 476+ 9B7B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B7C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B7E 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B80              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B80 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B82 CD 8A 9B         call Bucle_2
 482+ 9B85
 483+ 9B85 43           1 ld b,e
 484+ 9B86 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B87 FD E1            pop iy
 486+ 9B89 C9               ret
 487+ 9B8A
 488+ 9B8A              ; ---------- ----------
 489+ 9B8A
 490+ 9B8A 06 02        Bucle_2 ld b,2
 491+ 9B8C FD 7E 00     2 ld a,(iy)
 492+ 9B8F A6               and (hl)
 493+ 9B90 28 02            jr z,1F
 494+ 9B92 1E 81            ld e,$81
 495+ 9B94 23           1 inc hl
 496+ 9B95 FD 23            inc iy
 497+ 9B97 10 F3            djnz 2B
 498+ 9B99 C9               ret
 499+ 9B9A
 500+ 9B9A              ; ---------- ----------
 501+ 9B9A              ;
 502+ 9B9A              ;   21/7/23
 503+ 9B9A
 504+ 9B9A              Modifica_H_Velocidad_disparo
 505+ 9B9A
 506+ 9B9A 3A BF 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9B9D FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9B9F D0               ret nc                                         ; _ incrementamos H.
 509+ 9BA0 24               inc h
 510+ 9BA1
 511+ 9BA1 C9               ret
 512+ 9BA2
 513+ 9BA2              ; -------------------------------------------------------------------------------------------------------------
 514+ 9BA2              ;
 515+ 9BA2              ;   04/12/23
 516+ 9BA2              ;
 517+ 9BA2              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9BA2              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9BA2              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9BA2              ;
 521+ 9BA2              ;   MODIFICA: HL,DE,B y A.
 522+ 9BA2
 523+ 9BA2              Genera_coordenadas_X
 524+ 9BA2
 525+ 9BA2              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9BA2              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9BA2
 528+ 9BA2              ;   Limpiamos almacenes.
 529+ 9BA2
 530+ 9BA2 CD D3 9B         call Limpia_Coordenadas_X
 531+ 9BA5
 532+ 9BA5              ;   Almacenamos coordenadas X.
 533+ 9BA5
 534+ 9BA5              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9BA5
 536+ 9BA5 2A 69 89         ld hl,(Puntero_de_impresion)
 537+ 9BA8 11 BC 89         ld de,Coordenadas_X_Entidad
 538+ 9BAB 06 02            ld b,2
 539+ 9BAD
 540+ 9BAD 3A 55 89         ld a,(CTRL_DESPLZ)
 541+ 9BB0 A7               and a
 542+ 9BB1 28 01            jr z,1F
 543+ 9BB3 04               inc b
 544+ 9BB4
 545+ 9BB4 CD CA 9B     1 call Guarda_coordenadas_X
 546+ 9BB7
 547+ 9BB7              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9BB7
 549+ 9BB7 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9BBA 11 B9 89         ld de,Coordenadas_X_Amadeus
 551+ 9BBD 06 02            ld b,2
 552+ 9BBF
 553+ 9BBF 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9BC2 A7               and a
 555+ 9BC3 28 01            jr z,2F
 556+ 9BC5 04               inc b
 557+ 9BC6
 558+ 9BC6 CD CA 9B     2 call Guarda_coordenadas_X
 559+ 9BC9
 560+ 9BC9              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9BC9
 562+ 9BC9 C9               ret
 563+ 9BCA
 564+ 9BCA              ; ----- ----- ----- ----- -----
 565+ 9BCA
 566+ 9BCA 7D           Guarda_coordenadas_X  ld a,l
 567+ 9BCB E6 1F            and $1f
 568+ 9BCD 12           1 ld (de),a
 569+ 9BCE 3C               inc a
 570+ 9BCF 13               inc de
 571+ 9BD0 10 FB            djnz 1B
 572+ 9BD2 C9               ret
 573+ 9BD3
 574+ 9BD3 AF           Limpia_Coordenadas_X xor a
 575+ 9BD4 06 06            ld b,6
 576+ 9BD6 21 B9 89         ld hl,Coordenadas_X_Amadeus
 577+ 9BD9 77           1 ld (hl),a
 578+ 9BDA 23               inc hl
 579+ 9BDB 10 FC            djnz 1B
 580+ 9BDD C9               ret
 581+ 9BDE
 582+ 9BDE              ; ----- ----- ----- ----- -----
 583+ 9BDE
 584+ 9BDE              Compara_coordenadas_X
 585+ 9BDE
 586+ 9BDE 06 03            ld b,3
 587+ 9BE0 11 BE 89         ld de,Coordenadas_X_Entidad+2
 588+ 9BE3
 589+ 9BE3 1A               ld a,(de)
 590+ 9BE4 A7               and a
 591+ 9BE5 20 01            jr nz,2F
 592+ 9BE7 05               dec b
 593+ 9BE8
 594+ 9BE8 1B           2 dec de
 595+ 9BE9 1B               dec de
 596+ 9BEA 21 B9 89         ld hl,Coordenadas_X_Amadeus
 597+ 9BED
 598+ 9BED D5           1 push de
 599+ 9BEE E5               push hl
 600+ 9BEF C5               push bc
 601+ 9BF0
 602+ 9BF0 CD FA 9B         call Comparando
 603+ 9BF3
 604+ 9BF3 C1               pop bc
 605+ 9BF4 E1               pop hl
 606+ 9BF5 D1               pop de
 607+ 9BF6
 608+ 9BF6 13               inc de
 609+ 9BF7 10 F4            djnz 1B
 610+ 9BF9
 611+ 9BF9 C9               ret
 612+ 9BFA
 613+ 9BFA              ; ----- ----- ----- ----- -----
 614+ 9BFA              ;
 615+ 9BFA              ;   4/12/23
 616+ 9BFA              ;
 617+ 9BFA              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9BFA
 619+ 9BFA 06 03        Comparando ld b,3
 620+ 9BFC 1A               ld a,(de)
 621+ 9BFD 4E           2 ld c,(hl)
 622+ 9BFE B9               cp c
 623+ 9BFF 28 04            jr z,1F
 624+ 9C01 23               inc hl
 625+ 9C02 10 F9            djnz 2B
 626+ 9C04 C9               ret
 627+ 9C05
 628+ 9C05 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9C07 32 62 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9C0A 21 B4 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9C0D CB D6            set 2,(hl)
 632+ 9C0F C9               ret
 633+ 9C10
 634+ 9C10              ; -----------------------------------------------------------------------
 635+ 9C10              ;
 636+ 9C10              ;   7/12/23
 637+ 9C10              ;
 638+ 9C10
 639+ 9C10              Detecta_colision_nave_entidad
 640+ 9C10
 641+ 9C10              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9C10
 643+ 9C10 FD 2A 51 89      ld iy,(Puntero_objeto)
 644+ 9C14 2A 69 89         ld hl,(Puntero_de_impresion)
 645+ 9C17
 646+ 9C17 E5               push hl
 647+ 9C18
 648+ 9C18              ; ----- ----- -----
 649+ 9C18 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9C1A 06 0A            ld b,10
 651+ 9C1C CD 4C 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9C1F 7B               ld a,e
 653+ 9C20 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9C22 38 0E            jr c,3F
 655+ 9C24
 656+ 9C24              ; LLegados a este punto:
 657+ 9C24              ;
 658+ 9C24              ;   HAY COLISIÓN !!!!!.
 659+ 9C24              ;
 660+ 9C24              ;   .db (Impacto) de Amadeus a "1".
 661+ 9C24              ;   SET el bit3 de (Impacto2).
 662+ 9C24              ;
 663+ 9C24              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9C24
 665+ 9C24 21 62 89         ld hl,Impacto
 666+ 9C27 36 01            ld (hl),1
 667+ 9C29 21 B4 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9C2C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9C2E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9C30
 671+ 9C30 18 18            jr 1F
 672+ 9C32
 673+ 9C32              ; -----
 674+ 9C32
 675+ 9C32 E1           3 pop hl
 676+ 9C33 CD FE 91         call NextScan
 677+ 9C36 E5               push hl
 678+ 9C37 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9C38 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9C3A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9C3C 30 0C            jr nc,1F
 682+ 9C3E              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9C3E 10 DC            djnz 2B
 684+ 9C40
 685+ 9C40              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9C40
 687+ 9C40              ; LLegados a este punto:
 688+ 9C40              ;
 689+ 9C40              ;   NO HAY COLISIÓN !!!!!.
 690+ 9C40              ;
 691+ 9C40              ;   .db (Impacto) de Amadeus a "0".
 692+ 9C40              ;   RES el bit2 de (Impacto2).
 693+ 9C40              ;
 694+ 9C40              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9C40              ;   Lo colocamos a "0".
 696+ 9C40
 697+ 9C40 21 B4 89         ld hl,Impacto2
 698+ 9C43 CB 96            res 2,(hl)
 699+ 9C45 2A B5 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9C48 36 00            ld (hl),0
 701+ 9C4A
 702+ 9C4A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C4B C9               ret
 704+ 9C4C
 705+ 9C4C               ; ---------- ----------
 706+ 9C4C
 707+ 9C4C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C4D 3A 4E 89         ld a,(Columns)
 709+ 9C50 47               ld b,a
 710+ 9C51 FD 7E 00     2 ld a,(iy)
 711+ 9C54 BE               cp (hl)
 712+ 9C55 28 01            jr z,1F
 713+ 9C57
 714+ 9C57 1C               inc e
 715+ 9C58
 716+ 9C58 23           1 inc hl
 717+ 9C59 FD 23            inc iy
 718+ 9C5B 10 F4            djnz 2B
 719+ 9C5D C1               pop bc
 720+ 9C5E C9               ret
 721+ 9C5F
 722+ 9C5F              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C5F              ;
 724+ 9C5F              ;   13/03/23
 725+ 9C5F              ;
 726+ 9C5F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C5F              ;
 728+ 9C5F              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C5F
 730+ 9C5F 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C62 7E               ld a,(hl)
 732+ 9C63 A7               and a
 733+ 9C64 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C65
 735+ 9C65 44               ld b,h
 736+ 9C66 4D               ld c,l
 737+ 9C67 2A A7 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C6A E5               push hl
 739+ 9C6B A7               and a
 740+ 9C6C ED 42            sbc hl,bc
 741+ 9C6E E5               push hl
 742+ 9C6F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C70
 744+ 9C70 E1               pop hl
 745+ 9C71 54               ld d,h
 746+ 9C72 5D               ld e,l
 747+ 9C73 1B               dec de
 748+ 9C74 ED B8            lddr                                                ; Limpiamos.
 749+ 9C76
 750+ 9C76 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C79 22 A7 89         ld (Stack_snapshot_disparos),hl
 752+ 9C7C
 753+ 9C7C C9               ret
 754+ 9C7D
 755+ 9C7D              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C7D              ;
 757+ 9C7D              ;   18/07/23
 758+ 9C7D              ;
 759+ 9C7D
 760+ 9C7D              Motor_de_disparos
 761+ 9C7D
 762+ 9C7D              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C7D
 764+ 9C7D 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C80 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C83
 767+ 9C83 CD A6 8B     2 call Extrae_address
 768+ 9C86 7E               ld a,(hl)
 769+ 9C87 A7               and a
 770+ 9C88 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C8A
 772+ 9C8A              ; ----- ----- ----- ----- ----- -----
 773+ 9C8A
 774+ 9C8A C5               push bc
 775+ 9C8B CD 4F 9D         call foto_disparo_a_borrar
 776+ 9C8E
 777+ 9C8E              ; Existe colisión con este disparo???
 778+ 9C8E
 779+ 9C8E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C8F 7E               ld a,(hl)
 781+ 9C90 2B               dec hl
 782+ 9C91 E6 01            and 1
 783+ 9C93 28 1D            jr z,9F
 784+ 9C95
 785+ 9C95              ;   En este punto:
 786+ 9C95              ;
 787+ 9C95              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9C95              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9C95              ;   _con la entidad).
 790+ 9C95              ;
 791+ 9C95              ;   Disparo_2A defw 0                                ; Control.
 792+ 9C95              ;    defw 0                                          ; Puntero objeto.
 793+ 9C95              ;    defw 0                                          ; Puntero de impresión.
 794+ 9C95              ;    defw 0                                          ; Rutina de impresión.
 795+ 9C95
 796+ 9C95 E5               push hl
 797+ 9C96
 798+ 9C96 06 04            ld b,4
 799+ 9C98 23           19 inc hl
 800+ 9C99 10 FD            djnz 19B
 801+ 9C9B
 802+ 9C9B CD A6 8B         call Extrae_address
 803+ 9C9E CD 32 9F         call Genera_coordenadas_disparo
 804+ 9CA1
 805+ 9CA1              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9CA1
 807+ 9CA1 21 B7 89         ld hl,Coordenadas_disparo_certero
 808+ 9CA4 72               ld (hl),d
 809+ 9CA5 23               inc hl
 810+ 9CA6 73               ld (hl),e
 811+ 9CA7
 812+ 9CA7              ; Elimino el disparo de la base de datos.
 813+ 9CA7
 814+ 9CA7 E1               pop hl
 815+ 9CA8 CD CE 9D         call Elimina_disparo_de_base_de_datos
 816+ 9CAB 21 B4 89         ld hl,Impacto2
 817+ 9CAE CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9CB0
 819+ 9CB0 18 06            jr 11F
 820+ 9CB2
 821+ 9CB2 CD 78 9D     9 call Mueve_disparo
 822+ 9CB5 CD 4F 9D         call foto_disparo_a_borrar
 823+ 9CB8
 824+ 9CB8 C1           11 pop bc
 825+ 9CB9 18 04            jr 7F
 826+ 9CBB
 827+ 9CBB              ; ----- ----- ----- ----- ----- -----
 828+ 9CBB
 829+ 9CBB ED 42        1 sbc hl,bc
 830+ 9CBD 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9CBF
 832+ 9CBF 2A B2 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9CC2 23               inc hl
 834+ 9CC3 23               inc hl
 835+ 9CC4 22 B2 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9CC7 18 BA            jr 2B
 837+ 9CC9
 838+ 9CC9 CD 2B 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9CCC              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9CCC
 841+ 9CCC              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9CCC
 843+ 9CCC 01 9F 86         ld bc,Disparo_11
 844+ 9CCF 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9CD2
 846+ 9CD2 CD A6 8B     5 call Extrae_address
 847+ 9CD5 7E               ld a,(hl)
 848+ 9CD6 A7               and a
 849+ 9CD7 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9CD9
 851+ 9CD9              ; ----- ----- ----- ----- ----- -----
 852+ 9CD9
 853+ 9CD9 C5               push bc
 854+ 9CDA CD 4F 9D         call foto_disparo_a_borrar
 855+ 9CDD
 856+ 9CDD              ; Existe colisión con este disparo???
 857+ 9CDD
 858+ 9CDD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9CDE 7E               ld a,(hl)
 860+ 9CDF 2B               dec hl
 861+ 9CE0 E6 01            and 1
 862+ 9CE2 28 4D            jr z,10F
 863+ 9CE4
 864+ 9CE4              ;! La colisión se produce con Amadeus???
 865+ 9CE4              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9CE4
 867+ 9CE4 E5               push hl
 868+ 9CE5
 869+ 9CE5 06 04            ld b,4
 870+ 9CE7 23           16 inc hl
 871+ 9CE8 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9CEA
 873+ 9CEA CD A6 8B         call Extrae_address
 874+ 9CED CD 32 9F         call Genera_coordenadas_disparo
 875+ 9CF0
 876+ 9CF0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9CF1 FE 16            cp $16
 878+ 9CF3 38 2A            jr c,15F
 879+ 9CF5
 880+ 9CF5
 881+ 9CF5              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9CF5
 883+ 9CF5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9CF6
 885+ 9CF6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9CF6
 887+ 9CF6 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9CF9
 889+ 9CF9              ; Coordenada X de Amadeus en D.
 890+ 9CF9
 891+ 9CF9 7D               ld a,l
 892+ 9CFA E6 1F            and $1F
 893+ 9CFC 57               ld d,a
 894+ 9CFD
 895+ 9CFD 21 BB 86         ld hl,Amadeus_db+8
 896+ 9D00 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D01
 898+ 9D01 21 B9 89         ld hl,Coordenadas_X_Amadeus
 899+ 9D04 CD CA 9B         call Guarda_coordenadas_X
 900+ 9D07
 901+ 9D07 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9D08
 903+ 9D08              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9D08
 905+ 9D08 06 02            ld b,2
 906+ 9D0A C5           20 push bc
 907+ 9D0B
 908+ 9D0B 06 03            ld b,3
 909+ 9D0D 21 B9 89         ld hl,Coordenadas_X_Amadeus
 910+ 9D10 7E           18 ld a,(hl)
 911+ 9D11 BA               cp d
 912+ 9D12 20 04            jr nz,17F
 913+ 9D14
 914+ 9D14              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9D14
 916+ 9D14 C1               pop bc
 917+ 9D15 E1               pop hl
 918+ 9D16 18 0D            jr 14F
 919+ 9D18
 920+ 9D18 23           17 inc hl
 921+ 9D19 10 F5            djnz 18B
 922+ 9D1B
 923+ 9D1B 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9D1C
 925+ 9D1C C1               pop bc
 926+ 9D1D 10 EB            djnz 20B
 927+ 9D1F
 928+ 9D1F
 929+ 9D1F              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9D1F              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9D1F
 932+ 9D1F E1           15 pop hl
 933+ 9D20 23               inc hl
 934+ 9D21 35               dec (hl)
 935+ 9D22 2B               dec hl
 936+ 9D23 18 0C            jr 10F
 937+ 9D25
 938+ 9D25              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9D25              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9D25
 941+ 9D25 E5           14 push hl
 942+ 9D26 CD CE 9D         call Elimina_disparo_de_base_de_datos
 943+ 9D29 21 B4 89         ld hl,Impacto2
 944+ 9D2C CB CE            set 1,(hl)
 945+ 9D2E E1               pop hl
 946+ 9D2F 18 06            jr 12F
 947+ 9D31
 948+ 9D31              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9D31
 950+ 9D31 CD 78 9D     10 call Mueve_disparo
 951+ 9D34 CD 4F 9D         call foto_disparo_a_borrar
 952+ 9D37 C1           12 pop bc
 953+ 9D38
 954+ 9D38 18 04            jr 8F
 955+ 9D3A
 956+ 9D3A              ; ----- ----- ----- ----- ----- -----
 957+ 9D3A
 958+ 9D3A ED 42        4 sbc hl,bc
 959+ 9D3C 28 0A            jr z,6F
 960+ 9D3E
 961+ 9D3E 2A B0 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9D41 23               inc hl
 963+ 9D42 23               inc hl
 964+ 9D43 22 B0 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9D46 18 8A            jr 5B
 966+ 9D48
 967+ 9D48 CD 24 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D4B CD D3 9B         call Limpia_Coordenadas_X
 969+ 9D4E C9               ret
 970+ 9D4F
 971+ 9D4F              ; ------------------------------------------------------------------
 972+ 9D4F
 973+ 9D4F              foto_disparo_a_borrar
 974+ 9D4F
 975+ 9D4F 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D50 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D51 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D52
 979+ 9D52 E5               push hl
 980+ 9D53 23               inc hl
 981+ 9D54 23               inc hl
 982+ 9D55 ED 73 9F 89      ld (Stack),sp
 983+ 9D59 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D5A FD E1            pop iy
 985+ 9D5C DD E1            pop ix
 986+ 9D5E E1               pop hl
 987+ 9D5F ED 7B 9F 89      ld sp,(Stack)
 988+ 9D63 3A 8E 89         ld a,(Ctrl_1)
 989+ 9D66 CB C7            set 0,a
 990+ 9D68 32 8E 89         ld (Ctrl_1),a
 991+ 9D6B CD BF 80         call Guarda_foto_registros
 992+ 9D6E 3A 8E 89         ld a,(Ctrl_1)
 993+ 9D71 CB 87            res 0,a
 994+ 9D73 32 8E 89         ld (Ctrl_1),a
 995+ 9D76 E1               pop hl
 996+ 9D77 C9               ret
 997+ 9D78
 998+ 9D78              ;---------------------------------------------------
 999+ 9D78              ;
1000+ 9D78              ;   18/07/23
1001+ 9D78              ;
1002+ 9D78
1003+ 9D78              Mueve_disparo
1004+ 9D78
1005+ 9D78              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D78              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D78              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D78
1009+ 9D78 E5               push hl
1010+ 9D79
1011+ 9D79 7E               ld a,(hl)
1012+ 9D7A
1013+ 9D7A 06 04            ld b,4
1014+ 9D7C 23           1 inc hl
1015+ 9D7D 10 FD            djnz 1B
1016+ 9D7F
1017+ 9D7F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D7F
1019+ 9D7F CD A6 8B         call Extrae_address
1020+ 9D82
1021+ 9D82 E6 01            and 1
1022+ 9D84 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D86
1024+ 9D86              ; Disparo hacia arriba, (Amadeus).
1025+ 9D86
1026+ 9D86              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D86              ; _ de la dificultad.
1028+ 9D86
1029+ 9D86 CD 0D 92         call PreviousScan
1030+ 9D89 CD 0D 92         call PreviousScan
1031+ 9D8C CD 0D 92         call PreviousScan
1032+ 9D8F CD 0D 92         call PreviousScan
1033+ 9D92
1034+ 9D92              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D92
1036+ 9D92 7C               ld a,h
1037+ 9D93 FE 40            cp $40
1038+ 9D95 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9D97
1040+ 9D97              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9D97
1042+ 9D97 EB               ex de,hl
1043+ 9D98 06 04            ld b,4
1044+ 9D9A 2B           6 dec hl
1045+ 9D9B 10 FD            djnz 6B
1046+ 9D9D
1047+ 9D9D CD CE 9D         call Elimina_disparo_de_base_de_datos
1048+ 9DA0 E1               pop hl
1049+ 9DA1 18 10            jr 7F
1050+ 9DA3
1051+ 9DA3              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9DA3              ; HL contiene el puntero de impresión del disparo.
1053+ 9DA3              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9DA3
1055+ 9DA3 D5           3 push de
1056+ 9DA4 C5               push bc
1057+ 9DA5
1058+ 9DA5 CD 61 9B         call Comprueba_Colision
1059+ 9DA8
1060+ 9DA8              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9DA8
1062+ 9DA8 78               ld a,b
1063+ 9DA9
1064+ 9DA9 C1               pop bc
1065+ 9DAA D1               pop de
1066+ 9DAB
1067+ 9DAB EB               ex de,hl
1068+ 9DAC
1069+ 9DAC 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9DAD 23               inc hl                                      ; _ movimiento.
1071+ 9DAE 72               ld (hl),d
1072+ 9DAF
1073+ 9DAF E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9DB0
1075+ 9DB0 23               inc hl                                      ; _ en curso.
1076+ 9DB1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9DB2 2B               dec hl
1078+ 9DB3
1079+ 9DB3 C9           7 ret
1080+ 9DB4
1081+ 9DB4              ; Disparo hacia abajo, (Entidad).
1082+ 9DB4
1083+ 9DB4 3A BF 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9DB7 47               ld b,a
1085+ 9DB8
1086+ 9DB8 CD FE 91     4 call NextScan
1087+ 9DBB 10 FB            djnz 4B
1088+ 9DBD
1089+ 9DBD              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9DBD
1091+ 9DBD 7C               ld a,h
1092+ 9DBE FE 58            cp $58
1093+ 9DC0 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9DC2
1095+ 9DC2 EB               ex de,hl
1096+ 9DC3 06 04            ld b,4
1097+ 9DC5 2B           5 dec hl
1098+ 9DC6 10 FD            djnz 5B
1099+ 9DC8
1100+ 9DC8 CD CE 9D         call Elimina_disparo_de_base_de_datos
1101+ 9DCB E1               pop hl
1102+ 9DCC 18 E5            jr 7B
1103+ 9DCE
1104+ 9DCE              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9DCE
1106+ 9DCE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9DD1 AF               xor a
1108+ 9DD2 77               ld (hl),a
1109+ 9DD3 54               ld d,h
1110+ 9DD4 5D               ld e,l
1111+ 9DD5 13               inc de
1112+ 9DD6 ED B0            ldir
1113+ 9DD8 C9               ret
1114+ 9DD9
1115+ 9DD9              ; -----------------------------------------------------------------
1116+ 9DD9              ;
1117+ 9DD9              ;   7/12/23
1118+ 9DD9              ;
1119+ 9DD9
1120+ 9DD9 3A B4 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9DDC A7               and a
1122+ 9DDD C8               ret z
1123+ 9DDE
1124+ 9DDE              ; Analizamos si hay impacto por disparos.
1125+ 9DDE
1126+ 9DDE              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9DDE
1128+ 9DDE CB 4F            bit 1,a
1129+ 9DE0 28 07            jr z,1F
1130+ 9DE2
1131+ 9DE2 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9DE5 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9DE7 18 08            jr 2F
1134+ 9DE9
1135+ 9DE9 CB 47        1 bit 0,a
1136+ 9DEB C8               ret z
1137+ 9DEC
1138+ 9DEC              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9DEC
1140+ 9DEC 21 8E 89         ld hl,Ctrl_1
1141+ 9DEF CB D6            set 2,(hl)
1142+ 9DF1
1143+ 9DF1 C9           2 ret
1144+ 9DF2
1145+ 9DF2              ; -----------------------------------------------------------------
1146+ 9DF2              ;
1147+ 9DF2              ;   25/04/23
1148+ 9DF2              ;
1149+ 9DF2
1150+ 9DF2              Determina_resultado_comparativa
1151+ 9DF2
1152+ 9DF2              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9DF2              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9DF2              ;
1155+ 9DF2              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9DF2              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9DF2              ;
1158+ 9DF2              ;   SBC HL,DE
1159+ 9DF2
1160+ 9DF2              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9DF2              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9DF2
1163+ 9DF2              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9DF2              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9DF2
1166+ 9DF2
1167+ 9DF2 3A 61 89         ld a,(Cuad_objeto)
1168+ 9DF5 FE 02            cp 2
1169+ 9DF7 28 26            jr z,2F
1170+ 9DF9 38 24            jr c,2F
1171+ 9DFB
1172+ 9DFB              ; Cuadrantes 3º y 4º
1173+ 9DFB
1174+ 9DFB E6 01            and 1
1175+ 9DFD 28 10            jr z,4F
1176+ 9DFF
1177+ 9DFF              ; Cuadrante 3º
1178+ 9DFF
1179+ 9DFF 7C               ld a,h
1180+ 9E00 06 00            ld b,0
1181+ 9E02
1182+ 9E02 CD 8D 9E         call Compara_cositas_H3
1183+ 9E05
1184+ 9E05 04               inc b
1185+ 9E06 05               dec b
1186+ 9E07 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9E08
1188+ 9E08 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9E09 06 00            ld b,0
1190+ 9E0B
1191+ 9E0B CD 9F 9E         call Compara_cositas_L3
1192+ 9E0E C9               ret
1193+ 9E0F
1194+ 9E0F              ; Cuadrante 4º
1195+ 9E0F
1196+ 9E0F 7C           4 ld a,h
1197+ 9E10 06 00            ld b,0
1198+ 9E12
1199+ 9E12 CD B1 9E         call Compara_cositas_H4
1200+ 9E15
1201+ 9E15 04               inc b
1202+ 9E16 05               dec b
1203+ 9E17 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9E18
1205+ 9E18 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9E19 06 00            ld b,0
1207+ 9E1B
1208+ 9E1B CD C7 9E         call Compara_cositas_L4
1209+ 9E1E C9               ret
1210+ 9E1F
1211+ 9E1F              ; Cuadrantes 1º y 2º.
1212+ 9E1F
1213+ 9E1F 28 10        2 jr z,3F
1214+ 9E21
1215+ 9E21              ; 1er Cuadrante
1216+ 9E21
1217+ 9E21 7C               ld a,h
1218+ 9E22 06 00            ld b,0
1219+ 9E24
1220+ 9E24 CD 65 9E         call Compara_cositas_H1
1221+ 9E27
1222+ 9E27 04               inc b
1223+ 9E28 05               dec b
1224+ 9E29 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9E2A
1226+ 9E2A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9E2B 06 00            ld b,0
1228+ 9E2D
1229+ 9E2D CD 7B 9E         call Compara_cositas_L1
1230+ 9E30 C9               ret
1231+ 9E31
1232+ 9E31
1233+ 9E31              ; 2º Cuadrante
1234+ 9E31
1235+ 9E31 7C           3 ld a,h
1236+ 9E32 06 00            ld b,0
1237+ 9E34
1238+ 9E34 CD 41 9E         call Compara_cositas_H2
1239+ 9E37
1240+ 9E37 04               inc b
1241+ 9E38 05               dec b
1242+ 9E39 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9E3A
1244+ 9E3A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9E3B 06 00            ld b,0
1246+ 9E3D
1247+ 9E3D CD 53 9E         call Compara_cositas_L2
1248+ 9E40 C9               ret
1249+ 9E41
1250+ 9E41 A7           Compara_cositas_H2 and a
1251+ 9E42 28 0D            jr z,1F
1252+ 9E44              ;    cp $fd
1253+ 9E44              ;    jr z,1F
1254+ 9E44              ;    cp $fe
1255+ 9E44              ;    jr z,1F
1256+ 9E44 FE FF            cp $ff
1257+ 9E46 28 09            jr z,1F
1258+ 9E48 FE 01            cp $01
1259+ 9E4A 28 05            jr z,1F
1260+ 9E4C FE 02            cp $02
1261+ 9E4E 28 01            jr z,1F
1262+ 9E50 C0               ret nz
1263+ 9E51 04           1 inc b
1264+ 9E52 C9               ret
1265+ 9E53
1266+ 9E53 A7           Compara_cositas_L2 and a
1267+ 9E54 28 0D            jr z,1F
1268+ 9E56              ;    cp $fd
1269+ 9E56              ;    jr z,1F
1270+ 9E56 FE FE            cp $fe
1271+ 9E58 28 09            jr z,1F
1272+ 9E5A FE FF            cp $ff
1273+ 9E5C 28 05            jr z,1F
1274+ 9E5E FE 01            cp $01
1275+ 9E60 28 01            jr z,1F
1276+ 9E62              ;    cp $02
1277+ 9E62              ;    jr z,1F
1278+ 9E62 C0               ret nz
1279+ 9E63 04           1 inc b
1280+ 9E64 C9               ret
1281+ 9E65
1282+ 9E65 A7           Compara_cositas_H1 and a
1283+ 9E66 28 11            jr z,1F
1284+ 9E68              ;    cp $fd
1285+ 9E68              ;    jr z,1F
1286+ 9E68              ;    cp $fe
1287+ 9E68              ;    jr z,1F
1288+ 9E68 FE FF            cp $ff
1289+ 9E6A 28 0D            jr z,1F
1290+ 9E6C FE 01            cp $01
1291+ 9E6E 28 09            jr z,1F
1292+ 9E70 FE 02            cp $02
1293+ 9E72 28 05            jr z,1F
1294+ 9E74 FE 03            cp $03
1295+ 9E76 28 01            jr z,1F
1296+ 9E78 C0               ret nz
1297+ 9E79 04           1 inc b
1298+ 9E7A C9               ret
1299+ 9E7B
1300+ 9E7B A7           Compara_cositas_L1 and a
1301+ 9E7C 28 0D            jr z,1F
1302+ 9E7E              ;    cp $fd
1303+ 9E7E              ;    jr z,1F
1304+ 9E7E              ;    cp $fe
1305+ 9E7E              ;    jr z,1F
1306+ 9E7E              ;    cp $ff
1307+ 9E7E              ;    jr z,1F
1308+ 9E7E FE 01            cp $01
1309+ 9E80 28 09            jr z,1F
1310+ 9E82 FE 02            cp $02
1311+ 9E84 28 05            jr z,1F
1312+ 9E86 FE 03            cp $03
1313+ 9E88 28 01            jr z,1F
1314+ 9E8A C0               ret nz
1315+ 9E8B 04           1 inc b
1316+ 9E8C C9               ret
1317+ 9E8D
1318+ 9E8D A7           Compara_cositas_H3 and a
1319+ 9E8E 28 0D            jr z,1F
1320+ 9E90              ;    cp $fd
1321+ 9E90              ;    jr z,1F
1322+ 9E90 FE FE            cp $fe
1323+ 9E92 28 09            jr z,1F
1324+ 9E94 FE FF            cp $ff
1325+ 9E96 28 05            jr z,1F
1326+ 9E98 FE 01            cp $01
1327+ 9E9A 28 01            jr z,1F
1328+ 9E9C              ;    cp $02
1329+ 9E9C              ;    jr z,1F
1330+ 9E9C              ;    cp $03
1331+ 9E9C              ;    jr z,1F
1332+ 9E9C C0               ret nz
1333+ 9E9D 04           1 inc b
1334+ 9E9E C9               ret
1335+ 9E9F
1336+ 9E9F A7           Compara_cositas_L3 and a
1337+ 9EA0 28 0D            jr z,1F
1338+ 9EA2              ;    cp $fd
1339+ 9EA2              ;    jr z,1F
1340+ 9EA2              ;    cp $fe
1341+ 9EA2              ;    jr z,1F
1342+ 9EA2              ;    cp $ff
1343+ 9EA2              ;    jr z,1F
1344+ 9EA2 FE 01            cp $01
1345+ 9EA4 28 09            jr z,1F
1346+ 9EA6 FE 02            cp $02
1347+ 9EA8 28 05            jr z,1F
1348+ 9EAA FE 03            cp $03
1349+ 9EAC 28 01            jr z,1F
1350+ 9EAE C0               ret nz
1351+ 9EAF 04           1 inc b
1352+ 9EB0 C9               ret
1353+ 9EB1
1354+ 9EB1 A7           Compara_cositas_H4 and a
1355+ 9EB2 28 11            jr z,1F
1356+ 9EB4 FE FD            cp $fd
1357+ 9EB6 28 0D            jr z,1F
1358+ 9EB8 FE FE            cp $fe
1359+ 9EBA 28 09            jr z,1F
1360+ 9EBC FE FF            cp $ff
1361+ 9EBE 28 05            jr z,1F
1362+ 9EC0 FE 01            cp $01
1363+ 9EC2 28 01            jr z,1F
1364+ 9EC4              ;    cp $02
1365+ 9EC4              ;    jr z,1F
1366+ 9EC4              ;    cp $03
1367+ 9EC4              ;    jr z,1F
1368+ 9EC4 C0               ret nz
1369+ 9EC5 04           1 inc b
1370+ 9EC6 C9               ret
1371+ 9EC7
1372+ 9EC7 A7           Compara_cositas_L4 and a
1373+ 9EC8 28 0D            jr z,1F
1374+ 9ECA              ;    cp $fd
1375+ 9ECA              ;    jr z,1F
1376+ 9ECA FE FE            cp $fe
1377+ 9ECC 28 09            jr z,1F
1378+ 9ECE FE FF            cp $ff
1379+ 9ED0 28 05            jr z,1F
1380+ 9ED2 FE 01            cp $01
1381+ 9ED4 28 01            jr z,1F
1382+ 9ED6              ;    cp $02
1383+ 9ED6              ;    jr z,1F
1384+ 9ED6              ;    cp $03
1385+ 9ED6              ;    jr z,1F
1386+ 9ED6 C0               ret nz
1387+ 9ED7 04           1 inc b
1388+ 9ED8 C9               ret
# file closed: Disparo.asm
1731  9ED9              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9ED9              ; Relojes y temporizaciones.
   2+ 9ED9
   3+ 9ED9              ; ------------------------------------------------------
   4+ 9ED9              ;
   5+ 9ED9              ;	16/7/23
   6+ 9ED9              ;
   7+ 9ED9              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9ED9              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9ED9              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9ED9              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9ED9              ;
  12+ 9ED9              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9ED9              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9ED9
  15+ 9ED9              ; Disparo_entidad db 1
  16+ 9ED9              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9ED9              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9ED9
  19+ 9ED9              Habilita_disparos
  20+ 9ED9
  21+ 9ED9 7E           	ld a,(hl)
  22+ 9EDA A7           	and a
  23+ 9EDB C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9EDC
  25+ 9EDC EB           	ex de,hl
  26+ 9EDD
  27+ 9EDD 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9EDE C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9EDF
  30+ 9EDF              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9EDF
  32+ 9EDF 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9EE0 7E           	ld a,(hl)
  34+ 9EE1 23           	inc hl
  35+ 9EE2 77           	ld (hl),a
  36+ 9EE3
  37+ 9EE3 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9EE4 3E 01        	ld a,1
  39+ 9EE6 77           	ld (hl),a
  40+ 9EE7 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1732  9EE8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9EE8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9EE8              ;
   3+ 9EE8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9EE8              ;
   5+ 9EE8              ; *****************************************************************************************************************************************************************************************
   6+ 9EE8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9EE8
   8+ 9EE8 7C           calcula_tercio ld a,h
   9+ 9EE9 E6 18        	and $18
  10+ 9EEB CB 2F        	sra a
  11+ 9EED CB 2F        	sra a
  12+ 9EEF CB 2F        	sra a
  13+ 9EF1 C9           	ret
  14+ 9EF2
# file closed: calcula_tercio.asm
1733  9EF2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9EF2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9EF2              ;
   3+ 9EF2              ;
   4+ 9EF2              ;	CLS.
   5+ 9EF2              ;
   6+ 9EF2              ;	Limpia la pantalla y define sus atributos.
   7+ 9EF2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9EF2              ;
   9+ 9EF2              ;	COLORES: 0 ..... NEGRO
  10+ 9EF2              ;    		 1 ..... AZUL
  11+ 9EF2              ; 			 2 ..... ROJO
  12+ 9EF2              ;			 3 ..... MAGENTA
  13+ 9EF2              ; 			 4 ..... VERDE
  14+ 9EF2              ; 			 5 ..... CIAN
  15+ 9EF2              ;			 6 ..... AMARILLO
  16+ 9EF2              ; 			 7 ..... BLANCO
  17+ 9EF2              ;
  18+ 9EF2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9EF2              ;
  20+ 9EF2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9EF2
  22+ 9EF2
  23+ 9EF2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9EF5 11 01 40     	LD DE,$4001
  25+ 9EF8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9EFB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9EFD ED B0        	LDIR
  28+ 9EFF 01 FF 02     	LD BC,767
  29+ 9F02 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F03 ED B0        	LDIR
  31+ 9F05 C9           	ret
  32+ 9F06
# file closed: Cls.asm
1734  9F06              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9F06              ; ------------------------------------------------------------------------
   2+ 9F06              ;
   3+ 9F06              ;	30/1/24
   4+ 9F06              ;
   5+ 9F06              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9F06              ;	Fila superior "0", Columna izquierda "0".
   7+ 9F06              ;
   8+ 9F06              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9F06              ;
  10+ 9F06              ;	Modifica: A,BC y DE.
  11+ 9F06
  12+ 9F06 7D           Genera_coordenadas ld a,l
  13+ 9F07 E6 1F        	and $1f
  14+ 9F09 32 53 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9F0C
  16+ 9F0C 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9F0D FE 40        	cp $40
  18+ 9F0F 38 1C        	jr c,4F
  19+ 9F11
  20+ 9F11 CD E8 9E     	call calcula_tercio
  21+ 9F14 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9F15
  23+ 9F15 1E 00        	ld e,0
  24+ 9F17 7D           	ld a,l
  25+ 9F18 E6 E0        	and $e0
  26+ 9F1A 28 01        	jr z,1F
  27+ 9F1C 04           	inc b
  28+ 9F1D
  29+ 9F1D 04           1 inc b
  30+ 9F1E 05           	dec b
  31+ 9F1F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9F21              ;														; _ , salimos.
  33+ 9F21 1C           3 inc e
  34+ 9F22 D6 20        	sub 32
  35+ 9F24 20 FB        	jr nz,3B
  36+ 9F26 10 F5        	djnz 1B
  37+ 9F28
  38+ 9F28 7B           2 ld a,e
  39+ 9F29 32 54 89     	ld (Coordenada_y),a
  40+ 9F2C C9           	ret
  41+ 9F2D
  42+ 9F2D AF           4 xor a
  43+ 9F2E 32 54 89     	ld (Coordenada_y),a
  44+ 9F31 C9           	ret
  45+ 9F32
  46+ 9F32              ; ------------------------------------------------------------------------
  47+ 9F32              ;	28/05/23
  48+ 9F32              ;
  49+ 9F32              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9F32              ;	Fila superior "0", Columna izquierda "0".
  51+ 9F32              ;
  52+ 9F32              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9F32              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9F32              ;
  55+ 9F32              ;		DE="$120d"
  56+ 9F32              ;
  57+ 9F32              ;		D, (Coordenada_X), Columnas, $12
  58+ 9F32              ;		E, (Coordenada_y), Filas, $0d
  59+ 9F32              ;
  60+ 9F32              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9F32
  62+ 9F32              ;	Modifica: A,BC y DE.
  63+ 9F32
  64+ 9F32
  65+ 9F32              Genera_coordenadas_disparo
  66+ 9F32
  67+ 9F32              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9F32
  69+ 9F32 7D           	ld a,l
  70+ 9F33 E6 1F        	and $1f
  71+ 9F35 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9F36 CD E8 9E     	call calcula_tercio
  73+ 9F39 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9F3A 1E 00        	ld e,0
  75+ 9F3C 7D           	ld a,l
  76+ 9F3D E6 E0        	and $e0
  77+ 9F3F 28 01        	jr z,1F
  78+ 9F41 04           	inc b
  79+ 9F42 1C           1 inc e
  80+ 9F43 D6 20        	sub 32
  81+ 9F45 20 FB        	jr nz,1B
  82+ 9F47 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F49 C9           	ret
  84+ 9F4A
# file closed: Genera_coordenadas.asm
1735  9F4A              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F4A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F4A              ;
   3+ 9F4A              ;	12/12/23
   4+ 9F4A              ;
   5+ 9F4A              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F4A
   7+ 9F4A              ;	ADC HL,SP	LD (addr),SP
   8+ 9F4A              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F4A              ;	ADD IX,SP	LD SP,nn
  10+ 9F4A              ; 	ADD IY,SP	LD SP,HL
  11+ 9F4A              ;				LD SP,IX
  12+ 9F4A              ;	DEC SP		LD SP,IY
  13+ 9F4A
  14+ 9F4A              ;	EX (SP),HL
  15+ 9F4A              ;	EX (SP),IX
  16+ 9F4A              ;	EX (SP),IY
  17+ 9F4A
  18+ 9F4A              ;	INC SP
  19+ 9F4A
  20+ 9F4A                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 9F 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 69 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 6B 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 8E 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A A7 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 6F 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A AB 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A5 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 8E 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 A7 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 6F 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 AB 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B 9F 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A5 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B 9F 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A5 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A5 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1736  8131
1737  8131              	SAVESNA "Pruebas.sna", START
1738  8131
1739  8131
1740  8131
1741  8131
# file closed: Banco_de_pruebas.asm
