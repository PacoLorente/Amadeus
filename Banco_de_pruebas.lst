# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 2D 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD 48 A2     	call Pinta_disparos_Amadeus
  73  82F6 CD 19 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 57 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 29 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 55 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 55 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 58 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 39 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 5A 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 54 89        	defw Disparo_2
  40+ 8927 4E 89        	defw Disparo_3
  41+ 8929 48 89        	defw Disparo_4
  42+ 892B 42 89        	defw Disparo_5
  43+ 892D 3C 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00           Disparo_7 db 0	     						; Control.
  49+ 8937
  50+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893A 00 00        	defw 0									; Puntero de impresión.
  52+ 893C 00           Disparo_6 db 0		    					; Control.
  53+ 893D
  54+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8940 00 00        	defw 0									; Puntero de impresión.
  56+ 8942 00           Disparo_5 db 0			    				; Control.
  57+ 8943
  58+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8946 00 00        	defw 0									; Puntero de impresión.
  60+ 8948 00           Disparo_4 db 0				     			; Control.
  61+ 8949
  62+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 894C 00 00        	defw 0									; Puntero de impresión.
  64+ 894E 00           Disparo_3 db 0					    		; Control.
  65+ 894F
  66+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8952 00 00        	defw 0									; Puntero de impresión.
  68+ 8954 00           Disparo_2 db 0						    	; Control.
  69+ 8955
  70+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 8958 00 00        	defw 0									; Puntero de impresión.
  72+ 895A 00           Disparo_1 db 0							    ; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 148  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A7 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01 01 01  	db 1,1,1,1,1,1	 							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA5 01 01
  18+ 8BA7
  19+ 8BA7 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA8 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB0 01 02
  22+ 8BB2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB6 01 02
  23+ 8BB8
# file closed: Niveles.asm
 149  8BB8
 150  8BB8              ; --------------------------------------------------------------------------------
 151  8BB8              ;
 152  8BB8              ; 12/05/24
 153  8BB8              ;
 154  8BB8              ; Parámetros DRAW.
 155  8BB8              ;
 156  8BB8
 157  8BB8              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BB8
 159  8BB8 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BB9              ;															- Patrón de movimiento.
 161  8BB9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BBA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BBB
 164  8BBB 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BBC              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BBC
 167  8BBC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BBC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BBC              ; Ejemplos.
 170  8BBC
 171  8BBC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BBC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BBC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BBC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BBC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BBC
 177  8BBC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BBD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BBD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BBD
 181  8BBD 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BBF              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BBF
 184  8BBF 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC1
 186  8BC1              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC1
 188  8BC1 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BC3              ;														; _palabras que componen el "movimiento_masticado".
 190  8BC3
 191  8BC3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BC3
 193  8BC3 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BC4              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BC4              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BC4              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BC4              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BC4
 199  8BC4 00           Ctrl_2 db 0
 200  8BC5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BC5              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BC5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BC5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BC5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BC5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BC5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BC5              ;
 208  8BC5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BC5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BC5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BC5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BC5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BC5              ;														BIT 4, ???
 214  8BC5              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BC5
 216  8BC5 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BC6              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BC6              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BC6              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BC6              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BC6              ;
 222  8BC6              ; 														DESCRIPCIÖN:
 223  8BC6              ;
 224  8BC6              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BC6              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BC6              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BC6              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BC6              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BC6              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BC6              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BC6              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BC6              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BC6              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BC6              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BC6              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BC6              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BC6              ;
 238  8BC6              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BC6              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BC6              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BC6
 242  8BC6              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BC6
 244  8BC6 00           Filas db 0												; Filas. [DRAW]
 245  8BC7 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BC8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BCA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BCC
 249  8BCC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BCC
 251  8BCC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BCD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BCD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BCD
 255  8BCD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BCD
 257  8BCD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BCD              ;
 259  8BCD              ;	COLORES: 0 ..... NEGRO
 260  8BCD              ;    		 1 ..... AZUL
 261  8BCD              ; 			 2 ..... ROJO
 262  8BCD              ;			 3 ..... MAGENTA
 263  8BCD              ; 			 4 ..... VERDE
 264  8BCD              ; 			 5 ..... CIAN
 265  8BCD              ;			 6 ..... AMARILLO
 266  8BCD              ; 			 7 ..... BLANCO
 267  8BCD
 268  8BCD 00 00        Indice_Sprite_der defw 0
 269  8BCF 00 00        Indice_Sprite_izq defw 0
 270  8BD1 00 00        Puntero_DESPLZ_der defw 0
 271  8BD3 00 00        Puntero_DESPLZ_izq defw 0
 272  8BD5
 273  8BD5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BD7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BD8 00           Columnas db 0
 276  8BD9 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BDB              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BDB 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BDC
 280  8BDC              ; variables de control general.
 281  8BDC
 282  8BDC 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BDD
 284  8BDD              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BDD
 286  8BDD              Perfiles_de_velocidad
 287  8BDD
 288  8BDD 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BDE 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BDF 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE1
 293  8BE1              ; Contadores de 16 bits.
 294  8BE1
 295  8BE1 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BE9
 300  8BE9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BE9
 302  8BE9 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BEB 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BED 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BEF              ;
 306  8BEF              ;
 307  8BEF 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF0              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF0              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF0 00           Incrementa_puntero_backup db 0
 311  8BF1 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF2              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF2 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BF3 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BF4 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BF5              ;
 317  8BF5              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BF5              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BF5              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BF5              ;
 321  8BF5              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BF5              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BF5              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BF5              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BF5              ;
 326  8BF5              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BF5              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BF5              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BF5
 330  8BF5 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BF6
 332  8BF6              ;														DESCRIPCIÓN:
 333  8BF6              ;
 334  8BF6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BF6              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BF6              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BF6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BF6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BF6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BF6
 341  8BF6              ;														BIT 3, Recarga de nueva oleada.
 342  8BF6              ;														BIT 4, Recarga de nueva oleada.
 343  8BF6              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BF6              ;														BIT 6, **** Frame completo.
 345  8BF6              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BF6
 347  8BF6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BF8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BF8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BF8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BF8
 352  8BF8              ; Gestión de ENTIDADES y CAJAS.
 353  8BF8
 354  8BF8 00 00        Puntero_store_caja defw 0
 355  8BFA 00 00        Puntero_restore_caja defw 0
 356  8BFC 00 00        Indice_restore_caja defw 0
 357  8BFE 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8BFF 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C00 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C01
 361  8C01 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C03 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C05              ;														; _ puntero (Indice_entidades).
 364  8C05
 365  8C05              ;---------------------------------------------------------------------------------------------------------------
 366  8C05              ;
 367  8C05              ;	13/10/24
 368  8C05              ;
 369  8C05              ;	Álbumes.
 370  8C05
 371  8C05 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C07              ;														; _variable para almacenar lo posición del puntero_
 373  8C07              ; 														; _de pila, SP.
 374  8C07 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C09              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C09
 377  8C09              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C09
 379  8C09 00 00        Album_de_pintado defw 0
 380  8C0B 00 00        Album_de_borrado defw 0
 381  8C0D 00 00        Album_de_pintado_Amadeus defw 0
 382  8C0F 00 00        Album_de_borrado_Amadeus defw 0
 383  8C11
 384  8C11 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C13 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C15
 387  8C15 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C17 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C19
 390  8C19
 391  8C19 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C1B
 393  8C1B 00           Num_de_bytes_album_de_disparos db 0
 394  8C1C 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C1D
 396  8C1D 07           Numero_de_disparos_de_entidades db 7
 397  8C1E
 398  8C1E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C1F 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C20
 401  8C20 00 00        Techo_Scanlines_album defw 0
 402  8C22 00 00        Techo_Scanlines_album_2 defw 0
 403  8C24 00           Switch db 0
 404  8C25 00 00        Techo defw 0
 405  8C27 00 00        Scanlines_album_SP defw 0
 406  8C29 00 89        India_SP defw Tabla_de_pintado
 407  8C2B 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C2D
 409  8C2D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C2E              ;
 411  8C2E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C2E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C2E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C2E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C2E              ;																Habilita el borrado/pintado de sprites.
 416  8C2E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C2E              ;																_ a la baja.
 418  8C2E              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C2E              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C2E              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C2E              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C2E              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C2E              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C2E
 425  8C2E 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C2F              ;
 427  8C2F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C2F              ;
 429  8C2F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C2F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C2F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C2F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C2F              ;
 434  8C2F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C2F              ;															_ masticados ya generados.
 436  8C2F              ;
 437  8C2F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C2F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C2F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C2F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C2F
 442  8C2F 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C30              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 444  8C30              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 445  8C30
 446  8C30              ; Gestión de Disparos.
 447  8C30
 448  8C30 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 449  8C32 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 450  8C34 00           Impacto2 db 0											; Byte de control de impactos.
 451  8C35
 452  8C35              ;
 453  8C35              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 454  8C35              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 455  8C35              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 456  8C35              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 457  8C35
 458  8C35
 459  8C35
 460  8C35
 461  8C35
 462  8C35
 463  8C35
 464  8C35 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 465  8C37              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 466  8C37              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 467  8C37
 468  8C37 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 469  8C39              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 470  8C39 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8C3C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8C3C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C3F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 474  8C3F
 475  8C3F              ;---------------------------------------------------------------------------------------------------------------
 476  8C3F
 477  8C3F              ; Relojes y temporizaciones.
 478  8C3F
 479  8C3F 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 480  8C40 05           Clock_explosion_Amadeus db 5
 481  8C41 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 482  8C42
 483  8C42 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 484  8C44 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 485  8C46 00           Numero_rnd_disparos db 0
 486  8C47
 487  8C47 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 488  8C49 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 489  8C4A              ;																		; Repite la oleada de entidades.
 490  8C4A A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 491  8C4B A0           CLOCK_disparos_de_entidades db $a0
 492  8C4C
 493  8C4C              ;---------------------------------------------------------------------------------------------------------------
 494  8C4C
 495  8C4C              ; Gestión de NIVELES.
 496  8C4C
 497  8C4C 00           Nivel db 0												; Nivel actual del juego.
 498  8C4D 00 00        Puntero_indice_NIVELES defw 0
 499  8C4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8C51              ; 														; _ que definen el NIVEL.
 501  8C51
 502  8C51              ; ---------------------------------------------------------------------------------------------------------------
 503  8C51
 504  8C51              ; Temporizaciones Shield.
 505  8C51
 506  8C51 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 507  8C55 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 508  8C57 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 509  8C58 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 510  8C59 00           Shield_3 db 0
 511  8C5A
 512  8C5A 03           Lives db 3
 513  8C5B
 514  8C5B              ; 	INICIO  *************************************************************************************************************************************************************************
 515  8C5B              ;
 516  8C5B              ;	5/1/24
 517  8C5B
 518  8C5B              START
 519  8C5B
 520  8C5B 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 521  8C5E 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 522  8C60 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 523  8C62 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 524  8C64 F3           	DI
 525  8C65
 526  8C65              ; Limpiamos pantalla.
 527  8C65
 528  8C65 3E 07        	ld a,%00000111
 529  8C67 CD C6 94     	call Cls
 530  8C6A CD 1E 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 531  8C6D
 532  8C6D              ; INICIALIZACIÓN.
 533  8C6D
 534  8C6D 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 535  8C6F CD 6B 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 536  8C72
 537  8C72 CD B3 8E     	call Extrae_numero_aleatorio_y_avanza
 538  8C75
 539  8C75 6F           	ld l,a
 540  8C76 26 00        	ld h,0
 541  8C78 22 47 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C7B
 543  8C7B              ;	Inicializa 1er Nivel.
 544  8C7B
 545  8C7B 21 94 8B     	ld hl,Indice_de_niveles
 546  8C7E 22 4D 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 547  8C81 CD 9B 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 548  8C84              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 549  8C84              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 550  8C84              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 551  8C84
 552  8C84              ;	Inicia los álbumes de líneas.
 553  8C84
 554  8C84 CD 6C 90     	call Inicia_albumes_de_lineas
 555  8C87              ;
 556  8C87 CD 7C 90     	call Inicia_albumes_de_lineas_Amadeus
 557  8C8A CD 89 90     	call Inicia_albumes_de_disparos
 558  8C8D
 559  8C8D CD E0 92     4 call Inicia_Entidades
 560  8C90 CD 43 93     	call Inicia_Amadeus
 561  8C93
 562  8C93              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 563  8C93              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 564  8C93              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 565  8C93
 566  8C93 11 6D 89     	ld de,Amadeus_BOX
 567  8C96 CD 96 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 568  8C99 CD 86 93     	call Limpiamos_bandeja_DRAW
 569  8C9C
 570  8C9C              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 571  8C9C
 572  8C9C 06 3C        	ld b,60
 573  8C9E CD 6C 9D     2 call Amadeus_a_izquierda
 574  8CA1 10 FB        	djnz 2B
 575  8CA3
 576  8CA3 CD 4A 90     	call Genera_datos_de_impresion_Amadeus
 577  8CA6
 578  8CA6              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 579  8CA6
 580  8CA6 CD A5 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 581  8CA9
 582  8CA9 CD 29 91     	call Inicia_Shield
 583  8CAC
 584  8CAC 2A 27 8C     6 ld hl,(Scanlines_album_SP)
 585  8CAF 22 20 8C     	ld (Techo_Scanlines_album),hl
 586  8CB2
 587  8CB2 2A 0B 8C     	ld hl,(Album_de_borrado)
 588  8CB5 22 27 8C     	ld (Scanlines_album_SP),hl
 589  8CB8
 590  8CB8 21 00 89     	ld hl,Tabla_de_pintado
 591  8CBB 22 29 8C     	ld (India_SP),hl
 592  8CBE
 593  8CBE 21 2D 8C     	ld hl,Ctrl_3
 594  8CC1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 595  8CC3 CB D6        	set 2,(hl)
 596  8CC5 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 597  8CC7
 598  8CC7 FB           	ei 													; Ha de apuntar a $5c3a.
 599  8CC8
 600  8CC8 76           	halt
 601  8CC9
 602  8CC9              ; ------------------------------------
 603  8CC9
 604  8CC9              Main
 605  8CC9              ;
 606  8CC9              ; 25/10/24
 607  8CC9
 608  8CC9              ; Gestión de disparos.
 609  8CC9
 610  8CC9 CD 88 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 611  8CCC CD 5F 9F     	call Motor_de_disparos_entidades
 612  8CCF CD F4 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 613  8CD2
 614  8CD2              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 615  8CD2              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 616  8CD2              ; Este hecho lo indica el bit2 de (Impacto2).
 617  8CD2
 618  8CD2 CD 91 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 619  8CD5
 620  8CD5              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 621  8CD5
 622  8CD5 21 4B 8C     	ld hl,CLOCK_disparos_de_entidades
 623  8CD8 35           	dec (hl)
 624  8CD9 CC D1 8D     	call z,Autoriza_disparo_de_entidades
 625  8CDC
 626  8CDC 2A 47 8C     	ld hl,(Clock_next_entity)
 627  8CDF ED 4B 78 5C  	ld bc,(FRAMES)
 628  8CE3 A7           	and a
 629  8CE4 ED 42        	sbc hl,bc
 630  8CE6 20 16        	jr nz,1F
 631  8CE8
 632  8CE8              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 633  8CE8              ; _ (Clock_next_entity) para la siguiente entidad.
 634  8CE8
 635  8CE8 3A FF 8B     	ld a,(Numero_parcial_de_entidades)
 636  8CEB 47           	ld b,a
 637  8CEC 3A 00 8C     	ld a,(Entidades_en_curso)
 638  8CEF B8           	cp b
 639  8CF0 28 0C        	jr z,1F
 640  8CF2 30 0A        	jr nc,1F
 641  8CF4
 642  8CF4 3C           	inc a
 643  8CF5 32 00 8C     	ld (Entidades_en_curso),a
 644  8CF8
 645  8CF8              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 646  8CF8
 647  8CF8 CD B3 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 648  8CFB CD CF 8E     	call Define_Clock_next_entity
 649  8CFE
 650  8CFE 3A 00 8C     1 ld a,(Entidades_en_curso)
 651  8D01 A7           	and a
 652  8D02 CA 7C 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 653  8D05 47           	ld b,a												; No hay entidades que gestionar.
 654  8D06
 655  8D06              ; ( Código que ejecutamos con cada entidad: ).
 656  8D06
 657  8D06              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 658  8D06              ;
 659  8D06              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 660  8D06
 661  8D06 21 00 89     	ld hl,Tabla_de_pintado
 662  8D09 22 29 8C     	ld (India_SP),hl
 663  8D0C
 664  8D0C 21 2D 8C     	ld hl,Ctrl_3
 665  8D0F CB D6        	set 2,(hl)
 666  8D11 CD 5D 8E     	call Change
 667  8D14
 668  8D14 C5           2 push bc 												; Nº de entidades en curso.
 669  8D15
 670  8D15 CD F6 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 671  8D18 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 672  8D1C
 673  8D1C              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 674  8D1C
 675  8D1C              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 676  8D1C              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 677  8D1C
 678  8D1C 3A 34 8C     	ld a,(Impacto2)
 679  8D1F CB 5F        	bit 3,a
 680  8D21 C4 8B A1     	call nz,Compara_con_coordenadas_de_disparo
 681  8D24
 682  8D24 3A BC 8B     	ld a,(Impacto)
 683  8D27 CB 4F        	bit 1,a
 684  8D29 C4 06 92     	call nz,Genera_explosion
 685  8D2C 20 31        	jr nz,Gestiona_siguiente_entidad
 686  8D2E
 687  8D2E 3A BC 8B     	ld a,(Impacto)
 688  8D31 A7           	and a
 689  8D32 28 0C        	jr z,3F
 690  8D34
 691  8D34              ; IMPACTO en entidad por colisión con Amadeus.
 692  8D34
 693  8D34              ; 5/7/24
 694  8D34              ; Nota importante:
 695  8D34              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 696  8D34              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 697  8D34              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 698  8D34
 699  8D34 3A 71 89     	ld a,(Impacto_Amadeus)
 700  8D37 A7           	and a
 701  8D38 C4 06 92     	call nz,Genera_explosion
 702  8D3B 20 22        	jr nz,Gestiona_siguiente_entidad
 703  8D3D
 704  8D3D              ; Falsa colisión !!!
 705  8D3D
 706  8D3D 32 BC 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 707  8D40
 708  8D40              ; -------------------------------------------
 709  8D40
 710  8D40 CD 13 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 711  8D43 CD 3D 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 712  8D46 CD 03 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 713  8D49 CD 06 95     	call Genera_datos_de_impresion
 714  8D4C CD A9 93     	call Decrementa_Contador_de_mov_masticados
 715  8D4F
 716  8D4F              ; -------------------------------------------
 717  8D4F
 718  8D4F              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 719  8D4F
 720  8D4F 2A BD 8B     	ld hl,(Puntero_de_impresion)
 721  8D52 CD DA 94     	call Genera_coordenadas
 722  8D55
 723  8D55              ; TODO: Generamos disparo ???
 724  8D55
 725  8D55 3A 1F 8C     	ld a,(Permiso_de_disparo_Entidades)
 726  8D58 A7           	and a
 727  8D59 C4 E6 8D     	call nz,Entidad_genera_disparo_si_procede
 728  8D5C
 729  8D5C CD 0F A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 730  8D5F
 731  8D5F              Gestiona_siguiente_entidad
 732  8D5F
 733  8D5F CD 7B 93      	call Store_Restore_cajas
 734  8D62 C1           	pop bc
 735  8D63 10 AF        	djnz 2B
 736  8D65
 737  8D65              ; Hemos gestionado todas las entidades.
 738  8D65              ; ----- ----- -----
 739  8D65
 740  8D65 CD 27 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 741  8D68 CD 3E 8F     	call Ordena_tabla_de_impresion
 742  8D6B CD A5 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 743  8D6E
 744  8D6E CD E4 8E     	call Borra_diferencia
 745  8D71
 746  8D71 3A 2D 8C     	ld a,(Ctrl_3)
 747  8D74 CB 5F        	bit 3,a
 748  8D76 20 04        	jr nz,Gestion_de_Amadeus
 749  8D78
 750  8D78 EB           	ex de,hl
 751  8D79 71           	ld (hl),c
 752  8D7A 2C           	inc l
 753  8D7B 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 754  8D7C
 755  8D7C              ;! GESTIONA AMADEUS !!!!!!!!!!
 756  8D7C
 757  8D7C              Gestion_de_Amadeus
 758  8D7C
 759  8D7C 21 2D 8C     	ld hl,Ctrl_3
 760  8D7F CB 76        	bit 6,(hl)
 761  8D81 28 13        	jr z,Amadeus_vivo
 762  8D83
 763  8D83              ; Amadeus ha sido destruido.
 764  8D83              ; Decrementa (Temp_new_live).
 765  8D83
 766  8D83 21 41 8C     	ld hl,Temp_new_live
 767  8D86 35           	dec (hl)
 768  8D87 20 26        	jr nz,End_frame
 769  8D89
 770  8D89              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 771  8D89
 772  8D89 21 5A 8C     	ld hl,Lives
 773  8D8C 35           	dec (hl)
 774  8D8D
 775  8D8D              ;! Fin del juego
 776  8D8D
 777  8D8D F3           	di
 778  8D8E 28 FE        	jr z,$
 779  8D90 FB           	ei
 780  8D91
 781  8D91              ; Nueva nave.
 782  8D91
 783  8D91 CD 03 8E     	call Reinicia_Amadeus
 784  8D94 18 19        	jr End_frame
 785  8D96
 786  8D96              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 787  8D96
 788  8D96              Amadeus_vivo
 789  8D96
 790  8D96 3A 71 89     	ld a,(Impacto_Amadeus)
 791  8D99 A7           	and a
 792  8D9A C4 36 92     	call nz, Genera_explosion_Amadeus
 793  8D9D 20 10        	jr nz, End_frame
 794  8D9F
 795  8D9F CD E3 91     	call Teclado
 796  8DA2 21 2D 8C     	ld hl,Ctrl_3
 797  8DA5
 798  8DA5 CB 6E        	bit 5,(hl)
 799  8DA7 28 06        	jr z,End_frame
 800  8DA9
 801  8DA9              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 802  8DA9
 803  8DA9 CD 78 8E     	call Change_Amadeus
 804  8DAC CD 4A 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 805  8DAF
 806  8DAF              End_frame
 807  8DAF
 808  8DAF              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 809  8DAF              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 810  8DAF
 811  8DAF CD B6 A0     	call Genera_datos_de_impresion_disparos_Entidades
 812  8DB2 CD 7A A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 813  8DB5 CD D0 A1     	call Calcula_bytes_pintado_disparos
 814  8DB8 CD DD A1     	call Limpia_album_de_pintado_disparos_entidades
 815  8DBB
 816  8DBB              ; ------------ ------------- --------------
 817  8DBB
 818  8DBB 2A 0B 8C     	ld hl,(Album_de_borrado)
 819  8DBE 22 27 8C     	ld (Scanlines_album_SP),hl
 820  8DC1
 821  8DC1 21 2D 8C     	ld hl,Ctrl_3
 822  8DC4 CB C6        	set 0,(hl) 											; Indica Frame completo.
 823  8DC6 CB 9E        	res 3,(hl)
 824  8DC8 CB A6        	res 4,(hl)
 825  8DCA
 826  8DCA AF           	xor a
 827  8DCB D3 FE        	out ($fe),a
 828  8DCD
 829  8DCD 76           	halt
 830  8DCE
 831  8DCE              ; ----------------------------------------
 832  8DCE
 833  8DCE              ;	ld a,(Ctrl_1) 										; Existe Loop?
 834  8DCE              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 835  8DCE CA C9 8C     	jp z,Main
 836  8DD1
 837  8DD1              ;------------------------------------------
 838  8DD1              ;
 839  8DD1              ;	2/10/24
 840  8DD1
 841  8DD1              Autoriza_disparo_de_entidades
 842  8DD1
 843  8DD1 3E 01        	ld a,1
 844  8DD3 32 1F 8C     	ld (Permiso_de_disparo_Entidades),a
 845  8DD6
 846  8DD6 3A 4A 8C     	ld a,(Repone_CLOCK_disparos)
 847  8DD9 FE 19        	cp 25
 848  8DDB 38 02        	jr c,1F
 849  8DDD
 850  8DDD D6 05        	sub 5
 851  8DDF
 852  8DDF 32 4A 8C     1 ld (Repone_CLOCK_disparos),a
 853  8DE2 32 4B 8C     	ld (CLOCK_disparos_de_entidades),a
 854  8DE5
 855  8DE5 C9           	ret
 856  8DE6
 857  8DE6              ;------------------------------------------
 858  8DE6              ;
 859  8DE6              ;	14/09/24
 860  8DE6              ;
 861  8DE6              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 862  8DE6
 863  8DE6              Entidad_genera_disparo_si_procede
 864  8DE6
 865  8DE6 2A 44 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 866  8DE9 CB 06        	rlc (hl)
 867  8DEB
 868  8DEB DC 06 A1     	call c,Genera_disparo_de_entidad_maldosa
 869  8DEE
 870  8DEE C9           	ret
 871  8DEF
 872  8DEF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 873  8DEF              ;
 874  8DEF              ;	30/09/24
 875  8DEF
 876  8DEF              Actuaiza_sp_de_disparos_de_entidades
 877  8DEF
 878  8DEF 2A 44 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 879  8DF2 23           	inc hl
 880  8DF3 22 44 8C     	ld (Puntero_num_aleatorios_disparos),hl
 881  8DF6
 882  8DF6 11 FD 88     	ld de,Numeros_aleatorios+7
 883  8DF9 7B           	ld a,e
 884  8DFA 95           	sub l
 885  8DFB C0           	ret nz
 886  8DFC
 887  8DFC 21 F6 88     1 ld hl,Numeros_aleatorios
 888  8DFF 22 44 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 889  8E02 C9           	ret
 890  8E03
 891  8E03              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 892  8E03              ;
 893  8E03              ;	24/07/24
 894  8E03
 895  8E03              Reinicia_Amadeus
 896  8E03
 897  8E03              ;	Reinicia posición y estado.
 898  8E03
 899  8E03 21 CF 50     	ld hl,$50cf
 900  8E06 22 72 89     	ld (p.imp.amadeus),hl
 901  8E09 21 F0 E0     	ld hl,$e0f0
 902  8E0C 22 74 89     	ld (Pamm_Amadeus),hl
 903  8E0F 21 3D 00     	ld hl,$003d
 904  8E12 22 76 89     	ld (Comm_Amadeus),hl
 905  8E15
 906  8E15              ;	limpiamos el álbum de borrado.
 907  8E15
 908  8E15 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
 909  8E18
 910  8E18 AF           	xor a
 911  8E19 77           	ld (hl),a
 912  8E1A
 913  8E1A E5           	push hl
 914  8E1B D1           	pop de
 915  8E1C 13           	inc de
 916  8E1D
 917  8E1D 01 23 00     	ld bc,35
 918  8E20 ED B0        	ldir
 919  8E22
 920  8E22 CD 4A 90     	call Genera_datos_de_impresion_Amadeus
 921  8E25
 922  8E25              ;	Reinicia temporizaciones.
 923  8E25
 924  8E25 CD 29 91     	call Inicia_Shield
 925  8E28
 926  8E28 3E 5A        	ld a,90
 927  8E2A 32 57 8C     	ld (Shield),a
 928  8E2D
 929  8E2D 3E 64        	ld a,100
 930  8E2F 32 41 8C     	ld (Temp_new_live),a
 931  8E32
 932  8E32              ; 	Restauramos el FLAG: Amadeus vivo.
 933  8E32
 934  8E32 21 2D 8C     	ld hl,Ctrl_3
 935  8E35 CB B6        	res 6,(hl)
 936  8E37
 937  8E37              ;	Fuerza la impresión de la nave en el siguiente frame.
 938  8E37
 939  8E37 21 2D 8C      	ld hl,Ctrl_3
 940  8E3A CB EE        	set 5,(hl)
 941  8E3C
 942  8E3C C9           	ret
 943  8E3D
 944  8E3D              ; --------------------------------------------------------------------------------------------------------------
 945  8E3D              ;
 946  8E3D              ;	12/05/24
 947  8E3D
 948  8E3D 3A C3 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 949  8E40 CB 27        	sla a
 950  8E42 32 C3 8B     	ld (Velocidad),a
 951  8E45 E6 10        	and $10
 952  8E47 C8           	ret z
 953  8E48
 954  8E48              ; Restaura (Velocidad) a razón del nº de vueltas.
 955  8E48
 956  8E48 3A BB 8B     	ld a,(Contador_de_vueltas)
 957  8E4B CB 2F        	sra a
 958  8E4D CB 2F        	sra a
 959  8E4F 32 C3 8B     	ld (Velocidad),a
 960  8E52
 961  8E52 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 962  8E55 23           	inc hl
 963  8E56 23           	inc hl
 964  8E57 23           	inc hl
 965  8E58 23           	inc hl
 966  8E59 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 967  8E5C
 968  8E5C C9           	ret
 969  8E5D
 970  8E5D              ; --------------------------------------------------------------------------------------------------------------
 971  8E5D              ;
 972  8E5D              ;	25/08/24
 973  8E5D
 974  8E5D              Change
 975  8E5D
 976  8E5D 3A 24 8C     	ld a,(Switch)
 977  8E60 EE 01        	xor 1
 978  8E62 32 24 8C     	ld (Switch),a
 979  8E65 2A 09 8C     	ld hl,(Album_de_pintado)
 980  8E68 ED 5B 0B 8C  	ld de,(Album_de_borrado)
 981  8E6C EB           	ex de,hl
 982  8E6D 22 09 8C     	ld (Album_de_pintado),hl
 983  8E70 22 27 8C     	ld (Scanlines_album_SP),hl
 984  8E73 ED 53 0B 8C  	ld (Album_de_borrado),de
 985  8E77 C9           	ret
 986  8E78
 987  8E78              Change_Amadeus
 988  8E78
 989  8E78 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
 990  8E7B ED 5B 0F 8C  	ld de,(Album_de_borrado_Amadeus)
 991  8E7F EB           	ex de,hl
 992  8E80 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
 993  8E83 ED 53 0F 8C  	ld (Album_de_borrado_Amadeus),de
 994  8E87 C9           	ret
 995  8E88
 996  8E88              Change_Disparos
 997  8E88
 998  8E88              ; Álbumes de Amadeus.
 999  8E88
1000  8E88 2A 11 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1001  8E8B ED 5B 13 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1002  8E8F EB           	ex de,hl
1003  8E90 22 11 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1004  8E93 ED 53 13 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1005  8E97 CD C5 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1006  8E9A
1007  8E9A              ; Álbumes de entidades.
1008  8E9A
1009  8E9A 2A 15 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1010  8E9D ED 5B 17 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1011  8EA1 EB           	ex de,hl
1012  8EA2 22 15 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1013  8EA5 ED 53 17 8C  	ld (Album_de_borrado_disparos_Entidades),de
1014  8EA9 22 19 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1015  8EAC
1016  8EAC 3A 1B 8C     	ld a,(Num_de_bytes_album_de_disparos)
1017  8EAF 32 1C 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1018  8EB2
1019  8EB2 C9           	ret
1020  8EB3
1021  8EB3              ; ------------------------------------
1022  8EB3              ;
1023  8EB3              ; 1/05/24
1024  8EB3
1025  8EB3              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1026  8EB3              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1027  8EB3
1028  8EB3              ;	DESTRUYE: HL,DE,A
1029  8EB3              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1030  8EB3
1031  8EB3              ;	Variables implicadas: (RND_SP).
1032  8EB3
1033  8EB3              Extrae_numero_aleatorio_y_avanza
1034  8EB3
1035  8EB3 21 00 89     	ld hl,Tabla_de_pintado
1036  8EB6 EB           	ex de,hl
1037  8EB7 2A 42 8C     	ld hl,(RND_SP)
1038  8EBA EB           	ex de,hl
1039  8EBB A7           	and a
1040  8EBC ED 52        	sbc hl,de
1041  8EBE
1042  8EBE 2A 42 8C     	ld hl,(RND_SP)
1043  8EC1 20 06        	jr nz,1F
1044  8EC3
1045  8EC3              ; Sitúa HL al principio de la tabla de nº aleatorios.
1046  8EC3
1047  8EC3 21 F6 88     	ld hl,Numeros_aleatorios
1048  8EC6 22 42 8C     	ld (RND_SP),HL
1049  8EC9
1050  8EC9              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1051  8EC9
1052  8EC9 7E           1 ld a,(hl)
1053  8ECA 23           	inc hl
1054  8ECB 22 42 8C     	ld (RND_SP),hl
1055  8ECE C9           	ret
1056  8ECF
1057  8ECF              ; ------------------------------------
1058  8ECF              ;
1059  8ECF              ; 1/05/24
1060  8ECF
1061  8ECF              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1062  8ECF              ; (1 a 4 segundos).
1063  8ECF              ; Actualizamos (Clock_next_entity) con A.
1064  8ECF
1065  8ECF              ;	DESTRUYE: A y B.
1066  8ECF              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1067  8ECF              ;			 Actualiza (Clock_next_entity) con A.
1068  8ECF
1069  8ECF              ;	Variables implicadas: (Clock_next_entity).
1070  8ECF
1071  8ECF              ; Notas:
1072  8ECF
1073  8ECF              ; 	$32 1 seg.
1074  8ECF              ; 	$64 2 seg.
1075  8ECF              ; 	$96 3 seg.
1076  8ECF              ; 	$c8 4 seg.
1077  8ECF              ; 	$fa 5 seg.
1078  8ECF
1079  8ECF              ; $ffff 1310,7 seg, 22 minutos.
1080  8ECF
1081  8ECF              ;	$0100  5 seg. aproximadamente.
1082  8ECF              ;	$0200 10 seg. aproximadamente.
1083  8ECF              ;	$0300 15 seg. aproximadamente.
1084  8ECF              ;	$0400 20 seg. aproximadamente.
1085  8ECF              ;	$0500 25 seg. aproximadamente.
1086  8ECF              ;	$0600 30 seg. aproximadamente.
1087  8ECF
1088  8ECF              Define_Clock_next_entity
1089  8ECF
1090  8ECF FE 34        	cp $34
1091  8ED1 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1092  8ED3
1093  8ED3              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1094  8ED3
1095  8ED3 4F           3 ld c,a
1096  8ED4 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1097  8ED6 2A 78 5C     	ld hl,(FRAMES)
1098  8ED9 A7           	and a
1099  8EDA ED 4A        	adc hl,bc
1100  8EDC 22 47 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1101  8EDF C9           	ret
1102  8EE0
1103  8EE0 3E 34        1 ld a,$34
1104  8EE2 18 EF        	jr 3B
1105  8EE4
1106  8EE4              ; ------------------------------------
1107  8EE4              ;
1108  8EE4              ; 18/03/24
1109  8EE4
1110  8EE4              Borra_diferencia
1111  8EE4
1112  8EE4 ED 4B 27 8C  	ld bc,(Scanlines_album_SP)
1113  8EE8
1114  8EE8 3A 24 8C     	ld a,(Switch)
1115  8EEB A7           	and a
1116  8EEC 28 08        	jr z,2F
1117  8EEE
1118  8EEE 2A 22 8C     	ld hl,(Techo_Scanlines_album_2)
1119  8EF1 11 22 8C     	ld de,Techo_Scanlines_album_2
1120  8EF4 18 06        	jr 3F
1121  8EF6
1122  8EF6 2A 20 8C     2 ld hl,(Techo_Scanlines_album)
1123  8EF9 11 20 8C     	ld de,Techo_Scanlines_album
1124  8EFC
1125  8EFC              ; Diferencia.
1126  8EFC
1127  8EFC ED 42        3 sbc hl,bc
1128  8EFE
1129  8EFE C8           	ret z
1130  8EFF D8           	ret c
1131  8F00
1132  8F00              ; Nuevo techo, (más bajo que el anterior).
1133  8F00              ; Fijamos nuevo techo y borramos bytes sobrantes.
1134  8F00
1135  8F00 EB           	ex de,hl
1136  8F01
1137  8F01 71           	ld (hl),c
1138  8F02 2C           	inc l
1139  8F03 70           	ld (hl),b
1140  8F04
1141  8F04 AF           	xor a
1142  8F05 43           	ld b,e
1143  8F06
1144  8F06 2A 27 8C     	ld hl,(Scanlines_album_SP)
1145  8F09
1146  8F09 77           1 ld (hl),a
1147  8F0A 23           	inc hl
1148  8F0B 10 FC        	djnz 1B
1149  8F0D
1150  8F0D              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1151  8F0D
1152  8F0D 21 2D 8C     	ld hl,Ctrl_3
1153  8F10 CB DE        	set 3,(hl)
1154  8F12
1155  8F12 C9           	ret
1156  8F13
1157  8F13              ; --------------------------------------------------------------------------------------------------------------
1158  8F13              ;
1159  8F13              ;	26/3/24
1160  8F13
1161  8F13              Recauda_informacion_de_entidad_en_curso
1162  8F13
1163  8F13              ; Almacena la Coordenada Y de la entidad en curso.
1164  8F13
1165  8F13              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1166  8F13
1167  8F13 3A BA 8B     	ld a,(Coordenada_y)
1168  8F16 2A 29 8C     	ld hl,(India_SP)
1169  8F19 77           	ld (hl),a
1170  8F1A 2C           	inc l
1171  8F1B
1172  8F1B              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1173  8F1B
1174  8F1B ED 5B 27 8C  	ld de,(Scanlines_album_SP)
1175  8F1F
1176  8F1F 73           	ld (hl),e
1177  8F20 2C           	inc l
1178  8F21 72           	ld (hl),d
1179  8F22 2C           	inc l
1180  8F23
1181  8F23 22 29 8C     	ld (India_SP),hl
1182  8F26
1183  8F26 C9           	ret
1184  8F27
1185  8F27              ; --------------------------------------------------------------------------------------------------------------
1186  8F27              ;
1187  8F27              ;	27/03/24
1188  8F27              ;
1189  8F27
1190  8F27              Inicializa_India_y_limpia_Tabla_de_impresion
1191  8F27
1192  8F27 2A 29 8C     	ld hl,(India_SP)
1193  8F2A 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1194  8F2D
1195  8F2D 79           	ld a,c
1196  8F2E 95           	sub l
1197  8F2F 28 06        	jr z,2F
1198  8F31 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1199  8F32              ;														; _ y pasamos a inicializar (India_SP).
1200  8F32 AF           	xor a
1201  8F33
1202  8F33 77           1 ld (hl),a
1203  8F34 2C           	inc l
1204  8F35 10 FC        	djnz 1B												; Limpia Tabla.
1205  8F37
1206  8F37 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1207  8F3A 22 29 8C     	ld (India_SP),hl
1208  8F3D
1209  8F3D C9           	ret
1210  8F3E
1211  8F3E              ; --------------------------------------------------------------------------------------------------------------
1212  8F3E              ;
1213  8F3E              ;	31/3/24
1214  8F3E
1215  8F3E              Ordena_tabla_de_impresion
1216  8F3E
1217  8F3E              ; 5794 T/states.
1218  8F3E              ; 6278 T/states.
1219  8F3E              ; 5310 T/states.
1220  8F3E
1221  8F3E              ; Inicializamos punteros (India_SP) e (India_2_SP).
1222  8F3E              ; Inicializamos contador de comparaciones, [C].
1223  8F3E              ; Cargamos los registros A y B para efectuar comparación.
1224  8F3E
1225  8F3E FD 2E 00     	ld iyl,0
1226  8F41
1227  8F41 3A 00 8C     	ld a,(Entidades_en_curso)
1228  8F44 FE 04        	cp 4 	;	4
1229  8F46 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1230  8F47
1231  8F47 3D           	dec a
1232  8F48 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1233  8F49 51           	ld d,c 										; Copia de respaldo.
1234  8F4A
1235  8F4A 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1236  8F4B
1237  8F4B 21 03 89     	ld hl,Tabla_de_pintado+3
1238  8F4E 46           	ld b,(hl)
1239  8F4F 22 2B 8C     	ld (India_2_SP),hl
1240  8F52
1241  8F52 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1242  8F53 DC 7B 8F     	call c, Avanza_India_2_SP
1243  8F56 CC 7B 8F     	call z, Avanza_India_2_SP
1244  8F59
1245  8F59 FD 2D        	dec iyl
1246  8F5B 28 18        	jr z,2F
1247  8F5D
1248  8F5D
1249  8F5D              ; --------------------------------------------------------------------------------------------------------------
1250  8F5D              ;
1251  8F5D              ;	7/4/24
1252  8F5D
1253  8F5D              Trueque
1254  8F5D
1255  8F5D              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1256  8F5D              ;  			A contiene en nº de fila de (India_SP).
1257  8F5D              ;			HL contiene (India_2_SP).
1258  8F5D
1259  8F5D D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1260  8F5E E5           	push hl										; Preservo (India_2_SP).
1261  8F5F
1262  8F5F ED 5B 29 8C  	ld de,(India_SP)
1263  8F63 EB           	ex de,hl
1264  8F64 70           	ld (hl),b
1265  8F65 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1266  8F66
1267  8F66 CD A7 8F     	call Intercambia_1_byte
1268  8F69 CD A7 8F     	call Intercambia_1_byte
1269  8F6C
1270  8F6C
1271  8F6C              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1272  8F6C              ; Recuperamos (India_2_SP) en HL.
1273  8F6C
1274  8F6C 2A 29 8C     	ld hl,(India_SP)
1275  8F6F 7E           	ld a,(hl)
1276  8F70
1277  8F70 E1           	pop hl
1278  8F71 D1           	pop de
1279  8F72
1280  8F72              ; --------------------------------------------------------------------------------------------------------------
1281  8F72
1282  8F72 CD 7B 8F     	call Avanza_India_2_SP
1283  8F75
1284  8F75 14           2 inc d
1285  8F76 15           	dec d
1286  8F77 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1287  8F78 18 D8        	jr 1B
1288  8F7A
1289  8F7A C9           	ret
1290  8F7B
1291  8F7B              ; ----- ----- ----- ----- -----
1292  8F7B
1293  8F7B              Avanza_India_2_SP
1294  8F7B
1295  8F7B 0D           	dec c
1296  8F7C 28 0A        	jr z,Avanza_punteros_indios
1297  8F7E
1298  8F7E FD 2C        	inc iyl
1299  8F80
1300  8F80 2C           	inc l
1301  8F81 2C           	inc l
1302  8F82 2C           	inc l
1303  8F83
1304  8F83 46           	ld b,(hl)
1305  8F84 22 2B 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1306  8F87
1307  8F87 C9           	ret
1308  8F88
1309  8F88              ; ----- ----- ----- ----- -----
1310  8F88
1311  8F88              Avanza_punteros_indios
1312  8F88
1313  8F88 15           	dec d
1314  8F89 28 15        	jr z,Prepara_salida
1315  8F8B
1316  8F8B 4A           	ld c,d
1317  8F8C
1318  8F8C 2A 29 8C     	ld hl,(India_SP)
1319  8F8F 2C           	inc l
1320  8F90 2C           	inc l
1321  8F91 2C           	inc l
1322  8F92 7E           	ld a,(hl)
1323  8F93 22 29 8C     	ld (India_SP),hl
1324  8F96
1325  8F96 2C           	inc l
1326  8F97 2C           	inc l
1327  8F98 2C           	inc l
1328  8F99 46           	ld b,(hl)
1329  8F9A 22 2B 8C     	ld (India_2_SP),hl
1330  8F9D
1331  8F9D FD 2C        	inc iyl
1332  8F9F
1333  8F9F C9           	ret
1334  8FA0
1335  8FA0              Prepara_salida
1336  8FA0
1337  8FA0 21 00 89     	ld hl,Tabla_de_pintado
1338  8FA3 22 29 8C     	ld (India_SP),hl
1339  8FA6 C9           	ret
1340  8FA7
1341  8FA7
1342  8FA7 2C           Intercambia_1_byte inc l
1343  8FA8 1C           	inc e
1344  8FA9 46           	ld b,(hl)
1345  8FAA 1A           	ld a,(de)
1346  8FAB EB           	ex de,hl
1347  8FAC 70           	ld (hl),b
1348  8FAD 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1349  8FAE C9           	ret
1350  8FAF
1351  8FAF              ; -----------------------------------------------------------------------------------
1352  8FAF              ;
1353  8FAF              ;	20/01/24
1354  8FAF              ;
1355  8FAF              ;
1356  8FAF
1357  8FAF              Construye_movimientos_masticados_entidad
1358  8FAF
1359  8FAF 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1360  8FB2 E5           	push hl
1361  8FB3 CD F6 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1362  8FB6              ;															; _ el (Contador_de_mov_masticados).
1363  8FB6 CD C1 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1364  8FB9              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1365  8FB9 CD F2 99     	call Recompone_posicion_inicio
1366  8FBC
1367  8FBC CD 22 97     1 call Draw
1368  8FBF CD DB 8F     	call Guarda_movimiento_masticado
1369  8FC2
1370  8FC2 CD 9F 9D     	call Movimiento
1371  8FC5
1372  8FC5 3A 2D 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1373  8FC8 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1374  8FCA 28 F0        	jr z,1B
1375  8FCC
1376  8FCC              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1377  8FCC              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1378  8FCC
1379  8FCC E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1380  8FCD 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1381  8FD0
1382  8FD0              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1383  8FD0
1384  8FD0 CD 03 9F     	call Situa_en_contador_general_de_mov_masticados
1385  8FD3
1386  8FD3              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1387  8FD3              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1388  8FD3
1389  8FD3 ED 4B C1 8B  	ld bc,(Contador_de_mov_masticados)
1390  8FD7
1391  8FD7 71           	ld (hl),c
1392  8FD8 23           	inc hl
1393  8FD9 70           	ld (hl),b
1394  8FDA
1395  8FDA C9           	ret
1396  8FDB
1397  8FDB              ; -----------------------------------------------------------------------------------
1398  8FDB              ;
1399  8FDB              ;	28/12/23
1400  8FDB              ;
1401  8FDB              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1402  8FDB              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1403  8FDB
1404  8FDB              Guarda_movimiento_masticado
1405  8FDB
1406  8FDB ED 73 05 8C  	ld (Stack),sp
1407  8FDF ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1408  8FE3
1409  8FE3 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1410  8FE5 FD E5            push iy 												; Pushea Puntero_objeto.
1411  8FE7
1412  8FE7 ED 7B 05 8C      ld sp,(Stack)
1413  8FEB
1414  8FEB 2A C1 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1415  8FEE 23           	inc hl
1416  8FEF 22 C1 8B     	ld (Contador_de_mov_masticados),hl
1417  8FF2
1418  8FF2 CD F6 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1419  8FF5              ;															; _ el (Contador_de_mov_masticados).
1420  8FF5 C9               ret
1421  8FF6
1422  8FF6              ; --------------------------------------------------------------------------------------------------------------
1423  8FF6              ;
1424  8FF6              ;	12/1/24
1425  8FF6              ;
1426  8FF6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1427  8FF6
1428  8FF6              Actualiza_Puntero_de_almacen_de_mov_masticados
1429  8FF6
1430  8FF6 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1431  8FF9 01 04 00     	ld bc,4
1432  8FFC A7           	and a
1433  8FFD ED 4A        	adc hl,bc
1434  8FFF 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1435  9002 C9           	ret
1436  9003
1437  9003              ; --------------------------------------------------------------------------------------------------------------
1438  9003              ;
1439  9003              ;	24/03/24
1440  9003              ;
1441  9003              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1442  9003              ;
1443  9003              ;	IX contiene el puntero de impresión.
1444  9003              ;	DE contiene (Puntero_objeto).
1445  9003
1446  9003
1447  9003              Cargamos_registros_con_mov_masticado
1448  9003
1449  9003 ED 73 05 8C  	ld (Stack),sp
1450  9007 ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1451  900B
1452  900B D1           	pop de 															; DE contiene Puntero_objeto
1453  900C DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1454  900E
1455  900E ED 73 BF 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1456  9012 ED 7B 05 8C  	ld sp,(Stack)
1457  9016
1458  9016 7B           	ld a,e
1459  9017 82           	add d															; Comprueba si ya no hay datos en el almacén.
1460  9018
1461  9018 CC B1 93     	call z,Reinicia_entidad_maliciosa
1462  901B
1463  901B C9           	ret
1464  901C
1465  901C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1466  901C              ;
1467  901C              ;	22/7/24
1468  901C
1469  901C              Cargamos_registros_con_explosion
1470  901C
1471  901C
1472  901C 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1473  901F CD BB 90     	call Extrae_address
1474  9022
1475  9022 5D           	ld e,l
1476  9023 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1477  9024
1478  9024 DD 2A BD 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1479  9028
1480  9028 C9           	ret
1481  9029
1482  9029
1483  9029              Cargamos_registros_con_explosion_Amadeus
1484  9029
1485  9029 2A 74 89     	ld hl,(Pamm_Amadeus)
1486  902C CD BB 90     	call Extrae_address
1487  902F
1488  902F 5D           	ld e,l
1489  9030 54           	ld d,h
1490  9031
1491  9031 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1492  9035
1493  9035 C9           	ret
1494  9036
1495  9036              ; --------------------------------------------------------------------------------------------------------------
1496  9036              ;
1497  9036              ;	17/06/24
1498  9036              ;
1499  9036              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1500  9036              ;
1501  9036              ;	IX contiene el puntero de impresión.
1502  9036              ;	DE contiene (Puntero_objeto).
1503  9036
1504  9036
1505  9036              Cargamos_registros_con_mov_masticado_Amadeus
1506  9036
1507  9036 ED 73 05 8C  	ld (Stack),sp
1508  903A ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1509  903E D1           	pop de 															; DE contiene Puntero_objeto
1510  903F DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1511  9041 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1512  9045 ED 7B 05 8C  	ld sp,(Stack)
1513  9049 C9           	ret
1514  904A
1515  904A              ; ---------------------------------------------------------------------------------------------------------------------
1516  904A              ;
1517  904A              ;	18/6/24
1518  904A              ;
1519  904A              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1520  904A
1521  904A              Genera_datos_de_impresion_Amadeus
1522  904A
1523  904A 3A 71 89     	ld a,(Impacto_Amadeus)
1524  904D A7           	and a
1525  904E 20 03        	jr nz,1F
1526  9050
1527  9050              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1528  9050              ; _apuntando a la correspondiente explosión.
1529  9050
1530  9050 CD 36 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1531  9053
1532  9053 DD 7D        1 ld a,ixl
1533  9055 E6 1F        	and $1f
1534  9057 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1535  905A
1536  905A 2A 27 8C     	ld hl,(Scanlines_album_SP)
1537  905D E5           	push hl
1538  905E
1539  905E 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1540  9061 22 27 8C     	ld (Scanlines_album_SP),hl
1541  9064
1542  9064 CD 06 95     	call Genera_datos_de_impresion
1543  9067
1544  9067 E1           	pop hl
1545  9068 22 27 8C     	ld (Scanlines_album_SP),hl
1546  906B
1547  906B C9           	ret
1548  906C
1549  906C              ; ---------------------------------------------------------------------------------------------------------------------
1550  906C              ;
1551  906C              ;	13/03/24
1552  906C              ;
1553  906C              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1554  906C
1555  906C              Inicia_albumes_de_lineas
1556  906C
1557  906C 21 00 80     	ld hl,Scanlines_album
1558  906F 22 09 8C     	ld (Album_de_pintado),hl
1559  9072 22 27 8C     	ld (Scanlines_album_SP),hl
1560  9075
1561  9075 21 1A 81     	ld hl,Scanlines_album_2
1562  9078 22 0B 8C     	ld (Album_de_borrado),hl
1563  907B
1564  907B C9           	ret
1565  907C
1566  907C              Inicia_albumes_de_lineas_Amadeus
1567  907C
1568  907C 21 34 82     	ld hl,Amadeus_scanlines_album
1569  907F 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
1570  9082 21 58 82     	ld hl,Amadeus_scanlines_album_2
1571  9085 22 0F 8C     	ld (Album_de_borrado_Amadeus),hl
1572  9088
1573  9088 C9           	ret
1574  9089
1575  9089              Inicia_albumes_de_disparos
1576  9089
1577  9089 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1578  908C 22 11 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1579  908F 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1580  9092 22 13 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1581  9095
1582  9095 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1583  9098 22 15 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1584  909B 22 19 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1585  909E
1586  909E 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1587  90A1 22 17 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1588  90A4
1589  90A4 C9           	ret
1590  90A5
1591  90A5              ; ---------------------------------------------------------------------------------------------------------------------
1592  90A5              ;
1593  90A5              ; 8/1/23
1594  90A5              ;
1595  90A5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1596  90A5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1597  90A5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1598  90A5
1599  90A5              ; Destruye HL y DE !!!!!
1600  90A5
1601  90A5              Inicia_punteros_de_cajas
1602  90A5
1603  90A5 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1604  90A8 CD BB 90         call Extrae_address
1605  90AB 22 F8 8B         ld (Puntero_store_caja),hl
1606  90AE 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1607  90B1 22 FC 8B     	ld (Indice_restore_caja),hl
1608  90B4 CD BB 90     	call Extrae_address
1609  90B7 22 FA 8B     	ld (Puntero_restore_caja),hl
1610  90BA C9               ret
1611  90BB
1612  90BB              ; *************************************************************************************************************************************************************
1613  90BB
1614  90BB              ;
1615  90BB              ; 20/10/22
1616  90BB              ;
1617  90BB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1618  90BB              ;
1619  90BB              ; Destruye el puntero y DE !!!!!
1620  90BB
1621  90BB 5E           Extrae_address ld e,(hl)
1622  90BC 23           	inc hl
1623  90BD 56           	ld d,(hl)
1624  90BE 2B           	dec hl
1625  90BF EB           	ex de,hl
1626  90C0 C9           	ret
1627  90C1
1628  90C1              ; *************************************************************************************************************************************************************
1629  90C1              ;
1630  90C1              ;	20/1/24
1631  90C1              ;
1632  90C1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1633  90C1              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1634  90C1              ;
1635  90C1              ;   Destruye HL y BC !!!!!,
1636  90C1              ;
1637  90C1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1638  90C1              ;					"0" ..... Izquierda.
1639  90C1
1640  90C1              Inicia_Puntero_objeto
1641  90C1
1642  90C1 3A D7 8B     	ld a,(Cuad_objeto)
1643  90C4 E6 01        	and 1
1644  90C6 F5           	push af
1645  90C7 CC E3 90     	call z,Inicia_puntero_objeto_izq
1646  90CA F1           	pop af
1647  90CB C8           	ret z
1648  90CC CD D0 90     	call Inicia_puntero_objeto_der
1649  90CF C9           	ret
1650  90D0
1651  90D0              ; Arrancamos desde la parte izquierda de la pantalla.
1652  90D0              ; Iniciamos (Indice_Sprite_der).
1653  90D0
1654  90D0 2A CD 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1655  90D3 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
1656  90D6 CD BB 90     	call Extrae_address
1657  90D9 22 CA 8B     	ld (Puntero_objeto),hl
1658  90DC
1659  90DC 2A CF 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1660  90DF 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1661  90E2 C9           	ret
1662  90E3
1663  90E3              ; Arrancamos desde la parte derecha de la pantalla.
1664  90E3              ; Iniciamos (Indice_Sprite_izq).
1665  90E3
1666  90E3 2A CF 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1667  90E6 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1668  90E9 CD BB 90     	call Extrae_address
1669  90EC 22 CA 8B     	ld (Puntero_objeto),hl
1670  90EF
1671  90EF 2A CD 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1672  90F2 22 D1 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1673  90F5 C9           	ret
1674  90F6
1675  90F6              ; **************************************************************************************************
1676  90F6              ;
1677  90F6              ;	06/07/24
1678  90F6              ;
1679  90F6              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1680  90F6
1681  90F6              Restore_entidad
1682  90F6
1683  90F6 2A F8 8B     	ld hl,(Puntero_store_caja)
1684  90F9 7E           	ld a,(hl)
1685  90FA A7           	and a
1686  90FB CC 09 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1687  90FE 28 F6        	jr z,Restore_entidad
1688  9100
1689  9100 11 B8 8B     	ld de,Bandeja_DRAW
1690  9103 01 0C 00     	ld bc,12
1691  9106 ED B0        	ldir
1692  9108 C9           	ret
1693  9109
1694  9109              ; **************************************************************************************************
1695  9109              ;
1696  9109              ;	08/05/23
1697  9109              ;
1698  9109              ;	Incrementamos los dos punteros de entidades. (+1).
1699  9109
1700  9109              Incrementa_punteros_de_cajas
1701  9109
1702  9109 2A FA 8B     	ld hl,(Puntero_restore_caja)
1703  910C 22 F8 8B     	ld (Puntero_store_caja),hl
1704  910F 2A FC 8B     	ld hl,(Indice_restore_caja)
1705  9112 23           	inc hl
1706  9113 23           	inc hl
1707  9114 22 FC 8B     	ld (Indice_restore_caja),hl
1708  9117 CD BB 90         call Extrae_address
1709  911A 22 FA 8B         ld (Puntero_restore_caja),hl
1710  911D C9               ret
1711  911E
1712  911E              ; -----------------------------------------------------------
1713  911E
1714  911E              ; Teclado.
1715  911E
1716  911E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1717  9120 DB FE        	in a,($fe)
1718  9122 E6 01        	and $01
1719  9124 28 02        	jr z,1f
1720  9126 18 F6        	jr Pulsa_ENTER
1721  9128 C9           1 ret
1722  9129
1723  9129              ; **************************************************************************************************
1724  9129              ;
1725  9129              ; Temporización.
1726  9129
1727  9129              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1728  9129              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1729  9129              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1730  9129              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1731  9129
1732  9129              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1733  9129              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1734  9129              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1735  9129
1736  9129              ; A partir de $4f61 no hace falta DELAY.
1737  9129
1738  9129              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1739  9129
1740  9129              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1741  9129              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1742  9129              ;	LD A,B
1743  9129              ;	AND A
1744  9129              ;	JR NZ,wait
1745  9129              ;	RET
1746  9129
1747  9129              ; ---------------------------------------------------------------------------------------------------------------
1748  9129              ;
1749  9129              ;	13/07/24
1750  9129              ;
1751  9129
1752  9129              Inicia_Shield
1753  9129
1754  9129 21 51 8C     	ld hl,Datos_Shield
1755  912C 22 55 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1756  912F
1757  912F 7E           	ld a,(hl)
1758  9130 32 58 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1759  9133
1760  9133 3E 01        	ld a,1
1761  9135 32 59 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1762  9138
1763  9138 C9           	ret
1764  9139
1765  9139              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1766  9139              ;
1767  9139              ;	4/6/24
1768  9139              ;
1769  9139              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1770  9139              ;
1771  9139              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1772  9139              ;
1773  9139
1774  9139              Actualiza_pantalla
1775  9139
1776  9139 3E 02        	ld a,2
1777  913B D3 FE        	out ($fe),a
1778  913D
1779  913D 3A 2D 8C     	ld a,(Ctrl_3)
1780  9140 CB 57        	bit 2,a
1781  9142 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1782  9144
1783  9144              Borrando_entidades
1784  9144
1785  9144 2A 27 8C     	ld hl,(Scanlines_album_SP)
1786  9147 CD BB 90     	call Extrae_address
1787  914A 24           	inc h
1788  914B 25           	dec h
1789  914C 28 05        	jr z,Pintando_entidades
1790  914E CD FF 95     	call Pinta_Sprites
1791  9151 18 F1        	jr Borrando_entidades
1792  9153
1793  9153              Pintando_entidades
1794  9153
1795  9153 2A 29 8C     	ld hl,(India_SP)
1796  9156 2C           	inc l
1797  9157 CD BB 90     	call Extrae_address
1798  915A 24           	inc h
1799  915B 25           	dec h
1800  915C 28 0E        	jr z,Ejecuta_escudo
1801  915E 1C           	inc e
1802  915F 1C           	inc e
1803  9160 ED 53 29 8C  	ld (India_SP),de
1804  9164 CD BB 90     	call Extrae_address
1805  9167 CD FF 95     	call Pinta_Sprites
1806  916A 18 E7        	jr Pintando_entidades
1807  916C
1808  916C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1809  916C
1810  916C              Ejecuta_escudo
1811  916C
1812  916C 3A 57 8C     	ld a,(Shield)
1813  916F A7           	and a
1814  9170 20 2F        	jr nz,Aplica_Shield
1815  9172
1816  9172              Borrando_Amadeus
1817  9172
1818  9172 21 2D 8C     	ld hl,Ctrl_3
1819  9175 CB 6E        	bit 5,(hl)
1820  9177 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1821  9179
1822  9179 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1823  917C CD BB 90     	call Extrae_address
1824  917F 24           	inc h
1825  9180 25           	dec h
1826  9181 28 03        	jr z,Pintando_Amadeus
1827  9183 CD FF 95     	call Pinta_Sprites
1828  9186
1829  9186              Pintando_Amadeus
1830  9186
1831  9186 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1832  9189 CD BB 90     	call Extrae_address
1833  918C 24           	inc h
1834  918D 25           	dec h
1835  918E 28 03        	jr z,1F
1836  9190 CD FF 95     	call Pinta_Sprites
1837  9193
1838  9193              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1839  9193
1840  9193 21 2D 8C     1 ld hl,Ctrl_3
1841  9196 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1842  9198 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1843  919A CB AE        	res 5,(hl)
1844  919C
1845  919C 3E 01        	ld a,1												; Borde azul.
1846  919E D3 FE        	out ($fe),a
1847  91A0
1848  91A0 C9           	ret
1849  91A1
1850  91A1              Aplica_Shield
1851  91A1
1852  91A1              ;	Bit 1 "1" (Shield_3) Sólo borra.
1853  91A1              ;		  "0"     ""     Borra/Pinta.
1854  91A1              ;	Bit 2    ""  RET.	 No borra, no pinta.
1855  91A1
1856  91A1 21 59 8C     	ld hl,Shield_3
1857  91A4
1858  91A4 CB 5E        	bit 3,(hl)
1859  91A6 20 DE        	jr nz,Pintando_Amadeus
1860  91A8
1861  91A8 CB 56        	bit 2,(hl)
1862  91AA 20 E7        	jr nz,1B
1863  91AC
1864  91AC CB 4E        	bit 1,(hl)
1865  91AE C4 B5 91     	call nz,Borra_Amadeus_shield
1866  91B1
1867  91B1 28 BF        	jr z,Borrando_Amadeus
1868  91B3 18 DE        	jr 1B
1869  91B5
1870  91B5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1871  91B5
1872  91B5              Borra_Amadeus_shield
1873  91B5
1874  91B5 3A 2D 8C     	ld a,(Ctrl_3)
1875  91B8 CB 6F        	bit 5,a
1876  91BA 28 08        	jr z,1F
1877  91BC
1878  91BC 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1879  91BF CD BB 90     	call Extrae_address
1880  91C2 18 06        	jr 2F
1881  91C4
1882  91C4 2A 0D 8C     1 ld hl,(Album_de_pintado_Amadeus)
1883  91C7 CD BB 90     	call Extrae_address
1884  91CA
1885  91CA CD FF 95     2 call Pinta_Sprites
1886  91CD
1887  91CD AF           	xor a
1888  91CE 3C           	inc a											; Asegura NZ en la salida de la rutina.
1889  91CF
1890  91CF C9           	ret
1891  91D0
1892  91D0              Pinta_Amadeus_shield
1893  91D0
1894  91D0 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1895  91D3 CD BB 90     	call Extrae_address
1896  91D6 CD FF 95     	call Pinta_Sprites
1897  91D9
1898  91D9 AF           	xor a
1899  91DA 3C           	inc a											; Asegura NZ en la salida de la rutina.
1900  91DB
1901  91DB C9           	ret
1902  91DC
1903  91DC              Borra_Pinta_Amadeus_shield
1904  91DC
1905  91DC CD B5 91     	call Borra_Amadeus_shield
1906  91DF CD D0 91     	call Pinta_Amadeus_shield
1907  91E2 C9           	ret
1908  91E3
1909  91E3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1910  91E3              ;
1911  91E3              ;	19/6/24
1912  91E3              ;
1913  91E3
1914  91E3              Teclado
1915  91E3
1916  91E3              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1917  91E3
1918  91E3 3E F7        	ld a,$f7												; "5" para disparar.
1919  91E5 DB FE        	in a,($fe)
1920  91E7 E6 10        	and $10
1921  91E9
1922  91E9 CC 99 A2     	call z,Genera_disparo_Amadeus
1923  91EC
1924  91EC 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1925  91EE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1926  91F0 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1927  91F2 CC 6C 9D         call z,Amadeus_a_izquierda
1928  91F5
1929  91F5 3E F7        	ld a,$f7
1930  91F7 DB FE        	in a,($fe)
1931  91F9 E6 01        	and $01
1932  91FB C8           	ret z
1933  91FC
1934  91FC 3E F7        	ld a,$f7
1935  91FE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1936  9200 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1937  9202 CC 84 9D     	call z,Amadeus_a_derecha
1938  9205
1939  9205 C9           	ret
1940  9206
1941  9206              ; ------------------------------------------------------------------------------------------------------------------------
1942  9206              ;
1943  9206              ;	06/07/24
1944  9206              ;
1945  9206
1946  9206              Genera_explosion
1947  9206
1948  9206 21 3F 8C     	ld hl,Clock_explosion
1949  9209 35           	dec (hl)
1950  920A 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1951  920C
1952  920C              Borra_entidad_colisionada
1953  920C
1954  920C CD 13 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1955  920F CD 1C 90     	call Cargamos_registros_con_explosion
1956  9212 CD 06 95     	call Genera_datos_de_impresion
1957  9215
1958  9215 AF           	xor a
1959  9216 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1960  9217
1961  9217 C9           	ret
1962  9218
1963  9218              Siguiente_frame_explosion
1964  9218
1965  9218 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1966  921A
1967  921A              ; Avanza Frame de explosión.
1968  921A
1969  921A 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1970  921D 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1971  9220
1972  9220 79           	ld a,c
1973  9221 95           	sub l
1974  9222 20 0B        	jr nz,1F
1975  9224
1976  9224              ; Fín de la entidad !!!!!!!!!!!!!
1977  9224
1978  9224 21 FF 8B     	ld hl,Numero_parcial_de_entidades
1979  9227 35           	dec (hl)
1980  9228 23           	inc hl
1981  9229 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1982  922A
1983  922A CD 86 93     	call Limpiamos_bandeja_DRAW
1984  922D 18 DD        	jr Borra_entidad_colisionada
1985  922F
1986  922F 23           1 inc hl
1987  9230 23           	inc hl
1988  9231 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1989  9234 18 D6        	jr Borra_entidad_colisionada
1990  9236
1991  9236              ; ----- ----- ----- ----- -----
1992  9236
1993  9236              Genera_explosion_Amadeus
1994  9236
1995  9236 21 40 8C     	ld hl,Clock_explosion_Amadeus
1996  9239 35           	dec (hl)
1997  923A 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
1998  923C
1999  923C              Borra_Amadeus_impactado
2000  923C
2001  923C CD 78 8E     	call Change_Amadeus
2002  923F CD 29 90     	call Cargamos_registros_con_explosion_Amadeus
2003  9242 CD 4A 90     	call Genera_datos_de_impresion_Amadeus
2004  9245
2005  9245 21 2D 8C     	ld hl,Ctrl_3
2006  9248 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2007  924A
2008  924A AF           	xor a
2009  924B 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2010  924C
2011  924C C9           	ret
2012  924D
2013  924D              Siguiente_frame_explosion_Amadeus
2014  924D
2015  924D 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2016  924F
2017  924F              ; Avanza Frame de explosión.
2018  924F
2019  924F 2A 74 89     	ld hl,(Pamm_Amadeus)
2020  9252 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2021  9255
2022  9255 79           	ld a,c
2023  9256 95           	sub l
2024  9257 20 0B        	jr nz,1F
2025  9259
2026  9259              ; Fín de Amadeus !!!!!!!!!!!!!
2027  9259              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2028  9259
2029  9259 AF           	xor a
2030  925A 32 71 89     	ld (Impacto_Amadeus),a
2031  925D 21 2D 8C     	ld hl,Ctrl_3
2032  9260 CB F6        	set 6,(hl)
2033  9262
2034  9262 18 D8        	jr Borra_Amadeus_impactado
2035  9264
2036  9264 23           1 inc hl
2037  9265 23           	inc hl
2038  9266 22 74 89     	ld (Pamm_Amadeus),hl
2039  9269 18 D1        	jr Borra_Amadeus_impactado
2040  926B
2041  926B              ; ---------------------------------------------------------------
2042  926B
2043  926B              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 926B              ; ******************************************************************************************************************************************************************************************
   2+ 926B              ;
   3+ 926B              ;   21/04/24
   4+ 926B              ;
   5+ 926B              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 926B              ;   (XOR) bit a bit.
   7+ 926B              ;
   8+ 926B              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 926B
  10+ 926B              Derivando_RND
  11+ 926B
  12+ 926B 21 F6 88         ld hl,Numeros_aleatorios
  13+ 926E
  14+ 926E ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9270 C5               push bc
  16+ 9271              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9271 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9274              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9274
  20+ 9274 A7           6 and a                                 ; Carry a "0".
  21+ 9275 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9277 30 02            jr nc,1F
  23+ 9279
  24+ 9279 CB C1            set 0,c
  25+ 927B
  26+ 927B 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 927C E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 927E 5F               ld e,a
  29+ 927F
  30+ 927F 7A               ld a,d
  31+ 9280 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9282 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9284
  34+ 9284 CB 3F            srl a
  35+ 9286
  36+ 9286 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9287
  38+ 9287 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9288 28 04            jr z,4F
  40+ 928A
  41+ 928A CB FF            set 7,a
  42+ 928C 18 02            jr 5F
  43+ 928E
  44+ 928E CB BF        4 res 7,a
  45+ 9290
  46+ 9290 CB 21        5 sla c
  47+ 9292 10 E0            djnz 6B
  48+ 9294
  49+ 9294 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9295
  51+ 9295 77               ld (hl),a
  52+ 9296 23               inc hl
  53+ 9297 C1               pop bc
  54+ 9298 10 D4            djnz 3B
  55+ 929A
  56+ 929A C9               ret
  57+ 929B
  58+ 929B
  59+ 929B
# file closed: RND_Derivando.asm
2044  929B              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 929B              ;---------------------------------------------------------------------------------------------------------------
   2+ 929B              ;
   3+ 929B              ;   8/3/24
   4+ 929B              ;
   5+ 929B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 929B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 929B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 929B              ;	_ de la 1ª entidad del Nivel.
   9+ 929B              ;
  10+ 929B              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 929B
  12+ 929B              ;	MODIFICA: HL,DE y A.
  13+ 929B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 929B
  15+ 929B              Inicializa_Nivel
  16+ 929B
  17+ 929B 2A 4D 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 929E CD BB 90     	call Extrae_address
  19+ 92A1 7E           	ld a,(hl)
  20+ 92A2 32 FE 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92A5 23           	inc hl
  22+ 92A6 CD B3 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92A9 22 4F 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92AC CD BC 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92AF
  26+ 92AF CD CD 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92B2 C9           	ret
  28+ 92B3
  29+ 92B3              ; ----------------------
  30+ 92B3
  31+ 92B3 11 DD 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92B6 01 04 00     	ld bc,4
  33+ 92B9 ED B0        	ldir
  34+ 92BB C9           	ret
  35+ 92BC
  36+ 92BC 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92BD CD 57 94         call Calcula_salto_en_BC
  38+ 92C0 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92C3 A7               and a
  40+ 92C4 ED 4A            adc hl,bc
  41+ 92C6 CD BB 90         call Extrae_address
  42+ 92C9 22 E9 8B         ld (Puntero_indice_mov),hl
  43+ 92CC C9               ret
  44+ 92CD
  45+ 92CD 3A B8 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92D0 CD 57 94     	call Calcula_salto_en_BC
  47+ 92D3 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92D6 A7               and a
  49+ 92D7 ED 4A            adc hl,bc
  50+ 92D9 CD BB 90         call Extrae_address
  51+ 92DC 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92DF C9           	ret
  53+ 92E0
  54+ 92E0              ;---------------------------------------------------------------------------------------------------------------
  55+ 92E0              ;
  56+ 92E0              ;   5/1/24
  57+ 92E0              ;
  58+ 92E0              ;	Destruye A,BC,HL,DE
  59+ 92E0
  60+ 92E0              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92E0              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92E0
  63+ 92E0              Inicia_Entidades
  64+ 92E0
  65+ 92E0              ; Preparamos los punteros de las cajas de entidades:
  66+ 92E0
  67+ 92E0 CD A5 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92E3              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92E3 CD 9F 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92E6
  71+ 92E6 2A 4F 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92E9
  73+ 92E9 22 4F 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92EC
  75+ 92EC CD 05 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92EF
  77+ 92EF 2A 4F 8C     	ld hl,(Datos_de_nivel)
  78+ 92F2
  79+ 92F2              ; En este punto:
  80+ 92F2              ;
  81+ 92F2              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92F2              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92F2
  84+ 92F2 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92F3
  86+ 92F3 7E           	ld a,(hl)
  87+ 92F4 CD 71 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92F7
  89+ 92F7 CD 69 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92FA
  91+ 92FA              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92FA
  93+ 92FA CD 27 94     	call Busca_mov_masticados_segun_tipo
  94+ 92FD
  95+ 92FD A7           	and a
  96+ 92FE 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9300
  98+ 9300              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9300
 100+ 9300              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9300              ;	_ de este tipo de entidad.
 102+ 9300
 103+ 9300 CD 03 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 9303 CD 10 9F     	call Transfiere_datos_de_contadores
 105+ 9306
 106+ 9306 18 06        	jr 4F
 107+ 9308
 108+ 9308 CD AF 8F     3 call Construye_movimientos_masticados_entidad
 109+ 930B
 110+ 930B              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 930B              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 930B              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 930B              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 930B              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 930B
 116+ 930B CD E5 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 930E              ;																; _ Mov_masticados ya generados.
 118+ 930E
 119+ 930E CD 03 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9311
 121+ 9311 DD E5        	push ix
 122+ 9313 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9314
 124+ 9314 D5           	push de
 125+ 9315 CD DA 94     	call Genera_coordenadas
 126+ 9318
 127+ 9318 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 128+ 931C CD 13 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 931F D1           	pop de
 130+ 9320
 131+ 9320 CD 06 95     	call Genera_datos_de_impresion
 132+ 9323              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9323              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9323              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9323              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9323
 137+ 9323 CD A9 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9326
 139+ 9326              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9326
 141+ 9326 ED 5B F8 8B  	ld de,(Puntero_store_caja)
 142+ 932A CD 96 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 932D
 144+ 932D CD 86 93     	call Limpiamos_bandeja_DRAW
 145+ 9330 CD 09 91     	call Incrementa_punteros_de_cajas
 146+ 9333
 147+ 9333              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9333              ; _ entidad del Nivel.
 149+ 9333
 150+ 9333 3A 2E 8C     	ld a,(Ctrl_4)
 151+ 9336 E6 F0        	and $f0
 152+ 9338 32 2E 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 933B
 154+ 933B              ; Siguiente entidad del Nivel.
 155+ 933B
 156+ 933B 2A 4F 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 933E 23           	inc hl 														; _ entidad del Nivel.
 158+ 933F
 159+ 933F C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9340
 161+ 9340 10 A7        	djnz 2B
 162+ 9342
 163+ 9342 C9           	ret
 164+ 9343
 165+ 9343              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9343              ;
 167+ 9343              ;	27/5/24
 168+ 9343              ;
 169+ 9343              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9343              ;
 171+ 9343
 172+ 9343              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9343              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9343
 175+ 9343 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9346 CD 69 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9349
 178+ 9349
 179+ 9349              Construye_movimientos_masticados_Amadeus
 180+ 9349
 181+ 9349 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 934C CD F6 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 934F              ;															; _ el (Contador_de_mov_masticados).
 184+ 934F CD C1 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9352              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9352
 187+ 9352              ; Generamos movimientos masticados de Amadeus.
 188+ 9352
 189+ 9352 06 79        	ld b,121												; $0079, 121d.
 190+ 9354
 191+ 9354 C5           1 push bc
 192+ 9355 CD 22 97     	call Draw
 193+ 9358 CD DB 8F     	call Guarda_movimiento_masticado
 194+ 935B
 195+ 935B CD 96 9A     	call Mov_right
 196+ 935E CD 96 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9361
 198+ 9361 C1           	pop bc
 199+ 9362 10 F0        	djnz 1B
 200+ 9364
 201+ 9364              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9364
 203+ 9364              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9364              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9364
 206+ 9364 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9367 01 08 00     	ld bc,8
 208+ 936A A7           	and a
 209+ 936B ED 42        	sbc hl,bc
 210+ 936D 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9370
 212+ 9370 C9           	ret
 213+ 9371
 214+ 9371              ; ---------------------------------------------------------------------
 215+ 9371              ;
 216+ 9371              ;	10/02/24
 217+ 9371              ;
 218+ 9371              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9371              ;
 220+ 9371              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9371
 222+ 9371              Definicion_segun_tipo
 223+ 9371
 224+ 9371 CD 57 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9374 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9377 CD 5F 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 937A C9           	ret
 228+ 937B
 229+ 937B              ; ---------------------------------------------------------------------
 230+ 937B              ;
 231+ 937B              ;	6/7/24
 232+ 937B
 233+ 937B
 234+ 937B              Store_Restore_cajas
 235+ 937B
 236+ 937B ED 5B F8 8B  	ld de,(Puntero_store_caja)
 237+ 937F CD 96 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9382 CD 09 91     	call Incrementa_punteros_de_cajas
 239+ 9385 C9           	ret
 240+ 9386
 241+ 9386              ; ---------------------------------------------------------------------
 242+ 9386              ;
 243+ 9386              ;	23/6/24
 244+ 9386              ;
 245+ 9386              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9386              ;
 247+ 9386              ;	MODIFY: HL
 248+ 9386
 249+ 9386              Limpiamos_bandeja_DRAW
 250+ 9386
 251+ 9386 ED 73 05 8C  	ld (Stack),sp
 252+ 938A 31 DD 8B     	ld sp,Vel_left
 253+ 938D
 254+ 938D AF           	xor a
 255+ 938E 67           	ld h,a
 256+ 938F 6F           	ld l,a
 257+ 9390
 258+ 9390 E5           	push hl
 259+ 9391 E5           	push hl
 260+ 9392 E5           	push hl
 261+ 9393 E5           	push hl
 262+ 9394 E5           	push hl
 263+ 9395 E5           	push hl
 264+ 9396 E5           	push hl
 265+ 9397 E5           	push hl
 266+ 9398 E5           	push hl
 267+ 9399 E5           	push hl
 268+ 939A E5           	push hl
 269+ 939B E5           	push hl
 270+ 939C E5           	push hl
 271+ 939D E5           	push hl
 272+ 939E E5           	push hl
 273+ 939F E5           	push hl
 274+ 93A0 E5           	push hl
 275+ 93A1 E5           	push hl
 276+ 93A2
 277+ 93A2 33           	inc sp
 278+ 93A3
 279+ 93A3 E5           	push hl
 280+ 93A4 ED 7B 05 8C  	ld sp,(Stack)
 281+ 93A8
 282+ 93A8 C9           	ret
 283+ 93A9
 284+ 93A9              ; ---------------------------------------------------------------------
 285+ 93A9              ;
 286+ 93A9              ;	24/03/24
 287+ 93A9
 288+ 93A9 2A C1 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93AC 2B           	dec hl
 290+ 93AD 22 C1 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93B0 C9           	ret
 292+ 93B1
 293+ 93B1              ; ---------------------------------------------------------------------
 294+ 93B1              ;
 295+ 93B1              ;	8/5/24
 296+ 93B1
 297+ 93B1              Reinicia_entidad_maliciosa
 298+ 93B1
 299+ 93B1              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93B1
 301+ 93B1 CD 03 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93B4 CD 10 9F     	call Transfiere_datos_de_contadores
 303+ 93B7
 304+ 93B7              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93B7
 306+ 93B7 3A B8 8B     	ld a,(Tipo)
 307+ 93BA CD 71 93     	call Definicion_segun_tipo
 308+ 93BD
 309+ 93BD E5           	push hl
 310+ 93BE DD E1        	pop ix
 311+ 93C0
 312+ 93C0 DD 6E 0B     	ld l,(ix+11)
 313+ 93C3 DD 66 0C     	ld h,(ix+12)
 314+ 93C6
 315+ 93C6 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93C9
 317+ 93C9 CD 03 90     	call Cargamos_registros_con_mov_masticado
 318+ 93CC
 319+ 93CC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93CC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93CC              ; Ejemplos.
 322+ 93CC
 323+ 93CC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93CC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93CC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93CC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93CC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93CC
 329+ 93CC 21 BB 8B     	ld hl,Contador_de_vueltas
 330+ 93CF CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93D1
 332+ 93D1 7E           	ld a,(hl)
 333+ 93D2 CB 2F        	sra a
 334+ 93D4 CB 2F        	sra a
 335+ 93D6
 336+ 93D6 32 C3 8B     	ld (Velocidad),a
 337+ 93D9
 338+ 93D9 3E 40        	ld a,$40
 339+ 93DB BE           	cp (hl)
 340+ 93DC C0           	ret nz
 341+ 93DD
 342+ 93DD              ; Límitador.
 343+ 93DD
 344+ 93DD              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93DD
 346+ 93DD CB 2E        	sra (hl)
 347+ 93DF 21 C3 8B     	ld hl,Velocidad
 348+ 93E2 CB 2E        	sra (hl)
 349+ 93E4
 350+ 93E4 C9           	ret
 351+ 93E5
 352+ 93E5              ; ---------------------------------------------------------------------
 353+ 93E5              ;
 354+ 93E5              ;	22/01/24
 355+ 93E5
 356+ 93E5 21 2E 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93E8 CB 46        	bit 0,(hl)
 358+ 93EA 20 0D        	jr nz,1F
 359+ 93EC CB 4E        	bit 1,(hl)
 360+ 93EE 20 0C        	jr nz,2F
 361+ 93F0 CB 56        	bit 2,(hl)
 362+ 93F2 20 0B        	jr nz,3F
 363+ 93F4 CB 5E        	bit 3,(hl)
 364+ 93F6 20 0A        	jr nz,4F
 365+ 93F8 C9           	ret
 366+ 93F9
 367+ 93F9 CB E6        1 set 4,(hl)
 368+ 93FB C9           	ret
 369+ 93FC CB EE        2 set 5,(hl)
 370+ 93FE C9           	ret
 371+ 93FF CB F6        3 set 6,(hl)
 372+ 9401 C9           	ret
 373+ 9402 CB FE        4 set 7,(hl)
 374+ 9404 C9           	ret
 375+ 9405
 376+ 9405              ; ---------------------------------------------------------------------
 377+ 9405              ;
 378+ 9405              ;	23/01/24
 379+ 9405              ;
 380+ 9405              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9405              ;
 382+ 9405              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9405              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9405              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9405              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9405
 387+ 9405              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9405
 389+ 9405 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9406 3D           	dec a
 391+ 9407 20 06        	jr nz,1F
 392+ 9409
 393+ 9409              ; --- Tipo_1
 394+ 9409
 395+ 9409 21 2E 8C     	ld hl,Ctrl_4
 396+ 940C CB C6        	set 0,(hl)
 397+ 940E C9           	ret
 398+ 940F
 399+ 940F 3D           1 dec a
 400+ 9410 20 06        	jr nz,2F
 401+ 9412
 402+ 9412              ; --- Tipo_2
 403+ 9412
 404+ 9412 21 2E 8C     	ld hl,Ctrl_4
 405+ 9415 CB CE        	set 1,(hl)
 406+ 9417 C9           	ret
 407+ 9418
 408+ 9418 3D           2 dec a
 409+ 9419 20 06        	jr nz,3F
 410+ 941B
 411+ 941B              ; --- Tipo_3
 412+ 941B
 413+ 941B 21 2E 8C     	ld hl,Ctrl_4
 414+ 941E CB D6        	set 2,(hl)
 415+ 9420 C9           	ret
 416+ 9421
 417+ 9421              ; --- Tipo_3
 418+ 9421
 419+ 9421 21 2E 8C     3 ld hl,Ctrl_4
 420+ 9424 CB D6        	set 2,(hl)
 421+ 9426 C9           	ret
 422+ 9427
 423+ 9427              ; ---------------------------------------------------------------------
 424+ 9427              ;
 425+ 9427              ;	22/01/24
 426+ 9427
 427+ 9427 21 2E 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 942A CB 46        	bit 0,(hl)
 429+ 942C 20 0E        	jr nz,1F
 430+ 942E
 431+ 942E CB 4E        	bit 1,(hl)
 432+ 9430 20 10        	jr nz,2F
 433+ 9432
 434+ 9432 CB 56        	bit 2,(hl)
 435+ 9434 20 12        	jr nz,3F
 436+ 9436
 437+ 9436 CB 5E        	bit 3,(hl)
 438+ 9438 20 14        	jr nz,4F
 439+ 943A 18 19        	jr 6F
 440+ 943C
 441+ 943C              ; Entidad_de_Tipo_1.
 442+ 943C
 443+ 943C CB 66        1 bit 4,(hl)
 444+ 943E 28 15        	jr z,6F
 445+ 9440 18 10        	jr 5F
 446+ 9442
 447+ 9442              ; Entidad_de_Tipo_2.
 448+ 9442
 449+ 9442 CB 6E        2 bit 5,(hl)
 450+ 9444 28 0F        	jr z,6F
 451+ 9446 18 0A        	jr 5F
 452+ 9448
 453+ 9448              ; Entidad_de_Tipo_3.
 454+ 9448
 455+ 9448 CB 76        3 bit 6,(hl)
 456+ 944A 28 09        	jr z,6F
 457+ 944C 18 04        	jr 5F
 458+ 944E
 459+ 944E              ; Entidad_de_Tipo_4.
 460+ 944E
 461+ 944E CB 7E        4 bit 7,(hl)
 462+ 9450 28 03        	jr z,6F
 463+ 9452
 464+ 9452              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9452
 466+ 9452 AF           5 xor a
 467+ 9453 3C           	inc a
 468+ 9454 C9           	ret
 469+ 9455
 470+ 9455              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9455
 472+ 9455 AF           6 xor a
 473+ 9456 C9           	ret
 474+ 9457
 475+ 9457              ;	------------------------------------------------------------------------------------
 476+ 9457              ;
 477+ 9457              ;	12/01/24
 478+ 9457              ;
 479+ 9457              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9457              ;
 481+ 9457              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9457              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9457
 484+ 9457 CB 27        Calcula_salto_en_BC sla a
 485+ 9459 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 945B 4F           	ld c,a
 487+ 945C 06 00        	ld b,0
 488+ 945E C9           	ret
 489+ 945F
 490+ 945F              ; ------------------------------------------------------------------
 491+ 945F              ;
 492+ 945F              ;	19/1/24
 493+ 945F              ;
 494+ 945F              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 945F              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 945F
 497+ 945F A7           Situa_en_datos_de_definicion and a
 498+ 9460 ED 4A        	adc hl,bc
 499+ 9462 CD BB 90     	call Extrae_address
 500+ 9465 22 03 8C         ld (Datos_de_entidad),hl
 501+ 9468 C9           	ret
 502+ 9469
 503+ 9469              ; ------------------------------------------------------------------
 504+ 9469
 505+ 9469              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9469              ; 	inc de
 507+ 9469              ; 	inc de
 508+ 9469              ; 	ex de,hl
 509+ 9469              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9469              ; 	ret
 511+ 9469
 512+ 9469              ; ----------------------------------------------------------------------------------------------------------
 513+ 9469              ;
 514+ 9469              ;	24/6/24
 515+ 9469              ;
 516+ 9469              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9469              ;	_ de entidad.
 518+ 9469              ;
 519+ 9469              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9469              ;
 521+ 9469              ;
 522+ 9469              ;	MODIFICA: HL,DE y BC
 523+ 9469
 524+ 9469
 525+ 9469              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9469
 527+ 9469 11 B8 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 946C 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 946D 12           	ld (de),a
 530+ 946E 23           	inc hl
 531+ 946F              ;
 532+ 946F 11 C6 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9472 01 02 00     	ld bc,2
 534+ 9475 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9477              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9477 11 BB 8B     	ld de,Contador_de_vueltas
 537+ 947A 7E           	ld a,(hl)
 538+ 947B 12           	ld (de),a
 539+ 947C 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 947D
 541+ 947D 11 CD 8B     	ld de,Indice_Sprite_der
 542+ 9480 01 04 00     	ld bc,4
 543+ 9483 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9485
 545+ 9485 11 D5 8B     	ld de,Posicion_inicio
 546+ 9488 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 948B ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 948D
 549+ 948D 11 BF 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9490 01 02 00     	ld bc,2
 551+ 9493 ED B0        	ldir
 552+ 9495
 553+ 9495 C9           	ret
 554+ 9496
 555+ 9496              ; ----------------------------------------------------------------------------------------------------------
 556+ 9496              ;
 557+ 9496              ;	1/8/24
 558+ 9496              ;
 559+ 9496
 560+ 9496              Parametros_de_bandeja_DRAW_a_caja
 561+ 9496
 562+ 9496 21 B8 8B     	ld hl,Bandeja_DRAW
 563+ 9499 01 0C 00     	ld bc,12
 564+ 949C ED B0        	ldir
 565+ 949E C9           	ret
 566+ 949F
 567+ 949F              ;---------------------------------------------------------------------------------------------------------------
 568+ 949F              ;
 569+ 949F              ;	5/1/24
 570+ 949F              ;
 571+ 949F              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 949F              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 949F              ;
 574+ 949F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 949F              ;
 576+ 949F              ;	(Numero_parcial_de_entidades)="7".
 577+ 949F              ;
 578+ 949F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 949F              ;
 580+ 949F              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 949F              ;
 582+ 949F              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 949F              ;	MODIFICA: A y B.
 584+ 949F              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 949F
 586+ 949F              Inicializa_Numero_parcial_de_entidades
 587+ 949F
 588+ 949F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 949F
 590+ 949F 3A FE 8B     	ld a,(Numero_de_entidades)
 591+ 94A2 A7           	and a
 592+ 94A3
 593+ 94A3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94A3              ;	jr z,$
 595+ 94A3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94A3
 597+ 94A3 20 03        	jr nz,3F
 598+ 94A5
 599+ 94A5              ; ---------- ---------- ----------
 600+ 94A5
 601+ 94A5              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94A5              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94A5
 604+ 94A5 CD 9B 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94A8
 606+ 94A8              ; ---------- ---------- ----------
 607+ 94A8
 608+ 94A8 3A FE 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94AB FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94AD 38 08        	jr c,1F
 611+ 94AF
 612+ 94AF              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94AF              ; Actualizamos variables.
 614+ 94AF
 615+ 94AF 3E 07        	ld a,7
 616+ 94B1 32 FF 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94B4 47           	ld b,a
 618+ 94B5 18 04        	jr 2F
 619+ 94B7
 620+ 94B7              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94B7              ; (Numero_de_entidades)="0".
 622+ 94B7
 623+ 94B7 32 FF 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94BA 47           	ld b,a
 625+ 94BB C9           2 ret
 626+ 94BC
# file closed: Rutinas_de_inicio_y_niveles.asm
2045  94BC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94BC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94BC              ;
   3+ 94BC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94BC              ;
   5+ 94BC              ; *****************************************************************************************************************************************************************************************
   6+ 94BC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94BC
   8+ 94BC 7C           calcula_tercio ld a,h
   9+ 94BD E6 18        	and $18
  10+ 94BF CB 2F        	sra a
  11+ 94C1 CB 2F        	sra a
  12+ 94C3 CB 2F        	sra a
  13+ 94C5 C9           	ret
  14+ 94C6
# file closed: calcula_tercio.asm
2046  94C6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C6              ;
   3+ 94C6              ;
   4+ 94C6              ;	CLS.
   5+ 94C6              ;
   6+ 94C6              ;	Limpia la pantalla y define sus atributos.
   7+ 94C6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C6              ;
   9+ 94C6              ;	COLORES: 0 ..... NEGRO
  10+ 94C6              ;    		 1 ..... AZUL
  11+ 94C6              ; 			 2 ..... ROJO
  12+ 94C6              ;			 3 ..... MAGENTA
  13+ 94C6              ; 			 4 ..... VERDE
  14+ 94C6              ; 			 5 ..... CIAN
  15+ 94C6              ;			 6 ..... AMARILLO
  16+ 94C6              ; 			 7 ..... BLANCO
  17+ 94C6              ;
  18+ 94C6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C6              ;
  20+ 94C6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C6
  22+ 94C6
  23+ 94C6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94C9 11 01 40     	LD DE,$4001
  25+ 94CC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94CF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D1 ED B0        	LDIR
  28+ 94D3 01 FF 02     	LD BC,767
  29+ 94D6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94D7 ED B0        	LDIR
  31+ 94D9 C9           	ret
  32+ 94DA
# file closed: Cls.asm
2047  94DA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94DA              ; ------------------------------------------------------------------------
   2+ 94DA              ;
   3+ 94DA              ;	30/1/24
   4+ 94DA              ;
   5+ 94DA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94DA              ;	Fila superior "0", Columna izquierda "0".
   7+ 94DA              ;
   8+ 94DA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94DA              ;
  10+ 94DA              ;	Modifica: A,BC y DE.
  11+ 94DA
  12+ 94DA 7D           Genera_coordenadas ld a,l
  13+ 94DB E6 1F        	and $1f
  14+ 94DD 32 B9 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94E0
  16+ 94E0 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94E1 FE 40        	cp $40
  18+ 94E3 38 1C        	jr c,4F
  19+ 94E5
  20+ 94E5 CD BC 94     	call calcula_tercio
  21+ 94E8 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94E9
  23+ 94E9 1E 00        	ld e,0
  24+ 94EB 7D           	ld a,l
  25+ 94EC E6 E0        	and $e0
  26+ 94EE 28 01        	jr z,1F
  27+ 94F0 04           	inc b
  28+ 94F1
  29+ 94F1 04           1 inc b
  30+ 94F2 05           	dec b
  31+ 94F3 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94F5              ;														; _ , salimos.
  33+ 94F5 1C           3 inc e
  34+ 94F6 D6 20        	sub 32
  35+ 94F8 20 FB        	jr nz,3B
  36+ 94FA 10 F5        	djnz 1B
  37+ 94FC
  38+ 94FC 7B           2 ld a,e
  39+ 94FD 32 BA 8B     	ld (Coordenada_y),a
  40+ 9500 C9           	ret
  41+ 9501
  42+ 9501 AF           4 xor a
  43+ 9502 32 BA 8B     	ld (Coordenada_y),a
  44+ 9505 C9           	ret
  45+ 9506
# file closed: Genera_coordenadas.asm
2048  9506              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9506              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9506              ;
   3+ 9506              ;	20/09/24
   4+ 9506              ;
   5+ 9506              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9506              ;   DE contiene Puntero_objeto.
   7+ 9506              ;   IX contiene el Puntero de impresión.
   8+ 9506
   9+ 9506              Genera_datos_de_impresion
  10+ 9506
  11+ 9506 ED 73 05 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 950A
  13+ 950A 31 BF 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 950D DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 950F
  16+ 950F 2A 27 8C         ld hl,(Scanlines_album_SP)
  17+ 9512
  18+ 9512 3E 05            ld a,5
  19+ 9514 85               add l
  20+ 9515 6F               ld l,a
  21+ 9516
  22+ 9516 F9               ld sp,hl
  23+ 9517 22 27 8C         ld (Scanlines_album_SP),hl
  24+ 951A
  25+ 951A 21 00 00         ld hl,0
  26+ 951D
  27+ 951D DD E5            push ix
  28+ 951F 3B               dec sp
  29+ 9520 ED 7A            adc hl,sp
  30+ 9522 D5               push de
  31+ 9523
  32+ 9523              ; Recuperamos SP.
  33+ 9523
  34+ 9523 ED 7B 05 8C      ld sp,(Stack)
  35+ 9527
  36+ 9527 E5               push hl
  37+ 9528 F1               pop af
  38+ 9529 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 952A
  40+ 952A              ; Tenemos el encabezado listo.
  41+ 952A              ; Preparamos registros para generar los scanlines.
  42+ 952A
  43+ 952A DD E5            push ix
  44+ 952C E1               pop hl                                          ; 1er scanline en HL.
  45+ 952D
  46+ 952D ED 5B 27 8C      ld de,(Scanlines_album_SP)
  47+ 9531
  48+ 9531              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9531              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9531
  51+ 9531 7C               ld a,h
  52+ 9532 FE 50            cp $50
  53+ 9534 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9536
  55+ 9536 20 05            jr nz,2F
  56+ 9538
  57+ 9538 7D               ld a,l
  58+ 9539 FE E0            cp $e0
  59+ 953B 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 953D
  61+ 953D 7D           2 ld a,l
  62+ 953E FE C0            cp $c0
  63+ 9540 D2 D6 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9543
  65+ 9543              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9543
  67+ 9543 CD D4 99         call NextScan
  68+ 9546 EB               ex de,hl
  69+ 9547
  70+ 9547 73               ld (hl),e
  71+ 9548 23               inc hl
  72+ 9549 72               ld (hl),d
  73+ 954A 23               inc hl
  74+ 954B
  75+ 954B EB               ex de,hl
  76+ 954C
  77+ 954C CD D4 99         call NextScan
  78+ 954F EB               ex de,hl
  79+ 9550
  80+ 9550 73               ld (hl),e
  81+ 9551 23               inc hl
  82+ 9552 72               ld (hl),d
  83+ 9553 23               inc hl
  84+ 9554
  85+ 9554 EB               ex de,hl
  86+ 9555
  87+ 9555 CD D4 99         call NextScan
  88+ 9558 EB               ex de,hl
  89+ 9559
  90+ 9559 73               ld (hl),e
  91+ 955A 23               inc hl
  92+ 955B 72               ld (hl),d
  93+ 955C 23               inc hl
  94+ 955D
  95+ 955D EB               ex de,hl
  96+ 955E
  97+ 955E CD D4 99         call NextScan
  98+ 9561 EB               ex de,hl
  99+ 9562
 100+ 9562 73               ld (hl),e
 101+ 9563 23               inc hl
 102+ 9564 72               ld (hl),d
 103+ 9565 23               inc hl
 104+ 9566
 105+ 9566 EB               ex de,hl
 106+ 9567
 107+ 9567 CD D4 99         call NextScan
 108+ 956A EB               ex de,hl
 109+ 956B
 110+ 956B 73               ld (hl),e
 111+ 956C 23               inc hl
 112+ 956D 72               ld (hl),d
 113+ 956E 23               inc hl
 114+ 956F
 115+ 956F EB               ex de,hl
 116+ 9570
 117+ 9570 CD D4 99         call NextScan
 118+ 9573 EB               ex de,hl
 119+ 9574
 120+ 9574 73               ld (hl),e
 121+ 9575 23               inc hl
 122+ 9576 72               ld (hl),d
 123+ 9577 23               inc hl
 124+ 9578
 125+ 9578 EB               ex de,hl
 126+ 9579
 127+ 9579 CD D4 99         call NextScan
 128+ 957C EB               ex de,hl
 129+ 957D
 130+ 957D 73               ld (hl),e
 131+ 957E 23               inc hl
 132+ 957F 72               ld (hl),d
 133+ 9580 23               inc hl
 134+ 9581
 135+ 9581 EB               ex de,hl
 136+ 9582
 137+ 9582 CD D4 99         call NextScan
 138+ 9585 EB               ex de,hl
 139+ 9586
 140+ 9586 73               ld (hl),e
 141+ 9587 23               inc hl
 142+ 9588 72               ld (hl),d
 143+ 9589 23               inc hl
 144+ 958A
 145+ 958A EB               ex de,hl
 146+ 958B
 147+ 958B CD D4 99         call NextScan
 148+ 958E EB               ex de,hl
 149+ 958F
 150+ 958F 73               ld (hl),e
 151+ 9590 23               inc hl
 152+ 9591 72               ld (hl),d
 153+ 9592 23               inc hl
 154+ 9593
 155+ 9593 EB               ex de,hl
 156+ 9594
 157+ 9594 CD D4 99         call NextScan
 158+ 9597 EB               ex de,hl
 159+ 9598
 160+ 9598 73               ld (hl),e
 161+ 9599 23               inc hl
 162+ 959A 72               ld (hl),d
 163+ 959B 23               inc hl
 164+ 959C
 165+ 959C EB               ex de,hl
 166+ 959D
 167+ 959D CD D4 99         call NextScan
 168+ 95A0 EB               ex de,hl
 169+ 95A1
 170+ 95A1 73               ld (hl),e
 171+ 95A2 23               inc hl
 172+ 95A3 72               ld (hl),d
 173+ 95A4 23               inc hl
 174+ 95A5
 175+ 95A5 EB               ex de,hl
 176+ 95A6
 177+ 95A6 CD D4 99         call NextScan
 178+ 95A9 EB               ex de,hl
 179+ 95AA
 180+ 95AA 73               ld (hl),e
 181+ 95AB 23               inc hl
 182+ 95AC 72               ld (hl),d
 183+ 95AD 23               inc hl
 184+ 95AE
 185+ 95AE EB               ex de,hl
 186+ 95AF
 187+ 95AF CD D4 99         call NextScan
 188+ 95B2 EB               ex de,hl
 189+ 95B3
 190+ 95B3 73               ld (hl),e
 191+ 95B4 23               inc hl
 192+ 95B5 72               ld (hl),d
 193+ 95B6 23               inc hl
 194+ 95B7
 195+ 95B7 EB               ex de,hl
 196+ 95B8
 197+ 95B8 CD D4 99         call NextScan
 198+ 95BB EB               ex de,hl
 199+ 95BC
 200+ 95BC 73               ld (hl),e
 201+ 95BD 23               inc hl
 202+ 95BE 72               ld (hl),d
 203+ 95BF 23               inc hl
 204+ 95C0
 205+ 95C0 EB               ex de,hl
 206+ 95C1
 207+ 95C1 CD D4 99         call NextScan
 208+ 95C4 EB               ex de,hl
 209+ 95C5
 210+ 95C5              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95C5              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95C5              ;   _ generar sus scanlines.
 213+ 95C5
 214+ 95C5              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95C5
 216+ 95C5 73               ld (hl),e
 217+ 95C6 23               inc hl
 218+ 95C7 72               ld (hl),d
 219+ 95C8 23               inc hl
 220+ 95C9
 221+ 95C9              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95C9
 223+ 95C9 22 27 8C         ld (Scanlines_album_SP),hl
 224+ 95CC
 225+ 95CC EB               ex de,hl
 226+ 95CD
 227+ 95CD              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95CD
 229+ 95CD              ;    call NextScan
 230+ 95CD              ;    call NextScan
 231+ 95CD
 232+ 95CD 22 32 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D0
 234+ 95D0              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D0
 236+ 95D0 08               ex af,af
 237+ 95D1
 238+ 95D1 F5               push af
 239+ 95D2 E1               pop hl
 240+ 95D3
 241+ 95D3 36 10            ld (hl),16
 242+ 95D5
 243+ 95D5 C9               ret
 244+ 95D6
 245+ 95D6              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D6
 247+ 95D6              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D6
 249+ 95D6 3E 57            ld a,$57
 250+ 95D8 94               sub h
 251+ 95D9 47               ld b,a
 252+ 95DA
 253+ 95DA 3E DF            ld a,$df
 254+ 95DC BD               cp l
 255+ 95DD 38 04            jr c,1F
 256+ 95DF
 257+ 95DF 3E 08            ld a,8
 258+ 95E1 80               add b
 259+ 95E2 47               ld b,a
 260+ 95E3
 261+ 95E3              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E3              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E3
 264+ 95E3 48           1 ld c,b
 265+ 95E4 0C               inc c
 266+ 95E5
 267+ 95E5 04               inc b
 268+ 95E6 05               dec b
 269+ 95E7 20 02            jr nz,3F
 270+ 95E9
 271+ 95E9 18 0B            jr 6F
 272+ 95EB
 273+ 95EB CD D4 99     3 call NextScan
 274+ 95EE EB               ex de,hl
 275+ 95EF
 276+ 95EF 73               ld (hl),e
 277+ 95F0 23               inc hl
 278+ 95F1 72               ld (hl),d
 279+ 95F2 23               inc hl
 280+ 95F3
 281+ 95F3 EB               ex de,hl
 282+ 95F4 10 F5            djnz 3B
 283+ 95F6
 284+ 95F6 ED 53 27 8C  6 ld (Scanlines_album_SP),de
 285+ 95FA
 286+ 95FA 08           5 ex af,af
 287+ 95FB F5               push af
 288+ 95FC E1               pop hl
 289+ 95FD
 290+ 95FD 71               ld (hl),c
 291+ 95FE
 292+ 95FE C9               ret
 293+ 95FF
# file closed: Genera_datos_de_impresion.asm
2049  95FF              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95FF              ; -----------------------------------------------------------------------------
   2+ 95FF              ;
   3+ 95FF              ;   11/03/24
   4+ 95FF              ;
   5+ 95FF
   6+ 95FF              Pinta_Sprites
   7+ 95FF
   8+ 95FF              ;    ld hl,(Scanlines_album_SP)
   9+ 95FF              ;    call Extrae_address
  10+ 95FF
  11+ 95FF              ;    inc h
  12+ 95FF              ;    dec h
  13+ 95FF              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95FF
  15+ 95FF ED 73 05 8C      ld (Stack),sp
  16+ 9603
  17+ 9603 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9604              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9604 2C               inc l
  20+ 9605 2C               inc l
  21+ 9606
  22+ 9606 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9607
  24+ 9607 2C               inc l
  25+ 9608 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9609
  27+ 9609              ;   Seleccionamos rutina de impresión:
  28+ 9609
  29+ 9609 3E 10            ld a,16
  30+ 960B B8               cp b
  31+ 960C C2 08 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 960F
  33+ 960F              ;   Rutinas:
  34+ 960F
  35+ 960F              Pinta_rapido    ;   1520 t/states.
  36+ 960F
  37+ 960F E1               pop hl
  38+ 9610
  39+ 9610 1A               ld a,(de)
  40+ 9611 AE               xor (hl)
  41+ 9612 77               ld (hl),a
  42+ 9613 2C               inc l
  43+ 9614 1C               inc e
  44+ 9615 1A               ld a,(de)
  45+ 9616 AE               xor (hl)
  46+ 9617 77               ld (hl),a
  47+ 9618 2C               inc l
  48+ 9619 1C               inc e
  49+ 961A 1A               ld a,(de)
  50+ 961B AE               xor (hl)
  51+ 961C 77               ld (hl),a
  52+ 961D 13               inc de
  53+ 961E
  54+ 961E E1               pop hl
  55+ 961F
  56+ 961F 1A               ld a,(de)
  57+ 9620 AE               xor (hl)
  58+ 9621 77               ld (hl),a
  59+ 9622 2C               inc l
  60+ 9623 1C               inc e
  61+ 9624 1A               ld a,(de)
  62+ 9625 AE               xor (hl)
  63+ 9626 77               ld (hl),a
  64+ 9627 2C               inc l
  65+ 9628 1C               inc e
  66+ 9629 1A               ld a,(de)
  67+ 962A AE               xor (hl)
  68+ 962B 77               ld (hl),a
  69+ 962C 13               inc de
  70+ 962D
  71+ 962D E1               pop hl
  72+ 962E
  73+ 962E 1A               ld a,(de)
  74+ 962F AE               xor (hl)
  75+ 9630 77               ld (hl),a
  76+ 9631 2C               inc l
  77+ 9632 1C               inc e
  78+ 9633 1A               ld a,(de)
  79+ 9634 AE               xor (hl)
  80+ 9635 77               ld (hl),a
  81+ 9636 2C               inc l
  82+ 9637 1C               inc e
  83+ 9638 1A               ld a,(de)
  84+ 9639 AE               xor (hl)
  85+ 963A 77               ld (hl),a
  86+ 963B 13               inc de
  87+ 963C
  88+ 963C E1               pop hl
  89+ 963D
  90+ 963D 1A               ld a,(de)
  91+ 963E AE               xor (hl)
  92+ 963F 77               ld (hl),a
  93+ 9640 2C               inc l
  94+ 9641 1C               inc e
  95+ 9642 1A               ld a,(de)
  96+ 9643 AE               xor (hl)
  97+ 9644 77               ld (hl),a
  98+ 9645 2C               inc l
  99+ 9646 1C               inc e
 100+ 9647 1A               ld a,(de)
 101+ 9648 AE               xor (hl)
 102+ 9649 77               ld (hl),a
 103+ 964A 13               inc de
 104+ 964B
 105+ 964B E1               pop hl
 106+ 964C
 107+ 964C 1A               ld a,(de)
 108+ 964D AE               xor (hl)
 109+ 964E 77               ld (hl),a
 110+ 964F 2C               inc l
 111+ 9650 1C               inc e
 112+ 9651 1A               ld a,(de)
 113+ 9652 AE               xor (hl)
 114+ 9653 77               ld (hl),a
 115+ 9654 2C               inc l
 116+ 9655 1C               inc e
 117+ 9656 1A               ld a,(de)
 118+ 9657 AE               xor (hl)
 119+ 9658 77               ld (hl),a
 120+ 9659 13               inc de
 121+ 965A
 122+ 965A E1               pop hl
 123+ 965B
 124+ 965B 1A               ld a,(de)
 125+ 965C AE               xor (hl)
 126+ 965D 77               ld (hl),a
 127+ 965E 2C               inc l
 128+ 965F 1C               inc e
 129+ 9660 1A               ld a,(de)
 130+ 9661 AE               xor (hl)
 131+ 9662 77               ld (hl),a
 132+ 9663 2C               inc l
 133+ 9664 1C               inc e
 134+ 9665 1A               ld a,(de)
 135+ 9666 AE               xor (hl)
 136+ 9667 77               ld (hl),a
 137+ 9668 13               inc de
 138+ 9669
 139+ 9669 E1               pop hl
 140+ 966A
 141+ 966A 1A               ld a,(de)
 142+ 966B AE               xor (hl)
 143+ 966C 77               ld (hl),a
 144+ 966D 2C               inc l
 145+ 966E 1C               inc e
 146+ 966F 1A               ld a,(de)
 147+ 9670 AE               xor (hl)
 148+ 9671 77               ld (hl),a
 149+ 9672 2C               inc l
 150+ 9673 1C               inc e
 151+ 9674 1A               ld a,(de)
 152+ 9675 AE               xor (hl)
 153+ 9676 77               ld (hl),a
 154+ 9677 13               inc de
 155+ 9678
 156+ 9678 E1               pop hl
 157+ 9679
 158+ 9679 1A               ld a,(de)
 159+ 967A AE               xor (hl)
 160+ 967B 77               ld (hl),a
 161+ 967C 2C               inc l
 162+ 967D 1C               inc e
 163+ 967E 1A               ld a,(de)
 164+ 967F AE               xor (hl)
 165+ 9680 77               ld (hl),a
 166+ 9681 2C               inc l
 167+ 9682 1C               inc e
 168+ 9683 1A               ld a,(de)
 169+ 9684 AE               xor (hl)
 170+ 9685 77               ld (hl),a
 171+ 9686 13               inc de
 172+ 9687
 173+ 9687 E1               pop hl
 174+ 9688
 175+ 9688 1A               ld a,(de)
 176+ 9689 AE               xor (hl)
 177+ 968A 77               ld (hl),a
 178+ 968B 2C               inc l
 179+ 968C 1C               inc e
 180+ 968D 1A               ld a,(de)
 181+ 968E AE               xor (hl)
 182+ 968F 77               ld (hl),a
 183+ 9690 2C               inc l
 184+ 9691 1C               inc e
 185+ 9692 1A               ld a,(de)
 186+ 9693 AE               xor (hl)
 187+ 9694 77               ld (hl),a
 188+ 9695 13               inc de
 189+ 9696
 190+ 9696 E1               pop hl
 191+ 9697
 192+ 9697 1A               ld a,(de)
 193+ 9698 AE               xor (hl)
 194+ 9699 77               ld (hl),a
 195+ 969A 2C               inc l
 196+ 969B 1C               inc e
 197+ 969C 1A               ld a,(de)
 198+ 969D AE               xor (hl)
 199+ 969E 77               ld (hl),a
 200+ 969F 2C               inc l
 201+ 96A0 1C               inc e
 202+ 96A1 1A               ld a,(de)
 203+ 96A2 AE               xor (hl)
 204+ 96A3 77               ld (hl),a
 205+ 96A4 13               inc de
 206+ 96A5
 207+ 96A5 E1               pop hl
 208+ 96A6
 209+ 96A6 1A               ld a,(de)
 210+ 96A7 AE               xor (hl)
 211+ 96A8 77               ld (hl),a
 212+ 96A9 2C               inc l
 213+ 96AA 1C               inc e
 214+ 96AB 1A               ld a,(de)
 215+ 96AC AE               xor (hl)
 216+ 96AD 77               ld (hl),a
 217+ 96AE 2C               inc l
 218+ 96AF 1C               inc e
 219+ 96B0 1A               ld a,(de)
 220+ 96B1 AE               xor (hl)
 221+ 96B2 77               ld (hl),a
 222+ 96B3 13               inc de
 223+ 96B4
 224+ 96B4 E1               pop hl
 225+ 96B5
 226+ 96B5 1A               ld a,(de)
 227+ 96B6 AE               xor (hl)
 228+ 96B7 77               ld (hl),a
 229+ 96B8 2C               inc l
 230+ 96B9 1C               inc e
 231+ 96BA 1A               ld a,(de)
 232+ 96BB AE               xor (hl)
 233+ 96BC 77               ld (hl),a
 234+ 96BD 2C               inc l
 235+ 96BE 1C               inc e
 236+ 96BF 1A               ld a,(de)
 237+ 96C0 AE               xor (hl)
 238+ 96C1 77               ld (hl),a
 239+ 96C2 13               inc de
 240+ 96C3
 241+ 96C3 E1               pop hl
 242+ 96C4
 243+ 96C4 1A               ld a,(de)
 244+ 96C5 AE               xor (hl)
 245+ 96C6 77               ld (hl),a
 246+ 96C7 2C               inc l
 247+ 96C8 1C               inc e
 248+ 96C9 1A               ld a,(de)
 249+ 96CA AE               xor (hl)
 250+ 96CB 77               ld (hl),a
 251+ 96CC 2C               inc l
 252+ 96CD 1C               inc e
 253+ 96CE 1A               ld a,(de)
 254+ 96CF AE               xor (hl)
 255+ 96D0 77               ld (hl),a
 256+ 96D1 13               inc de
 257+ 96D2
 258+ 96D2 E1               pop hl
 259+ 96D3
 260+ 96D3 1A               ld a,(de)
 261+ 96D4 AE               xor (hl)
 262+ 96D5 77               ld (hl),a
 263+ 96D6 2C               inc l
 264+ 96D7 1C               inc e
 265+ 96D8 1A               ld a,(de)
 266+ 96D9 AE               xor (hl)
 267+ 96DA 77               ld (hl),a
 268+ 96DB 2C               inc l
 269+ 96DC 1C               inc e
 270+ 96DD 1A               ld a,(de)
 271+ 96DE AE               xor (hl)
 272+ 96DF 77               ld (hl),a
 273+ 96E0 13               inc de
 274+ 96E1
 275+ 96E1 E1               pop hl
 276+ 96E2
 277+ 96E2 1A               ld a,(de)
 278+ 96E3 AE               xor (hl)
 279+ 96E4 77               ld (hl),a
 280+ 96E5 2C               inc l
 281+ 96E6 1C               inc e
 282+ 96E7 1A               ld a,(de)
 283+ 96E8 AE               xor (hl)
 284+ 96E9 77               ld (hl),a
 285+ 96EA 2C               inc l
 286+ 96EB 1C               inc e
 287+ 96EC 1A               ld a,(de)
 288+ 96ED AE               xor (hl)
 289+ 96EE 77               ld (hl),a
 290+ 96EF 13               inc de
 291+ 96F0
 292+ 96F0 E1               pop hl
 293+ 96F1
 294+ 96F1 1A               ld a,(de)
 295+ 96F2 AE               xor (hl)
 296+ 96F3 77               ld (hl),a
 297+ 96F4 2C               inc l
 298+ 96F5 1C               inc e
 299+ 96F6 1A               ld a,(de)
 300+ 96F7 AE               xor (hl)
 301+ 96F8 77               ld (hl),a
 302+ 96F9 2C               inc l
 303+ 96FA 1C               inc e
 304+ 96FB 1A               ld a,(de)
 305+ 96FC AE               xor (hl)
 306+ 96FD 77               ld (hl),a
 307+ 96FE 13               inc de
 308+ 96FF
 309+ 96FF ED 73 27 8C      ld (Scanlines_album_SP),sp
 310+ 9703 ED 7B 05 8C      ld sp,(Stack)
 311+ 9707 C9               ret
 312+ 9708
 313+ 9708              Pinta_lento
 314+ 9708
 315+ 9708 E1           1 pop hl
 316+ 9709
 317+ 9709 1A               ld a,(de)
 318+ 970A AE               xor (hl)
 319+ 970B 77               ld (hl),a
 320+ 970C 2C               inc l
 321+ 970D 1C               inc e
 322+ 970E 1A               ld a,(de)
 323+ 970F AE               xor (hl)
 324+ 9710 77               ld (hl),a
 325+ 9711 2C               inc l
 326+ 9712 1C               inc e
 327+ 9713 1A               ld a,(de)
 328+ 9714 AE               xor (hl)
 329+ 9715 77               ld (hl),a
 330+ 9716 13               inc de
 331+ 9717
 332+ 9717 10 EF            djnz 1B
 333+ 9719
 334+ 9719 ED 73 27 8C      ld (Scanlines_album_SP),sp
 335+ 971D ED 7B 05 8C      ld sp,(Stack)
 336+ 9721 C9               ret
# file closed: Pinta_Sprites.asm
2050  9722              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9722              ; ******************************************************************************************************************************************************************************************
   2+ 9722              ;
   3+ 9722              ; 26/06/23
   4+ 9722              ;
   5+ 9722              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9722
   7+ 9722              Draw
   8+ 9722
   9+ 9722 CD C8 99     	call Prepara_draw
  10+ 9725 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9726 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9727 28 05        	jr z,2F
  13+ 9729
  14+ 9729 3A D7 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 972C 18 0C        	jr 1F
  16+ 972E
  17+ 972E 2A D5 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9731 22 C8 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9734 CD C0 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9737              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9737
  22+ 9737 CD 67 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 973A
  24+ 973A 3A C5 8B     1 ld a,(Ctrl_0)
  25+ 973D CB 6F        	bit 5,a
  26+ 973F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9741
  28+ 9741 CD 56 97     	call Comprueba_limite_horizontal
  29+ 9744 CD E6 97     	call Comprueba_limite_vertical
  30+ 9747
  31+ 9747              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9747              ; -----------------------
  33+ 9747              ; -----------------------
  34+ 9747              ; -----------------------
  35+ 9747
  36+ 9747 CD 3C 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 974A CD 73 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 974D
  39+ 974D 3A C5 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9750 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9752 32 C5 8B     	ld (Ctrl_0),a
  42+ 9755
  43+ 9755 C9           	ret
  44+ 9756
  45+ 9756              ; *******************************************************************************************************************************************************************************************
  46+ 9756              ;	21/01/23
  47+ 9756              ;
  48+ 9756              ; 	Comprueba_limite_horizontal.
  49+ 9756              ;
  50+ 9756              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9756              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9756              ;
  53+ 9756              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9756              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9756              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9756              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9756
  58+ 9756
  59+ 9756
  60+ 9756 3A C5 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9759 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 975B 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 975D E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 975F 32 C5 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9762 18 09            jr 6F
  66+ 9764 CB 5F        1 bit 3,a
  67+ 9766 28 0A            jr z,2F
  68+ 9768 E6 F7            and $f7
  69+ 976A 32 C5 8B         ld (Ctrl_0),a
  70+ 976D CD C0 98     6 call Inicializacion
  71+ 9770 18 5B            jr 5F
  72+ 9772 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9773
  74+ 9773              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9773              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9773
  77+ 9773 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9774 2A D9 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9777 CD BC 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 977A 67           	ld h,a
  81+ 977B EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 977C CD BC 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 977F 67           	ld h,a
  84+ 9780 A7           	and a
  85+ 9781 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9783 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9784 3A D7 8B     	ld a,(Cuad_objeto)
  88+ 9787 FE 02        	cp 2
  89+ 9789 38 1E        	jr c,3F
  90+ 978B 28 1C        	jr z,3F
  91+ 978D 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 978E 28 23            jr z,7F
  93+ 9790 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9792 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9794 E1           	pop hl
  96+ 9795
  97+ 9795              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9795              ; _para indicar con E="2" en caso necesario.
  99+ 9795
 100+ 9795 E5               push hl
 101+ 9796 C5               push bc
 102+ 9797 CD BC 94     	call calcula_tercio
 103+ 979A FE 01        	cp 1
 104+ 979C 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 979E CD CE 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A1 28 26            jr z,9F
 107+ 97A3 38 24            jr c,9F
 108+ 97A5 1E 00        11 ld e,0
 109+ 97A7 18 22            jr 8F
 110+ 97A9 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97AA 28 07        	jr z, 7F
 112+ 97AC 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97AE 1E 00         	ld e,0
 114+ 97B0 E1           	pop hl
 115+ 97B1 18 04        	jr 4F
 116+ 97B3 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B5 18 15            jr 10F
 118+ 97B7
 119+ 97B7              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B7              ; _para indicar con E="2" en caso necesario.
 121+ 97B7
 122+ 97B7 E5           4 push hl
 123+ 97B8 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97B9 CD BC 94     	call calcula_tercio
 125+ 97BC FE 01        	cp 1
 126+ 97BE 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C0 CD CE 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C3 28 04            jr z,9F
 129+ 97C5 30 02            jr nc,9F
 130+ 97C7 18 02        	jr 8F
 131+ 97C9 1E 02        9 ld e,2
 132+ 97CB C1           8 pop bc
 133+ 97CC E1           10 pop hl
 134+ 97CD C9           5 ret
 135+ 97CE
 136+ 97CE              ; --------------------
 137+ 97CE              ;
 138+ 97CE              ; 25/08/22
 139+ 97CE
 140+ 97CE CD BC 94     Comprueba_centro call calcula_tercio
 141+ 97D1 67               ld h,a
 142+ 97D2 08           	ex af,af
 143+ 97D3 FE 02        	cp 2
 144+ 97D5 38 07        	jr c,1F
 145+ 97D7 28 05        	jr z,1F
 146+ 97D9 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97DC 18 03        	jr 2F
 148+ 97DE 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E1 08           2 ex af,af
 150+ 97E2 A7               and a
 151+ 97E3 ED 42            sbc hl,bc
 152+ 97E5 C9               ret
 153+ 97E6
 154+ 97E6              ; *********************************************************************************************************************************************************************************************
 155+ 97E6              ;
 156+ 97E6              ;   16/8/22
 157+ 97E6              ;
 158+ 97E6              ;	Comprueba_limite_vertical
 159+ 97E6              ;
 160+ 97E6              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E6              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E6              ;
 163+ 97E6
 164+ 97E6 2A C8 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97E9 7D           	ld a,l
 166+ 97EA E6 1F        	and $1F
 167+ 97EC 57           	ld d,a
 168+ 97ED 3A DB 8B     	ld a,(Limite_vertical)
 169+ 97F0 BA           	cp d 											; Límite - Posición.
 170+ 97F1 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F2 3A D7 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F5 CB 47        	bit 0,a
 173+ 97F7 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97F9
 175+ 97F9              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97F9
 177+ 97F9 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97FA 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97FC
 180+ 97FC              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97FC              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97FC
 183+ 97FC 3A B9 8B         ld a,(Coordenada_X)
 184+ 97FF 16 0F            ld d,Centro_izquierda
 185+ 9801 A7               and a
 186+ 9802 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9803 28 1E            jr z,3F
 188+ 9805 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9807              ;                                                    ; _salimos sin modificar nada.
 190+ 9807 18 0E            jr 2F
 191+ 9809 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 980A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 980C
 194+ 980C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 980C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 980C
 197+ 980C 3A B9 8B         ld a,(Coordenada_X)
 198+ 980F 16 10            ld d,Centro_derecha
 199+ 9811 A7               and a
 200+ 9812 92               sub d
 201+ 9813 28 0E            jr z,3F
 202+ 9815 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9817              ;                                                    ; _salimos sin modificar nada.
 204+ 9817 CB 43        2 bit 0,e
 205+ 9819 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 981B C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 981C CD B0 98         call Modificaccionne
 208+ 981F C1           	pop bc
 209+ 9820 CD C0 98         call Inicializacion
 210+ 9823 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9824
 212+ 9824              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9824
 214+ 9824 C5           4 push bc
 215+ 9825 01 C7 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9828 0A           	ld a,(bc)
 217+ 9829 3D           	dec a
 218+ 982A 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 982B 7D           	ld a,l
 220+ 982C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 982D CB 47        	bit 0,a
 222+ 982F 28 03        	jr z,5F
 223+ 9831 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9832 18 2E        	jr 7F
 225+ 9834
 226+ 9834              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9834
 228+ 9834 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9835 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9836 3A C5 8B     	ld a,(Ctrl_0)
 231+ 9839 CB 4F        	bit 1,a
 232+ 983B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 983D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 983E
 235+ 983E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 983E
 237+ 983E 1C               inc e
 238+ 983F 1D               dec e
 239+ 9840 20 07            jr nz,12F
 240+ 9842 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9843 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9844 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9847 18 44        13 jr 9F
 244+ 9849 CB 43        12 bit 0,e
 245+ 984B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 984D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 984D C1           	pop bc
 248+ 984E 18 D3        	jr 3B
 249+ 9850 80           14 add b
 250+ 9851 6F               ld l,a
 251+ 9852 22 C8 8B     	ld (Posicion_actual),hl
 252+ 9855 CD B0 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9858 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 985A E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 985C 32 C5 8B         ld (Ctrl_0),a
 256+ 985F F1           	pop af
 257+ 9860 18 2B        	jr 9F
 258+ 9862
 259+ 9862              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9862
 261+ 9862 F5           7 push af
 262+ 9863 3A C5 8B     	ld a,(Ctrl_0)
 263+ 9866 CB 47        	bit 0,a
 264+ 9868 20 1D        	jr nz,8F
 265+ 986A F1           	pop af
 266+ 986B
 267+ 986B              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 986B
 269+ 986B 1C           	inc e
 270+ 986C 1D               dec e
 271+ 986D 20 07            jr nz,10F
 272+ 986F 90           	sub b
 273+ 9870 6F               ld l,a
 274+ 9871 22 C8 8B     	ld (Posicion_actual),hl
 275+ 9874 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9876              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9876 CB 43        10 bit 0,e
 278+ 9878 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 987A              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 987A C1           	pop bc
 281+ 987B 18 A6        	jr 3B
 282+ 987D 90           16 sub b
 283+ 987E 6F               ld l,a
 284+ 987F 22 C8 8B     	ld (Posicion_actual),hl
 285+ 9882 CD B0 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9885 18 06            jr 9F
 287+ 9887 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9889 32 C5 8B         ld (Ctrl_0),a
 289+ 988C F1           	pop af
 290+ 988D C1           9 pop bc
 291+ 988E 1E 00        	ld e,0
 292+ 9890 CD C0 98         call Inicializacion
 293+ 9893 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9894 08           	ex af,af
 295+ 9895 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9896 18 8B            jr 3B
 297+ 9898
 298+ 9898              ; --------------------
 299+ 9898
 300+ 9898 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 989A CD E3 99     1 call PreviousScan
 302+ 989D 10 FB            djnz 1B
 303+ 989F 22 C8 8B     	ld (Posicion_actual),hl
 304+ 98A2 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A3 C9           	ret
 306+ 98A4
 307+ 98A4              ; --------------------
 308+ 98A4
 309+ 98A4 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A6 CD D4 99     1 call NextScan
 311+ 98A9 10 FB            djnz 1B
 312+ 98AB 22 C8 8B     	ld (Posicion_actual),hl
 313+ 98AE AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98AF C9           	ret
 315+ 98B0
 316+ 98B0              ; --------------------
 317+ 98B0              ;
 318+ 98B0              ;	22/01/23
 319+ 98B0              ;
 320+ 98B0              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B0              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B0              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B0
 324+ 98B0
 325+ 98B0              Modificaccionne
 326+ 98B0
 327+ 98B0 3A D7 8B     	ld a,(Cuad_objeto)
 328+ 98B3 FE 02        	cp 2
 329+ 98B5 CC 98 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98B8 DC 98 98         call c,Modifica_Pos_actual
 331+ 98BB C8           	ret z
 332+ 98BC CD A4 98         call Modifica_Pos_actual2
 333+ 98BF C9               ret
 334+ 98C0
 335+ 98C0              ; *************************************************************************************************************************************************************************************************
 336+ 98C0              ;
 337+ 98C0              ;	13/8/22
 338+ 98C0              ;
 339+ 98C0              ;	Inicializacion
 340+ 98C0              ;
 341+ 98C0              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C0              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C0              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C0              ;
 345+ 98C0              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C0              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C0              ;	_ desaparece/aparece.
 348+ 98C0
 349+ 98C0              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C0              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C0              ;
 352+ 98C0              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C0              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C0              ; 		   [E] ="0"
 355+ 98C0
 356+ 98C0              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C0
 358+ 98C0 CD BC 94     Inicializacion call calcula_tercio
 359+ 98C3 28 36        	jr z,primit
 360+ 98C5 E6 02        	and 2
 361+ 98C7 20 07        	jr nz,segmit
 362+ 98C9 7D           	ld a,l
 363+ 98CA FE 7F        	cp $7f
 364+ 98CC 38 2D        	jr c,primit
 365+ 98CE 28 2B        	jr z,primit
 366+ 98D0 CD 36 99     segmit call column
 367+ 98D3 38 13        	jr c,tercuad
 368+ 98D5 3E 04        cuarcuad ld a,4
 369+ 98D7 32 D7 8B     	ld (Cuad_objeto),a
 370+ 98DA 21 20 48     	ld hl,$4820
 371+ 98DD 22 D9 8B     	ld (Limite_horizontal),hl
 372+ 98E0 21 DB 8B     	ld hl,Limite_vertical
 373+ 98E3 36 0D        	ld (hl),$0d
 374+ 98E5 08           	ex af,af
 375+ 98E6 18 3C        	jr 1F
 376+ 98E8              tercuad
 377+ 98E8 3E 03        	ld a,3
 378+ 98EA 32 D7 8B     	ld (Cuad_objeto),a
 379+ 98ED 21 20 48     	ld hl,$4820
 380+ 98F0 22 D9 8B     	ld (Limite_horizontal),hl
 381+ 98F3 21 DB 8B     	ld hl,Limite_vertical
 382+ 98F6 36 12        	ld (hl),$12
 383+ 98F8 08           	ex af,af
 384+ 98F9 18 29        	jr 1F
 385+ 98FB CD 36 99     primit call column
 386+ 98FE 38 13        	jr c, primcuad
 387+ 9900              segcuad
 388+ 9900 3E 02        	ld a,2
 389+ 9902 32 D7 8B     	ld (Cuad_objeto),a
 390+ 9905 21 C0 4F     	ld hl,$4fc0
 391+ 9908 22 D9 8B     	ld (Limite_horizontal),hl
 392+ 990B 21 DB 8B     	ld hl,Limite_vertical
 393+ 990E 36 0D        	ld (hl),$0d
 394+ 9910 08           	ex af,af
 395+ 9911 18 11        	jr 1F
 396+ 9913              primcuad
 397+ 9913 3E 01        	ld a,1
 398+ 9915 32 D7 8B     	ld (Cuad_objeto),a
 399+ 9918 21 C0 4F     	ld hl,$4fc0
 400+ 991B 22 D9 8B     	ld (Limite_horizontal),hl
 401+ 991E 21 DB 8B     	ld hl,Limite_vertical
 402+ 9921 36 12        	ld (hl),$12
 403+ 9923 08           	ex af,af
 404+ 9924
 405+ 9924 C5           1 push bc
 406+ 9925 E5           	push hl
 407+ 9926 D5           	push de
 408+ 9927
 409+ 9927 2A C8 8B     	ld hl,(Posicion_actual)
 410+ 992A CD DA 94     	call Genera_coordenadas
 411+ 992D
 412+ 992D D1           	pop de
 413+ 992E E1           	pop hl
 414+ 992F C1           	pop bc
 415+ 9930
 416+ 9930 21 C5 8B     	ld hl,Ctrl_0
 417+ 9933 CB EE        	set 5,(hl)
 418+ 9935 C9           	ret
 419+ 9936
 420+ 9936              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9936
 422+ 9936              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9936              ;
 424+ 9936              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9936
 426+ 9936 7D           column ld a,l
 427+ 9937 E6 1F        	and $1f
 428+ 9939 FE 10         	cp $10
 429+ 993B C9            	ret
 430+ 993C
 431+ 993C              ; --------------------------------------------------------------------------------------------------------------------
 432+ 993C              ;
 433+ 993C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 993C              ;
 435+ 993C              ; 14/12/22
 436+ 993C              ;
 437+ 993C              ;	Modifica: A y BC.
 438+ 993C
 439+ 993C 3A D7 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 993F E6 01        	and 1
 441+ 9941 28 17        	jr z,1F
 442+ 9943
 443+ 9943              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9943
 445+ 9943 3A B9 8B     	ld a,(Coordenada_X)
 446+ 9946 47           	ld b,a
 447+ 9947 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9948 79           	ld a,c
 449+ 9949 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 994A 38 08        	jr c,2F
 451+ 994C 47           	ld b,a
 452+ 994D 79           	ld a,c
 453+ 994E 90           	sub b
 454+ 994F 32 D8 8B     	ld (Columnas),a
 455+ 9952 18 1B        	jr 4F
 456+ 9954 79           2 ld a,c
 457+ 9955 32 D8 8B     	ld (Columnas),a
 458+ 9958 18 15        	jr 4F
 459+ 995A
 460+ 995A              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 995A
 462+ 995A 3A B9 8B     1 ld a,(Coordenada_X)
 463+ 995D 81           	add c
 464+ 995E 3D           	dec a
 465+ 995F D6 1F        	sub $1f
 466+ 9961 38 08        	jr c,3F
 467+ 9963 47           	ld b,a
 468+ 9964 79           	ld a,c
 469+ 9965 90           	sub b
 470+ 9966 32 D8 8B     	ld (Columnas),a
 471+ 9969 18 04        	jr 4F
 472+ 996B 79           3 ld a,c
 473+ 996C 32 D8 8B     	ld (Columnas),a
 474+ 996F D9           4 exx
 475+ 9970 4F           	ld c,a
 476+ 9971 D9           	exx
 477+ 9972 C9            ret
 478+ 9973
 479+ 9973              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9973              ;
 481+ 9973              ;   19/7/23
 482+ 9973              ;
 483+ 9973              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9973              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9973              ;
 486+ 9973              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9973              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9973              ;
 489+ 9973              ;	DESTRUYE: HL,B Y A.
 490+ 9973
 491+ 9973 3A D7 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9976 FE 02        	cp 2
 493+ 9978 38 18        	jr c,1F
 494+ 997A 28 16        	jr z,1F
 495+ 997C E6 01        	and 1
 496+ 997E 28 0D        	jr z,3F
 497+ 9980
 498+ 9980              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9980
 500+ 9980 CD BC 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9983
 502+ 9983 7D           9 ld a,l
 503+ 9984 E6 1F        	and $1f
 504+ 9986 28 2A        	jr z,7F
 505+ 9988 2B           	dec hl
 506+ 9989 10 F8        	djnz 9B
 507+ 998B 18 25        	jr 7F
 508+ 998D
 509+ 998D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 998D
 511+ 998D 2A C8 8B     3 ld hl,(Posicion_actual)
 512+ 9990 18 20        	jr 7F
 513+ 9992
 514+ 9992 28 14        1 jr z,2F
 515+ 9994
 516+ 9994              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9994
 518+ 9994 CD BC 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9997
 520+ 9997 7D           4 ld a,l
 521+ 9998 E6 1F        	and $1f
 522+ 999A 28 03        	jr z,6F
 523+ 999C 2B           	dec hl
 524+ 999D 10 F8        	djnz 4B
 525+ 999F 06 0F        6 ld b,15
 526+ 99A1 CD E3 99     5 call PreviousScan
 527+ 99A4 10 FB        	djnz 5B
 528+ 99A6 18 0A        	jr 7F
 529+ 99A8
 530+ 99A8              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99A8
 532+ 99A8 CD BC 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99AB 06 0F        	ld b,15
 534+ 99AD CD E3 99     8 call PreviousScan
 535+ 99B0 10 FB        	djnz 8B
 536+ 99B2
 537+ 99B2 E5           7 push hl
 538+ 99B3 DD E1        	pop ix
 539+ 99B5
 540+ 99B5 2A CA 8B     	ld hl,(Puntero_objeto)
 541+ 99B8 E5           	push hl
 542+ 99B9 FD E1        	pop iy
 543+ 99BB
 544+ 99BB C9           	ret
 545+ 99BC
 546+ 99BC              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99BC              ;
 548+ 99BC              ;	2/1/23
 549+ 99BC              ;
 550+ 99BC              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99BC              ;
 552+ 99BC              ;	Tras esta rutina tenemos:
 553+ 99BC              ;
 554+ 99BC              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99BC              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99BC              ;
 557+ 99BC              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99BC
 559+ 99BC 2A C8 8B     Operandos ld hl,(Posicion_actual)
 560+ 99BF 3A D8 8B     	ld a,(Columnas)
 561+ 99C2 3D           	dec a
 562+ 99C3 20 01        	jr nz,1F
 563+ 99C5 3C           	inc a
 564+ 99C6 47           1 ld b,a
 565+ 99C7 C9           	ret
 566+ 99C8
 567+ 99C8              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99C8              ;
 569+ 99C8              ;	Prepara_draw
 570+ 99C8              ;
 571+ 99C8              ;	Es una rutina de carga.
 572+ 99C8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99C8              ;
 574+ 99C8              ;	FUNCIONAMIENTO:
 575+ 99C8              ;
 576+ 99C8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99C8              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99C8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99C8              ;
 580+ 99C8              ;	DESTRUYE:
 581+ 99C8              ;
 582+ 99C8              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99C8
 584+ 99C8 21 C6 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99CB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99CC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99CD 4E           	ld c,(hl)
 588+ 99CE 2A C8 8B     	ld hl,(Posicion_actual)
 589+ 99D1 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D3 C9           	ret
 591+ 99D4
 592+ 99D4              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D4              ;
 594+ 99D4              ;	5/08/22
 595+ 99D4              ;
 596+ 99D4              ;   NextScan.
 597+ 99D4              ;
 598+ 99D4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D4              ;
 600+ 99D4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D4              ;
 602+ 99D4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D4              ;
 604+ 99D4              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D4              ;
 606+ 99D4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D4              ;
 608+ 99D4
 609+ 99D4 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D5 7C               ld a,h
 611+ 99D6 E6 07            and 7
 612+ 99D8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99D9
 614+ 99D9 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99DA C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99DC 6F               ld l,a
 617+ 99DD D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99DE
 619+ 99DE 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99DF D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E1 67               ld h,a
 622+ 99E2 C9               ret
 623+ 99E3
 624+ 99E3              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E3              ;
 626+ 99E3              ;	5/08/22
 627+ 99E3              ;
 628+ 99E3              ;   PreviousScan.
 629+ 99E3              ;
 630+ 99E3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E3              ;
 632+ 99E3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E3              ;
 634+ 99E3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E3              ;
 636+ 99E3              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E3              ;
 638+ 99E3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E3              ;
 640+ 99E3
 641+ 99E3 7C           PreviousScan ld a,h
 642+ 99E4 25               dec h               ; Dec H.
 643+ 99E5 E6 07            and 7
 644+ 99E7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99E8
 646+ 99E8 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99E9 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99EB 6F               ld l,a
 649+ 99EC D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99ED
 651+ 99ED 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99EE C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F0 67               ld h,a
 654+ 99F1 C9               ret
 655+ 99F2
 656+ 99F2
 657+ 99F2
 658+ 99F2
 659+ 99F2
 660+ 99F2
 661+ 99F2
 662+ 99F2
 663+ 99F2
 664+ 99F2
 665+ 99F2
 666+ 99F2
# file closed: Draw_XOR.asm
2051  99F2              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F2
   2+ 99F2              ; ******************************************************************************************************************************************************************************************
   3+ 99F2              ;
   4+ 99F2              ;   20/05/23
   5+ 99F2              ;
   6+ 99F2              ;	Recompone_posicion_inicio
   7+ 99F2              ;
   8+ 99F2              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F2              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F2              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F2              ;	_ a una u otra rutina.
  12+ 99F2
  13+ 99F2              Recompone_posicion_inicio
  14+ 99F2
  15+ 99F2 2A D5 8B     	ld hl,(Posicion_inicio)
  16+ 99F5 7D           	ld a,l
  17+ 99F6 E6 1F        	and $1f
  18+ 99F8 28 16        	jr z,1F
  19+ 99FA
  20+ 99FA FE 1F        	cp $1f
  21+ 99FC 28 0D        	jr z,3F
  22+ 99FE
  23+ 99FE 21 C4 8B     	ld hl,Ctrl_2
  24+ 9A01 CB C6        	set 0,(hl)
  25+ 9A03 2A CA 8B     	ld hl,(Puntero_objeto)
  26+ 9A06 22 F6 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A09 18 08        	jr 2F
  28+ 9A0B
  29+ 9A0B CD B9 9B     3 call Mov_left
  30+ 9A0E 18 03        	jr 2F
  31+ 9A10
  32+ 9A10 CD 96 9A     1 call Mov_right
  33+ 9A13 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A16 22 CA 8B     	ld (Puntero_objeto),hl
  35+ 9A19 C9           	ret
  36+ 9A1A
  37+ 9A1A              ; ******************************************************************************************************************************************************************************************
  38+ 9A1A              ;
  39+ 9A1A              ;   27/05/23
  40+ 9A1A              ;
  41+ 9A1A              ;	Mov_down
  42+ 9A1A              ;
  43+ 9A1A              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A1A              ;
  45+ 9A1A              ;
  46+ 9A1A              Mov_down
  47+ 9A1A
  48+ 9A1A CD 84 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A1D              ;																	; _ repone (Puntero_objeto).
  50+ 9A1D 21 C5 8B     	ld hl,Ctrl_0
  51+ 9A20 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A22              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A22              ; 																	; _ en el caso de que no lo haya.
  54+ 9A22 3A E0 8B     	ld a,(Vel_down)
  55+ 9A25 47           	ld b,a
  56+ 9A26 2A C8 8B         ld hl,(Posicion_actual)
  57+ 9A29 CD BC 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A2C E6 02        	and 2
  59+ 9A2E 28 17        	jr z,1F
  60+ 9A30
  61+ 9A30              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A30              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A30
  64+ 9A30 7C           	ld a,h
  65+ 9A31 FE 57        	cp $57
  66+ 9A33 20 12        	jr nz,1F
  67+ 9A35
  68+ 9A35 7D           	ld a,l
  69+ 9A36 C6 20        	add $20
  70+ 9A38 30 0D        	jr nc,1F
  71+ 9A3A
  72+ 9A3A              ; ------------------------------
  73+ 9A3A              ;
  74+ 9A3A              ;	12/01/24
  75+ 9A3A
  76+ 9A3A              ;	call Reaparece_arriba
  77+ 9A3A CD 46 9D     	call Reinicio
  78+ 9A3D
  79+ 9A3D              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A3D
  81+ 9A3D 3A 2D 8C     	ld a,(Ctrl_3)
  82+ 9A40 CB CF        	set 1,a
  83+ 9A42 32 2D 8C     	ld (Ctrl_3),a
  84+ 9A45
  85+ 9A45 18 08        	jr 3F
  86+ 9A47              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A47              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A47              ; ------------------------------
  89+ 9A47
  90+ 9A47 CD D4 99     1 call NextScan
  91+ 9A4A 22 C8 8B     	ld (Posicion_actual),hl
  92+ 9A4D 10 DA            djnz 2B
  93+ 9A4F CD DA 94     3 call Genera_coordenadas
  94+ 9A52 C9           	ret
  95+ 9A53
  96+ 9A53              ; ******************************************************************************************************************************************************************************************
  97+ 9A53              ;
  98+ 9A53              ;   27/05/23
  99+ 9A53              ;
 100+ 9A53              ;	Mov_up
 101+ 9A53              ;
 102+ 9A53              ; 	Mueve el Sprite hacia arriba.
 103+ 9A53              ;
 104+ 9A53              ;
 105+ 9A53              Mov_up
 106+ 9A53
 107+ 9A53 CD 84 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A56              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A56 21 C5 8B     	ld hl,Ctrl_0
 110+ 9A59 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A5B              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A5B              ; 																		; _ en el caso de que no lo haya.
 113+ 9A5B 3A DF 8B     	ld a,(Vel_up)
 114+ 9A5E 47           	ld b,a
 115+ 9A5F 2A C8 8B     	ld hl,(Posicion_actual)
 116+ 9A62 CD BC 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A65 A7           	and a
 118+ 9A66 20 10        	jr nz,1F
 119+ 9A68
 120+ 9A68              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A68              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A68
 123+ 9A68 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A69 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A6B 20 0B            jr nz,1F
 126+ 9A6D 7D               ld a,l
 127+ 9A6E D6 20            sub $20
 128+ 9A70 30 06            jr nc,1F
 129+ 9A72 25               dec h
 130+ 9A73
 131+ 9A73              ; -----------------------------
 132+ 9A73 CD 27 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A76              ;	call Reinicio
 134+ 9A76              ; -----------------------------
 135+ 9A76
 136+ 9A76 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A78 CD E3 99     1 call PreviousScan
 138+ 9A7B 22 C8 8B     	ld (Posicion_actual),hl
 139+ 9A7E 10 E2            djnz 3B
 140+ 9A80 CD DA 94     2 call Genera_coordenadas
 141+ 9A83 C9           	ret
 142+ 9A84
 143+ 9A84              ; -----------------------------
 144+ 9A84              ;
 145+ 9A84              ;	27/5/23
 146+ 9A84              ;
 147+ 9A84              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A84              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A84              ;
 150+ 9A84              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A84              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A84              ;
 153+ 9A84              ;	Modifica: A y (Puntero_objeto).
 154+ 9A84
 155+ 9A84 3A C4 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A87 CB 47        	bit 0,a
 157+ 9A89 C8           	ret z
 158+ 9A8A CB 87        	res 0,a
 159+ 9A8C 32 C4 8B     	ld (Ctrl_2),a
 160+ 9A8F 2A F6 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A92 22 CA 8B     	ld (Puntero_objeto),hl
 162+ 9A95 C9           	ret
 163+ 9A96
 164+ 9A96              ; ******************************************************************************************************************************************************************************************
 165+ 9A96              ;
 166+ 9A96              ;	19/10/22
 167+ 9A96              ;
 168+ 9A96              ;	Mov_right.
 169+ 9A96              ;
 170+ 9A96              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A96              ;
 172+ 9A96
 173+ 9A96 3A C5 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A99 CB 77        	bit 6,a
 175+ 9A9B 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A9D
 177+ 9A9D CD D5 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA0 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA1
 180+ 9AA1 21 C5 8B     	ld hl,Ctrl_0
 181+ 9AA4 CB E6        	set 4,(hl)
 182+ 9AA6 18 52        	jr 8F
 183+ 9AA8
 184+ 9AA8 21 C5 8B     10 ld hl,Ctrl_0
 185+ 9AAB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AAD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AAD              ; 																	; _ en el caso de que no lo haya.
 188+ 9AAD 3A B9 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB0 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB2 20 46        	jr nz,8F
 191+ 9AB4
 192+ 9AB4 3A CC 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB7 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AB8 28 40        	jr z,8F
 195+ 9ABA
 196+ 9ABA              ; ---------- ---------- ----------
 197+ 9ABA              ;
 198+ 9ABA              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ABA
 200+ 9ABA 3A DE 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ABD FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9ABF 28 11        	jr z,1F
 203+ 9AC1 38 06        	jr c,6F
 204+ 9AC3 FE 04        	cp 4
 205+ 9AC5 28 14        	jr z,7F
 206+ 9AC7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AC9
 208+ 9AC9              ; ---------- ---------- ----------
 209+ 9AC9              ;
 210+ 9AC9              ; Perfiles de velocidad
 211+ 9AC9              ;
 212+ 9AC9
 213+ 9AC9 3A CC 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ACC FE FE        	cp $fe
 215+ 9ACE 20 2A        	jr nz,8F
 216+ 9AD0 18 10        	jr 3F
 217+ 9AD2 3A CC 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD5 FE FD        	cp $fd
 219+ 9AD7 20 21        	jr nz,8F
 220+ 9AD9 18 07        	jr 3F
 221+ 9ADB 3A CC 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ADE FE FB        	cp $fb
 223+ 9AE0 20 18        	jr nz,8F
 224+ 9AE2
 225+ 9AE2              ; ---------- ---------- ----------
 226+ 9AE2
 227+ 9AE2              3
 228+ 9AE2 CD 15 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE5              ;	call Reinicio
 230+ 9AE5
 231+ 9AE5              ; ---------- ---------- ----------
 232+ 9AE5              ;
 233+ 9AE5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE5
 235+ 9AE5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AE8 CD 01 9B     	call DESPLZ_DER
 238+ 9AEB C1           	pop bc
 239+ 9AEC 10 F9        	djnz 5B
 240+ 9AEE 2A C8 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF1 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF2 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9AF5 CD DA 94     	call Genera_coordenadas
 244+ 9AF8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AFA
 246+ 9AFA              ; ---------- ---------- ----------
 247+ 9AFA
 248+ 9AFA 2A C8 8B     8 ld hl,(Posicion_actual)
 249+ 9AFD CD 01 9B     	call DESPLZ_DER
 250+ 9B00 C9           2 ret
 251+ 9B01
 252+ 9B01              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B01              ;
 254+ 9B01              ;	22/9/22
 255+ 9B01              ;
 256+ 9B01
 257+ 9B01 CD 10 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B04 CD 5C 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B07 CD 85 9B         call Ciclo_completo
 260+ 9B0A 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B0D CB FE        	set 7,(hl)
 262+ 9B0F C9           	ret
 263+ 9B10
 264+ 9B10              ; ******************************************************************************************************************************************************************************************
 265+ 9B10              ;	15/02/23
 266+ 9B10              ;
 267+ 9B10
 268+ 9B10 3A DE 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B13 47           	ld b,a
 270+ 9B14 2A D1 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B17 23           1 inc hl
 272+ 9B18 23           	inc hl
 273+ 9B19 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B1B 22 D1 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B1E CD BB 90     	call Extrae_address
 276+ 9B21 22 CA 8B     	ld (Puntero_objeto),hl
 277+ 9B24
 278+ 9B24              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B24
 280+ 9B24              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B24              ; Cuántos movimientos hemos hecho ??
 282+ 9B24              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B24
 284+ 9B24 2A CD 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B27 EB           	ex de,hl
 286+ 9B28 A7           	and a
 287+ 9B29 ED 52        	sbc hl,de
 288+ 9B2B CB 3D        	srl l
 289+ 9B2D 3E 08        6 ld a,8
 290+ 9B2F 95           	sub l
 291+ 9B30 30 1E        	jr nc,3F
 292+ 9B32
 293+ 9B32              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B32              ; B="0".
 295+ 9B32
 296+ 9B32 04           4 inc b
 297+ 9B33 3C           	inc a
 298+ 9B34 20 FC        	jr nz,4B
 299+ 9B36 78           	ld a,b
 300+ 9B37 08           	ex af,af
 301+ 9B38 2A CD 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B3B 23           5 inc hl
 303+ 9B3C 23           	inc hl
 304+ 9B3D 10 FC        	djnz 5B
 305+ 9B3F 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B42 CD BB 90     	call Extrae_address
 307+ 9B45 22 CA 8B     	ld (Puntero_objeto),hl
 308+ 9B48
 309+ 9B48              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B48              ; _(Posicion_actual).
 311+ 9B48
 312+ 9B48 21 C8 8B     	ld hl,Posicion_actual
 313+ 9B4B 34           	inc (hl)
 314+ 9B4C 08               ex af,af
 315+ 9B4D 6F           	ld l,a
 316+ 9B4E 18 DD        	jr 6B
 317+ 9B50
 318+ 9B50              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B50
 320+ 9B50 47           3 ld b,a
 321+ 9B51 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B54 23           2 inc hl
 323+ 9B55 23           	inc hl
 324+ 9B56 10 FC        	djnz 2B
 325+ 9B58 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B5B C9           8 ret
 327+ 9B5C
 328+ 9B5C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B5C              ;
 330+ 9B5C              ;	24/7/22
 331+ 9B5C              ;
 332+ 9B5C              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B5C              ;
 334+ 9B5C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B5C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B5C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B5C
 338+ 9B5C 3A CC 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B5F A7           	and a
 340+ 9B60 20 1F        	jr nz,1F
 341+ 9B62 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B64 32 CC 8B         ld (CTRL_DESPLZ),a
 343+ 9B67
 344+ 9B67 21 C7 8B     	ld hl,Columns
 345+ 9B6A 34           	inc (hl)
 346+ 9B6B 3A D7 8B     	ld a,(Cuad_objeto)
 347+ 9B6E E6 01        	and 1
 348+ 9B70 28 0F        	jr z,1F
 349+ 9B72 2A C8 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B75 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B76 22 C8 8B     	ld (Posicion_actual),hl
 352+ 9B79 CD DA 94     	call Genera_coordenadas
 353+ 9B7C CD E1 9C     	call Inc_CTRL_DESPLZ
 354+ 9B7F 18 03        	jr 2F
 355+ 9B81 CD E1 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B84 C9           2 ret
 357+ 9B85
 358+ 9B85              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B85              ;
 360+ 9B85              ;	24/7/22
 361+ 9B85              ;
 362+ 9B85              ;	Ciclo_completo.
 363+ 9B85              ;
 364+ 9B85              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B85              ;
 366+ 9B85              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B85              ; 	Decrementamos (Columns).
 368+ 9B85              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B85              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B85
 371+ 9B85
 372+ 9B85 3A CC 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B88 FE FF        	cp $ff
 374+ 9B8A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B8C E6 F0        	and $f0
 376+ 9B8E 20 28        	jr nz,3F
 377+ 9B90
 378+ 9B90              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B90
 380+ 9B90 3A CC 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B93 47           	ld b,a
 382+ 9B94 3E F8        	ld a,$f8
 383+ 9B96 80           	add b
 384+ 9B97 32 CC 8B     	ld (CTRL_DESPLZ),a
 385+ 9B9A 18 1C        	jr 3F
 386+ 9B9C 21 C7 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B9F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA0 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA1 32 CC 8B     	ld (CTRL_DESPLZ),a
 390+ 9BA4 3A D7 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA7 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BA9 20 0A        	jr nz,2F
 393+ 9BAB 2A C8 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BAE 23           	inc hl
 395+ 9BAF 22 C8 8B     	ld (Posicion_actual),hl
 396+ 9BB2 CD DA 94     	call Genera_coordenadas
 397+ 9BB5
 398+ 9BB5              ; Inicia el puntero de Sprite.
 399+ 9BB5
 400+ 9BB5 CD D0 90     2 call Inicia_puntero_objeto_der
 401+ 9BB8 C9           3 ret
 402+ 9BB9
 403+ 9BB9              ; ******************************************************************************************************************************************************************************************
 404+ 9BB9              ;
 405+ 9BB9              ;	15/02/23
 406+ 9BB9              ;
 407+ 9BB9              ;	Mov_left.
 408+ 9BB9              ;
 409+ 9BB9              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BB9              ;
 411+ 9BB9              Mov_left
 412+ 9BB9
 413+ 9BB9 21 C5 8B     	ld hl,Ctrl_0
 414+ 9BBC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BBE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BBE              ; 																	; _ en el caso de que no lo haya.
 417+ 9BBE 3A C5 8B     	ld a,(Ctrl_0)
 418+ 9BC1 CB 77        	bit 6,a
 419+ 9BC3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC5
 421+ 9BC5 CD DB 9C     	call Stop_Amadeus_left
 422+ 9BC8 C8           	ret z
 423+ 9BC9 20 4A        	jr nz,8F
 424+ 9BCB
 425+ 9BCB 3A B9 8B     11 ld a,(Coordenada_X)
 426+ 9BCE A7           	and a
 427+ 9BCF 20 44        	jr nz,8F
 428+ 9BD1
 429+ 9BD1 3A CC 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD7
 433+ 9BD7              ; ---------- ---------- ----------
 434+ 9BD7
 435+ 9BD7 3A DD 8B     	ld a,(Vel_left)
 436+ 9BDA FE 02        	cp 2
 437+ 9BDC 28 0F        	jr z,1F
 438+ 9BDE 38 04        	jr c,6F
 439+ 9BE0 FE 04        	cp 4
 440+ 9BE2 28 12        	jr z,7F
 441+ 9BE4
 442+ 9BE4              ; ---------- ---------- ----------
 443+ 9BE4
 444+ 9BE4 3A CC 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BE7 FE F8        	cp $f8
 446+ 9BE9 20 2A        	jr nz,8F
 447+ 9BEB 18 10        	jr 4F
 448+ 9BED 3A CC 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF0 FE F9        	cp $f9
 450+ 9BF2 20 21        	jr nz,8F
 451+ 9BF4 18 07        	jr 4F
 452+ 9BF6 3A CC 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BF9 FE FB        	cp $fb
 454+ 9BFB 20 18        	jr nz,8F
 455+ 9BFD
 456+ 9BFD              ; ---------- ---------- ----------
 457+ 9BFD
 458+ 9BFD              4
 459+ 9BFD CD 03 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C00              ;	call Reinicio
 461+ 9C00
 462+ 9C00              ; ---------- ---------- ----------
 463+ 9C00
 464+ 9C00 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C02 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C03
 467+ 9C03              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C03              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C03
 470+ 9C03 CD 1C 9C     	call DESPLZ_IZQ
 471+ 9C06 C1           	pop bc
 472+ 9C07 10 F9        	djnz 5B
 473+ 9C09 2A C8 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C0C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C0D 22 C8 8B     	ld (Posicion_actual),hl
 476+ 9C10 CD DA 94     	call Genera_coordenadas
 477+ 9C13 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C15
 479+ 9C15              ; ---------- ---------- ----------
 480+ 9C15
 481+ 9C15              ; Movemos, no hay recolocación.
 482+ 9C15
 483+ 9C15 2A C8 8B     8 ld hl,(Posicion_actual)
 484+ 9C18 CD 1C 9C     	call DESPLZ_IZQ
 485+ 9C1B C9           2 ret
 486+ 9C1C
 487+ 9C1C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C1C              ;
 489+ 9C1C              ;	22/9/22
 490+ 9C1C
 491+ 9C1C              DESPLZ_IZQ
 492+ 9C1C
 493+ 9C1C CD 2B 9C     	call Desplaza_izquierda
 494+ 9C1F CD 77 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C22 CD 9F 9C     	call Ciclo_completo_2
 496+ 9C25 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C28 CB BE        	res 7,(hl)
 498+ 9C2A C9           	ret
 499+ 9C2B
 500+ 9C2B              Desplaza_izquierda
 501+ 9C2B
 502+ 9C2B 3A DD 8B     	ld a,(Vel_left)
 503+ 9C2E 47           	ld b,a
 504+ 9C2F 2A D3 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C32 23           1 inc hl
 506+ 9C33 23           	inc hl
 507+ 9C34 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C36 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C39 CD BB 90     	call Extrae_address
 510+ 9C3C 22 CA 8B     	ld (Puntero_objeto),hl
 511+ 9C3F
 512+ 9C3F              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C3F
 514+ 9C3F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C3F              ; Cuántos movimientos hemos hecho ??
 516+ 9C3F              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C3F
 518+ 9C3F 2A CF 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C42 EB           	ex de,hl
 520+ 9C43 A7           	and a
 521+ 9C44 ED 52        	sbc hl,de
 522+ 9C46 CB 3D        	srl l
 523+ 9C48 3E 08        6 ld a,8
 524+ 9C4A 95           	sub l
 525+ 9C4B 30 1E        	jr nc,3F
 526+ 9C4D
 527+ 9C4D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C4D              ; B="0".
 529+ 9C4D
 530+ 9C4D 04           4 inc b
 531+ 9C4E 3C           	inc a
 532+ 9C4F 20 FC        	jr nz,4B
 533+ 9C51 78           	ld a,b
 534+ 9C52 08           	ex af,af
 535+ 9C53 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C56 23           5 inc hl
 537+ 9C57 23           	inc hl
 538+ 9C58 10 FC        	djnz 5B
 539+ 9C5A 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C5D CD BB 90     	call Extrae_address
 541+ 9C60 22 CA 8B     	ld (Puntero_objeto),hl
 542+ 9C63
 543+ 9C63              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C63              ; _(Posicion_actual).
 545+ 9C63
 546+ 9C63 21 C8 8B     	ld hl,Posicion_actual
 547+ 9C66 35           	dec (hl)
 548+ 9C67 08           	ex af,af
 549+ 9C68 6F           	ld l,a
 550+ 9C69 18 DD        	jr 6B
 551+ 9C6B
 552+ 9C6B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C6B
 554+ 9C6B 47           3 ld b,a
 555+ 9C6C 2A CD 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C6F 23           2 inc hl
 557+ 9C70 23           	inc hl
 558+ 9C71 10 FC        	djnz 2B
 559+ 9C73 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C76 C9           8 ret
 561+ 9C77
 562+ 9C77              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C77              ;
 564+ 9C77              ;	modifica_parametros_1er_DESPLZ
 565+ 9C77              ;
 566+ 9C77              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C77              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C77              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C77
 570+ 9C77 3A CC 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C7A A7           	and a
 572+ 9C7B 20 1E        	jr nz,1F
 573+ 9C7D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C7E 32 CC 8B         ld (CTRL_DESPLZ),a
 575+ 9C81 21 C7 8B     	ld hl,Columns
 576+ 9C84 34           	inc (hl)
 577+ 9C85 3A D7 8B     	ld a,(Cuad_objeto)
 578+ 9C88 E6 01        	and 1
 579+ 9C8A 20 0F        	jr nz,1F
 580+ 9C8C 2A C8 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C8F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C90 22 C8 8B     	ld (Posicion_actual),hl
 583+ 9C93 CD DA 94     	call Genera_coordenadas
 584+ 9C96 CD F2 9C     	call Dec_CTRL_DESPLZ
 585+ 9C99 18 03        	jr 2F
 586+ 9C9B CD F2 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C9E C9           2 ret
 588+ 9C9F
 589+ 9C9F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C9F
 591+ 9C9F 3A CC 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA2 FE F7        	cp $f7
 593+ 9CA4 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA6 30 2C        	jr nc,3F
 595+ 9CA8
 596+ 9CA8              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CA8
 598+ 9CA8 06 00        	ld b,0
 599+ 9CAA 04           4 inc b
 600+ 9CAB 3C           	inc a
 601+ 9CAC FE F7        	cp $f7
 602+ 9CAE 20 FA        	jr nz,4B
 603+ 9CB0 3E FF        	ld a,$ff
 604+ 9CB2 90           	sub b
 605+ 9CB3 32 CC 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB6 18 1C        	jr 3F
 607+ 9CB8
 608+ 9CB8              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CB8
 610+ 9CB8 21 C7 8B     1 ld hl,Columns
 611+ 9CBB 35           	dec (hl)
 612+ 9CBC AF           	xor a
 613+ 9CBD 32 CC 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC0 3A D7 8B     	ld a,(Cuad_objeto)
 615+ 9CC3 E6 01        	and 1
 616+ 9CC5 28 0A        	jr z,2F
 617+ 9CC7 2A C8 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CCA 2B           	dec hl
 619+ 9CCB 22 C8 8B     	ld (Posicion_actual),hl
 620+ 9CCE CD DA 94     	call Genera_coordenadas
 621+ 9CD1
 622+ 9CD1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD1
 624+ 9CD1 CD E3 90     2 call Inicia_puntero_objeto_izq
 625+ 9CD4 C9           3 ret
 626+ 9CD5
 627+ 9CD5              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD5              ;
 629+ 9CD5              ;	19/10/22
 630+ 9CD5              ;
 631+ 9CD5              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD5              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD5
 634+ 9CD5 3A B9 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CD8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CDA C9           	ret
 637+ 9CDB
 638+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CDB              ;
 640+ 9CDB              ;	19/10/22
 641+ 9CDB              ;
 642+ 9CDB              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CDB              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CDB
 645+ 9CDB 3A B9 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CDE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE0 C9           	ret
 648+ 9CE1
 649+ 9CE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE1              ;
 651+ 9CE1              ;	24/7/22
 652+ 9CE1              ;
 653+ 9CE1              ;	Inc_CTRL_DESPLZ
 654+ 9CE1              ;
 655+ 9CE1              ;
 656+ 9CE1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE1
 658+ 9CE1 21 CC 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE4 3A DE 8B     	ld a,(Vel_right)
 660+ 9CE7 A7           	and a
 661+ 9CE8 28 06        	jr z,1F
 662+ 9CEA 47           	ld b,a
 663+ 9CEB 34           3 inc (hl)
 664+ 9CEC 10 FD        	djnz 3B
 665+ 9CEE 18 01        	jr 2F
 666+ 9CF0 34           1 inc (hl)
 667+ 9CF1 C9           2 ret
 668+ 9CF2
 669+ 9CF2              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF2              ;
 671+ 9CF2              ;	5/2/23
 672+ 9CF2              ;
 673+ 9CF2              ;	Dec_CTRL_DESPLZ
 674+ 9CF2              ;
 675+ 9CF2              ;
 676+ 9CF2              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF2
 678+ 9CF2 21 CC 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF5 3A DD 8B     	ld a,(Vel_left)
 680+ 9CF8 A7           	and a
 681+ 9CF9 28 06        	jr z,1F
 682+ 9CFB 47           	ld b,a
 683+ 9CFC 35           3 dec (hl)
 684+ 9CFD 10 FD        	djnz 3B
 685+ 9CFF 18 01        	jr 2F
 686+ 9D01 35           1 dec (hl)
 687+ 9D02 C9           2 ret
 688+ 9D03
 689+ 9D03              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D03
 691+ 9D03 2A C8 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D06 01 1F 00     	ld bc,31
 693+ 9D09 A7           	and a
 694+ 9D0A ED 4A        	adc hl,bc
 695+ 9D0C 22 C8 8B     	ld (Posicion_actual),hl
 696+ 9D0F 21 C5 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D12 CB C6        	set 0,(hl)
 698+ 9D14 C9           	ret
 699+ 9D15
 700+ 9D15              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D15
 702+ 9D15 2A C8 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D18 01 1F 00     	ld bc,31
 704+ 9D1B A7           	and a
 705+ 9D1C ED 42        	sbc hl,bc
 706+ 9D1E 22 C8 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D21 21 C5 8B     	ld hl,Ctrl_0
 708+ 9D24 CB CE        	set 1,(hl)
 709+ 9D26 C9           	ret
 710+ 9D27
 711+ 9D27              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D27
 713+ 9D27 24           Reaparece_abajo inc h
 714+ 9D28 01 E0 17     	ld bc,$17e0
 715+ 9D2B A7           	and a
 716+ 9D2C ED 4A        	adc hl,bc
 717+ 9D2E 22 C8 8B     	ld (Posicion_actual),hl
 718+ 9D31 21 C5 8B     	ld hl,Ctrl_0
 719+ 9D34 CB D6        	set 2,(hl)
 720+ 9D36 C9           	ret
 721+ 9D37
 722+ 9D37              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D37
 724+ 9D37 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D3A A7           	and a
 726+ 9D3B ED 42        	sbc hl,bc
 727+ 9D3D 22 C8 8B     	ld (Posicion_actual),hl
 728+ 9D40 21 C5 8B     	ld hl,Ctrl_0
 729+ 9D43 CB DE        	set 3,(hl)
 730+ 9D45 C9           	ret
 731+ 9D46
 732+ 9D46              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D46              ;
 734+ 9D46              ;	15/07/23
 735+ 9D46
 736+ 9D46              Reinicio
 737+ 9D46
 738+ 9D46              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D46
 740+ 9D46 AF           	xor a
 741+ 9D47 21 ED 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D4A CD 68 9D     	call Limpia_contenido_hl
 743+ 9D4D
 744+ 9D4D 21 C8 8B     	ld hl,Posicion_actual
 745+ 9D50 CD 68 9D     	call Limpia_contenido_hl
 746+ 9D53
 747+ 9D53 CD BC 92     	call Inicializa_Puntero_indice_mov
 748+ 9D56 CD 67 9E     	call Inicia_Puntero_mov
 749+ 9D59
 750+ 9D59 21 EF 8B     	ld hl,Incrementa_puntero
 751+ 9D5C 06 05        	ld b,5
 752+ 9D5E 77           1 ld (hl),a
 753+ 9D5F 23           	inc hl
 754+ 9D60 10 FC        	djnz 1B
 755+ 9D62
 756+ 9D62 21 C4 8B     	ld hl,Ctrl_2
 757+ 9D65 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D67
 759+ 9D67 C9           	ret
 760+ 9D68
 761+ 9D68 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D69 23           	inc hl
 763+ 9D6A 77           	ld (hl),a
 764+ 9D6B C9           	ret
 765+ 9D6C
 766+ 9D6C              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D6C              ;
 768+ 9D6C              ;	18/6/24
 769+ 9D6C              ;
 770+ 9D6C
 771+ 9D6C              Amadeus_a_izquierda
 772+ 9D6C
 773+ 9D6C              ;	Actualiza contador de movimientos.
 774+ 9D6C
 775+ 9D6C 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D6F 35           	dec (hl)
 777+ 9D70 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D72
 779+ 9D72 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D75 2B           	dec hl
 781+ 9D76 2B           	dec hl
 782+ 9D77 2B           	dec hl
 783+ 9D78 2B           	dec hl
 784+ 9D79 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D7C
 786+ 9D7C 21 2D 8C     	ld hl,Ctrl_3
 787+ 9D7F CB EE        	set 5,(hl)
 788+ 9D81
 789+ 9D81 C9           	ret
 790+ 9D82
 791+ 9D82 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D83 C9           	ret
 793+ 9D84
 794+ 9D84
 795+ 9D84              Amadeus_a_derecha
 796+ 9D84
 797+ 9D84              ;	Actualiza contador de movimientos.
 798+ 9D84
 799+ 9D84 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D87 34           	inc (hl)
 801+ 9D88 3E 7A        	ld a,$7a
 802+ 9D8A BE           	cp (hl)
 803+ 9D8B 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D8D
 805+ 9D8D 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D90 23           	inc hl
 807+ 9D91 23           	inc hl
 808+ 9D92 23           	inc hl
 809+ 9D93 23           	inc hl
 810+ 9D94 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D97
 812+ 9D97 21 2D 8C     	ld hl,Ctrl_3
 813+ 9D9A CB EE        	set 5,(hl)
 814+ 9D9C C9           	ret
 815+ 9D9D
 816+ 9D9D 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D9E C9           	ret
# file closed: Direcciones.asm
2052  9D9F              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D9F              ; ----- ----- ----- ----- -----
   2+ 9D9F              ;
   3+ 9D9F              ;   28/12/23
   4+ 9D9F
   5+ 9D9F              Movimiento
   6+ 9D9F
   7+ 9D9F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D9F
   9+ 9D9F 3A C4 8B         ld a,(Ctrl_2)
  10+ 9DA2 CB 57            bit 2,a
  11+ 9DA4 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA6
  13+ 9DA6 2A EB 8B         ld hl,(Puntero_mov)
  14+ 9DA9 7E               ld a,(hl)
  15+ 9DAA
  16+ 9DAA              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DAA
  18+ 9DAA              Inicia_desplazamiento.
  19+ 9DAA
  20+ 9DAA              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DAA
  22+ 9DAA CD 9D 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DAD
  24+ 9DAD              ; Iniciamos (Repetimos_mov).
  25+ 9DAD
  26+ 9DAD 7E               ld a,(hl)
  27+ 9DAE E6 0F            and $0f
  28+ 9DB0 32 F1 8B         ld (Repetimos_desplazamiento),a
  29+ 9DB3 32 F2 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB6
  31+ 9DB6              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB6
  33+ 9DB6 23               inc hl
  34+ 9DB7 7E               ld a,(hl)
  35+ 9DB8 32 F4 8B         ld (Cola_de_desplazamiento),a
  36+ 9DBB 2B               dec hl
  37+ 9DBC
  38+ 9DBC 21 C4 8B         ld hl,Ctrl_2
  39+ 9DBF CB D6            set 2,(hl)
  40+ 9DC1
  41+ 9DC1              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC1              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC1
  44+ 9DC1              Desplazamiento_iniciado
  45+ 9DC1
  46+ 9DC1 CD 71 9E         call Aplica_desplazamiento
  47+ 9DC4
  48+ 9DC4              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC4
  50+ 9DC4 3A 2D 8C         ld a,(Ctrl_3)
  51+ 9DC7 CB 4F            bit 1,a
  52+ 9DC9 C0               ret nz
  53+ 9DCA
  54+ 9DCA 21 F1 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DCD 35               dec (hl)
  56+ 9DCE C0               ret nz
  57+ 9DCF
  58+ 9DCF              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DCF              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DCF              ; Analiza (Cola_de_desplazamiento).
  61+ 9DCF
  62+ 9DCF 3A F4 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD2 A7               and a
  64+ 9DD3 CC C6 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD6 28 30            jr z,Reinicia_el_movimiento
  66+ 9DD8
  67+ 9DD8 FE FF            cp $ff
  68+ 9DDA 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DDC
  70+ 9DDC FE FE            cp $fe
  71+ 9DDE CC 4B 9E         call z,Fijamos_bucle
  72+ 9DE1 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE3
  74+ 9DE3 FE FD            cp $fd
  75+ 9DE5 20 11            jr nz,1F
  76+ 9DE7
  77+ 9DE7              ; ---
  78+ 9DE7              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE7
  80+ 9DE7 3A C4 8B         ld a,(Ctrl_2)
  81+ 9DEA CB 5F            bit 3,a
  82+ 9DEC 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DEE
  84+ 9DEE              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DEE
  86+ 9DEE 21 C4 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF1 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF3
  89+ 9DF3 CD 5C 9E         call Inicia_Repetimos_movimiento
  90+ 9DF6 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DF8              ; ---
  92+ 9DF8
  93+ 9DF8 FE 01        1 cp 1
  94+ 9DFA CA 35 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DFD
  96+ 9DFD 3D               dec a
  97+ 9DFE 32 F4 8B         ld (Cola_de_desplazamiento),a
  98+ 9E01
  99+ 9E01 3A F2 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E04 32 F1 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E07              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E07 C9               ret
 103+ 9E08
 104+ 9E08              Reinicia_el_movimiento
 105+ 9E08
 106+ 9E08 3A C4 8B         ld a,(Ctrl_2)
 107+ 9E0B CB 5F            bit 3,a
 108+ 9E0D 28 1B            jr z,2F
 109+ 9E0F
 110+ 9E0F              ; (Cola_de_desplazamiento)="254".
 111+ 9E0F
 112+ 9E0F 21 F3 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E12 35               dec (hl)
 114+ 9E13 20 15            jr nz,2F
 115+ 9E15
 116+ 9E15              ; Fin de las repeticiones del último movimiento.
 117+ 9E15
 118+ 9E15 21 C4 8B         ld hl,Ctrl_2
 119+ 9E18 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E1A
 121+ 9E1A 2A EB 8B         ld hl,(Puntero_mov)
 122+ 9E1D 23               inc hl
 123+ 9E1E 23               inc hl
 124+ 9E1F 23               inc hl
 125+ 9E20 22 EB 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E23              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E23 7E               ld a,(hl)
 128+ 9E24 32 F4 8B         ld (Cola_de_desplazamiento),a
 129+ 9E27
 130+ 9E27 C3 CF 9D         jp Cola
 131+ 9E2A
 132+ 9E2A CD 67 9E     2 call Inicia_Puntero_mov
 133+ 9E2D
 134+ 9E2D 21 C4 8B         ld hl,Ctrl_2
 135+ 9E30 CB 96            res 2,(hl)
 136+ 9E32
 137+ 9E32 C3 9F 9D         jp Movimiento
 138+ 9E35
 139+ 9E35              Siguiente_desplazamiento
 140+ 9E35
 141+ 9E35              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E35              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E35
 144+ 9E35 21 C4 8B         ld hl,Ctrl_2
 145+ 9E38 CB 96            res 2,(hl)
 146+ 9E3A
 147+ 9E3A 2A EB 8B         ld hl,(Puntero_mov)
 148+ 9E3D 23               inc hl
 149+ 9E3E 23               inc hl
 150+ 9E3F 22 EB 8B         ld (Puntero_mov),hl
 151+ 9E42
 152+ 9E42 7E               ld a,(hl)
 153+ 9E43 A7               and a
 154+ 9E44 CC C6 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E47 CA 08 9E         jp z,Reinicia_el_movimiento
 156+ 9E4A
 157+ 9E4A C9               ret
 158+ 9E4B
 159+ 9E4B              ; Subrutinas -----------------------------------------
 160+ 9E4B              ; ---------- --------- --------- ---------- ----------
 161+ 9E4B              ;
 162+ 9E4B              ;   24/07/23
 163+ 9E4B              ;
 164+ 9E4B              ;   Fijamos_bucle
 165+ 9E4B              ;
 166+ 9E4B              ;
 167+ 9E4B
 168+ 9E4B              Fijamos_bucle
 169+ 9E4B
 170+ 9E4B 3A EF 8B         ld a,(Incrementa_puntero)
 171+ 9E4E 3C               inc a
 172+ 9E4F 32 F0 8B         ld (Incrementa_puntero_backup),a
 173+ 9E52
 174+ 9E52 CD C6 9E         call Incrementa_Puntero_indice_mov
 175+ 9E55 2A E9 8B         ld hl,(Puntero_indice_mov)
 176+ 9E58 22 ED 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E5B C9               ret
 178+ 9E5C
 179+ 9E5C              ; ---------- --------- --------- ---------- ----------
 180+ 9E5C              ;
 181+ 9E5C              ;   07/7/23
 182+ 9E5C              ;
 183+ 9E5C              ;   Inicia_Repetimos_movimiento
 184+ 9E5C              ;
 185+ 9E5C              ;
 186+ 9E5C
 187+ 9E5C              Inicia_Repetimos_movimiento
 188+ 9E5C
 189+ 9E5C              ; Iniciamos (Repetimos_movimiento).
 190+ 9E5C
 191+ 9E5C DD 2A EB 8B      ld ix,(Puntero_mov)
 192+ 9E60 DD 7E 02         ld a,(ix+2)
 193+ 9E63 32 F3 8B         ld (Repetimos_movimiento),a
 194+ 9E66
 195+ 9E66 C9               ret
 196+ 9E67
 197+ 9E67              ; ---------- --------- --------- ---------- ----------
 198+ 9E67              ;
 199+ 9E67              ;   26/6/23
 200+ 9E67              ;
 201+ 9E67              ;   Inicia_Puntero_mov
 202+ 9E67              ;
 203+ 9E67              ;
 204+ 9E67
 205+ 9E67 2A E9 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E6A CD BB 90         call Extrae_address
 207+ 9E6D 22 EB 8B         ld (Puntero_mov),hl
 208+ 9E70 C9               ret
 209+ 9E71
 210+ 9E71              ; ---------- --------- --------- ---------- ----------
 211+ 9E71              ;
 212+ 9E71              ;   27/06/23
 213+ 9E71              ;
 214+ 9E71              ;   Aplica_movimiento.
 215+ 9E71
 216+ 9E71              Aplica_desplazamiento
 217+ 9E71
 218+ 9E71              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E71
 220+ 9E71 2A EB 8B         ld hl, (Puntero_mov)
 221+ 9E74
 222+ 9E74 7E               ld a,(hl)
 223+ 9E75 E6 F0            and $f0
 224+ 9E77 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E78
 226+ 9E78 CB 7E            bit 7,(hl)
 227+ 9E7A 28 03            jr z,1F
 228+ 9E7C CD 53 9A         call Mov_up
 229+ 9E7F 2A EB 8B     1 ld hl, (Puntero_mov)
 230+ 9E82 CB 76            bit 6,(hl)
 231+ 9E84 28 03            jr z,2F
 232+ 9E86 CD 1A 9A         call Mov_down
 233+ 9E89
 234+ 9E89              ; Se ha aplicado reinicio ???
 235+ 9E89              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E89
 237+ 9E89              ;    ld a,(Ctrl_3)
 238+ 9E89              ;    bit 1,a
 239+ 9E89              ;    ret nz
 240+ 9E89
 241+ 9E89 2A EB 8B     2 ld hl, (Puntero_mov)
 242+ 9E8C CB 6E            bit 5,(hl)
 243+ 9E8E 28 03            jr z,3F
 244+ 9E90 CD B9 9B         call Mov_left
 245+ 9E93 2A EB 8B     3 ld hl, (Puntero_mov)
 246+ 9E96 CB 66            bit 4,(hl)
 247+ 9E98 C8               ret z
 248+ 9E99 CD 96 9A         call Mov_right
 249+ 9E9C C9               ret
 250+ 9E9D
 251+ 9E9D              ; ---------- --------- --------- ---------- ----------
 252+ 9E9D              ;
 253+ 9E9D              ;   26/06/23
 254+ 9E9D              ;
 255+ 9E9D              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E9D
 257+ 9E9D              Ajusta_velocidad_desplazamiento
 258+ 9E9D
 259+ 9E9D              ; 1er byte de la cadena de movimiento.
 260+ 9E9D              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E9D
 262+ 9E9D CD BB 9E         call Extrae_nibble_alto
 263+ 9EA0
 264+ 9EA0 32 DF 8B         ld (Vel_up),a
 265+ 9EA3 79               ld a,c
 266+ 9EA4 E6 0F            and $0f
 267+ 9EA6 32 E0 8B         ld (Vel_down),a
 268+ 9EA9
 269+ 9EA9              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EA9              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EA9
 272+ 9EA9 23               inc hl
 273+ 9EAA CD BB 9E         call Extrae_nibble_alto
 274+ 9EAD
 275+ 9EAD 32 DD 8B         ld (Vel_left),a
 276+ 9EB0 79               ld a,c
 277+ 9EB1 E6 0F            and $0f
 278+ 9EB3 32 DE 8B         ld (Vel_right),a
 279+ 9EB6
 280+ 9EB6              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB6
 282+ 9EB6 23               inc hl
 283+ 9EB7 22 EB 8B         ld (Puntero_mov),hl
 284+ 9EBA C9               ret
 285+ 9EBB
 286+ 9EBB 06 04        Extrae_nibble_alto ld b,4
 287+ 9EBD 7E               ld a,(hl)
 288+ 9EBE 4F               ld c,a
 289+ 9EBF E6 F0            and $f0
 290+ 9EC1 CB 3F        1 srl a
 291+ 9EC3 10 FC            djnz 1B
 292+ 9EC5 C9               ret
 293+ 9EC6
 294+ 9EC6              ; ---------- --------- --------- ---------- ----------
 295+ 9EC6              ;
 296+ 9EC6              ;   5/7/23
 297+ 9EC6              ;
 298+ 9EC6              ;   Incrementa_Puntero_indice_mov
 299+ 9EC6
 300+ 9EC6              Incrementa_Puntero_indice_mov
 301+ 9EC6
 302+ 9EC6 21 EF 8B         ld hl,Incrementa_puntero
 303+ 9EC9 34               inc (hl)
 304+ 9ECA
 305+ 9ECA 2A E9 8B         ld hl,(Puntero_indice_mov)
 306+ 9ECD 01 02 00         ld bc,2
 307+ 9ED0 A7               and a
 308+ 9ED1 09               add hl,bc
 309+ 9ED2 22 E9 8B         ld (Puntero_indice_mov),hl
 310+ 9ED5
 311+ 9ED5 7E               ld a,(hl)
 312+ 9ED6 A7               and a
 313+ 9ED7
 314+ 9ED7              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED7
 316+ 9ED7              ;    jr z,$
 317+ 9ED7
 318+ 9ED7              ;! Reinicia el Patrón de movimiento.
 319+ 9ED7
 320+ 9ED7 CC DC 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EDA
 322+ 9EDA AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EDB
 324+ 9EDB C9               ret
 325+ 9EDC
 326+ 9EDC              ; ---------- --------- --------- ---------- ----------
 327+ 9EDC              ;
 328+ 9EDC              ;   15/01/24
 329+ 9EDC              ;
 330+ 9EDC              ;   Inicializa_Puntero_indice_mov
 331+ 9EDC
 332+ 9EDC              Inicializa_Puntero_indice_mov_2
 333+ 9EDC
 334+ 9EDC              ; Existe etiqueta de bucle principal???
 335+ 9EDC
 336+ 9EDC 2A ED 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EDF 24               inc h
 338+ 9EE0 25               dec h
 339+ 9EE1 28 05            jr z,2F
 340+ 9EE3
 341+ 9EE3 22 E9 8B         ld (Puntero_indice_mov),hl
 342+ 9EE6 18 14            jr 3F
 343+ 9EE8
 344+ 9EE8              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EE8
 346+ 9EE8 3A EF 8B     2 ld a,(Incrementa_puntero)
 347+ 9EEB 47               ld b,a
 348+ 9EEC
 349+ 9EEC 2A E9 8B         ld hl,(Puntero_indice_mov)
 350+ 9EEF 2B           1 dec hl
 351+ 9EF0 2B               dec hl
 352+ 9EF1 10 FC            djnz 1B
 353+ 9EF3 22 E9 8B         ld (Puntero_indice_mov),hl
 354+ 9EF6
 355+ 9EF6 AF               xor a
 356+ 9EF7 32 EF 8B         ld (Incrementa_puntero),a
 357+ 9EFA 18 06            jr 4F
 358+ 9EFC
 359+ 9EFC 3A F0 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EFF 32 EF 8B         ld (Incrementa_puntero),a
 361+ 9F02 C9           4 ret
 362+ 9F03
 363+ 9F03              ; ----------------------------------------------------------------------
 364+ 9F03              ;
 365+ 9F03              ;   30/01/24
 366+ 9F03              ;
 367+ 9F03              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F03
 369+ 9F03 3A B8 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F06 CD 57 94         call Calcula_salto_en_BC
 371+ 9F09 21 E1 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F0C A7               and a
 373+ 9F0D ED 4A            adc hl,bc
 374+ 9F0F C9               ret
 375+ 9F10
 376+ 9F10              ; ----------------------------------------------------------------------
 377+ 9F10              ;
 378+ 9F10              ;   30/01/24
 379+ 9F10              ;
 380+ 9F10              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F10              ;
 382+ 9F10              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F10
 384+ 9F10 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F11 23               inc hl
 386+ 9F12 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F13 69               ld l,c
 388+ 9F14 60               ld h,b
 389+ 9F15 22 C1 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F18 C9               ret
 391+ 9F19
# file closed: Movimiento.asm
2053  9F19              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F19              ; --------------------------------------------------------------------------------------
   2+ 9F19              ;
   3+ 9F19              ;   25/10/24
   4+ 9F19              ;
   5+ 9F19
   6+ 9F19              Pinta_disparos_Entidades
   7+ 9F19
   8+ 9F19 ED 73 05 8C      ld (Stack),sp
   9+ 9F1D ED 7B 17 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F21
  11+ 9F21 3E 02            ld a,2
  12+ 9F23 08               ex af,af
  13+ 9F24
  14+ 9F24 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F26              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F26              ;                                     _ No encontraría "0".
  17+ 9F26 FD E1        4 pop iy
  18+ 9F28 D1               pop de                          ; 1er .db IYL
  19+ 9F29              ;                                   ; 2º  .db IYH
  20+ 9F29              ;                                   ; 3er .db E.
  21+ 9F29              ;   Album vacío ???
  22+ 9F29
  23+ 9F29 FD 7D            ld a,iyl
  24+ 9F2B FD 84            add iyh
  25+ 9F2D 83               add e
  26+ 9F2E 28 1F            jr z,1F
  27+ 9F30
  28+ 9F30              ;   Imprime album, (contiene datos).
  29+ 9F30
  30+ 9F30 3B               dec sp
  31+ 9F31
  32+ 9F31 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F32
  34+ 9F32              ; Imprime el 1er scanline del disparo.
  35+ 9F32
  36+ 9F32 FD 7D            ld a,iyl
  37+ 9F34 AE               xor (hl)
  38+ 9F35 77               ld (hl),a
  39+ 9F36
  40+ 9F36 2C               inc l
  41+ 9F37
  42+ 9F37 FD 7C            ld a,iyh
  43+ 9F39 AE               xor (hl)
  44+ 9F3A 77               ld (hl),a
  45+ 9F3B
  46+ 9F3B 2C               inc l
  47+ 9F3C
  48+ 9F3C 7B               ld a,e
  49+ 9F3D AE               xor (hl)
  50+ 9F3E 77               ld (hl),a
  51+ 9F3F
  52+ 9F3F              ; Imprime el 2º scanline del disparo.
  53+ 9F3F
  54+ 9F3F E1               pop hl
  55+ 9F40
  56+ 9F40 FD 7D            ld a,iyl
  57+ 9F42 AE               xor (hl)
  58+ 9F43 77               ld (hl),a
  59+ 9F44
  60+ 9F44 2C               inc l
  61+ 9F45
  62+ 9F45 FD 7C            ld a,iyh
  63+ 9F47 AE               xor (hl)
  64+ 9F48 77               ld (hl),a
  65+ 9F49
  66+ 9F49 2C               inc l
  67+ 9F4A
  68+ 9F4A 7B               ld a,e
  69+ 9F4B AE               xor (hl)
  70+ 9F4C 77               ld (hl),a
  71+ 9F4D
  72+ 9F4D 10 D7            djnz 4B
  73+ 9F4F
  74+ 9F4F 08           1 ex af,af
  75+ 9F50 3D               dec a
  76+ 9F51 20 05            jr nz,2F
  77+ 9F53
  78+ 9F53 ED 7B 05 8C      ld sp,(Stack)
  79+ 9F57 C9               ret
  80+ 9F58
  81+ 9F58 ED 7B 15 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F5C 08               ex af,af
  83+ 9F5D 18 C5            jr 3B
  84+ 9F5F
  85+ 9F5F              ; --------------------------------------------------------------------------------------
  86+ 9F5F              ;
  87+ 9F5F              ;   30/10/24
  88+ 9F5F              ;
  89+ 9F5F
  90+ 9F5F              Motor_de_disparos_entidades
  91+ 9F5F
  92+ 9F5F 3A 1D 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F62 FE 07            cp 7
  94+ 9F64 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F65
  96+ 9F65 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F67 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F6A
  99+ 9F6A CD BB 90     1 call Extrae_address
 100+ 9F6D 1C               inc e
 101+ 9F6E 1C               inc e
 102+ 9F6F ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F73
 104+ 9F73               ; Caja vacía ???
 105+ 9F73
 106+ 9F73 2D               dec l
 107+ 9F74 7E               ld a,(hl)
 108+ 9F75 A7               and a
 109+ 9F76 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F78
 111+ 9F78              ; --- Trabajamos con caja:
 112+ 9F78
 113+ 9F78 2C               inc l
 114+ 9F79
 115+ 9F79              ; --- Existe posibilidad de impacto ???
 116+ 9F79
 117+ 9F79 CB 46            bit 0,(hl)
 118+ 9F7B C4 BB 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F7E 20 37            jr nz,3F
 120+ 9F80
 121+ 9F80 CD 42 A0         call Rota_disparo_si_procede
 122+ 9F83
 123+ 9F83              ; ------------------------------------------------------------
 124+ 9F83
 125+ 9F83 2D               dec l
 126+ 9F84 2D               dec l
 127+ 9F85
 128+ 9F85 CD BB 90         call Extrae_address
 129+ 9F88
 130+ 9F88              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F88              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F88
 133+ 9F88 3A 2F 8C         ld a,(Ctrl_5)
 134+ 9F8B CB 57            bit 2,a
 135+ 9F8D 28 09            jr z,4F
 136+ 9F8F
 137+ 9F8F CB 97            res 2,a
 138+ 9F91 32 2F 8C         ld (Ctrl_5),a
 139+ 9F94 2C               inc l
 140+ 9F95 2C               inc l
 141+ 9F96 18 0C            jr 5F
 142+ 9F98
 143+ 9F98 CB 5F        4 bit 3,a
 144+ 9F9A 28 08            jr z,5F
 145+ 9F9C
 146+ 9F9C CB 9F            res 3,a
 147+ 9F9E 32 2F 8C         ld (Ctrl_5),a
 148+ 9FA1 2D               dec l
 149+ 9FA2 2D               dec l
 150+ 9FA3 2D               dec l
 151+ 9FA4
 152+ 9FA4              ; ---------------------------------------------------------------------
 153+ 9FA4
 154+ 9FA4              ;! Velocidad del disparo de entidades.
 155+ 9FA4
 156+ 9FA4 CD D4 99     5 call NextScan
 157+ 9FA7 CD D4 99         call NextScan
 158+ 9FAA
 159+ 9FAA              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FAA
 161+ 9FAA CD 1F A0         call Fin_de_disparo_de_entidad
 162+ 9FAD
 163+ 9FAD EB               ex de,hl
 164+ 9FAE
 165+ 9FAE 73               ld (hl),e
 166+ 9FAF 23               inc hl
 167+ 9FB0 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FB1
 169+ 9FB1 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FB4 18 02            jr 2F
 171+ 9FB6
 172+ 9FB6 C9               ret
 173+ 9FB7
 174+ 9FB7 EB           3 ex de,hl
 175+ 9FB8 10 B0        2 djnz 1B
 176+ 9FBA
 177+ 9FBA C9               ret
 178+ 9FBB
 179+ 9FBB              ; ------------- ------------- ------------
 180+ 9FBB              ;
 181+ 9FBB              ;   1/11/24
 182+ 9FBB
 183+ 9FBB              Comprueba_impacto_con_Amadeus
 184+ 9FBB
 185+ 9FBB              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FBB              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FBB
 188+ 9FBB              ;   Modificamos registros, así que guardamos ...
 189+ 9FBB
 190+ 9FBB C5               push bc
 191+ 9FBC E5               push hl
 192+ 9FBD D5               push de
 193+ 9FBE
 194+ 9FBE 2D               dec l
 195+ 9FBF 2D               dec l
 196+ 9FC0
 197+ 9FC0 CD BB 90         call Extrae_address
 198+ 9FC3
 199+ 9FC3 3A 6E 89         ld a,(CX_Amadeus)
 200+ 9FC6 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FC7
 202+ 9FC7 7D               ld a,l
 203+ 9FC8 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FCA
 205+ 9FCA 06 03            ld b,3
 206+ 9FCC
 207+ 9FCC B9           1 cp c
 208+ 9FCD 28 15            jr z,Coincidencia
 209+ 9FCF 0C               inc c
 210+ 9FD0 10 FA            djnz 1B
 211+ 9FD2
 212+ 9FD2 0D               dec c
 213+ 9FD3 0D               dec c
 214+ 9FD4 0D               dec c
 215+ 9FD5
 216+ 9FD5 3C               inc a
 217+ 9FD6 B9               cp c
 218+ 9FD7 28 0B            jr z,Coincidencia
 219+ 9FD9
 220+ 9FD9 3C               inc a
 221+ 9FDA B9               cp c
 222+ 9FDB 28 07            jr z,Coincidencia
 223+ 9FDD
 224+ 9FDD D1           2 pop de
 225+ 9FDE E1               pop hl
 226+ 9FDF C1               pop bc
 227+ 9FE0
 228+ 9FE0              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FE0
 230+ 9FE0 CB 86            res 0,(hl)
 231+ 9FE2 AF               xor a                       ; Z before RET.
 232+ 9FE3 C9               ret
 233+ 9FE4
 234+ 9FE4              Coincidencia
 235+ 9FE4
 236+ 9FE4              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FE4              ;   Existe posibilidad de impacto.
 238+ 9FE4              ;   Vamos a averiguarlo ...
 239+ 9FE4
 240+ 9FE4 1D               dec e
 241+ 9FE5 1D               dec e
 242+ 9FE6 1D               dec e
 243+ 9FE7
 244+ 9FE7              ; DE en Puntero_objeto del disparo.
 245+ 9FE7              ; HL en Puntero_de_impresión del disparo.
 246+ 9FE7
 247+ 9FE7              ; Comparador:
 248+ 9FE7
 249+ 9FE7 06 03            ld b,3
 250+ 9FE9
 251+ 9FE9 1A           3 ld a,(de)
 252+ 9FEA 4F               ld c,a
 253+ 9FEB A6               and (hl)
 254+ 9FEC B9               cp c
 255+ 9FED 20 06            jr nz,Amadeus_impactado
 256+ 9FEF
 257+ 9FEF 2C               inc l
 258+ 9FF0 1C               inc e
 259+ 9FF1
 260+ 9FF1 10 F6            djnz 3B
 261+ 9FF3
 262+ 9FF3 18 E8            jr 2B
 263+ 9FF5
 264+ 9FF5              Amadeus_impactado
 265+ 9FF5
 266+ 9FF5              ; Borramos disparo.
 267+ 9FF5
 268+ 9FF5 D1               pop de
 269+ 9FF6 E1               pop hl
 270+ 9FF7
 271+ 9FF7 E5               push hl
 272+ 9FF8 D5               push de
 273+ 9FF9
 274+ 9FF9 CD AD A0         call Borra_6_bytes
 275+ 9FFC
 276+ 9FFC 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9FFF 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A000
 279+ A000              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A000
 281+ A000 21 71 89         ld hl,Impacto_Amadeus
 282+ A003 36 01            ld (hl),1
 283+ A005
 284+ A005              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A005              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A005
 287+ A005 3A 72 89         ld a,(p.imp.amadeus)
 288+ A008 FE DE            cp $de
 289+ A00A 20 04            jr nz,1F
 290+ A00C
 291+ A00C 3D               dec a
 292+ A00D 32 72 89         ld (p.imp.amadeus),a
 293+ A010
 294+ A010              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A010
 296+ A010 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A013 21 74 89         ld hl,Pamm_Amadeus
 298+ A016
 299+ A016 73               ld (hl),e
 300+ A017 23               inc hl
 301+ A018 72               ld (hl),d
 302+ A019
 303+ A019 D1               pop de
 304+ A01A E1               pop hl
 305+ A01B C1               pop bc
 306+ A01C
 307+ A01C AF               xor a
 308+ A01D 3C               inc a               ; NZ before RET.
 309+ A01E C9               ret
 310+ A01F
 311+ A01F              ; ------------- ------------- ------------
 312+ A01F              ;
 313+ A01F              ;   31/10/24
 314+ A01F
 315+ A01F              Fin_de_disparo_de_entidad
 316+ A01F
 317+ A01F              ; Estamos en zona de Amadeus ??
 318+ A01F
 319+ A01F 7C               ld a,h
 320+ A020 FE 54            cp $54
 321+ A022 38 0D            jr c,1F
 322+ A024
 323+ A024 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A025
 325+ A025 5D               ld e,l
 326+ A026 54               ld d,h
 327+ A027
 328+ A027 21 E0 57         ld hl,$57e0
 329+ A02A ED 52            sbc hl,de
 330+ A02C
 331+ A02C 38 6F            jr c,Elimina_disparo_entidad
 332+ A02E
 333+ A02E 6B               ld l,e
 334+ A02F 62               ld h,d
 335+ A030
 336+ A030 D1               pop de
 337+ A031
 338+ A031 7C           1 ld a,h
 339+ A032 FE 50            cp $50
 340+ A034 D8               ret c
 341+ A035
 342+ A035 7D               ld a,l
 343+ A036 FE C0            cp $c0
 344+ A038 D8               ret c
 345+ A039
 346+ A039              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A039              ; Así podremos comprobar si hay colisión más adelante.
 348+ A039
 349+ A039 1C               inc e
 350+ A03A 1C               inc e
 351+ A03B
 352+ A03B EB               ex de,hl
 353+ A03C CB C6            set 0,(hl)
 354+ A03E EB               ex de,hl
 355+ A03F
 356+ A03F 1D               dec e
 357+ A040 1D               dec e
 358+ A041
 359+ A041 C9               ret
 360+ A042
 361+ A042              ; ----------------------------------------------------------
 362+ A042              ;
 363+ A042              ;   08/10/24
 364+ A042
 365+ A042              ;   Estructura de un disparo de entidades.
 366+ A042
 367+ A042              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A042              ; 	defw 0											; Puntero de impresión.
 369+ A042              ;	defw 0											; Control.
 370+ A042
 371+ A042              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A042              ;   _de la entidad en el momento de disparar.
 373+ A042
 374+ A042              ;   El byte alto muestra la siguiente información:
 375+ A042              ;
 376+ A042              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A042              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A042              ;
 379+ A042              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A042              ;
 381+ A042              ;                        10xx ..... Izquierda.
 382+ A042              ;                        01xx ..... Derecha.
 383+ A042              ;                        00xx ..... Recto.
 384+ A042
 385+ A042              Rota_disparo_si_procede
 386+ A042
 387+ A042              ;   Nos situamos en el byte alto de (Control).
 388+ A042
 389+ A042 CB 76            bit 6,(hl)
 390+ A044 20 2D            jr nz,Rota_a_derecha
 391+ A046 CB 7E            bit 7,(hl)
 392+ A048 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A049
 394+ A049              Rota_a_izq
 395+ A049
 396+ A049 E5               push hl
 397+ A04A
 398+ A04A 7D               ld a,l
 399+ A04B D6 05            sub 5
 400+ A04D 6F               ld l,a
 401+ A04E
 402+ A04E E5               push hl
 403+ A04F FD E1            pop iy
 404+ A051
 405+ A051 A7               and a
 406+ A052
 407+ A052 FD CB 02 16      rl (iy+02)
 408+ A056 FD CB 01 16      rl (iy+01)
 409+ A05A FD CB 00 16      rl (iy+00)
 410+ A05E
 411+ A05E 30 3B            jr nc,Exit
 412+ A060
 413+ A060              ; Desplazamiento completo hasta Carry.
 414+ A060              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A060
 416+ A060 FD 36 02 03      ld (iy+02),$03
 417+ A064 FD 36 01 00      ld (iy+01),$00
 418+ A068 FD 36 00 00      ld (iy+00),$00
 419+ A06C
 420+ A06C 21 2F 8C         ld hl,Ctrl_5
 421+ A06F CB DE            set 3,(hl)
 422+ A071
 423+ A071 18 28            jr Exit
 424+ A073
 425+ A073              Rota_a_derecha
 426+ A073
 427+ A073 E5               push hl
 428+ A074
 429+ A074 7D               ld a,l
 430+ A075 D6 05            sub 5
 431+ A077 6F               ld l,a
 432+ A078
 433+ A078 E5               push hl
 434+ A079 FD E1            pop iy
 435+ A07B
 436+ A07B A7               and a
 437+ A07C
 438+ A07C FD CB 00 1E      rr (iy+00)
 439+ A080 FD CB 01 1E      rr (iy+01)
 440+ A084 FD CB 02 1E      rr (iy+02)
 441+ A088
 442+ A088 30 11            jr nc,Exit
 443+ A08A
 444+ A08A              ; Desplazamiento completo hasta Carry.
 445+ A08A              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A08A
 447+ A08A FD 36 00 01      ld (iy+00),$01
 448+ A08E FD 36 01 80      ld (iy+01),$80
 449+ A092 FD 36 02 00      ld (iy+02),$00
 450+ A096
 451+ A096 21 2F 8C         ld hl,Ctrl_5
 452+ A099 CB D6            set 2,(hl)
 453+ A09B
 454+ A09B E1           Exit pop hl
 455+ A09C C9               ret
 456+ A09D
 457+ A09D              ; ------------ ----------- ------------
 458+ A09D              ;
 459+ A09D              ;   25/9/24
 460+ A09D
 461+ A09D              Elimina_disparo_entidad
 462+ A09D
 463+ A09D 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0A0 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0A1
 466+ A0A1 E1               pop hl
 467+ A0A2 E5               push hl
 468+ A0A3
 469+ A0A3 2C               inc l
 470+ A0A4 2C               inc l
 471+ A0A5
 472+ A0A5 CD AD A0         call Borra_6_bytes
 473+ A0A8
 474+ A0A8 D1               pop de
 475+ A0A9
 476+ A0A9 21 00 00         ld hl,0
 477+ A0AC
 478+ A0AC C9               ret
 479+ A0AD
 480+ A0AD              ; ----- ----- ----- ----- -----
 481+ A0AD
 482+ A0AD              Borra_6_bytes
 483+ A0AD
 484+ A0AD 16 06            ld d,6                                                    ; Contador
 485+ A0AF AF               xor a                                                     ; Borrador
 486+ A0B0 77           1 ld (hl),a
 487+ A0B1 2D               dec l
 488+ A0B2 15               dec d
 489+ A0B3 20 FB            jr nz,1B
 490+ A0B5
 491+ A0B5 C9               ret
 492+ A0B6
 493+ A0B6              ; --------------------------------------------------------------------------------------
 494+ A0B6              ;
 495+ A0B6              ;   12/10/24
 496+ A0B6              ;
 497+ A0B6
 498+ A0B6              Genera_datos_de_impresion_disparos_Entidades
 499+ A0B6
 500+ A0B6 3E 07            ld a,7
 501+ A0B8 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0B9
 503+ A0B9              ; ---------------
 504+ A0B9
 505+ A0B9              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0B9
 507+ A0B9 21 23 89          ld hl,Indice_de_disparos_entidades
 508+ A0BC
 509+ A0BC CD BB 90     1 call Extrae_address
 510+ A0BF
 511+ A0BF 13               inc de
 512+ A0C0 13               inc de
 513+ A0C1
 514+ A0C1 ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0C5
 516+ A0C5 2D               dec l
 517+ A0C6 7E               ld a,(hl)
 518+ A0C7 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0C8 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0CA
 521+ A0CA              ; ----- ----- ----- -----
 522+ A0CA
 523+ A0CA 2D               dec l
 524+ A0CB CD BB 90         call Extrae_address
 525+ A0CE E5               push hl
 526+ A0CF
 527+ A0CF 1D               dec e
 528+ A0D0
 529+ A0D0 EB               ex de,hl
 530+ A0D1
 531+ A0D1 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0D2 2D               dec l
 533+ A0D3 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0D4 2D               dec l
 535+ A0D5 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0D6
 537+ A0D6 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0D7
 539+ A0D7              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0D7
 541+ A0D7 FD 2A 19 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0DB FD 73 00         ld (iy+0),e
 543+ A0DE FD 70 01         ld (iy+1),b
 544+ A0E1 FD 71 02         ld (iy+2),c
 545+ A0E4
 546+ A0E4 FD 75 03         ld (iy+3),l
 547+ A0E7 FD 74 04         ld (iy+4),h
 548+ A0EA
 549+ A0EA CD D4 99         call NextScan
 550+ A0ED
 551+ A0ED FD 75 05         ld (iy+5),l
 552+ A0F0 FD 74 06         ld (iy+6),h
 553+ A0F3
 554+ A0F3 FD E5            push iy
 555+ A0F5 E1               pop hl
 556+ A0F6
 557+ A0F6 3E 07            ld a,7
 558+ A0F8 85               add l
 559+ A0F9 6F               ld l,a
 560+ A0FA
 561+ A0FA 22 19 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0FD
 563+ A0FD              ; ----- ----- ----- -----
 564+ A0FD
 565+ A0FD              Situa_en_siguiente_caja
 566+ A0FD
 567+ A0FD 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A0FE 3D               dec a
 569+ A0FF C8               ret z
 570+ A100
 571+ A100 08               ex af,af
 572+ A101 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A104 18 B6            jr 1B
 574+ A106
 575+ A106              ; --------------------------------------------------------------------------------------
 576+ A106              ;
 577+ A106              ;   12/10/24
 578+ A106              ;
 579+ A106
 580+ A106              Genera_disparo_de_entidad_maldosa
 581+ A106
 582+ A106              ;   Estructura de un disparo de entidades.
 583+ A106
 584+ A106              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A106              ; 	defw 0											; Puntero de impresión.
 586+ A106              ;	defw 0											; Control.
 587+ A106
 588+ A106              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A106              ;   _de la entidad en el momento de disparar.
 590+ A106
 591+ A106              ;   El byte de control muestra la siguiente información:
 592+ A106
 593+ A106              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A106              ;
 595+ A106              ;                        10xx ..... Izquierda.
 596+ A106              ;                        01xx ..... Derecha.
 597+ A106              ;                        00xx ..... Recto.
 598+ A106
 599+ A106              ;*  Exclusiones.
 600+ A106
 601+ A106              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A106              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A106
 604+ A106 3A 1D 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A109 A7               and a
 606+ A10A C8               ret z
 607+ A10B
 608+ A10B 3A BA 8B         ld a,(Coordenada_y)
 609+ A10E A7               and a
 610+ A10F C8               ret z
 611+ A110
 612+ A110 3D               dec a
 613+ A111 C8               ret z
 614+ A112
 615+ A112 FE 10            cp 16
 616+ A114 D0               ret nc
 617+ A115
 618+ A115              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A115              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A115              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A115
 622+ A115 21 1F 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A118 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A119
 625+ A119              ;   Decrementa el numero de disparos de entidades.
 626+ A119
 627+ A119 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A11C 35               dec (hl)
 629+ A11D
 630+ A11D 21 23 89         ld hl,Indice_de_disparos_entidades
 631+ A120
 632+ A120 CD BB 90     1 call Extrae_address
 633+ A123
 634+ A123 13               inc de
 635+ A124 13               inc de
 636+ A125
 637+ A125 ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A129
 639+ A129              ;   Comprobamos si la caja está vacía.
 640+ A129
 641+ A129 2D               dec l
 642+ A12A 7E               ld a,(hl)
 643+ A12B A7               and a
 644+ A12C 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A12E 2C               inc l
 646+ A12F
 647+ A12F              ;   Caja vacía, vamos a generar un disparo.
 648+ A12F              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A12F
 650+ A12F CD 50 A1         call Genera_byte_inclinacion
 651+ A132
 652+ A132 7E               ld a,(hl)
 653+ A133 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A134
 655+ A134 2D               dec l
 656+ A135
 657+ A135 CD 6C A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A138
 659+ A138 70               ld (hl),b
 660+ A139 2D               dec l
 661+ A13A 71               ld (hl),c
 662+ A13B
 663+ A13B 2D               dec l
 664+ A13C
 665+ A13C              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A13C
 667+ A13C FD 7E 02         ld a,(iy+02)
 668+ A13F 77               ld (hl),a
 669+ A140 2D               dec l
 670+ A141
 671+ A141 FD 7E 01         ld a,(iy+01)
 672+ A144 77               ld (hl),a
 673+ A145 2D               dec l
 674+ A146
 675+ A146 FD 7E 00         ld a,(iy+00)
 676+ A149 77               ld (hl),a
 677+ A14A
 678+ A14A C9               ret
 679+ A14B
 680+ A14B              ;   --- --- ---
 681+ A14B
 682+ A14B              Situa_en_siguiente_disparo
 683+ A14B
 684+ A14B 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A14E 18 D0            jr 1B
 686+ A150
 687+ A150              ; --------------------------------------------------------------------------------------
 688+ A150              ;
 689+ A150              ;   09/10/24
 690+ A150              ;
 691+ A150
 692+ A150              Genera_byte_inclinacion
 693+ A150
 694+ A150              ; Determina tendencia del disparo.
 695+ A150
 696+ A150 3A 6E 89         ld a,(CX_Amadeus)
 697+ A153 47               ld b,a
 698+ A154 3A B9 8B         ld a,(Coordenada_X)
 699+ A157 90               sub b
 700+ A158 38 07            jr c,Disparo_a_derecha
 701+ A15A
 702+ A15A FE 06        Disparo_a_izquierda cp 6
 703+ A15C
 704+ A15C D8               ret c
 705+ A15D C8               ret z
 706+ A15E
 707+ A15E CB FE            set 7,(hl)
 708+ A160 C9               ret
 709+ A161
 710+ A161 47           Disparo_a_derecha ld b,a
 711+ A162 3E FF            ld a,$ff
 712+ A164 90               sub b
 713+ A165
 714+ A165 FE 05            cp 5
 715+ A167
 716+ A167 D8               ret c
 717+ A168 C8               ret z
 718+ A169
 719+ A169 CB F6            set 6,(hl)
 720+ A16B C9               ret
 721+ A16C
 722+ A16C              ; --------------------------------------------------------------------------------------
 723+ A16C              ;
 724+ A16C              ;   09/10/24
 725+ A16C              ;
 726+ A16C
 727+ A16C              Modifica_puntero_de_impresion
 728+ A16C
 729+ A16C              ;   Puntero de impresión del disparo en BC.
 730+ A16C
 731+ A16C E5               push hl
 732+ A16D
 733+ A16D 2A 32 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A170 CD D4 99         call NextScan
 735+ A173
 736+ A173 4D               ld c,l
 737+ A174 44               ld b,h
 738+ A175
 739+ A175 E1               pop hl
 740+ A176
 741+ A176 08               ex af,af
 742+ A177 CB 77            bit 6,a
 743+ A179 28 06            jr z,1F
 744+ A17B
 745+ A17B FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A17F 0C               inc c
 747+ A180 C9               ret
 748+ A181
 749+ A181 CB 7F        1 bit 7,a
 750+ A183 28 F6            jr z,2B
 751+ A185
 752+ A185 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A189 0D               dec c
 754+ A18A
 755+ A18A C9               ret
 756+ A18B
 757+ A18B              ; --------------------------------------------------------------------------------------
 758+ A18B              ;
 759+ A18B              ;   31/08/24
 760+ A18B              ;
 761+ A18B
 762+ A18B              Compara_con_coordenadas_de_disparo
 763+ A18B
 764+ A18B 3A BA 8B         ld a,(Coordenada_y)
 765+ A18E 47               ld b,a
 766+ A18F 3A 37 8C         ld a,(Coordenadas_disparo_certero)
 767+ A192 90               sub b
 768+ A193
 769+ A193              ; A = "0" ok
 770+ A193              ; A = "1" ok
 771+ A193
 772+ A193 28 08            jr z,Comprueba_coordenada_X
 773+ A195 3D               dec a
 774+ A196 28 05            jr z,Comprueba_coordenada_X
 775+ A198
 776+ A198              ; A = "$ff" ok
 777+ A198
 778+ A198 FE FE            cp $fe
 779+ A19A 28 01            jr z,Comprueba_coordenada_X
 780+ A19C
 781+ A19C C9               ret
 782+ A19D
 783+ A19D              Comprueba_coordenada_X
 784+ A19D
 785+ A19D 3A B9 8B         ld a,(Coordenada_X)
 786+ A1A0 47               ld b,a
 787+ A1A1 21 38 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1A4 7E               ld a,(hl)
 789+ A1A5 90               sub b
 790+ A1A6
 791+ A1A6              ; A = "0" ok
 792+ A1A6              ; A = "1" ok
 793+ A1A6
 794+ A1A6 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1A8 3D               dec a
 796+ A1A9 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1AB
 798+ A1AB              ; A = "2" ok
 799+ A1AB
 800+ A1AB 3D               dec a
 801+ A1AC 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1AE
 803+ A1AE              ; A = "$ff"
 804+ A1AE
 805+ A1AE FE FD            cp $fd
 806+ A1B0 C0               ret nz
 807+ A1B1
 808+ A1B1              Activa_Impacto_en_entidad
 809+ A1B1
 810+ A1B1              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1B1
 812+ A1B1 3E 02            ld a,2
 813+ A1B3 32 BC 8B         ld (Impacto),a
 814+ A1B6
 815+ A1B6              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1B6
 817+ A1B6 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1B9 21 BF 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1BC
 820+ A1BC 73               ld (hl),e
 821+ A1BD 23               inc hl
 822+ A1BE 72               ld (hl),d
 823+ A1BF
 824+ A1BF              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1BF
 826+ A1BF 21 34 8C         ld hl,Impacto2
 827+ A1C2 CB 9E            res 3,(hl)
 828+ A1C4
 829+ A1C4 C9               ret
 830+ A1C5
 831+ A1C5              ; --------------------------------------------------------------------------------------
 832+ A1C5              ;
 833+ A1C5              ;   13/10/24
 834+ A1C5              ;
 835+ A1C5
 836+ A1C5              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1C5
 838+ A1C5              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1C5
 840+ A1C5 2A 11 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1C8 06 06            ld b,6
 842+ A1CA AF               xor a
 843+ A1CB 77           1 ld (hl),a
 844+ A1CC 2C               inc l
 845+ A1CD 10 FC            djnz 1B
 846+ A1CF
 847+ A1CF C9               ret
 848+ A1D0
 849+ A1D0              ; --------------------------------------------------------------------------------------
 850+ A1D0              ;
 851+ A1D0              ;   29/09/24
 852+ A1D0              ;
 853+ A1D0
 854+ A1D0              Calcula_bytes_pintado_disparos
 855+ A1D0
 856+ A1D0 2A 15 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1D3 45               ld b,l
 858+ A1D4 2A 19 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1D7 7D               ld a,l
 860+ A1D8
 861+ A1D8 90               sub b
 862+ A1D9 32 1B 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1DC
 864+ A1DC C9               ret
 865+ A1DD
 866+ A1DD              ; --------------------------------------------------------------------------------------
 867+ A1DD              ;
 868+ A1DD              ;   26/10/24
 869+ A1DD              ;
 870+ A1DD              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1DD              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1DD              ;   _disparos que el álbum del FRAME actual).
 873+ A1DD
 874+ A1DD              Limpia_album_de_pintado_disparos_entidades
 875+ A1DD
 876+ A1DD 21 1C 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1E0 7E               ld a,(hl)
 878+ A1E1 2D               dec l
 879+ A1E2 46               ld b,(hl)
 880+ A1E3 90               sub b
 881+ A1E4
 882+ A1E4 D8               ret c
 883+ A1E5 C8               ret z
 884+ A1E6
 885+ A1E6 F5               push af
 886+ A1E7 80               add b
 887+ A1E8 77               ld (hl),a
 888+ A1E9 F1               pop af
 889+ A1EA
 890+ A1EA              ; Clean.
 891+ A1EA
 892+ A1EA 47           2 ld b,a
 893+ A1EB AF               xor a
 894+ A1EC 2A 19 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1EF 77           1 ld (hl),a
 896+ A1F0 23               inc hl
 897+ A1F1 10 FC            djnz 1B
 898+ A1F3
 899+ A1F3 C9               ret
 900+ A1F4
 901+ A1F4              ; --------------------------------------------------------------------------------------
 902+ A1F4              ;
 903+ A1F4              ;   29/09/24
 904+ A1F4              ;
 905+ A1F4
 906+ A1F4              Motor_Disparos_Amadeus
 907+ A1F4
 908+ A1F4 21 20 89         ld hl,Disparo_Amad+1
 909+ A1F7
 910+ A1F7 34               inc (hl)
 911+ A1F8 35               dec (hl)
 912+ A1F9
 913+ A1F9 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1FA
 915+ A1FA              ;   Esta caja contiene un disparo.
 916+ A1FA
 917+ A1FA CD 01 A2         call Consulta_Impacto
 918+ A1FD CC 1A A2         call z,Mueve_disparo_Amadeus
 919+ A200
 920+ A200 C9               ret
 921+ A201
 922+ A201              ; ----------------------
 923+ A201              ;
 924+ A201              ;
 925+ A201              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A201              ;
 927+ A201              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A201
 929+ A201
 930+ A201              Consulta_Impacto
 931+ A201
 932+ A201              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A201              ;   _sea lo más coherente posible.
 934+ A201
 935+ A201 E5               push hl
 936+ A202 2B               dec hl
 937+ A203 CD F6 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A206 E1               pop hl
 939+ A207 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A208
 941+ A208 C8               ret z
 942+ A209
 943+ A209 3A 34 8C         ld a,(Impacto2)
 944+ A20C CB DF            set 3,a
 945+ A20E 32 34 8C         ld (Impacto2),a
 946+ A211
 947+ A211 E5               push hl
 948+ A212 CD E3 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A215 E1               pop hl
 950+ A216 CD 33 A2         call Elimina_disparo_Amadeus
 951+ A219
 952+ A219 C9               ret
 953+ A21A
 954+ A21A              ; ----------------------
 955+ A21A              ;
 956+ A21A              ;
 957+ A21A              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A21A
 959+ A21A              Mueve_disparo_Amadeus
 960+ A21A
 961+ A21A CD BB 90         call Extrae_address
 962+ A21D
 963+ A21D CD E3 99         call PreviousScan
 964+ A220 CD E3 99         call PreviousScan
 965+ A223 CD E3 99         call PreviousScan
 966+ A226 CD E3 99         call PreviousScan
 967+ A229
 968+ A229              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A229
 970+ A229 7C               ld a,h
 971+ A22A D6 40            sub $40
 972+ A22C EB               ex de,hl
 973+ A22D 38 04            jr c,Elimina_disparo_Amadeus
 974+ A22F
 975+ A22F               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A22F
 977+ A22F 73               ld (hl),e
 978+ A230 23               inc hl
 979+ A231 72               ld (hl),d
 980+ A232
 981+ A232 C9               ret
 982+ A233
 983+ A233              ; ----------------------
 984+ A233              ;
 985+ A233              ;   29/9/24
 986+ A233
 987+ A233              Elimina_disparo_Amadeus
 988+ A233
 989+ A233              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A233              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A233
 992+ A233              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A233              ;   	defw 0											; Puntero de impresión.
 994+ A233
 995+ A233 2B               dec hl
 996+ A234 2B               dec hl
 997+ A235
 998+ A235 AF               xor a
 999+ A236 77               ld (hl),a
1000+ A237 23               inc hl
1001+ A238 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A239
1003+ A239 23               inc hl
1004+ A23A 77               ld (hl),a
1005+ A23B 23               inc hl
1006+ A23C 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A23D
1008+ A23D 3E 01            ld a,1
1009+ A23F 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A242
1011+ A242 CD C5 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A245
1013+ A245 AF               xor a
1014+ A246 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A247
1016+ A247 C9               ret
1017+ A248
1018+ A248              ; --------------------------------------------------------------------------------------
1019+ A248              ;
1020+ A248              ;   13/10/24
1021+ A248              ;
1022+ A248
1023+ A248              Pinta_disparos_Amadeus
1024+ A248
1025+ A248 06 02            ld b,2
1026+ A24A ED 73 05 8C      ld (Stack),sp
1027+ A24E ED 7B 13 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A252 D1           3 pop de
1029+ A253 14               inc d
1030+ A254 15               dec d
1031+ A255 28 1C            jr z,1F
1032+ A257 E1               pop hl
1033+ A258
1034+ A258              Imprime_scanlines_en_pantalla
1035+ A258
1036+ A258              ; 1er scanline
1037+ A258
1038+ A258 1A               ld a,(de)
1039+ A259 AE               xor (hl)
1040+ A25A 77               ld (hl),a
1041+ A25B
1042+ A25B 1C               inc e
1043+ A25C 2C               inc l
1044+ A25D
1045+ A25D 1A               ld a,(de)
1046+ A25E AE               xor (hl)
1047+ A25F 77               ld (hl),a
1048+ A260
1049+ A260 1D               dec e
1050+ A261 E1               pop hl
1051+ A262
1052+ A262              ; 2º scanline
1053+ A262
1054+ A262 1A               ld a,(de)
1055+ A263 AE               xor (hl)
1056+ A264 77               ld (hl),a
1057+ A265
1058+ A265 1C               inc e
1059+ A266 2C               inc l
1060+ A267
1061+ A267 1A               ld a,(de)
1062+ A268 AE               xor (hl)
1063+ A269 77               ld (hl),a
1064+ A26A
1065+ A26A 1D               dec e
1066+ A26B
1067+ A26B 18 06            jr 1F
1068+ A26D
1069+ A26D ED 7B 11 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A271 18 DF            jr 3B
1071+ A273 10 F8        1 djnz 2B
1072+ A275 ED 7B 05 8C      ld sp,(Stack)
1073+ A279 C9               ret
1074+ A27A
1075+ A27A              ; --------------------------------------------------------------------------------------
1076+ A27A              ;
1077+ A27A              ;   13/10/24
1078+ A27A              ;
1079+ A27A              ;   Modifica: HL,BC y DE.
1080+ A27A
1081+ A27A
1082+ A27A              Genera_datos_de_impresion_disparos_Amadeus
1083+ A27A
1084+ A27A ED 73 05 8C      ld (Stack),sp
1085+ A27E 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A281 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A282
1088+ A282 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A283 15               dec d
1090+ A284
1091+ A284 28 0E            jr z,Salida
1092+ A286
1093+ A286              Genera_scanlines_de_disparo_Amadeus
1094+ A286
1095+ A286 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A287              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A287 ED 7B 11 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A28B
1099+ A28B C1               pop bc
1100+ A28C C1               pop bc
1101+ A28D C1               pop bc
1102+ A28E
1103+ A28E E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A28F CD E3 99         call PreviousScan
1105+ A292 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A293 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A294
1108+ A294              Salida
1109+ A294
1110+ A294 ED 7B 05 8C      ld sp,(Stack)
1111+ A298
1112+ A298 C9               ret
1113+ A299
1114+ A299              ; --------------------------------------------------------------------------------------
1115+ A299              ;
1116+ A299              ;   12/09/24
1117+ A299              ;
1118+ A299
1119+ A299              Genera_disparo_Amadeus
1120+ A299
1121+ A299              ;*  Exclusiones.
1122+ A299
1123+ A299 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A29C A7               and a
1125+ A29D C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A29E
1127+ A29E 3D               dec a
1128+ A29F 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2A2
1130+ A2A2              Define_puntero_objeto_disparo
1131+ A2A2
1132+ A2A2              ;   Inicializamos contador.
1133+ A2A2
1134+ A2A2 06 00            ld b,0
1135+ A2A4
1136+ A2A4 2A 72 89         ld hl,(p.imp.amadeus)
1137+ A2A7 2C               inc l
1138+ A2A8
1139+ A2A8 3E 80            ld a,$80
1140+ A2AA BE               cp (hl)
1141+ A2AB 28 0D            jr z,1F
1142+ A2AD
1143+ A2AD 04               inc b
1144+ A2AE
1145+ A2AE 3E 60            ld a,$60
1146+ A2B0 BE               cp (hl)
1147+ A2B1 28 07            jr z,1F
1148+ A2B3
1149+ A2B3
1150+ A2B3 04               inc b
1151+ A2B4
1152+ A2B4 3E 18            ld a,$18
1153+ A2B6 BE               cp (hl)
1154+ A2B7 28 01            jr z,1F
1155+ A2B9
1156+ A2B9 04               inc b
1157+ A2BA
1158+ A2BA              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2BA
1160+ A2BA              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2BA
1162+ A2BA CD E3 99     1 call PreviousScan
1163+ A2BD
1164+ A2BD 78               ld a,b
1165+ A2BE CB 3F            srl a
1166+ A2C0 28 03            jr z,4F
1167+ A2C2
1168+ A2C2              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2C2 E5               push hl
1170+ A2C3 18 02            jr 5F
1171+ A2C5 2D           4 dec l
1172+ A2C6 E5               push hl
1173+ A2C7              ; ---
1174+ A2C7
1175+ A2C7              ;   Calcula el Puntero_objeto del disparo.
1176+ A2C7
1177+ A2C7 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2CA 04               inc b
1179+ A2CB 05               dec b
1180+ A2CC 28 04            jr z,2F
1181+ A2CE
1182+ A2CE              ;   Nos desplazamos por el índice de disparos.
1183+ A2CE
1184+ A2CE 2C           3 inc l
1185+ A2CF 2C               inc l
1186+ A2D0 10 FC            djnz 3B
1187+ A2D2
1188+ A2D2              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2D2 CD BB 90     2 call Extrae_address
1190+ A2D5 E5               push hl
1191+ A2D6              ; ---
1192+ A2D6
1193+ A2D6              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2D6              ; HL en el 1er .db de la caja.
1195+ A2D6
1196+ A2D6 21 1F 89         ld hl,Disparo_Amad
1197+ A2D9
1198+ A2D9 06 02            ld b,2
1199+ A2DB
1200+ A2DB D1           6 pop de
1201+ A2DC 73               ld (hl),e
1202+ A2DD 23               inc hl
1203+ A2DE 72               ld (hl),d
1204+ A2DF 23               inc hl
1205+ A2E0
1206+ A2E0 10 F9            djnz 6B
1207+ A2E2
1208+ A2E2 C9               ret
1209+ A2E3
1210+ A2E3              Genera_coordenadas_de_disparo_Amadeus
1211+ A2E3
1212+ A2E3              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2E3              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2E3              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2E3
1216+ A2E3 CD BB 90         call Extrae_address
1217+ A2E6 CD DA 94         call Genera_coordenadas
1218+ A2E9
1219+ A2E9 3D               dec a
1220+ A2EA
1221+ A2EA 21 37 8C         ld hl,Coordenadas_disparo_certero
1222+ A2ED 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2EE 23               inc hl
1224+ A2EF 3A B9 8B         ld a,(Coordenada_X)
1225+ A2F2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2F3
1227+ A2F3 AF               xor a
1228+ A2F4 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2F5
1230+ A2F5 C9               ret
1231+ A2F6
1232+ A2F6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2F6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2F6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2F6
1236+ A2F6              ; ----------------------------------------------
1237+ A2F6              ;
1238+ A2F6              ;   27/08/24
1239+ A2F6              ;
1240+ A2F6              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2F6              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2F6
1243+ A2F6              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2F6
1245+ A2F6              Extraccion_de_datos
1246+ A2F6
1247+ A2F6 13               inc de
1248+ A2F7 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2F8
1250+ A2F8 5E               ld e,(hl)
1251+ A2F9 23               inc hl
1252+ A2FA 56               ld d,(hl)
1253+ A2FB
1254+ A2FB 23               inc hl
1255+ A2FC
1256+ A2FC 4E               ld c,(hl)
1257+ A2FD 23               inc hl
1258+ A2FE 46               ld b,(hl)
1259+ A2FF
1260+ A2FF C5               push bc
1261+ A300 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A301
1263+ A301              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A301
1265+ A301 CD E3 99         call PreviousScan
1266+ A304 CD E3 99         call PreviousScan
1267+ A307
1268+ A307              Detecta_impacto_
1269+ A307
1270+ A307 1A               ld a,(de)
1271+ A308 A6               and (hl)
1272+ A309 C0               ret nz
1273+ A30A
1274+ A30A 13               inc de
1275+ A30B 23               inc hl
1276+ A30C
1277+ A30C 1A               ld a,(de)
1278+ A30D A6               and (hl)
1279+ A30E C9               ret
1280+ A30F
1281+ A30F              ; -------------------------------------------------------------------------------------------------------------
1282+ A30F              ;
1283+ A30F              ;   8/8/24
1284+ A30F              ;
1285+ A30F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A30F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A30F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A30F              ;
1289+ A30F              ;   MODIFICA: HL,DE,BC y A.
1290+ A30F              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A30F              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A30F
1293+ A30F              Colision_Entidad_Amadeus
1294+ A30F
1295+ A30F              ; Posible contacto de entidad con Amadeus. ?????
1296+ A30F
1297+ A30F              ; Exclusiones:
1298+ A30F
1299+ A30F 3A 57 8C         ld a,(Shield)
1300+ A312 A7               and a
1301+ A313 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A314
1303+ A314 21 2D 8C         ld hl,Ctrl_3
1304+ A317 CB 76            bit 6,(hl)
1305+ A319 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A31A
1307+ A31A 21 34 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A31D CB 56            bit 2,(hl)
1309+ A31F C0               ret nz
1310+ A320
1311+ A320 3A BA 8B     	ld a,(Coordenada_y)
1312+ A323 FE 14        	cp $14
1313+ A325 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A326
1315+ A326 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A329 A7               and a
1317+ A32A C0               ret nz
1318+ A32B
1319+ A32B              Genera_coordenadas_X
1320+ A32B
1321+ A32B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A32B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A32B
1324+ A32B              ;   Limpiamos almacenes.
1325+ A32B
1326+ A32B              ;    call Limpia_Coordenadas_X
1327+ A32B
1328+ A32B              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A32B
1330+ A32B 21 39 8C         ld hl,Coordenadas_X_Entidad
1331+ A32E 3A B9 8B         ld a,(Coordenada_X)
1332+ A331 CD 53 A3         call Guarda_coordenadas_X
1333+ A334
1334+ A334              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A334
1336+ A334 3A 6E 89         ld a,(CX_Amadeus)
1337+ A337 CD 53 A3         call Guarda_coordenadas_X
1338+ A33A CD 67 A3         call Compara_coordenadas_X
1339+ A33D C0               ret nz
1340+ A33E
1341+ A33E 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A340 32 BC 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A343
1344+ A343 2A F8 8B         ld hl,(Puntero_store_caja)
1345+ A346 2C               inc l
1346+ A347 2C               inc l
1347+ A348 2C               inc l
1348+ A349 2C               inc l
1349+ A34A 22 35 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A34D
1351+ A34D 21 34 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A350 CB D6            set 2,(hl)
1353+ A352
1354+ A352 C9               ret
1355+ A353
1356+ A353               ; ----- ----- ----- ----- -----
1357+ A353
1358+ A353 77           Guarda_coordenadas_X ld (hl),a
1359+ A354 3C               inc a
1360+ A355 2C               inc l
1361+ A356 77               ld (hl),a
1362+ A357 3C               inc a
1363+ A358 2C               inc l
1364+ A359 77               ld (hl),a
1365+ A35A 2C               inc l
1366+ A35B C9               ret
1367+ A35C
1368+ A35C AF           Limpia_Coordenadas_X xor a
1369+ A35D 06 06            ld b,6
1370+ A35F 21 3C 8C         ld hl,Coordenadas_X_Amadeus
1371+ A362 77           1 ld (hl),a
1372+ A363 23               inc hl
1373+ A364 10 FC            djnz 1B
1374+ A366 C9               ret
1375+ A367
1376+ A367              ; ----- ----- ----- ----- -----
1377+ A367
1378+ A367              Compara_coordenadas_X
1379+ A367
1380+ A367 DD 21 39 8C      ld ix,Coordenadas_X_Entidad
1381+ A36B DD 7E 00         ld a,(ix+0)
1382+ A36E CD 7C A3         call Comparando
1383+ A371 C8               ret z
1384+ A372
1385+ A372 3C               inc a
1386+ A373 CD 8B A3         call Comparando_1
1387+ A376 C8               ret z
1388+ A377
1389+ A377 3C               inc a
1390+ A378 CD 8B A3         call Comparando_1
1391+ A37B C9               ret
1392+ A37C
1393+ A37C              ; ----- ----- ----- ----- -----
1394+ A37C              ;
1395+ A37C              ;   4/12/23
1396+ A37C              ;
1397+ A37C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A37C
1399+ A37C              Comparando
1400+ A37C
1401+ A37C DD 2C            inc ixl
1402+ A37E DD 2C            inc ixl
1403+ A380 DD 2C            inc ixl
1404+ A382
1405+ A382 DD 46 00         ld b,(ix+0)
1406+ A385 DD 4E 01         ld c,(ix+1)
1407+ A388 DD 56 02         ld d,(ix+2)
1408+ A38B
1409+ A38B B8           Comparando_1 cp b
1410+ A38C C8               ret z
1411+ A38D B9               cp c
1412+ A38E C8               ret z
1413+ A38F BA               cp d
1414+ A390 C9               ret
1415+ A391
1416+ A391              ; -----------------------------------------------------------------------
1417+ A391              ;
1418+ A391              ;   04/7/24
1419+ A391              ;
1420+ A391
1421+ A391              Detecta_colision_nave_entidad
1422+ A391
1423+ A391              ; Exclusiones:
1424+ A391
1425+ A391              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A391
1427+ A391 21 34 8C     	ld hl,Impacto2
1428+ A394 CB 56        	bit 2,(hl)
1429+ A396 C8           	ret z
1430+ A397
1431+ A397              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A397
1433+ A397 2A 74 89         ld hl,(Pamm_Amadeus)
1434+ A39A CD BB 90         call Extrae_address
1435+ A39D 54               ld d,h
1436+ A39E 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A39F
1438+ A39F 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A3A2 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A3A4 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A3A7
1442+ A3A7 C5           1 push bc
1443+ A3A8 06 03            ld b,3
1444+ A3AA E5               push hl
1445+ A3AB
1446+ A3AB              ; .db
1447+ A3AB
1448+ A3AB 1A           3 ld a,(de)
1449+ A3AC A7               and a
1450+ A3AD 20 03            jr nz,4F
1451+ A3AF
1452+ A3AF 2C               inc l
1453+ A3B0 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A3B2
1455+ A3B2 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A3B4 28 04            jr z,2F
1457+ A3B6
1458+ A3B6              ; Impacto.
1459+ A3B6 FD 2D            dec iyl
1460+ A3B8 28 22            jr z,5F
1461+ A3BA
1462+ A3BA 1C           2 inc e
1463+ A3BB 10 EE            djnz 3B
1464+ A3BD
1465+ A3BD E1               pop hl
1466+ A3BE
1467+ A3BE              ; Hay salto de línea en el puntero de impresión ???
1468+ A3BE
1469+ A3BE 7C               ld a,h
1470+ A3BF D6 57            sub $57
1471+ A3C1 20 0A            jr nz,6F
1472+ A3C3
1473+ A3C3              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3C3
1475+ A3C3 2A 72 89         ld hl,(p.imp.amadeus)
1476+ A3C6 3E 20            ld a,$20
1477+ A3C8 A7               and a
1478+ A3C9 85               add l
1479+ A3CA 6F               ld l,a
1480+ A3CB 18 01            jr 7F
1481+ A3CD
1482+ A3CD 24           6 inc h
1483+ A3CE
1484+ A3CE C1           7 pop bc
1485+ A3CF 10 D6            djnz 1B
1486+ A3D1
1487+ A3D1              ;   Fin de la comparativa.
1488+ A3D1
1489+ A3D1              ;   NO HAY COLISIÓN !!!!!.
1490+ A3D1              ;
1491+ A3D1              ;   .db (Impacto) de Amadeus a "0".
1492+ A3D1              ;   RES el bit2 de (Impacto2).
1493+ A3D1              ;
1494+ A3D1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3D1              ;   Lo colocamos a "0".
1496+ A3D1
1497+ A3D1 21 34 8C         ld hl,Impacto2
1498+ A3D4 CB 96            res 2,(hl)
1499+ A3D6 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3D9 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3DB C9               ret
1502+ A3DC
1503+ A3DC              ;   COLISIÓN !!!!!.
1504+ A3DC              ;
1505+ A3DC              ;   .db (Impacto) de Amadeus a "1".
1506+ A3DC              ;   SET el bit3 de (Impacto2).
1507+ A3DC              ;
1508+ A3DC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3DC
1510+ A3DC E1           5 pop hl
1511+ A3DD C1               pop bc
1512+ A3DE
1513+ A3DE 21 71 89         ld hl,Impacto_Amadeus
1514+ A3E1 36 01            ld (hl),1
1515+ A3E3 21 34 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3E6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3E8
1518+ A3E8 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3EB 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3EE
1521+ A3EE 23               inc hl
1522+ A3EF 23               inc hl
1523+ A3F0 23               inc hl
1524+ A3F1
1525+ A3F1 73               ld (hl),e
1526+ A3F2 23               inc hl
1527+ A3F3 72               ld (hl),d
1528+ A3F4
1529+ A3F4              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3F4
1531+ A3F4 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3F7 21 74 89         ld hl,Pamm_Amadeus
1533+ A3FA
1534+ A3FA 73               ld (hl),e
1535+ A3FB 23               inc hl
1536+ A3FC 72               ld (hl),d
1537+ A3FD
1538+ A3FD C9               ret
1539+ A3FE
1540+ A3FE
1541+ A3FE
# file closed: Disparo.asm
2054  A3FE
2055  A3FE              	SAVESNA "Pruebas.sna", START
2056  A3FE
2057  A3FE
2058  A3FE
2059  A3FE
# file closed: Banco_de_pruebas.asm
