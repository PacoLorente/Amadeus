# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD D1 8A     	call Frame
  15  A104
  16  A104 3A FC 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  23  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										; 64 Bytes por entidad.
  96+ 8574
  97+ 8574 CD 85        	defw Caja_1
  98+ 8576 0E 86        	defw Caja_2
  99+ 8578 4F 86        	defw Caja_3
 100+ 857A 90 86        	defw Caja_4
 101+ 857C D1 86        	defw Caja_5
 102+ 857E 12 87        	defw Caja_6
 103+ 8580 53 87        	defw Caja_7
 104+ 8582 94 87        	defw Caja_8
 105+ 8584 D5 87        	defw Caja_9
 106+ 8586 16 88        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85BC
 145+ 85BC 00           	db 0											; (Autoriza_movimiento).
 146+ 85BD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85C1 00 00
 147+ 85C3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 148+ 85C5 00           	db 0											; (Repetimos_desplazamiento_backup)
 149+ 85C6 00           	db 0											; (Cola_de_desplazamiento).
 150+ 85C7
 151+ 85C7 00           	db 0 											; (Columnas).
 152+ 85C8 00 00        	defw 0											; (Limite_horizontal).
 153+ 85CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 154+ 85CD
 155+ 85CD              ; ---------- ---------- ---------- ---------- ----------
 156+ 85CD
 157+ 85CD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 158+ 85CF 00 00        	defw 0											; (Posicion_actual).
 159+ 85D1 00 00        	defw 0 											; (Puntero_objeto).
 160+ 85D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 161+ 85D6
 162+ 85D6 00           	db %00000000 									; (Attr).
 163+ 85D7
 164+ 85D7 00 00        	defw 0											; (Indice_Sprite_der).
 165+ 85D9 00 00        	defw 0											; (Indice_Sprite_izq).
 166+ 85DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 167+ 85DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 168+ 85DF
 169+ 85DF 00 00        	defw 0											; (Posicion_inicio).
 170+ 85E1 00           	db 0											; (Cuad_objeto).
 171+ 85E2
 172+ 85E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 173+ 85E6
 174+ 85E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 175+ 85E7
 176+ 85E7 00 00        	db 0,0										    ; Variables_de_borrado
 177+ 85E9 00 00        	defw 0											;	" " " " " " "
 178+ 85EB 00 00        	defw 0											;	" " " " " " "
 179+ 85ED 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 85F1
 181+ 85F1 00 00        	db 0,0											; Variables_de_pintado
 182+ 85F3 00 00        	defw 0											;	" " " " " " "
 183+ 85F5 00 00        	defw 0											;	" " " " " " "
 184+ 85F7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 185+ 85FB
 186+ 85FB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 187+ 85FD
 188+ 85FD 00           	db 0											; (Autoriza_movimiento).
 189+ 85FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 189+ 8602 00 00
 190+ 8604 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 191+ 8606 00           	db 0											; (Repetimos_desplazamiento_backup)
 192+ 8607 00           	db 0											; (Cola_de_desplazamiento).
 193+ 8608
 194+ 8608 00           	db 0 											; (Columnas).
 195+ 8609 00 00        	defw 0											; (Limite_horizontal).
 196+ 860B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 197+ 860E
 198+ 860E              ; ---------- ---------- ---------- ---------- ----------
 199+ 860E
 200+ 860E 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 201+ 8610 00 00        	defw 0											; (Posicion_actual).
 202+ 8612 00 00        	defw 0 											; (Puntero_objeto).
 203+ 8614 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 204+ 8617
 205+ 8617 00           	db %00000000 									; (Attr).
 206+ 8618
 207+ 8618 00 00        	defw 0											; (Indice_Sprite_der).
 208+ 861A 00 00        	defw 0											; (Indice_Sprite_izq).
 209+ 861C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 210+ 861E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 211+ 8620
 212+ 8620 00 00        	defw 0											; (Posicion_inicio).
 213+ 8622 00           	db 0											; (Cuad_objeto).
 214+ 8623
 215+ 8623 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 216+ 8627
 217+ 8627 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 218+ 8628
 219+ 8628 00 00        	db 0,0										    ; Variables_de_borrado
 220+ 862A 00 00        	defw 0											;	" " " " " " "
 221+ 862C 00 00        	defw 0											;	" " " " " " "
 222+ 862E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8632
 224+ 8632 00 00        	db 0,0											; Variables_de_pintado
 225+ 8634 00 00        	defw 0											;	" " " " " " "
 226+ 8636 00 00        	defw 0											;	" " " " " " "
 227+ 8638 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 228+ 863C
 229+ 863C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 230+ 863E
 231+ 863E 00           	db 0											; (Autoriza_movimiento).
 232+ 863F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 232+ 8643 00 00
 233+ 8645 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 234+ 8647 00           	db 0											; (Repetimos_desplazamiento_backup)
 235+ 8648 00           	db 0											; (Cola_de_desplazamiento).
 236+ 8649
 237+ 8649 00           	db 0 											; (Columnas).
 238+ 864A 00 00        	defw 0											; (Limite_horizontal).
 239+ 864C 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 864F
 241+ 864F              ; ---------- ---------- ---------- ---------- ----------
 242+ 864F
 243+ 864F 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 244+ 8651 00 00        	defw 0											; (Posicion_actual).
 245+ 8653 00 00        	defw 0 											; (Puntero_objeto).
 246+ 8655 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 8658
 248+ 8658 00           	db %00000000 									; (Attr).
 249+ 8659
 250+ 8659 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 865B 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 865F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 8661
 255+ 8661 00 00        	defw 0											; (Posicion_inicio).
 256+ 8663 00           	db 0											; (Cuad_objeto).
 257+ 8664
 258+ 8664 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 8668
 260+ 8668 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 8669
 262+ 8669 00 00        	db 0,0										    ; Variables_de_borrado
 263+ 866B 00 00        	defw 0											;	" " " " " " "
 264+ 866D 00 00        	defw 0											;	" " " " " " "
 265+ 866F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 266+ 8673
 267+ 8673 00 00        	db 0,0											; Variables_de_pintado
 268+ 8675 00 00        	defw 0											;	" " " " " " "
 269+ 8677 00 00        	defw 0											;	" " " " " " "
 270+ 8679 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 271+ 867D
 272+ 867D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 273+ 867F
 274+ 867F 00           	db 0											; (Autoriza_movimiento).
 275+ 8680 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 275+ 8684 00 00
 276+ 8686 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 277+ 8688 00           	db 0											; (Repetimos_desplazamiento_backup)
 278+ 8689 00           	db 0											; (Cola_de_desplazamiento).
 279+ 868A
 280+ 868A 00           	db 0 											; (Columnas).
 281+ 868B 00 00        	defw 0											; (Limite_horizontal).
 282+ 868D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 283+ 8690
 284+ 8690              ; ---------- ---------- ---------- ---------- ----------
 285+ 8690
 286+ 8690 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 287+ 8692 00 00        	defw 0											; (Posicion_actual).
 288+ 8694 00 00        	defw 0 											; (Puntero_objeto).
 289+ 8696 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 290+ 8699
 291+ 8699 00           	db %00000000 									; (Attr).
 292+ 869A
 293+ 869A 00 00        	defw 0											; (Indice_Sprite_der).
 294+ 869C 00 00        	defw 0											; (Indice_Sprite_izq).
 295+ 869E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 296+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 297+ 86A2
 298+ 86A2 00 00        	defw 0											; (Posicion_inicio).
 299+ 86A4 00           	db 0											; (Cuad_objeto).
 300+ 86A5
 301+ 86A5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 302+ 86A9
 303+ 86A9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 304+ 86AA
 305+ 86AA 00 00        	db 0,0										    ; Variables_de_borrado
 306+ 86AC 00 00        	defw 0											;	" " " " " " "
 307+ 86AE 00 00        	defw 0											;	" " " " " " "
 308+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 86B4
 310+ 86B4 00 00        	db 0,0											; Variables_de_pintado
 311+ 86B6 00 00        	defw 0											;	" " " " " " "
 312+ 86B8 00 00        	defw 0											;	" " " " " " "
 313+ 86BA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 314+ 86BE
 315+ 86BE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 316+ 86C0
 317+ 86C0 00           	db 0											; (Autoriza_movimiento).
 318+ 86C1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 318+ 86C5 00 00
 319+ 86C7 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 320+ 86C9 00           	db 0											; (Repetimos_desplazamiento_backup)
 321+ 86CA 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86CB
 323+ 86CB 00           	db 0 											; (Columnas).
 324+ 86CC 00 00        	defw 0											; (Limite_horizontal).
 325+ 86CE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86D1
 327+ 86D1              ; ---------- ---------- ---------- ---------- ----------
 328+ 86D1
 329+ 86D1 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86D3 00 00        	defw 0											; (Posicion_actual).
 331+ 86D5 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86D7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86DA
 334+ 86DA 00           	db %00000000 									; (Attr).
 335+ 86DB
 336+ 86DB 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86DD 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86DF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86E1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86E3
 341+ 86E3 00 00        	defw 0											; (Posicion_inicio).
 342+ 86E5 00           	db 0											; (Cuad_objeto).
 343+ 86E6
 344+ 86E6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 86EA
 346+ 86EA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 86EB
 348+ 86EB 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 86ED 00 00        	defw 0											;	" " " " " " "
 350+ 86EF 00 00        	defw 0											;	" " " " " " "
 351+ 86F1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 86F5
 353+ 86F5 00 00        	db 0,0											; Variables_de_pintado
 354+ 86F7 00 00        	defw 0											;	" " " " " " "
 355+ 86F9 00 00        	defw 0											;	" " " " " " "
 356+ 86FB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86FF
 358+ 86FF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 8701
 360+ 8701 00           	db 0											; (Autoriza_movimiento).
 361+ 8702 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 8706 00 00
 362+ 8708 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 363+ 870A 00           	db 0											; (Repetimos_desplazamiento_backup)
 364+ 870B 00           	db 0											; (Cola_de_desplazamiento).
 365+ 870C
 366+ 870C 00           	db 0 											; (Columnas).
 367+ 870D 00 00        	defw 0											; (Limite_horizontal).
 368+ 870F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 369+ 8712
 370+ 8712              ; ---------- ---------- ---------- ---------- ----------
 371+ 8712
 372+ 8712 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 373+ 8714 00 00        	defw 0											; (Posicion_actual).
 374+ 8716 00 00        	defw 0 											; (Puntero_objeto).
 375+ 8718 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 376+ 871B
 377+ 871B 00           	db %00000000 									; (Attr).
 378+ 871C
 379+ 871C 00 00        	defw 0											; (Indice_Sprite_der).
 380+ 871E 00 00        	defw 0											; (Indice_Sprite_izq).
 381+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_der).
 382+ 8722 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 383+ 8724
 384+ 8724 00 00        	defw 0											; (Posicion_inicio).
 385+ 8726 00           	db 0											; (Cuad_objeto).
 386+ 8727
 387+ 8727 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 388+ 872B
 389+ 872B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 390+ 872C
 391+ 872C 00 00        	db 0,0										    ; Variables_de_borrado
 392+ 872E 00 00        	defw 0											;	" " " " " " "
 393+ 8730 00 00        	defw 0											;	" " " " " " "
 394+ 8732 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 395+ 8736
 396+ 8736 00 00        	db 0,0											; Variables_de_pintado
 397+ 8738 00 00        	defw 0											;	" " " " " " "
 398+ 873A 00 00        	defw 0											;	" " " " " " "
 399+ 873C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 400+ 8740
 401+ 8740 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 402+ 8742
 403+ 8742 00           	db 0											; (Autoriza_movimiento).
 404+ 8743 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 404+ 8747 00 00
 405+ 8749 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 406+ 874B 00           	db 0											; (Repetimos_desplazamiento_backup)
 407+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 408+ 874D
 409+ 874D 00           	db 0 											; (Columnas).
 410+ 874E 00 00        	defw 0											; (Limite_horizontal).
 411+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 412+ 8753
 413+ 8753              ; ---------- ---------- ---------- ---------- ----------
 414+ 8753
 415+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 416+ 8755 00 00        	defw 0											; (Posicion_actual).
 417+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 418+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 419+ 875C
 420+ 875C 00           	db %00000000 									; (Attr).
 421+ 875D
 422+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 423+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 424+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 425+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 426+ 8765
 427+ 8765 00 00        	defw 0											; (Posicion_inicio).
 428+ 8767 00           	db 0											; (Cuad_objeto).
 429+ 8768
 430+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 431+ 876C
 432+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 433+ 876D
 434+ 876D 00 00        	db 0,0										    ; Variables_de_borrado
 435+ 876F 00 00        	defw 0											;	" " " " " " "
 436+ 8771 00 00        	defw 0											;	" " " " " " "
 437+ 8773 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 438+ 8777
 439+ 8777 00 00        	db 0,0											; Variables_de_pintado
 440+ 8779 00 00        	defw 0											;	" " " " " " "
 441+ 877B 00 00        	defw 0											;	" " " " " " "
 442+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 443+ 8781
 444+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 445+ 8783
 446+ 8783 00           	db 0											; (Autoriza_movimiento).
 447+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 447+ 8788 00 00
 448+ 878A 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 449+ 878C 00           	db 0											; (Repetimos_desplazamiento_backup)
 450+ 878D 00           	db 0											; (Cola_de_desplazamiento).
 451+ 878E
 452+ 878E 00           	db 0 											; (Columnas).
 453+ 878F 00 00        	defw 0											; (Limite_horizontal).
 454+ 8791 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 455+ 8794
 456+ 8794              ; ---------- ---------- ---------- ---------- ----------
 457+ 8794
 458+ 8794 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 459+ 8796 00 00        	defw 0											; (Posicion_actual).
 460+ 8798 00 00        	defw 0 											; (Puntero_objeto).
 461+ 879A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 462+ 879D
 463+ 879D 00           	db %00000000 									; (Attr).
 464+ 879E
 465+ 879E 00 00        	defw 0											; (Indice_Sprite_der).
 466+ 87A0 00 00        	defw 0											; (Indice_Sprite_izq).
 467+ 87A2 00 00        	defw 0											; (Puntero_DESPLZ_der).
 468+ 87A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 469+ 87A6
 470+ 87A6 00 00        	defw 0											; (Posicion_inicio).
 471+ 87A8 00           	db 0											; (Cuad_objeto).
 472+ 87A9
 473+ 87A9 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 474+ 87AD
 475+ 87AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 476+ 87AE
 477+ 87AE 00 00        	db 0,0										    ; Variables_de_borrado
 478+ 87B0 00 00        	defw 0											;	" " " " " " "
 479+ 87B2 00 00        	defw 0											;	" " " " " " "
 480+ 87B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 481+ 87B8
 482+ 87B8 00 00        	db 0,0											; Variables_de_pintado
 483+ 87BA 00 00        	defw 0											;	" " " " " " "
 484+ 87BC 00 00        	defw 0											;	" " " " " " "
 485+ 87BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 486+ 87C2
 487+ 87C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 488+ 87C4
 489+ 87C4 00           	db 0											; (Autoriza_movimiento).
 490+ 87C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 490+ 87C9 00 00
 491+ 87CB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 492+ 87CD 00           	db 0											; (Repetimos_desplazamiento_backup)
 493+ 87CE 00           	db 0											; (Cola_de_desplazamiento).
 494+ 87CF
 495+ 87CF 00           	db 0 											; (Columnas).
 496+ 87D0 00 00        	defw 0											; (Limite_horizontal).
 497+ 87D2 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 498+ 87D5
 499+ 87D5              ; ---------- ---------- ---------- ---------- ----------
 500+ 87D5
 501+ 87D5 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 502+ 87D7 00 00        	defw 0											; (Posicion_actual).
 503+ 87D9 00 00        	defw 0 											; (Puntero_objeto).
 504+ 87DB 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 505+ 87DE
 506+ 87DE 00           	db %00000000 									; (Attr).
 507+ 87DF
 508+ 87DF 00 00        	defw 0											; (Indice_Sprite_der).
 509+ 87E1 00 00        	defw 0											; (Indice_Sprite_izq).
 510+ 87E3 00 00        	defw 0											; (Puntero_DESPLZ_der).
 511+ 87E5 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 512+ 87E7
 513+ 87E7 00 00        	defw 0											; (Posicion_inicio).
 514+ 87E9 00           	db 0											; (Cuad_objeto).
 515+ 87EA
 516+ 87EA 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 517+ 87EE
 518+ 87EE 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 519+ 87EF
 520+ 87EF 00 00        	db 0,0										    ; Variables_de_borrado
 521+ 87F1 00 00        	defw 0											;	" " " " " " "
 522+ 87F3 00 00        	defw 0											;	" " " " " " "
 523+ 87F5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 524+ 87F9
 525+ 87F9 00 00        	db 0,0											; Variables_de_pintado
 526+ 87FB 00 00        	defw 0											;	" " " " " " "
 527+ 87FD 00 00        	defw 0											;	" " " " " " "
 528+ 87FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 529+ 8803
 530+ 8803 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 531+ 8805
 532+ 8805 00           	db 0											; (Autoriza_movimiento).
 533+ 8806 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 533+ 880A 00 00
 534+ 880C 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 535+ 880E 00           	db 0											; (Repetimos_desplazamiento_backup)
 536+ 880F 00           	db 0											; (Cola_de_desplazamiento).
 537+ 8810
 538+ 8810 00           	db 0 											; (Columnas).
 539+ 8811 00 00        	defw 0											; (Limite_horizontal).
 540+ 8813 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 541+ 8816
 542+ 8816              ; ---------- ---------- ---------- ---------- ----------
 543+ 8816
 544+ 8816 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 545+ 8818 00 00        	defw 0											; (Posicion_actual).
 546+ 881A 00 00        	defw 0 											; (Puntero_objeto).
 547+ 881C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 548+ 881F
 549+ 881F 00           	db %00000000 									; (Attr).
 550+ 8820
 551+ 8820 00 00        	defw 0											; (Indice_Sprite_der).
 552+ 8822 00 00        	defw 0											; (Indice_Sprite_izq).
 553+ 8824 00 00        	defw 0											; (Puntero_DESPLZ_der).
 554+ 8826 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 555+ 8828
 556+ 8828 00 00        	defw 0											; (Posicion_inicio).
 557+ 882A 00           	db 0											; (Cuad_objeto).
 558+ 882B
 559+ 882B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 560+ 882F
 561+ 882F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 562+ 8830
 563+ 8830 00 00        	db 0,0										    ; Variables_de_borrado
 564+ 8832 00 00        	defw 0											;	" " " " " " "
 565+ 8834 00 00        	defw 0											;	" " " " " " "
 566+ 8836 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 567+ 883A
 568+ 883A 00 00        	db 0,0											; Variables_de_pintado
 569+ 883C 00 00        	defw 0											;	" " " " " " "
 570+ 883E 00 00        	defw 0											;	" " " " " " "
 571+ 8840 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 572+ 8844
 573+ 8844 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 574+ 8846
 575+ 8846 00           	db 0											; (Autoriza_movimiento).
 576+ 8847 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 576+ 884B 00 00
 577+ 884D 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 578+ 884F 00           	db 0											; (Repetimos_desplazamiento_backup)
 579+ 8850 00           	db 0											; (Cola_de_desplazamiento).
 580+ 8851
 581+ 8851 00           	db 0 											; (Columnas).
 582+ 8852 00 00        	defw 0											; (Limite_horizontal).
 583+ 8854 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 584+ 8857
 585+ 8857              ; -------------------------------------------------------------------------------------
 586+ 8857              ;
 587+ 8857              ;	20/05/23
 588+ 8857              ;
 589+ 8857              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 590+ 8857              ;
 591+ 8857              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 592+ 8857              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 593+ 8857              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 594+ 8857              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 595+ 8857
 596+ 8857              Indice_de_entidades
 597+ 8857
 598+ 8857 61 88        	defw Entidad_1
 599+ 8859 71 88        	defw Entidad_2
 600+ 885B 81 88        	defw Entidad_3
 601+ 885D 91 88        	defw Entidad_4
 602+ 885F A1 88        	defw Entidad_5
 603+ 8861
 604+ 8861              ;	BADSAT, (Satélite malvado).
 605+ 8861
 606+ 8861 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 607+ 8863 04           	db %00000100									; (Attr).
 608+ 8864 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 609+ 8866 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 610+ 8868 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 611+ 886A 01           	db 1											; (Cuad_objeto).
 612+ 886B 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 613+ 886F 85 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 614+ 8871
 615+ 8871 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 616+ 8873 02           	db %00000010									; (Attr).
 617+ 8874 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 618+ 8876 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 619+ 8878 40 50        	defw $5040                                      ; (Posicion_inicio).
 620+ 887A 01           	db 1											; (Cuad_objeto).
 621+ 887B 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 622+ 887F 85 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 623+ 8881
 624+ 8881 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 625+ 8883 04           	db %00000100									; (Attr).
 626+ 8884 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 627+ 8886 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 628+ 8888 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 629+ 888A 01           	db 1											; (Cuad_objeto).
 630+ 888B 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 631+ 888F 85 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 632+ 8891
 633+ 8891 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 634+ 8893 01           	db %00000001									; (Attr).
 635+ 8894 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 636+ 8896 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 637+ 8898 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 638+ 889A 01           	db 1											; (Cuad_objeto).
 639+ 889B 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 640+ 889F 85 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 641+ 88A1
 642+ 88A1 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 643+ 88A3 01           	db %00000001									; (Attr).
 644+ 88A4 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 645+ 88A6 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 646+ 88A8 07 40        	defw $4007                                      ; (Posicion_inicio).
 647+ 88AA 01           	db 1											; (Cuad_objeto).
 648+ 88AB 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 649+ 88AF 85 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 650+ 88B1
# file closed: Cajas_y_disparos.asm
  24  88B1              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88B1              ; 13/05/23
   2+ 88B1
   3+ 88B1              Indice_de_niveles
   4+ 88B1
   5+ 88B1 BF 88        	defw Nivel_1
   6+ 88B3 C1 88        	defw Nivel_2
   7+ 88B5 CE 88        	defw Nivel_3
   8+ 88B7 DE 88        	defw Nivel_4
   9+ 88B9 F0 88        	defw Nivel_5
  10+ 88BB
  11+ 88BB              ;	...
  12+ 88BB              ;	...
  13+ 88BB              ;	+ Niveles ...
  14+ 88BB
  15+ 88BB 00 00        	defw 0
  16+ 88BD 00 00        	defw 0
  17+ 88BF
  18+ 88BF 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88C0 01           	db 1
  20+ 88C1 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88C2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C6 01 02
  22+ 88C8 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88CC 01 02
  23+ 88CE 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88CF 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88D3 01
  25+ 88D4 03 01 01 01  	db 3,1,1,1,1
  25+ 88D8 01
  26+ 88D9 03 01 01 01  	db 3,1,1,1,1
  26+ 88DD 01
  27+ 88DE 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88DF 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88E3 01
  29+ 88E4 04 01 01 01  	db 4,1,1,1,1
  29+ 88E8 01
  30+ 88E9 04 01 01 01  	db 4,1,1,1,1
  30+ 88ED 01
  31+ 88EE 02 03        	db 2,3
  32+ 88F0 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88F1 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F5 01
  34+ 88F6 05 01 01 01  	db 5,1,1,1,1
  34+ 88FA 01
  35+ 88FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88FF 01
  36+ 8900 05 01 01 01  	db 5,1,1,1,1
  36+ 8904 01
  37+ 8905
  38+ 8905              ;---------------------------------------------------------------------------------------------------------------
  39+ 8905              ;
  40+ 8905              ;   21/5/23
  41+ 8905              ;
  42+ 8905              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8905              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8905              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8905              ;	_en la caja DRAW correspondiente.
  46+ 8905              ;
  47+ 8905              ;	MODIFICA: HL,DE y A.
  48+ 8905              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8905
  50+ 8905              Inicializa_Punteros_de_nivel
  51+ 8905
  52+ 8905 21 B1 88     	ld hl,Indice_de_niveles
  53+ 8908 22 30 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 890B CD 24 8D     	call Extrae_address
  55+ 890E 7E           	ld a,(hl)
  56+ 890F 32 05 8A     	ld (Numero_de_entidades),a
  57+ 8912 23           	inc hl
  58+ 8913 22 32 8A     	ld (Datos_de_nivel),hl
  59+ 8916 C9           	ret
  60+ 8917
  61+ 8917              ;---------------------------------------------------------------------------------------------------------------
  62+ 8917              ;
  63+ 8917              ;   13/5/23
  64+ 8917              ;
  65+ 8917              ;	Destruye A,BC,HL,DE
  66+ 8917
  67+ 8917              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8917              ;	_del juego.
  69+ 8917
  70+ 8917              Prepara_cajas
  71+ 8917
  72+ 8917              ; Preparamos los punteros de las cajas.
  73+ 8917
  74+ 8917 21 74 85     	ld hl,Indice_de_cajas
  75+ 891A CD 24 8D     	call Extrae_address
  76+ 891D CD 5A 89     	call Avanza_caja
  77+ 8920
  78+ 8920 CD 9E 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8923
  80+ 8923 2A 32 8A     	ld hl,(Datos_de_nivel)
  81+ 8926
  82+ 8926              ; HL está en los datos del nivel correspondiente.
  83+ 8926              ; B actuará como contador de cajas.
  84+ 8926
  85+ 8926 C5           1 push bc
  86+ 8927
  87+ 8927 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8928 CD 4B 89     	call PreparaBC
  89+ 892B
  90+ 892B 21 57 88     	ld hl,Indice_de_entidades
  91+ 892E CD 53 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8931 22 0B 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8934
  94+ 8934 CD 64 89     	call Datos_de_entidad_a_caja
  95+ 8937
  96+ 8937 2A 03 8A     	ld hl,(Indice_restore_caja)
  97+ 893A CD 24 8D     	call Extrae_address
  98+ 893D CD 5A 89     	call Avanza_caja
  99+ 8940
 100+ 8940 2A 32 8A     	ld hl,(Datos_de_nivel)
 101+ 8943 23           	inc hl
 102+ 8944 22 32 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8947
 104+ 8947 C1           	pop bc
 105+ 8948 10 DC        	djnz 1B
 106+ 894A C9           	ret
 107+ 894B
 108+ 894B CB 27        PreparaBC sla a
 109+ 894D D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 894F 4F           	ld c,a
 111+ 8950 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8952 C9           	ret
 113+ 8953
 114+ 8953 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8954 ED 4A        	adc hl,bc
 116+ 8956 CD 24 8D     	call Extrae_address
 117+ 8959 C9           	ret
 118+ 895A
 119+ 895A 22 FF 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 895D 13           	inc de
 121+ 895E 13           	inc de
 122+ 895F EB           	ex de,hl
 123+ 8960 22 03 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8963 C9           	ret
 125+ 8964
 126+ 8964              Datos_de_entidad_a_caja
 127+ 8964
 128+ 8964              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8964
 130+ 8964
 131+ 8964 ED 5B FF 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8968
 133+ 8968 01 02 00     	ld bc,2
 134+ 896B ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 896D
 136+ 896D 01 07 00     	ld bc,7
 137+ 8970 CD 98 89     	call Situa_DE
 138+ 8973
 139+ 8973 01 05 00     	ld bc,5
 140+ 8976 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8978
 142+ 8978 01 04 00     	ld bc,4
 143+ 897B CD 98 89     	call Situa_DE
 144+ 897E
 145+ 897E 01 07 00     	ld bc,7
 146+ 8981 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8983
 148+ 8983 01 18 00     	ld bc,24
 149+ 8986 CD 98 89     	call Situa_DE
 150+ 8989
 151+ 8989 01 02 00     	ld bc,2
 152+ 898C ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 898E
 154+ 898E              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 898E              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 898E
 157+ 898E 01 0D 00     	ld bc,13									; *****
 158+ 8991 CD 98 89     	call Situa_DE
 159+ 8994
 160+ 8994 3E 03        	ld a,3
 161+ 8996 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8997
 163+ 8997 C9           	ret
 164+ 8998
 165+ 8998 EB           Situa_DE ex de,hl
 166+ 8999 A7           	and a
 167+ 899A ED 4A        	adc hl,bc
 168+ 899C EB           	ex de,hl
 169+ 899D C9           	ret
 170+ 899E
 171+ 899E              ;---------------------------------------------------------------------------------------------------------------
 172+ 899E              ;
 173+ 899E              ;	21/5/23
 174+ 899E              ;
 175+ 899E              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 899E              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 899E              ;
 178+ 899E              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 899E              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 899E              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 899E              ;
 182+ 899E              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 899E              ;	MODIFICA: A y B.
 184+ 899E              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 899E
 186+ 899E              Admin_num_entidades
 187+ 899E
 188+ 899E              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 899E
 190+ 899E 3A 05 8A     	ld a,(Numero_de_entidades)
 191+ 89A1 A7           	and a
 192+ 89A2              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89A2              ;	jr z,$
 194+ 89A2              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89A2
 196+ 89A2 20 03        	jr nz,3F
 197+ 89A4
 198+ 89A4              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89A4
 200+ 89A4 CD 05 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A7
 202+ 89A7
 203+ 89A7 3A 05 8A     3 ld a,(Numero_de_entidades)
 204+ 89AA FE 0A        	cp 10
 205+ 89AC 38 08        	jr c,1F
 206+ 89AE
 207+ 89AE              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89AE              ; Actualizamos variables.
 209+ 89AE
 210+ 89AE 3E 0A        	ld a,10
 211+ 89B0 32 06 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89B3 47           	ld b,a
 213+ 89B4 18 04        	jr 2F
 214+ 89B6
 215+ 89B6              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89B6              ; (Numero_de_entidades)="0".
 217+ 89B6
 218+ 89B6 32 06 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89B9 47           	ld b,a
 220+ 89BA C9           2 ret
# file closed: Niveles.asm
  25  89BB
  26  89BB              ; ******************************************************************************************************************************************************************************************
  27  89BB              ; Constantes.
  28  89BB              ; ******************************************************************************************************************************************************************************************
  29  89BB              ;
  30  89BB              ; 25/05/23
  31  89BB              ;
  32  89BB              ; Constantes generales.
  33  89BB              ;
  34  89BB
  35  89BB              Sprite_vacio equ $f000
  36  89BB              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  89BB              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  89BB              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  89BB              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  89BB
  41  89BB              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  89BB              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  89BB              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  89BB              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  89BB              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  89BB              ;                               				        ; De momento situamos este almacén en $7060.
  47  89BB
  48  89BB              ; ******************************************************************************************************************************************************************************************
  49  89BB              ; Variables.
  50  89BB              ; ******************************************************************************************************************************************************************************************
  51  89BB              ;
  52  89BB              ; 01/07/23
  53  89BB              ;
  54  89BB              ; Variables de DRAW. (Motor principal).
  55  89BB              ;
  56  89BB              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  89BB
  58  89BB 00           Filas db 0												; Filas. [DRAW]
  59  89BC 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  89BD 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  89BF 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89C1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89C2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89C3
  65  89C3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89C3
  67  89C3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89C4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89C4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89C4 00           Attr db 0												; Atributos de la entidad:
  71  89C5
  72  89C5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89C5              ;
  74  89C5              ;	COLORES: 0 ..... NEGRO
  75  89C5              ;    		 1 ..... AZUL
  76  89C5              ; 			 2 ..... ROJO
  77  89C5              ;			 3 ..... MAGENTA
  78  89C5              ; 			 4 ..... VERDE
  79  89C5              ; 			 5 ..... CIAN
  80  89C5              ;			 6 ..... AMARILLO
  81  89C5              ; 			 7 ..... BLANCO
  82  89C5
  83  89C5 00 00        Indice_Sprite_der defw 0
  84  89C7 00 00        Indice_Sprite_izq defw 0
  85  89C9 00 00        Puntero_DESPLZ_der defw 0
  86  89CB 00 00        Puntero_DESPLZ_izq defw 0
  87  89CD
  88  89CD 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89CF 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89D0
  91  89D0              ; Variables de objeto. (Características).
  92  89D0
  93  89D0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89D1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89D2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89D3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89D4
  98  89D4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89D5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89D5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89D5
 102  89D5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89D7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89D9 00 00        	defw 0
 105  89DB 00 00 00 00  	db 0,0,0,0
 106  89DF
 107  89DF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89E1 00 00        	defw 0
 109  89E3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89E5 00 00 00 00  	db 0,0,0,0
 111  89E9
 112  89E9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89E9
 114  89E9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89EA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89EA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89EA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89EA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89EA              ;
 120  89EA              ; 														DESCRIPCIÖN:
 121  89EA              ;
 122  89EA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89EA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89EA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89EA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89EA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89EA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89EA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89EA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89EA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89EA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89EA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89EA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89EA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89EA              ;
 136  89EA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89EA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89EA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89EA
 140  89EA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89EB
 142  89EB              ; Movimiento. ------------------------------------------------------------------------------------------------------
 143  89EB
 144  89EB 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89EC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89EE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 147  89F0 00 00        Puntero_bucle defw 0									;! Ha de ser defw!!!!!
 148  89F2              ;
 149  89F2              ;
 150  89F2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 151  89F3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 152  89F3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 153  89F3 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 154  89F4              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($0-$f).
 155  89F4 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 156  89F5 00           Cola_de_desplazamiento db 0								; Este byte indica:
 157  89F6              ;
 158  89F6              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 159  89F6              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 160  89F6              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 161  89F6              ;
 162  89F6              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 163  89F6              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 164  89F6              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 165  89F6              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 166  89F6              ;
 167  89F6              ;														;	"$ff" ..... Bucle infinito de repetición.
 168  89F6              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 169  89F6              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 170  89F6
 171  89F6
 172  89F6              ; Variables de funcionamiento. [DRAW].
 173  89F6
 174  89F6 00           Columnas db 0
 175  89F7 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 176  89F9              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 177  89F9 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 178  89FA
 179  89FA              ; variables de control general.
 180  89FA
 181  89FA 00           Ctrl_2 db 0
 182  89FB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 183  89FB              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 184  89FB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 185  89FB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 186  89FB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 187  89FB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 188  89FB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 189  89FB              ;
 190  89FB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 191  89FB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 192  89FB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 193  89FB
 194  89FB 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 195  89FC
 196  89FC              ; 64 Bytes por entidad.
 197  89FC              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 198  89FC              ;					         		---------;      ;---------
 199  89FC
 200  89FC
 201  89FC              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 202  89FC
 203  89FC 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 204  89FD
 205  89FD              ;														DESCRIPCIÓN:
 206  89FD              ;
 207  89FD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 208  89FD              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 209  89FD              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 210  89FD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 211  89FD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 212  89FD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 213  89FD              ;														BIT 3, Recarga de nueva oleada.
 214  89FD              ;														BIT 4, Recarga de nueva oleada.
 215  89FD
 216  89FD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 217  89FF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 218  89FF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 219  89FF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 220  89FF
 221  89FF
 222  89FF
 223  89FF              ; Gestión de ENTIDADES y CAJAS.
 224  89FF
 225  89FF 00 00        Puntero_store_caja defw 0
 226  8A01 00 00        Puntero_restore_caja defw 0
 227  8A03 00 00        Indice_restore_caja defw 0
 228  8A05 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 229  8A06 00           Numero_parcial_de_entidades db 0
 230  8A07 00           Entidades_en_curso db 0									; ..... ..... .....
 231  8A08 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 232  8A09              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 233  8A09              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 234  8A09              ;														; _ (Numero_de_malotes)="0".
 235  8A09 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 236  8A0B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 237  8A0D              ;														; _ puntero (Indice_entidades).
 238  8A0D
 239  8A0D
 240  8A0D              ;---------------------------------------------------------------------------------------------------------------
 241  8A0D              ;
 242  8A0D              ; Sirven para PINTAR.
 243  8A0D
 244  8A0D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 245  8A0F              ;														; _variable para almacenar lo posición del puntero_
 246  8A0F              ; 														; _de pila, SP.
 247  8A0F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 248  8A11              ;														; La utiliza la rutina [Extrae_foto_registros].
 249  8A11 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 250  8A13              ;														; _el snapshot de los registros de la siguiente entidad.
 251  8A13              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 252  8A13 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 253  8A15              ;														; _el snapshot de los registros del siguiente disparo.
 254  8A15              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 255  8A15
 256  8A15              ;---------------------------------------------------------------------------------------------------------------
 257  8A15
 258  8A15              ; Gestión de Disparos.
 259  8A15
 260  8A15 00           Numero_de_disparotes db 0
 261  8A16 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 262  8A18 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 263  8A1A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 264  8A1B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 265  8A1B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 266  8A1B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 267  8A1D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 268  8A1D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 269  8A1D              ;														; _produzca colisión.
 270  8A1D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 271  8A1F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 272  8A1F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 273  8A22              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 274  8A22 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 275  8A25              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 276  8A25              ;---------------------------------------------------------------------------------------------------------------
 277  8A25
 278  8A25              ; Relojes y temporizaciones.
 279  8A25
 280  8A25 00           Contador_de_frames db 0
 281  8A26 04           Clock_explosion db 4
 282  8A27 1E           Clock_Entidades_en_curso db 30
 283  8A28 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 284  8A29              ;														; Repite la oleada de entidades.
 285  8A29 01           Habilita_disparo_Amadeus db 1
 286  8A2A 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 287  8A2B 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 288  8A2C
 289  8A2C 01           Habilita_disparo_entidad db 1
 290  8A2D 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 291  8A2E 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 292  8A2F
 293  8A2F              ;---------------------------------------------------------------------------------------------------------------
 294  8A2F
 295  8A2F              ; Gestión de NIVELES.
 296  8A2F
 297  8A2F 00           Nivel db 0												; Nivel actual del juego.
 298  8A30 00 00        Puntero_indice_NIVELES defw 0
 299  8A32 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 300  8A34              ; 														; _ que definen el NIVEL.
 301  8A34              ; Y todo comienza aquí .....
 302  8A34              ;
 303  8A34              ; Rutina principal *************************************************************************************************************************************************************************
 304  8A34              ;
 305  8A34              ;	14/11/22
 306  8A34
 307  8A34              START
 308  8A34
 309  8A34 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 310  8A37 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 311  8A39 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 312  8A3B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 313  8A3D F3           	DI
 314  8A3E
 315  8A3E 3E 07        	ld a,%00000111
 316  8A40 CD E0 98     	call Cls
 317  8A43
 318  8A43              ;	call Pinta_marco
 319  8A43
 320  8A43 CD 05 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 321  8A46
 322  8A46 CD FD 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 323  8A49
 324  8A49 CD 17 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 325  8A4C
 326  8A4C CD D0 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 327  8A4F              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 328  8A4F CD AD 8D     	call Restore_entidad
 329  8A52
 330  8A52 21 06 8A     	ld hl,Numero_parcial_de_entidades
 331  8A55 46           	ld b,(hl)
 332  8A56 04           	inc b
 333  8A57 05           	dec b
 334  8A58 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 335  8A5A
 336  8A5A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 337  8A5A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 338  8A5A              ;	Pintamos el resto de entidades:
 339  8A5A
 340  8A5A              ;	INICIA ENTIDADES !!!!!
 341  8A5A
 342  8A5A C5           1 push bc  												; Guardo el contador de entidades.
 343  8A5B CD 2A 8D     	call Inicia_Puntero_objeto
 344  8A5E CD F4 98     	call Recompone_posicion_inicio
 345  8A61 CD 30 93     	call Draw
 346  8A64 CD A0 7F     	call Guarda_foto_registros
 347  8A67 CD 72 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 348  8A6A C1           	pop bc
 349  8A6B 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 350  8A6D
 351  8A6D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 352  8A6D              ; (Esto se dá cuando se inicia una nueva oleada).
 353  8A6D
 354  8A6D 3A FC 89     	ld a,(Ctrl_1)
 355  8A70 CB 5F        	bit 3,a
 356  8A72 20 18        	jr nz,5F											; Loop
 357  8A74
 358  8A74              ; 	INICIA AMADEUS !!!!!
 359  8A74
 360  8A74 CD D4 8D     3 call Restore_Amadeus
 361  8A77 CD 2A 8D     	call Inicia_Puntero_objeto
 362  8A7A CD 30 93     	call Draw
 363  8A7D CD A0 7F     	call Guarda_foto_registros
 364  8A80 11 8C 85     	ld de,Amadeus_db
 365  8A83 CD E6 8D     	call Store_Amadeus
 366  8A86
 367  8A86              ; 	INICIA DISPAROS !!!!!
 368  8A86
 369  8A86 CD E6 8C     	call Inicia_Puntero_Disparo_Entidades
 370  8A89 CD ED 8C     	call Inicia_Puntero_Disparo_Amadeus
 371  8A8C
 372  8A8C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 373  8A8C
 374  8A8C CD D0 8C     5 call Inicia_punteros_de_cajas
 375  8A8F CD AD 8D     	call Restore_entidad
 376  8A92
 377  8A92 3A FC 89     	ld a,(Ctrl_1)
 378  8A95 CB 5F        	bit 3,a
 379  8A97 28 0A        	jr z,6F
 380  8A99
 381  8A99              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 382  8A99
 383  8A99 21 FC 89     	ld hl,Ctrl_1
 384  8A9C CB 9E        	res 3,(hl)
 385  8A9E CD F4 8C     	call Calcula_numero_de_malotes
 386  8AA1 18 07        	jr 7F
 387  8AA3
 388  8AA3              ; ----------
 389  8AA3
 390  8AA3 3A 06 8A     6 ld a,(Numero_parcial_de_entidades)
 391  8AA6 3C           	inc a
 392  8AA7 32 08 8A     	ld (Numero_de_malotes),a
 393  8AAA
 394  8AAA AF           7 xor a
 395  8AAB FB           2 ei
 396  8AAC 28 FD        	jr z,2B
 397  8AAE
 398  8AAE 3A 25 8A     	ld a,(Contador_de_frames)
 399  8AB1 47           	ld b,a
 400  8AB2 3A 28 8A     	ld a,(Activa_recarga_cajas)
 401  8AB5 B8           	cp b
 402  8AB6 28 08        	jr z,8F
 403  8AB8
 404  8AB8 21 FC 89     	ld hl,Ctrl_1
 405  8ABB CB E6        	set 4,(hl)
 406  8ABD AF           	xor a
 407  8ABE 18 EB        	jr 2B
 408  8AC0
 409  8AC0 21 FC 89     8 ld hl,Ctrl_1
 410  8AC3 CB A6        	res 4,(hl)
 411  8AC5 F3           	di
 412  8AC6
 413  8AC6 3A 25 8A     	ld a,(Contador_de_frames)
 414  8AC9
 415  8AC9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 416  8AC9              ;! _ IMPREDECIBLE !!!!
 417  8AC9
 418  8AC9 C6 0A        	add 10
 419  8ACB 32 27 8A     	ld (Clock_Entidades_en_curso),a
 420  8ACE
 421  8ACE C3 49 8A     	jp 4B
 422  8AD1
 423  8AD1              ; -----------------------------------------------------------------------------------
 424  8AD1
 425  8AD1              Frame
 426  8AD1
 427  8AD1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 428  8AD1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 429  8AD1
 430  8AD1              ; PINTAMOS.
 431  8AD1
 432  8AD1 3E 02            ld a,2
 433  8AD3 D3 FE            out ($fe),a
 434  8AD5 CD 34 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 435  8AD8 CD 6D 96     	call Extrae_foto_disparos
 436  8ADB 3E 01            ld a,1
 437  8ADD D3 FE            out ($fe),a
 438  8ADF
 439  8ADF              ; ----------------------------------------------------------------------
 440  8ADF
 441  8ADF              ; RELOJES.
 442  8ADF
 443  8ADF 21 25 8A     	ld hl,Contador_de_frames
 444  8AE2 34           	inc (hl)											; 0 - 255
 445  8AE3
 446  8AE3 3A 27 8A     	ld a,(Clock_Entidades_en_curso)
 447  8AE6 47           	ld b,a
 448  8AE7 3A 25 8A     	ld a,(Contador_de_frames)
 449  8AEA B8           	cp b
 450  8AEB 20 18        	jr nz,13F
 451  8AED
 452  8AED 3A 06 8A     	ld a,(Numero_parcial_de_entidades)
 453  8AF0 47           	ld b,a
 454  8AF1 3A 07 8A     	ld a,(Entidades_en_curso)
 455  8AF4 B8           	cp b
 456  8AF5 28 0E        	jr z,13F
 457  8AF7 30 0C        	jr nc,13F
 458  8AF9
 459  8AF9 3C           	inc a
 460  8AFA 32 07 8A     	ld (Entidades_en_curso),a
 461  8AFD
 462  8AFD 3A 27 8A     	ld a,(Clock_Entidades_en_curso)
 463  8B00
 464  8B00              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 465  8B00              ;! _ IMPREDECIBLE !!!!
 466  8B00
 467  8B00 C6 64        	add 100
 468  8B02 32 27 8A     	ld (Clock_Entidades_en_curso),a
 469  8B05
 470  8B05              ; Habilita disparos.
 471  8B05
 472  8B05 21 29 8A     13 ld hl,Habilita_disparo_Amadeus
 473  8B08 11 2B 8A     	ld de,Temporiza_disparo_Amadeus
 474  8B0B CD 5A 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 475  8B0E
 476  8B0E 21 2C 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 477  8B11 11 2E 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 478  8B14 CD 5A 9D     	call Habilita_disparos
 479  8B17
 480  8B17              ; COLISIONES.
 481  8B17
 482  8B17 CD 12 92     	call Selector_de_impactos
 483  8B1A
 484  8B1A              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 485  8B1A              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 486  8B1A              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 487  8B1A
 488  8B1A AF           	xor a
 489  8B1B 32 1A 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 490  8B1E
 491  8B1E CD D0 8C     	call Inicia_punteros_de_cajas
 492  8B21 CD AD 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 493  8B24              ; 														; _ en DRAW.
 494  8B24 3A BB 89     	ld a,(Filas)
 495  8B27 A7           	and a
 496  8B28 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 497  8B2A CD BF 8D     	call Incrementa_punteros_de_cajas
 498  8B2D 18 F2        	jr 12B
 499  8B2F
 500  8B2F              ; ---------------------------------------------------------------------------------------
 501  8B2F
 502  8B2F CD 8D 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 503  8B32 21 00 70     	ld hl,Album_de_fotos
 504  8B35 22 11 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 505  8B38              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 506  8B38 3A 06 8A     	ld a,(Numero_parcial_de_entidades)
 507  8B3B 47               ld b,a
 508  8B3C A7           	and a
 509  8B3D 20 14        	jr nz,2F
 510  8B3F
 511  8B3F 21 FC 89     	ld hl,Ctrl_1
 512  8B42 CB 66        	bit 4,(hl)
 513  8B44 C2 D0 8B     	jp nz,4F
 514  8B47
 515  8B47 21 FC 89     	ld hl,Ctrl_1
 516  8B4A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 517  8B4C
 518  8B4C 3A 25 8A     	ld a,(Contador_de_frames)
 519  8B4F 3C           	inc a
 520  8B50 32 28 8A     	ld (Activa_recarga_cajas),a
 521  8B53
 522  8B53              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 523  8B53
 524  8B53 3A 07 8A     2 ld a,(Entidades_en_curso)
 525  8B56 A7           	and a
 526  8B57 CA D0 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 527  8B5A 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 528  8B5B
 529  8B5B              ; Código que ejecutamos con cada entidad:
 530  8B5B              ; Impacto ???
 531  8B5B
 532  8B5B C5           15 push bc 												; Nº de entidades en curso.
 533  8B5C
 534  8B5C              ;	call Autorizacion									; NO todas las entidades se pintan. (25fps).
 535  8B5C
 536  8B5C 3A D4 89     	ld a,(Impacto)
 537  8B5F A7           	and a
 538  8B60 28 2D        	jr z,8F
 539  8B62
 540  8B62              ; Hay Impacto en esta entidad.
 541  8B62
 542  8B62 21 26 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 543  8B65 35           	dec (hl)
 544  8B66 20 62        	jr nz,6F
 545  8B68
 546  8B68              ;! Velocidad de la animación de la explosión.
 547  8B68
 548  8B68 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 549  8B6A              ;														; _,(velocidad de la explosión).
 550  8B6A CD 87 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 551  8B6D
 552  8B6D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 553  8B6D
 554  8B6D 3A FA 89     	ld a,(Ctrl_2)
 555  8B70 CB 4F        	bit 1,a
 556  8B72 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 557  8B74
 558  8B74              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 559  8B74
 560  8B74 3A C3 89     	ld a,(CTRL_DESPLZ)
 561  8B77 A7           	and a
 562  8B78 20 08        	jr nz,21F
 563  8B7A
 564  8B7A 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 565  8B7D 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 566  8B80 18 06        	jr 22F
 567  8B82
 568  8B82 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 569  8B85 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 570  8B88
 571  8B88 21 FA 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 572  8B8B CB CE        	set 1,(hl)
 573  8B8D 18 22        	jr 7F
 574  8B8F
 575  8B8F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 576  8B8F              ; _con las coordenadas de la entidad almacenada en DRAW.
 577  8B8F
 578  8B8F 3A FC 89     8 ld a,(Ctrl_1)
 579  8B92 CB 57        	bit 2,a
 580  8B94 28 1B        	jr z,7F
 581  8B96
 582  8B96 2A 1D 8A     	ld hl,(Coordenadas_disparo_certero)
 583  8B99 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 584  8B9A              ;														; E contiene la coordenada_X del disparo.
 585  8B9A 2A C1 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 586  8B9D              ;														; H FILA, (Coordenada_y de la entidad).
 587  8B9D A7           	and a
 588  8B9E ED 52        	sbc hl,de
 589  8BA0
 590  8BA0 CD 49 92     	call Determina_resultado_comparativa
 591  8BA3
 592  8BA3              ;! Debug colisiones
 593  8BA3 78           	ld a,b
 594  8BA4 A7           	and a
 595  8BA5              ;	ld a,(Cuad_objeto)
 596  8BA5              ;	inc b
 597  8BA5              ;	dec b
 598  8BA5 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 599  8BA7              ;	jr z,$
 600  8BA7
 601  8BA7              ;! Debug colisiones
 602  8BA7
 603  8BA7              ; ----- ----- -----
 604  8BA7
 605  8BA7 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 606  8BA9 32 D4 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 607  8BAC
 608  8BAC 21 FC 89     	ld hl,Ctrl_1
 609  8BAF CB 96        	res 2,(hl)
 610  8BB1
 611  8BB1 CD 03 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 612  8BB4
 613  8BB4 3A E9 89     	ld a,(Ctrl_0)
 614  8BB7 CB 67        	bit 4,a
 615  8BB9 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 616  8BBB
 617  8BBB              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 618  8BBB              ; [[[
 619  8BBB CD 48 8E     	call Detecta_disparo_entidad
 620  8BBE              ; ]]]
 621  8BBE CD 97 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 622  8BC1
 623  8BC1 21 E9 89     	ld hl,Ctrl_0
 624  8BC4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 625  8BC6 AF           	xor a
 626  8BC7 32 EA 89     	ld (Obj_dibujado),a
 627  8BCA
 628  8BCA CD 72 8D     6 call Store_Restore_cajas
 629  8BCD
 630  8BCD C1           	pop bc
 631  8BCE 10 8B        	djnz 15B
 632  8BD0
 633  8BD0              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 634  8BD0
 635  8BD0              ;	ld a,2
 636  8BD0              ;	ld (Limitador_de_entidades_x_frame),a
 637  8BD0
 638  8BD0              ; ------------------------------------
 639  8BD0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 640  8BD0              ; Hemos gestionado todas las unidades.
 641  8BD0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 642  8BD0
 643  8BD0              ;	ld hl,Ctrl_1
 644  8BD0              ;	res 2,(hl)
 645  8BD0
 646  8BD0              ; ------------------------------------
 647  8BD0
 648  8BD0              ; Tras la gestión de las entidades, ... AMADEUS.
 649  8BD0
 650  8BD0 CD D4 8D     4 call Restore_Amadeus
 651  8BD3
 652  8BD3 3A D4 89     	ld a,(Impacto)
 653  8BD6 A7           	and a
 654  8BD7 20 FE        	jr nz,$
 655  8BD9
 656  8BD9 CD 68 8C     	call Mov_Amadeus
 657  8BDC
 658  8BDC 3A E9 89     	ld a,(Ctrl_0)
 659  8BDF CB 67        	bit 4,a
 660  8BE1 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 661  8BE3
 662  8BE3 CD 97 8C     	call Guarda_foto_entidad_a_pintar
 663  8BE6
 664  8BE6 21 E9 89     3 ld hl,Ctrl_0
 665  8BE9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 666  8BEB AF           	xor a
 667  8BEC 32 EA 89     	ld (Obj_dibujado),a
 668  8BEF
 669  8BEF 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 670  8BF2 CD E6 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 671  8BF5
 672  8BF5 CD AB 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 673  8BF8
 674  8BF8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 675  8BF8
 676  8BF8 CD 0C 8D     	call Calcula_numero_de_disparotes
 677  8BFB CD F4 8C     9 call Calcula_numero_de_malotes
 678  8BFE
 679  8BFE 3E 04        	ld a,4
 680  8C00 D3 FE        	out ($fe),a
 681  8C02
 682  8C02 C9           	ret
 683  8C03
 684  8C03              ; --------------------------------------------------------------------------------------------------------------
 685  8C03              ;
 686  8C03              ;	27/05/23
 687  8C03
 688  8C03              Mov_obj
 689  8C03
 690  8C03              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 691  8C03
 692  8C03 3A FA 89     	ld a,(Ctrl_2)
 693  8C06 CB 4F        	bit 1,a
 694  8C08 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 695  8C0A
 696  8C0A              ; Explosión:
 697  8C0A
 698  8C0A 3A FB 89     	ld a,(Frames_explosion)
 699  8C0D A7           	and a
 700  8C0E 20 11        	jr nz,4F
 701  8C10
 702  8C10              ; Una alimaña menos!!!!!!!!!1
 703  8C10
 704  8C10 CD EF 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 705  8C13 21 06 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 706  8C16 35           	dec (hl)
 707  8C17 21 07 8A     	ld hl,Entidades_en_curso
 708  8C1A 35           	dec (hl)
 709  8C1B 21 05 8A     	ld hl,Numero_de_entidades
 710  8C1E 35           	dec (hl)
 711  8C1F 18 46        	jr 3F
 712  8C21
 713  8C21              ; -----
 714  8C21
 715  8C21              ;	`Movemos´ la explosión.
 716  8C21
 717  8C21 2A C9 89     4 ld hl,(Puntero_DESPLZ_der)
 718  8C24 23           	inc hl
 719  8C25 23           	inc hl
 720  8C26 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 721  8C29 CD 24 8D     	call Extrae_address
 722  8C2C 22 BF 89     	ld (Puntero_objeto),hl
 723  8C2F
 724  8C2F 21 FB 89     	ld hl,Frames_explosion
 725  8C32 35           	dec (hl)
 726  8C33
 727  8C33 CD 87 8C     	call Guarda_foto_entidad_a_borrar
 728  8C36 18 2F        	jr 3F
 729  8C38
 730  8C38 AF           2 xor a
 731  8C39 32 EA 89     	ld (Obj_dibujado),a
 732  8C3C 32 E9 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 733  8C3F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 734  8C3F              ; 														; _de la entidad.
 735  8C3F CD A1 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 736  8C42              ;														; Obj_dibujado="0".
 737  8C42              ; Movemos Entidades malignas.
 738  8C42
 739  8C42              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 740  8C42              ;	and a 												; _a movernos. (Limitador_de_entidades).
 741  8C42              ;	ret z
 742  8C42
 743  8C42 21 EC 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 744  8C45 34           	inc (hl)
 745  8C46 35           	dec (hl)                                            ; Salimos de la rutina.
 746  8C47 C8           	ret z
 747  8C48
 748  8C48 CD 94 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 749  8C4B
 750  8C4B 3A E9 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 751  8C4E CB 67        	bit 4,a
 752  8C50 C8           	ret z
 753  8C51
 754  8C51              ; Ha habido desplazamiento de la entidad maligna.
 755  8C51              ; Ha llegado a zona de AMADEUS ???
 756  8C51
 757  8C51 3A C2 89     	ld a,(Coordenada_y)
 758  8C54 FE 14        	cp $14
 759  8C56 D4 DC 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 760  8C59              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 761  8C59              ; ---------
 762  8C59
 763  8C59 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 764  8C5B 32 EA 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 765  8C5E CD A1 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 766  8C61 CD B8 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 767  8C64 CD 87 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 768  8C67 C9           3 ret													; _de la misma.
 769  8C68
 770  8C68              ; --------------------------------------------------------------------------------------------------------------
 771  8C68              ;
 772  8C68              ;	29/1/23
 773  8C68
 774  8C68              Mov_Amadeus
 775  8C68
 776  8C68 AF           	xor a
 777  8C69 32 EA 89     	ld (Obj_dibujado),a
 778  8C6C CD A1 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 779  8C6F              ;														; Obj_dibujado="0".
 780  8C6F              ; Movemos Amadeus.
 781  8C6F
 782  8C6F CD 11 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 783  8C72 3A E9 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 784  8C75 CB 67        	bit 4,a
 785  8C77 C8           	ret z
 786  8C78
 787  8C78              ; ---------
 788  8C78
 789  8C78 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 790  8C7A 32 EA 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 791  8C7D CD A1 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 792  8C80 CD B8 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 793  8C83 CD 87 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 794  8C86 C9           	ret													; _de la nave.
 795  8C87
 796  8C87              ; --------------------------------------------------------------------------------------------------------------
 797  8C87              ;
 798  8C87              ;	31/01/23
 799  8C87              ;
 800  8C87              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 801  8C87
 802  8C87              Guarda_foto_entidad_a_borrar
 803  8C87
 804  8C87 CD 0A 96     	call Prepara_draw
 805  8C8A CD 44 95     	call calcula_CColumnass
 806  8C8D CD 7B 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 807  8C90 CD D0 95     	call Define_rutina_de_impresion
 808  8C93 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 809  8C96 C9           	ret
 810  8C97
 811  8C97              ; --------------------------------------------------------------------------------------------------------------
 812  8C97              ;
 813  8C97              ;	31/01/23
 814  8C97              ;
 815  8C97              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 816  8C97              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 817  8C97
 818  8C97              Guarda_foto_entidad_a_pintar
 819  8C97
 820  8C97 CD C4 8C     	call Repone_pintar
 821  8C9A CD 30 93     	call Draw
 822  8C9D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 823  8CA0 C9           	ret
 824  8CA1
 825  8CA1              ; --------------------------------------------------------------------------------------------------------------
 826  8CA1              ;
 827  8CA1              ;
 828  8CA1
 829  8CA1 21 BB 89     Prepara_var_pintado_borrado	ld hl,Filas
 830  8CA4 3A EA 89     	ld a,(Obj_dibujado)
 831  8CA7 A7           	and a
 832  8CA8 28 05        	jr z,1F
 833  8CAA 11 DF 89     	ld de,Variables_de_pintado
 834  8CAD 18 03        	jr 2F
 835  8CAF 11 D5 89     1 ld de,Variables_de_borrado
 836  8CB2 01 08 00     2 ld bc,8
 837  8CB5 ED B0        	ldir
 838  8CB7 C9           	ret
 839  8CB8
 840  8CB8              ; --------------------------------------------------------------------------------------------------------------
 841  8CB8
 842  8CB8 21 D5 89     Repone_borrar ld hl,Variables_de_borrado
 843  8CBB 11 BB 89     	ld de,Filas
 844  8CBE 01 08 00     	ld bc,8
 845  8CC1 ED B0        	ldir
 846  8CC3 C9           	ret
 847  8CC4
 848  8CC4 21 DF 89     Repone_pintar ld hl,Variables_de_pintado
 849  8CC7 11 BB 89     	ld de,Filas
 850  8CCA 01 08 00     	ld bc,8
 851  8CCD ED B0        	ldir
 852  8CCF C9           	ret
 853  8CD0
 854  8CD0              ; *************************************************************************************************************************************************************
 855  8CD0              ;
 856  8CD0              ; 8/1/23
 857  8CD0              ;
 858  8CD0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 859  8CD0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 860  8CD0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 861  8CD0
 862  8CD0              ; Destruye HL y DE !!!!!
 863  8CD0
 864  8CD0              Inicia_punteros_de_cajas
 865  8CD0
 866  8CD0 21 74 85     	ld hl,Indice_de_cajas
 867  8CD3 CD 24 8D         call Extrae_address
 868  8CD6 22 FF 89         ld (Puntero_store_caja),hl
 869  8CD9 21 76 85     	ld hl,Indice_de_cajas+2
 870  8CDC 22 03 8A     	ld (Indice_restore_caja),hl
 871  8CDF CD 24 8D     	call Extrae_address
 872  8CE2 22 01 8A     	ld (Puntero_restore_caja),hl
 873  8CE5 C9               ret
 874  8CE6
 875  8CE6              ; *************************************************************************************************************************************************************
 876  8CE6              ;
 877  8CE6              ; 8/1/23
 878  8CE6              ;
 879  8CE6              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 880  8CE6
 881  8CE6 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 882  8CE9 22 16 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883  8CEC C9           	ret
 884  8CED 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 885  8CF0 22 18 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 886  8CF3 C9           	ret
 887  8CF4
 888  8CF4              ; -------------------------------------------------------------------------------------------------------------
 889  8CF4              ;
 890  8CF4              ; 28/2/23
 891  8CF4              ;
 892  8CF4
 893  8CF4              Calcula_numero_de_malotes
 894  8CF4
 895  8CF4 21 00 70     	ld hl,Album_de_fotos
 896  8CF7 EB           	ex de,hl
 897  8CF8 2A 11 8A     	ld hl,(Stack_snapshot)
 898  8CFB
 899  8CFB 06 00        	ld b,0
 900  8CFD 7D           	ld a,l
 901  8CFE 93           	sub e
 902  8CFF 28 07        	jr z,1F
 903  8D01
 904  8D01              ; Nº de malotes no es "0".
 905  8D01
 906  8D01 D6 06        2 sub 6
 907  8D03 04           	inc b
 908  8D04 A7           	and a
 909  8D05 20 FA        	jr nz,2B
 910  8D07 78           	ld a,b
 911  8D08
 912  8D08 32 08 8A     1 ld (Numero_de_malotes),a
 913  8D0B C9           	ret
 914  8D0C
 915  8D0C              ; -------------------------------------------------------------------------------------------------------------
 916  8D0C              ;
 917  8D0C              ; 28/2/23
 918  8D0C              ;
 919  8D0C
 920  8D0C              Calcula_numero_de_disparotes
 921  8D0C
 922  8D0C 21 85 70     	ld hl,Album_de_fotos_disparos
 923  8D0F EB           	ex de,hl
 924  8D10 2A 13 8A     	ld hl,(Stack_snapshot_disparos)
 925  8D13
 926  8D13 06 00        	ld b,0
 927  8D15 7D           	ld a,l
 928  8D16 93           	sub e
 929  8D17 28 07        	jr z,1F
 930  8D19
 931  8D19              ; Nº de malotes no es "0".
 932  8D19
 933  8D19 D6 06        2 sub 6
 934  8D1B 04           	inc b
 935  8D1C A7           	and a
 936  8D1D 20 FA        	jr nz,2B
 937  8D1F 78           	ld a,b
 938  8D20
 939  8D20 32 15 8A     1 ld (Numero_de_disparotes),a
 940  8D23 C9           	ret
 941  8D24              ; *************************************************************************************************************************************************************
 942  8D24              ;
 943  8D24              ; 20/10/22
 944  8D24              ;
 945  8D24              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 946  8D24              ;
 947  8D24              ; Destruye el puntero y DE !!!!!
 948  8D24
 949  8D24 5E           Extrae_address ld e,(hl)
 950  8D25 23           	inc hl
 951  8D26 56           	ld d,(hl)
 952  8D27 2B           	dec hl
 953  8D28 EB           	ex de,hl
 954  8D29 C9           	ret
 955  8D2A
 956  8D2A              ; *************************************************************************************************************************************************************
 957  8D2A              ;
 958  8D2A              ;	7/2/23
 959  8D2A              ;
 960  8D2A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 961  8D2A              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 962  8D2A              ;
 963  8D2A              ;   Destruye HL y BC !!!!!,
 964  8D2A              ;
 965  8D2A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 966  8D2A              ;					"0" ..... Izquierda.
 967  8D2A
 968  8D2A              Inicia_Puntero_objeto
 969  8D2A
 970  8D2A 3A CF 89     	ld a,(Cuad_objeto)
 971  8D2D E6 01        	and 1
 972  8D2F F5           	push af
 973  8D30 CC 4E 8D     	call z,Inicia_puntero_objeto_izq
 974  8D33 F1           	pop af
 975  8D34 28 2B        	jr z,1F
 976  8D36 CD 3B 8D     	call Inicia_puntero_objeto_der
 977  8D39 18 26        	jr 1F
 978  8D3B
 979  8D3B              ; Arrancamos desde la parte izquierda de la pantalla.
 980  8D3B              ; Iniciamos (Indice_Sprite_der).
 981  8D3B
 982  8D3B 2A C5 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 983  8D3E 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 984  8D41 CD 24 8D     	call Extrae_address
 985  8D44 22 BF 89     	ld (Puntero_objeto),hl
 986  8D47
 987  8D47 2A C7 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 988  8D4A 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
 989  8D4D C9           	ret
 990  8D4E
 991  8D4E              ; Arrancamos desde la parte derecha de la pantalla.
 992  8D4E              ; Iniciamos (Indice_Sprite_izq).
 993  8D4E
 994  8D4E 2A C7 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 995  8D51 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
 996  8D54 CD 24 8D     	call Extrae_address
 997  8D57 22 BF 89     	ld (Puntero_objeto),hl
 998  8D5A
 999  8D5A 2A C5 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1000  8D5D 22 C9 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1001  8D60 C9           	ret
1002  8D61
1003  8D61              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1004  8D61
1005  8D61 21 48 83     1 ld hl,Amadeus
1006  8D64 ED 4B BF 89  	ld bc,(Puntero_objeto)
1007  8D68 B7 ED 42     	sub hl,bc
1008  8D6B C0           	ret nz
1009  8D6C 21 E9 89     	ld hl,Ctrl_0
1010  8D6F CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1011  8D71 C9           	ret 												; _de nuestra nave en los extremos.
1012  8D72
1013  8D72              ; *************************************************************************************************************************************************************
1014  8D72              ;
1015  8D72              ;	14/5/23
1016  8D72              ;
1017  8D72              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1018  8D72              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1019  8D72
1020  8D72              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1021  8D72              ;	_de la 2ª y 3ª entidad respectivamente.
1022  8D72
1023  8D72              Store_Restore_cajas
1024  8D72
1025  8D72 E5           	push hl
1026  8D73 D5           	push de
1027  8D74 C5            	push bc
1028  8D75
1029  8D75              ;	STORE !!!!!
1030  8D75              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1031  8D75
1032  8D75 21 BB 89     	ld hl,Filas
1033  8D78 ED 5B FF 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1034  8D7C 01 41 00     	ld bc,65
1035  8D7F ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1036  8D81
1037  8D81              ; 	Entidad_sospechosa. 20/4/23
1038  8D81
1039  8D81 3A D4 89     	ld a,(Impacto)
1040  8D84 A7           	and a
1041  8D85 28 0C        	jr z,1F
1042  8D87
1043  8D87 2A FF 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1044  8D8A 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1045  8D8D A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1046  8D8E ED 4A        	adc hl,bc 											; _ "0" más adelante.
1047  8D90 22 1B 8A     	ld (Entidad_sospechosa_de_colision),hl
1048  8D93
1049  8D93              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1050  8D93
1051  8D93 2A 01 8A     1 ld hl,(Puntero_restore_caja)
1052  8D96 7E           	ld a,(hl)
1053  8D97 A7           	and a
1054  8D98 F5           	push af
1055  8D99 28 08        	jr z,2F
1056  8D9B
1057  8D9B 11 BB 89     	ld de,Filas
1058  8D9E 01 41 00     	ld bc,65
1059  8DA1 ED B0        	ldir
1060  8DA3
1061  8DA3 CD BF 8D     2 call Incrementa_punteros_de_cajas
1062  8DA6 F1           	pop af
1063  8DA7 28 EA        	jr z,1B
1064  8DA9
1065  8DA9 C1           	pop bc
1066  8DAA D1           	pop de
1067  8DAB E1           	pop hl
1068  8DAC
1069  8DAC C9           	ret
1070  8DAD
1071  8DAD              ; **************************************************************************************************
1072  8DAD              ;
1073  8DAD              ;	12/05/23
1074  8DAD              ;
1075  8DAD              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1076  8DAD
1077  8DAD E5           Restore_entidad push hl
1078  8DAE D5           	push de
1079  8DAF C5            	push bc
1080  8DB0
1081  8DB0 2A FF 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1082  8DB3 11 BB 89     	ld de,Filas
1083  8DB6 01 41 00     	ld bc,65
1084  8DB9 ED B0        	ldir
1085  8DBB
1086  8DBB C1           	pop bc
1087  8DBC D1           	pop de
1088  8DBD E1           	pop hl
1089  8DBE C9           	ret
1090  8DBF
1091  8DBF
1092  8DBF              ; **************************************************************************************************
1093  8DBF              ;
1094  8DBF              ;	08/05/23
1095  8DBF              ;
1096  8DBF              ;	Incrementamos los dos punteros de entidades. (+1).
1097  8DBF
1098  8DBF 2A 01 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1099  8DC2 22 FF 89     	ld (Puntero_store_caja),hl
1100  8DC5 2A 03 8A     	ld hl,(Indice_restore_caja)
1101  8DC8 23           	inc hl
1102  8DC9 23           	inc hl
1103  8DCA 22 03 8A     	ld (Indice_restore_caja),hl
1104  8DCD CD 24 8D         call Extrae_address
1105  8DD0 22 01 8A         ld (Puntero_restore_caja),hl
1106  8DD3 C9               ret
1107  8DD4
1108  8DD4              ; **************************************************************************************************
1109  8DD4              ;
1110  8DD4              ;	25/01/23
1111  8DD4              ;
1112  8DD4              ;	Restore_Amadeus
1113  8DD4              ;
1114  8DD4              ;	Cargamos en DRAW los parámetros de Amadeus.
1115  8DD4              ;
1116  8DD4
1117  8DD4 E5           Restore_Amadeus	push hl
1118  8DD5 D5           	push de
1119  8DD6 C5            	push bc
1120  8DD7 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1121  8DDA 11 BB 89     	ld de,Filas
1122  8DDD 01 41 00     	ld bc,65
1123  8DE0 ED B0        	ldir
1124  8DE2 C1           	pop bc
1125  8DE3 D1           	pop de
1126  8DE4 E1           	pop hl
1127  8DE5 C9           	ret
1128  8DE6
1129  8DE6              ; *************************************************************************************************************************************************************
1130  8DE6              ;
1131  8DE6              ;	29/04/23
1132  8DE6              ;
1133  8DE6              ;	Store_Amadeus
1134  8DE6              ;
1135  8DE6              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1136  8DE6              ;
1137  8DE6              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1138  8DE6              ;
1139  8DE6              ;	DESTRUYE: HL y BC y DE.
1140  8DE6
1141  8DE6 21 BB 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1142  8DE9 01 41 00     	ld bc,65
1143  8DEC ED B0        	ldir
1144  8DEE C9           	ret
1145  8DEF
1146  8DEF              ; -----------------------------------------------------------
1147  8DEF              ;
1148  8DEF              ;	27/04/23
1149  8DEF              ;
1150  8DEF              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1151  8DEF              ;
1152  8DEF              ;	Destruye: HL,BC,DE,A
1153  8DEF
1154  8DEF 21 BB 89     Borra_datos_entidad ld hl,Filas
1155  8DF2 01 40 00     	ld bc,64
1156  8DF5 AF           	xor a
1157  8DF6 77           	ld (hl),a
1158  8DF7 11 BC 89     	ld de,Filas+1
1159  8DFA ED B0        	ldir
1160  8DFC C9           	ret
1161  8DFD
1162  8DFD              ; -----------------------------------------------------------
1163  8DFD
1164  8DFD              ; Teclado.
1165  8DFD
1166  8DFD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1167  8DFF DB FE        	in a,($fe)
1168  8E01 E6 01        	and $01
1169  8E03 28 02        	jr z,1f
1170  8E05 18 F6        	jr Pulsa_ENTER
1171  8E07 C9           1 ret
1172  8E08
1173  8E08              ; **************************************************************************************************
1174  8E08              ;
1175  8E08              ; Temporización.
1176  8E08
1177  8E08              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1178  8E08              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1179  8E08              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1180  8E08              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1181  8E08
1182  8E08              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1183  8E08              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1184  8E08              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1185  8E08
1186  8E08              ; A partir de $4f61 no hace falta DELAY.
1187  8E08
1188  8E08              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1189  8E08
1190  8E08 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1191  8E0B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1192  8E0C 78           	LD A,B
1193  8E0D A7           	AND A
1194  8E0E 20 FB        	JR NZ,wait
1195  8E10 C9           	RET
1196  8E11
1197  8E11              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1198  8E11              ;
1199  8E11              ;	5/3/23
1200  8E11              ;
1201  8E11              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1202  8E11
1203  8E11              Movimiento_Amadeus
1204  8E11
1205  8E11              ; Disparo.
1206  8E11
1207  8E11 3A 29 8A     	ld a,(Habilita_disparo_Amadeus)
1208  8E14 A7           	and a
1209  8E15 20 02        	jr nz,1F
1210  8E17 18 15        	jr 2F
1211  8E19
1212  8E19 3E F7        1 ld a,$f7													; "5" para disparar.
1213  8E1B DB FE        	in a,($fe)
1214  8E1D E6 10        	and $10
1215  8E1F
1216  8E1F F5           	push af
1217  8E20 CC 58 8E     	call z,Genera_disparo
1218  8E23 F1           	pop af
1219  8E24 20 08        	jr nz,2F
1220  8E26
1221  8E26 3A 29 8A     	ld a,(Habilita_disparo_Amadeus)
1222  8E29 EE 01        	xor 1
1223  8E2B 32 29 8A     	ld (Habilita_disparo_Amadeus),a
1224  8E2E
1225  8E2E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1226  8E30 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1227  8E32 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1228  8E34 CC AE 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1229  8E37 3E F7        	ld a,$f7
1230  8E39 DB FE        	in a,($fe)
1231  8E3B E6 01        	and $01
1232  8E3D C8           	ret z
1233  8E3E
1234  8E3E 3E F7        	ld a,$f7
1235  8E40 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1236  8E42 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1237  8E44 CC 90 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1238  8E47 C9           	ret
1239  8E48
1240  8E48              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1241  8E48              ;
1242  8E48              ;	Rutina provisional para que los malotes cagen balas.
1243  8E48
1244  8E48              Detecta_disparo_entidad
1245  8E48
1246  8E48 3A 2C 8A     	ld a,(Habilita_disparo_entidad)
1247  8E4B A7           	and a
1248  8E4C C8           	ret z
1249  8E4D 3E 7F        	ld a,$7f
1250  8E4F DB FE        	in a,($fe)
1251  8E51 E6 01        	and 1
1252  8E53 C0           	ret nz
1253  8E54 CD 58 8E     	call Genera_disparo
1254  8E57 C9           	ret
1255  8E58
1256  8E58              ; ---------------------------------------------------------------
1257  8E58
1258  8E58              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E58              ; ******************************************************************************************************************************************************************************************
   2+ 8E58              ;
   3+ 8E58              ;   17/04/23
   4+ 8E58              ;
   5+ 8E58              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E58              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E58              ;
   8+ 8E58              ;
   9+ 8E58              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E58              ;
  11+ 8E58              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E58              ;               _ hacen las entidades hacia abajo.
  13+ 8E58              ;
  14+ 8E58              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E58              ;
  16+ 8E58              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E58              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E58              ;
  19+ 8E58              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E58              ;           _ la bala.
  21+ 8E58              ;
  22+ 8E58              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E58              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E58              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E58              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E58              ;           _ en el momento de generarse la bala)).
  27+ 8E58
  28+ 8E58              Genera_disparo
  29+ 8E58
  30+ 8E58              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E58              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E58              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E58              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E58              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E58              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E58              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E58
  38+ 8E58              ; Exclusiones:
  39+ 8E58
  40+ 8E58 3A F6 89         ld a,(Columnas)
  41+ 8E5B 47               ld b,a
  42+ 8E5C 3A BC 89         ld a,(Columns)
  43+ 8E5F B8               cp b
  44+ 8E60 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E61
  46+ 8E61              ; ----- ----- -----
  47+ 8E61
  48+ 8E61 3A E9 89         ld a,(Ctrl_0)
  49+ 8E64 CB 77            bit 6,a
  50+ 8E66 20 06            jr nz,14F
  51+ 8E68
  52+ 8E68 3A C2 89         ld a,(Coordenada_y)
  53+ 8E6B FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E6D D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E6E
  56+ 8E6E 21 00 80     14 ld hl,Indice_disparo
  57+ 8E71 3A C3 89         ld a,(CTRL_DESPLZ)
  58+ 8E74 4F               ld c,a
  59+ 8E75 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E77              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E77              ;                                            ""        ""       "f9", B="1"
  62+ 8E77              ;                                            ""        ""       "fb", B="2"
  63+ 8E77              ;                                            ""        ""       "fb", B="3"
  64+ 8E77 A7               and a
  65+ 8E78 28 10            jr z,1F
  66+ 8E7A E6 01            and 1
  67+ 8E7C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E7D
  69+ 8E7D 79               ld a,c
  70+ 8E7E 16 F9            ld d,$f9
  71+ 8E80 23           2 inc hl
  72+ 8E81 23               inc hl
  73+ 8E82 04               inc b
  74+ 8E83 BA               cp d
  75+ 8E84 28 04            jr z,1F
  76+ 8E86 14               inc d
  77+ 8E87 14               inc d
  78+ 8E88 18 F6            jr 2B
  79+ 8E8A
  80+ 8E8A CD 24 8D     1 call Extrae_address
  81+ 8E8D E5               push hl
  82+ 8E8E FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E90 DD 21 A9 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E94
  85+ 8E94              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E94              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E94
  88+ 8E94 3A E9 89         ld a,(Ctrl_0)
  89+ 8E97 CB 77            bit 6,a
  90+ 8E99 20 04            jr nz,19F
  91+ 8E9B
  92+ 8E9B AF               xor a
  93+ 8E9C 32 2C 8A         ld (Habilita_disparo_entidad),a
  94+ 8E9F
  95+ 8E9F 3A CF 89     19 ld a,(Cuad_objeto)
  96+ 8EA2 FE 02            cp 2
  97+ 8EA4 38 66            jr c,3F
  98+ 8EA6 28 64            jr z,3F
  99+ 8EA8
 100+ 8EA8              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8EA8
 102+ 8EA8 E6 01            and 1
 103+ 8EAA 28 30            jr z,4F
 104+ 8EAC
 105+ 8EAC              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EAC              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EAC              ;
 108+ 8EAC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EAC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EAC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EAC
 112+ 8EAC 2A BD 89     	ld hl,(Posicion_actual)
 113+ 8EAF
 114+ 8EAF              ;   Amadeus o entidad ???.
 115+ 8EAF
 116+ 8EAF 3A E9 89         ld a,(Ctrl_0)
 117+ 8EB2 CB 77            bit 6,a
 118+ 8EB4 28 0A            jr z,8F
 119+ 8EB6
 120+ 8EB6              ; 	Dispara Amadeus.
 121+ 8EB6
 122+ 8EB6 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EB8 CD 25 96         call PreviousScan
 124+ 8EBB CD 25 96         call PreviousScan
 125+ 8EBE
 126+ 8EBE              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EBE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EBE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EBE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EBE
 131+ 8EBE 18 11            jr 10F
 132+ 8EC0
 133+ 8EC0              ; 	Dispara Entidad.
 134+ 8EC0
 135+ 8EC0 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EC3              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EC3
 138+ 8EC3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EC3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EC3
 141+ 8EC3 C5               push bc
 142+ 8EC4 06 10            ld b,16
 143+ 8EC6 CD 16 96     9 call NextScan
 144+ 8EC9 10 FB            djnz 9B
 145+ 8ECB C1               pop bc
 146+ 8ECC CD 36 8F         call Ajusta_disparo_parte_izquierda
 147+ 8ECF 18 06            jr 17F
 148+ 8ED1
 149+ 8ED1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8ED1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8ED1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8ED1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8ED1
 154+ 8ED1 CD 36 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8ED4 CD AB 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8ED7              ;                                                      ; _al generar el disparo.
 157+ 8ED7
 158+ 8ED7              ; 	LLegados a este punto tendremos:
 159+ 8ED7              ;
 160+ 8ED7              ;       Puntero_objeto_disparo en IY.
 161+ 8ED7              ;       Rutinas_de_impresion en IX.
 162+ 8ED7              ;       Puntero_de_impresion en HL.
 163+ 8ED7              ;       Impacto/Dirección en BC.
 164+ 8ED7
 165+ 8ED7 CD 3E 8F     17 call Almacena_disparo
 166+ 8EDA 18 52            jr 6F                                             ; RET.
 167+ 8EDC
 168+ 8EDC              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EDC              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EDC              ;
 171+ 8EDC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EDC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EDC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EDC
 175+ 8EDC 2A BD 89     4 ld hl,(Posicion_actual)
 176+ 8EDF
 177+ 8EDF              ;   Amadeus o entidad ???.
 178+ 8EDF
 179+ 8EDF 3A E9 89         ld a,(Ctrl_0)
 180+ 8EE2 CB 77            bit 6,a
 181+ 8EE4 28 0A            jr z,11F
 182+ 8EE6
 183+ 8EE6              ; 	Dispara Amadeus.
 184+ 8EE6
 185+ 8EE6 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EE8 CD 25 96         call PreviousScan
 187+ 8EEB CD 25 96         call PreviousScan
 188+ 8EEE
 189+ 8EEE              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EEE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EEE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EEE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EEE
 194+ 8EEE 18 11            jr 13F
 195+ 8EF0
 196+ 8EF0              ; 	Dispara Entidad.
 197+ 8EF0
 198+ 8EF0 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EF3              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EF3
 201+ 8EF3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EF3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EF3
 204+ 8EF3 C5               push bc
 205+ 8EF4 06 10            ld b,16
 206+ 8EF6 CD 16 96     12 call NextScan
 207+ 8EF9 10 FB            djnz 12B
 208+ 8EFB C1               pop bc
 209+ 8EFC
 210+ 8EFC CD 2F 8F         call Ajusta_disparo_parte_derecha
 211+ 8EFF 18 06            jr 18F
 212+ 8F01
 213+ 8F01              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8F01              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8F01              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8F01              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8F01
 218+ 8F01 CD 2F 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8F04 CD AB 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8F07              ;                                                       ; _al generar el disparo.
 221+ 8F07
 222+ 8F07              ; LLegados a este punto tendremos:
 223+ 8F07              ;
 224+ 8F07              ;       Puntero_objeto_disparo en IY.
 225+ 8F07              ;       Rutinas_de_impresion en IX.
 226+ 8F07              ;       Puntero_de_impresion en HL.
 227+ 8F07              ;       Impacto/Dirección en BC.
 228+ 8F07
 229+ 8F07 CD 3E 8F     18 call Almacena_disparo
 230+ 8F0A 18 22            jr 6F                                               ; RET.
 231+ 8F0C
 232+ 8F0C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F0C
 234+ 8F0C 28 11        3 jr z,5F
 235+ 8F0E
 236+ 8F0E              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F0E              ;
 238+ 8F0E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F0E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F0E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F0E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F0E
 243+ 8F0E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F0E              ;	   ""        ""       "f9", B="1"
 245+ 8F0E              ;	   ""        ""       "fb", B="2"
 246+ 8F0E              ; 	   ""        ""       "fb", B="3"
 247+ 8F0E
 248+ 8F0E 2A BD 89     	ld hl,(Posicion_actual)
 249+ 8F11 CD 16 96     	call NextScan
 250+ 8F14
 251+ 8F14              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F14              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F14              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F14              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F14
 256+ 8F14 CD 36 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F17
 258+ 8F17              ; 	No se produce impacto. B="$80"
 259+ 8F17              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F17
 261+ 8F17 01 80 80         ld bc,$8080
 262+ 8F1A
 263+ 8F1A              ; 	LLegados a este punto tendremos:
 264+ 8F1A              ;
 265+ 8F1A              ;       Puntero_objeto_disparo en IY.
 266+ 8F1A              ;       Rutinas_de_impresion en IX.
 267+ 8F1A              ;       Puntero_de_impresion en HL.
 268+ 8F1A              ;       Impacto/Dirección en BC.
 269+ 8F1A
 270+ 8F1A CD 3E 8F         call Almacena_disparo
 271+ 8F1D 18 0F            jr 6F                                           ; RET.
 272+ 8F1F
 273+ 8F1F              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F1F              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F1F              ;
 276+ 8F1F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F1F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F1F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F1F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F1F
 281+ 8F1F 2A BD 89     5 ld hl,(Posicion_actual)
 282+ 8F22 CD 16 96     	call NextScan
 283+ 8F25
 284+ 8F25              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F25              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F25              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F25              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F25
 289+ 8F25 CD 2F 8F         call Ajusta_disparo_parte_derecha
 290+ 8F28
 291+ 8F28              ; 	No se produce impacto. B="$80"
 292+ 8F28              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F28
 294+ 8F28 01 80 80     15 ld bc,$8080
 295+ 8F2B
 296+ 8F2B              ; 	LLegados a este punto tendremos:
 297+ 8F2B              ;
 298+ 8F2B              ;       Puntero_objeto_disparo en IY.
 299+ 8F2B              ;       Rutinas_de_impresion en IX.
 300+ 8F2B              ;       Puntero_de_impresion en HL.
 301+ 8F2B              ;       Impacto/Dirección en BC.
 302+ 8F2B
 303+ 8F2B CD 3E 8F         call Almacena_disparo
 304+ 8F2E
 305+ 8F2E C9           6 ret
 306+ 8F2F
 307+ 8F2F              ; ----------------------------------------------------------------
 308+ 8F2F              ;
 309+ 8F2F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F2F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F2F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F2F
 313+ 8F2F 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F30 FE 02            cp 2
 315+ 8F32 38 01            jr c,1F
 316+ 8F34 23               inc hl
 317+ 8F35 C9           1 ret
 318+ 8F36
 319+ 8F36 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F37 FE 01        	cp 1
 321+ 8F39 20 01        	jr nz,1F
 322+ 8F3B 2B           	dec hl
 323+ 8F3C 2B           1 dec hl
 324+ 8F3D C9               ret
 325+ 8F3E
 326+ 8F3E              ; ----------------------------------------------------------------
 327+ 8F3E              ;
 328+ 8F3E              ;   25/02/23
 329+ 8F3E              ;
 330+ 8F3E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F3E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F3E              ;
 333+ 8F3E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F3E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F3E
 336+ 8F3E              Almacena_disparo
 337+ 8F3E
 338+ 8F3E E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F3F F1               pop af
 340+ 8F40 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F41
 342+ 8F41 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F42 E6 01            and 1
 344+ 8F44 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F46              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F46              ; 	Dispara AMADEUS.
 347+ 8F46
 348+ 8F46              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F46              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F46              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F46              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F46
 353+ 8F46 C5               push bc
 354+ 8F47 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F4A 2A 18 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F4D A7               and a
 357+ 8F4E ED 42            sbc hl,bc
 358+ 8F50 CC ED 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F53 C1               pop bc
 360+ 8F54 28 54            jr z,4F
 361+ 8F56
 362+ 8F56 2A 18 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F59 23               inc hl
 364+ 8F5A 23               inc hl
 365+ 8F5B 22 18 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F5E              ;                                                   ; _ Disparo_(+1).
 367+ 8F5E 18 18            jr 2F
 368+ 8F60
 369+ 8F60              ; Dispara una entidad.
 370+ 8F60
 371+ 8F60 C5           1 push bc
 372+ 8F61 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F64 2A 16 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F67 A7               and a
 375+ 8F68 ED 42            sbc hl,bc
 376+ 8F6A CC E6 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F6D C1               pop bc
 378+ 8F6E 28 3A            jr z,4F
 379+ 8F70
 380+ 8F70 2A 16 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F73 23               inc hl
 382+ 8F74 23               inc hl
 383+ 8F75 22 16 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F78              ;                                                   ; _ Disparo_(+1).
 385+ 8F78 CD 24 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F7B              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F7B              ;
 388+ 8F7B              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F7B              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F7B              ;                                                     Puntero_de_impresion en HL.
 391+ 8F7B              ;                                                     Impacto/Dirección en BC.
 392+ 8F7B
 393+ 8F7B 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F7C 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F7D 23               inc hl                                          ; _ al siguiente.
 396+ 8F7E A7               and a
 397+ 8F7F 20 C0            jr nz,3B
 398+ 8F81
 399+ 8F81 08               ex af,af
 400+ 8F82 ED 73 0D 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F86 F9               ld sp,hl
 402+ 8F87
 403+ 8F87 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F89 F5               push af                                         ; Puntero de impresión.
 405+ 8F8A FD E5            push iy                                         ; Puntero objeto.
 406+ 8F8C C5               push bc                                         ; Control.
 407+ 8F8D
 408+ 8F8D ED 7B 0D 8A      ld sp,(Stack)
 409+ 8F91
 410+ 8F91              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F91
 412+ 8F91 21 FC 89     	ld hl,Ctrl_1
 413+ 8F94 CB C6        	set 0,(hl)
 414+ 8F96
 415+ 8F96 DD E5        	push ix
 416+ 8F98 E1               pop hl
 417+ 8F99 F5               push af
 418+ 8F9A DD E1            pop ix
 419+ 8F9C
 420+ 8F9C CD A0 7F     	call Guarda_foto_registros
 421+ 8F9F
 422+ 8F9F 21 FC 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8FA2 CB 86        	res 0,(hl)
 424+ 8FA4
 425+ 8FA4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8FA4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8FA4
 428+ 8FA4 CD ED 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8FA7 CD E6 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8FAA
 431+ 8FAA C9           4 ret
 432+ 8FAB
 433+ 8FAB              ; ----------------------------------------------------------------
 434+ 8FAB              ;
 435+ 8FAB              ;   4/3/23
 436+ 8FAB              ;
 437+ 8FAB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8FAB              ;   _ al generarse el disparo.
 439+ 8FAB              ;
 440+ 8FAB              ;       "$80" ..... No se produce colisión.
 441+ 8FAB              ;       "$81" ..... Se produce colisión.
 442+ 8FAB
 443+ 8FAB              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8FAB              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8FAB
 446+ 8FAB
 447+ 8FAB FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8FAD E5               push hl                                        ; Puntero de impresión.
 449+ 8FAE
 450+ 8FAE 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8FB0 CD CC 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8FB3
 453+ 8FB3 7B               ld a,e
 454+ 8FB4 E6 01            and 1
 455+ 8FB6 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8FB8
 457+ 8FB8 E1               pop hl
 458+ 8FB9 E5               push hl
 459+ 8FBA CD 16 96         call NextScan
 460+ 8FBD
 461+ 8FBD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FBE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FC0 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FC2              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FC2 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FC4 CD CC 8F         call Bucle_2
 467+ 8FC7
 468+ 8FC7 43           2 ld b,e
 469+ 8FC8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FC9 FD E1            pop iy
 471+ 8FCB C9               ret
 472+ 8FCC
 473+ 8FCC               ; ---------- ----------
 474+ 8FCC
 475+ 8FCC 06 02        Bucle_2 ld b,2
 476+ 8FCE FD 7E 00     2 ld a,(iy)
 477+ 8FD1 A6               and (hl)
 478+ 8FD2 28 02            jr z,1F
 479+ 8FD4 1E 81            ld e,$81
 480+ 8FD6 23           1 inc hl
 481+ 8FD7 FD 23            inc iy
 482+ 8FD9 10 F3            djnz 2B
 483+ 8FDB C9               ret
 484+ 8FDC
 485+ 8FDC              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FDC              ;
 487+ 8FDC              ;   11/04/23
 488+ 8FDC              ;
 489+ 8FDC              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FDC              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FDC              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FDC              ;
 493+ 8FDC              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FDC
 495+ 8FDC              Compara_coordenadas_X
 496+ 8FDC
 497+ 8FDC              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FDC              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FDC
 500+ 8FDC              ; Preparamos registros:
 501+ 8FDC
 502+ 8FDC 21 C1 89         ld hl,Filas+6
 503+ 8FDF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FE0 23               inc hl
 505+ 8FE1 23               inc hl
 506+ 8FE2 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FE3 43               ld b,e
 508+ 8FE4
 509+ 8FE4 21 CF 89         ld hl,Filas+20
 510+ 8FE7 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 511+ 8FE8 21 22 8A         ld hl,Coordenadas_X_Entidad
 512+ 8FEB CD FF 91         call Guarda_coordenadas_X
 513+ 8FEE
 514+ 8FEE              ; Preparamos registros:
 515+ 8FEE
 516+ 8FEE 21 92 85         ld hl,Amadeus_db+6
 517+ 8FF1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 518+ 8FF2 23               inc hl
 519+ 8FF3 23               inc hl
 520+ 8FF4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 521+ 8FF5 7B               ld a,e
 522+ 8FF6 08               ex af,af'
 523+ 8FF7 21 A0 85         ld hl,Amadeus_db+20
 524+ 8FFA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 525+ 8FFB 21 1F 8A         ld hl,Coordenadas_X_Amadeus
 526+ 8FFE CD FF 91         call Guarda_coordenadas_X
 527+ 9001
 528+ 9001              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 529+ 9001              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 530+ 9001
 531+ 9001 04               inc b
 532+ 9002 05               dec b
 533+ 9003 28 04            jr z,1F
 534+ 9005 06 03            ld b,3
 535+ 9007 18 02            jr 2F
 536+ 9009 06 02        1 ld b,2
 537+ 900B 08           2 ex af,af'
 538+ 900C 3C               inc a
 539+ 900D 3D               dec a
 540+ 900E 28 04            jr z,5F
 541+ 9010 0E 03            ld c,3
 542+ 9012 18 02            jr 6F
 543+ 9014 0E 02        5 ld c,2
 544+ 9016 79           6 ld a,c
 545+ 9017 08               ex af,af'
 546+ 9018 11 22 8A         ld de,Coordenadas_X_Entidad
 547+ 901B 1A           4 ld a,(de)
 548+ 901C 21 1F 8A         ld hl,Coordenadas_X_Amadeus
 549+ 901F BE           3 cp (hl)
 550+ 9020 28 0E            jr z,7F
 551+ 9022 23               inc hl
 552+ 9023 0D               dec c
 553+ 9024 20 F9            jr nz,3B
 554+ 9026 13               inc de
 555+ 9027 08               ex af,af'
 556+ 9028 4F               ld c,a
 557+ 9029 08               ex af,af'
 558+ 902A 10 EF            djnz 4B
 559+ 902C
 560+ 902C              ; Limpiamos los almacenes de coordenadas y salimos.
 561+ 902C
 562+ 902C CD 3E 92     8 call Limpia_Coordenadas_X
 563+ 902F C9               ret
 564+ 9030
 565+ 9030 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9032 32 D4 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9035 21 1A 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 9038 CB D6            set 2,(hl)
 569+ 903A 18 F0            jr 8B
 570+ 903C
 571+ 903C              ; -----------------------------------------------------------------------
 572+ 903C              ;
 573+ 903C              ;   17/04/23
 574+ 903C              ;
 575+ 903C
 576+ 903C              Detecta_colision_nave_entidad
 577+ 903C
 578+ 903C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 903C
 580+ 903C 2A BD 89         ld hl,(Posicion_actual)
 581+ 903F CD 7B 95         call Calcula_puntero_de_impresion
 582+ 9042
 583+ 9042              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9042              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9042
 586+ 9042 DD E5            push ix
 587+ 9044 E1               pop hl
 588+ 9045 E5               push hl
 589+ 9046
 590+ 9046              ; ----- ----- -----
 591+ 9046 1E 00            ld e,0                                         ; Indica impacto.
 592+ 9048 06 0A            ld b,10
 593+ 904A CD 7A 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 904D 7B               ld a,e
 595+ 904E FE 05            cp 5
 596+ 9050 38 0E            jr c,3F
 597+ 9052
 598+ 9052              ; LLegados a este punto:
 599+ 9052              ;
 600+ 9052              ;   HAY COLISIÓN !!!!!.
 601+ 9052              ;
 602+ 9052              ;   .db (Impacto) de Amadeus a "1".
 603+ 9052              ;   SET el bit3 de (Impacto2).
 604+ 9052              ;
 605+ 9052              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9052
 607+ 9052 21 A5 85         ld hl,Amadeus_db+25
 608+ 9055 36 01            ld (hl),1
 609+ 9057 21 1A 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 905A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 905C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 905E 18 18            jr 1F
 613+ 9060
 614+ 9060              ; -----
 615+ 9060
 616+ 9060 E1           3 pop hl
 617+ 9061 CD 16 96         call NextScan
 618+ 9064 E5               push hl
 619+ 9065 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9066 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9068 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 906A 30 0C            jr nc,1F
 623+ 906C              ;                                                  ; _ 2º scanline si esto es así.
 624+ 906C 10 DC            djnz 2B
 625+ 906E
 626+ 906E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 906E
 628+ 906E              ; LLegados a este punto:
 629+ 906E              ;
 630+ 906E              ;   NO HAY COLISIÓN !!!!!.
 631+ 906E              ;
 632+ 906E              ;   .db (Impacto) de Amadeus a "0".
 633+ 906E              ;   RES el bit2 de (Impacto2).
 634+ 906E              ;
 635+ 906E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 906E              ;   Lo colocamos a "0".
 637+ 906E
 638+ 906E 21 1A 8A         ld hl,Impacto2
 639+ 9071 CB 96            res 2,(hl)
 640+ 9073 2A 1B 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9076 36 00            ld (hl),0
 642+ 9078
 643+ 9078 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 9079 C9               ret
 645+ 907A
 646+ 907A               ; ---------- ----------
 647+ 907A
 648+ 907A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 907B 3A BC 89         ld a,(Columns)
 650+ 907E 47               ld b,a
 651+ 907F FD 7E 00     2 ld a,(iy)
 652+ 9082 BE               cp (hl)
 653+ 9083 28 01            jr z,1F
 654+ 9085
 655+ 9085 1C               inc e
 656+ 9086
 657+ 9086 23           1 inc hl
 658+ 9087 FD 23            inc iy
 659+ 9089 10 F4            djnz 2B
 660+ 908B C1               pop bc
 661+ 908C C9               ret
 662+ 908D
 663+ 908D              ; -------------------------------------------------------------------------------------------------------------
 664+ 908D              ;
 665+ 908D              ;   13/03/23
 666+ 908D              ;
 667+ 908D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 908D              ;
 669+ 908D              ;   DESTRUYE: HL,BC,DE y A.
 670+ 908D
 671+ 908D 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9090 7E               ld a,(hl)
 673+ 9091 A7               and a
 674+ 9092 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9093
 676+ 9093 44               ld b,h
 677+ 9094 4D               ld c,l
 678+ 9095 2A 13 8A         ld hl,(Stack_snapshot_disparos)
 679+ 9098 E5               push hl
 680+ 9099 A7               and a
 681+ 909A ED 42            sbc hl,bc
 682+ 909C E5               push hl
 683+ 909D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 909E
 685+ 909E E1               pop hl
 686+ 909F 54               ld d,h
 687+ 90A0 5D               ld e,l
 688+ 90A1 1B               dec de
 689+ 90A2 ED B8            lddr                                                ; Limpiamos.
 690+ 90A4
 691+ 90A4 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 90A7 22 13 8A         ld (Stack_snapshot_disparos),hl
 693+ 90AA
 694+ 90AA C9               ret
 695+ 90AB
 696+ 90AB              ; -------------------------------------------------------------------------------------------------------------
 697+ 90AB              ;
 698+ 90AB              ;   28/03/23
 699+ 90AB              ;
 700+ 90AB
 701+ 90AB 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 90AE 2A 18 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 90B1
 704+ 90B1 CD 24 8D     2 call Extrae_address
 705+ 90B4 7E               ld a,(hl)
 706+ 90B5 A7               and a
 707+ 90B6 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 90B8
 709+ 90B8              ; ----- ----- ----- ----- ----- -----
 710+ 90B8
 711+ 90B8 C5               push bc
 712+ 90B9 CD 75 91         call foto_disparo_a_borrar
 713+ 90BC
 714+ 90BC              ; Existe colisión con este disparo???
 715+ 90BC
 716+ 90BC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90BD 7E               ld a,(hl)
 718+ 90BE 2B               dec hl
 719+ 90BF E6 01            and 1
 720+ 90C1 28 1D            jr z,9F
 721+ 90C3
 722+ 90C3              ;   En este punto:
 723+ 90C3              ;
 724+ 90C3              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90C3              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90C3              ;   _con la entidad).
 727+ 90C3              ;
 728+ 90C3              ;   Disparo_2A defw 0                                ; Control.
 729+ 90C3              ;    defw 0                                          ; Puntero objeto.
 730+ 90C3              ;    defw 0                                          ; Puntero de impresión.
 731+ 90C3              ;    defw 0                                          ; Rutina de impresión.
 732+ 90C3
 733+ 90C3 E5               push hl
 734+ 90C4
 735+ 90C4 06 04            ld b,4
 736+ 90C6 23           19 inc hl
 737+ 90C7 10 FD            djnz 19B
 738+ 90C9
 739+ 90C9 CD 24 8D         call Extrae_address
 740+ 90CC CD 6D 9C         call Genera_coordenadas_disparo
 741+ 90CF
 742+ 90CF              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90CF
 744+ 90CF 21 1D 8A         ld hl,Coordenadas_disparo_certero
 745+ 90D2 72               ld (hl),d
 746+ 90D3 23               inc hl
 747+ 90D4 73               ld (hl),e
 748+ 90D5
 749+ 90D5              ; Elimino el disparo de la base de datos.
 750+ 90D5
 751+ 90D5 E1               pop hl
 752+ 90D6 CD F4 91         call Elimina_disparo_de_base_de_datos
 753+ 90D9 21 1A 8A         ld hl,Impacto2
 754+ 90DC CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90DE
 756+ 90DE 18 06            jr 11F
 757+ 90E0
 758+ 90E0 CD 9E 91     9 call Mueve_disparo
 759+ 90E3 CD 75 91         call foto_disparo_a_borrar
 760+ 90E6
 761+ 90E6 C1           11 pop bc
 762+ 90E7 18 04            jr 7F
 763+ 90E9
 764+ 90E9              ; ----- ----- ----- ----- ----- -----
 765+ 90E9
 766+ 90E9 ED 42        1 sbc hl,bc
 767+ 90EB 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90ED 2A 18 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90F0 23               inc hl
 770+ 90F1 23               inc hl
 771+ 90F2 22 18 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90F5 18 BA            jr 2B
 773+ 90F7 CD ED 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90FA
 775+ 90FA 01 72 85         ld bc,Disparo_11
 776+ 90FD 2A 16 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 9100
 778+ 9100 CD 24 8D     5 call Extrae_address
 779+ 9103 7E               ld a,(hl)
 780+ 9104 A7               and a
 781+ 9105 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 9107
 783+ 9107              ; ----- ----- ----- ----- ----- -----
 784+ 9107
 785+ 9107 C5               push bc
 786+ 9108 CD 75 91         call foto_disparo_a_borrar
 787+ 910B
 788+ 910B              ; Existe colisión con este disparo???
 789+ 910B
 790+ 910B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 910C 7E               ld a,(hl)
 792+ 910D 2B               dec hl
 793+ 910E E6 01            and 1
 794+ 9110 28 48            jr z,10F
 795+ 9112
 796+ 9112              ; La colisión se produce con Amadeus???
 797+ 9112              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 9112
 799+ 9112 E5               push hl
 800+ 9113
 801+ 9113 06 04            ld b,4
 802+ 9115 23           16 inc hl
 803+ 9116 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 9118 CD 24 8D         call Extrae_address
 805+ 911B CD 6D 9C         call Genera_coordenadas_disparo
 806+ 911E
 807+ 911E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 911F FE 16            cp $16
 809+ 9121 38 22            jr c,15F
 810+ 9123
 811+ 9123              ; (Colisiones en filas 16 y 17).
 812+ 9123
 813+ 9123 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9124
 815+ 9124              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9124
 817+ 9124 21 92 85         ld hl,Amadeus_db+6
 818+ 9127 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9128 23               inc hl
 820+ 9129 23               inc hl
 821+ 912A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 912B 21 A0 85         ld hl,Amadeus_db+20
 823+ 912E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 912F 21 1F 8A         ld hl,Coordenadas_X_Amadeus
 825+ 9132 CD FF 91         call Guarda_coordenadas_X
 826+ 9135
 827+ 9135 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9136
 829+ 9136              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9136
 831+ 9136 06 03            ld b,3
 832+ 9138 21 1F 8A         ld hl,Coordenadas_X_Amadeus
 833+ 913B 7E           18 ld a,(hl)
 834+ 913C BA               cp d
 835+ 913D 20 03            jr nz,17F
 836+ 913F
 837+ 913F              ; Colisión Amadeus !!!!!!!!!!
 838+ 913F
 839+ 913F E1               pop hl
 840+ 9140 18 09            jr 14F
 841+ 9142
 842+ 9142 23           17 inc hl
 843+ 9143 10 F6            djnz 18B
 844+ 9145
 845+ 9145              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9145              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9145
 848+ 9145 E1           15 pop hl
 849+ 9146 23               inc hl
 850+ 9147 35               dec (hl)
 851+ 9148 2B               dec hl
 852+ 9149 18 0F            jr 10F
 853+ 914B
 854+ 914B              ; -----------------------debug
 855+ 914B
 856+ 914B              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 914B              ; _ almacén de coordenadas_X de Amadeus.
 858+ 914B
 859+ 914B E5           14 push hl
 860+ 914C CD F4 91         call Elimina_disparo_de_base_de_datos
 861+ 914F 21 1A 8A         ld hl,Impacto2
 862+ 9152 CB CE            set 1,(hl)
 863+ 9154 CD 3E 92         call Limpia_Coordenadas_X
 864+ 9157
 865+ 9157 E1               pop hl
 866+ 9158 18 06            jr 12F
 867+ 915A
 868+ 915A CD 9E 91     10 call Mueve_disparo
 869+ 915D CD 75 91         call foto_disparo_a_borrar
 870+ 9160 C1           12 pop bc
 871+ 9161
 872+ 9161 18 04            jr 8F
 873+ 9163
 874+ 9163              ; ----- ----- ----- ----- ----- -----
 875+ 9163
 876+ 9163 ED 42        4 sbc hl,bc
 877+ 9165 28 0A            jr z,6F
 878+ 9167
 879+ 9167 2A 16 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 916A 23               inc hl
 881+ 916B 23               inc hl
 882+ 916C 22 16 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 916F 18 8F            jr 5B
 884+ 9171
 885+ 9171 CD E6 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9174 C9               ret
 887+ 9175
 888+ 9175              ; ------------------------------------------------------------------
 889+ 9175
 890+ 9175              foto_disparo_a_borrar
 891+ 9175
 892+ 9175 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9176 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9177 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9178
 896+ 9178 E5               push hl
 897+ 9179 23               inc hl
 898+ 917A 23               inc hl
 899+ 917B ED 73 0D 8A      ld (Stack),sp
 900+ 917F F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9180 FD E1            pop iy
 902+ 9182 DD E1            pop ix
 903+ 9184 E1               pop hl
 904+ 9185 ED 7B 0D 8A      ld sp,(Stack)
 905+ 9189 3A FC 89         ld a,(Ctrl_1)
 906+ 918C CB C7            set 0,a
 907+ 918E 32 FC 89         ld (Ctrl_1),a
 908+ 9191 CD A0 7F         call Guarda_foto_registros
 909+ 9194 3A FC 89         ld a,(Ctrl_1)
 910+ 9197 CB 87            res 0,a
 911+ 9199 32 FC 89         ld (Ctrl_1),a
 912+ 919C E1               pop hl
 913+ 919D C9               ret
 914+ 919E
 915+ 919E E5           Mueve_disparo push hl
 916+ 919F 7E               ld a,(hl)
 917+ 91A0 06 04            ld b,4
 918+ 91A2 23           1 inc hl
 919+ 91A3 10 FD            djnz 1B
 920+ 91A5
 921+ 91A5              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 91A5
 923+ 91A5 CD 24 8D         call Extrae_address
 924+ 91A8
 925+ 91A8 E6 01            and 1
 926+ 91AA 28 2E            jr z,2F
 927+ 91AC
 928+ 91AC              ; Disparo hacia arriba, (Amadeus).
 929+ 91AC
 930+ 91AC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 91AC              ; _ de la dificultad.
 932+ 91AC
 933+ 91AC CD 25 96         call PreviousScan
 934+ 91AF CD 25 96         call PreviousScan
 935+ 91B2 CD 25 96         call PreviousScan
 936+ 91B5 CD 25 96         call PreviousScan
 937+ 91B8
 938+ 91B8              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 91B8
 940+ 91B8 7C               ld a,h
 941+ 91B9 FE 40            cp $40
 942+ 91BB 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 91BD
 944+ 91BD              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 91BD
 946+ 91BD EB               ex de,hl
 947+ 91BE 06 04            ld b,4
 948+ 91C0 2B           6 dec hl
 949+ 91C1 10 FD            djnz 6B
 950+ 91C3
 951+ 91C3 CD F4 91         call Elimina_disparo_de_base_de_datos
 952+ 91C6 E1               pop hl
 953+ 91C7 18 10            jr 7F
 954+ 91C9
 955+ 91C9              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91C9
 957+ 91C9 D5           3 push de
 958+ 91CA C5               push bc
 959+ 91CB
 960+ 91CB CD AB 8F         call Comprueba_Colision
 961+ 91CE
 962+ 91CE              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91CE
 964+ 91CE 78               ld a,b
 965+ 91CF
 966+ 91CF C1               pop bc
 967+ 91D0 D1               pop de
 968+ 91D1
 969+ 91D1 EB               ex de,hl
 970+ 91D2
 971+ 91D2 73               ld (hl),e
 972+ 91D3 23               inc hl
 973+ 91D4 72               ld (hl),d
 974+ 91D5
 975+ 91D5 E1           4 pop hl
 976+ 91D6 23               inc hl
 977+ 91D7 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91D8 2B               dec hl
 979+ 91D9 C9           7 ret
 980+ 91DA
 981+ 91DA              ; Disparo hacia abajo, (Entidad).
 982+ 91DA
 983+ 91DA              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91DA              ;! _ de la dificultad.
 985+ 91DA
 986+ 91DA CD 16 96     2 call NextScan
 987+ 91DD CD 16 96         call NextScan
 988+ 91E0 CD 16 96         call NextScan
 989+ 91E3              ;    call NextScan
 990+ 91E3
 991+ 91E3              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91E3
 993+ 91E3 7C               ld a,h
 994+ 91E4 FE 58            cp $58
 995+ 91E6 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91E8
 997+ 91E8 EB               ex de,hl
 998+ 91E9 06 04            ld b,4
 999+ 91EB 2B           5 dec hl
1000+ 91EC 10 FD            djnz 5B
1001+ 91EE
1002+ 91EE CD F4 91         call Elimina_disparo_de_base_de_datos
1003+ 91F1 E1               pop hl
1004+ 91F2 18 E5            jr 7B
1005+ 91F4
1006+ 91F4              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 91F4
1008+ 91F4 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 91F7 AF               xor a
1010+ 91F8 77               ld (hl),a
1011+ 91F9 54               ld d,h
1012+ 91FA 5D               ld e,l
1013+ 91FB 13               inc de
1014+ 91FC ED B0            ldir
1015+ 91FE C9               ret
1016+ 91FF
1017+ 91FF              ; -----------------------------------------------------------------
1018+ 91FF              ;
1019+ 91FF              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 91FF              ;
1021+ 91FF              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 91FF              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 91FF              ;
1024+ 91FF              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 91FF              ;
1026+ 91FF              ;   INPUTS:
1027+ 91FF              ;
1028+ 91FF              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 91FF              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 91FF              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 91FF
1032+ 91FF              ;   MODIFICA: A, HL, DE y C
1033+ 91FF
1034+ 91FF 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 9200 79               ld a,c
1036+ 9201 E6 01            and 1
1037+ 9203 20 03            jr nz,1F
1038+ 9205 14               inc d
1039+ 9206 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 9208
1041+ 9208              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 9208              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 9208
1044+ 9208 15           1 dec d
1045+ 9209 23           2 inc hl
1046+ 920A 72               ld (hl),d
1047+ 920B
1048+ 920B 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 920C A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 920D C8               ret z
1051+ 920E
1052+ 920E AF               xor a
1053+ 920F 5F               ld e,a
1054+ 9210 18 ED            jr Guarda_coordenadas_X
1055+ 9212
1056+ 9212              ; -----------------------------------------------------------------
1057+ 9212              ;
1058+ 9212              ;   12/04/23
1059+ 9212              ;
1060+ 9212
1061+ 9212 3A 1A 8A     Selector_de_impactos ld a,(Impacto2)
1062+ 9215 A7               and a
1063+ 9216 C8               ret z
1064+ 9217
1065+ 9217 FE 04            cp 4
1066+ 9219 20 09            jr nz,1F
1067+ 921B
1068+ 921B
1069+ 921B              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 921B
1071+ 921B CD 3C 90         call Detecta_colision_nave_entidad
1072+ 921E
1073+ 921E 21 1A 8A         ld hl,Impacto2
1074+ 9221 CB 5E            bit 3,(hl)
1075+ 9223 C0               ret nz                                               ; Existe colisión, RET.
1076+ 9224
1077+ 9224              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 9224              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 9224
1080+ 9224 21 1A 8A     1 ld hl,Impacto2
1081+ 9227 CB 4E            bit 1,(hl)
1082+ 9229 28 07            jr z,2F
1083+ 922B
1084+ 922B 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 922E 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 9230 18 0B            jr 3F
1087+ 9232
1088+ 9232 21 1A 8A     2 ld hl,Impacto2
1089+ 9235 CB 46            bit 0,(hl)
1090+ 9237 C8               ret z
1091+ 9238
1092+ 9238              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 9238
1094+ 9238 21 FC 89         ld hl,Ctrl_1
1095+ 923B CB D6            set 2,(hl)
1096+ 923D
1097+ 923D C9           3 ret
1098+ 923E
1099+ 923E              ; -----------------------------------------------------------------
1100+ 923E              ;
1101+ 923E              ;   16/04/23
1102+ 923E              ;
1103+ 923E
1104+ 923E AF           Limpia_Coordenadas_X xor a
1105+ 923F 06 06            ld b,6
1106+ 9241 21 1F 8A         ld hl,Coordenadas_X_Amadeus
1107+ 9244 77           1 ld (hl),a
1108+ 9245 23               inc hl
1109+ 9246 10 FC            djnz 1B
1110+ 9248 C9               ret
1111+ 9249
1112+ 9249              ; -----------------------------------------------------------------
1113+ 9249              ;
1114+ 9249              ;   25/04/23
1115+ 9249              ;
1116+ 9249
1117+ 9249              Determina_resultado_comparativa
1118+ 9249
1119+ 9249              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 9249              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 9249              ;
1122+ 9249              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 9249              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 9249              ;
1125+ 9249              ;   SBC HL,DE
1126+ 9249
1127+ 9249              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 9249              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 9249
1130+ 9249              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 9249              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 9249
1133+ 9249
1134+ 9249 3A CF 89         ld a,(Cuad_objeto)
1135+ 924C FE 02            cp 2
1136+ 924E 28 26            jr z,2F
1137+ 9250 38 24            jr c,2F
1138+ 9252
1139+ 9252              ; Cuadrantes 3º y 4º
1140+ 9252
1141+ 9252 E6 01            and 1
1142+ 9254 28 10            jr z,4F
1143+ 9256
1144+ 9256              ; Cuadrante 3º
1145+ 9256
1146+ 9256 7C               ld a,h
1147+ 9257 06 00            ld b,0
1148+ 9259
1149+ 9259 CD E4 92         call Compara_cositas_H3
1150+ 925C
1151+ 925C 04               inc b
1152+ 925D 05               dec b
1153+ 925E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 925F
1155+ 925F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 9260 06 00            ld b,0
1157+ 9262
1158+ 9262 CD F6 92         call Compara_cositas_L3
1159+ 9265 C9               ret
1160+ 9266
1161+ 9266              ; Cuadrante 4º
1162+ 9266
1163+ 9266 7C           4 ld a,h
1164+ 9267 06 00            ld b,0
1165+ 9269
1166+ 9269 CD 08 93         call Compara_cositas_H4
1167+ 926C
1168+ 926C 04               inc b
1169+ 926D 05               dec b
1170+ 926E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 926F
1172+ 926F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 9270 06 00            ld b,0
1174+ 9272
1175+ 9272 CD 1E 93         call Compara_cositas_L4
1176+ 9275 C9               ret
1177+ 9276
1178+ 9276              ; Cuadrantes 1º y 2º.
1179+ 9276
1180+ 9276 28 10        2 jr z,3F
1181+ 9278
1182+ 9278              ; 1er Cuadrante
1183+ 9278
1184+ 9278 7C               ld a,h
1185+ 9279 06 00            ld b,0
1186+ 927B
1187+ 927B CD BC 92         call Compara_cositas_H1
1188+ 927E
1189+ 927E 04               inc b
1190+ 927F 05               dec b
1191+ 9280 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 9281
1193+ 9281 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 9282 06 00            ld b,0
1195+ 9284
1196+ 9284 CD D2 92         call Compara_cositas_L1
1197+ 9287 C9               ret
1198+ 9288
1199+ 9288
1200+ 9288              ; 2º Cuadrante
1201+ 9288
1202+ 9288 7C           3 ld a,h
1203+ 9289 06 00            ld b,0
1204+ 928B
1205+ 928B CD 98 92         call Compara_cositas_H2
1206+ 928E
1207+ 928E 04               inc b
1208+ 928F 05               dec b
1209+ 9290 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 9291
1211+ 9291 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 9292 06 00            ld b,0
1213+ 9294
1214+ 9294 CD AA 92         call Compara_cositas_L2
1215+ 9297 C9               ret
1216+ 9298
1217+ 9298 A7           Compara_cositas_H2 and a
1218+ 9299 28 0D            jr z,1F
1219+ 929B              ;    cp $fd
1220+ 929B              ;    jr z,1F
1221+ 929B              ;    cp $fe
1222+ 929B              ;    jr z,1F
1223+ 929B FE FF            cp $ff
1224+ 929D 28 09            jr z,1F
1225+ 929F FE 01            cp $01
1226+ 92A1 28 05            jr z,1F
1227+ 92A3 FE 02            cp $02
1228+ 92A5 28 01            jr z,1F
1229+ 92A7 C0               ret nz
1230+ 92A8 04           1 inc b
1231+ 92A9 C9               ret
1232+ 92AA
1233+ 92AA A7           Compara_cositas_L2 and a
1234+ 92AB 28 0D            jr z,1F
1235+ 92AD              ;    cp $fd
1236+ 92AD              ;    jr z,1F
1237+ 92AD FE FE            cp $fe
1238+ 92AF 28 09            jr z,1F
1239+ 92B1 FE FF            cp $ff
1240+ 92B3 28 05            jr z,1F
1241+ 92B5 FE 01            cp $01
1242+ 92B7 28 01            jr z,1F
1243+ 92B9              ;    cp $02
1244+ 92B9              ;    jr z,1F
1245+ 92B9 C0               ret nz
1246+ 92BA 04           1 inc b
1247+ 92BB C9               ret
1248+ 92BC
1249+ 92BC A7           Compara_cositas_H1 and a
1250+ 92BD 28 11            jr z,1F
1251+ 92BF              ;    cp $fd
1252+ 92BF              ;    jr z,1F
1253+ 92BF              ;    cp $fe
1254+ 92BF              ;    jr z,1F
1255+ 92BF FE FF            cp $ff
1256+ 92C1 28 0D            jr z,1F
1257+ 92C3 FE 01            cp $01
1258+ 92C5 28 09            jr z,1F
1259+ 92C7 FE 02            cp $02
1260+ 92C9 28 05            jr z,1F
1261+ 92CB FE 03            cp $03
1262+ 92CD 28 01            jr z,1F
1263+ 92CF C0               ret nz
1264+ 92D0 04           1 inc b
1265+ 92D1 C9               ret
1266+ 92D2
1267+ 92D2 A7           Compara_cositas_L1 and a
1268+ 92D3 28 0D            jr z,1F
1269+ 92D5              ;    cp $fd
1270+ 92D5              ;    jr z,1F
1271+ 92D5              ;    cp $fe
1272+ 92D5              ;    jr z,1F
1273+ 92D5              ;    cp $ff
1274+ 92D5              ;    jr z,1F
1275+ 92D5 FE 01            cp $01
1276+ 92D7 28 09            jr z,1F
1277+ 92D9 FE 02            cp $02
1278+ 92DB 28 05            jr z,1F
1279+ 92DD FE 03            cp $03
1280+ 92DF 28 01            jr z,1F
1281+ 92E1 C0               ret nz
1282+ 92E2 04           1 inc b
1283+ 92E3 C9               ret
1284+ 92E4
1285+ 92E4 A7           Compara_cositas_H3 and a
1286+ 92E5 28 0D            jr z,1F
1287+ 92E7              ;    cp $fd
1288+ 92E7              ;    jr z,1F
1289+ 92E7 FE FE            cp $fe
1290+ 92E9 28 09            jr z,1F
1291+ 92EB FE FF            cp $ff
1292+ 92ED 28 05            jr z,1F
1293+ 92EF FE 01            cp $01
1294+ 92F1 28 01            jr z,1F
1295+ 92F3              ;    cp $02
1296+ 92F3              ;    jr z,1F
1297+ 92F3              ;    cp $03
1298+ 92F3              ;    jr z,1F
1299+ 92F3 C0               ret nz
1300+ 92F4 04           1 inc b
1301+ 92F5 C9               ret
1302+ 92F6
1303+ 92F6 A7           Compara_cositas_L3 and a
1304+ 92F7 28 0D            jr z,1F
1305+ 92F9              ;    cp $fd
1306+ 92F9              ;    jr z,1F
1307+ 92F9              ;    cp $fe
1308+ 92F9              ;    jr z,1F
1309+ 92F9              ;    cp $ff
1310+ 92F9              ;    jr z,1F
1311+ 92F9 FE 01            cp $01
1312+ 92FB 28 09            jr z,1F
1313+ 92FD FE 02            cp $02
1314+ 92FF 28 05            jr z,1F
1315+ 9301 FE 03            cp $03
1316+ 9303 28 01            jr z,1F
1317+ 9305 C0               ret nz
1318+ 9306 04           1 inc b
1319+ 9307 C9               ret
1320+ 9308
1321+ 9308 A7           Compara_cositas_H4 and a
1322+ 9309 28 11            jr z,1F
1323+ 930B FE FD            cp $fd
1324+ 930D 28 0D            jr z,1F
1325+ 930F FE FE            cp $fe
1326+ 9311 28 09            jr z,1F
1327+ 9313 FE FF            cp $ff
1328+ 9315 28 05            jr z,1F
1329+ 9317 FE 01            cp $01
1330+ 9319 28 01            jr z,1F
1331+ 931B              ;    cp $02
1332+ 931B              ;    jr z,1F
1333+ 931B              ;    cp $03
1334+ 931B              ;    jr z,1F
1335+ 931B C0               ret nz
1336+ 931C 04           1 inc b
1337+ 931D C9               ret
1338+ 931E
1339+ 931E A7           Compara_cositas_L4 and a
1340+ 931F 28 0D            jr z,1F
1341+ 9321              ;    cp $fd
1342+ 9321              ;    jr z,1F
1343+ 9321 FE FE            cp $fe
1344+ 9323 28 09            jr z,1F
1345+ 9325 FE FF            cp $ff
1346+ 9327 28 05            jr z,1F
1347+ 9329 FE 01            cp $01
1348+ 932B 28 01            jr z,1F
1349+ 932D              ;    cp $02
1350+ 932D              ;    jr z,1F
1351+ 932D              ;    cp $03
1352+ 932D              ;    jr z,1F
1353+ 932D C0               ret nz
1354+ 932E 04           1 inc b
1355+ 932F C9               ret
# file closed: Disparo.asm
1259  9330              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9330              ; ******************************************************************************************************************************************************************************************
   2+ 9330              ;
   3+ 9330              ; 26/06/23
   4+ 9330              ;
   5+ 9330              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9330
   7+ 9330 CD 0A 96     Draw call Prepara_draw
   8+ 9333 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9334 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9335 28 05        	jr z,2F
  11+ 9337
  12+ 9337 3A CF 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 933A 18 0C        	jr 1F
  14+ 933C 2A CD 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 933F 22 BD 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9342 CD D1 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9345              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9345 CD EC 9C     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  19+ 9348 3A E9 89     1 ld a,(Ctrl_0)
  20+ 934B CB 6F        	bit 5,a
  21+ 934D 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 934F
  23+ 934F CD 67 93     	call Comprueba_limite_horizontal
  24+ 9352 CD F7 93     	call Comprueba_limite_vertical
  25+ 9355
  26+ 9355              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9355
  28+ 9355 CD 44 95     3 call calcula_CColumnass
  29+ 9358 CD 7B 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 935B CD D0 95     	call Define_rutina_de_impresion
  31+ 935E
  32+ 935E 3A E9 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9361 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9363 32 E9 89     	ld (Ctrl_0),a
  35+ 9366
  36+ 9366 C9           	ret
  37+ 9367
  38+ 9367              ; *******************************************************************************************************************************************************************************************
  39+ 9367              ;	21/01/23
  40+ 9367              ;
  41+ 9367              ; 	Comprueba_limite_horizontal.
  42+ 9367              ;
  43+ 9367              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9367              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9367              ;
  46+ 9367              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9367              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9367              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9367              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9367
  51+ 9367
  52+ 9367
  53+ 9367 3A E9 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 936A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 936C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 936E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9370 32 E9 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9373 18 09            jr 6F
  59+ 9375 CB 5F        1 bit 3,a
  60+ 9377 28 0A            jr z,2F
  61+ 9379 E6 F7            and $f7
  62+ 937B 32 E9 89         ld (Ctrl_0),a
  63+ 937E CD D1 94     6 call Inicializacion
  64+ 9381 18 5B            jr 5F
  65+ 9383 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9384
  67+ 9384              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9384              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9384
  70+ 9384 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9385 2A F7 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9388 CD D6 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 938B 67           	ld h,a
  74+ 938C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 938D CD D6 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9390 67           	ld h,a
  77+ 9391 A7           	and a
  78+ 9392 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9394 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9395 3A CF 89     	ld a,(Cuad_objeto)
  81+ 9398 FE 02        	cp 2
  82+ 939A 38 1E        	jr c,3F
  83+ 939C 28 1C        	jr z,3F
  84+ 939E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 939F 28 23            jr z,7F
  86+ 93A1 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93A3 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93A5 E1           	pop hl
  89+ 93A6
  90+ 93A6              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93A6              ; _para indicar con E="2" en caso necesario.
  92+ 93A6
  93+ 93A6 E5               push hl
  94+ 93A7 C5               push bc
  95+ 93A8 CD D6 98     	call calcula_tercio
  96+ 93AB FE 01        	cp 1
  97+ 93AD 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93AF CD DF 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93B2 28 26            jr z,9F
 100+ 93B4 38 24            jr c,9F
 101+ 93B6 1E 00        11 ld e,0
 102+ 93B8 18 22            jr 8F
 103+ 93BA 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93BB 28 07        	jr z, 7F
 105+ 93BD 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93BF 1E 00         	ld e,0
 107+ 93C1 E1           	pop hl
 108+ 93C2 18 04        	jr 4F
 109+ 93C4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93C6 18 15            jr 10F
 111+ 93C8
 112+ 93C8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93C8              ; _para indicar con E="2" en caso necesario.
 114+ 93C8
 115+ 93C8 E5           4 push hl
 116+ 93C9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93CA CD D6 98     	call calcula_tercio
 118+ 93CD FE 01        	cp 1
 119+ 93CF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93D1 CD DF 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93D4 28 04            jr z,9F
 122+ 93D6 30 02            jr nc,9F
 123+ 93D8 18 02        	jr 8F
 124+ 93DA 1E 02        9 ld e,2
 125+ 93DC C1           8 pop bc
 126+ 93DD E1           10 pop hl
 127+ 93DE C9           5 ret
 128+ 93DF
 129+ 93DF              ; --------------------
 130+ 93DF              ;
 131+ 93DF              ; 25/08/22
 132+ 93DF
 133+ 93DF CD D6 98     Comprueba_centro call calcula_tercio
 134+ 93E2 67               ld h,a
 135+ 93E3 08           	ex af,af
 136+ 93E4 FE 02        	cp 2
 137+ 93E6 38 07        	jr c,1F
 138+ 93E8 28 05        	jr z,1F
 139+ 93EA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93ED 18 03        	jr 2F
 141+ 93EF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93F2 08           2 ex af,af
 143+ 93F3 A7               and a
 144+ 93F4 ED 42            sbc hl,bc
 145+ 93F6 C9               ret
 146+ 93F7
 147+ 93F7              ; *********************************************************************************************************************************************************************************************
 148+ 93F7              ;
 149+ 93F7              ;   16/8/22
 150+ 93F7              ;
 151+ 93F7              ;	Comprueba_limite_vertical
 152+ 93F7              ;
 153+ 93F7              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93F7              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93F7              ;
 156+ 93F7
 157+ 93F7 2A BD 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93FA 7D           	ld a,l
 159+ 93FB E6 1F        	and $1F
 160+ 93FD 57           	ld d,a
 161+ 93FE 3A F9 89     	ld a,(Limite_vertical)
 162+ 9401 BA           	cp d 											; Límite - Posición.
 163+ 9402 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9403 3A CF 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9406 CB 47        	bit 0,a
 166+ 9408 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 940A
 168+ 940A              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 940A
 170+ 940A 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 940B 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 940D
 173+ 940D              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 940D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 940D
 176+ 940D 3A C1 89         ld a,(Coordenada_X)
 177+ 9410 16 0F            ld d,Centro_izquierda
 178+ 9412 A7               and a
 179+ 9413 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9414 28 1E            jr z,3F
 181+ 9416 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9418              ;                                                    ; _salimos sin modificar nada.
 183+ 9418 18 0E            jr 2F
 184+ 941A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 941B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 941D
 187+ 941D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 941D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 941D
 190+ 941D 3A C1 89         ld a,(Coordenada_X)
 191+ 9420 16 10            ld d,Centro_derecha
 192+ 9422 A7               and a
 193+ 9423 92               sub d
 194+ 9424 28 0E            jr z,3F
 195+ 9426 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9428              ;                                                    ; _salimos sin modificar nada.
 197+ 9428 CB 43        2 bit 0,e
 198+ 942A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 942C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 942D CD C1 94         call Modificaccionne
 201+ 9430 C1           	pop bc
 202+ 9431 CD D1 94         call Inicializacion
 203+ 9434 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9435
 205+ 9435              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9435
 207+ 9435 C5           4 push bc
 208+ 9436 01 BC 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9439 0A           	ld a,(bc)
 210+ 943A 3D           	dec a
 211+ 943B 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 943C 7D           	ld a,l
 213+ 943D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 943E CB 47        	bit 0,a
 215+ 9440 28 03        	jr z,5F
 216+ 9442 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9443 18 2E        	jr 7F
 218+ 9445
 219+ 9445              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9445
 221+ 9445 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9446 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9447 3A E9 89     	ld a,(Ctrl_0)
 224+ 944A CB 4F        	bit 1,a
 225+ 944C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 944E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 944F
 228+ 944F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 944F
 230+ 944F 1C               inc e
 231+ 9450 1D               dec e
 232+ 9451 20 07            jr nz,12F
 233+ 9453 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9454 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9455 22 BD 89     	ld (Posicion_actual),hl
 236+ 9458 18 44        13 jr 9F
 237+ 945A CB 43        12 bit 0,e
 238+ 945C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 945E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 945E C1           	pop bc
 241+ 945F 18 D3        	jr 3B
 242+ 9461 80           14 add b
 243+ 9462 6F               ld l,a
 244+ 9463 22 BD 89     	ld (Posicion_actual),hl
 245+ 9466 CD C1 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9469 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 946B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 946D 32 E9 89         ld (Ctrl_0),a
 249+ 9470 F1           	pop af
 250+ 9471 18 2B        	jr 9F
 251+ 9473
 252+ 9473              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9473
 254+ 9473 F5           7 push af
 255+ 9474 3A E9 89     	ld a,(Ctrl_0)
 256+ 9477 CB 47        	bit 0,a
 257+ 9479 20 1D        	jr nz,8F
 258+ 947B F1           	pop af
 259+ 947C
 260+ 947C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 947C
 262+ 947C 1C           	inc e
 263+ 947D 1D               dec e
 264+ 947E 20 07            jr nz,10F
 265+ 9480 90           	sub b
 266+ 9481 6F               ld l,a
 267+ 9482 22 BD 89     	ld (Posicion_actual),hl
 268+ 9485 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9487              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9487 CB 43        10 bit 0,e
 271+ 9489 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 948B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 948B C1           	pop bc
 274+ 948C 18 A6        	jr 3B
 275+ 948E 90           16 sub b
 276+ 948F 6F               ld l,a
 277+ 9490 22 BD 89     	ld (Posicion_actual),hl
 278+ 9493 CD C1 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9496 18 06            jr 9F
 280+ 9498 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 949A 32 E9 89         ld (Ctrl_0),a
 282+ 949D F1           	pop af
 283+ 949E C1           9 pop bc
 284+ 949F 1E 00        	ld e,0
 285+ 94A1 CD D1 94         call Inicializacion
 286+ 94A4 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94A5 08           	ex af,af
 288+ 94A6 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94A7 18 8B            jr 3B
 290+ 94A9
 291+ 94A9              ; --------------------
 292+ 94A9
 293+ 94A9 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94AB CD 25 96     1 call PreviousScan
 295+ 94AE 10 FB            djnz 1B
 296+ 94B0 22 BD 89     	ld (Posicion_actual),hl
 297+ 94B3 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94B4 C9           	ret
 299+ 94B5
 300+ 94B5              ; --------------------
 301+ 94B5
 302+ 94B5 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94B7 CD 16 96     1 call NextScan
 304+ 94BA 10 FB            djnz 1B
 305+ 94BC 22 BD 89     	ld (Posicion_actual),hl
 306+ 94BF AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94C0 C9           	ret
 308+ 94C1
 309+ 94C1              ; --------------------
 310+ 94C1              ;
 311+ 94C1              ;	22/01/23
 312+ 94C1              ;
 313+ 94C1              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94C1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94C1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94C1
 317+ 94C1
 318+ 94C1              Modificaccionne
 319+ 94C1
 320+ 94C1 3A CF 89     	ld a,(Cuad_objeto)
 321+ 94C4 FE 02        	cp 2
 322+ 94C6 CC A9 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94C9 DC A9 94         call c,Modifica_Pos_actual
 324+ 94CC C8           	ret z
 325+ 94CD CD B5 94         call Modifica_Pos_actual2
 326+ 94D0 C9               ret
 327+ 94D1
 328+ 94D1              ; *************************************************************************************************************************************************************************************************
 329+ 94D1              ;
 330+ 94D1              ;	13/8/22
 331+ 94D1              ;
 332+ 94D1              ;	Inicializacion
 333+ 94D1              ;
 334+ 94D1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94D1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94D1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94D1              ;
 338+ 94D1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94D1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94D1              ;	_ desaparece/aparece.
 341+ 94D1
 342+ 94D1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94D1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94D1              ;
 345+ 94D1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94D1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94D1              ; 		   [E] ="0"
 348+ 94D1
 349+ 94D1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94D1
 351+ 94D1 CD D6 98     Inicializacion call calcula_tercio
 352+ 94D4 28 36        	jr z,primit
 353+ 94D6 E6 02        	and 2
 354+ 94D8 20 07        	jr nz,segmit
 355+ 94DA 7D           	ld a,l
 356+ 94DB FE 7F        	cp $7f
 357+ 94DD 38 2D        	jr c,primit
 358+ 94DF 28 2B        	jr z,primit
 359+ 94E1 CD 3E 95     segmit call column
 360+ 94E4 38 13        	jr c,tercuad
 361+ 94E6 3E 04        cuarcuad ld a,4
 362+ 94E8 32 CF 89     	ld (Cuad_objeto),a
 363+ 94EB 21 20 48     	ld hl,$4820
 364+ 94EE 22 F7 89     	ld (Limite_horizontal),hl
 365+ 94F1 21 F9 89     	ld hl,Limite_vertical
 366+ 94F4 36 0D        	ld (hl),$0d
 367+ 94F6 08           	ex af,af
 368+ 94F7 18 3C        	jr 1F
 369+ 94F9              tercuad
 370+ 94F9 3E 03        	ld a,3
 371+ 94FB 32 CF 89     	ld (Cuad_objeto),a
 372+ 94FE 21 20 48     	ld hl,$4820
 373+ 9501 22 F7 89     	ld (Limite_horizontal),hl
 374+ 9504 21 F9 89     	ld hl,Limite_vertical
 375+ 9507 36 12        	ld (hl),$12
 376+ 9509 08           	ex af,af
 377+ 950A 18 29        	jr 1F
 378+ 950C CD 3E 95     primit call column
 379+ 950F 38 13        	jr c, primcuad
 380+ 9511              segcuad
 381+ 9511 3E 02        	ld a,2
 382+ 9513 32 CF 89     	ld (Cuad_objeto),a
 383+ 9516 21 C0 4F     	ld hl,$4fc0
 384+ 9519 22 F7 89     	ld (Limite_horizontal),hl
 385+ 951C 21 F9 89     	ld hl,Limite_vertical
 386+ 951F 36 0D        	ld (hl),$0d
 387+ 9521 08           	ex af,af
 388+ 9522 18 11        	jr 1F
 389+ 9524              primcuad
 390+ 9524 3E 01        	ld a,1
 391+ 9526 32 CF 89     	ld (Cuad_objeto),a
 392+ 9529 21 C0 4F     	ld hl,$4fc0
 393+ 952C 22 F7 89     	ld (Limite_horizontal),hl
 394+ 952F 21 F9 89     	ld hl,Limite_vertical
 395+ 9532 36 12        	ld (hl),$12
 396+ 9534 08           	ex af,af
 397+ 9535 CD 42 9C     1 call Genera_coordenadas
 398+ 9538 21 E9 89     	ld hl,Ctrl_0
 399+ 953B CB EE        	set 5,(hl)
 400+ 953D C9           	ret
 401+ 953E
 402+ 953E              ; ------------------------------------------------------------------------------------------------------------------
 403+ 953E
 404+ 953E              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 953E              ;
 406+ 953E              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 953E
 408+ 953E 7D           column ld a,l
 409+ 953F E6 1F        	and $1f
 410+ 9541 FE 10         	cp $10
 411+ 9543 C9            	ret
 412+ 9544
 413+ 9544              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9544              ;
 415+ 9544              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9544              ;
 417+ 9544              ; 14/12/22
 418+ 9544              ;
 419+ 9544              ;	Modifica: A y BC.
 420+ 9544
 421+ 9544 3A CF 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9547 E6 01        	and 1
 423+ 9549 28 17        	jr z,1F
 424+ 954B
 425+ 954B              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 954B
 427+ 954B 3A C1 89     	ld a,(Coordenada_X)
 428+ 954E 47           	ld b,a
 429+ 954F 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9550 79           	ld a,c
 431+ 9551 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9552 38 08        	jr c,2F
 433+ 9554 47           	ld b,a
 434+ 9555 79           	ld a,c
 435+ 9556 90           	sub b
 436+ 9557 32 F6 89     	ld (Columnas),a
 437+ 955A 18 1B        	jr 4F
 438+ 955C 79           2 ld a,c
 439+ 955D 32 F6 89     	ld (Columnas),a
 440+ 9560 18 15        	jr 4F
 441+ 9562
 442+ 9562              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9562
 444+ 9562 3A C1 89     1 ld a,(Coordenada_X)
 445+ 9565 81           	add c
 446+ 9566 3D           	dec a
 447+ 9567 D6 1F        	sub $1f
 448+ 9569 38 08        	jr c,3F
 449+ 956B 47           	ld b,a
 450+ 956C 79           	ld a,c
 451+ 956D 90           	sub b
 452+ 956E 32 F6 89     	ld (Columnas),a
 453+ 9571 18 04        	jr 4F
 454+ 9573 79           3 ld a,c
 455+ 9574 32 F6 89     	ld (Columnas),a
 456+ 9577 D9           4 exx
 457+ 9578 4F           	ld c,a
 458+ 9579 D9           	exx
 459+ 957A C9            ret
 460+ 957B
 461+ 957B              ; --------------------------------------------------------------------------------------------------------------------
 462+ 957B              ;
 463+ 957B              ; 7/1/23
 464+ 957B              ;
 465+ 957B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 957B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 957B              ;
 468+ 957B              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 957B              ;	DESTRUYE: HL,B Y A.
 470+ 957B
 471+ 957B 3A CF 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 957E FE 02        	cp 2
 473+ 9580 38 18        	jr c,1F
 474+ 9582 28 16        	jr z,1F
 475+ 9584 E6 01        	and 1
 476+ 9586 28 0D        	jr z,3F
 477+ 9588
 478+ 9588              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9588
 480+ 9588 CD C4 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 958B
 482+ 958B 7D           9 ld a,l
 483+ 958C E6 1F        	and $1f
 484+ 958E 28 2A        	jr z,7F
 485+ 9590 2B           	dec hl
 486+ 9591 10 F8        	djnz 9B
 487+ 9593 18 25        	jr 7F
 488+ 9595
 489+ 9595              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9595
 491+ 9595 2A BD 89     3 ld hl,(Posicion_actual)
 492+ 9598 18 20        	jr 7F
 493+ 959A
 494+ 959A 28 14        1 jr z,2F
 495+ 959C
 496+ 959C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 959C
 498+ 959C CD C4 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 959F
 500+ 959F 7D           4 ld a,l
 501+ 95A0 E6 1F        	and $1f
 502+ 95A2 28 03        	jr z,6F
 503+ 95A4 2B           	dec hl
 504+ 95A5 10 F8        	djnz 4B
 505+ 95A7 06 0F        6 ld b,15
 506+ 95A9 CD 25 96     5 call PreviousScan
 507+ 95AC 10 FB        	djnz 5B
 508+ 95AE 18 0A        	jr 7F
 509+ 95B0
 510+ 95B0              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 95B0
 512+ 95B0 CD C4 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 95B3 06 0F        	ld b,15
 514+ 95B5 CD 25 96     8 call PreviousScan
 515+ 95B8 10 FB        	djnz 8B
 516+ 95BA
 517+ 95BA E5           7 push hl
 518+ 95BB DD E1        	pop ix
 519+ 95BD
 520+ 95BD 2A BF 89     	ld hl,(Puntero_objeto)
 521+ 95C0 E5           	push hl
 522+ 95C1 FD E1        	pop iy
 523+ 95C3
 524+ 95C3 C9           	ret
 525+ 95C4
 526+ 95C4              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95C4              ;
 528+ 95C4              ;	2/1/23
 529+ 95C4              ;
 530+ 95C4              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95C4              ;
 532+ 95C4              ;	Tras esta rutina tenemos:
 533+ 95C4              ;
 534+ 95C4              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95C4              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95C4              ;
 537+ 95C4              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95C4
 539+ 95C4 2A BD 89     Operandos ld hl,(Posicion_actual)
 540+ 95C7 3A F6 89     	ld a,(Columnas)
 541+ 95CA 3D           	dec a
 542+ 95CB 20 01        	jr nz,1F
 543+ 95CD 3C           	inc a
 544+ 95CE 47           1 ld b,a
 545+ 95CF C9           	ret
 546+ 95D0
 547+ 95D0              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95D0              ;
 549+ 95D0              ;	3/1/23
 550+ 95D0              ;
 551+ 95D0              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95D0              ;
 553+ 95D0              ;	Destruye: A,B,HL y DE.
 554+ 95D0
 555+ 95D0              Define_rutina_de_impresion
 556+ 95D0
 557+ 95D0 3A BC 89     	ld a,(Columns)
 558+ 95D3 47           	ld b,a
 559+ 95D4 3A F6 89     	ld a,(Columnas)
 560+ 95D7 B8           	cp b
 561+ 95D8 20 0D        	jr nz,2f
 562+ 95DA
 563+ 95DA              ;	La entidad se imprime entera.
 564+ 95DA
 565+ 95DA 21 A6 96     	ld hl, Indice_entidades_completas
 566+ 95DD E6 01        	and 1
 567+ 95DF 28 02        	jr z,1F
 568+ 95E1
 569+ 95E1 23           	inc hl
 570+ 95E2 23           	inc hl
 571+ 95E3
 572+ 95E3 CD 24 8D     1 call Extrae_address
 573+ 95E6 C9           	ret		;	ret
 574+ 95E7
 575+ 95E7              ;	La entidad no se imprime entera en pantalla.
 576+ 95E7
 577+ 95E7 3A CF 89     2 ld a,(Cuad_objeto)
 578+ 95EA E6 01        	and 1
 579+ 95EC 28 17        	jr z,3F
 580+ 95EE
 581+ 95EE              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95EE
 583+ 95EE 21 AA 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95F1 3A BC 89     4 ld a,(Columns)
 585+ 95F4 E6 01        	and 1
 586+ 95F6 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95F8
 588+ 95F8 23           	inc hl
 589+ 95F9 23           	inc hl
 590+ 95FA
 591+ 95FA 3A F6 89     	ld a,(Columnas)
 592+ 95FD E6 01        	and 1
 593+ 95FF 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 9601
 595+ 9601 23           	inc hl
 596+ 9602 23           	inc hl
 597+ 9603
 598+ 9603 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 9605
 600+ 9605 21 B0 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 9608 18 E7        	jr 4B
 602+ 960A
 603+ 960A              ; --------------------------------------------------------------------------------------------------------------------
 604+ 960A              ;
 605+ 960A              ;	Prepara_draw
 606+ 960A              ;
 607+ 960A              ;	Es una rutina de carga.
 608+ 960A              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 960A              ;
 610+ 960A              ;	FUNCIONAMIENTO:
 611+ 960A              ;
 612+ 960A              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 960A              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 960A              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 960A              ;
 616+ 960A              ;	DESTRUYE:
 617+ 960A              ;
 618+ 960A              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 960A
 620+ 960A 21 BB 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 960D 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 960E 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 960F 4E           	ld c,(hl)
 624+ 9610 2A BD 89     	ld hl,(Posicion_actual)
 625+ 9613 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 9615 C9           	ret
 627+ 9616
 628+ 9616              ;----------------------------------------------------------------------------------------------------------------
 629+ 9616              ;
 630+ 9616              ;	5/08/22
 631+ 9616              ;
 632+ 9616              ;   NextScan.
 633+ 9616              ;
 634+ 9616              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 9616              ;
 636+ 9616              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 9616              ;
 638+ 9616              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 9616              ;
 640+ 9616              ;       DESTRUIDOS: AF y HL !!!
 641+ 9616              ;
 642+ 9616              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 9616              ;
 644+ 9616
 645+ 9616 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 9617 7C               ld a,h
 647+ 9618 E6 07            and 7
 648+ 961A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 961B
 650+ 961B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 961C C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 961E 6F               ld l,a
 653+ 961F D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9620
 655+ 9620 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9621 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9623 67               ld h,a
 658+ 9624 C9               ret
 659+ 9625
 660+ 9625              ;----------------------------------------------------------------------------------------------------------------
 661+ 9625              ;
 662+ 9625              ;	5/08/22
 663+ 9625              ;
 664+ 9625              ;   PreviousScan.
 665+ 9625              ;
 666+ 9625              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9625              ;
 668+ 9625              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9625              ;
 670+ 9625              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9625              ;
 672+ 9625              ;       DESTRUIDOS: AF y HL !!!
 673+ 9625              ;
 674+ 9625              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9625              ;
 676+ 9625
 677+ 9625 7C           PreviousScan ld a,h
 678+ 9626 25               dec h               ; Dec H.
 679+ 9627 E6 07            and 7
 680+ 9629 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 962A
 682+ 962A 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 962B D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 962D 6F               ld l,a
 685+ 962E D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 962F
 687+ 962F 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9630 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9632 67               ld h,a
 690+ 9633 C9               ret
 691+ 9634
 692+ 9634              ; -----------------------------------------------------------------------------------
 693+ 9634              ;
 694+ 9634              ;	28/2/23
 695+ 9634              ;
 696+ 9634              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9634              ;	Extrae fotos de Album_de_fotos.
 698+ 9634
 699+ 9634 3A 08 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 9637 A7           	and a
 701+ 9638 C8           	ret z
 702+ 9639 ED 73 0D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 963D 31 00 70     	ld sp,Album_de_fotos
 704+ 9640
 705+ 9640 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9642 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9643 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9644
 709+ 9644 ED 73 0F 8A  	ld (Stack_2),sp
 710+ 9648 ED 7B 0D 8A  	ld sp,(Stack)
 711+ 964C
 712+ 964C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 964C
 714+ 964C 3E CD        	ld a,$cd
 715+ 964E 32 56 96     	ld (Imprime),a
 716+ 9651 EB           	ex de,hl
 717+ 9652 22 57 96     	ld (Imprime+1),hl
 718+ 9655 EB           	ex de,hl
 719+ 9656
 720+ 9656              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9656
 722+ 9656 00 00 00     Imprime db 0,0,0
 723+ 9659
 724+ 9659 3A 08 8A     	ld a,(Numero_de_malotes)
 725+ 965C 3D           	dec a
 726+ 965D 28 09        	jr z,1F
 727+ 965F 32 08 8A      	ld (Numero_de_malotes),a
 728+ 9662
 729+ 9662 ED 7B 0F 8A   	ld sp,(Stack_2)
 730+ 9666 18 D8        	jr 2B
 731+ 9668
 732+ 9668 AF           1 xor a
 733+ 9669 32 0F 8A     	ld (Stack_2),a
 734+ 966C C9           	ret
 735+ 966D
 736+ 966D              ; -----------------------------------------------------------------------------------
 737+ 966D              ;
 738+ 966D              ;	28/2/23
 739+ 966D              ;
 740+ 966D              ;	Pinta los disparos generados.
 741+ 966D
 742+ 966D              Extrae_foto_disparos
 743+ 966D
 744+ 966D 3A 15 8A     	ld a,(Numero_de_disparotes)
 745+ 9670 A7           	and a
 746+ 9671 C8           	ret z
 747+ 9672 ED 73 0D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9676 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9679
 750+ 9679 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 967B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 967C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 967D
 754+ 967D ED 73 0F 8A  	ld (Stack_2),sp
 755+ 9681 ED 7B 0D 8A  	ld sp,(Stack)
 756+ 9685
 757+ 9685              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9685
 759+ 9685 3E CD        	ld a,$cd
 760+ 9687 32 8F 96     	ld (Imprime2),a
 761+ 968A EB           	ex de,hl
 762+ 968B 22 90 96     	ld (Imprime2+1),hl
 763+ 968E EB           	ex de,hl
 764+ 968F
 765+ 968F              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 968F
 767+ 968F 00 00 00     Imprime2 db 0,0,0
 768+ 9692
 769+ 9692 3A 15 8A     	ld a,(Numero_de_disparotes)
 770+ 9695 3D           	dec a
 771+ 9696 28 09        	jr z,1F
 772+ 9698 32 15 8A      	ld (Numero_de_disparotes),a
 773+ 969B
 774+ 969B ED 7B 0F 8A  	ld sp,(Stack_2)
 775+ 969F 18 D8        	jr 2B
 776+ 96A1
 777+ 96A1 AF           1 xor a
 778+ 96A2 32 0F 8A     	ld (Stack_2),a
 779+ 96A5 C9           	ret
 780+ 96A6
# file closed: Draw_XOR.asm
1260  96A6              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96A6              ;   índices de Rutinas de impresión.
   2+ 96A6
   3+ 96A6 B6 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96A8 E3 96            defw Pinta_Amadeus_3x2
   5+ 96AA
   6+ 96AA 39 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96AC D9 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96AE 8D 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96B0
  10+ 96B0 63 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96B2 67 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96B4 1B 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96B6
  14+ 96B6
  15+ 96B6              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96B6              ;
  17+ 96B6              ;   12/12/22
  18+ 96B6              ;
  19+ 96B6              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96B6              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96B6              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96B6              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96B6              ;
  24+ 96B6              ;   Modifica: DE y HL.
  25+ 96B6
  26+ 96B6 ED 73 0D 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96BA FD F9        	ld sp,iy
  28+ 96BC 06 10            ld b,16
  29+ 96BE D1           1 pop de
  30+ 96BF 7B               ld a,e
  31+ 96C0 AE               xor (hl)
  32+ 96C1 77           	ld (hl),a
  33+ 96C2 23           	inc hl
  34+ 96C3 7A               ld a,d
  35+ 96C4 AE               xor (hl)
  36+ 96C5 77           	ld (hl),a
  37+ 96C6 2B           	dec hl
  38+ 96C7 24           	inc h
  39+ 96C8 7C               ld a,h
  40+ 96C9 E6 07            and 7
  41+ 96CB 20 0A            jr nz,2F
  42+ 96CD 7D               ld a,l
  43+ 96CE C6 20            add a,$20
  44+ 96D0 6F               ld l,a
  45+ 96D1 38 04            jr c,2F
  46+ 96D3 7C               ld a,h
  47+ 96D4 D6 08            sub 8
  48+ 96D6 67               ld h,a
  49+ 96D7 7C           2 ld a,h
  50+ 96D8 FE 58            cp $58
  51+ 96DA 28 02            jr z,3F
  52+ 96DC 10 E0            djnz 1B
  53+ 96DE ED 7B 0D 8A  3 ld sp,(Stack)
  54+ 96E2 C9           	ret
  55+ 96E3
  56+ 96E3 ED 73 0D 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96E7 FD F9        	ld sp,iy
  58+ 96E9 06 08            ld b,8
  59+ 96EB D1           1 pop de
  60+ 96EC 7B               ld a,e
  61+ 96ED AE               xor (hl)
  62+ 96EE 77           	ld (hl),a
  63+ 96EF 23           	inc hl
  64+ 96F0 7A               ld a,d
  65+ 96F1 AE               xor (hl)
  66+ 96F2 77           	ld (hl),a
  67+ 96F3 23           	inc hl
  68+ 96F4 D1           	pop de
  69+ 96F5 7B               ld a,e
  70+ 96F6 AE               xor (hl)
  71+ 96F7 77           	ld (hl),a
  72+ 96F8 2B           	dec hl
  73+ 96F9 2B           	dec hl
  74+ 96FA 24           	inc h
  75+ 96FB 7C               ld a,h
  76+ 96FC E6 07            and 7
  77+ 96FE 20 0A            jr nz,2F
  78+ 9700 7D               ld a,l
  79+ 9701 C6 20            add a,$20
  80+ 9703 6F               ld l,a
  81+ 9704 38 04            jr c,2F
  82+ 9706 7C               ld a,h
  83+ 9707 D6 08            sub 8
  84+ 9709 67               ld h,a
  85+ 970A 7C           2 ld a,h
  86+ 970B FE 58            cp $58
  87+ 970D 28 25            jr z,4F
  88+ 970F 7A               ld a,d
  89+ 9710 AE               xor (hl)
  90+ 9711 77               ld (hl),a
  91+ 9712 D1           	pop de
  92+ 9713 23           	inc hl
  93+ 9714 7B               ld a,e
  94+ 9715 AE               xor (hl)
  95+ 9716 77           	ld (hl),a
  96+ 9717 23           	inc hl
  97+ 9718 7A               ld a,d
  98+ 9719 AE               xor (hl)
  99+ 971A 77           	ld (hl),a
 100+ 971B 2B           	dec hl
 101+ 971C 2B           	dec hl
 102+ 971D 24           	inc h
 103+ 971E 7C               ld a,h
 104+ 971F E6 07            and 7
 105+ 9721 20 0A            jr nz,3F
 106+ 9723 7D               ld a,l
 107+ 9724 C6 20            add a,$20
 108+ 9726 6F               ld l,a
 109+ 9727 38 04            jr c,3F
 110+ 9729 7C               ld a,h
 111+ 972A D6 08            sub 8
 112+ 972C 67               ld h,a
 113+ 972D 7C           3 ld a,h
 114+ 972E FE 58            cp $58
 115+ 9730 28 02            jr z,4F
 116+ 9732 10 B7            djnz 1B
 117+ 9734 ED 7B 0D 8A  4 ld sp,(Stack)
 118+ 9738 C9           	ret
 119+ 9739
 120+ 9739              ; ---------------------------------------------------
 121+ 9739
 122+ 9739 ED 73 0D 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 973D FD F9        	ld sp,iy
 124+ 973F
 125+ 973F              ; >>>
 126+ 973F
 127+ 973F 06 10            ld b,16
 128+ 9741 D1           1 pop de
 129+ 9742 7A           	ld a,d
 130+ 9743 AE           	xor (hl)
 131+ 9744 77           	ld (hl),a
 132+ 9745 24           	inc h
 133+ 9746 7C               ld a,h
 134+ 9747 E6 07            and 7
 135+ 9749 20 0C            jr nz,2F
 136+ 974B 7D               ld a,l
 137+ 974C C6 20            add a,$20
 138+ 974E 6F               ld l,a
 139+ 974F 38 06            jr c,2F
 140+ 9751 7C               ld a,h
 141+ 9752 D6 08            sub 8
 142+ 9754 67               ld h,a
 143+ 9755 18 00            jr 2F
 144+ 9757 7C           2 ld a,h
 145+ 9758 FE 58            cp $58
 146+ 975A 28 02            jr z,3F
 147+ 975C 10 E3            djnz 1B
 148+ 975E ED 7B 0D 8A  3 ld sp,(Stack)
 149+ 9762 C9           	ret
 150+ 9763
 151+ 9763 ED 73 0D 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9767 FD F9        	ld sp,iy
 153+ 9769
 154+ 9769              ; >>>
 155+ 9769
 156+ 9769 06 10            ld b,16
 157+ 976B D1           1 pop de
 158+ 976C 7B           	ld a,e
 159+ 976D AE           	xor (hl)
 160+ 976E 77           	ld (hl),a
 161+ 976F 24           	inc h
 162+ 9770 7C               ld a,h
 163+ 9771 E6 07            and 7
 164+ 9773 20 0C            jr nz,2F
 165+ 9775 7D               ld a,l
 166+ 9776 C6 20            add a,$20
 167+ 9778 6F               ld l,a
 168+ 9779 38 06            jr c,2F
 169+ 977B 7C               ld a,h
 170+ 977C D6 08            sub 8
 171+ 977E 67               ld h,a
 172+ 977F 18 00            jr 2F
 173+ 9781 7C           2 ld a,h
 174+ 9782 FE 58            cp $58
 175+ 9784 28 02            jr z,3F
 176+ 9786 10 E3            djnz 1B
 177+ 9788 ED 7B 0D 8A  3 ld sp,(Stack)
 178+ 978C C9           	ret
 179+ 978D
 180+ 978D              ; ---------------------------------------------------
 181+ 978D
 182+ 978D ED 73 0D 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9791 FD F9        	ld sp,iy
 184+ 9793 06 08            ld b,8
 185+ 9795 D1           1 pop de
 186+ 9796 7A           	ld a,d
 187+ 9797 AE           	xor (hl)
 188+ 9798 77           	ld (hl),a
 189+ 9799 23           	inc hl
 190+ 979A D1           	pop de
 191+ 979B 7B           	ld a,e
 192+ 979C AE           	xor (hl)
 193+ 979D 77           	ld (hl),a
 194+ 979E 2B           	dec hl
 195+ 979F 24            	inc h
 196+ 97A0 7C               ld a,h
 197+ 97A1 E6 07            and 7
 198+ 97A3 20 0A            jr nz,2F
 199+ 97A5 7D               ld a,l
 200+ 97A6 C6 20            add a,$20
 201+ 97A8 6F               ld l,a
 202+ 97A9 38 04            jr c,2F
 203+ 97AB 7C               ld a,h
 204+ 97AC D6 08            sub 8
 205+ 97AE 67               ld h,a
 206+ 97AF 7C           2 ld a,h
 207+ 97B0 FE 58            cp $58
 208+ 97B2 28 20            jr z,4F
 209+ 97B4 D1               pop de
 210+ 97B5 7B           	ld a,e
 211+ 97B6 AE           	xor (hl)
 212+ 97B7 77           	ld (hl),a
 213+ 97B8 23           	inc hl
 214+ 97B9 7A           	ld a,d
 215+ 97BA AE           	xor (hl)
 216+ 97BB 77           	ld (hl),a
 217+ 97BC 2B           	dec hl
 218+ 97BD 24           	inc h
 219+ 97BE 7C               ld a,h
 220+ 97BF E6 07            and 7
 221+ 97C1 20 0A            jr nz,3F
 222+ 97C3 7D               ld a,l
 223+ 97C4 C6 20            add a,$20
 224+ 97C6 6F               ld l,a
 225+ 97C7 38 04            jr c,3F
 226+ 97C9 7C               ld a,h
 227+ 97CA D6 08            sub 8
 228+ 97CC 67               ld h,a
 229+ 97CD 7C           3 ld a,h
 230+ 97CE FE 58            cp $58
 231+ 97D0 28 02            jr z,4F
 232+ 97D2 10 C1            djnz 1B
 233+ 97D4 ED 7B 0D 8A  4 ld sp,(Stack)
 234+ 97D8 C9           	ret
 235+ 97D9
 236+ 97D9 ED 73 0D 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97DD FD F9        	ld sp,iy
 238+ 97DF 06 08            ld b,8
 239+ 97E1 D1           1 pop de
 240+ 97E2 D1           	pop de
 241+ 97E3 7B           	ld a,e
 242+ 97E4 AE           	xor (hl)
 243+ 97E5 77           	ld (hl),a
 244+ 97E6 24            	inc h
 245+ 97E7 7C               ld a,h
 246+ 97E8 E6 07            and 7
 247+ 97EA 20 0A            jr nz,2F
 248+ 97EC 7D               ld a,l
 249+ 97ED C6 20            add a,$20
 250+ 97EF 6F               ld l,a
 251+ 97F0 38 04            jr c,2F
 252+ 97F2 7C               ld a,h
 253+ 97F3 D6 08            sub 8
 254+ 97F5 67               ld h,a
 255+ 97F6 7C           2 ld a,h
 256+ 97F7 FE 58            cp $58
 257+ 97F9 28 1B            jr z,4F
 258+ 97FB D1               pop de
 259+ 97FC 7A           	ld a,d
 260+ 97FD AE           	xor (hl)
 261+ 97FE 77           	ld (hl),a
 262+ 97FF 24           	inc h
 263+ 9800 7C               ld a,h
 264+ 9801 E6 07            and 7
 265+ 9803 20 0A            jr nz,3F
 266+ 9805 7D               ld a,l
 267+ 9806 C6 20            add a,$20
 268+ 9808 6F               ld l,a
 269+ 9809 38 04            jr c,3F
 270+ 980B 7C               ld a,h
 271+ 980C D6 08            sub 8
 272+ 980E 67               ld h,a
 273+ 980F 7C           3 ld a,h
 274+ 9810 FE 58            cp $58
 275+ 9812 28 02            jr z,4F
 276+ 9814 10 CB            djnz 1B
 277+ 9816 ED 7B 0D 8A  4 ld sp,(Stack)
 278+ 981A C9           	ret
 279+ 981B
 280+ 981B ED 73 0D 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 981F FD F9        	ld sp,iy
 282+ 9821 06 08            ld b,8
 283+ 9823 D1           1 pop de
 284+ 9824 7B           	ld a,e
 285+ 9825 AE           	xor (hl)
 286+ 9826 77           	ld (hl),a
 287+ 9827 23           	inc hl
 288+ 9828 7A           	ld a,d
 289+ 9829 AE           	xor (hl)
 290+ 982A 77           	ld (hl),a
 291+ 982B 2B           	dec hl
 292+ 982C 24             	inc h
 293+ 982D 7C               ld a,h
 294+ 982E E6 07            and 7
 295+ 9830 20 0A            jr nz,2F
 296+ 9832 7D               ld a,l
 297+ 9833 C6 20            add a,$20
 298+ 9835 6F               ld l,a
 299+ 9836 38 04            jr c,2F
 300+ 9838 7C               ld a,h
 301+ 9839 D6 08            sub 8
 302+ 983B 67               ld h,a
 303+ 983C 7C           2 ld a,h
 304+ 983D FE 58            cp $58
 305+ 983F 28 21            jr z,4F
 306+ 9841 D1               pop de
 307+ 9842 7A           	ld a,d
 308+ 9843 AE           	xor (hl)
 309+ 9844 77           	ld (hl),a
 310+ 9845 23           	inc hl
 311+ 9846 D1               pop de
 312+ 9847 7B           	ld a,e
 313+ 9848 AE           	xor (hl)
 314+ 9849 77           	ld (hl),a
 315+ 984A 2B           	dec hl
 316+ 984B 24           	inc h
 317+ 984C 7C               ld a,h
 318+ 984D E6 07            and 7
 319+ 984F 20 0A            jr nz,3F
 320+ 9851 7D               ld a,l
 321+ 9852 C6 20            add a,$20
 322+ 9854 6F               ld l,a
 323+ 9855 38 04            jr c,3F
 324+ 9857 7C               ld a,h
 325+ 9858 D6 08            sub 8
 326+ 985A 67               ld h,a
 327+ 985B 7C           3 ld a,h
 328+ 985C FE 58            cp $58
 329+ 985E 28 02            jr z,4F
 330+ 9860 10 C1            djnz 1B
 331+ 9862 ED 7B 0D 8A  4 ld sp,(Stack)
 332+ 9866 C9           	ret
 333+ 9867
 334+ 9867 ED 73 0D 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 986B FD F9        	ld sp,iy
 336+ 986D 06 08            ld b,8
 337+ 986F D1           1 pop de
 338+ 9870 7B           	ld a,e
 339+ 9871 AE           	xor (hl)
 340+ 9872 77           	ld (hl),a
 341+ 9873 24            	inc h
 342+ 9874 7C               ld a,h
 343+ 9875 E6 07            and 7
 344+ 9877 20 0A            jr nz,2F
 345+ 9879 7D               ld a,l
 346+ 987A C6 20            add a,$20
 347+ 987C 6F               ld l,a
 348+ 987D 38 04            jr c,2F
 349+ 987F 7C               ld a,h
 350+ 9880 D6 08            sub 8
 351+ 9882 67               ld h,a
 352+ 9883 7C           2 ld a,h
 353+ 9884 FE 58            cp $58
 354+ 9886 28 1C            jr z,4F
 355+ 9888 D1               pop de
 356+ 9889 7A           	ld a,d
 357+ 988A AE           	xor (hl)
 358+ 988B 77           	ld (hl),a
 359+ 988C 24           	inc h
 360+ 988D 7C               ld a,h
 361+ 988E E6 07            and 7
 362+ 9890 20 0A            jr nz,3F
 363+ 9892 7D               ld a,l
 364+ 9893 C6 20            add a,$20
 365+ 9895 6F               ld l,a
 366+ 9896 38 04            jr c,3F
 367+ 9898 7C               ld a,h
 368+ 9899 D6 08            sub 8
 369+ 989B 67               ld h,a
 370+ 989C 7C           3 ld a,h
 371+ 989D FE 58            cp $58
 372+ 989F 28 03            jr z,4F
 373+ 98A1 D1               pop de
 374+ 98A2 10 CB            djnz 1B
 375+ 98A4 ED 7B 0D 8A  4 ld sp,(Stack)
 376+ 98A8 C9           	ret
 377+ 98A9
 378+ 98A9              ; ---------------------------------------------------
 379+ 98A9              ;
 380+ 98A9              ;   27/02/23
 381+ 98A9              ;
 382+ 98A9              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98A9              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98A9              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98A9
 386+ 98A9 ED 73 0D 8A  Pinta_Disparo ld (Stack),sp
 387+ 98AD FD F9            ld sp,iy
 388+ 98AF 06 04            ld b,4
 389+ 98B1 D1           1 pop de
 390+ 98B2 7B               ld a,e
 391+ 98B3 AE               xor (hl)
 392+ 98B4 77               ld (hl),a
 393+ 98B5 23               inc hl
 394+ 98B6 7A               ld a,d
 395+ 98B7 AE               xor (hl)
 396+ 98B8 77               ld (hl),a
 397+ 98B9 2B               dec hl
 398+ 98BA
 399+ 98BA 24               inc h
 400+ 98BB 7C               ld a,h
 401+ 98BC E6 07            and 7
 402+ 98BE 20 0A            jr nz,2F
 403+ 98C0 7D               ld a,l
 404+ 98C1 C6 20            add a,$20
 405+ 98C3 6F               ld l,a
 406+ 98C4 38 04            jr c,2F
 407+ 98C6 7C               ld a,h
 408+ 98C7 D6 08            sub 8
 409+ 98C9 67               ld h,a
 410+ 98CA 7C           2 ld a,h
 411+ 98CB FE 58            cp $58
 412+ 98CD 28 02            jr z,3F
 413+ 98CF
 414+ 98CF 10 E0            djnz 1B
 415+ 98D1 ED 7B 0D 8A  3 ld sp,(Stack)
 416+ 98D5 C9               ret
 417+ 98D6
# file closed: Rutinas_de_impresion_sprites.asm
1261  98D6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98D6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98D6              ;
   3+ 98D6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98D6              ;
   5+ 98D6              ; *****************************************************************************************************************************************************************************************
   6+ 98D6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98D6
   8+ 98D6 7C           calcula_tercio ld a,h
   9+ 98D7 E6 18        	and $18
  10+ 98D9 CB 2F        	sra a
  11+ 98DB CB 2F        	sra a
  12+ 98DD CB 2F        	sra a
  13+ 98DF C9           	ret
  14+ 98E0
# file closed: calcula_tercio.asm
1262  98E0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98E0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98E0              ;
   3+ 98E0              ;
   4+ 98E0              ;	CLS.
   5+ 98E0              ;
   6+ 98E0              ;	Limpia la pantalla y define sus atributos.
   7+ 98E0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98E0              ;
   9+ 98E0              ;	COLORES: 0 ..... NEGRO
  10+ 98E0              ;    		 1 ..... AZUL
  11+ 98E0              ; 			 2 ..... ROJO
  12+ 98E0              ;			 3 ..... MAGENTA
  13+ 98E0              ; 			 4 ..... VERDE
  14+ 98E0              ; 			 5 ..... CIAN
  15+ 98E0              ;			 6 ..... AMARILLO
  16+ 98E0              ; 			 7 ..... BLANCO
  17+ 98E0              ;
  18+ 98E0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98E0              ;
  20+ 98E0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98E0
  22+ 98E0
  23+ 98E0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98E3 11 01 40     	LD DE,$4001
  25+ 98E6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98E9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98EB ED B0        	LDIR
  28+ 98ED 01 FF 02     	LD BC,767
  29+ 98F0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98F1 ED B0        	LDIR
  31+ 98F3 C9           	ret
  32+ 98F4
# file closed: Cls.asm
1263  98F4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98F4              ; ******************************************************************************************************************************************************************************************
   2+ 98F4              ;
   3+ 98F4              ;   20/05/23
   4+ 98F4              ;
   5+ 98F4              ;	Recompone_posicion_inicio
   6+ 98F4              ;
   7+ 98F4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98F4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98F4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98F4              ;	_ a una u otra rutina.
  11+ 98F4
  12+ 98F4              Recompone_posicion_inicio
  13+ 98F4
  14+ 98F4 2A CD 89     	ld hl,(Posicion_inicio)
  15+ 98F7 7D           	ld a,l
  16+ 98F8 E6 1F        	and $1f
  17+ 98FA 28 16        	jr z,1F
  18+ 98FC
  19+ 98FC FE 1F        	cp $1f
  20+ 98FE 28 0D        	jr z,3F
  21+ 9900
  22+ 9900 21 FA 89     	ld hl,Ctrl_2
  23+ 9903 CB C6        	set 0,(hl)
  24+ 9905 2A BF 89     	ld hl,(Puntero_objeto)
  25+ 9908 22 FD 89     	ld (Repone_puntero_objeto),hl
  26+ 990B 18 08        	jr 2F
  27+ 990D
  28+ 990D CD AE 9A     3 call Mov_left
  29+ 9910 18 03        	jr 2F
  30+ 9912
  31+ 9912 CD 90 99     1 call Mov_right
  32+ 9915 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9918 22 BF 89     	ld (Puntero_objeto),hl
  34+ 991B C9           	ret
  35+ 991C
  36+ 991C              ; ******************************************************************************************************************************************************************************************
  37+ 991C              ;
  38+ 991C              ;   27/05/23
  39+ 991C              ;
  40+ 991C              ;	Mov_down
  41+ 991C              ;
  42+ 991C              ; 	Mueve el Sprite X px hacia abajo.
  43+ 991C              ;
  44+ 991C              ;
  45+ 991C              Mov_down
  46+ 991C
  47+ 991C CD 7E 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 991F              ;																	; _ repone (Puntero_objeto).
  49+ 991F 21 E9 89     	ld hl,Ctrl_0
  50+ 9922 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9924              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9924              ; 																	; _ en el caso de que no lo haya.
  53+ 9924 3A D3 89     	ld a,(Vel_down)
  54+ 9927 47           	ld b,a
  55+ 9928 2A BD 89         ld hl,(Posicion_actual)
  56+ 992B CD D6 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 992E E6 02        	and 2
  58+ 9930 28 0F        	jr z,1F
  59+ 9932
  60+ 9932              ; Nos encontramos en el último tercio de pantalla.
  61+ 9932              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9932
  63+ 9932 7C           	ld a,h
  64+ 9933 FE 57        	cp $57
  65+ 9935 20 0A        	jr nz,1F
  66+ 9937 7D           	ld a,l
  67+ 9938 C6 20        	add $20
  68+ 993A 30 05        	jr nc,1F
  69+ 993C
  70+ 993C              ; ------------------------------
  71+ 993C CD 2C 9C     	call Reaparece_arriba
  72+ 993F              ;	call Reinicio
  73+ 993F              ; ------------------------------
  74+ 993F
  75+ 993F 18 08        	jr 3F
  76+ 9941 CD 16 96     1 call NextScan
  77+ 9944 22 BD 89     	ld (Posicion_actual),hl
  78+ 9947 10 E2            djnz 2B
  79+ 9949 CD 42 9C     3 call Genera_coordenadas
  80+ 994C C9           	ret
  81+ 994D
  82+ 994D              ; ******************************************************************************************************************************************************************************************
  83+ 994D              ;
  84+ 994D              ;   27/05/23
  85+ 994D              ;
  86+ 994D              ;	Mov_up
  87+ 994D              ;
  88+ 994D              ; 	Mueve el Sprite hacia arriba.
  89+ 994D              ;
  90+ 994D              ;
  91+ 994D              Mov_up
  92+ 994D
  93+ 994D CD 7E 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9950              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9950 21 E9 89     	ld hl,Ctrl_0
  96+ 9953 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9955              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9955              ; 																		; _ en el caso de que no lo haya.
  99+ 9955 3A D2 89     	ld a,(Vel_up)
 100+ 9958 47           	ld b,a
 101+ 9959 2A BD 89     	ld hl,(Posicion_actual)
 102+ 995C CD D6 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 995F A7           	and a
 104+ 9960 20 10        	jr nz,1F
 105+ 9962
 106+ 9962              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9962              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9962
 109+ 9962 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9963 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9965 20 0B            jr nz,1F
 112+ 9967 7D               ld a,l
 113+ 9968 D6 20            sub $20
 114+ 996A 30 06            jr nc,1F
 115+ 996C 25               dec h
 116+ 996D
 117+ 996D              ; -----------------------------
 118+ 996D CD 1C 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9970              ;	call Reinicio
 120+ 9970              ; -----------------------------
 121+ 9970
 122+ 9970 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9972 CD 25 96     1 call PreviousScan
 124+ 9975 22 BD 89     	ld (Posicion_actual),hl
 125+ 9978 10 E2            djnz 3B
 126+ 997A CD 42 9C     2 call Genera_coordenadas
 127+ 997D C9           	ret
 128+ 997E
 129+ 997E              ; -----------------------------
 130+ 997E              ;
 131+ 997E              ;	27/5/23
 132+ 997E              ;
 133+ 997E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 997E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 997E              ;
 136+ 997E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 997E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 997E              ;
 139+ 997E              ;	Modifica: A y (Puntero_objeto).
 140+ 997E
 141+ 997E 3A FA 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9981 CB 47        	bit 0,a
 143+ 9983 C8           	ret z
 144+ 9984 CB 87        	res 0,a
 145+ 9986 32 FA 89     	ld (Ctrl_2),a
 146+ 9989 2A FD 89     	ld hl,(Repone_puntero_objeto)
 147+ 998C 22 BF 89     	ld (Puntero_objeto),hl
 148+ 998F C9           	ret
 149+ 9990
 150+ 9990              ; ******************************************************************************************************************************************************************************************
 151+ 9990              ;
 152+ 9990              ;	19/10/22
 153+ 9990              ;
 154+ 9990              ;	Mov_right.
 155+ 9990              ;
 156+ 9990              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9990              ;
 158+ 9990
 159+ 9990 21 E9 89     Mov_right ld hl,Ctrl_0
 160+ 9993 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9995              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9995              ; 																	; _ en el caso de que no lo haya.
 163+ 9995 3A E9 89     	ld a,(Ctrl_0)
 164+ 9998 CB 77        	bit 6,a
 165+ 999A 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 999C
 167+ 999C CD CA 9B     	call Stop_Amadeus_right
 168+ 999F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 99A0 18 4D        	jr 8F
 170+ 99A2
 171+ 99A2 3A C1 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 99A5 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 99A7 20 46        	jr nz,8F
 174+ 99A9
 175+ 99A9 3A C3 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99AC A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99AD 28 40        	jr z,8F
 178+ 99AF
 179+ 99AF              ; ---------- ---------- ----------
 180+ 99AF              ;
 181+ 99AF              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99AF
 183+ 99AF 3A D1 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99B2 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99B4 28 11        	jr z,1F
 186+ 99B6 38 06        	jr c,6F
 187+ 99B8 FE 04        	cp 4
 188+ 99BA 28 14        	jr z,7F
 189+ 99BC 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99BE
 191+ 99BE              ; ---------- ---------- ----------
 192+ 99BE              ;
 193+ 99BE              ; Perfiles de velocidad
 194+ 99BE              ;
 195+ 99BE
 196+ 99BE 3A C3 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99C1 FE FE        	cp $fe
 198+ 99C3 20 2A        	jr nz,8F
 199+ 99C5 18 10        	jr 3F
 200+ 99C7 3A C3 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99CA FE FD        	cp $fd
 202+ 99CC 20 21        	jr nz,8F
 203+ 99CE 18 07        	jr 3F
 204+ 99D0 3A C3 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99D3 FE FB        	cp $fb
 206+ 99D5 20 18        	jr nz,8F
 207+ 99D7
 208+ 99D7              ; ---------- ---------- ----------
 209+ 99D7
 210+ 99D7              3
 211+ 99D7 CD 0A 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99DA              ;	call Reinicio
 213+ 99DA
 214+ 99DA              ; ---------- ---------- ----------
 215+ 99DA              ;
 216+ 99DA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99DA
 218+ 99DA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99DC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99DD CD F6 99     	call DESPLZ_DER
 221+ 99E0 C1           	pop bc
 222+ 99E1 10 F9        	djnz 5B
 223+ 99E3 2A BD 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99E6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99E7 22 BD 89     	ld (Posicion_actual),hl
 226+ 99EA CD 42 9C     	call Genera_coordenadas
 227+ 99ED 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99EF
 229+ 99EF              ; ---------- ---------- ----------
 230+ 99EF
 231+ 99EF 2A BD 89     8 ld hl,(Posicion_actual)
 232+ 99F2 CD F6 99     	call DESPLZ_DER
 233+ 99F5 C9           2 ret
 234+ 99F6
 235+ 99F6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99F6              ;
 237+ 99F6              ;	22/9/22
 238+ 99F6              ;
 239+ 99F6
 240+ 99F6 CD 05 9A     DESPLZ_DER call Desplaza_derecha
 241+ 99F9 CD 51 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99FC CD 7A 9A         call Ciclo_completo
 243+ 99FF 21 E9 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9A02 CB FE        	set 7,(hl)
 245+ 9A04 C9           	ret
 246+ 9A05
 247+ 9A05              ; ******************************************************************************************************************************************************************************************
 248+ 9A05              ;	15/02/23
 249+ 9A05              ;
 250+ 9A05
 251+ 9A05 3A D1 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9A08 47           	ld b,a
 253+ 9A09 2A C9 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A0C 23           1 inc hl
 255+ 9A0D 23           	inc hl
 256+ 9A0E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A10 22 C9 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A13 CD 24 8D     	call Extrae_address
 259+ 9A16 22 BF 89     	ld (Puntero_objeto),hl
 260+ 9A19
 261+ 9A19              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A19
 263+ 9A19              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A19              ; Cuántos movimientos hemos hecho ??
 265+ 9A19              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A19
 267+ 9A19 2A C5 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A1C EB           	ex de,hl
 269+ 9A1D A7           	and a
 270+ 9A1E ED 52        	sbc hl,de
 271+ 9A20 CB 3D        	srl l
 272+ 9A22 3E 08        6 ld a,8
 273+ 9A24 95           	sub l
 274+ 9A25 30 1E        	jr nc,3F
 275+ 9A27
 276+ 9A27              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A27              ; B="0".
 278+ 9A27
 279+ 9A27 04           4 inc b
 280+ 9A28 3C           	inc a
 281+ 9A29 20 FC        	jr nz,4B
 282+ 9A2B 78           	ld a,b
 283+ 9A2C 08           	ex af,af
 284+ 9A2D 2A C5 89     	ld hl,(Indice_Sprite_der)
 285+ 9A30 23           5 inc hl
 286+ 9A31 23           	inc hl
 287+ 9A32 10 FC        	djnz 5B
 288+ 9A34 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A37 CD 24 8D     	call Extrae_address
 290+ 9A3A 22 BF 89     	ld (Puntero_objeto),hl
 291+ 9A3D
 292+ 9A3D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A3D              ; _(Posicion_actual).
 294+ 9A3D
 295+ 9A3D 21 BD 89     	ld hl,Posicion_actual
 296+ 9A40 34           	inc (hl)
 297+ 9A41 08               ex af,af
 298+ 9A42 6F           	ld l,a
 299+ 9A43 18 DD        	jr 6B
 300+ 9A45
 301+ 9A45              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A45
 303+ 9A45 47           3 ld b,a
 304+ 9A46 2A C7 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A49 23           2 inc hl
 306+ 9A4A 23           	inc hl
 307+ 9A4B 10 FC        	djnz 2B
 308+ 9A4D 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A50 C9           8 ret
 310+ 9A51
 311+ 9A51              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A51              ;
 313+ 9A51              ;	24/7/22
 314+ 9A51              ;
 315+ 9A51              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A51              ;
 317+ 9A51              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A51              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A51              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A51
 321+ 9A51 3A C3 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A54 A7           	and a
 323+ 9A55 20 1F        	jr nz,1F
 324+ 9A57 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A59 32 C3 89         ld (CTRL_DESPLZ),a
 326+ 9A5C
 327+ 9A5C 21 BC 89     	ld hl,Columns
 328+ 9A5F 34           	inc (hl)
 329+ 9A60 3A CF 89     	ld a,(Cuad_objeto)
 330+ 9A63 E6 01        	and 1
 331+ 9A65 28 0F        	jr z,1F
 332+ 9A67 2A BD 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A6A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A6B 22 BD 89     	ld (Posicion_actual),hl
 335+ 9A6E CD 42 9C     	call Genera_coordenadas
 336+ 9A71 CD D6 9B     	call Inc_CTRL_DESPLZ
 337+ 9A74 18 03        	jr 2F
 338+ 9A76 CD D6 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A79 C9           2 ret
 340+ 9A7A
 341+ 9A7A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A7A              ;
 343+ 9A7A              ;	24/7/22
 344+ 9A7A              ;
 345+ 9A7A              ;	Ciclo_completo.
 346+ 9A7A              ;
 347+ 9A7A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A7A              ;
 349+ 9A7A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A7A              ; 	Decrementamos (Columns).
 351+ 9A7A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A7A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A7A
 354+ 9A7A
 355+ 9A7A 3A C3 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A7D FE FF        	cp $ff
 357+ 9A7F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A81 E6 F0        	and $f0
 359+ 9A83 20 28        	jr nz,3F
 360+ 9A85
 361+ 9A85              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A85
 363+ 9A85 3A C3 89     	ld a,(CTRL_DESPLZ)
 364+ 9A88 47           	ld b,a
 365+ 9A89 3E F8        	ld a,$f8
 366+ 9A8B 80           	add b
 367+ 9A8C 32 C3 89     	ld (CTRL_DESPLZ),a
 368+ 9A8F 18 1C        	jr 3F
 369+ 9A91 21 BC 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A94 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A95 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A96 32 C3 89     	ld (CTRL_DESPLZ),a
 373+ 9A99 3A CF 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A9C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A9E 20 0A        	jr nz,2F
 376+ 9AA0 2A BD 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9AA3 23           	inc hl
 378+ 9AA4 22 BD 89     	ld (Posicion_actual),hl
 379+ 9AA7 CD 42 9C     	call Genera_coordenadas
 380+ 9AAA
 381+ 9AAA              ; Inicia el puntero de Sprite.
 382+ 9AAA
 383+ 9AAA CD 3B 8D     2 call Inicia_puntero_objeto_der
 384+ 9AAD C9           3 ret
 385+ 9AAE
 386+ 9AAE              ; ******************************************************************************************************************************************************************************************
 387+ 9AAE              ;
 388+ 9AAE              ;	15/02/23
 389+ 9AAE              ;
 390+ 9AAE              ;	Mov_left.
 391+ 9AAE              ;
 392+ 9AAE              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9AAE              ;
 394+ 9AAE 21 E9 89     Mov_left ld hl,Ctrl_0
 395+ 9AB1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9AB3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9AB3              ; 																	; _ en el caso de que no lo haya.
 398+ 9AB3 3A E9 89     	ld a,(Ctrl_0)
 399+ 9AB6 CB 77        	bit 6,a
 400+ 9AB8 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9ABA
 402+ 9ABA CD D0 9B     	call Stop_Amadeus_left
 403+ 9ABD C8           	ret z
 404+ 9ABE 20 4A        	jr nz,8F
 405+ 9AC0
 406+ 9AC0 3A C1 89     11 ld a,(Coordenada_X)
 407+ 9AC3 A7           	and a
 408+ 9AC4 20 44        	jr nz,8F
 409+ 9AC6
 410+ 9AC6 3A C3 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9AC9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9ACA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9ACC
 414+ 9ACC              ; ---------- ---------- ----------
 415+ 9ACC
 416+ 9ACC 3A D0 89     	ld a,(Vel_left)
 417+ 9ACF FE 02        	cp 2
 418+ 9AD1 28 0F        	jr z,1F
 419+ 9AD3 38 04        	jr c,6F
 420+ 9AD5 FE 04        	cp 4
 421+ 9AD7 28 12        	jr z,7F
 422+ 9AD9
 423+ 9AD9              ; ---------- ---------- ----------
 424+ 9AD9
 425+ 9AD9 3A C3 89     6 ld a,(CTRL_DESPLZ)
 426+ 9ADC FE F8        	cp $f8
 427+ 9ADE 20 2A        	jr nz,8F
 428+ 9AE0 18 10        	jr 4F
 429+ 9AE2 3A C3 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AE5 FE F9        	cp $f9
 431+ 9AE7 20 21        	jr nz,8F
 432+ 9AE9 18 07        	jr 4F
 433+ 9AEB 3A C3 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AEE FE FB        	cp $fb
 435+ 9AF0 20 18        	jr nz,8F
 436+ 9AF2
 437+ 9AF2              ; ---------- ---------- ----------
 438+ 9AF2
 439+ 9AF2              4
 440+ 9AF2 CD F8 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AF5              ;	call Reinicio
 442+ 9AF5
 443+ 9AF5              ; ---------- ---------- ----------
 444+ 9AF5
 445+ 9AF5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AF7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AF8
 448+ 9AF8              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AF8              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AF8
 451+ 9AF8 CD 11 9B     	call DESPLZ_IZQ
 452+ 9AFB C1           	pop bc
 453+ 9AFC 10 F9        	djnz 5B
 454+ 9AFE 2A BD 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9B01 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9B02 22 BD 89     	ld (Posicion_actual),hl
 457+ 9B05 CD 42 9C     	call Genera_coordenadas
 458+ 9B08 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9B0A
 460+ 9B0A              ; ---------- ---------- ----------
 461+ 9B0A
 462+ 9B0A              ; Movemos, no hay recolocación.
 463+ 9B0A
 464+ 9B0A 2A BD 89     8 ld hl,(Posicion_actual)
 465+ 9B0D CD 11 9B     	call DESPLZ_IZQ
 466+ 9B10 C9           2 ret
 467+ 9B11
 468+ 9B11              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B11              ;
 470+ 9B11              ;	22/9/22
 471+ 9B11
 472+ 9B11              DESPLZ_IZQ
 473+ 9B11
 474+ 9B11 CD 20 9B     	call Desplaza_izquierda
 475+ 9B14 CD 6C 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B17 CD 94 9B     	call Ciclo_completo_2
 477+ 9B1A 21 E9 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B1D CB BE        	res 7,(hl)
 479+ 9B1F C9           	ret
 480+ 9B20
 481+ 9B20              Desplaza_izquierda
 482+ 9B20
 483+ 9B20 3A D0 89     	ld a,(Vel_left)
 484+ 9B23 47           	ld b,a
 485+ 9B24 2A CB 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B27 23           1 inc hl
 487+ 9B28 23           	inc hl
 488+ 9B29 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B2B 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B2E CD 24 8D     	call Extrae_address
 491+ 9B31 22 BF 89     	ld (Puntero_objeto),hl
 492+ 9B34
 493+ 9B34              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B34
 495+ 9B34              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B34              ; Cuántos movimientos hemos hecho ??
 497+ 9B34              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B34
 499+ 9B34 2A C7 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B37 EB           	ex de,hl
 501+ 9B38 A7           	and a
 502+ 9B39 ED 52        	sbc hl,de
 503+ 9B3B CB 3D        	srl l
 504+ 9B3D 3E 08        6 ld a,8
 505+ 9B3F 95           	sub l
 506+ 9B40 30 1E        	jr nc,3F
 507+ 9B42
 508+ 9B42              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B42              ; B="0".
 510+ 9B42
 511+ 9B42 04           4 inc b
 512+ 9B43 3C           	inc a
 513+ 9B44 20 FC        	jr nz,4B
 514+ 9B46 78           	ld a,b
 515+ 9B47 08           	ex af,af
 516+ 9B48 2A C7 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B4B 23           5 inc hl
 518+ 9B4C 23           	inc hl
 519+ 9B4D 10 FC        	djnz 5B
 520+ 9B4F 22 CB 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B52 CD 24 8D     	call Extrae_address
 522+ 9B55 22 BF 89     	ld (Puntero_objeto),hl
 523+ 9B58
 524+ 9B58              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B58              ; _(Posicion_actual).
 526+ 9B58
 527+ 9B58 21 BD 89     	ld hl,Posicion_actual
 528+ 9B5B 35           	dec (hl)
 529+ 9B5C 08           	ex af,af
 530+ 9B5D 6F           	ld l,a
 531+ 9B5E 18 DD        	jr 6B
 532+ 9B60
 533+ 9B60              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B60
 535+ 9B60 47           3 ld b,a
 536+ 9B61 2A C5 89     	ld hl,(Indice_Sprite_der)
 537+ 9B64 23           2 inc hl
 538+ 9B65 23           	inc hl
 539+ 9B66 10 FC        	djnz 2B
 540+ 9B68 22 C9 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B6B C9           8 ret
 542+ 9B6C
 543+ 9B6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B6C              ;
 545+ 9B6C              ;	modifica_parametros_1er_DESPLZ
 546+ 9B6C              ;
 547+ 9B6C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B6C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B6C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B6C
 551+ 9B6C 3A C3 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B6F A7           	and a
 553+ 9B70 20 1E        	jr nz,1F
 554+ 9B72 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B73 32 C3 89         ld (CTRL_DESPLZ),a
 556+ 9B76 21 BC 89     	ld hl,Columns
 557+ 9B79 34           	inc (hl)
 558+ 9B7A 3A CF 89     	ld a,(Cuad_objeto)
 559+ 9B7D E6 01        	and 1
 560+ 9B7F 20 0F        	jr nz,1F
 561+ 9B81 2A BD 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B84 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B85 22 BD 89     	ld (Posicion_actual),hl
 564+ 9B88 CD 42 9C     	call Genera_coordenadas
 565+ 9B8B CD E7 9B     	call Dec_CTRL_DESPLZ
 566+ 9B8E 18 03        	jr 2F
 567+ 9B90 CD E7 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B93 C9           2 ret
 569+ 9B94
 570+ 9B94              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B94
 572+ 9B94 3A C3 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B97 FE F7        	cp $f7
 574+ 9B99 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B9B 30 2C        	jr nc,3F
 576+ 9B9D
 577+ 9B9D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B9D
 579+ 9B9D 06 00        	ld b,0
 580+ 9B9F 04           4 inc b
 581+ 9BA0 3C           	inc a
 582+ 9BA1 FE F7        	cp $f7
 583+ 9BA3 20 FA        	jr nz,4B
 584+ 9BA5 3E FF        	ld a,$ff
 585+ 9BA7 90           	sub b
 586+ 9BA8 32 C3 89     	ld (CTRL_DESPLZ),a
 587+ 9BAB 18 1C        	jr 3F
 588+ 9BAD
 589+ 9BAD              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BAD
 591+ 9BAD 21 BC 89     1 ld hl,Columns
 592+ 9BB0 35           	dec (hl)
 593+ 9BB1 AF           	xor a
 594+ 9BB2 32 C3 89     	ld (CTRL_DESPLZ),a
 595+ 9BB5 3A CF 89     	ld a,(Cuad_objeto)
 596+ 9BB8 E6 01        	and 1
 597+ 9BBA 28 0A        	jr z,2F
 598+ 9BBC 2A BD 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BBF 2B           	dec hl
 600+ 9BC0 22 BD 89     	ld (Posicion_actual),hl
 601+ 9BC3 CD 42 9C     	call Genera_coordenadas
 602+ 9BC6
 603+ 9BC6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BC6
 605+ 9BC6 CD 4E 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BC9 C9           3 ret
 607+ 9BCA
 608+ 9BCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BCA              ;
 610+ 9BCA              ;	19/10/22
 611+ 9BCA              ;
 612+ 9BCA              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BCA              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BCA
 615+ 9BCA 3A C1 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BCD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BCF C9           	ret
 618+ 9BD0
 619+ 9BD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BD0              ;
 621+ 9BD0              ;	19/10/22
 622+ 9BD0              ;
 623+ 9BD0              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BD0              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BD0
 626+ 9BD0 3A C1 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BD3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BD5 C9           	ret
 629+ 9BD6
 630+ 9BD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BD6              ;
 632+ 9BD6              ;	24/7/22
 633+ 9BD6              ;
 634+ 9BD6              ;	Inc_CTRL_DESPLZ
 635+ 9BD6              ;
 636+ 9BD6              ;
 637+ 9BD6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BD6
 639+ 9BD6 21 C3 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BD9 3A D1 89     	ld a,(Vel_right)
 641+ 9BDC A7           	and a
 642+ 9BDD 28 06        	jr z,1F
 643+ 9BDF 47           	ld b,a
 644+ 9BE0 34           3 inc (hl)
 645+ 9BE1 10 FD        	djnz 3B
 646+ 9BE3 18 01        	jr 2F
 647+ 9BE5 34           1 inc (hl)
 648+ 9BE6 C9           2 ret
 649+ 9BE7
 650+ 9BE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BE7              ;
 652+ 9BE7              ;	5/2/23
 653+ 9BE7              ;
 654+ 9BE7              ;	Dec_CTRL_DESPLZ
 655+ 9BE7              ;
 656+ 9BE7              ;
 657+ 9BE7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BE7
 659+ 9BE7 21 C3 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BEA 3A D0 89     	ld a,(Vel_left)
 661+ 9BED A7           	and a
 662+ 9BEE 28 06        	jr z,1F
 663+ 9BF0 47           	ld b,a
 664+ 9BF1 35           3 dec (hl)
 665+ 9BF2 10 FD        	djnz 3B
 666+ 9BF4 18 01        	jr 2F
 667+ 9BF6 35           1 dec (hl)
 668+ 9BF7 C9           2 ret
 669+ 9BF8
 670+ 9BF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BF8
 672+ 9BF8 2A BD 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BFB 01 1F 00     	ld bc,31
 674+ 9BFE A7           	and a
 675+ 9BFF ED 4A        	adc hl,bc
 676+ 9C01 22 BD 89     	ld (Posicion_actual),hl
 677+ 9C04 21 E9 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9C07 CB C6        	set 0,(hl)
 679+ 9C09 C9           	ret
 680+ 9C0A
 681+ 9C0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9C0A
 683+ 9C0A 2A BD 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C0D 01 1F 00     	ld bc,31
 685+ 9C10 A7           	and a
 686+ 9C11 ED 42        	sbc hl,bc
 687+ 9C13 22 BD 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C16 21 E9 89     	ld hl,Ctrl_0
 689+ 9C19 CB CE        	set 1,(hl)
 690+ 9C1B C9           	ret
 691+ 9C1C
 692+ 9C1C              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C1C
 694+ 9C1C 24           Reaparece_abajo inc h
 695+ 9C1D 01 E0 17     	ld bc,$17e0
 696+ 9C20 A7           	and a
 697+ 9C21 ED 4A        	adc hl,bc
 698+ 9C23 22 BD 89     	ld (Posicion_actual),hl
 699+ 9C26 21 E9 89     	ld hl,Ctrl_0
 700+ 9C29 CB D6        	set 2,(hl)
 701+ 9C2B C9           	ret
 702+ 9C2C
 703+ 9C2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C2C
 705+ 9C2C 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C2F A7           	and a
 707+ 9C30 ED 42        	sbc hl,bc
 708+ 9C32 22 BD 89     	ld (Posicion_actual),hl
 709+ 9C35 21 E9 89     	ld hl,Ctrl_0
 710+ 9C38 CB DE        	set 3,(hl)
 711+ 9C3A C9           	ret
 712+ 9C3B
 713+ 9C3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C3B
 715+ 9C3B 2A CD 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C3E 22 BD 89     	ld (Posicion_actual),hl
 717+ 9C41 C9           	ret
# file closed: Direcciones.asm
1264  9C42              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C42              ; ------------------------------------------------------------------------
   2+ 9C42              ;
   3+ 9C42              ;	02/04/23
   4+ 9C42              ;
   5+ 9C42              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C42              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C42              ;
   8+ 9C42              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C42              ;
  10+ 9C42              ;	Modifica: A,BC y DE.
  11+ 9C42
  12+ 9C42 C5           Genera_coordenadas push bc
  13+ 9C43 E5           	push hl
  14+ 9C44 D5           	push de
  15+ 9C45
  16+ 9C45 2A BD 89     	ld hl,(Posicion_actual)
  17+ 9C48
  18+ 9C48 7D           	ld a,l
  19+ 9C49 E6 1F        	and $1f
  20+ 9C4B 32 C1 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C4E
  22+ 9C4E CD D6 98     	call calcula_tercio
  23+ 9C51 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C52
  25+ 9C52 1E 00        	ld e,0
  26+ 9C54 7D           	ld a,l
  27+ 9C55 E6 E0        	and $e0
  28+ 9C57 28 01        	jr z,1F
  29+ 9C59 04           	inc b
  30+ 9C5A
  31+ 9C5A 04           1 inc b
  32+ 9C5B 05           	dec b
  33+ 9C5C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C5E              ;														; _ , salimos.
  35+ 9C5E 1C           3 inc e
  36+ 9C5F D6 20        	sub 32
  37+ 9C61 20 FB        	jr nz,3B
  38+ 9C63 10 F5        	djnz 1B
  39+ 9C65
  40+ 9C65 7B           2 ld a,e
  41+ 9C66 32 C2 89     	ld (Coordenada_y),a
  42+ 9C69
  43+ 9C69 D1           	pop de
  44+ 9C6A E1           	pop hl
  45+ 9C6B C1           	pop bc
  46+ 9C6C
  47+ 9C6C C9           	ret
  48+ 9C6D
  49+ 9C6D              ; ------------------------------------------------------------------------
  50+ 9C6D              ;	28/05/23
  51+ 9C6D              ;
  52+ 9C6D              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C6D              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C6D              ;
  55+ 9C6D              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C6D              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C6D              ;
  58+ 9C6D              ;		DE="$120d"
  59+ 9C6D              ;
  60+ 9C6D              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C6D              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C6D              ;
  63+ 9C6D              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C6D
  65+ 9C6D              ;	Modifica: A,BC y DE.
  66+ 9C6D
  67+ 9C6D
  68+ 9C6D              Genera_coordenadas_disparo
  69+ 9C6D
  70+ 9C6D              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C6D
  72+ 9C6D 7D           	ld a,l
  73+ 9C6E E6 1F        	and $1f
  74+ 9C70 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C71 CD D6 98     	call calcula_tercio
  76+ 9C74 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C75 1E 00        	ld e,0
  78+ 9C77 7D           	ld a,l
  79+ 9C78 E6 E0        	and $e0
  80+ 9C7A 28 01        	jr z,1F
  81+ 9C7C 04           	inc b
  82+ 9C7D 1C           1 inc e
  83+ 9C7E D6 20        	sub 32
  84+ 9C80 20 FB        	jr nz,1B
  85+ 9C82 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C84 C9           	ret
  87+ 9C85
# file closed: Genera_coordenadas.asm
1265  9C85              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C85
   2+ 9C85
   3+ 9C85              ;   02/07/23
   4+ 9C85              ;
   5+ 9C85              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C85              ;
   7+ 9C85              ;   Codificación:
   8+ 9C85              ;
   9+ 9C85              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C85              ;
  11+ 9C85              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C85              ;
  13+ 9C85              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C85              ;
  15+ 9C85              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C85              ;
  17+ 9C85              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C85              ;                               ..... %01000010 Vel_up 4
  19+ 9C85              ;                                               Vel_down 2
  20+ 9C85              ;                               ..... $42
  21+ 9C85              ;
  22+ 9C85              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C85              ;
  24+ 9C85              ;                               ..... %01000010 Vel_left 4
  25+ 9C85              ;                                               Vel_right 2
  26+ 9C85              ;                               ..... $42
  27+ 9C85              ;
  28+ 9C85              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C85              ;
  30+ 9C85              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C85              ;
  32+ 9C85              ;                       % up,down,left,right, Repetición del desplazamiento, (0-15).
  33+ 9C85              ;
  34+ 9C85              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C85              ;                                     $53
  36+ 9C85              ;
  37+ 9C85              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  38+ 9C85              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  39+ 9C85              ;
  40+ 9C85              ;                       Arriba ..... $81
  41+ 9C85              ;                       Arriba - izquierda ..... $a1
  42+ 9C85              ;                       Arriba - derecha ..... $91
  43+ 9C85              ;
  44+ 9C85              ;                       Abajo ..... $41
  45+ 9C85              ;                       Abajo - izquierda ..... $61
  46+ 9C85              ;                       Abajo - derecha ..... $51
  47+ 9C85              ;
  48+ 9C85              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  49+ 9C85              ;
  50+ 9C85              ;											;	"$00" ..... Hemos finalizado la cadena de movimiento.
  51+ 9C85              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  52+ 9C85              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  53+ 9C85              ;
  54+ 9C85              ;											;	"$01 - "$fe" ..... Repetición del movimiento.
  55+ 9C85              ;											;						Nº de veces que vamos a repetir el movimiento completo.
  56+ 9C85              ;											;						En este caso, volveremos a inicializar (Puntero_mov),_
  57+ 9C85              ;							    			;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  58+ 9C85              ;
  59+ 9C85              ;											;	"$ff" ..... Bucle infinito de repetición del MOVIMIENTO.
  60+ 9C85              ;											;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  61+ 9C85              ;											;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  62+ 9C85
  63+ 9C85              ; ----- ----- ----- ----- -----
  64+ 9C85
  65+ 9C85 87 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  66+ 9C87              ;    defw Codo_abajo_derecha
  67+ 9C87
  68+ 9C87 14 11 4F 01  Bajo_decelerando db $14,$11,$4f,1
  69+ 9C8B 12 11 4F 01      db $12,$11,$4f,1
  70+ 9C8F 11 11 4F 01      db $11,$11,$4f,1
  71+ 9C93 00               db 0
  72+ 9C94
  73+ 9C94              ; ----- ----- ----- ----- -----
  74+ 9C94              ;
  75+ 9C94              ;   27/06/23
  76+ 9C94
  77+ 9C94              Movimiento
  78+ 9C94
  79+ 9C94              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  80+ 9C94
  81+ 9C94 2A EE 89         ld hl,(Puntero_mov)
  82+ 9C97 7E               ld a,(hl)
  83+ 9C98 A7               and a
  84+ 9C99 CC 4A 9D         call z, Inicializa_Puntero_indice_mov                       ; Hemos terminado de ejecutar todas las cadenas de movimiento.
  85+ 9C9C
  86+ 9C9C 3A FA 89         ld a,(Ctrl_2)
  87+ 9C9F CB 57            bit 2,a
  88+ 9CA1 20 17            jr nz, Desplazamiento_iniciado
  89+ 9CA3
  90+ 9CA3
  91+ 9CA3              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  92+ 9CA3
  93+ 9CA3              Inicia_desplazamiento.
  94+ 9CA3
  95+ 9CA3 CD 1F 9D         call Ajusta_velocidad_desplazamiento
  96+ 9CA6
  97+ 9CA6              ; Iniciamos (Repetimos_mov).
  98+ 9CA6
  99+ 9CA6 7E               ld a,(hl)
 100+ 9CA7 E6 0F            and $0f
 101+ 9CA9 32 F3 89         ld (Repetimos_desplazamiento),a
 102+ 9CAC 32 F4 89         ld (Repetimos_desplazamiento_backup),a
 103+ 9CAF
 104+ 9CAF              ; Iniciamos (Cola_de_desplazamiento).
 105+ 9CAF
 106+ 9CAF 23               inc hl
 107+ 9CB0 7E               ld a,(hl)
 108+ 9CB1 32 F5 89         ld (Cola_de_desplazamiento),a
 109+ 9CB4 2B               dec hl
 110+ 9CB5
 111+ 9CB5 21 FA 89         ld hl,Ctrl_2
 112+ 9CB8 CB D6            set 2,(hl)
 113+ 9CBA
 114+ 9CBA              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 115+ 9CBA              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 116+ 9CBA
 117+ 9CBA              Desplazamiento_iniciado
 118+ 9CBA
 119+ 9CBA CD F7 9C         call Aplica_desplazamiento
 120+ 9CBD
 121+ 9CBD 21 F3 89         ld hl,Repetimos_desplazamiento
 122+ 9CC0 35               dec (hl)
 123+ 9CC1 C0               ret nz
 124+ 9CC2
 125+ 9CC2              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 126+ 9CC2              ; Hay que volver a ejecutar este desplazamiento ???.
 127+ 9CC2
 128+ 9CC2 3A F5 89         ld a,(Cola_de_desplazamiento)
 129+ 9CC5 A7               and a
 130+ 9CC6 CC 48 9D         call z,Incrementa_Puntero_indice_mov                       ; Fin de la cadena de movimiento ???.
 131+ 9CC9
 132+ 9CC9 FE FF            cp $ff
 133+ 9CCB 28 10            jr z,Reinicia_el_movimiento                                ; Bucle infinito del desplazamiento?.
 134+ 9CCD
 135+ 9CCD FE 01            cp 1
 136+ 9CCF CC 4C 9D         call z,Siguiente_desplazamiento                            ; Pasamos al siguiente desplazamiento de movimiento?.
 137+ 9CD2
 138+ 9CD2 3D               dec a
 139+ 9CD3 32 F5 89         ld (Cola_de_desplazamiento),a
 140+ 9CD6
 141+ 9CD6 3A F4 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 142+ 9CD9 32 F3 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 143+ 9CDC              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 144+ 9CDC C9               ret
 145+ 9CDD
 146+ 9CDD              ; !!!!!!!!!!!!!!!! Voy por aquí.
 147+ 9CDD
 148+ 9CDD
 149+ 9CDD
 150+ 9CDD              Reinicia_el_movimiento
 151+ 9CDD
 152+ 9CDD CD EC 9C         call Inicia_Puntero_mov
 153+ 9CE0
 154+ 9CE0 AF               xor a
 155+ 9CE1 32 F2 89         ld (Incrementa_puntero),a
 156+ 9CE4
 157+ 9CE4 21 FA 89         ld hl,Ctrl_2
 158+ 9CE7 CB 96            res 2,(hl)
 159+ 9CE9
 160+ 9CE9 C3 94 9C         jp Movimiento
 161+ 9CEC
 162+ 9CEC
 163+ 9CEC              ; ---------- --------- --------- ---------- ----------
 164+ 9CEC              ;
 165+ 9CEC              ;   26/6/23
 166+ 9CEC              ;
 167+ 9CEC              ;   Inicia_Puntero_mov
 168+ 9CEC              ;
 169+ 9CEC              ;
 170+ 9CEC
 171+ 9CEC 2A EC 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 172+ 9CEF 5E               ld e,(hl)
 173+ 9CF0 23               inc hl
 174+ 9CF1 56               ld d,(hl)
 175+ 9CF2 EB               ex de,hl
 176+ 9CF3 22 EE 89         ld (Puntero_mov),hl
 177+ 9CF6 C9               ret
 178+ 9CF7
 179+ 9CF7              ; ---------- --------- --------- ---------- ----------
 180+ 9CF7              ;
 181+ 9CF7              ;   27/06/23
 182+ 9CF7              ;
 183+ 9CF7              ;   Aplica_movimiento.
 184+ 9CF7
 185+ 9CF7              Aplica_desplazamiento
 186+ 9CF7
 187+ 9CF7              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 188+ 9CF7
 189+ 9CF7 2A EE 89         ld hl, (Puntero_mov)
 190+ 9CFA CB 7E            bit 7,(hl)
 191+ 9CFC 28 03            jr z,1F
 192+ 9CFE CD 4D 99         call Mov_up
 193+ 9D01 2A EE 89     1 ld hl, (Puntero_mov)
 194+ 9D04 CB 76            bit 6,(hl)
 195+ 9D06 28 03            jr z,2F
 196+ 9D08 CD 1C 99         call Mov_down
 197+ 9D0B 2A EE 89     2 ld hl, (Puntero_mov)
 198+ 9D0E CB 6E            bit 5,(hl)
 199+ 9D10 28 03            jr z,3F
 200+ 9D12 CD AE 9A         call Mov_left
 201+ 9D15 2A EE 89     3 ld hl, (Puntero_mov)
 202+ 9D18 CB 66            bit 4,(hl)
 203+ 9D1A C8               ret z
 204+ 9D1B CD 90 99         call Mov_right
 205+ 9D1E C9               ret
 206+ 9D1F
 207+ 9D1F              ; ---------- --------- --------- ---------- ----------
 208+ 9D1F              ;
 209+ 9D1F              ;   26/06/23
 210+ 9D1F              ;
 211+ 9D1F              ;   Ajusta_velocidad_desplazamiento.
 212+ 9D1F
 213+ 9D1F              Ajusta_velocidad_desplazamiento
 214+ 9D1F
 215+ 9D1F              ; 1er byte de la cadena de movimiento.
 216+ 9D1F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 217+ 9D1F
 218+ 9D1F CD 3D 9D         call Extrae_nibble_alto
 219+ 9D22
 220+ 9D22 32 D2 89         ld (Vel_up),a
 221+ 9D25 79               ld a,c
 222+ 9D26 E6 0F            and $0f
 223+ 9D28 32 D3 89         ld (Vel_down),a
 224+ 9D2B
 225+ 9D2B              ; Saltamos al 2º byte de la cadena de movimiento.
 226+ 9D2B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 227+ 9D2B
 228+ 9D2B 23               inc hl
 229+ 9D2C CD 3D 9D         call Extrae_nibble_alto
 230+ 9D2F
 231+ 9D2F 32 D0 89         ld (Vel_left),a
 232+ 9D32 79               ld a,c
 233+ 9D33 E6 0F            and $0f
 234+ 9D35 32 D1 89         ld (Vel_right),a
 235+ 9D38
 236+ 9D38              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 237+ 9D38
 238+ 9D38 23               inc hl
 239+ 9D39 22 EE 89         ld (Puntero_mov),hl
 240+ 9D3C C9               ret
 241+ 9D3D
 242+ 9D3D 06 04        Extrae_nibble_alto ld b,4
 243+ 9D3F 7E               ld a,(hl)
 244+ 9D40 4F               ld c,a
 245+ 9D41 E6 F0            and $f0
 246+ 9D43 CB 3F        1 srl a
 247+ 9D45 10 FC            djnz 1B
 248+ 9D47 C9               ret
 249+ 9D48
 250+ 9D48              ; ---------- --------- --------- ---------- ----------
 251+ 9D48              ;
 252+ 9D48              ;   27/06/23
 253+ 9D48              ;
 254+ 9D48              ;   Incrementa_Puntero_indice_mov
 255+ 9D48
 256+ 9D48 18 FE        Incrementa_Puntero_indice_mov jr $
 257+ 9D4A
 258+ 9D4A              ; ---------- --------- --------- ---------- ----------
 259+ 9D4A              ;
 260+ 9D4A              ;   2/07/23
 261+ 9D4A              ;
 262+ 9D4A              ;   Inicializa_Puntero_indice_mov
 263+ 9D4A
 264+ 9D4A 18 FE        Inicializa_Puntero_indice_mov jr $
 265+ 9D4C
 266+ 9D4C
 267+ 9D4C              ; ---------- --------- --------- ---------- ----------
 268+ 9D4C              ;
 269+ 9D4C              ;   02/07/23
 270+ 9D4C              ;
 271+ 9D4C              ;   Siguiente_desplazamiento
 272+ 9D4C
 273+ 9D4C              Siguiente_desplazamiento
 274+ 9D4C
 275+ 9D4C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 276+ 9D4C
 277+ 9D4C 2A EE 89         ld hl,(Puntero_mov)
 278+ 9D4F 23               inc hl
 279+ 9D50 23               inc hl
 280+ 9D51 22 EE 89         ld (Puntero_mov),hl
 281+ 9D54
 282+ 9D54              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 283+ 9D54
 284+ 9D54 21 FA 89         ld hl,Ctrl_2
 285+ 9D57 CB 96            res 2,(hl)
 286+ 9D59
 287+ 9D59 C9               ret
# file closed: Patrones_de_mov.asm
1266  9D5A              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D5A              ; Relojes y temporizaciones.
   2+ 9D5A
   3+ 9D5A              ; ------------------------------------------------------
   4+ 9D5A              ;
   5+ 9D5A              ;	27/04/23
   6+ 9D5A              ;
   7+ 9D5A              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 9D5A              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D5A              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D5A              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D5A              ;
  12+ 9D5A              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D5A              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D5A
  15+ 9D5A              Habilita_disparos
  16+ 9D5A
  17+ 9D5A 7E           	ld a,(hl)
  18+ 9D5B A7           	and a
  19+ 9D5C C0           	ret nz
  20+ 9D5D
  21+ 9D5D EB           	ex de,hl
  22+ 9D5E
  23+ 9D5E 35           	dec (hl)
  24+ 9D5F 34           	inc (hl)
  25+ 9D60 35           	dec (hl)
  26+ 9D61 C0           	ret nz
  27+ 9D62
  28+ 9D62 2B           	dec hl
  29+ 9D63 7E           	ld a,(hl)
  30+ 9D64 23           	inc hl
  31+ 9D65 77           	ld (hl),a
  32+ 9D66
  33+ 9D66 EB           	ex de,hl
  34+ 9D67 3E 01        	ld a,1
  35+ 9D69 77           	ld (hl),a
  36+ 9D6A C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1267  9D6B              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9D6B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9D6B              ;
   3+ 9D6B              ;	3/1/23
   4+ 9D6B              ;
   5+ 9D6B              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9D6B
   7+ 9D6B              ;	ADC HL,SP	LD (addr),SP
   8+ 9D6B              ;	ADD HL,SP	LD SP,(addr)
   9+ 9D6B              ;	ADD IX,SP	LD SP,nn
  10+ 9D6B              ; 	ADD IY,SP	LD SP,HL
  11+ 9D6B              ;				LD SP,IX
  12+ 9D6B              ;	DEC SP		LD SP,IY
  13+ 9D6B
  14+ 9D6B              ;	EX (SP),HL
  15+ 9D6B              ;	EX (SP),IX
  16+ 9D6B              ;	EX (SP),IY
  17+ 9D6B
  18+ 9D6B              ;	INC SP
  19+ 9D6B
  20+ 9D6B
  21+ 9D6B                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 0D 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A FC 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 13 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 11 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 13 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 11 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 0D 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1268  7FD5
1269  7FD5              	SAVESNA "Pruebas.sna", START
1270  7FD5
1271  7FD5
1272  7FD5
1273  7FD5
# file closed: Banco_de_pruebas.asm
