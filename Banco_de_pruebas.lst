# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 74 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD D5 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD A0 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 9D 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD BA 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 9B 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 9B 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 9E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD D8 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	06/12/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63
  96+ 8A63              ; Notas de aleatoriedad.
  97+ 8A63
  98+ 8A63              ;   Bajo_decelerando+3 (1-2)                - Define lo que baja la entidad.
  99+ 8A63              ;   Derecha_y_subiendo+8 (11)               - (11) Cuando la posición de inicio es $4001
 100+ 8A63              ;   Izquierda_y_subiendo+8 (11)             - (11) Cuando la posición de inicio es $4001
 101+ 8A63
 102+ 8A63
 103+ 8A63
 104+ 8A63
 105+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 106+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 107+ 8A6B
 108+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 109+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 109+ 8A73 08 00
 110+ 8A75
 111+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 112+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 112+ 8A7D 0F FE
 113+ 8A7F
 114+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 115+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 116+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 117+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 118+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 119+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 120+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 122+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 123+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 124+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 125+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 126+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 127+ 8AB3
 128+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 129+ 8AB7 11 11 91 FD      db $11,$11,$91,253,7,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 129+ 8ABB 07 00
 130+ 8ABD
 131+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 132+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 132+ 8AC5 02 00
 133+ 8AC7
 134+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 135+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 135+ 8ACF 04 00
 136+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 137+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 137+ 8AD9 08 00
 138+ 8ADB
 139+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 140+ 8ADF 11 11 51 FD      db $11,$11,$51,253,1,0
 140+ 8AE3 01 00
 141+ 8AE5
 142+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 143+ 8AE9 11 11 51 FD      db $11,$11,$51,253,3,0
 143+ 8AED 03 00
 144+ 8AEF
 145+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 146+ 8AF3 11 11 51 FD      db $11,$11,$51,253,3,0
 146+ 8AF7 03 00
 147+ 8AF9
 148+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 149+ 8AF9
 150+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 151+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 152+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 153+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 154+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 155+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 156+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 157+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 159+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 160+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 161+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 162+ 8B29
 163+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 164+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 165+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 166+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 167+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 168+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 169+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 170+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 171+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 172+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 173+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 174+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 175+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 176+ 8B5D
 177+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 178+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,7,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 178+ 8B65 07 00
 179+ 8B67
 180+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 181+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,1,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 181+ 8B6F 01 00
 182+ 8B71
 183+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 184+ 8B75 11 11 01 FD      db $11,$11,$01,253,3,0
 184+ 8B79 03 00
 185+ 8B7B
 186+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 187+ 8B7F 11 11 02 FD      db $11,$11,$02,253,3,0
 187+ 8B83 03 00
 188+ 8B85
 189+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 190+ 8B89 11 11 61 FD      db $11,$11,$61,253,1,0
 190+ 8B8D 01 00
 191+ 8B8F
 192+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 193+ 8B93 11 11 61 FD      db $11,$11,$61,253,3,0
 193+ 8B97 03 00
 194+ 8B99
 195+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 196+ 8B9D 11 11 61 FD      db $11,$11,$61,253,3,0
 196+ 8BA1 03 00
 197+ 8BA3
 198+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 199+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 200+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 201+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 202+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 203+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 204+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 205+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 206+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 207+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 208+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 209+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 210+ 8BD3
 211+ 8BD3
 212+ 8BD3
 213+ 8BD3
 214+ 8BD3
 215+ 8BD3
 216+ 8BD3
 217+ 8BD3
 218+ 8BD3
 219+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 F0 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 14           Nivel_1 db 20									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01
  17+ 8BE1 01 01 01 01  	db 1,1,1,1,1
  17+ 8BE5 01
  18+ 8BE6 01 01 01 01  	db 1,1,1,1,1
  18+ 8BEA 01
  19+ 8BEB 01 01 01 01  	db 1,1,1,1,1
  19+ 8BEF 01
  20+ 8BF0
  21+ 8BF0 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 8BF1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  22+ 8BF5 01 02
  23+ 8BF7 02 01 01 01  	db 2,1,1,1,1,2
  23+ 8BFB 01 02
  24+ 8BFD
# file closed: Niveles.asm
 150  8BFD
 151  8BFD              ; --------------------------------------------------------------------------------
 152  8BFD              ;
 153  8BFD              ; 12/05/24
 154  8BFD              ;
 155  8BFD              ; Parámetros DRAW.
 156  8BFD              ;
 157  8BFD
 158  8BFD              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BFD
 160  8BFD 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BFE              ;															- Patrón de movimiento.
 162  8BFE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8C00
 165  8C00 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8C01              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8C01
 168  8C01              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8C01              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8C01              ; Ejemplos.
 171  8C01
 172  8C01              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8C01              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8C01              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8C01              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8C01              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8C01
 178  8C01 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8C02              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8C02              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8C02
 182  8C02 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8C04              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8C04
 185  8C04 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C06
 187  8C06              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C06
 189  8C06 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C08              ;														; _palabras que componen el "movimiento_masticado".
 191  8C08
 192  8C08              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C08
 194  8C08 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C09              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C09              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C09              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C09              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C09
 200  8C09 00           Ctrl_2 db 0
 201  8C0A              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C0A              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C0A              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C0A              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C0A              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C0A              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C0A              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C0A              ;
 209  8C0A              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C0A              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C0A              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C0A              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C0A              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C0A              ;														BIT 4, ???
 215  8C0A              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C0A
 217  8C0A 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C0B              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C0B              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C0B              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C0B              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C0B              ;
 223  8C0B              ; 														DESCRIPCIÖN:
 224  8C0B              ;
 225  8C0B              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C0B              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C0B              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C0B              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C0B              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C0B              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C0B              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C0B              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C0B              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C0B              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C0B              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C0B              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C0B              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C0B              ;
 239  8C0B              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C0B              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C0B              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C0B
 243  8C0B              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C0B
 245  8C0B 00           Filas db 0												; Filas. [DRAW]
 246  8C0C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C0D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C11
 250  8C11              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C11
 252  8C11 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C12              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C12              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C12
 256  8C12              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C12
 258  8C12              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C12              ;
 260  8C12              ;	COLORES: 0 ..... NEGRO
 261  8C12              ;    		 1 ..... AZUL
 262  8C12              ; 			 2 ..... ROJO
 263  8C12              ;			 3 ..... MAGENTA
 264  8C12              ; 			 4 ..... VERDE
 265  8C12              ; 			 5 ..... CIAN
 266  8C12              ;			 6 ..... AMARILLO
 267  8C12              ; 			 7 ..... BLANCO
 268  8C12
 269  8C12 00 00        Indice_Sprite_der defw 0
 270  8C14 00 00        Indice_Sprite_izq defw 0
 271  8C16 00 00        Puntero_DESPLZ_der defw 0
 272  8C18 00 00        Puntero_DESPLZ_izq defw 0
 273  8C1A
 274  8C1A 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C1C 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C1D 00           Columnas db 0
 277  8C1E 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C20              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C20 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C21
 281  8C21              ; variables de control general.
 282  8C21
 283  8C21 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C22
 285  8C22              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C22
 287  8C22              Perfiles_de_velocidad
 288  8C22
 289  8C22 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C23 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C24 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C25 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C26
 294  8C26              ; Contadores de 16 bits.
 295  8C26
 296  8C26 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C28 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C2A 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C2C 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C2E
 301  8C2E              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C2E
 303  8C2E 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C30 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C32 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C34              ;
 307  8C34              ;
 308  8C34 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C35              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C35              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C35 00           Incrementa_puntero_backup db 0
 312  8C36 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C37              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C37 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C38 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C39 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C3A              ;
 318  8C3A              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C3A              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C3A              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C3A              ;
 322  8C3A              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C3A              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C3A              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C3A              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C3A              ;
 327  8C3A              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C3A              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C3A              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C3A
 331  8C3A 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C3B
 333  8C3B              ;														DESCRIPCIÓN:
 334  8C3B              ;
 335  8C3B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C3B              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C3B              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C3B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C3B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C3B              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C3B
 342  8C3B              ;														BIT 3, Recarga de nueva oleada.
 343  8C3B              ;														BIT 4, Recarga de nueva oleada.
 344  8C3B              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C3B              ;														BIT 6, **** Frame completo.
 346  8C3B              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C3B
 348  8C3B 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C3D              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C3D              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C3D              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C3D
 353  8C3D              ; Gestión de ENTIDADES y CAJAS.
 354  8C3D
 355  8C3D 00 00        Puntero_store_caja defw 0
 356  8C3F 00 00        Puntero_restore_caja defw 0
 357  8C41 00 00        Indice_restore_caja defw 0
 358  8C43 00 00        Puntero_indice_master defw 0
 359  8C45
 360  8C45 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C46 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C47 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C48
 364  8C48 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C4A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C4C              ;														; _ puntero (Indice_entidades).
 367  8C4C
 368  8C4C              ;---------------------------------------------------------------------------------------------------------------
 369  8C4C              ;
 370  8C4C              ;	13/10/24
 371  8C4C              ;
 372  8C4C              ;	Álbumes.
 373  8C4C
 374  8C4C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C4E              ;														; _variable para almacenar lo posición del puntero_
 376  8C4E              ; 														; _de pila, SP.
 377  8C4E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C50              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C50
 380  8C50              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C50
 382  8C50 00 00        Album_de_pintado defw 0
 383  8C52 00 00        Album_de_borrado defw 0
 384  8C54 00 00        Album_de_pintado_Amadeus defw 0
 385  8C56 00 00        Album_de_borrado_Amadeus defw 0
 386  8C58
 387  8C58 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C5A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C5C
 390  8C5C 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C5E 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C60
 393  8C60
 394  8C60 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C62
 396  8C62 00           Num_de_bytes_album_de_disparos db 0
 397  8C63 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C64
 399  8C64 07           Numero_de_disparos_de_entidades db 7
 400  8C65
 401  8C65 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C66 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C67
 404  8C67 00 00        Techo_Scanlines_album defw 0
 405  8C69 00 00        Techo_Scanlines_album_2 defw 0
 406  8C6B 00           Switch db 0
 407  8C6C 00 00        Techo defw 0
 408  8C6E 00 00        Scanlines_album_SP defw 0
 409  8C70 00 89        India_SP defw Tabla_de_pintado
 410  8C72 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C74
 412  8C74 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C75              ;
 414  8C75              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C75              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C75              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C75              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C75              ;																Habilita el borrado/pintado de sprites.
 419  8C75              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C75              ;																_ a la baja.
 421  8C75              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C75              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C75              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C75              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C75              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C75              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C75
 428  8C75 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C76              ;
 430  8C76              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C76
 432  8C76 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C77              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C77              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C77
 436  8C77              ; Gestión de Disparos.
 437  8C77
 438  8C77 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C79 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C7B 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C7C
 442  8C7C              ;
 443  8C7C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C7C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C7C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C7C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C7C
 448  8C7C
 449  8C7C
 450  8C7C
 451  8C7C
 452  8C7C
 453  8C7C
 454  8C7C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C7E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C7E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C7E
 458  8C7E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C80              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C80 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C83              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C83 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C86              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C86
 465  8C86              ;---------------------------------------------------------------------------------------------------------------
 466  8C86
 467  8C86              ; Relojes y temporizaciones.
 468  8C86
 469  8C86 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C87 05           Clock_explosion_Amadeus db 5
 471  8C88 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C89
 473  8C89 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C8B F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C8D 00           Numero_rnd_disparos db 0
 476  8C8E
 477  8C8E 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C90 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 479  8C91 A0           CLOCK_disparos_de_entidades db $a0
 480  8C92
 481  8C92              ;---------------------------------------------------------------------------------------------------------------
 482  8C92
 483  8C92              ; Gestión de NIVELES.
 484  8C92
 485  8C92 00           Nivel db 0												; Nivel actual del juego.
 486  8C93 00 00        Puntero_indice_NIVELES defw 0
 487  8C95 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 488  8C97              ; 														; _ que definen el NIVEL.
 489  8C97
 490  8C97              ; ---------------------------------------------------------------------------------------------------------------
 491  8C97
 492  8C97              ; Temporizaciones Shield.
 493  8C97
 494  8C97 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 495  8C9B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 496  8C9D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 497  8C9E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 498  8C9F 00           Shield_3 db 0
 499  8CA0
 500  8CA0 07           Lives db 7
 501  8CA1
 502  8CA1              ; 	INICIO  *************************************************************************************************************************************************************************
 503  8CA1              ;
 504  8CA1              ;	13/11/24
 505  8CA1
 506  8CA1              START
 507  8CA1
 508  8CA1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 509  8CA4 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 510  8CA6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 511  8CA8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 512  8CAA F3           	DI
 513  8CAB
 514  8CAB              ; Limpiamos pantalla.
 515  8CAB
 516  8CAB              ;	ld a,%00000111
 517  8CAB              ;	call Cls
 518  8CAB CD AF 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 519  8CAE
 520  8CAE              INICIALIZACION
 521  8CAE
 522  8CAE 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 523  8CB0 CD 4A 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 524  8CB3 CD 33 8F     	call Extrae_numero_aleatorio_y_avanza
 525  8CB6 6F           	ld l,a
 526  8CB7 26 00        	ld h,0
 527  8CB9 22 8E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8CBC
 529  8CBC              ;	Inicia los álbumes de líneas.
 530  8CBC
 531  8CBC CD 01 91     	call Inicia_albumes_de_lineas
 532  8CBF CD 11 91     	call Inicia_albumes_de_lineas_Amadeus
 533  8CC2 CD 1E 91     	call Inicia_albumes_de_disparos
 534  8CC5
 535  8CC5              ;	Inicia 1er Nivel.
 536  8CC5
 537  8CC5 CD AC 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 538  8CC8 CD 7A 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 539  8CCB              ;														   _reponiendo entidades eliminadas.
 540  8CCB CD E0 93     	call Prepara_Cajas_de_Entidades
 541  8CCE
 542  8CCE CD 31 94     	call Inicia_Amadeus
 543  8CD1
 544  8CD1              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 545  8CD1              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 546  8CD1              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 547  8CD1 11 AE 89     	ld de,Amadeus_BOX
 548  8CD4 CD 20 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 549  8CD7 CD 74 94     	call Limpiamos_bandeja_DRAW
 550  8CDA
 551  8CDA              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 552  8CDA
 553  8CDA 06 3C        	ld b,60
 554  8CDC CD F2 9D     2 call Amadeus_a_izquierda
 555  8CDF 10 FB        	djnz 2B
 556  8CE1
 557  8CE1 CD DF 90     	call Genera_datos_de_impresion_Amadeus
 558  8CE4
 559  8CE4              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8CE4
 561  8CE4 CD 3A 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8CE7
 563  8CE7 CD BA 91     	call Inicia_Shield
 564  8CEA
 565  8CEA 2A 6E 8C     6 ld hl,(Scanlines_album_SP)
 566  8CED 22 67 8C     	ld (Techo_Scanlines_album),hl
 567  8CF0
 568  8CF0 2A 52 8C     	ld hl,(Album_de_borrado)
 569  8CF3 22 6E 8C     	ld (Scanlines_album_SP),hl
 570  8CF6
 571  8CF6 21 00 89     	ld hl,Tabla_de_pintado
 572  8CF9 22 70 8C     	ld (India_SP),hl
 573  8CFC
 574  8CFC 21 74 8C     	ld hl,Ctrl_3
 575  8CFF CB C6        	set 0,(hl) 											; Indica Frame completo.
 576  8D01 CB D6        	set 2,(hl)
 577  8D03 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 578  8D05
 579  8D05 FB           	ei 													; Ha de apuntar a $5c3a.
 580  8D06
 581  8D06 76           	halt
 582  8D07
 583  8D07              ; ------------------------------------
 584  8D07
 585  8D07              Main
 586  8D07              ;
 587  8D07              ; 07/11/24.
 588  8D07
 589  8D07              ; Gestión de disparos.
 590  8D07
 591  8D07 CD 08 8F     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 592  8D0A CD E6 9F     	call Motor_de_disparos_entidades
 593  8D0D CD 81 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 594  8D10
 595  8D10              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 596  8D10              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 597  8D10              ; Este hecho lo indica el bit2 de (Impacto2).
 598  8D10
 599  8D10 CD 22 A4     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 600  8D13
 601  8D13              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 602  8D13
 603  8D13 21 91 8C     	ld hl,CLOCK_disparos_de_entidades
 604  8D16 35           	dec (hl)
 605  8D17 CC 49 8E     	call z,Autoriza_disparo_de_entidades
 606  8D1A
 607  8D1A 2A 8E 8C     	ld hl,(Clock_next_entity)
 608  8D1D ED 4B 78 5C  	ld bc,(FRAMES)
 609  8D21 A7           	and a
 610  8D22 ED 42        	sbc hl,bc
 611  8D24 20 21        	jr nz,1F
 612  8D26
 613  8D26              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 614  8D26
 615  8D26 CD 33 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 616  8D29 CD 4A 8F     	call Define_Clock_next_entity
 617  8D2C
 618  8D2C              ; GESTIÓN DE ENTIDADES.
 619  8D2C
 620  8D2C              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 621  8D2C              ; _ (Clock_next_entity) para la siguiente entidad.
 622  8D2C
 623  8D2C              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 624  8D2C              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 625  8D2C              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 626  8D2C
 627  8D2C 21 46 8C     	ld hl,Numero_parcial_de_entidades
 628  8D2F 46           	ld b,(hl)
 629  8D30
 630  8D30 04           	inc b
 631  8D31 05           	dec b
 632  8D32
 633  8D32 F3           	di
 634  8D33 28 FE        	jr z,$													;! Nivel superado !!!!!
 635  8D35 FB           	ei
 636  8D36
 637  8D36 3A 47 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 638  8D39 B8           	cp b
 639  8D3A 28 0B        	jr z,1F
 640  8D3C 30 09        	jr nc,1F
 641  8D3E
 642  8D3E              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 643  8D3E
 644  8D3E 3C           	inc a
 645  8D3F 32 47 8C     	ld (Entidades_en_curso),a
 646  8D42
 647  8D42 21 75 8C     	ld hl,Ctrl_4
 648  8D45 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 649  8D47
 650  8D47              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 651  8D47
 652  8D47              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 653  8D47              ;	call Define_Clock_next_entity
 654  8D47
 655  8D47 3A 47 8C     1 ld a,(Entidades_en_curso)
 656  8D4A A7           	and a
 657  8D4B CA EF 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 658  8D4E 47           	ld b,a													; No hay entidades que gestionar.
 659  8D4F
 660  8D4F              ; ( Código que ejecutamos con cada entidad: ).
 661  8D4F
 662  8D4F              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 663  8D4F              ;
 664  8D4F              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 665  8D4F
 666  8D4F 21 00 89     	ld hl,Tabla_de_pintado
 667  8D52 22 70 8C     	ld (India_SP),hl
 668  8D55
 669  8D55 21 74 8C     	ld hl,Ctrl_3
 670  8D58 CB D6        	set 2,(hl)
 671  8D5A CD DD 8E     	call Change
 672  8D5D
 673  8D5D C5           2 push bc 												; Nº de entidades en curso.
 674  8D5E
 675  8D5E DD 2A 3D 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 676  8D62 CD 8B 91     	call Salta_caja_de_entidades_vacia
 677  8D65
 678  8D65              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 679  8D65
 680  8D65 DD 7E 00     	ld a,(ix+0)
 681  8D68 CB 7F        	bit 7,a
 682  8D6A 28 11        	jr z,5F
 683  8D6C
 684  8D6C              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 685  8D6C
 686  8D6C 21 75 8C     	ld hl,Ctrl_4
 687  8D6F CB 46        	bit 0,(hl)
 688  8D71 CC 9A 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 689  8D74 28 E8        	jr z,6B
 690  8D76
 691  8D76 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 692  8D78 CB BF        	res 7,a
 693  8D7A DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 694  8D7D
 695  8D7D              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 696  8D7D              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 697  8D7D
 698  8D7D 3A 7B 8C     5 ld a,(Impacto2)
 699  8D80 CB 5F        	bit 3,a
 700  8D82 C4 18 A2     	call nz,Compara_con_coordenadas_de_disparo
 701  8D85
 702  8D85              ; Existe colisión entre esta entidad y Amadeus ???
 703  8D85
 704  8D85 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 705  8D88 CB 4F        	bit 1,a
 706  8D8A C4 A5 92     	call nz,Genera_explosion
 707  8D8D 20 43        	jr nz,Gestiona_siguiente_entidad
 708  8D8F
 709  8D8F DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 710  8D92 A7           	and a
 711  8D93 28 0C        	jr z,3F
 712  8D95
 713  8D95              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D95
 715  8D95              ; 5/7/24
 716  8D95              ; Nota importante:
 717  8D95              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D95              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D95              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D95
 721  8D95 3A B2 89     	ld a,(Impacto_Amadeus)
 722  8D98 A7           	and a
 723  8D99 C4 A5 92     	call nz,Genera_explosion
 724  8D9C 20 34        	jr nz,Gestiona_siguiente_entidad
 725  8D9E
 726  8D9E              ; Falsa colisión !!!
 727  8D9E
 728  8D9E 32 01 8C     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8DA1
 730  8DA1              ; -------------------------------------------
 731  8DA1
 732  8DA1 CD 8E 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8DA4 CD B5 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8DA7 CD 7E 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 735  8DAA
 736  8DAA DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 737  8DAC DD 2A 02 8C  	ld ix,(Puntero_de_impresion)
 738  8DB0 CD 91 95     	call Genera_datos_de_impresion
 739  8DB3 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 740  8DB5
 741  8DB5 CD 97 94     	call Decrementa_Contador_de_mov_masticados
 742  8DB8
 743  8DB8              ; -------------------------------------------
 744  8DB8
 745  8DB8              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 746  8DB8
 747  8DB8 2A 02 8C     	ld hl,(Puntero_de_impresion)
 748  8DBB CD 65 95     	call Genera_coordenadas
 749  8DBE
 750  8DBE ED 4B FE 8B  	ld bc,(Coordenada_X)
 751  8DC2
 752  8DC2 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 753  8DC5 DD 70 02     	ld (ix+2),b
 754  8DC8
 755  8DC8              ; TODO: Generamos disparo ???
 756  8DC8
 757  8DC8 3A 66 8C     	ld a,(Permiso_de_disparo_Entidades)
 758  8DCB A7           	and a
 759  8DCC C4 5E 8E     	call nz,Entidad_genera_disparo_si_procede
 760  8DCF
 761  8DCF CD 9C A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 762  8DD2
 763  8DD2              Gestiona_siguiente_entidad
 764  8DD2
 765  8DD2 CD 9A 91     	call Incrementa_punteros_de_cajas
 766  8DD5
 767  8DD5 C1           	pop bc
 768  8DD6 10 85        	djnz 2B
 769  8DD8
 770  8DD8              ; Hemos gestionado todas las entidades.
 771  8DD8              ; ----- ----- -----
 772  8DD8
 773  8DD8 CD A2 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 774  8DDB CD B9 8F     	call Ordena_tabla_de_impresion
 775  8DDE CD 3A 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 776  8DE1
 777  8DE1 CD 5F 8F     	call Borra_diferencia
 778  8DE4
 779  8DE4 3A 74 8C     	ld a,(Ctrl_3)
 780  8DE7 CB 5F        	bit 3,a
 781  8DE9 20 04        	jr nz,Gestion_de_Amadeus
 782  8DEB
 783  8DEB EB           	ex de,hl
 784  8DEC 71           	ld (hl),c
 785  8DED 2C           	inc l
 786  8DEE 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 787  8DEF
 788  8DEF              ;! GESTIONA AMADEUS !!!!!!!!!!
 789  8DEF
 790  8DEF              Gestion_de_Amadeus
 791  8DEF
 792  8DEF 21 74 8C     	ld hl,Ctrl_3
 793  8DF2 CB 76        	bit 6,(hl)
 794  8DF4 28 13        	jr z,Amadeus_vivo
 795  8DF6
 796  8DF6              ; Amadeus ha sido destruido.
 797  8DF6              ; Decrementa (Temp_new_live).
 798  8DF6
 799  8DF6 21 88 8C     	ld hl,Temp_new_live
 800  8DF9 35           	dec (hl)
 801  8DFA 20 26        	jr nz,End_frame
 802  8DFC
 803  8DFC              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 804  8DFC
 805  8DFC 21 A0 8C     	ld hl,Lives
 806  8DFF 35           	dec (hl)
 807  8E00
 808  8E00              ;! Fin del juego
 809  8E00
 810  8E00 F3           	di
 811  8E01 28 FE        	jr z,$														;! GAME OVER !!!!!
 812  8E03 FB           	ei
 813  8E04
 814  8E04              ; Nueva nave.
 815  8E04
 816  8E04 CD 7B 8E     	call Reinicia_Amadeus
 817  8E07 18 19        	jr End_frame
 818  8E09
 819  8E09              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 820  8E09
 821  8E09              Amadeus_vivo
 822  8E09
 823  8E09 3A B2 89     	ld a,(Impacto_Amadeus)
 824  8E0C A7           	and a
 825  8E0D C4 15 93     	call nz, Genera_explosion_Amadeus
 826  8E10 20 10        	jr nz, End_frame
 827  8E12
 828  8E12 CD 82 92     	call Teclado
 829  8E15 21 74 8C     	ld hl,Ctrl_3
 830  8E18
 831  8E18 CB 6E        	bit 5,(hl)
 832  8E1A 28 06        	jr z,End_frame
 833  8E1C
 834  8E1C              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 835  8E1C
 836  8E1C CD F8 8E     	call Change_Amadeus
 837  8E1F CD DF 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 838  8E22
 839  8E22              End_frame
 840  8E22
 841  8E22              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 842  8E22              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 843  8E22
 844  8E22 CD 43 A1     	call Genera_datos_de_impresion_disparos_Entidades
 845  8E25 CD 07 A3     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 846  8E28 CD 5D A2     	call Calcula_bytes_pintado_disparos
 847  8E2B CD 6A A2     	call Limpia_album_de_pintado_disparos_entidades
 848  8E2E
 849  8E2E              ; ------------ ------------- --------------
 850  8E2E
 851  8E2E 2A 52 8C     	ld hl,(Album_de_borrado)
 852  8E31 22 6E 8C     	ld (Scanlines_album_SP),hl
 853  8E34
 854  8E34 21 74 8C     	ld hl,Ctrl_3
 855  8E37 CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8E39 CB 9E        	res 3,(hl)
 857  8E3B CB A6        	res 4,(hl)
 858  8E3D
 859  8E3D 21 75 8C     	ld hl,Ctrl_4
 860  8E40 CB 86        	res 0,(hl)
 861  8E42
 862  8E42 AF           	xor a
 863  8E43 D3 FE        	out ($fe),a
 864  8E45
 865  8E45 76           	halt
 866  8E46
 867  8E46 C3 07 8D     	jp Main
 868  8E49
 869  8E49              ;------------------------------------------
 870  8E49              ;
 871  8E49              ;	07/11/24
 872  8E49
 873  8E49              Autoriza_disparo_de_entidades
 874  8E49
 875  8E49 3E 01        	ld a,1
 876  8E4B 32 66 8C     	ld (Permiso_de_disparo_Entidades),a
 877  8E4E
 878  8E4E 3A 90 8C     	ld a,(Repone_CLOCK_disparos)
 879  8E51 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 880  8E53 38 02        	jr c,1F
 881  8E55
 882  8E55              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 883  8E55              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 884  8E55              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 885  8E55
 886  8E55 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 887  8E57
 888  8E57 32 90 8C     1 ld (Repone_CLOCK_disparos),a
 889  8E5A 32 91 8C     	ld (CLOCK_disparos_de_entidades),a
 890  8E5D
 891  8E5D C9           	ret
 892  8E5E
 893  8E5E              ;------------------------------------------
 894  8E5E              ;
 895  8E5E              ;	14/09/24
 896  8E5E              ;
 897  8E5E              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 898  8E5E
 899  8E5E              Entidad_genera_disparo_si_procede
 900  8E5E
 901  8E5E 2A 8B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 902  8E61 CB 06        	rlc (hl)
 903  8E63
 904  8E63 DC 93 A1     	call c,Genera_disparo_de_entidad_maldosa
 905  8E66
 906  8E66 C9           	ret
 907  8E67
 908  8E67              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 909  8E67              ;
 910  8E67              ;	30/09/24
 911  8E67
 912  8E67              Actuaiza_sp_de_disparos_de_entidades
 913  8E67
 914  8E67 2A 8B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 915  8E6A 23           	inc hl
 916  8E6B 22 8B 8C     	ld (Puntero_num_aleatorios_disparos),hl
 917  8E6E
 918  8E6E 11 FD 88     	ld de,Numeros_aleatorios+7
 919  8E71 7B           	ld a,e
 920  8E72 95           	sub l
 921  8E73 C0           	ret nz
 922  8E74
 923  8E74 21 F6 88     1 ld hl,Numeros_aleatorios
 924  8E77 22 8B 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 925  8E7A C9           	ret
 926  8E7B
 927  8E7B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 928  8E7B              ;
 929  8E7B              ;	24/07/24
 930  8E7B
 931  8E7B              Reinicia_Amadeus
 932  8E7B
 933  8E7B              ;	Reinicia posición y estado.
 934  8E7B
 935  8E7B 21 CF 50     	ld hl,$50cf
 936  8E7E 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 937  8E81 21 CC DC     	ld hl,$dccc
 938  8E84 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 939  8E87 21 3D 00     	ld hl,$003d
 940  8E8A 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 941  8E8D
 942  8E8D              ;	limpiamos el álbum de borrado.
 943  8E8D
 944  8E8D 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
 945  8E90
 946  8E90 AF           	xor a
 947  8E91 77           	ld (hl),a
 948  8E92
 949  8E92 E5           	push hl
 950  8E93 D1           	pop de
 951  8E94 13           	inc de
 952  8E95
 953  8E95 01 23 00     	ld bc,35
 954  8E98 ED B0        	ldir
 955  8E9A
 956  8E9A CD DF 90     	call Genera_datos_de_impresion_Amadeus
 957  8E9D
 958  8E9D              ;	Reinicia temporizaciones.
 959  8E9D
 960  8E9D CD BA 91     	call Inicia_Shield
 961  8EA0
 962  8EA0 3E 5A        	ld a,90
 963  8EA2 32 9D 8C     	ld (Shield),a
 964  8EA5
 965  8EA5 3E 64        	ld a,100
 966  8EA7 32 88 8C     	ld (Temp_new_live),a
 967  8EAA
 968  8EAA              ; 	Restauramos el FLAG: Amadeus vivo.
 969  8EAA
 970  8EAA 21 74 8C     	ld hl,Ctrl_3
 971  8EAD CB B6        	res 6,(hl)
 972  8EAF
 973  8EAF              ;	Fuerza la impresión de la nave en el siguiente frame.
 974  8EAF
 975  8EAF 21 74 8C      	ld hl,Ctrl_3
 976  8EB2 CB EE        	set 5,(hl)
 977  8EB4
 978  8EB4 C9           	ret
 979  8EB5
 980  8EB5              ; --------------------------------------------------------------------------------------------------------------
 981  8EB5              ;
 982  8EB5              ;	23/11/24
 983  8EB5
 984  8EB5              Ajusta_velocidad_entidad
 985  8EB5
 986  8EB5 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 987  8EB8 A7           	and a
 988  8EB9 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 989  8EBA              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 990  8EBA              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 991  8EBA
 992  8EBA
 993  8EBA              ; Incrementa (Contador_de_vueltas)x2.
 994  8EBA              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 995  8EBA
 996  8EBA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 997  8EBA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 998  8EBA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 999  8EBA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1000  8EBA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1001  8EBA
1002  8EBA
1003  8EBA CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1004  8EBC DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1005  8EBF E6 10        	and $10
1006  8EC1 C8           	ret z
1007  8EC2
1008  8EC2              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1009  8EC2
1010  8EC2 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1011  8EC5 CB 2F        	sra a
1012  8EC7 CB 2F        	sra a
1013  8EC9 DD 77 0B     	ld (ix+11),a
1014  8ECC
1015  8ECC DD 6E 07     	ld l,(ix+7)
1016  8ECF DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1017  8ED2
1018  8ED2              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1019  8ED2 23           	inc hl
1020  8ED3 23           	inc hl
1021  8ED4 23           	inc hl
1022  8ED5 23           	inc hl
1023  8ED6              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1024  8ED6
1025  8ED6 DD 75 07     	ld (ix+7),l
1026  8ED9 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1027  8EDC
1028  8EDC C9           	ret
1029  8EDD
1030  8EDD              ; --------------------------------------------------------------------------------------------------------------
1031  8EDD              ;
1032  8EDD              ;	25/08/24
1033  8EDD
1034  8EDD              Change
1035  8EDD
1036  8EDD 3A 6B 8C     	ld a,(Switch)
1037  8EE0 EE 01        	xor 1
1038  8EE2 32 6B 8C     	ld (Switch),a
1039  8EE5 2A 50 8C     	ld hl,(Album_de_pintado)
1040  8EE8 ED 5B 52 8C  	ld de,(Album_de_borrado)
1041  8EEC EB           	ex de,hl
1042  8EED 22 50 8C     	ld (Album_de_pintado),hl
1043  8EF0 22 6E 8C     	ld (Scanlines_album_SP),hl
1044  8EF3 ED 53 52 8C  	ld (Album_de_borrado),de
1045  8EF7 C9           	ret
1046  8EF8
1047  8EF8              Change_Amadeus
1048  8EF8
1049  8EF8 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1050  8EFB ED 5B 56 8C  	ld de,(Album_de_borrado_Amadeus)
1051  8EFF EB           	ex de,hl
1052  8F00 22 54 8C     	ld (Album_de_pintado_Amadeus),hl
1053  8F03 ED 53 56 8C  	ld (Album_de_borrado_Amadeus),de
1054  8F07 C9           	ret
1055  8F08
1056  8F08              Change_Disparos
1057  8F08
1058  8F08              ; Álbumes de Amadeus.
1059  8F08
1060  8F08 2A 58 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1061  8F0B ED 5B 5A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1062  8F0F EB           	ex de,hl
1063  8F10 22 58 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1064  8F13 ED 53 5A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1065  8F17 CD 52 A2     	call Limpia_album_de_pintado_disparos_Amadeus
1066  8F1A
1067  8F1A              ; Álbumes de entidades.
1068  8F1A
1069  8F1A 2A 5C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1070  8F1D ED 5B 5E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1071  8F21 EB           	ex de,hl
1072  8F22 22 5C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1073  8F25 ED 53 5E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1074  8F29 22 60 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1075  8F2C
1076  8F2C 3A 62 8C     	ld a,(Num_de_bytes_album_de_disparos)
1077  8F2F 32 63 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1078  8F32
1079  8F32 C9           	ret
1080  8F33
1081  8F33              ; ------------------------------------
1082  8F33              ;
1083  8F33              ; 1/05/24
1084  8F33
1085  8F33              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1086  8F33              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1087  8F33
1088  8F33              ;	DESTRUYE: HL,DE,A
1089  8F33              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1090  8F33
1091  8F33              ;	Variables implicadas: (RND_SP).
1092  8F33
1093  8F33              Extrae_numero_aleatorio_y_avanza
1094  8F33
1095  8F33 21 FD 88     	ld hl,Numeros_aleatorios+7
1096  8F36 EB           	ex de,hl
1097  8F37 2A 89 8C     	ld hl,(RND_SP)
1098  8F3A
1099  8F3A 7B           	ld a,e
1100  8F3B 95           	sub l
1101  8F3C 20 06        	jr nz,1F
1102  8F3E
1103  8F3E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1104  8F3E
1105  8F3E 21 F6 88     	ld hl,Numeros_aleatorios
1106  8F41 22 89 8C     	ld (RND_SP),HL
1107  8F44
1108  8F44              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1109  8F44
1110  8F44 7E           1 ld a,(hl)
1111  8F45 23           	inc hl
1112  8F46 22 89 8C     	ld (RND_SP),hl
1113  8F49 C9           	ret
1114  8F4A
1115  8F4A              ; ------------------------------------
1116  8F4A              ;
1117  8F4A              ; 1/05/24
1118  8F4A
1119  8F4A              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1120  8F4A              ; (1 a 4 segundos).
1121  8F4A              ; Actualizamos (Clock_next_entity) con A.
1122  8F4A
1123  8F4A              ;	DESTRUYE: A y B.
1124  8F4A              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1125  8F4A              ;			 Actualiza (Clock_next_entity) con A.
1126  8F4A
1127  8F4A              ;	Variables implicadas: (Clock_next_entity).
1128  8F4A
1129  8F4A              ; Notas:
1130  8F4A
1131  8F4A              ; 	$32 1 seg.
1132  8F4A              ; 	$64 2 seg.
1133  8F4A              ; 	$96 3 seg.
1134  8F4A              ; 	$c8 4 seg.
1135  8F4A              ; 	$fa 5 seg.
1136  8F4A
1137  8F4A              ; $ffff 1310,7 seg, 22 minutos.
1138  8F4A
1139  8F4A              ;	$0100  5 seg. aproximadamente.
1140  8F4A              ;	$0200 10 seg. aproximadamente.
1141  8F4A              ;	$0300 15 seg. aproximadamente.
1142  8F4A              ;	$0400 20 seg. aproximadamente.
1143  8F4A              ;	$0500 25 seg. aproximadamente.
1144  8F4A              ;	$0600 30 seg. aproximadamente.
1145  8F4A
1146  8F4A              Define_Clock_next_entity
1147  8F4A
1148  8F4A FE 34        	cp $34
1149  8F4C 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1150  8F4E
1151  8F4E              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1152  8F4E
1153  8F4E 4F           3 ld c,a
1154  8F4F 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1155  8F51 2A 78 5C     	ld hl,(FRAMES)
1156  8F54 A7           	and a
1157  8F55 ED 4A        	adc hl,bc
1158  8F57 22 8E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1159  8F5A C9           	ret
1160  8F5B
1161  8F5B 3E 34        1 ld a,$34
1162  8F5D 18 EF        	jr 3B
1163  8F5F
1164  8F5F              ; ------------------------------------
1165  8F5F              ;
1166  8F5F              ; 18/03/24
1167  8F5F
1168  8F5F              Borra_diferencia
1169  8F5F
1170  8F5F ED 4B 6E 8C  	ld bc,(Scanlines_album_SP)
1171  8F63
1172  8F63 3A 6B 8C     	ld a,(Switch)
1173  8F66 A7           	and a
1174  8F67 28 08        	jr z,2F
1175  8F69
1176  8F69 2A 69 8C     	ld hl,(Techo_Scanlines_album_2)
1177  8F6C 11 69 8C     	ld de,Techo_Scanlines_album_2
1178  8F6F 18 06        	jr 3F
1179  8F71
1180  8F71 2A 67 8C     2 ld hl,(Techo_Scanlines_album)
1181  8F74 11 67 8C     	ld de,Techo_Scanlines_album
1182  8F77
1183  8F77              ; Diferencia.
1184  8F77
1185  8F77 ED 42        3 sbc hl,bc
1186  8F79
1187  8F79 C8           	ret z
1188  8F7A D8           	ret c
1189  8F7B
1190  8F7B              ; Nuevo techo, (más bajo que el anterior).
1191  8F7B              ; Fijamos nuevo techo y borramos bytes sobrantes.
1192  8F7B
1193  8F7B EB           	ex de,hl
1194  8F7C
1195  8F7C 71           	ld (hl),c
1196  8F7D 2C           	inc l
1197  8F7E 70           	ld (hl),b
1198  8F7F
1199  8F7F AF           	xor a
1200  8F80 43           	ld b,e
1201  8F81
1202  8F81 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1203  8F84
1204  8F84 77           1 ld (hl),a
1205  8F85 23           	inc hl
1206  8F86 10 FC        	djnz 1B
1207  8F88
1208  8F88              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1209  8F88
1210  8F88 21 74 8C     	ld hl,Ctrl_3
1211  8F8B CB DE        	set 3,(hl)
1212  8F8D
1213  8F8D C9           	ret
1214  8F8E
1215  8F8E              ; --------------------------------------------------------------------------------------------------------------
1216  8F8E              ;
1217  8F8E              ;	23/11/24
1218  8F8E              ;
1219  8F8E              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1220  8F8E
1221  8F8E              Entidad_a_Tabla_de_pintado
1222  8F8E
1223  8F8E              ; Almacena la Coordenada Y de la entidad en curso.
1224  8F8E
1225  8F8E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1226  8F8E
1227  8F8E DD 7E 02     	ld a,(ix+2)
1228  8F91 2A 70 8C     	ld hl,(India_SP)
1229  8F94 77           	ld (hl),a
1230  8F95 2C           	inc l
1231  8F96
1232  8F96              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1233  8F96
1234  8F96 ED 5B 6E 8C  	ld de,(Scanlines_album_SP)
1235  8F9A
1236  8F9A 73           	ld (hl),e
1237  8F9B 2C           	inc l
1238  8F9C 72           	ld (hl),d
1239  8F9D 2C           	inc l
1240  8F9E
1241  8F9E 22 70 8C     	ld (India_SP),hl
1242  8FA1
1243  8FA1 C9           	ret
1244  8FA2
1245  8FA2              ; --------------------------------------------------------------------------------------------------------------
1246  8FA2              ;
1247  8FA2              ;	27/03/24
1248  8FA2              ;
1249  8FA2
1250  8FA2              Inicializa_India_y_limpia_Tabla_de_impresion
1251  8FA2
1252  8FA2 2A 70 8C     	ld hl,(India_SP)
1253  8FA5 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1254  8FA8
1255  8FA8 79           	ld a,c
1256  8FA9 95           	sub l
1257  8FAA 28 06        	jr z,2F
1258  8FAC 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1259  8FAD              ;														; _ y pasamos a inicializar (India_SP).
1260  8FAD AF           	xor a
1261  8FAE
1262  8FAE 77           1 ld (hl),a
1263  8FAF 2C           	inc l
1264  8FB0 10 FC        	djnz 1B												; Limpia Tabla.
1265  8FB2
1266  8FB2 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1267  8FB5 22 70 8C     	ld (India_SP),hl
1268  8FB8
1269  8FB8 C9           	ret
1270  8FB9
1271  8FB9              ; --------------------------------------------------------------------------------------------------------------
1272  8FB9              ;
1273  8FB9              ;	31/3/24
1274  8FB9
1275  8FB9              Ordena_tabla_de_impresion
1276  8FB9
1277  8FB9              ; 5794 T/states.
1278  8FB9              ; 6278 T/states.
1279  8FB9              ; 5310 T/states.
1280  8FB9
1281  8FB9              ; Inicializamos punteros (India_SP) e (India_2_SP).
1282  8FB9              ; Inicializamos contador de comparaciones, [C].
1283  8FB9              ; Cargamos los registros A y B para efectuar comparación.
1284  8FB9
1285  8FB9 FD 2E 00     	ld iyl,0
1286  8FBC
1287  8FBC 3A 47 8C     	ld a,(Entidades_en_curso)
1288  8FBF FE 04        	cp 4 	;	4
1289  8FC1 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1290  8FC2
1291  8FC2 3D           	dec a
1292  8FC3 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1293  8FC4 51           	ld d,c 										; Copia de respaldo.
1294  8FC5
1295  8FC5 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1296  8FC6
1297  8FC6 21 03 89     	ld hl,Tabla_de_pintado+3
1298  8FC9 46           	ld b,(hl)
1299  8FCA 22 72 8C     	ld (India_2_SP),hl
1300  8FCD
1301  8FCD B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1302  8FCE DC F6 8F     	call c, Avanza_India_2_SP
1303  8FD1 CC F6 8F     	call z, Avanza_India_2_SP
1304  8FD4
1305  8FD4 FD 2D        	dec iyl
1306  8FD6 28 18        	jr z,2F
1307  8FD8
1308  8FD8
1309  8FD8              ; --------------------------------------------------------------------------------------------------------------
1310  8FD8              ;
1311  8FD8              ;	7/4/24
1312  8FD8
1313  8FD8              Trueque
1314  8FD8
1315  8FD8              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1316  8FD8              ;  			A contiene en nº de fila de (India_SP).
1317  8FD8              ;			HL contiene (India_2_SP).
1318  8FD8
1319  8FD8 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1320  8FD9 E5           	push hl										; Preservo (India_2_SP).
1321  8FDA
1322  8FDA ED 5B 70 8C  	ld de,(India_SP)
1323  8FDE EB           	ex de,hl
1324  8FDF 70           	ld (hl),b
1325  8FE0 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1326  8FE1
1327  8FE1 CD 22 90     	call Intercambia_1_byte
1328  8FE4 CD 22 90     	call Intercambia_1_byte
1329  8FE7
1330  8FE7
1331  8FE7              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1332  8FE7              ; Recuperamos (India_2_SP) en HL.
1333  8FE7
1334  8FE7 2A 70 8C     	ld hl,(India_SP)
1335  8FEA 7E           	ld a,(hl)
1336  8FEB
1337  8FEB E1           	pop hl
1338  8FEC D1           	pop de
1339  8FED
1340  8FED              ; --------------------------------------------------------------------------------------------------------------
1341  8FED
1342  8FED CD F6 8F     	call Avanza_India_2_SP
1343  8FF0
1344  8FF0 14           2 inc d
1345  8FF1 15           	dec d
1346  8FF2 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1347  8FF3 18 D8        	jr 1B
1348  8FF5
1349  8FF5 C9           	ret
1350  8FF6
1351  8FF6              ; ----- ----- ----- ----- -----
1352  8FF6
1353  8FF6              Avanza_India_2_SP
1354  8FF6
1355  8FF6 0D           	dec c
1356  8FF7 28 0A        	jr z,Avanza_punteros_indios
1357  8FF9
1358  8FF9 FD 2C        	inc iyl
1359  8FFB
1360  8FFB 2C           	inc l
1361  8FFC 2C           	inc l
1362  8FFD 2C           	inc l
1363  8FFE
1364  8FFE 46           	ld b,(hl)
1365  8FFF 22 72 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1366  9002
1367  9002 C9           	ret
1368  9003
1369  9003              ; ----- ----- ----- ----- -----
1370  9003
1371  9003              Avanza_punteros_indios
1372  9003
1373  9003 15           	dec d
1374  9004 28 15        	jr z,Prepara_salida
1375  9006
1376  9006 4A           	ld c,d
1377  9007
1378  9007 2A 70 8C     	ld hl,(India_SP)
1379  900A 2C           	inc l
1380  900B 2C           	inc l
1381  900C 2C           	inc l
1382  900D 7E           	ld a,(hl)
1383  900E 22 70 8C     	ld (India_SP),hl
1384  9011
1385  9011 2C           	inc l
1386  9012 2C           	inc l
1387  9013 2C           	inc l
1388  9014 46           	ld b,(hl)
1389  9015 22 72 8C     	ld (India_2_SP),hl
1390  9018
1391  9018 FD 2C        	inc iyl
1392  901A
1393  901A C9           	ret
1394  901B
1395  901B              Prepara_salida
1396  901B
1397  901B 21 00 89     	ld hl,Tabla_de_pintado
1398  901E 22 70 8C     	ld (India_SP),hl
1399  9021 C9           	ret
1400  9022
1401  9022
1402  9022 2C           Intercambia_1_byte inc l
1403  9023 1C           	inc e
1404  9024 46           	ld b,(hl)
1405  9025 1A           	ld a,(de)
1406  9026 EB           	ex de,hl
1407  9027 70           	ld (hl),b
1408  9028 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1409  9029 C9           	ret
1410  902A
1411  902A              ; -----------------------------------------------------------------------------------
1412  902A              ;
1413  902A              ;	20/01/24
1414  902A              ;
1415  902A              ;
1416  902A
1417  902A              Construye_movimientos_masticados_entidad
1418  902A
1419  902A 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1420  902D E5           	push hl
1421  902E CD 71 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1422  9031              ;															; _ el (Contador_de_mov_masticados).
1423  9031 CD 56 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1424  9034              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1425  9034 CD 78 9A     	call Recompone_posicion_inicio
1426  9037
1427  9037 CD A8 97     1 call Draw
1428  903A CD 56 90     	call Guarda_movimiento_masticado
1429  903D
1430  903D CD 25 9E     	call Movimiento
1431  9040
1432  9040 3A 74 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1433  9043 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1434  9045 28 F0        	jr z,1B
1435  9047
1436  9047              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1437  9047              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1438  9047
1439  9047 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1440  9048 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1441  904B
1442  904B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1443  904B
1444  904B CD 89 9F     	call Situa_en_contador_general_de_mov_masticados
1445  904E
1446  904E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1447  904E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1448  904E
1449  904E ED 4B 06 8C  	ld bc,(Contador_de_mov_masticados)
1450  9052
1451  9052 71           	ld (hl),c
1452  9053 23           	inc hl
1453  9054 70           	ld (hl),b
1454  9055
1455  9055 C9           	ret
1456  9056
1457  9056              ; -----------------------------------------------------------------------------------
1458  9056              ;
1459  9056              ;	28/12/23
1460  9056              ;
1461  9056              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1462  9056              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1463  9056
1464  9056              Guarda_movimiento_masticado
1465  9056
1466  9056 ED 73 4C 8C  	ld (Stack),sp
1467  905A ED 7B 04 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1468  905E
1469  905E DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1470  9060 FD E5            push iy 												; Pushea Puntero_objeto.
1471  9062
1472  9062 ED 7B 4C 8C      ld sp,(Stack)
1473  9066
1474  9066 2A 06 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1475  9069 23           	inc hl
1476  906A 22 06 8C     	ld (Contador_de_mov_masticados),hl
1477  906D
1478  906D CD 71 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1479  9070              ;															; _ el (Contador_de_mov_masticados).
1480  9070 C9               ret
1481  9071
1482  9071              ; --------------------------------------------------------------------------------------------------------------
1483  9071              ;
1484  9071              ;	12/1/24
1485  9071              ;
1486  9071              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1487  9071
1488  9071              Actualiza_Puntero_de_almacen_de_mov_masticados
1489  9071
1490  9071 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1491  9074 01 04 00     	ld bc,4
1492  9077 A7           	and a
1493  9078 ED 4A        	adc hl,bc
1494  907A 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1495  907D C9           	ret
1496  907E
1497  907E              ; ------------------------------------------
1498  907E              ;
1499  907E              ;	23/11/24
1500  907E              ;
1501  907E              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1502  907E
1503  907E
1504  907E              Obtenemos_puntero_de_impresion
1505  907E
1506  907E DD 6E 07     	ld l,(ix+7)
1507  9081 DD 66 08     	ld h,(ix+8)
1508  9084
1509  9084              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1510  9084
1511  9084 ED 73 4C 8C  	ld (Stack),sp
1512  9088 F9           	ld sp,hl
1513  9089
1514  9089 AF           	xor a
1515  908A 67           	ld h,a
1516  908B 6C           	ld l,h															; ld hl,"0"
1517  908C
1518  908C D1           	pop de															; (Puntero_objeto) en DE.
1519  908D C1           	pop bc
1520  908E
1521  908E              ; 	Almacena (Puntero_de_impresion) en caja.
1522  908E
1523  908E DD 71 05     	ld (ix+5),c
1524  9091 DD 70 06     	ld (ix+6),b
1525  9094
1526  9094 ED 43 02 8C  	ld (Puntero_de_impresion),bc
1527  9098
1528  9098              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1529  9098
1530  9098 39           	add hl,sp
1531  9099 DD 75 07     	ld (ix+7),l
1532  909C DD 74 08     	ld (ix+8),h
1533  909F
1534  909F C1           	pop bc
1535  90A0
1536  90A0 79           	ld a,c
1537  90A1 80           	add b															; Comprueba si ya no hay datos en el almacén.
1538  90A2
1539  90A2 ED 7B 4C 8C  	ld sp,(Stack)
1540  90A6
1541  90A6 CC A5 94     	call z,Reinicia_entidad_maliciosa
1542  90A9
1543  90A9 C9           	ret
1544  90AA
1545  90AA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1546  90AA              ;
1547  90AA              ;	25/11/24
1548  90AA
1549  90AA              Cargamos_registros_con_explosion
1550  90AA
1551  90AA DD 6E 07     	ld l,(ix+7)
1552  90AD DD 66 08     	ld h,(ix+8)
1553  90B0 CD 50 91     	call Extrae_address
1554  90B3 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1555  90B4
1556  90B4 DD 6E 05     	ld l,(ix+5)
1557  90B7 DD 66 06     	ld h,(ix+6)
1558  90BA
1559  90BA E5           	push hl
1560  90BB DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1561  90BD
1562  90BD C9           	ret
1563  90BE
1564  90BE
1565  90BE              Cargamos_registros_con_explosion_Amadeus
1566  90BE
1567  90BE 2A B5 89     	ld hl,(Pamm_Amadeus)
1568  90C1 CD 50 91     	call Extrae_address
1569  90C4
1570  90C4 5D           	ld e,l
1571  90C5 54           	ld d,h
1572  90C6
1573  90C6 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1574  90CA
1575  90CA C9           	ret
1576  90CB
1577  90CB              ; --------------------------------------------------------------------------------------------------------------
1578  90CB              ;
1579  90CB              ;	17/06/24
1580  90CB              ;
1581  90CB              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1582  90CB              ;
1583  90CB              ;	IX contiene el puntero de impresión.
1584  90CB              ;	DE contiene (Puntero_objeto).
1585  90CB
1586  90CB
1587  90CB              Cargamos_registros_con_mov_masticado_Amadeus
1588  90CB
1589  90CB ED 73 4C 8C  	ld (Stack),sp
1590  90CF ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1591  90D3 D1           	pop de 															; DE contiene Puntero_objeto
1592  90D4 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1593  90D6 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1594  90DA ED 7B 4C 8C  	ld sp,(Stack)
1595  90DE C9           	ret
1596  90DF
1597  90DF              ; ---------------------------------------------------------------------------------------------------------------------
1598  90DF              ;
1599  90DF              ;	18/6/24
1600  90DF              ;
1601  90DF              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1602  90DF
1603  90DF              Genera_datos_de_impresion_Amadeus
1604  90DF
1605  90DF 3A B2 89     	ld a,(Impacto_Amadeus)
1606  90E2 A7           	and a
1607  90E3 20 03        	jr nz,1F
1608  90E5
1609  90E5              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1610  90E5              ; _apuntando a la correspondiente explosión.
1611  90E5
1612  90E5 CD CB 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1613  90E8
1614  90E8 DD 7D        1 ld a,ixl
1615  90EA E6 1F        	and $1f
1616  90EC 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1617  90EF
1618  90EF 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1619  90F2 E5           	push hl
1620  90F3
1621  90F3 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1622  90F6 22 6E 8C     	ld (Scanlines_album_SP),hl
1623  90F9
1624  90F9 CD 91 95     	call Genera_datos_de_impresion
1625  90FC
1626  90FC E1           	pop hl
1627  90FD 22 6E 8C     	ld (Scanlines_album_SP),hl
1628  9100
1629  9100 C9           	ret
1630  9101
1631  9101              ; ---------------------------------------------------------------------------------------------------------------------
1632  9101              ;
1633  9101              ;	13/03/24
1634  9101              ;
1635  9101              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1636  9101
1637  9101              Inicia_albumes_de_lineas
1638  9101
1639  9101 21 00 80     	ld hl,Scanlines_album
1640  9104 22 50 8C     	ld (Album_de_pintado),hl
1641  9107 22 6E 8C     	ld (Scanlines_album_SP),hl
1642  910A
1643  910A 21 1A 81     	ld hl,Scanlines_album_2
1644  910D 22 52 8C     	ld (Album_de_borrado),hl
1645  9110
1646  9110 C9           	ret
1647  9111
1648  9111              Inicia_albumes_de_lineas_Amadeus
1649  9111
1650  9111 21 34 82     	ld hl,Amadeus_scanlines_album
1651  9114 22 54 8C     	ld (Album_de_pintado_Amadeus),hl
1652  9117 21 58 82     	ld hl,Amadeus_scanlines_album_2
1653  911A 22 56 8C     	ld (Album_de_borrado_Amadeus),hl
1654  911D
1655  911D C9           	ret
1656  911E
1657  911E              Inicia_albumes_de_disparos
1658  911E
1659  911E 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1660  9121 22 58 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1661  9124 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1662  9127 22 5A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1663  912A
1664  912A 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1665  912D 22 5C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1666  9130 22 60 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1667  9133
1668  9133 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1669  9136 22 5E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1670  9139
1671  9139 C9           	ret
1672  913A
1673  913A              ; ---------------------------------------------------------------------------------------------------------------------
1674  913A              ;
1675  913A              ; 8/1/23
1676  913A              ;
1677  913A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1678  913A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1679  913A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1680  913A
1681  913A              ; Destruye HL y DE !!!!!
1682  913A
1683  913A              Inicia_punteros_de_cajas
1684  913A
1685  913A 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1686  913D CD 50 91         call Extrae_address
1687  9140 22 3D 8C         ld (Puntero_store_caja),hl
1688  9143 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1689  9146 22 41 8C     	ld (Indice_restore_caja),hl
1690  9149 CD 50 91     	call Extrae_address
1691  914C 22 3F 8C     	ld (Puntero_restore_caja),hl
1692  914F C9               ret
1693  9150
1694  9150              ; *************************************************************************************************************************************************************
1695  9150
1696  9150              ;
1697  9150              ; 20/10/22
1698  9150              ;
1699  9150              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1700  9150              ;
1701  9150              ; Destruye el puntero y DE !!!!!
1702  9150
1703  9150 5E           Extrae_address ld e,(hl)
1704  9151 23           	inc hl
1705  9152 56           	ld d,(hl)
1706  9153 2B           	dec hl
1707  9154 EB           	ex de,hl
1708  9155 C9           	ret
1709  9156
1710  9156              ; *************************************************************************************************************************************************************
1711  9156              ;
1712  9156              ;	20/1/24
1713  9156              ;
1714  9156              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1715  9156              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1716  9156              ;
1717  9156              ;   Destruye HL y BC !!!!!,
1718  9156              ;
1719  9156              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1720  9156              ;					"0" ..... Izquierda.
1721  9156
1722  9156              Inicia_Puntero_objeto
1723  9156
1724  9156 3A 1C 8C     	ld a,(Cuad_objeto)
1725  9159 E6 01        	and 1
1726  915B F5           	push af
1727  915C CC 78 91     	call z,Inicia_puntero_objeto_izq
1728  915F F1           	pop af
1729  9160 C8           	ret z
1730  9161 CD 65 91     	call Inicia_puntero_objeto_der
1731  9164 C9           	ret
1732  9165
1733  9165              ; Arrancamos desde la parte izquierda de la pantalla.
1734  9165              ; Iniciamos (Indice_Sprite_der).
1735  9165
1736  9165 2A 12 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1737  9168 22 16 8C     	ld (Puntero_DESPLZ_der),hl
1738  916B CD 50 91     	call Extrae_address
1739  916E 22 0F 8C     	ld (Puntero_objeto),hl
1740  9171
1741  9171 2A 14 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1742  9174 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
1743  9177 C9           	ret
1744  9178
1745  9178              ; Arrancamos desde la parte derecha de la pantalla.
1746  9178              ; Iniciamos (Indice_Sprite_izq).
1747  9178
1748  9178 2A 14 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1749  917B 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
1750  917E CD 50 91     	call Extrae_address
1751  9181 22 0F 8C     	ld (Puntero_objeto),hl
1752  9184
1753  9184 2A 12 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1754  9187 22 16 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1755  918A C9           	ret
1756  918B
1757  918B              ; **************************************************************************************************
1758  918B              ;
1759  918B              ;	27/11/24
1760  918B              ;
1761  918B              ;	INPUT: IX contiene (Puntero_store_caja).
1762  918B              ;
1763  918B              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1764  918B
1765  918B              Salta_caja_de_entidades_vacia
1766  918B
1767  918B DD 7E 00     	ld a,(ix+0)
1768  918E A7           	and a
1769  918F C0           	ret nz
1770  9190
1771  9190 CD 9A 91     	call Incrementa_punteros_de_cajas
1772  9193 DD 2A 3D 8C  	ld ix,(Puntero_store_caja)
1773  9197 18 F2        	jr Salta_caja_de_entidades_vacia
1774  9199
1775  9199 C9           	ret
1776  919A
1777  919A              ; **************************************************************************************************
1778  919A              ;
1779  919A              ;	08/05/23
1780  919A              ;
1781  919A              ;	Incrementamos los dos punteros de entidades. (+1).
1782  919A
1783  919A              Incrementa_punteros_de_cajas
1784  919A
1785  919A 2A 3F 8C     	ld hl,(Puntero_restore_caja)
1786  919D 22 3D 8C     	ld (Puntero_store_caja),hl
1787  91A0 2A 41 8C     	ld hl,(Indice_restore_caja)
1788  91A3 23           	inc hl
1789  91A4 23           	inc hl
1790  91A5 22 41 8C     	ld (Indice_restore_caja),hl
1791  91A8 CD 50 91         call Extrae_address
1792  91AB 22 3F 8C         ld (Puntero_restore_caja),hl
1793  91AE C9               ret
1794  91AF
1795  91AF              ; -----------------------------------------------------------
1796  91AF
1797  91AF              ; Teclado.
1798  91AF
1799  91AF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1800  91B1 DB FE        	in a,($fe)
1801  91B3 E6 01        	and $01
1802  91B5 28 02        	jr z,1f
1803  91B7 18 F6        	jr Pulsa_ENTER
1804  91B9 C9           1 ret
1805  91BA
1806  91BA              ; **************************************************************************************************
1807  91BA              ;
1808  91BA              ; Temporización.
1809  91BA
1810  91BA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1811  91BA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1812  91BA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1813  91BA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1814  91BA
1815  91BA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1816  91BA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1817  91BA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1818  91BA
1819  91BA              ; A partir de $4f61 no hace falta DELAY.
1820  91BA
1821  91BA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1822  91BA
1823  91BA              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1824  91BA              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1825  91BA              ;	LD A,B
1826  91BA              ;	AND A
1827  91BA              ;	JR NZ,wait
1828  91BA              ;	RET
1829  91BA
1830  91BA              ; ---------------------------------------------------------------------------------------------------------------
1831  91BA              ;
1832  91BA              ;	13/07/24
1833  91BA              ;
1834  91BA
1835  91BA              Inicia_Shield
1836  91BA
1837  91BA 21 97 8C     	ld hl,Datos_Shield
1838  91BD 22 9B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1839  91C0
1840  91C0 7E           	ld a,(hl)
1841  91C1 32 9E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1842  91C4
1843  91C4 3E 01        	ld a,1
1844  91C6 32 9F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1845  91C9
1846  91C9 C9           	ret
1847  91CA
1848  91CA              ; ---------- ---------- ---------- ---------- ----------
1849  91CA              ;
1850  91CA              ;	30/11/24
1851  91CA              ;
1852  91CA              ;	Limpia la caja de entidades de una entidad eliminada.
1853  91CA              ;
1854  91CA              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1855  91CA              ;	MODIFY: A,BC,DE y HL.
1856  91CA
1857  91CA              Limpia_caja_de_entidades
1858  91CA
1859  91CA DD E5        	push ix
1860  91CC E1           	pop hl
1861  91CD AF           	xor a
1862  91CE 77           	ld (hl),a
1863  91CF 5D           	ld e,l
1864  91D0 54           	ld d,h
1865  91D1 1C           	inc e
1866  91D2 01 0B 00     	ld bc,11
1867  91D5 ED B0        	ldir
1868  91D7 C9           	ret
1869  91D8
1870  91D8              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1871  91D8              ;
1872  91D8              ;	4/6/24
1873  91D8              ;
1874  91D8              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1875  91D8              ;
1876  91D8              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1877  91D8              ;
1878  91D8
1879  91D8              Actualiza_pantalla
1880  91D8
1881  91D8 3E 02        	ld a,2
1882  91DA D3 FE        	out ($fe),a
1883  91DC
1884  91DC 3A 74 8C     	ld a,(Ctrl_3)
1885  91DF CB 57        	bit 2,a
1886  91E1 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1887  91E3
1888  91E3              Borrando_entidades
1889  91E3
1890  91E3 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1891  91E6 CD 50 91     	call Extrae_address
1892  91E9 24           	inc h
1893  91EA 25           	dec h
1894  91EB 28 05        	jr z,Pintando_entidades
1895  91ED CD 85 96     	call Pinta_Sprites
1896  91F0 18 F1        	jr Borrando_entidades
1897  91F2
1898  91F2              Pintando_entidades
1899  91F2
1900  91F2 2A 70 8C     	ld hl,(India_SP)
1901  91F5 2C           	inc l
1902  91F6 CD 50 91     	call Extrae_address
1903  91F9 24           	inc h
1904  91FA 25           	dec h
1905  91FB 28 0E        	jr z,Ejecuta_escudo
1906  91FD 1C           	inc e
1907  91FE 1C           	inc e
1908  91FF ED 53 70 8C  	ld (India_SP),de
1909  9203 CD 50 91     	call Extrae_address
1910  9206 CD 85 96     	call Pinta_Sprites
1911  9209 18 E7        	jr Pintando_entidades
1912  920B
1913  920B              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1914  920B
1915  920B              Ejecuta_escudo
1916  920B
1917  920B 3A 9D 8C     	ld a,(Shield)
1918  920E A7           	and a
1919  920F 20 2F        	jr nz,Aplica_Shield
1920  9211
1921  9211              Borrando_Amadeus
1922  9211
1923  9211 21 74 8C     	ld hl,Ctrl_3
1924  9214 CB 6E        	bit 5,(hl)
1925  9216 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1926  9218
1927  9218 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
1928  921B CD 50 91     	call Extrae_address
1929  921E 24           	inc h
1930  921F 25           	dec h
1931  9220 28 03        	jr z,Pintando_Amadeus
1932  9222 CD 85 96     	call Pinta_Sprites
1933  9225
1934  9225              Pintando_Amadeus
1935  9225
1936  9225 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1937  9228 CD 50 91     	call Extrae_address
1938  922B 24           	inc h
1939  922C 25           	dec h
1940  922D 28 03        	jr z,1F
1941  922F CD 85 96     	call Pinta_Sprites
1942  9232
1943  9232              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1944  9232
1945  9232 21 74 8C     1 ld hl,Ctrl_3
1946  9235 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1947  9237 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1948  9239 CB AE        	res 5,(hl)
1949  923B
1950  923B 3E 01        	ld a,1												; Borde azul.
1951  923D D3 FE        	out ($fe),a
1952  923F
1953  923F C9           	ret
1954  9240
1955  9240              Aplica_Shield
1956  9240
1957  9240              ;	Bit 1 "1" (Shield_3) Sólo borra.
1958  9240              ;		  "0"     ""     Borra/Pinta.
1959  9240              ;	Bit 2    ""  RET.	 No borra, no pinta.
1960  9240
1961  9240 21 9F 8C     	ld hl,Shield_3
1962  9243
1963  9243 CB 5E        	bit 3,(hl)
1964  9245 20 DE        	jr nz,Pintando_Amadeus
1965  9247
1966  9247 CB 56        	bit 2,(hl)
1967  9249 20 E7        	jr nz,1B
1968  924B
1969  924B CB 4E        	bit 1,(hl)
1970  924D C4 54 92     	call nz,Borra_Amadeus_shield
1971  9250
1972  9250 28 BF        	jr z,Borrando_Amadeus
1973  9252 18 DE        	jr 1B
1974  9254
1975  9254              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1976  9254
1977  9254              Borra_Amadeus_shield
1978  9254
1979  9254 3A 74 8C     	ld a,(Ctrl_3)
1980  9257 CB 6F        	bit 5,a
1981  9259 28 08        	jr z,1F
1982  925B
1983  925B 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
1984  925E CD 50 91     	call Extrae_address
1985  9261 18 06        	jr 2F
1986  9263
1987  9263 2A 54 8C     1 ld hl,(Album_de_pintado_Amadeus)
1988  9266 CD 50 91     	call Extrae_address
1989  9269
1990  9269 CD 85 96     2 call Pinta_Sprites
1991  926C
1992  926C AF           	xor a
1993  926D 3C           	inc a											; Asegura NZ en la salida de la rutina.
1994  926E
1995  926E C9           	ret
1996  926F
1997  926F              Pinta_Amadeus_shield
1998  926F
1999  926F 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
2000  9272 CD 50 91     	call Extrae_address
2001  9275 CD 85 96     	call Pinta_Sprites
2002  9278
2003  9278 AF           	xor a
2004  9279 3C           	inc a											; Asegura NZ en la salida de la rutina.
2005  927A
2006  927A C9           	ret
2007  927B
2008  927B              Borra_Pinta_Amadeus_shield
2009  927B
2010  927B CD 54 92     	call Borra_Amadeus_shield
2011  927E CD 6F 92     	call Pinta_Amadeus_shield
2012  9281 C9           	ret
2013  9282
2014  9282              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2015  9282              ;
2016  9282              ;	19/6/24
2017  9282              ;
2018  9282
2019  9282              Teclado
2020  9282
2021  9282              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2022  9282
2023  9282 3E F7        	ld a,$f7												; "5" para disparar.
2024  9284 DB FE        	in a,($fe)
2025  9286 E6 10        	and $10
2026  9288
2027  9288 CC 26 A3     	call z,Genera_disparo_Amadeus
2028  928B
2029  928B 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2030  928D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2031  928F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2032  9291 CC F2 9D         call z,Amadeus_a_izquierda
2033  9294
2034  9294 3E F7        	ld a,$f7
2035  9296 DB FE        	in a,($fe)
2036  9298 E6 01        	and $01
2037  929A C8           	ret z
2038  929B
2039  929B 3E F7        	ld a,$f7
2040  929D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2041  929F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2042  92A1 CC 0A 9E     	call z,Amadeus_a_derecha
2043  92A4
2044  92A4 C9           	ret
2045  92A5
2046  92A5              ; ------------------------------------------------------------------------------------------------------------------------
2047  92A5              ;
2048  92A5              ;	06/07/24
2049  92A5              ;
2050  92A5
2051  92A5              Genera_explosion
2052  92A5
2053  92A5 21 86 8C     	ld hl,Clock_explosion
2054  92A8 35           	dec (hl)
2055  92A9 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2056  92AB
2057  92AB              Borra_entidad_colisionada
2058  92AB
2059  92AB CD 8E 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2060  92AE
2061  92AE DD E5        	push ix
2062  92B0 CD AA 90     	call Cargamos_registros_con_explosion
2063  92B3 CD 91 95     	call Genera_datos_de_impresion
2064  92B6 DD E1        	pop ix
2065  92B8
2066  92B8 AF           	xor a
2067  92B9 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2068  92BA
2069  92BA C9           	ret
2070  92BB
2071  92BB              Siguiente_frame_explosion
2072  92BB
2073  92BB 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2074  92BD
2075  92BD              ; Avanza Frame de explosión.
2076  92BD
2077  92BD DD 6E 07     	ld l,(ix+7)
2078  92C0 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2079  92C3
2080  92C3 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2081  92C6
2082  92C6 79           	ld a,c
2083  92C7 95           	sub l
2084  92C8 20 41        	jr nz,1F
2085  92CA
2086  92CA
2087  92CA              ; Fín de la entidad !!!!!!!!!!!!!
2088  92CA              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2089  92CA
2090  92CA              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2091  92CA              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2092  92CA              ; Entidades_en_curso db 0								; Entidades en pantalla.
2093  92CA
2094  92CA              ; La entidad eliminada, es la última del nivel ?
2095  92CA
2096  92CA 3A 45 8C     	ld a,(Numero_de_entidades)
2097  92CD A7           	and a
2098  92CE 28 30        	jr z,2F
2099  92D0
2100  92D0              ; Decrementa (Numero_de_entidades)
2101  92D0
2102  92D0 3D           	dec a
2103  92D1 32 45 8C     	ld (Numero_de_entidades),a
2104  92D4 21 47 8C     	ld hl,Entidades_en_curso
2105  92D7 35           	dec (hl)
2106  92D8
2107  92D8              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2108  92D8              ; IX apunta al 1er .db de la entidad eliminada.
2109  92D8
2110  92D8 2A 43 8C     	ld hl,(Puntero_indice_master)
2111  92DB CD 50 91     	call Extrae_address
2112  92DE
2113  92DE DD E5        	push ix
2114  92E0 D1           	pop de
2115  92E1
2116  92E1 01 0C 00     	ld bc,12
2117  92E4 ED B0        	ldir
2118  92E6
2119  92E6              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2120  92E6
2121  92E6 CD 7E 90     	call Obtenemos_puntero_de_impresion
2122  92E9
2123  92E9 DD 6E 05     	ld l,(ix+5)
2124  92EC 2C           	inc l
2125  92ED DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2126  92F0
2127  92F0 CD 65 95     	call Genera_coordenadas
2128  92F3
2129  92F3 ED 4B FE 8B  	ld bc,(Coordenada_X)
2130  92F7
2131  92F7 DD 71 01     	ld (ix+1),c
2132  92FA DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2133  92FD
2134  92FD AF           	xor a
2135  92FE 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2136  92FF
2137  92FF C9           	ret
2138  9300
2139  9300              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2140  9300
2141  9300 21 46 8C     2 ld hl,Numero_parcial_de_entidades
2142  9303 35           	dec (hl)
2143  9304 23           	inc hl
2144  9305 35           	dec (hl)
2145  9306
2146  9306 CD CA 91     	call Limpia_caja_de_entidades
2147  9309 18 A0        	jr Borra_entidad_colisionada
2148  930B
2149  930B 23           1 inc hl
2150  930C 23           	inc hl
2151  930D
2152  930D DD 75 07     	ld (ix+7),l
2153  9310 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2154  9313
2155  9313 18 96        	jr Borra_entidad_colisionada
2156  9315
2157  9315              ; ----- ----- ----- ----- -----
2158  9315
2159  9315              Genera_explosion_Amadeus
2160  9315
2161  9315 21 87 8C     	ld hl,Clock_explosion_Amadeus
2162  9318 35           	dec (hl)
2163  9319 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2164  931B
2165  931B              Borra_Amadeus_impactado
2166  931B
2167  931B CD F8 8E     	call Change_Amadeus
2168  931E CD BE 90     	call Cargamos_registros_con_explosion_Amadeus
2169  9321 CD DF 90     	call Genera_datos_de_impresion_Amadeus
2170  9324
2171  9324 21 74 8C     	ld hl,Ctrl_3
2172  9327 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2173  9329
2174  9329 AF           	xor a
2175  932A 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2176  932B
2177  932B C9           	ret
2178  932C
2179  932C              Siguiente_frame_explosion_Amadeus
2180  932C
2181  932C 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2182  932E
2183  932E              ; Avanza Frame de explosión.
2184  932E
2185  932E 2A B5 89     	ld hl,(Pamm_Amadeus)
2186  9331 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2187  9334
2188  9334 79           	ld a,c
2189  9335 95           	sub l
2190  9336 20 0B        	jr nz,1F
2191  9338
2192  9338              ; Fín de Amadeus !!!!!!!!!!!!!
2193  9338              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2194  9338
2195  9338 AF           	xor a
2196  9339 32 B2 89     	ld (Impacto_Amadeus),a
2197  933C 21 74 8C     	ld hl,Ctrl_3
2198  933F CB F6        	set 6,(hl)
2199  9341
2200  9341 18 D8        	jr Borra_Amadeus_impactado
2201  9343
2202  9343 23           1 inc hl
2203  9344 23           	inc hl
2204  9345 22 B5 89     	ld (Pamm_Amadeus),hl
2205  9348 18 D1        	jr Borra_Amadeus_impactado
2206  934A
2207  934A              ; ---------------------------------------------------------------
2208  934A
2209  934A              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 934A              ; ******************************************************************************************************************************************************************************************
   2+ 934A              ;
   3+ 934A              ;   21/04/24
   4+ 934A              ;
   5+ 934A              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 934A              ;   (XOR) bit a bit.
   7+ 934A              ;
   8+ 934A              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 934A
  10+ 934A              Derivando_RND
  11+ 934A
  12+ 934A 21 F6 88         ld hl,Numeros_aleatorios
  13+ 934D
  14+ 934D ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 934F C5               push bc
  16+ 9350              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9350 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9353              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9353
  20+ 9353 A7           6 and a                                 ; Carry a "0".
  21+ 9354 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9356 30 02            jr nc,1F
  23+ 9358
  24+ 9358 CB C1            set 0,c
  25+ 935A
  26+ 935A 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 935B E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 935D 5F               ld e,a
  29+ 935E
  30+ 935E 7A               ld a,d
  31+ 935F E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9361 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9363
  34+ 9363 CB 3F            srl a
  35+ 9365
  36+ 9365 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9366
  38+ 9366 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9367 28 04            jr z,4F
  40+ 9369
  41+ 9369 CB FF            set 7,a
  42+ 936B 18 02            jr 5F
  43+ 936D
  44+ 936D CB BF        4 res 7,a
  45+ 936F
  46+ 936F CB 21        5 sla c
  47+ 9371 10 E0            djnz 6B
  48+ 9373
  49+ 9373 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9374
  51+ 9374 77               ld (hl),a
  52+ 9375 23               inc hl
  53+ 9376 C1               pop bc
  54+ 9377 10 D4            djnz 3B
  55+ 9379
  56+ 9379 C9               ret
  57+ 937A
  58+ 937A
  59+ 937A
# file closed: RND_Derivando.asm
2210  937A              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 937A              ;---------------------------------------------------------------------------------------------------------------
   2+ 937A              ;
   3+ 937A              ;   13/11/24
   4+ 937A
   5+ 937A              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 937A
   7+ 937A              Genera_movimientos_masticados_del_nivel
   8+ 937A
   9+ 937A              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 937A
  11+ 937A              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 937A              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 937A              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 937A
  15+ 937A 2D           	dec l
  16+ 937B 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 937C 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 937D 4E           	ld c,(hl)
  19+ 937E
  20+ 937E E5           1 push hl														; Push (Datos_de_nivel).
  21+ 937F C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9380
  23+ 9380              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9380
  25+ 9380 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9381
  27+ 9381 CD BF 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9384
  29+ 9384              ;	Caja Master inicializada ???
  30+ 9384
  31+ 9384 7E           	ld a,(hl)
  32+ 9385 A7           	and a
  33+ 9386 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9388
  35+ 9388              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9388
  37+ 9388 C1           	pop bc
  38+ 9389 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 938A C5           	push bc
  40+ 938B
  41+ 938B CD 5F 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 938E CD F3 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9391
  44+ 9391 3A FD 8B     	ld a,(Tipo)
  45+ 9394 CD CF 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9397
  47+ 9397              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9397
  49+ 9397              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9397              ;	ld a,(hl)
  51+ 9397              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9397
  53+ 9397              ;	ld hl,Posicion_inicio
  54+ 9397              ;	ld (hl),a
  55+ 9397
  56+ 9397              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9397              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9397
  59+ 9397 CD 2A 90     	call Construye_movimientos_masticados_entidad
  60+ 939A
  61+ 939A 2A 43 8C     	ld hl,(Puntero_indice_master)
  62+ 939D CD 50 91     	call Extrae_address
  63+ 93A0
  64+ 93A0 5D           	ld e,l
  65+ 93A1 54           	ld d,h
  66+ 93A2
  67+ 93A2 CD 20 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 93A5
  69+ 93A5              Movimientos_masticados_construidos
  70+ 93A5
  71+ 93A5 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 93A6
  73+ 93A6 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 93A7 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 93A8
  76+ 93A8 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 93A9 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 93AB
  79+ 93AB C9           	ret
  80+ 93AC
  81+ 93AC              ;---------------------------------------------------------------------------------------------------------------
  82+ 93AC              ;
  83+ 93AC              ;   9/11/24
  84+ 93AC              ;
  85+ 93AC              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 93AC              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 93AC              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 93AC              ;	_ de la 1ª entidad del Nivel.
  89+ 93AC              ;
  90+ 93AC              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 93AC
  92+ 93AC              ;	MODIFICA: HL,DE y A.
  93+ 93AC              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 93AC
  95+ 93AC              Inicializa_1er_Nivel
  96+ 93AC
  97+ 93AC              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 93AC
  99+ 93AC 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 93AF CD 50 91     	call Extrae_address
 101+ 93B2 ED 53 93 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 93B6
 103+ 93B6 7E           	ld a,(hl)
 104+ 93B7 32 45 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 93BA
 106+ 93BA 2C           	inc l
 107+ 93BB 22 95 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 93BE
 109+ 93BE C9           	ret
 110+ 93BF
 111+ 93BF              ; ----------------------
 112+ 93BF              ;
 113+ 93BF              ;	13/11/24
 114+ 93BF              ;
 115+ 93BF
 116+ 93BF              Situa_en_Caja_Master
 117+ 93BF
 118+ 93BF CD DE 94         call Calcula_salto_en_BC
 119+ 93C2 21 58 89         ld hl,Indice_de_cajas_master
 120+ 93C5 A7               and a
 121+ 93C6 ED 4A            adc hl,bc
 122+ 93C8 22 43 8C       	ld (Puntero_indice_master),hl
 123+ 93CB CD 50 91     	call Extrae_address
 124+ 93CE C9           	ret
 125+ 93CF
 126+ 93CF              ; ----------------------
 127+ 93CF
 128+ 93CF              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 93CF              ; 	ld bc,4
 130+ 93CF              ; 	ldir
 131+ 93CF              ; 	ret
 132+ 93CF
 133+ 93CF 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 93D0 CD DE 94         call Calcula_salto_en_BC
 135+ 93D3 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 93D6 A7               and a
 137+ 93D7 ED 4A            adc hl,bc
 138+ 93D9 CD 50 91         call Extrae_address
 139+ 93DC 22 2E 8C         ld (Puntero_indice_mov),hl
 140+ 93DF C9               ret
 141+ 93E0
 142+ 93E0              ;---------------------------------------------------------------------------------------------------------------
 143+ 93E0              ;
 144+ 93E0              ;   13/11/24
 145+ 93E0              ;
 146+ 93E0              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 93E0
 148+ 93E0
 149+ 93E0              Prepara_Cajas_de_Entidades
 150+ 93E0
 151+ 93E0              ; Preparamos los punteros de las cajas de entidades:
 152+ 93E0
 153+ 93E0 CD 3A 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 93E3              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 93E3 CD 29 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 93E6
 157+ 93E6 2A 95 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 93E9
 159+ 93E9              ; En este punto:
 160+ 93E9              ;
 161+ 93E9              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 93E9              ; B contiene (Numero_parcial_de_entidades).
 163+ 93E9
 164+ 93E9 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 93EA
 166+ 93EA 7E           	ld a,(hl)
 167+ 93EB
 168+ 93EB CD BF 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 93EE
 170+ 93EE ED 5B 3D 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 93F2
 172+ 93F2 D5           	push de
 173+ 93F3 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 93F5
 175+ 93F5 01 0C 00     	ld bc,12
 176+ 93F8 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 93FA              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 93FA
 179+ 93FA              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 93FA              ;
 181+ 93FA              ;
 182+ 93FA              ; ------------------------------------------------------ IX
 183+ 93FA              ; ------------------------------------------------------ IX
 184+ 93FA              ; ------------------------------------------------------ IX
 185+ 93FA              ; ------------------------------------------------------ IX
 186+ 93FA
 187+ 93FA DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 93FC
 189+ 93FC CD 7E 90     	call Obtenemos_puntero_de_impresion
 190+ 93FF
 191+ 93FF DD 6E 05     	ld l,(ix+5)
 192+ 9402 2C           	inc l
 193+ 9403 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 9406
 195+ 9406 D5           	push de														; Push (Puntero_objeto).
 196+ 9407 E5           	push hl														; Push (Puntero_de_impresion).
 197+ 9408
 198+ 9408 CD 65 95     	call Genera_coordenadas
 199+ 940B
 200+ 940B ED 4B FE 8B  	ld bc,(Coordenada_X)
 201+ 940F
 202+ 940F DD 71 01     	ld (ix+1),c
 203+ 9412 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 9415
 205+ 9415 CD 8E 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 9418
 207+ 9418 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 941A D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 941B
 210+ 941B CD 91 95     	call Genera_datos_de_impresion
 211+ 941E
 212+ 941E DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 9420
 214+ 9420              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 9420
 216+ 9420 CD 97 94     	call Decrementa_Contador_de_mov_masticados
 217+ 9423 CD 74 94     	call Limpiamos_bandeja_DRAW
 218+ 9426 CD 9A 91     	call Incrementa_punteros_de_cajas
 219+ 9429
 220+ 9429              ; Siguiente entidad del Nivel.
 221+ 9429
 222+ 9429 2A 95 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 942C 23           	inc hl 														; _ entidad del Nivel.
 224+ 942D
 225+ 942D C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 942E
 227+ 942E 10 B9        	djnz 1B
 228+ 9430
 229+ 9430 C9           	ret
 230+ 9431
 231+ 9431              ; -------------------------------------------------------------------------------------------------------------------
 232+ 9431              ;
 233+ 9431              ;	27/5/24
 234+ 9431              ;
 235+ 9431              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 9431              ;
 237+ 9431
 238+ 9431              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 9431              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 9431
 241+ 9431 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 9434 CD F3 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 9437
 244+ 9437
 245+ 9437              Construye_movimientos_masticados_Amadeus
 246+ 9437
 247+ 9437 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 943A CD 71 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 943D              ;															; _ el (Contador_de_mov_masticados).
 250+ 943D CD 56 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 9440              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 9440
 253+ 9440              ; Generamos movimientos masticados de Amadeus.
 254+ 9440
 255+ 9440 06 79        	ld b,121												; $0079, 121d.
 256+ 9442
 257+ 9442 C5           1 push bc
 258+ 9443 CD A8 97     	call Draw
 259+ 9446 CD 56 90     	call Guarda_movimiento_masticado
 260+ 9449
 261+ 9449 CD 1C 9B     	call Mov_right
 262+ 944C CD 1C 9B     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 944F
 264+ 944F C1           	pop bc
 265+ 9450 10 F0        	djnz 1B
 266+ 9452
 267+ 9452              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 9452
 269+ 9452              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 9452              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 9452
 272+ 9452 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 9455 01 08 00     	ld bc,8
 274+ 9458 A7           	and a
 275+ 9459 ED 42        	sbc hl,bc
 276+ 945B 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 945E
 278+ 945E C9           	ret
 279+ 945F
 280+ 945F              ; ---------------------------------------------------------------------
 281+ 945F              ;
 282+ 945F              ;	10/02/24
 283+ 945F              ;
 284+ 945F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 945F              ;
 286+ 945F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 945F
 288+ 945F              Definicion_segun_tipo
 289+ 945F
 290+ 945F CD DE 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 9462 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 9465 CD E9 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 9468 C9           	ret
 294+ 9469
 295+ 9469              ; ---------------------------------------------------------------------
 296+ 9469              ;
 297+ 9469              ;	6/7/24
 298+ 9469
 299+ 9469
 300+ 9469              Store_Restore_cajas
 301+ 9469
 302+ 9469 ED 5B 3D 8C  	ld de,(Puntero_store_caja)
 303+ 946D CD 20 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 9470 CD 9A 91     	call Incrementa_punteros_de_cajas
 305+ 9473 C9           	ret
 306+ 9474
 307+ 9474              ; ---------------------------------------------------------------------
 308+ 9474              ;
 309+ 9474              ;	23/6/24
 310+ 9474              ;
 311+ 9474              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9474              ;
 313+ 9474              ;	MODIFY: HL
 314+ 9474
 315+ 9474              Limpiamos_bandeja_DRAW
 316+ 9474
 317+ 9474 ED 73 4C 8C  	ld (Stack),sp
 318+ 9478 31 22 8C     	ld sp,Vel_left
 319+ 947B
 320+ 947B AF           	xor a
 321+ 947C 67           	ld h,a
 322+ 947D 6F           	ld l,a
 323+ 947E
 324+ 947E E5           	push hl
 325+ 947F E5           	push hl
 326+ 9480 E5           	push hl
 327+ 9481 E5           	push hl
 328+ 9482 E5           	push hl
 329+ 9483 E5           	push hl
 330+ 9484 E5           	push hl
 331+ 9485 E5           	push hl
 332+ 9486 E5           	push hl
 333+ 9487 E5           	push hl
 334+ 9488 E5           	push hl
 335+ 9489 E5           	push hl
 336+ 948A E5           	push hl
 337+ 948B E5           	push hl
 338+ 948C E5           	push hl
 339+ 948D E5           	push hl
 340+ 948E E5           	push hl
 341+ 948F E5           	push hl
 342+ 9490
 343+ 9490 33           	inc sp
 344+ 9491
 345+ 9491 E5           	push hl
 346+ 9492 ED 7B 4C 8C  	ld sp,(Stack)
 347+ 9496
 348+ 9496 C9           	ret
 349+ 9497
 350+ 9497              ; ---------------------------------------------------------------------
 351+ 9497              ;
 352+ 9497              ;	23/11/24
 353+ 9497              ;
 354+ 9497              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 9497
 356+ 9497              Decrementa_Contador_de_mov_masticados
 357+ 9497
 358+ 9497 DD 6E 09     	ld l,(ix+9)
 359+ 949A DD 66 0A     	ld h,(ix+10)
 360+ 949D
 361+ 949D 2B           	dec hl
 362+ 949E
 363+ 949E DD 75 09     	ld (ix+9),l
 364+ 94A1 DD 74 0A     	ld (ix+10),h
 365+ 94A4
 366+ 94A4 C9           	ret
 367+ 94A5
 368+ 94A5              ; ---------------------------------------------------------------------
 369+ 94A5              ;
 370+ 94A5              ;	24/11/24
 371+ 94A5
 372+ 94A5              Reinicia_entidad_maliciosa
 373+ 94A5
 374+ 94A5              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 94A5
 376+ 94A5 CD 89 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 94A8 CD 96 9F     	call Transfiere_datos_de_contadores
 378+ 94AB
 379+ 94AB              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 94AB
 381+ 94AB DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 94AE CD 5F 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 94B1
 384+ 94B1 7D           	ld a,l
 385+ 94B2 C6 0B        	add 11
 386+ 94B4 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 94B5
 388+ 94B5 CD 50 91     	call Extrae_address
 389+ 94B8
 390+ 94B8 DD 75 07     	ld (ix+7),l
 391+ 94BB DD 74 08     	ld (ix+8),h
 392+ 94BE
 393+ 94BE CD 7E 90     	call Obtenemos_puntero_de_impresion
 394+ 94C1
 395+ 94C1              ; Incrementa (Contador_de_vueltas)x2.
 396+ 94C1              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 94C1
 398+ 94C1              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 94C1              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 94C1              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 94C1              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 94C1              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 94C1
 404+ 94C1 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 405+ 94C5
 406+ 94C5 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 94C8 CB 2F        	sra a
 408+ 94CA CB 2F        	sra a
 409+ 94CC
 410+ 94CC DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 94CF
 412+ 94CF 3E 40        	ld a,$40
 413+ 94D1 DD BE 03     	cp (ix+3)
 414+ 94D4 C0           	ret nz
 415+ 94D5
 416+ 94D5              ; Límitador.
 417+ 94D5
 418+ 94D5              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 94D5
 420+ 94D5 DD CB 03 2E  	sra (ix+3)
 421+ 94D9 DD CB 0B 2E  	sra (ix+11)
 422+ 94DD
 423+ 94DD C9           	ret
 424+ 94DE
 425+ 94DE              ;	------------------------------------------------------------------------------------
 426+ 94DE              ;
 427+ 94DE              ;	09/11/24
 428+ 94DE              ;
 429+ 94DE              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 94DE              ;
 431+ 94DE              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 94DE              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 94DE
 434+ 94DE A7           Calcula_salto_en_BC and a
 435+ 94DF 28 04        	jr z,1F
 436+ 94E1 CB 27        	sla a
 437+ 94E3 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 94E5 4F           1 ld c,a
 439+ 94E6 06 00        	ld b,0
 440+ 94E8 C9           	ret
 441+ 94E9
 442+ 94E9              ; ------------------------------------------------------------------
 443+ 94E9              ;
 444+ 94E9              ;	19/1/24
 445+ 94E9              ;
 446+ 94E9              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 94E9              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 94E9
 449+ 94E9 A7           Situa_en_datos_de_definicion and a
 450+ 94EA ED 4A        	adc hl,bc
 451+ 94EC CD 50 91     	call Extrae_address
 452+ 94EF 22 4A 8C         ld (Datos_de_entidad),hl
 453+ 94F2 C9           	ret
 454+ 94F3
 455+ 94F3              ; ----------------------------------------------------------------------------------------------------------
 456+ 94F3              ;
 457+ 94F3              ;	24/6/24
 458+ 94F3              ;
 459+ 94F3              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 94F3              ;	_ de entidad.
 461+ 94F3              ;
 462+ 94F3              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 94F3              ;
 464+ 94F3              ;
 465+ 94F3              ;	MODIFICA: HL,DE y BC
 466+ 94F3
 467+ 94F3
 468+ 94F3              Definicion_de_entidad_a_bandeja_DRAW
 469+ 94F3
 470+ 94F3 11 FD 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 94F6 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 94F7 12           	ld (de),a
 473+ 94F8 23           	inc hl
 474+ 94F9              ;
 475+ 94F9 11 0B 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 94FC 01 02 00     	ld bc,2
 477+ 94FF ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 9501              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 9501 11 00 8C     	ld de,Contador_de_vueltas
 480+ 9504 7E           	ld a,(hl)
 481+ 9505 12           	ld (de),a
 482+ 9506 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 9507
 484+ 9507 11 12 8C     	ld de,Indice_Sprite_der
 485+ 950A 01 04 00     	ld bc,4
 486+ 950D ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 950F
 488+ 950F 11 1A 8C     	ld de,Posicion_inicio
 489+ 9512 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 9515 ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 9517
 492+ 9517 11 04 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 951A 01 02 00     	ld bc,2
 494+ 951D ED B0        	ldir
 495+ 951F
 496+ 951F C9           	ret
 497+ 9520
 498+ 9520              ; ----------------------------------------------------------------------------------------------------------
 499+ 9520              ;
 500+ 9520              ;	1/8/24
 501+ 9520              ;
 502+ 9520
 503+ 9520              Parametros_de_bandeja_DRAW_a_caja
 504+ 9520
 505+ 9520 21 FD 8B     	ld hl,Bandeja_DRAW
 506+ 9523 01 0C 00     	ld bc,12
 507+ 9526 ED B0        	ldir
 508+ 9528 C9           	ret
 509+ 9529
 510+ 9529              ;---------------------------------------------------------------------------------------------------------------
 511+ 9529              ;
 512+ 9529              ;	13/11/24
 513+ 9529              ;
 514+ 9529              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 9529              ;
 516+ 9529              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 9529              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 9529
 519+ 9529              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 9529              ;			- Actualiza (Numero_de_entidades).
 521+ 9529
 522+ 9529              ;	MODIFICA: A y B.
 523+ 9529
 524+ 9529
 525+ 9529              Inicializa_Numero_parcial_de_entidades
 526+ 9529
 527+ 9529 3A 45 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 952C FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 952E 38 0E        	jr c,1F
 530+ 9530 28 0C        	jr z,1F
 531+ 9532
 532+ 9532              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 9532              ; Actualizamos variables.
 534+ 9532
 535+ 9532 D6 06        	sub 6
 536+ 9534 32 45 8C     	ld (Numero_de_entidades),a
 537+ 9537 3E 06        	ld a,6
 538+ 9539 32 46 8C     	ld (Numero_parcial_de_entidades),a
 539+ 953C 47           	ld b,a
 540+ 953D C9           	ret
 541+ 953E
 542+ 953E              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 953E              ; (Numero_de_entidades)="0".
 544+ 953E
 545+ 953E 32 46 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 9541 47           	ld b,a
 547+ 9542 AF           	xor a
 548+ 9543 32 45 8C     	ld (Numero_de_entidades),a
 549+ 9546 C9           	ret
 550+ 9547
# file closed: Rutinas_de_inicio_y_niveles.asm
2211  9547              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9547              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9547              ;
   3+ 9547              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9547              ;
   5+ 9547              ; *****************************************************************************************************************************************************************************************
   6+ 9547              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9547
   8+ 9547 7C           calcula_tercio ld a,h
   9+ 9548 E6 18        	and $18
  10+ 954A CB 2F        	sra a
  11+ 954C CB 2F        	sra a
  12+ 954E CB 2F        	sra a
  13+ 9550 C9           	ret
  14+ 9551
# file closed: calcula_tercio.asm
2212  9551              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9551              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9551              ;
   3+ 9551              ;
   4+ 9551              ;	CLS.
   5+ 9551              ;
   6+ 9551              ;	Limpia la pantalla y define sus atributos.
   7+ 9551              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9551              ;
   9+ 9551              ;	COLORES: 0 ..... NEGRO
  10+ 9551              ;    		 1 ..... AZUL
  11+ 9551              ; 			 2 ..... ROJO
  12+ 9551              ;			 3 ..... MAGENTA
  13+ 9551              ; 			 4 ..... VERDE
  14+ 9551              ; 			 5 ..... CIAN
  15+ 9551              ;			 6 ..... AMARILLO
  16+ 9551              ; 			 7 ..... BLANCO
  17+ 9551              ;
  18+ 9551              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9551              ;
  20+ 9551              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9551
  22+ 9551
  23+ 9551 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9554 11 01 40     	LD DE,$4001
  25+ 9557 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 955A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 955C ED B0        	LDIR
  28+ 955E 01 FF 02     	LD BC,767
  29+ 9561 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9562 ED B0        	LDIR
  31+ 9564 C9           	ret
  32+ 9565
# file closed: Cls.asm
2213  9565              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9565              ; ------------------------------------------------------------------------
   2+ 9565              ;
   3+ 9565              ;	30/1/24
   4+ 9565              ;
   5+ 9565              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9565              ;	Fila superior "0", Columna izquierda "0".
   7+ 9565              ;
   8+ 9565              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9565              ;
  10+ 9565              ;	Modifica: A,BC y DE.
  11+ 9565
  12+ 9565              Genera_coordenadas
  13+ 9565
  14+ 9565 7D           	ld a,l
  15+ 9566 E6 1F        	and $1f
  16+ 9568
  17+ 9568 32 FE 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 956B
  19+ 956B 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 956C FE 40        	cp $40
  21+ 956E 38 1C        	jr c,4F
  22+ 9570
  23+ 9570 CD 47 95     	call calcula_tercio
  24+ 9573 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9574
  26+ 9574 1E 00        	ld e,0
  27+ 9576 7D           	ld a,l
  28+ 9577 E6 E0        	and $e0
  29+ 9579 28 01        	jr z,1F
  30+ 957B 04           	inc b
  31+ 957C
  32+ 957C 04           1 inc b
  33+ 957D 05           	dec b
  34+ 957E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9580              ;														; _ , salimos.
  36+ 9580 1C           3 inc e
  37+ 9581 D6 20        	sub 32
  38+ 9583 20 FB        	jr nz,3B
  39+ 9585 10 F5        	djnz 1B
  40+ 9587
  41+ 9587 7B           2 ld a,e
  42+ 9588 32 FF 8B     	ld (Coordenada_y),a
  43+ 958B C9           	ret
  44+ 958C
  45+ 958C AF           4 xor a
  46+ 958D 32 FF 8B     	ld (Coordenada_y),a
  47+ 9590 C9           	ret
  48+ 9591
# file closed: Genera_coordenadas.asm
2214  9591              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9591              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9591              ;
   3+ 9591              ;	20/09/24
   4+ 9591              ;
   5+ 9591              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9591              ;   DE contiene Puntero_objeto.
   7+ 9591              ;   IX contiene el Puntero de impresión.
   8+ 9591
   9+ 9591              Genera_datos_de_impresion
  10+ 9591
  11+ 9591 ED 73 4C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9595
  13+ 9595 2A 6E 8C         ld hl,(Scanlines_album_SP)
  14+ 9598
  15+ 9598 3E 05            ld a,5
  16+ 959A 85               add l
  17+ 959B 6F               ld l,a
  18+ 959C
  19+ 959C F9               ld sp,hl
  20+ 959D 22 6E 8C         ld (Scanlines_album_SP),hl
  21+ 95A0
  22+ 95A0 21 00 00         ld hl,0
  23+ 95A3
  24+ 95A3 DD E5            push ix
  25+ 95A5 3B               dec sp
  26+ 95A6 ED 7A            adc hl,sp
  27+ 95A8 D5               push de
  28+ 95A9
  29+ 95A9              ; Recuperamos SP.
  30+ 95A9
  31+ 95A9 ED 7B 4C 8C      ld sp,(Stack)
  32+ 95AD
  33+ 95AD E5               push hl
  34+ 95AE F1               pop af
  35+ 95AF 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95B0
  37+ 95B0              ; Tenemos el encabezado listo.
  38+ 95B0              ; Preparamos registros para generar los scanlines.
  39+ 95B0
  40+ 95B0 DD E5            push ix
  41+ 95B2 E1               pop hl                                          ; 1er scanline en HL.
  42+ 95B3
  43+ 95B3 ED 5B 6E 8C      ld de,(Scanlines_album_SP)
  44+ 95B7
  45+ 95B7              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95B7              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95B7
  48+ 95B7 7C               ld a,h
  49+ 95B8 FE 50            cp $50
  50+ 95BA 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95BC
  52+ 95BC 20 05            jr nz,2F
  53+ 95BE
  54+ 95BE 7D               ld a,l
  55+ 95BF FE E0            cp $e0
  56+ 95C1 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95C3
  58+ 95C3 7D           2 ld a,l
  59+ 95C4 FE C0            cp $c0
  60+ 95C6 D2 5C 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95C9
  62+ 95C9              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95C9
  64+ 95C9 CD 5A 9A         call NextScan
  65+ 95CC EB               ex de,hl
  66+ 95CD
  67+ 95CD 73               ld (hl),e
  68+ 95CE 23               inc hl
  69+ 95CF 72               ld (hl),d
  70+ 95D0 23               inc hl
  71+ 95D1
  72+ 95D1 EB               ex de,hl
  73+ 95D2
  74+ 95D2 CD 5A 9A         call NextScan
  75+ 95D5 EB               ex de,hl
  76+ 95D6
  77+ 95D6 73               ld (hl),e
  78+ 95D7 23               inc hl
  79+ 95D8 72               ld (hl),d
  80+ 95D9 23               inc hl
  81+ 95DA
  82+ 95DA EB               ex de,hl
  83+ 95DB
  84+ 95DB CD 5A 9A         call NextScan
  85+ 95DE EB               ex de,hl
  86+ 95DF
  87+ 95DF 73               ld (hl),e
  88+ 95E0 23               inc hl
  89+ 95E1 72               ld (hl),d
  90+ 95E2 23               inc hl
  91+ 95E3
  92+ 95E3 EB               ex de,hl
  93+ 95E4
  94+ 95E4 CD 5A 9A         call NextScan
  95+ 95E7 EB               ex de,hl
  96+ 95E8
  97+ 95E8 73               ld (hl),e
  98+ 95E9 23               inc hl
  99+ 95EA 72               ld (hl),d
 100+ 95EB 23               inc hl
 101+ 95EC
 102+ 95EC EB               ex de,hl
 103+ 95ED
 104+ 95ED CD 5A 9A         call NextScan
 105+ 95F0 EB               ex de,hl
 106+ 95F1
 107+ 95F1 73               ld (hl),e
 108+ 95F2 23               inc hl
 109+ 95F3 72               ld (hl),d
 110+ 95F4 23               inc hl
 111+ 95F5
 112+ 95F5 EB               ex de,hl
 113+ 95F6
 114+ 95F6 CD 5A 9A         call NextScan
 115+ 95F9 EB               ex de,hl
 116+ 95FA
 117+ 95FA 73               ld (hl),e
 118+ 95FB 23               inc hl
 119+ 95FC 72               ld (hl),d
 120+ 95FD 23               inc hl
 121+ 95FE
 122+ 95FE EB               ex de,hl
 123+ 95FF
 124+ 95FF CD 5A 9A         call NextScan
 125+ 9602 EB               ex de,hl
 126+ 9603
 127+ 9603 73               ld (hl),e
 128+ 9604 23               inc hl
 129+ 9605 72               ld (hl),d
 130+ 9606 23               inc hl
 131+ 9607
 132+ 9607 EB               ex de,hl
 133+ 9608
 134+ 9608 CD 5A 9A         call NextScan
 135+ 960B EB               ex de,hl
 136+ 960C
 137+ 960C 73               ld (hl),e
 138+ 960D 23               inc hl
 139+ 960E 72               ld (hl),d
 140+ 960F 23               inc hl
 141+ 9610
 142+ 9610 EB               ex de,hl
 143+ 9611
 144+ 9611 CD 5A 9A         call NextScan
 145+ 9614 EB               ex de,hl
 146+ 9615
 147+ 9615 73               ld (hl),e
 148+ 9616 23               inc hl
 149+ 9617 72               ld (hl),d
 150+ 9618 23               inc hl
 151+ 9619
 152+ 9619 EB               ex de,hl
 153+ 961A
 154+ 961A CD 5A 9A         call NextScan
 155+ 961D EB               ex de,hl
 156+ 961E
 157+ 961E 73               ld (hl),e
 158+ 961F 23               inc hl
 159+ 9620 72               ld (hl),d
 160+ 9621 23               inc hl
 161+ 9622
 162+ 9622 EB               ex de,hl
 163+ 9623
 164+ 9623 CD 5A 9A         call NextScan
 165+ 9626 EB               ex de,hl
 166+ 9627
 167+ 9627 73               ld (hl),e
 168+ 9628 23               inc hl
 169+ 9629 72               ld (hl),d
 170+ 962A 23               inc hl
 171+ 962B
 172+ 962B EB               ex de,hl
 173+ 962C
 174+ 962C CD 5A 9A         call NextScan
 175+ 962F EB               ex de,hl
 176+ 9630
 177+ 9630 73               ld (hl),e
 178+ 9631 23               inc hl
 179+ 9632 72               ld (hl),d
 180+ 9633 23               inc hl
 181+ 9634
 182+ 9634 EB               ex de,hl
 183+ 9635
 184+ 9635 CD 5A 9A         call NextScan
 185+ 9638 EB               ex de,hl
 186+ 9639
 187+ 9639 73               ld (hl),e
 188+ 963A 23               inc hl
 189+ 963B 72               ld (hl),d
 190+ 963C 23               inc hl
 191+ 963D
 192+ 963D EB               ex de,hl
 193+ 963E
 194+ 963E CD 5A 9A         call NextScan
 195+ 9641 EB               ex de,hl
 196+ 9642
 197+ 9642 73               ld (hl),e
 198+ 9643 23               inc hl
 199+ 9644 72               ld (hl),d
 200+ 9645 23               inc hl
 201+ 9646
 202+ 9646 EB               ex de,hl
 203+ 9647
 204+ 9647 CD 5A 9A         call NextScan
 205+ 964A EB               ex de,hl
 206+ 964B
 207+ 964B              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 964B              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 964B              ;   _ generar sus scanlines.
 210+ 964B
 211+ 964B              ;    ld (Puntero_de_impresion_disparo),de
 212+ 964B
 213+ 964B 73               ld (hl),e
 214+ 964C 23               inc hl
 215+ 964D 72               ld (hl),d
 216+ 964E 23               inc hl
 217+ 964F
 218+ 964F              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 964F
 220+ 964F 22 6E 8C         ld (Scanlines_album_SP),hl
 221+ 9652
 222+ 9652 EB               ex de,hl
 223+ 9653
 224+ 9653              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9653
 226+ 9653              ;    call NextScan
 227+ 9653              ;    call NextScan
 228+ 9653
 229+ 9653 22 79 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9656
 231+ 9656              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9656
 233+ 9656 08               ex af,af
 234+ 9657
 235+ 9657 F5               push af
 236+ 9658 E1               pop hl
 237+ 9659
 238+ 9659 36 10            ld (hl),16
 239+ 965B
 240+ 965B C9               ret
 241+ 965C
 242+ 965C              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 965C
 244+ 965C              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 965C
 246+ 965C 3E 57            ld a,$57
 247+ 965E 94               sub h
 248+ 965F 47               ld b,a
 249+ 9660
 250+ 9660 3E DF            ld a,$df
 251+ 9662 BD               cp l
 252+ 9663 38 04            jr c,1F
 253+ 9665
 254+ 9665 3E 08            ld a,8
 255+ 9667 80               add b
 256+ 9668 47               ld b,a
 257+ 9669
 258+ 9669              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9669              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9669
 261+ 9669 48           1 ld c,b
 262+ 966A 0C               inc c
 263+ 966B
 264+ 966B 04               inc b
 265+ 966C 05               dec b
 266+ 966D 20 02            jr nz,3F
 267+ 966F
 268+ 966F 18 0B            jr 6F
 269+ 9671
 270+ 9671 CD 5A 9A     3 call NextScan
 271+ 9674 EB               ex de,hl
 272+ 9675
 273+ 9675 73               ld (hl),e
 274+ 9676 23               inc hl
 275+ 9677 72               ld (hl),d
 276+ 9678 23               inc hl
 277+ 9679
 278+ 9679 EB               ex de,hl
 279+ 967A 10 F5            djnz 3B
 280+ 967C
 281+ 967C ED 53 6E 8C  6 ld (Scanlines_album_SP),de
 282+ 9680
 283+ 9680 08           5 ex af,af
 284+ 9681 F5               push af
 285+ 9682 E1               pop hl
 286+ 9683
 287+ 9683 71               ld (hl),c
 288+ 9684
 289+ 9684 C9               ret
 290+ 9685
# file closed: Genera_datos_de_impresion.asm
2215  9685              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9685              ; -----------------------------------------------------------------------------
   2+ 9685              ;
   3+ 9685              ;   11/03/24
   4+ 9685              ;
   5+ 9685
   6+ 9685              Pinta_Sprites
   7+ 9685
   8+ 9685              ;    ld hl,(Scanlines_album_SP)
   9+ 9685              ;    call Extrae_address
  10+ 9685
  11+ 9685              ;    inc h
  12+ 9685              ;    dec h
  13+ 9685              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9685
  15+ 9685 ED 73 4C 8C      ld (Stack),sp
  16+ 9689
  17+ 9689 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 968A              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 968A 2C               inc l
  20+ 968B 2C               inc l
  21+ 968C
  22+ 968C 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 968D
  24+ 968D 2C               inc l
  25+ 968E F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 968F
  27+ 968F              ;   Seleccionamos rutina de impresión:
  28+ 968F
  29+ 968F 3E 10            ld a,16
  30+ 9691 B8               cp b
  31+ 9692 C2 8E 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9695
  33+ 9695              ;   Rutinas:
  34+ 9695
  35+ 9695              Pinta_rapido    ;   1520 t/states.
  36+ 9695
  37+ 9695 E1               pop hl
  38+ 9696
  39+ 9696 1A               ld a,(de)
  40+ 9697 AE               xor (hl)
  41+ 9698 77               ld (hl),a
  42+ 9699 2C               inc l
  43+ 969A 1C               inc e
  44+ 969B 1A               ld a,(de)
  45+ 969C AE               xor (hl)
  46+ 969D 77               ld (hl),a
  47+ 969E 2C               inc l
  48+ 969F 1C               inc e
  49+ 96A0 1A               ld a,(de)
  50+ 96A1 AE               xor (hl)
  51+ 96A2 77               ld (hl),a
  52+ 96A3 13               inc de
  53+ 96A4
  54+ 96A4 E1               pop hl
  55+ 96A5
  56+ 96A5 1A               ld a,(de)
  57+ 96A6 AE               xor (hl)
  58+ 96A7 77               ld (hl),a
  59+ 96A8 2C               inc l
  60+ 96A9 1C               inc e
  61+ 96AA 1A               ld a,(de)
  62+ 96AB AE               xor (hl)
  63+ 96AC 77               ld (hl),a
  64+ 96AD 2C               inc l
  65+ 96AE 1C               inc e
  66+ 96AF 1A               ld a,(de)
  67+ 96B0 AE               xor (hl)
  68+ 96B1 77               ld (hl),a
  69+ 96B2 13               inc de
  70+ 96B3
  71+ 96B3 E1               pop hl
  72+ 96B4
  73+ 96B4 1A               ld a,(de)
  74+ 96B5 AE               xor (hl)
  75+ 96B6 77               ld (hl),a
  76+ 96B7 2C               inc l
  77+ 96B8 1C               inc e
  78+ 96B9 1A               ld a,(de)
  79+ 96BA AE               xor (hl)
  80+ 96BB 77               ld (hl),a
  81+ 96BC 2C               inc l
  82+ 96BD 1C               inc e
  83+ 96BE 1A               ld a,(de)
  84+ 96BF AE               xor (hl)
  85+ 96C0 77               ld (hl),a
  86+ 96C1 13               inc de
  87+ 96C2
  88+ 96C2 E1               pop hl
  89+ 96C3
  90+ 96C3 1A               ld a,(de)
  91+ 96C4 AE               xor (hl)
  92+ 96C5 77               ld (hl),a
  93+ 96C6 2C               inc l
  94+ 96C7 1C               inc e
  95+ 96C8 1A               ld a,(de)
  96+ 96C9 AE               xor (hl)
  97+ 96CA 77               ld (hl),a
  98+ 96CB 2C               inc l
  99+ 96CC 1C               inc e
 100+ 96CD 1A               ld a,(de)
 101+ 96CE AE               xor (hl)
 102+ 96CF 77               ld (hl),a
 103+ 96D0 13               inc de
 104+ 96D1
 105+ 96D1 E1               pop hl
 106+ 96D2
 107+ 96D2 1A               ld a,(de)
 108+ 96D3 AE               xor (hl)
 109+ 96D4 77               ld (hl),a
 110+ 96D5 2C               inc l
 111+ 96D6 1C               inc e
 112+ 96D7 1A               ld a,(de)
 113+ 96D8 AE               xor (hl)
 114+ 96D9 77               ld (hl),a
 115+ 96DA 2C               inc l
 116+ 96DB 1C               inc e
 117+ 96DC 1A               ld a,(de)
 118+ 96DD AE               xor (hl)
 119+ 96DE 77               ld (hl),a
 120+ 96DF 13               inc de
 121+ 96E0
 122+ 96E0 E1               pop hl
 123+ 96E1
 124+ 96E1 1A               ld a,(de)
 125+ 96E2 AE               xor (hl)
 126+ 96E3 77               ld (hl),a
 127+ 96E4 2C               inc l
 128+ 96E5 1C               inc e
 129+ 96E6 1A               ld a,(de)
 130+ 96E7 AE               xor (hl)
 131+ 96E8 77               ld (hl),a
 132+ 96E9 2C               inc l
 133+ 96EA 1C               inc e
 134+ 96EB 1A               ld a,(de)
 135+ 96EC AE               xor (hl)
 136+ 96ED 77               ld (hl),a
 137+ 96EE 13               inc de
 138+ 96EF
 139+ 96EF E1               pop hl
 140+ 96F0
 141+ 96F0 1A               ld a,(de)
 142+ 96F1 AE               xor (hl)
 143+ 96F2 77               ld (hl),a
 144+ 96F3 2C               inc l
 145+ 96F4 1C               inc e
 146+ 96F5 1A               ld a,(de)
 147+ 96F6 AE               xor (hl)
 148+ 96F7 77               ld (hl),a
 149+ 96F8 2C               inc l
 150+ 96F9 1C               inc e
 151+ 96FA 1A               ld a,(de)
 152+ 96FB AE               xor (hl)
 153+ 96FC 77               ld (hl),a
 154+ 96FD 13               inc de
 155+ 96FE
 156+ 96FE E1               pop hl
 157+ 96FF
 158+ 96FF 1A               ld a,(de)
 159+ 9700 AE               xor (hl)
 160+ 9701 77               ld (hl),a
 161+ 9702 2C               inc l
 162+ 9703 1C               inc e
 163+ 9704 1A               ld a,(de)
 164+ 9705 AE               xor (hl)
 165+ 9706 77               ld (hl),a
 166+ 9707 2C               inc l
 167+ 9708 1C               inc e
 168+ 9709 1A               ld a,(de)
 169+ 970A AE               xor (hl)
 170+ 970B 77               ld (hl),a
 171+ 970C 13               inc de
 172+ 970D
 173+ 970D E1               pop hl
 174+ 970E
 175+ 970E 1A               ld a,(de)
 176+ 970F AE               xor (hl)
 177+ 9710 77               ld (hl),a
 178+ 9711 2C               inc l
 179+ 9712 1C               inc e
 180+ 9713 1A               ld a,(de)
 181+ 9714 AE               xor (hl)
 182+ 9715 77               ld (hl),a
 183+ 9716 2C               inc l
 184+ 9717 1C               inc e
 185+ 9718 1A               ld a,(de)
 186+ 9719 AE               xor (hl)
 187+ 971A 77               ld (hl),a
 188+ 971B 13               inc de
 189+ 971C
 190+ 971C E1               pop hl
 191+ 971D
 192+ 971D 1A               ld a,(de)
 193+ 971E AE               xor (hl)
 194+ 971F 77               ld (hl),a
 195+ 9720 2C               inc l
 196+ 9721 1C               inc e
 197+ 9722 1A               ld a,(de)
 198+ 9723 AE               xor (hl)
 199+ 9724 77               ld (hl),a
 200+ 9725 2C               inc l
 201+ 9726 1C               inc e
 202+ 9727 1A               ld a,(de)
 203+ 9728 AE               xor (hl)
 204+ 9729 77               ld (hl),a
 205+ 972A 13               inc de
 206+ 972B
 207+ 972B E1               pop hl
 208+ 972C
 209+ 972C 1A               ld a,(de)
 210+ 972D AE               xor (hl)
 211+ 972E 77               ld (hl),a
 212+ 972F 2C               inc l
 213+ 9730 1C               inc e
 214+ 9731 1A               ld a,(de)
 215+ 9732 AE               xor (hl)
 216+ 9733 77               ld (hl),a
 217+ 9734 2C               inc l
 218+ 9735 1C               inc e
 219+ 9736 1A               ld a,(de)
 220+ 9737 AE               xor (hl)
 221+ 9738 77               ld (hl),a
 222+ 9739 13               inc de
 223+ 973A
 224+ 973A E1               pop hl
 225+ 973B
 226+ 973B 1A               ld a,(de)
 227+ 973C AE               xor (hl)
 228+ 973D 77               ld (hl),a
 229+ 973E 2C               inc l
 230+ 973F 1C               inc e
 231+ 9740 1A               ld a,(de)
 232+ 9741 AE               xor (hl)
 233+ 9742 77               ld (hl),a
 234+ 9743 2C               inc l
 235+ 9744 1C               inc e
 236+ 9745 1A               ld a,(de)
 237+ 9746 AE               xor (hl)
 238+ 9747 77               ld (hl),a
 239+ 9748 13               inc de
 240+ 9749
 241+ 9749 E1               pop hl
 242+ 974A
 243+ 974A 1A               ld a,(de)
 244+ 974B AE               xor (hl)
 245+ 974C 77               ld (hl),a
 246+ 974D 2C               inc l
 247+ 974E 1C               inc e
 248+ 974F 1A               ld a,(de)
 249+ 9750 AE               xor (hl)
 250+ 9751 77               ld (hl),a
 251+ 9752 2C               inc l
 252+ 9753 1C               inc e
 253+ 9754 1A               ld a,(de)
 254+ 9755 AE               xor (hl)
 255+ 9756 77               ld (hl),a
 256+ 9757 13               inc de
 257+ 9758
 258+ 9758 E1               pop hl
 259+ 9759
 260+ 9759 1A               ld a,(de)
 261+ 975A AE               xor (hl)
 262+ 975B 77               ld (hl),a
 263+ 975C 2C               inc l
 264+ 975D 1C               inc e
 265+ 975E 1A               ld a,(de)
 266+ 975F AE               xor (hl)
 267+ 9760 77               ld (hl),a
 268+ 9761 2C               inc l
 269+ 9762 1C               inc e
 270+ 9763 1A               ld a,(de)
 271+ 9764 AE               xor (hl)
 272+ 9765 77               ld (hl),a
 273+ 9766 13               inc de
 274+ 9767
 275+ 9767 E1               pop hl
 276+ 9768
 277+ 9768 1A               ld a,(de)
 278+ 9769 AE               xor (hl)
 279+ 976A 77               ld (hl),a
 280+ 976B 2C               inc l
 281+ 976C 1C               inc e
 282+ 976D 1A               ld a,(de)
 283+ 976E AE               xor (hl)
 284+ 976F 77               ld (hl),a
 285+ 9770 2C               inc l
 286+ 9771 1C               inc e
 287+ 9772 1A               ld a,(de)
 288+ 9773 AE               xor (hl)
 289+ 9774 77               ld (hl),a
 290+ 9775 13               inc de
 291+ 9776
 292+ 9776 E1               pop hl
 293+ 9777
 294+ 9777 1A               ld a,(de)
 295+ 9778 AE               xor (hl)
 296+ 9779 77               ld (hl),a
 297+ 977A 2C               inc l
 298+ 977B 1C               inc e
 299+ 977C 1A               ld a,(de)
 300+ 977D AE               xor (hl)
 301+ 977E 77               ld (hl),a
 302+ 977F 2C               inc l
 303+ 9780 1C               inc e
 304+ 9781 1A               ld a,(de)
 305+ 9782 AE               xor (hl)
 306+ 9783 77               ld (hl),a
 307+ 9784 13               inc de
 308+ 9785
 309+ 9785 ED 73 6E 8C      ld (Scanlines_album_SP),sp
 310+ 9789 ED 7B 4C 8C      ld sp,(Stack)
 311+ 978D C9               ret
 312+ 978E
 313+ 978E              Pinta_lento
 314+ 978E
 315+ 978E E1           1 pop hl
 316+ 978F
 317+ 978F 1A               ld a,(de)
 318+ 9790 AE               xor (hl)
 319+ 9791 77               ld (hl),a
 320+ 9792 2C               inc l
 321+ 9793 1C               inc e
 322+ 9794 1A               ld a,(de)
 323+ 9795 AE               xor (hl)
 324+ 9796 77               ld (hl),a
 325+ 9797 2C               inc l
 326+ 9798 1C               inc e
 327+ 9799 1A               ld a,(de)
 328+ 979A AE               xor (hl)
 329+ 979B 77               ld (hl),a
 330+ 979C 13               inc de
 331+ 979D
 332+ 979D 10 EF            djnz 1B
 333+ 979F
 334+ 979F ED 73 6E 8C      ld (Scanlines_album_SP),sp
 335+ 97A3 ED 7B 4C 8C      ld sp,(Stack)
 336+ 97A7 C9               ret
# file closed: Pinta_Sprites.asm
2216  97A8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 97A8              ; ******************************************************************************************************************************************************************************************
   2+ 97A8              ;
   3+ 97A8              ; 26/06/23
   4+ 97A8              ;
   5+ 97A8              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 97A8
   7+ 97A8              Draw
   8+ 97A8
   9+ 97A8 CD 4E 9A     	call Prepara_draw
  10+ 97AB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 97AC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 97AD 28 05        	jr z,2F
  13+ 97AF
  14+ 97AF 3A 1C 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 97B2 18 0C        	jr 1F
  16+ 97B4
  17+ 97B4 2A 1A 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 97B7 22 0D 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 97BA CD 46 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 97BD              ;													; _la esquina superior izquierda de la pantalla.
  21+ 97BD
  22+ 97BD CD ED 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 97C0
  24+ 97C0 3A 0A 8C     1 ld a,(Ctrl_0)
  25+ 97C3 CB 6F        	bit 5,a
  26+ 97C5 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 97C7
  28+ 97C7 CD DC 97     	call Comprueba_limite_horizontal
  29+ 97CA CD 6C 98     	call Comprueba_limite_vertical
  30+ 97CD
  31+ 97CD              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 97CD              ; -----------------------
  33+ 97CD              ; -----------------------
  34+ 97CD              ; -----------------------
  35+ 97CD
  36+ 97CD CD C2 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 97D0 CD F9 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 97D3
  39+ 97D3 3A 0A 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 97D6 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 97D8 32 0A 8C     	ld (Ctrl_0),a
  42+ 97DB
  43+ 97DB C9           	ret
  44+ 97DC
  45+ 97DC              ; *******************************************************************************************************************************************************************************************
  46+ 97DC              ;	21/01/23
  47+ 97DC              ;
  48+ 97DC              ; 	Comprueba_limite_horizontal.
  49+ 97DC              ;
  50+ 97DC              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 97DC              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 97DC              ;
  53+ 97DC              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 97DC              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 97DC              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 97DC              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 97DC
  58+ 97DC
  59+ 97DC
  60+ 97DC 3A 0A 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 97DF CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 97E1 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 97E3 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 97E5 32 0A 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 97E8 18 09            jr 6F
  66+ 97EA CB 5F        1 bit 3,a
  67+ 97EC 28 0A            jr z,2F
  68+ 97EE E6 F7            and $f7
  69+ 97F0 32 0A 8C         ld (Ctrl_0),a
  70+ 97F3 CD 46 99     6 call Inicializacion
  71+ 97F6 18 5B            jr 5F
  72+ 97F8 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 97F9
  74+ 97F9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 97F9              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 97F9
  77+ 97F9 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 97FA 2A 1E 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 97FD CD 47 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9800 67           	ld h,a
  81+ 9801 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9802 CD 47 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9805 67           	ld h,a
  84+ 9806 A7           	and a
  85+ 9807 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9809 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 980A 3A 1C 8C     	ld a,(Cuad_objeto)
  88+ 980D FE 02        	cp 2
  89+ 980F 38 1E        	jr c,3F
  90+ 9811 28 1C        	jr z,3F
  91+ 9813 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9814 28 23            jr z,7F
  93+ 9816 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9818 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 981A E1           	pop hl
  96+ 981B
  97+ 981B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 981B              ; _para indicar con E="2" en caso necesario.
  99+ 981B
 100+ 981B E5               push hl
 101+ 981C C5               push bc
 102+ 981D CD 47 95     	call calcula_tercio
 103+ 9820 FE 01        	cp 1
 104+ 9822 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9824 CD 54 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9827 28 26            jr z,9F
 107+ 9829 38 24            jr c,9F
 108+ 982B 1E 00        11 ld e,0
 109+ 982D 18 22            jr 8F
 110+ 982F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9830 28 07        	jr z, 7F
 112+ 9832 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9834 1E 00         	ld e,0
 114+ 9836 E1           	pop hl
 115+ 9837 18 04        	jr 4F
 116+ 9839 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 983B 18 15            jr 10F
 118+ 983D
 119+ 983D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 983D              ; _para indicar con E="2" en caso necesario.
 121+ 983D
 122+ 983D E5           4 push hl
 123+ 983E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 983F CD 47 95     	call calcula_tercio
 125+ 9842 FE 01        	cp 1
 126+ 9844 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9846 CD 54 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9849 28 04            jr z,9F
 129+ 984B 30 02            jr nc,9F
 130+ 984D 18 02        	jr 8F
 131+ 984F 1E 02        9 ld e,2
 132+ 9851 C1           8 pop bc
 133+ 9852 E1           10 pop hl
 134+ 9853 C9           5 ret
 135+ 9854
 136+ 9854              ; --------------------
 137+ 9854              ;
 138+ 9854              ; 25/08/22
 139+ 9854
 140+ 9854 CD 47 95     Comprueba_centro call calcula_tercio
 141+ 9857 67               ld h,a
 142+ 9858 08           	ex af,af
 143+ 9859 FE 02        	cp 2
 144+ 985B 38 07        	jr c,1F
 145+ 985D 28 05        	jr z,1F
 146+ 985F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9862 18 03        	jr 2F
 148+ 9864 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9867 08           2 ex af,af
 150+ 9868 A7               and a
 151+ 9869 ED 42            sbc hl,bc
 152+ 986B C9               ret
 153+ 986C
 154+ 986C              ; *********************************************************************************************************************************************************************************************
 155+ 986C              ;
 156+ 986C              ;   16/8/22
 157+ 986C              ;
 158+ 986C              ;	Comprueba_limite_vertical
 159+ 986C              ;
 160+ 986C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 986C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 986C              ;
 163+ 986C
 164+ 986C 2A 0D 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 986F 7D           	ld a,l
 166+ 9870 E6 1F        	and $1F
 167+ 9872 57           	ld d,a
 168+ 9873 3A 20 8C     	ld a,(Limite_vertical)
 169+ 9876 BA           	cp d 											; Límite - Posición.
 170+ 9877 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9878 3A 1C 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 987B CB 47        	bit 0,a
 173+ 987D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 987F
 175+ 987F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 987F
 177+ 987F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9880 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9882
 180+ 9882              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9882              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9882
 183+ 9882 3A FE 8B         ld a,(Coordenada_X)
 184+ 9885 16 0F            ld d,Centro_izquierda
 185+ 9887 A7               and a
 186+ 9888 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9889 28 1E            jr z,3F
 188+ 988B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 988D              ;                                                    ; _salimos sin modificar nada.
 190+ 988D 18 0E            jr 2F
 191+ 988F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9890 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9892
 194+ 9892              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9892              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9892
 197+ 9892 3A FE 8B         ld a,(Coordenada_X)
 198+ 9895 16 10            ld d,Centro_derecha
 199+ 9897 A7               and a
 200+ 9898 92               sub d
 201+ 9899 28 0E            jr z,3F
 202+ 989B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 989D              ;                                                    ; _salimos sin modificar nada.
 204+ 989D CB 43        2 bit 0,e
 205+ 989F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 98A1 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 98A2 CD 36 99         call Modificaccionne
 208+ 98A5 C1           	pop bc
 209+ 98A6 CD 46 99         call Inicializacion
 210+ 98A9 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 98AA
 212+ 98AA              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 98AA
 214+ 98AA C5           4 push bc
 215+ 98AB 01 0C 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 98AE 0A           	ld a,(bc)
 217+ 98AF 3D           	dec a
 218+ 98B0 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 98B1 7D           	ld a,l
 220+ 98B2 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 98B3 CB 47        	bit 0,a
 222+ 98B5 28 03        	jr z,5F
 223+ 98B7 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 98B8 18 2E        	jr 7F
 225+ 98BA
 226+ 98BA              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 98BA
 228+ 98BA 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 98BB F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 98BC 3A 0A 8C     	ld a,(Ctrl_0)
 231+ 98BF CB 4F        	bit 1,a
 232+ 98C1 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 98C3 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 98C4
 235+ 98C4              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 98C4
 237+ 98C4 1C               inc e
 238+ 98C5 1D               dec e
 239+ 98C6 20 07            jr nz,12F
 240+ 98C8 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 98C9 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 98CA 22 0D 8C     	ld (Posicion_actual),hl
 243+ 98CD 18 44        13 jr 9F
 244+ 98CF CB 43        12 bit 0,e
 245+ 98D1 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 98D3              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 98D3 C1           	pop bc
 248+ 98D4 18 D3        	jr 3B
 249+ 98D6 80           14 add b
 250+ 98D7 6F               ld l,a
 251+ 98D8 22 0D 8C     	ld (Posicion_actual),hl
 252+ 98DB CD 36 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 98DE 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 98E0 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 98E2 32 0A 8C         ld (Ctrl_0),a
 256+ 98E5 F1           	pop af
 257+ 98E6 18 2B        	jr 9F
 258+ 98E8
 259+ 98E8              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 98E8
 261+ 98E8 F5           7 push af
 262+ 98E9 3A 0A 8C     	ld a,(Ctrl_0)
 263+ 98EC CB 47        	bit 0,a
 264+ 98EE 20 1D        	jr nz,8F
 265+ 98F0 F1           	pop af
 266+ 98F1
 267+ 98F1              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 98F1
 269+ 98F1 1C           	inc e
 270+ 98F2 1D               dec e
 271+ 98F3 20 07            jr nz,10F
 272+ 98F5 90           	sub b
 273+ 98F6 6F               ld l,a
 274+ 98F7 22 0D 8C     	ld (Posicion_actual),hl
 275+ 98FA 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 98FC              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 98FC CB 43        10 bit 0,e
 278+ 98FE 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9900              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9900 C1           	pop bc
 281+ 9901 18 A6        	jr 3B
 282+ 9903 90           16 sub b
 283+ 9904 6F               ld l,a
 284+ 9905 22 0D 8C     	ld (Posicion_actual),hl
 285+ 9908 CD 36 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 990B 18 06            jr 9F
 287+ 990D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 990F 32 0A 8C         ld (Ctrl_0),a
 289+ 9912 F1           	pop af
 290+ 9913 C1           9 pop bc
 291+ 9914 1E 00        	ld e,0
 292+ 9916 CD 46 99         call Inicializacion
 293+ 9919 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 991A 08           	ex af,af
 295+ 991B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 991C 18 8B            jr 3B
 297+ 991E
 298+ 991E              ; --------------------
 299+ 991E
 300+ 991E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9920 CD 69 9A     1 call PreviousScan
 302+ 9923 10 FB            djnz 1B
 303+ 9925 22 0D 8C     	ld (Posicion_actual),hl
 304+ 9928 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9929 C9           	ret
 306+ 992A
 307+ 992A              ; --------------------
 308+ 992A
 309+ 992A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 992C CD 5A 9A     1 call NextScan
 311+ 992F 10 FB            djnz 1B
 312+ 9931 22 0D 8C     	ld (Posicion_actual),hl
 313+ 9934 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9935 C9           	ret
 315+ 9936
 316+ 9936              ; --------------------
 317+ 9936              ;
 318+ 9936              ;	22/01/23
 319+ 9936              ;
 320+ 9936              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9936              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9936              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9936
 324+ 9936
 325+ 9936              Modificaccionne
 326+ 9936
 327+ 9936 3A 1C 8C     	ld a,(Cuad_objeto)
 328+ 9939 FE 02        	cp 2
 329+ 993B CC 1E 99         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 993E DC 1E 99         call c,Modifica_Pos_actual
 331+ 9941 C8           	ret z
 332+ 9942 CD 2A 99         call Modifica_Pos_actual2
 333+ 9945 C9               ret
 334+ 9946
 335+ 9946              ; *************************************************************************************************************************************************************************************************
 336+ 9946              ;
 337+ 9946              ;	13/8/22
 338+ 9946              ;
 339+ 9946              ;	Inicializacion
 340+ 9946              ;
 341+ 9946              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9946              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9946              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9946              ;
 345+ 9946              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9946              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9946              ;	_ desaparece/aparece.
 348+ 9946
 349+ 9946              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9946              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9946              ;
 352+ 9946              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9946              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9946              ; 		   [E] ="0"
 355+ 9946
 356+ 9946              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9946
 358+ 9946 CD 47 95     Inicializacion call calcula_tercio
 359+ 9949 28 36        	jr z,primit
 360+ 994B E6 02        	and 2
 361+ 994D 20 07        	jr nz,segmit
 362+ 994F 7D           	ld a,l
 363+ 9950 FE 7F        	cp $7f
 364+ 9952 38 2D        	jr c,primit
 365+ 9954 28 2B        	jr z,primit
 366+ 9956 CD BC 99     segmit call column
 367+ 9959 38 13        	jr c,tercuad
 368+ 995B 3E 04        cuarcuad ld a,4
 369+ 995D 32 1C 8C     	ld (Cuad_objeto),a
 370+ 9960 21 20 48     	ld hl,$4820
 371+ 9963 22 1E 8C     	ld (Limite_horizontal),hl
 372+ 9966 21 20 8C     	ld hl,Limite_vertical
 373+ 9969 36 0D        	ld (hl),$0d
 374+ 996B 08           	ex af,af
 375+ 996C 18 3C        	jr 1F
 376+ 996E              tercuad
 377+ 996E 3E 03        	ld a,3
 378+ 9970 32 1C 8C     	ld (Cuad_objeto),a
 379+ 9973 21 20 48     	ld hl,$4820
 380+ 9976 22 1E 8C     	ld (Limite_horizontal),hl
 381+ 9979 21 20 8C     	ld hl,Limite_vertical
 382+ 997C 36 12        	ld (hl),$12
 383+ 997E 08           	ex af,af
 384+ 997F 18 29        	jr 1F
 385+ 9981 CD BC 99     primit call column
 386+ 9984 38 13        	jr c, primcuad
 387+ 9986              segcuad
 388+ 9986 3E 02        	ld a,2
 389+ 9988 32 1C 8C     	ld (Cuad_objeto),a
 390+ 998B 21 C0 4F     	ld hl,$4fc0
 391+ 998E 22 1E 8C     	ld (Limite_horizontal),hl
 392+ 9991 21 20 8C     	ld hl,Limite_vertical
 393+ 9994 36 0D        	ld (hl),$0d
 394+ 9996 08           	ex af,af
 395+ 9997 18 11        	jr 1F
 396+ 9999              primcuad
 397+ 9999 3E 01        	ld a,1
 398+ 999B 32 1C 8C     	ld (Cuad_objeto),a
 399+ 999E 21 C0 4F     	ld hl,$4fc0
 400+ 99A1 22 1E 8C     	ld (Limite_horizontal),hl
 401+ 99A4 21 20 8C     	ld hl,Limite_vertical
 402+ 99A7 36 12        	ld (hl),$12
 403+ 99A9 08           	ex af,af
 404+ 99AA
 405+ 99AA C5           1 push bc
 406+ 99AB E5           	push hl
 407+ 99AC D5           	push de
 408+ 99AD
 409+ 99AD 2A 0D 8C     	ld hl,(Posicion_actual)
 410+ 99B0 CD 65 95     	call Genera_coordenadas
 411+ 99B3
 412+ 99B3 D1           	pop de
 413+ 99B4 E1           	pop hl
 414+ 99B5 C1           	pop bc
 415+ 99B6
 416+ 99B6 21 0A 8C     	ld hl,Ctrl_0
 417+ 99B9 CB EE        	set 5,(hl)
 418+ 99BB C9           	ret
 419+ 99BC
 420+ 99BC              ; ------------------------------------------------------------------------------------------------------------------
 421+ 99BC
 422+ 99BC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 99BC              ;
 424+ 99BC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 99BC
 426+ 99BC 7D           column ld a,l
 427+ 99BD E6 1F        	and $1f
 428+ 99BF FE 10         	cp $10
 429+ 99C1 C9            	ret
 430+ 99C2
 431+ 99C2              ; --------------------------------------------------------------------------------------------------------------------
 432+ 99C2              ;
 433+ 99C2              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 99C2              ;
 435+ 99C2              ; 14/12/22
 436+ 99C2              ;
 437+ 99C2              ;	Modifica: A y BC.
 438+ 99C2
 439+ 99C2 3A 1C 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 99C5 E6 01        	and 1
 441+ 99C7 28 17        	jr z,1F
 442+ 99C9
 443+ 99C9              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 99C9
 445+ 99C9 3A FE 8B     	ld a,(Coordenada_X)
 446+ 99CC 47           	ld b,a
 447+ 99CD 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 99CE 79           	ld a,c
 449+ 99CF 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 99D0 38 08        	jr c,2F
 451+ 99D2 47           	ld b,a
 452+ 99D3 79           	ld a,c
 453+ 99D4 90           	sub b
 454+ 99D5 32 1D 8C     	ld (Columnas),a
 455+ 99D8 18 1B        	jr 4F
 456+ 99DA 79           2 ld a,c
 457+ 99DB 32 1D 8C     	ld (Columnas),a
 458+ 99DE 18 15        	jr 4F
 459+ 99E0
 460+ 99E0              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 99E0
 462+ 99E0 3A FE 8B     1 ld a,(Coordenada_X)
 463+ 99E3 81           	add c
 464+ 99E4 3D           	dec a
 465+ 99E5 D6 1F        	sub $1f
 466+ 99E7 38 08        	jr c,3F
 467+ 99E9 47           	ld b,a
 468+ 99EA 79           	ld a,c
 469+ 99EB 90           	sub b
 470+ 99EC 32 1D 8C     	ld (Columnas),a
 471+ 99EF 18 04        	jr 4F
 472+ 99F1 79           3 ld a,c
 473+ 99F2 32 1D 8C     	ld (Columnas),a
 474+ 99F5 D9           4 exx
 475+ 99F6 4F           	ld c,a
 476+ 99F7 D9           	exx
 477+ 99F8 C9            ret
 478+ 99F9
 479+ 99F9              ; --------------------------------------------------------------------------------------------------------------------
 480+ 99F9              ;
 481+ 99F9              ;   19/7/23
 482+ 99F9              ;
 483+ 99F9              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 99F9              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 99F9              ;
 486+ 99F9              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 99F9              ;			HL e IY Contienen (Puntero_objeto).
 488+ 99F9              ;
 489+ 99F9              ;	DESTRUYE: HL,B Y A.
 490+ 99F9
 491+ 99F9 3A 1C 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 99FC FE 02        	cp 2
 493+ 99FE 38 18        	jr c,1F
 494+ 9A00 28 16        	jr z,1F
 495+ 9A02 E6 01        	and 1
 496+ 9A04 28 0D        	jr z,3F
 497+ 9A06
 498+ 9A06              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9A06
 500+ 9A06 CD 42 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9A09
 502+ 9A09 7D           9 ld a,l
 503+ 9A0A E6 1F        	and $1f
 504+ 9A0C 28 2A        	jr z,7F
 505+ 9A0E 2B           	dec hl
 506+ 9A0F 10 F8        	djnz 9B
 507+ 9A11 18 25        	jr 7F
 508+ 9A13
 509+ 9A13              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9A13
 511+ 9A13 2A 0D 8C     3 ld hl,(Posicion_actual)
 512+ 9A16 18 20        	jr 7F
 513+ 9A18
 514+ 9A18 28 14        1 jr z,2F
 515+ 9A1A
 516+ 9A1A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9A1A
 518+ 9A1A CD 42 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9A1D
 520+ 9A1D 7D           4 ld a,l
 521+ 9A1E E6 1F        	and $1f
 522+ 9A20 28 03        	jr z,6F
 523+ 9A22 2B           	dec hl
 524+ 9A23 10 F8        	djnz 4B
 525+ 9A25 06 0F        6 ld b,15
 526+ 9A27 CD 69 9A     5 call PreviousScan
 527+ 9A2A 10 FB        	djnz 5B
 528+ 9A2C 18 0A        	jr 7F
 529+ 9A2E
 530+ 9A2E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9A2E
 532+ 9A2E CD 42 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9A31 06 0F        	ld b,15
 534+ 9A33 CD 69 9A     8 call PreviousScan
 535+ 9A36 10 FB        	djnz 8B
 536+ 9A38
 537+ 9A38 E5           7 push hl
 538+ 9A39 DD E1        	pop ix
 539+ 9A3B
 540+ 9A3B 2A 0F 8C     	ld hl,(Puntero_objeto)
 541+ 9A3E E5           	push hl
 542+ 9A3F FD E1        	pop iy
 543+ 9A41
 544+ 9A41 C9           	ret
 545+ 9A42
 546+ 9A42              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9A42              ;
 548+ 9A42              ;	2/1/23
 549+ 9A42              ;
 550+ 9A42              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9A42              ;
 552+ 9A42              ;	Tras esta rutina tenemos:
 553+ 9A42              ;
 554+ 9A42              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9A42              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9A42              ;
 557+ 9A42              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9A42
 559+ 9A42 2A 0D 8C     Operandos ld hl,(Posicion_actual)
 560+ 9A45 3A 1D 8C     	ld a,(Columnas)
 561+ 9A48 3D           	dec a
 562+ 9A49 20 01        	jr nz,1F
 563+ 9A4B 3C           	inc a
 564+ 9A4C 47           1 ld b,a
 565+ 9A4D C9           	ret
 566+ 9A4E
 567+ 9A4E              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9A4E              ;
 569+ 9A4E              ;	Prepara_draw
 570+ 9A4E              ;
 571+ 9A4E              ;	Es una rutina de carga.
 572+ 9A4E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9A4E              ;
 574+ 9A4E              ;	FUNCIONAMIENTO:
 575+ 9A4E              ;
 576+ 9A4E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9A4E              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9A4E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9A4E              ;
 580+ 9A4E              ;	DESTRUYE:
 581+ 9A4E              ;
 582+ 9A4E              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9A4E
 584+ 9A4E 21 0B 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9A51 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9A52 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9A53 4E           	ld c,(hl)
 588+ 9A54 2A 0D 8C     	ld hl,(Posicion_actual)
 589+ 9A57 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9A59 C9           	ret
 591+ 9A5A
 592+ 9A5A              ;----------------------------------------------------------------------------------------------------------------
 593+ 9A5A              ;
 594+ 9A5A              ;	5/08/22
 595+ 9A5A              ;
 596+ 9A5A              ;   NextScan.
 597+ 9A5A              ;
 598+ 9A5A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9A5A              ;
 600+ 9A5A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9A5A              ;
 602+ 9A5A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9A5A              ;
 604+ 9A5A              ;       DESTRUIDOS: AF y HL !!!
 605+ 9A5A              ;
 606+ 9A5A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9A5A              ;
 608+ 9A5A
 609+ 9A5A 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9A5B 7C               ld a,h
 611+ 9A5C E6 07            and 7
 612+ 9A5E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9A5F
 614+ 9A5F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9A60 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A62 6F               ld l,a
 617+ 9A63 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A64
 619+ 9A64 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A65 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A67 67               ld h,a
 622+ 9A68 C9               ret
 623+ 9A69
 624+ 9A69              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A69              ;
 626+ 9A69              ;	5/08/22
 627+ 9A69              ;
 628+ 9A69              ;   PreviousScan.
 629+ 9A69              ;
 630+ 9A69              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A69              ;
 632+ 9A69              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A69              ;
 634+ 9A69              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A69              ;
 636+ 9A69              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A69              ;
 638+ 9A69              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A69              ;
 640+ 9A69
 641+ 9A69 7C           PreviousScan ld a,h
 642+ 9A6A 25               dec h               ; Dec H.
 643+ 9A6B E6 07            and 7
 644+ 9A6D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A6E
 646+ 9A6E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A6F D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A71 6F               ld l,a
 649+ 9A72 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A73
 651+ 9A73 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A74 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A76 67               ld h,a
 654+ 9A77 C9               ret
 655+ 9A78
 656+ 9A78
 657+ 9A78
 658+ 9A78
 659+ 9A78
 660+ 9A78
 661+ 9A78
 662+ 9A78
 663+ 9A78
 664+ 9A78
 665+ 9A78
 666+ 9A78
# file closed: Draw_XOR.asm
2217  9A78              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A78
   2+ 9A78              ; ******************************************************************************************************************************************************************************************
   3+ 9A78              ;
   4+ 9A78              ;   20/05/23
   5+ 9A78              ;
   6+ 9A78              ;	Recompone_posicion_inicio
   7+ 9A78              ;
   8+ 9A78              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A78              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A78              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A78              ;	_ a una u otra rutina.
  12+ 9A78
  13+ 9A78              Recompone_posicion_inicio
  14+ 9A78
  15+ 9A78 2A 1A 8C     	ld hl,(Posicion_inicio)
  16+ 9A7B 7D           	ld a,l
  17+ 9A7C E6 1F        	and $1f
  18+ 9A7E 28 16        	jr z,1F
  19+ 9A80
  20+ 9A80 FE 1F        	cp $1f
  21+ 9A82 28 0D        	jr z,3F
  22+ 9A84
  23+ 9A84 21 09 8C     	ld hl,Ctrl_2
  24+ 9A87 CB C6        	set 0,(hl)
  25+ 9A89 2A 0F 8C     	ld hl,(Puntero_objeto)
  26+ 9A8C 22 3B 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A8F 18 08        	jr 2F
  28+ 9A91
  29+ 9A91 CD 3F 9C     3 call Mov_left
  30+ 9A94 18 03        	jr 2F
  31+ 9A96
  32+ 9A96 CD 1C 9B     1 call Mov_right
  33+ 9A99 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A9C 22 0F 8C     	ld (Puntero_objeto),hl
  35+ 9A9F C9           	ret
  36+ 9AA0
  37+ 9AA0              ; ******************************************************************************************************************************************************************************************
  38+ 9AA0              ;
  39+ 9AA0              ;   27/05/23
  40+ 9AA0              ;
  41+ 9AA0              ;	Mov_down
  42+ 9AA0              ;
  43+ 9AA0              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9AA0              ;
  45+ 9AA0              ;
  46+ 9AA0              Mov_down
  47+ 9AA0
  48+ 9AA0 CD 0A 9B     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9AA3              ;																	; _ repone (Puntero_objeto).
  50+ 9AA3 21 0A 8C     	ld hl,Ctrl_0
  51+ 9AA6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9AA8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9AA8              ; 																	; _ en el caso de que no lo haya.
  54+ 9AA8 3A 25 8C     	ld a,(Vel_down)
  55+ 9AAB 47           	ld b,a
  56+ 9AAC 2A 0D 8C         ld hl,(Posicion_actual)
  57+ 9AAF CD 47 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9AB2 E6 02        	and 2
  59+ 9AB4 28 17        	jr z,1F
  60+ 9AB6
  61+ 9AB6              ; Nos encontramos en el último tercio de pantalla.
  62+ 9AB6              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9AB6
  64+ 9AB6 7C           	ld a,h
  65+ 9AB7 FE 57        	cp $57
  66+ 9AB9 20 12        	jr nz,1F
  67+ 9ABB
  68+ 9ABB 7D           	ld a,l
  69+ 9ABC C6 20        	add $20
  70+ 9ABE 30 0D        	jr nc,1F
  71+ 9AC0
  72+ 9AC0              ; ------------------------------
  73+ 9AC0              ;
  74+ 9AC0              ;	12/01/24
  75+ 9AC0
  76+ 9AC0              ;	call Reaparece_arriba
  77+ 9AC0 CD CC 9D     	call Reinicio
  78+ 9AC3
  79+ 9AC3              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9AC3
  81+ 9AC3 3A 74 8C     	ld a,(Ctrl_3)
  82+ 9AC6 CB CF        	set 1,a
  83+ 9AC8 32 74 8C     	ld (Ctrl_3),a
  84+ 9ACB
  85+ 9ACB 18 08        	jr 3F
  86+ 9ACD              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9ACD              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9ACD              ; ------------------------------
  89+ 9ACD
  90+ 9ACD CD 5A 9A     1 call NextScan
  91+ 9AD0 22 0D 8C     	ld (Posicion_actual),hl
  92+ 9AD3 10 DA            djnz 2B
  93+ 9AD5 CD 65 95     3 call Genera_coordenadas
  94+ 9AD8 C9           	ret
  95+ 9AD9
  96+ 9AD9              ; ******************************************************************************************************************************************************************************************
  97+ 9AD9              ;
  98+ 9AD9              ;   27/05/23
  99+ 9AD9              ;
 100+ 9AD9              ;	Mov_up
 101+ 9AD9              ;
 102+ 9AD9              ; 	Mueve el Sprite hacia arriba.
 103+ 9AD9              ;
 104+ 9AD9              ;
 105+ 9AD9              Mov_up
 106+ 9AD9
 107+ 9AD9 CD 0A 9B     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9ADC              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9ADC 21 0A 8C     	ld hl,Ctrl_0
 110+ 9ADF CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9AE1              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9AE1              ; 																		; _ en el caso de que no lo haya.
 113+ 9AE1 3A 24 8C     	ld a,(Vel_up)
 114+ 9AE4 47           	ld b,a
 115+ 9AE5 2A 0D 8C     	ld hl,(Posicion_actual)
 116+ 9AE8 CD 47 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9AEB A7           	and a
 118+ 9AEC 20 10        	jr nz,1F
 119+ 9AEE
 120+ 9AEE              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9AEE              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9AEE
 123+ 9AEE 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9AEF FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9AF1 20 0B            jr nz,1F
 126+ 9AF3 7D               ld a,l
 127+ 9AF4 D6 20            sub $20
 128+ 9AF6 30 06            jr nc,1F
 129+ 9AF8 25               dec h
 130+ 9AF9
 131+ 9AF9              ; -----------------------------
 132+ 9AF9 CD AD 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9AFC              ;	call Reinicio
 134+ 9AFC              ; -----------------------------
 135+ 9AFC
 136+ 9AFC 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9AFE CD 69 9A     1 call PreviousScan
 138+ 9B01 22 0D 8C     	ld (Posicion_actual),hl
 139+ 9B04 10 E2            djnz 3B
 140+ 9B06 CD 65 95     2 call Genera_coordenadas
 141+ 9B09 C9           	ret
 142+ 9B0A
 143+ 9B0A              ; -----------------------------
 144+ 9B0A              ;
 145+ 9B0A              ;	27/5/23
 146+ 9B0A              ;
 147+ 9B0A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9B0A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9B0A              ;
 150+ 9B0A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9B0A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9B0A              ;
 153+ 9B0A              ;	Modifica: A y (Puntero_objeto).
 154+ 9B0A
 155+ 9B0A 3A 09 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9B0D CB 47        	bit 0,a
 157+ 9B0F C8           	ret z
 158+ 9B10 CB 87        	res 0,a
 159+ 9B12 32 09 8C     	ld (Ctrl_2),a
 160+ 9B15 2A 3B 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9B18 22 0F 8C     	ld (Puntero_objeto),hl
 162+ 9B1B C9           	ret
 163+ 9B1C
 164+ 9B1C              ; ******************************************************************************************************************************************************************************************
 165+ 9B1C              ;
 166+ 9B1C              ;	19/10/22
 167+ 9B1C              ;
 168+ 9B1C              ;	Mov_right.
 169+ 9B1C              ;
 170+ 9B1C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9B1C              ;
 172+ 9B1C
 173+ 9B1C 3A 0A 8C     Mov_right ld a,(Ctrl_0)
 174+ 9B1F CB 77        	bit 6,a
 175+ 9B21 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9B23
 177+ 9B23 CD 5B 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9B26 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9B27
 180+ 9B27 21 0A 8C     	ld hl,Ctrl_0
 181+ 9B2A CB E6        	set 4,(hl)
 182+ 9B2C 18 52        	jr 8F
 183+ 9B2E
 184+ 9B2E 21 0A 8C     10 ld hl,Ctrl_0
 185+ 9B31 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9B33              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9B33              ; 																	; _ en el caso de que no lo haya.
 188+ 9B33 3A FE 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9B36 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9B38 20 46        	jr nz,8F
 191+ 9B3A
 192+ 9B3A 3A 11 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9B3D A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9B3E 28 40        	jr z,8F
 195+ 9B40
 196+ 9B40              ; ---------- ---------- ----------
 197+ 9B40              ;
 198+ 9B40              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9B40
 200+ 9B40 3A 23 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9B43 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9B45 28 11        	jr z,1F
 203+ 9B47 38 06        	jr c,6F
 204+ 9B49 FE 04        	cp 4
 205+ 9B4B 28 14        	jr z,7F
 206+ 9B4D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9B4F
 208+ 9B4F              ; ---------- ---------- ----------
 209+ 9B4F              ;
 210+ 9B4F              ; Perfiles de velocidad
 211+ 9B4F              ;
 212+ 9B4F
 213+ 9B4F 3A 11 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9B52 FE FE        	cp $fe
 215+ 9B54 20 2A        	jr nz,8F
 216+ 9B56 18 10        	jr 3F
 217+ 9B58 3A 11 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9B5B FE FD        	cp $fd
 219+ 9B5D 20 21        	jr nz,8F
 220+ 9B5F 18 07        	jr 3F
 221+ 9B61 3A 11 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B64 FE FB        	cp $fb
 223+ 9B66 20 18        	jr nz,8F
 224+ 9B68
 225+ 9B68              ; ---------- ---------- ----------
 226+ 9B68
 227+ 9B68              3
 228+ 9B68 CD 9B 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B6B              ;	call Reinicio
 230+ 9B6B
 231+ 9B6B              ; ---------- ---------- ----------
 232+ 9B6B              ;
 233+ 9B6B              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B6B
 235+ 9B6B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B6D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B6E CD 87 9B     	call DESPLZ_DER
 238+ 9B71 C1           	pop bc
 239+ 9B72 10 F9        	djnz 5B
 240+ 9B74 2A 0D 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B77 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B78 22 0D 8C     	ld (Posicion_actual),hl
 243+ 9B7B CD 65 95     	call Genera_coordenadas
 244+ 9B7E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B80
 246+ 9B80              ; ---------- ---------- ----------
 247+ 9B80
 248+ 9B80 2A 0D 8C     8 ld hl,(Posicion_actual)
 249+ 9B83 CD 87 9B     	call DESPLZ_DER
 250+ 9B86 C9           2 ret
 251+ 9B87
 252+ 9B87              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B87              ;
 254+ 9B87              ;	22/9/22
 255+ 9B87              ;
 256+ 9B87
 257+ 9B87 CD 96 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B8A CD E2 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B8D CD 0B 9C         call Ciclo_completo
 260+ 9B90 21 0A 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B93 CB FE        	set 7,(hl)
 262+ 9B95 C9           	ret
 263+ 9B96
 264+ 9B96              ; ******************************************************************************************************************************************************************************************
 265+ 9B96              ;	15/02/23
 266+ 9B96              ;
 267+ 9B96
 268+ 9B96 3A 23 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B99 47           	ld b,a
 270+ 9B9A 2A 16 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B9D 23           1 inc hl
 272+ 9B9E 23           	inc hl
 273+ 9B9F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9BA1 22 16 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9BA4 CD 50 91     	call Extrae_address
 276+ 9BA7 22 0F 8C     	ld (Puntero_objeto),hl
 277+ 9BAA
 278+ 9BAA              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9BAA
 280+ 9BAA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9BAA              ; Cuántos movimientos hemos hecho ??
 282+ 9BAA              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9BAA
 284+ 9BAA 2A 12 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9BAD EB           	ex de,hl
 286+ 9BAE A7           	and a
 287+ 9BAF ED 52        	sbc hl,de
 288+ 9BB1 CB 3D        	srl l
 289+ 9BB3 3E 08        6 ld a,8
 290+ 9BB5 95           	sub l
 291+ 9BB6 30 1E        	jr nc,3F
 292+ 9BB8
 293+ 9BB8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9BB8              ; B="0".
 295+ 9BB8
 296+ 9BB8 04           4 inc b
 297+ 9BB9 3C           	inc a
 298+ 9BBA 20 FC        	jr nz,4B
 299+ 9BBC 78           	ld a,b
 300+ 9BBD 08           	ex af,af
 301+ 9BBE 2A 12 8C     	ld hl,(Indice_Sprite_der)
 302+ 9BC1 23           5 inc hl
 303+ 9BC2 23           	inc hl
 304+ 9BC3 10 FC        	djnz 5B
 305+ 9BC5 22 16 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9BC8 CD 50 91     	call Extrae_address
 307+ 9BCB 22 0F 8C     	ld (Puntero_objeto),hl
 308+ 9BCE
 309+ 9BCE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9BCE              ; _(Posicion_actual).
 311+ 9BCE
 312+ 9BCE 21 0D 8C     	ld hl,Posicion_actual
 313+ 9BD1 34           	inc (hl)
 314+ 9BD2 08               ex af,af
 315+ 9BD3 6F           	ld l,a
 316+ 9BD4 18 DD        	jr 6B
 317+ 9BD6
 318+ 9BD6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9BD6
 320+ 9BD6 47           3 ld b,a
 321+ 9BD7 2A 14 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9BDA 23           2 inc hl
 323+ 9BDB 23           	inc hl
 324+ 9BDC 10 FC        	djnz 2B
 325+ 9BDE 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9BE1 C9           8 ret
 327+ 9BE2
 328+ 9BE2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9BE2              ;
 330+ 9BE2              ;	24/7/22
 331+ 9BE2              ;
 332+ 9BE2              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9BE2              ;
 334+ 9BE2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9BE2              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9BE2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9BE2
 338+ 9BE2 3A 11 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9BE5 A7           	and a
 340+ 9BE6 20 1F        	jr nz,1F
 341+ 9BE8 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9BEA 32 11 8C         ld (CTRL_DESPLZ),a
 343+ 9BED
 344+ 9BED 21 0C 8C     	ld hl,Columns
 345+ 9BF0 34           	inc (hl)
 346+ 9BF1 3A 1C 8C     	ld a,(Cuad_objeto)
 347+ 9BF4 E6 01        	and 1
 348+ 9BF6 28 0F        	jr z,1F
 349+ 9BF8 2A 0D 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9BFB 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9BFC 22 0D 8C     	ld (Posicion_actual),hl
 352+ 9BFF CD 65 95     	call Genera_coordenadas
 353+ 9C02 CD 67 9D     	call Inc_CTRL_DESPLZ
 354+ 9C05 18 03        	jr 2F
 355+ 9C07 CD 67 9D     1 call Inc_CTRL_DESPLZ
 356+ 9C0A C9           2 ret
 357+ 9C0B
 358+ 9C0B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9C0B              ;
 360+ 9C0B              ;	24/7/22
 361+ 9C0B              ;
 362+ 9C0B              ;	Ciclo_completo.
 363+ 9C0B              ;
 364+ 9C0B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9C0B              ;
 366+ 9C0B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9C0B              ; 	Decrementamos (Columns).
 368+ 9C0B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9C0B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9C0B
 371+ 9C0B
 372+ 9C0B 3A 11 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9C0E FE FF        	cp $ff
 374+ 9C10 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9C12 E6 F0        	and $f0
 376+ 9C14 20 28        	jr nz,3F
 377+ 9C16
 378+ 9C16              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9C16
 380+ 9C16 3A 11 8C     	ld a,(CTRL_DESPLZ)
 381+ 9C19 47           	ld b,a
 382+ 9C1A 3E F8        	ld a,$f8
 383+ 9C1C 80           	add b
 384+ 9C1D 32 11 8C     	ld (CTRL_DESPLZ),a
 385+ 9C20 18 1C        	jr 3F
 386+ 9C22 21 0C 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9C25 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9C26 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9C27 32 11 8C     	ld (CTRL_DESPLZ),a
 390+ 9C2A 3A 1C 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9C2D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9C2F 20 0A        	jr nz,2F
 393+ 9C31 2A 0D 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9C34 23           	inc hl
 395+ 9C35 22 0D 8C     	ld (Posicion_actual),hl
 396+ 9C38 CD 65 95     	call Genera_coordenadas
 397+ 9C3B
 398+ 9C3B              ; Inicia el puntero de Sprite.
 399+ 9C3B
 400+ 9C3B CD 65 91     2 call Inicia_puntero_objeto_der
 401+ 9C3E C9           3 ret
 402+ 9C3F
 403+ 9C3F              ; ******************************************************************************************************************************************************************************************
 404+ 9C3F              ;
 405+ 9C3F              ;	15/02/23
 406+ 9C3F              ;
 407+ 9C3F              ;	Mov_left.
 408+ 9C3F              ;
 409+ 9C3F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9C3F              ;
 411+ 9C3F              Mov_left
 412+ 9C3F
 413+ 9C3F 21 0A 8C     	ld hl,Ctrl_0
 414+ 9C42 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9C44              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9C44              ; 																	; _ en el caso de que no lo haya.
 417+ 9C44 3A 0A 8C     	ld a,(Ctrl_0)
 418+ 9C47 CB 77        	bit 6,a
 419+ 9C49 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9C4B
 421+ 9C4B CD 61 9D     	call Stop_Amadeus_left
 422+ 9C4E C8           	ret z
 423+ 9C4F 20 4A        	jr nz,8F
 424+ 9C51
 425+ 9C51 3A FE 8B     11 ld a,(Coordenada_X)
 426+ 9C54 A7           	and a
 427+ 9C55 20 44        	jr nz,8F
 428+ 9C57
 429+ 9C57 3A 11 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9C5A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9C5B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9C5D
 433+ 9C5D              ; ---------- ---------- ----------
 434+ 9C5D
 435+ 9C5D 3A 22 8C     	ld a,(Vel_left)
 436+ 9C60 FE 02        	cp 2
 437+ 9C62 28 0F        	jr z,1F
 438+ 9C64 38 04        	jr c,6F
 439+ 9C66 FE 04        	cp 4
 440+ 9C68 28 12        	jr z,7F
 441+ 9C6A
 442+ 9C6A              ; ---------- ---------- ----------
 443+ 9C6A
 444+ 9C6A 3A 11 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C6D FE F8        	cp $f8
 446+ 9C6F 20 2A        	jr nz,8F
 447+ 9C71 18 10        	jr 4F
 448+ 9C73 3A 11 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C76 FE F9        	cp $f9
 450+ 9C78 20 21        	jr nz,8F
 451+ 9C7A 18 07        	jr 4F
 452+ 9C7C 3A 11 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C7F FE FB        	cp $fb
 454+ 9C81 20 18        	jr nz,8F
 455+ 9C83
 456+ 9C83              ; ---------- ---------- ----------
 457+ 9C83
 458+ 9C83              4
 459+ 9C83 CD 89 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C86              ;	call Reinicio
 461+ 9C86
 462+ 9C86              ; ---------- ---------- ----------
 463+ 9C86
 464+ 9C86 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C88 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C89
 467+ 9C89              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C89              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C89
 470+ 9C89 CD A2 9C     	call DESPLZ_IZQ
 471+ 9C8C C1           	pop bc
 472+ 9C8D 10 F9        	djnz 5B
 473+ 9C8F 2A 0D 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C92 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C93 22 0D 8C     	ld (Posicion_actual),hl
 476+ 9C96 CD 65 95     	call Genera_coordenadas
 477+ 9C99 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C9B
 479+ 9C9B              ; ---------- ---------- ----------
 480+ 9C9B
 481+ 9C9B              ; Movemos, no hay recolocación.
 482+ 9C9B
 483+ 9C9B 2A 0D 8C     8 ld hl,(Posicion_actual)
 484+ 9C9E CD A2 9C     	call DESPLZ_IZQ
 485+ 9CA1 C9           2 ret
 486+ 9CA2
 487+ 9CA2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9CA2              ;
 489+ 9CA2              ;	22/9/22
 490+ 9CA2
 491+ 9CA2              DESPLZ_IZQ
 492+ 9CA2
 493+ 9CA2 CD B1 9C     	call Desplaza_izquierda
 494+ 9CA5 CD FD 9C         call modifica_parametros_1er_DESPLZ
 495+ 9CA8 CD 25 9D     	call Ciclo_completo_2
 496+ 9CAB 21 0A 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9CAE CB BE        	res 7,(hl)
 498+ 9CB0 C9           	ret
 499+ 9CB1
 500+ 9CB1              Desplaza_izquierda
 501+ 9CB1
 502+ 9CB1 3A 22 8C     	ld a,(Vel_left)
 503+ 9CB4 47           	ld b,a
 504+ 9CB5 2A 18 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9CB8 23           1 inc hl
 506+ 9CB9 23           	inc hl
 507+ 9CBA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9CBC 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9CBF CD 50 91     	call Extrae_address
 510+ 9CC2 22 0F 8C     	ld (Puntero_objeto),hl
 511+ 9CC5
 512+ 9CC5              ; Modifica (Puntero_DESPLZ_der).
 513+ 9CC5
 514+ 9CC5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9CC5              ; Cuántos movimientos hemos hecho ??
 516+ 9CC5              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9CC5
 518+ 9CC5 2A 14 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9CC8 EB           	ex de,hl
 520+ 9CC9 A7           	and a
 521+ 9CCA ED 52        	sbc hl,de
 522+ 9CCC CB 3D        	srl l
 523+ 9CCE 3E 08        6 ld a,8
 524+ 9CD0 95           	sub l
 525+ 9CD1 30 1E        	jr nc,3F
 526+ 9CD3
 527+ 9CD3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9CD3              ; B="0".
 529+ 9CD3
 530+ 9CD3 04           4 inc b
 531+ 9CD4 3C           	inc a
 532+ 9CD5 20 FC        	jr nz,4B
 533+ 9CD7 78           	ld a,b
 534+ 9CD8 08           	ex af,af
 535+ 9CD9 2A 14 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9CDC 23           5 inc hl
 537+ 9CDD 23           	inc hl
 538+ 9CDE 10 FC        	djnz 5B
 539+ 9CE0 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9CE3 CD 50 91     	call Extrae_address
 541+ 9CE6 22 0F 8C     	ld (Puntero_objeto),hl
 542+ 9CE9
 543+ 9CE9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9CE9              ; _(Posicion_actual).
 545+ 9CE9
 546+ 9CE9 21 0D 8C     	ld hl,Posicion_actual
 547+ 9CEC 35           	dec (hl)
 548+ 9CED 08           	ex af,af
 549+ 9CEE 6F           	ld l,a
 550+ 9CEF 18 DD        	jr 6B
 551+ 9CF1
 552+ 9CF1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9CF1
 554+ 9CF1 47           3 ld b,a
 555+ 9CF2 2A 12 8C     	ld hl,(Indice_Sprite_der)
 556+ 9CF5 23           2 inc hl
 557+ 9CF6 23           	inc hl
 558+ 9CF7 10 FC        	djnz 2B
 559+ 9CF9 22 16 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9CFC C9           8 ret
 561+ 9CFD
 562+ 9CFD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9CFD              ;
 564+ 9CFD              ;	modifica_parametros_1er_DESPLZ
 565+ 9CFD              ;
 566+ 9CFD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9CFD              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9CFD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9CFD
 570+ 9CFD 3A 11 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9D00 A7           	and a
 572+ 9D01 20 1E        	jr nz,1F
 573+ 9D03 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9D04 32 11 8C         ld (CTRL_DESPLZ),a
 575+ 9D07 21 0C 8C     	ld hl,Columns
 576+ 9D0A 34           	inc (hl)
 577+ 9D0B 3A 1C 8C     	ld a,(Cuad_objeto)
 578+ 9D0E E6 01        	and 1
 579+ 9D10 20 0F        	jr nz,1F
 580+ 9D12 2A 0D 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9D15 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9D16 22 0D 8C     	ld (Posicion_actual),hl
 583+ 9D19 CD 65 95     	call Genera_coordenadas
 584+ 9D1C CD 78 9D     	call Dec_CTRL_DESPLZ
 585+ 9D1F 18 03        	jr 2F
 586+ 9D21 CD 78 9D     1 call Dec_CTRL_DESPLZ
 587+ 9D24 C9           2 ret
 588+ 9D25
 589+ 9D25              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9D25
 591+ 9D25 3A 11 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9D28 FE F7        	cp $f7
 593+ 9D2A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9D2C 30 2C        	jr nc,3F
 595+ 9D2E
 596+ 9D2E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9D2E
 598+ 9D2E 06 00        	ld b,0
 599+ 9D30 04           4 inc b
 600+ 9D31 3C           	inc a
 601+ 9D32 FE F7        	cp $f7
 602+ 9D34 20 FA        	jr nz,4B
 603+ 9D36 3E FF        	ld a,$ff
 604+ 9D38 90           	sub b
 605+ 9D39 32 11 8C     	ld (CTRL_DESPLZ),a
 606+ 9D3C 18 1C        	jr 3F
 607+ 9D3E
 608+ 9D3E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9D3E
 610+ 9D3E 21 0C 8C     1 ld hl,Columns
 611+ 9D41 35           	dec (hl)
 612+ 9D42 AF           	xor a
 613+ 9D43 32 11 8C     	ld (CTRL_DESPLZ),a
 614+ 9D46 3A 1C 8C     	ld a,(Cuad_objeto)
 615+ 9D49 E6 01        	and 1
 616+ 9D4B 28 0A        	jr z,2F
 617+ 9D4D 2A 0D 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9D50 2B           	dec hl
 619+ 9D51 22 0D 8C     	ld (Posicion_actual),hl
 620+ 9D54 CD 65 95     	call Genera_coordenadas
 621+ 9D57
 622+ 9D57              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9D57
 624+ 9D57 CD 78 91     2 call Inicia_puntero_objeto_izq
 625+ 9D5A C9           3 ret
 626+ 9D5B
 627+ 9D5B              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9D5B              ;
 629+ 9D5B              ;	19/10/22
 630+ 9D5B              ;
 631+ 9D5B              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9D5B              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9D5B
 634+ 9D5B 3A FE 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9D5E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9D60 C9           	ret
 637+ 9D61
 638+ 9D61              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D61              ;
 640+ 9D61              ;	19/10/22
 641+ 9D61              ;
 642+ 9D61              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D61              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D61
 645+ 9D61 3A FE 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D64 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D66 C9           	ret
 648+ 9D67
 649+ 9D67              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D67              ;
 651+ 9D67              ;	24/7/22
 652+ 9D67              ;
 653+ 9D67              ;	Inc_CTRL_DESPLZ
 654+ 9D67              ;
 655+ 9D67              ;
 656+ 9D67              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D67
 658+ 9D67 21 11 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D6A 3A 23 8C     	ld a,(Vel_right)
 660+ 9D6D A7           	and a
 661+ 9D6E 28 06        	jr z,1F
 662+ 9D70 47           	ld b,a
 663+ 9D71 34           3 inc (hl)
 664+ 9D72 10 FD        	djnz 3B
 665+ 9D74 18 01        	jr 2F
 666+ 9D76 34           1 inc (hl)
 667+ 9D77 C9           2 ret
 668+ 9D78
 669+ 9D78              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D78              ;
 671+ 9D78              ;	5/2/23
 672+ 9D78              ;
 673+ 9D78              ;	Dec_CTRL_DESPLZ
 674+ 9D78              ;
 675+ 9D78              ;
 676+ 9D78              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D78
 678+ 9D78 21 11 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D7B 3A 22 8C     	ld a,(Vel_left)
 680+ 9D7E A7           	and a
 681+ 9D7F 28 06        	jr z,1F
 682+ 9D81 47           	ld b,a
 683+ 9D82 35           3 dec (hl)
 684+ 9D83 10 FD        	djnz 3B
 685+ 9D85 18 01        	jr 2F
 686+ 9D87 35           1 dec (hl)
 687+ 9D88 C9           2 ret
 688+ 9D89
 689+ 9D89              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D89
 691+ 9D89 2A 0D 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D8C 01 1F 00     	ld bc,31
 693+ 9D8F A7           	and a
 694+ 9D90 ED 4A        	adc hl,bc
 695+ 9D92 22 0D 8C     	ld (Posicion_actual),hl
 696+ 9D95 21 0A 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9D98 CB C6        	set 0,(hl)
 698+ 9D9A C9           	ret
 699+ 9D9B
 700+ 9D9B              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D9B
 702+ 9D9B 2A 0D 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D9E 01 1F 00     	ld bc,31
 704+ 9DA1 A7           	and a
 705+ 9DA2 ED 42        	sbc hl,bc
 706+ 9DA4 22 0D 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9DA7 21 0A 8C     	ld hl,Ctrl_0
 708+ 9DAA CB CE        	set 1,(hl)
 709+ 9DAC C9           	ret
 710+ 9DAD
 711+ 9DAD              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9DAD
 713+ 9DAD 24           Reaparece_abajo inc h
 714+ 9DAE 01 E0 17     	ld bc,$17e0
 715+ 9DB1 A7           	and a
 716+ 9DB2 ED 4A        	adc hl,bc
 717+ 9DB4 22 0D 8C     	ld (Posicion_actual),hl
 718+ 9DB7 21 0A 8C     	ld hl,Ctrl_0
 719+ 9DBA CB D6        	set 2,(hl)
 720+ 9DBC C9           	ret
 721+ 9DBD
 722+ 9DBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9DBD
 724+ 9DBD 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9DC0 A7           	and a
 726+ 9DC1 ED 42        	sbc hl,bc
 727+ 9DC3 22 0D 8C     	ld (Posicion_actual),hl
 728+ 9DC6 21 0A 8C     	ld hl,Ctrl_0
 729+ 9DC9 CB DE        	set 3,(hl)
 730+ 9DCB C9           	ret
 731+ 9DCC
 732+ 9DCC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9DCC              ;
 734+ 9DCC              ;	15/07/23
 735+ 9DCC
 736+ 9DCC              Reinicio
 737+ 9DCC
 738+ 9DCC              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9DCC
 740+ 9DCC AF           	xor a
 741+ 9DCD 21 32 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9DD0 CD EE 9D     	call Limpia_contenido_hl
 743+ 9DD3
 744+ 9DD3 21 0D 8C     	ld hl,Posicion_actual
 745+ 9DD6 CD EE 9D     	call Limpia_contenido_hl
 746+ 9DD9
 747+ 9DD9 CD CF 93     	call Situa_Puntero_indice_mov
 748+ 9DDC CD ED 9E     	call Inicia_Puntero_mov
 749+ 9DDF
 750+ 9DDF 21 34 8C     	ld hl,Incrementa_puntero
 751+ 9DE2 06 05        	ld b,5
 752+ 9DE4 77           1 ld (hl),a
 753+ 9DE5 23           	inc hl
 754+ 9DE6 10 FC        	djnz 1B
 755+ 9DE8
 756+ 9DE8 21 09 8C     	ld hl,Ctrl_2
 757+ 9DEB CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9DED
 759+ 9DED C9           	ret
 760+ 9DEE
 761+ 9DEE 77           Limpia_contenido_hl	ld (hl),a
 762+ 9DEF 23           	inc hl
 763+ 9DF0 77           	ld (hl),a
 764+ 9DF1 C9           	ret
 765+ 9DF2
 766+ 9DF2              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9DF2              ;
 768+ 9DF2              ;	18/6/24
 769+ 9DF2              ;
 770+ 9DF2
 771+ 9DF2              Amadeus_a_izquierda
 772+ 9DF2
 773+ 9DF2              ;	Actualiza contador de movimientos.
 774+ 9DF2
 775+ 9DF2 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9DF5 35           	dec (hl)
 777+ 9DF6 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9DF8
 779+ 9DF8 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9DFB 2B           	dec hl
 781+ 9DFC 2B           	dec hl
 782+ 9DFD 2B           	dec hl
 783+ 9DFE 2B           	dec hl
 784+ 9DFF 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9E02
 786+ 9E02 21 74 8C     	ld hl,Ctrl_3
 787+ 9E05 CB EE        	set 5,(hl)
 788+ 9E07
 789+ 9E07 C9           	ret
 790+ 9E08
 791+ 9E08 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9E09 C9           	ret
 793+ 9E0A
 794+ 9E0A
 795+ 9E0A              Amadeus_a_derecha
 796+ 9E0A
 797+ 9E0A              ;	Actualiza contador de movimientos.
 798+ 9E0A
 799+ 9E0A 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9E0D 34           	inc (hl)
 801+ 9E0E 3E 7A        	ld a,$7a
 802+ 9E10 BE           	cp (hl)
 803+ 9E11 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9E13
 805+ 9E13 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9E16 23           	inc hl
 807+ 9E17 23           	inc hl
 808+ 9E18 23           	inc hl
 809+ 9E19 23           	inc hl
 810+ 9E1A 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9E1D
 812+ 9E1D 21 74 8C     	ld hl,Ctrl_3
 813+ 9E20 CB EE        	set 5,(hl)
 814+ 9E22 C9           	ret
 815+ 9E23
 816+ 9E23 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9E24 C9           	ret
# file closed: Direcciones.asm
2218  9E25              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E25              ; ----- ----- ----- ----- -----
   2+ 9E25              ;
   3+ 9E25              ;   28/12/23
   4+ 9E25
   5+ 9E25              Movimiento
   6+ 9E25
   7+ 9E25              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9E25
   9+ 9E25 3A 09 8C         ld a,(Ctrl_2)
  10+ 9E28 CB 57            bit 2,a
  11+ 9E2A 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9E2C
  13+ 9E2C 2A 30 8C         ld hl,(Puntero_mov)
  14+ 9E2F 7E               ld a,(hl)
  15+ 9E30
  16+ 9E30              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9E30
  18+ 9E30              Inicia_desplazamiento.
  19+ 9E30
  20+ 9E30              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9E30
  22+ 9E30 CD 23 9F         call Ajusta_velocidad_desplazamiento
  23+ 9E33
  24+ 9E33              ; Iniciamos (Repetimos_mov).
  25+ 9E33
  26+ 9E33 7E               ld a,(hl)
  27+ 9E34 E6 0F            and $0f
  28+ 9E36 32 36 8C         ld (Repetimos_desplazamiento),a
  29+ 9E39 32 37 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9E3C
  31+ 9E3C              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9E3C
  33+ 9E3C 23               inc hl
  34+ 9E3D 7E               ld a,(hl)
  35+ 9E3E 32 39 8C         ld (Cola_de_desplazamiento),a
  36+ 9E41 2B               dec hl
  37+ 9E42
  38+ 9E42 21 09 8C         ld hl,Ctrl_2
  39+ 9E45 CB D6            set 2,(hl)
  40+ 9E47
  41+ 9E47              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9E47              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9E47
  44+ 9E47              Desplazamiento_iniciado
  45+ 9E47
  46+ 9E47 CD F7 9E         call Aplica_desplazamiento
  47+ 9E4A
  48+ 9E4A              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9E4A
  50+ 9E4A 3A 74 8C         ld a,(Ctrl_3)
  51+ 9E4D CB 4F            bit 1,a
  52+ 9E4F C0               ret nz
  53+ 9E50
  54+ 9E50 21 36 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9E53 35               dec (hl)
  56+ 9E54 C0               ret nz
  57+ 9E55
  58+ 9E55              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9E55              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9E55              ; Analiza (Cola_de_desplazamiento).
  61+ 9E55
  62+ 9E55 3A 39 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9E58 A7               and a
  64+ 9E59 CC 4C 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9E5C 28 30            jr z,Reinicia_el_movimiento
  66+ 9E5E
  67+ 9E5E FE FF            cp $ff
  68+ 9E60 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9E62
  70+ 9E62 FE FE            cp $fe
  71+ 9E64 CC D1 9E         call z,Fijamos_bucle
  72+ 9E67 28 25            jr z,Reinicia_el_movimiento
  73+ 9E69
  74+ 9E69 FE FD            cp $fd
  75+ 9E6B 20 11            jr nz,1F
  76+ 9E6D
  77+ 9E6D              ; ---
  78+ 9E6D              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E6D
  80+ 9E6D 3A 09 8C         ld a,(Ctrl_2)
  81+ 9E70 CB 5F            bit 3,a
  82+ 9E72 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E74
  84+ 9E74              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E74
  86+ 9E74 21 09 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E77 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E79
  89+ 9E79 CD E2 9E         call Inicia_Repetimos_movimiento
  90+ 9E7C 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E7E              ; ---
  92+ 9E7E
  93+ 9E7E FE 01        1 cp 1
  94+ 9E80 CA BB 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E83
  96+ 9E83 3D               dec a
  97+ 9E84 32 39 8C         ld (Cola_de_desplazamiento),a
  98+ 9E87
  99+ 9E87 3A 37 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E8A 32 36 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E8D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E8D C9               ret
 103+ 9E8E
 104+ 9E8E              Reinicia_el_movimiento
 105+ 9E8E
 106+ 9E8E 3A 09 8C         ld a,(Ctrl_2)
 107+ 9E91 CB 5F            bit 3,a
 108+ 9E93 28 1B            jr z,2F
 109+ 9E95
 110+ 9E95              ; (Cola_de_desplazamiento)="254".
 111+ 9E95
 112+ 9E95 21 38 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E98 35               dec (hl)
 114+ 9E99 20 15            jr nz,2F
 115+ 9E9B
 116+ 9E9B              ; Fin de las repeticiones del último movimiento.
 117+ 9E9B
 118+ 9E9B 21 09 8C         ld hl,Ctrl_2
 119+ 9E9E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9EA0
 121+ 9EA0 2A 30 8C         ld hl,(Puntero_mov)
 122+ 9EA3 23               inc hl
 123+ 9EA4 23               inc hl
 124+ 9EA5 23               inc hl
 125+ 9EA6 22 30 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9EA9              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9EA9 7E               ld a,(hl)
 128+ 9EAA 32 39 8C         ld (Cola_de_desplazamiento),a
 129+ 9EAD
 130+ 9EAD C3 55 9E         jp Cola
 131+ 9EB0
 132+ 9EB0 CD ED 9E     2 call Inicia_Puntero_mov
 133+ 9EB3
 134+ 9EB3 21 09 8C         ld hl,Ctrl_2
 135+ 9EB6 CB 96            res 2,(hl)
 136+ 9EB8
 137+ 9EB8 C3 25 9E         jp Movimiento
 138+ 9EBB
 139+ 9EBB              Siguiente_desplazamiento
 140+ 9EBB
 141+ 9EBB              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9EBB              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9EBB
 144+ 9EBB 21 09 8C         ld hl,Ctrl_2
 145+ 9EBE CB 96            res 2,(hl)
 146+ 9EC0
 147+ 9EC0 2A 30 8C         ld hl,(Puntero_mov)
 148+ 9EC3 23               inc hl
 149+ 9EC4 23               inc hl
 150+ 9EC5 22 30 8C         ld (Puntero_mov),hl
 151+ 9EC8
 152+ 9EC8 7E               ld a,(hl)
 153+ 9EC9 A7               and a
 154+ 9ECA CC 4C 9F         call z,Incrementa_Puntero_indice_mov
 155+ 9ECD CA 8E 9E         jp z,Reinicia_el_movimiento
 156+ 9ED0
 157+ 9ED0 C9               ret
 158+ 9ED1
 159+ 9ED1              ; Subrutinas -----------------------------------------
 160+ 9ED1              ; ---------- --------- --------- ---------- ----------
 161+ 9ED1              ;
 162+ 9ED1              ;   24/07/23
 163+ 9ED1              ;
 164+ 9ED1              ;   Fijamos_bucle
 165+ 9ED1              ;
 166+ 9ED1              ;
 167+ 9ED1
 168+ 9ED1              Fijamos_bucle
 169+ 9ED1
 170+ 9ED1 3A 34 8C         ld a,(Incrementa_puntero)
 171+ 9ED4 3C               inc a
 172+ 9ED5 32 35 8C         ld (Incrementa_puntero_backup),a
 173+ 9ED8
 174+ 9ED8 CD 4C 9F         call Incrementa_Puntero_indice_mov
 175+ 9EDB 2A 2E 8C         ld hl,(Puntero_indice_mov)
 176+ 9EDE 22 32 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9EE1 C9               ret
 178+ 9EE2
 179+ 9EE2              ; ---------- --------- --------- ---------- ----------
 180+ 9EE2              ;
 181+ 9EE2              ;   07/7/23
 182+ 9EE2              ;
 183+ 9EE2              ;   Inicia_Repetimos_movimiento
 184+ 9EE2              ;
 185+ 9EE2              ;
 186+ 9EE2
 187+ 9EE2              Inicia_Repetimos_movimiento
 188+ 9EE2
 189+ 9EE2              ; Iniciamos (Repetimos_movimiento).
 190+ 9EE2
 191+ 9EE2 DD 2A 30 8C      ld ix,(Puntero_mov)
 192+ 9EE6 DD 7E 02         ld a,(ix+2)
 193+ 9EE9 32 38 8C         ld (Repetimos_movimiento),a
 194+ 9EEC
 195+ 9EEC C9               ret
 196+ 9EED
 197+ 9EED              ; ---------- --------- --------- ---------- ----------
 198+ 9EED              ;
 199+ 9EED              ;   26/6/23
 200+ 9EED              ;
 201+ 9EED              ;   Inicia_Puntero_mov
 202+ 9EED              ;
 203+ 9EED              ;
 204+ 9EED
 205+ 9EED 2A 2E 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9EF0 CD 50 91         call Extrae_address
 207+ 9EF3 22 30 8C         ld (Puntero_mov),hl
 208+ 9EF6 C9               ret
 209+ 9EF7
 210+ 9EF7              ; ---------- --------- --------- ---------- ----------
 211+ 9EF7              ;
 212+ 9EF7              ;   27/06/23
 213+ 9EF7              ;
 214+ 9EF7              ;   Aplica_movimiento.
 215+ 9EF7
 216+ 9EF7              Aplica_desplazamiento
 217+ 9EF7
 218+ 9EF7              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9EF7
 220+ 9EF7 2A 30 8C         ld hl, (Puntero_mov)
 221+ 9EFA
 222+ 9EFA 7E               ld a,(hl)
 223+ 9EFB E6 F0            and $f0
 224+ 9EFD C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9EFE
 226+ 9EFE CB 7E            bit 7,(hl)
 227+ 9F00 28 03            jr z,1F
 228+ 9F02 CD D9 9A         call Mov_up
 229+ 9F05 2A 30 8C     1 ld hl, (Puntero_mov)
 230+ 9F08 CB 76            bit 6,(hl)
 231+ 9F0A 28 03            jr z,2F
 232+ 9F0C CD A0 9A         call Mov_down
 233+ 9F0F
 234+ 9F0F              ; Se ha aplicado reinicio ???
 235+ 9F0F              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9F0F
 237+ 9F0F              ;    ld a,(Ctrl_3)
 238+ 9F0F              ;    bit 1,a
 239+ 9F0F              ;    ret nz
 240+ 9F0F
 241+ 9F0F 2A 30 8C     2 ld hl, (Puntero_mov)
 242+ 9F12 CB 6E            bit 5,(hl)
 243+ 9F14 28 03            jr z,3F
 244+ 9F16 CD 3F 9C         call Mov_left
 245+ 9F19 2A 30 8C     3 ld hl, (Puntero_mov)
 246+ 9F1C CB 66            bit 4,(hl)
 247+ 9F1E C8               ret z
 248+ 9F1F CD 1C 9B         call Mov_right
 249+ 9F22 C9               ret
 250+ 9F23
 251+ 9F23              ; ---------- --------- --------- ---------- ----------
 252+ 9F23              ;
 253+ 9F23              ;   26/06/23
 254+ 9F23              ;
 255+ 9F23              ;   Ajusta_velocidad_desplazamiento.
 256+ 9F23
 257+ 9F23              Ajusta_velocidad_desplazamiento
 258+ 9F23
 259+ 9F23              ; 1er byte de la cadena de movimiento.
 260+ 9F23              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9F23
 262+ 9F23 CD 41 9F         call Extrae_nibble_alto
 263+ 9F26
 264+ 9F26 32 24 8C         ld (Vel_up),a
 265+ 9F29 79               ld a,c
 266+ 9F2A E6 0F            and $0f
 267+ 9F2C 32 25 8C         ld (Vel_down),a
 268+ 9F2F
 269+ 9F2F              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9F2F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9F2F
 272+ 9F2F 23               inc hl
 273+ 9F30 CD 41 9F         call Extrae_nibble_alto
 274+ 9F33
 275+ 9F33 32 22 8C         ld (Vel_left),a
 276+ 9F36 79               ld a,c
 277+ 9F37 E6 0F            and $0f
 278+ 9F39 32 23 8C         ld (Vel_right),a
 279+ 9F3C
 280+ 9F3C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9F3C
 282+ 9F3C 23               inc hl
 283+ 9F3D 22 30 8C         ld (Puntero_mov),hl
 284+ 9F40 C9               ret
 285+ 9F41
 286+ 9F41 06 04        Extrae_nibble_alto ld b,4
 287+ 9F43 7E               ld a,(hl)
 288+ 9F44 4F               ld c,a
 289+ 9F45 E6 F0            and $f0
 290+ 9F47 CB 3F        1 srl a
 291+ 9F49 10 FC            djnz 1B
 292+ 9F4B C9               ret
 293+ 9F4C
 294+ 9F4C              ; ---------- --------- --------- ---------- ----------
 295+ 9F4C              ;
 296+ 9F4C              ;   5/7/23
 297+ 9F4C              ;
 298+ 9F4C              ;   Incrementa_Puntero_indice_mov
 299+ 9F4C
 300+ 9F4C              Incrementa_Puntero_indice_mov
 301+ 9F4C
 302+ 9F4C 21 34 8C         ld hl,Incrementa_puntero
 303+ 9F4F 34               inc (hl)
 304+ 9F50
 305+ 9F50 2A 2E 8C         ld hl,(Puntero_indice_mov)
 306+ 9F53 01 02 00         ld bc,2
 307+ 9F56 A7               and a
 308+ 9F57 09               add hl,bc
 309+ 9F58 22 2E 8C         ld (Puntero_indice_mov),hl
 310+ 9F5B
 311+ 9F5B 7E               ld a,(hl)
 312+ 9F5C A7               and a
 313+ 9F5D
 314+ 9F5D              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9F5D
 316+ 9F5D              ;    jr z,$
 317+ 9F5D
 318+ 9F5D              ;! Reinicia el Patrón de movimiento.
 319+ 9F5D
 320+ 9F5D CC 62 9F         call z,Inicializa_Puntero_indice_mov_2
 321+ 9F60
 322+ 9F60 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9F61
 324+ 9F61 C9               ret
 325+ 9F62
 326+ 9F62              ; ---------- --------- --------- ---------- ----------
 327+ 9F62              ;
 328+ 9F62              ;   15/01/24
 329+ 9F62              ;
 330+ 9F62              ;   Inicializa_Puntero_indice_mov
 331+ 9F62
 332+ 9F62              Inicializa_Puntero_indice_mov_2
 333+ 9F62
 334+ 9F62              ; Existe etiqueta de bucle principal???
 335+ 9F62
 336+ 9F62 2A 32 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F65 24               inc h
 338+ 9F66 25               dec h
 339+ 9F67 28 05            jr z,2F
 340+ 9F69
 341+ 9F69 22 2E 8C         ld (Puntero_indice_mov),hl
 342+ 9F6C 18 14            jr 3F
 343+ 9F6E
 344+ 9F6E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F6E
 346+ 9F6E 3A 34 8C     2 ld a,(Incrementa_puntero)
 347+ 9F71 47               ld b,a
 348+ 9F72
 349+ 9F72 2A 2E 8C         ld hl,(Puntero_indice_mov)
 350+ 9F75 2B           1 dec hl
 351+ 9F76 2B               dec hl
 352+ 9F77 10 FC            djnz 1B
 353+ 9F79 22 2E 8C         ld (Puntero_indice_mov),hl
 354+ 9F7C
 355+ 9F7C AF               xor a
 356+ 9F7D 32 34 8C         ld (Incrementa_puntero),a
 357+ 9F80 18 06            jr 4F
 358+ 9F82
 359+ 9F82 3A 35 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F85 32 34 8C         ld (Incrementa_puntero),a
 361+ 9F88 C9           4 ret
 362+ 9F89
 363+ 9F89              ; ----------------------------------------------------------------------
 364+ 9F89              ;
 365+ 9F89              ;   24/11/24
 366+ 9F89              ;
 367+ 9F89              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F89
 369+ 9F89 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F8C CD DE 94         call Calcula_salto_en_BC
 371+ 9F8F 21 26 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F92 A7               and a
 373+ 9F93 ED 4A            adc hl,bc
 374+ 9F95 C9               ret
 375+ 9F96
 376+ 9F96              ; ----------------------------------------------------------------------
 377+ 9F96              ;
 378+ 9F96              ;   24/11/24
 379+ 9F96              ;
 380+ 9F96              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F96              ;
 382+ 9F96              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F96
 384+ 9F96 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F97 23               inc hl
 386+ 9F98 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F99 DD 71 09         ld (ix+9),c
 388+ 9F9C DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F9F C9               ret
 390+ 9FA0
# file closed: Movimiento.asm
2219  9FA0              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9FA0              ; --------------------------------------------------------------------------------------
   2+ 9FA0              ;
   3+ 9FA0              ;   25/10/24
   4+ 9FA0              ;
   5+ 9FA0
   6+ 9FA0              Pinta_disparos_Entidades
   7+ 9FA0
   8+ 9FA0 ED 73 4C 8C      ld (Stack),sp
   9+ 9FA4 ED 7B 5E 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9FA8
  11+ 9FA8 3E 02            ld a,2
  12+ 9FAA 08               ex af,af
  13+ 9FAB
  14+ 9FAB 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9FAD              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9FAD              ;                                     _ No encontraría "0".
  17+ 9FAD FD E1        4 pop iy
  18+ 9FAF D1               pop de                          ; 1er .db IYL
  19+ 9FB0              ;                                   ; 2º  .db IYH
  20+ 9FB0              ;                                   ; 3er .db E.
  21+ 9FB0              ;   Album vacío ???
  22+ 9FB0
  23+ 9FB0 FD 7D            ld a,iyl
  24+ 9FB2 FD 84            add iyh
  25+ 9FB4 83               add e
  26+ 9FB5 28 1F            jr z,1F
  27+ 9FB7
  28+ 9FB7              ;   Imprime album, (contiene datos).
  29+ 9FB7
  30+ 9FB7 3B               dec sp
  31+ 9FB8
  32+ 9FB8 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9FB9
  34+ 9FB9              ; Imprime el 1er scanline del disparo.
  35+ 9FB9
  36+ 9FB9 FD 7D            ld a,iyl
  37+ 9FBB AE               xor (hl)
  38+ 9FBC 77               ld (hl),a
  39+ 9FBD
  40+ 9FBD 2C               inc l
  41+ 9FBE
  42+ 9FBE FD 7C            ld a,iyh
  43+ 9FC0 AE               xor (hl)
  44+ 9FC1 77               ld (hl),a
  45+ 9FC2
  46+ 9FC2 2C               inc l
  47+ 9FC3
  48+ 9FC3 7B               ld a,e
  49+ 9FC4 AE               xor (hl)
  50+ 9FC5 77               ld (hl),a
  51+ 9FC6
  52+ 9FC6              ; Imprime el 2º scanline del disparo.
  53+ 9FC6
  54+ 9FC6 E1               pop hl
  55+ 9FC7
  56+ 9FC7 FD 7D            ld a,iyl
  57+ 9FC9 AE               xor (hl)
  58+ 9FCA 77               ld (hl),a
  59+ 9FCB
  60+ 9FCB 2C               inc l
  61+ 9FCC
  62+ 9FCC FD 7C            ld a,iyh
  63+ 9FCE AE               xor (hl)
  64+ 9FCF 77               ld (hl),a
  65+ 9FD0
  66+ 9FD0 2C               inc l
  67+ 9FD1
  68+ 9FD1 7B               ld a,e
  69+ 9FD2 AE               xor (hl)
  70+ 9FD3 77               ld (hl),a
  71+ 9FD4
  72+ 9FD4 10 D7            djnz 4B
  73+ 9FD6
  74+ 9FD6 08           1 ex af,af
  75+ 9FD7 3D               dec a
  76+ 9FD8 20 05            jr nz,2F
  77+ 9FDA
  78+ 9FDA ED 7B 4C 8C      ld sp,(Stack)
  79+ 9FDE C9               ret
  80+ 9FDF
  81+ 9FDF ED 7B 5C 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9FE3 08               ex af,af
  83+ 9FE4 18 C5            jr 3B
  84+ 9FE6
  85+ 9FE6              ; --------------------------------------------------------------------------------------
  86+ 9FE6              ;
  87+ 9FE6              ;   2/12/24
  88+ 9FE6              ;
  89+ 9FE6
  90+ 9FE6              Motor_de_disparos_entidades
  91+ 9FE6
  92+ 9FE6 3A 64 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9FE9 FE 07            cp 7
  94+ 9FEB C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9FEC
  96+ 9FEC 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9FEE 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9FF1
  99+ 9FF1 CD 50 91     1 call Extrae_address
 100+ 9FF4 1C               inc e
 101+ 9FF5 1C               inc e
 102+ 9FF6 ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9FFA
 104+ 9FFA               ; Caja vacía ???
 105+ 9FFA
 106+ 9FFA 2D               dec l
 107+ 9FFB 7E               ld a,(hl)
 108+ 9FFC A7               and a
 109+ 9FFD 28 45            jr z,3F                                                              ; Caja vacía.
 110+ 9FFF
 111+ 9FFF              ; --- Trabajamos con caja:
 112+ 9FFF
 113+ 9FFF 2C               inc l
 114+ A000
 115+ A000              ; --- Existe posibilidad de impacto ???
 116+ A000
 117+ A000 3A 9D 8C         ld a,(Shield)
 118+ A003 A7               and a
 119+ A004 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A006
 121+ A006 CB 46            bit 0,(hl)
 122+ A008 C4 48 A0         call nz, Comprueba_impacto_con_Amadeus
 123+ A00B 20 37            jr nz,3F
 124+ A00D
 125+ A00D CD CF A0     6 call Rota_disparo_si_procede
 126+ A010
 127+ A010              ; ------------------------------------------------------------
 128+ A010
 129+ A010 2D               dec l
 130+ A011 2D               dec l
 131+ A012
 132+ A012 CD 50 91         call Extrae_address
 133+ A015
 134+ A015              ;   (Puntero_de_impresion) del disparo en HL
 135+ A015              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A015
 137+ A015 3A 76 8C         ld a,(Ctrl_5)
 138+ A018 CB 57            bit 2,a
 139+ A01A 28 09            jr z,4F
 140+ A01C
 141+ A01C CB 97            res 2,a
 142+ A01E 32 76 8C         ld (Ctrl_5),a
 143+ A021 2C               inc l
 144+ A022 2C               inc l
 145+ A023 18 0C            jr 5F
 146+ A025
 147+ A025 CB 5F        4 bit 3,a
 148+ A027 28 08            jr z,5F
 149+ A029
 150+ A029 CB 9F            res 3,a
 151+ A02B 32 76 8C         ld (Ctrl_5),a
 152+ A02E 2D               dec l
 153+ A02F 2D               dec l
 154+ A030 2D               dec l
 155+ A031
 156+ A031              ; ---------------------------------------------------------------------
 157+ A031
 158+ A031              ;! Velocidad del disparo de entidades.
 159+ A031
 160+ A031 CD 5A 9A     5 call NextScan
 161+ A034 CD 5A 9A         call NextScan
 162+ A037
 163+ A037              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A037
 165+ A037 CD AC A0         call Fin_de_disparo_de_entidad
 166+ A03A
 167+ A03A EB               ex de,hl
 168+ A03B
 169+ A03B 73               ld (hl),e
 170+ A03C 23               inc hl
 171+ A03D 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A03E
 173+ A03E 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A041 18 02            jr 2F
 175+ A043
 176+ A043 C9               ret
 177+ A044
 178+ A044 EB           3 ex de,hl
 179+ A045 10 AA        2 djnz 1B
 180+ A047
 181+ A047 C9               ret
 182+ A048
 183+ A048              ; ------------- ------------- ------------
 184+ A048              ;
 185+ A048              ;   1/11/24
 186+ A048
 187+ A048              Comprueba_impacto_con_Amadeus
 188+ A048
 189+ A048              ;   El disparo se encuentra en zona de Amadeus.
 190+ A048              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A048
 192+ A048              ;   Modificamos registros, así que guardamos ...
 193+ A048
 194+ A048 C5               push bc
 195+ A049 E5               push hl
 196+ A04A D5               push de
 197+ A04B
 198+ A04B 2D               dec l
 199+ A04C 2D               dec l
 200+ A04D
 201+ A04D CD 50 91         call Extrae_address
 202+ A050
 203+ A050 3A AF 89         ld a,(CX_Amadeus)
 204+ A053 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A054
 206+ A054 7D               ld a,l
 207+ A055 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A057
 209+ A057 06 03            ld b,3
 210+ A059
 211+ A059 B9           1 cp c
 212+ A05A 28 15            jr z,Coincidencia
 213+ A05C 0C               inc c
 214+ A05D 10 FA            djnz 1B
 215+ A05F
 216+ A05F 0D               dec c
 217+ A060 0D               dec c
 218+ A061 0D               dec c
 219+ A062
 220+ A062 3C               inc a
 221+ A063 B9               cp c
 222+ A064 28 0B            jr z,Coincidencia
 223+ A066
 224+ A066 3C               inc a
 225+ A067 B9               cp c
 226+ A068 28 07            jr z,Coincidencia
 227+ A06A
 228+ A06A D1           2 pop de
 229+ A06B E1               pop hl
 230+ A06C C1               pop bc
 231+ A06D
 232+ A06D              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A06D
 234+ A06D CB 86            res 0,(hl)
 235+ A06F AF               xor a                       ; Z before RET.
 236+ A070 C9               ret
 237+ A071
 238+ A071              Coincidencia
 239+ A071
 240+ A071              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A071              ;   Existe posibilidad de impacto.
 242+ A071              ;   Vamos a averiguarlo ...
 243+ A071
 244+ A071 1D               dec e
 245+ A072 1D               dec e
 246+ A073 1D               dec e
 247+ A074
 248+ A074              ; DE en Puntero_objeto del disparo.
 249+ A074              ; HL en Puntero_de_impresión del disparo.
 250+ A074
 251+ A074              ; Comparador:
 252+ A074
 253+ A074 06 03            ld b,3
 254+ A076
 255+ A076 1A           3 ld a,(de)
 256+ A077 4F               ld c,a
 257+ A078 A6               and (hl)
 258+ A079 B9               cp c
 259+ A07A 20 06            jr nz,Amadeus_impactado
 260+ A07C
 261+ A07C 2C               inc l
 262+ A07D 1C               inc e
 263+ A07E
 264+ A07E 10 F6            djnz 3B
 265+ A080
 266+ A080 18 E8            jr 2B
 267+ A082
 268+ A082              Amadeus_impactado
 269+ A082
 270+ A082              ; Borramos disparo.
 271+ A082
 272+ A082              ;   Exclusion.
 273+ A082
 274+ A082 D1               pop de
 275+ A083 E1               pop hl
 276+ A084
 277+ A084 E5               push hl
 278+ A085 D5               push de
 279+ A086
 280+ A086 CD 3A A1         call Borra_6_bytes
 281+ A089
 282+ A089 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A08C 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A08D
 285+ A08D              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A08D
 287+ A08D 21 B2 89         ld hl,Impacto_Amadeus
 288+ A090 36 01            ld (hl),1
 289+ A092
 290+ A092              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A092              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A092
 293+ A092 3A B3 89         ld a,(p.imp.amadeus)
 294+ A095 FE DE            cp $de
 295+ A097 20 04            jr nz,1F
 296+ A099
 297+ A099 3D               dec a
 298+ A09A 32 B3 89         ld (p.imp.amadeus),a
 299+ A09D
 300+ A09D              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A09D
 302+ A09D 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A0A0 21 B5 89         ld hl,Pamm_Amadeus
 304+ A0A3
 305+ A0A3 73               ld (hl),e
 306+ A0A4 23               inc hl
 307+ A0A5 72               ld (hl),d
 308+ A0A6
 309+ A0A6 D1               pop de
 310+ A0A7 E1               pop hl
 311+ A0A8 C1               pop bc
 312+ A0A9
 313+ A0A9 AF               xor a
 314+ A0AA 3C               inc a               ; NZ before RET.
 315+ A0AB C9               ret
 316+ A0AC
 317+ A0AC              ; ------------- ------------- ------------
 318+ A0AC              ;
 319+ A0AC              ;   31/10/24
 320+ A0AC
 321+ A0AC              Fin_de_disparo_de_entidad
 322+ A0AC
 323+ A0AC              ; Estamos en zona de Amadeus ??
 324+ A0AC
 325+ A0AC 7C               ld a,h
 326+ A0AD FE 54            cp $54
 327+ A0AF 38 0D            jr c,1F
 328+ A0B1
 329+ A0B1 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A0B2
 331+ A0B2 5D               ld e,l
 332+ A0B3 54               ld d,h
 333+ A0B4
 334+ A0B4 21 E0 57         ld hl,$57e0
 335+ A0B7 ED 52            sbc hl,de
 336+ A0B9
 337+ A0B9 38 6F            jr c,Elimina_disparo_entidad
 338+ A0BB
 339+ A0BB 6B               ld l,e
 340+ A0BC 62               ld h,d
 341+ A0BD
 342+ A0BD D1               pop de
 343+ A0BE
 344+ A0BE 7C           1 ld a,h
 345+ A0BF FE 50            cp $50
 346+ A0C1 D8               ret c
 347+ A0C2
 348+ A0C2 7D               ld a,l
 349+ A0C3 FE C0            cp $c0
 350+ A0C5 D8               ret c
 351+ A0C6
 352+ A0C6              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A0C6              ; Así podremos comprobar si hay colisión más adelante.
 354+ A0C6
 355+ A0C6 1C               inc e
 356+ A0C7 1C               inc e
 357+ A0C8
 358+ A0C8 EB               ex de,hl
 359+ A0C9 CB C6            set 0,(hl)
 360+ A0CB EB               ex de,hl
 361+ A0CC
 362+ A0CC 1D               dec e
 363+ A0CD 1D               dec e
 364+ A0CE
 365+ A0CE C9               ret
 366+ A0CF
 367+ A0CF              ; ----------------------------------------------------------
 368+ A0CF              ;
 369+ A0CF              ;   08/10/24
 370+ A0CF
 371+ A0CF              ;   Estructura de un disparo de entidades.
 372+ A0CF
 373+ A0CF              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A0CF              ; 	defw 0											; Puntero de impresión.
 375+ A0CF              ;	defw 0											; Control.
 376+ A0CF
 377+ A0CF              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A0CF              ;   _de la entidad en el momento de disparar.
 379+ A0CF
 380+ A0CF              ;   El byte alto muestra la siguiente información:
 381+ A0CF              ;
 382+ A0CF              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A0CF              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A0CF              ;
 385+ A0CF              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A0CF              ;
 387+ A0CF              ;                        10xx ..... Izquierda.
 388+ A0CF              ;                        01xx ..... Derecha.
 389+ A0CF              ;                        00xx ..... Recto.
 390+ A0CF
 391+ A0CF              Rota_disparo_si_procede
 392+ A0CF
 393+ A0CF              ;   Nos situamos en el byte alto de (Control).
 394+ A0CF
 395+ A0CF CB 76            bit 6,(hl)
 396+ A0D1 20 2D            jr nz,Rota_a_derecha
 397+ A0D3 CB 7E            bit 7,(hl)
 398+ A0D5 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A0D6
 400+ A0D6              Rota_a_izq
 401+ A0D6
 402+ A0D6 E5               push hl
 403+ A0D7
 404+ A0D7 7D               ld a,l
 405+ A0D8 D6 05            sub 5
 406+ A0DA 6F               ld l,a
 407+ A0DB
 408+ A0DB E5               push hl
 409+ A0DC FD E1            pop iy
 410+ A0DE
 411+ A0DE A7               and a
 412+ A0DF
 413+ A0DF FD CB 02 16      rl (iy+02)
 414+ A0E3 FD CB 01 16      rl (iy+01)
 415+ A0E7 FD CB 00 16      rl (iy+00)
 416+ A0EB
 417+ A0EB 30 3B            jr nc,Exit
 418+ A0ED
 419+ A0ED              ; Desplazamiento completo hasta Carry.
 420+ A0ED              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A0ED
 422+ A0ED FD 36 02 03      ld (iy+02),$03
 423+ A0F1 FD 36 01 00      ld (iy+01),$00
 424+ A0F5 FD 36 00 00      ld (iy+00),$00
 425+ A0F9
 426+ A0F9 21 76 8C         ld hl,Ctrl_5
 427+ A0FC CB DE            set 3,(hl)
 428+ A0FE
 429+ A0FE 18 28            jr Exit
 430+ A100
 431+ A100              Rota_a_derecha
 432+ A100
 433+ A100 E5               push hl
 434+ A101
 435+ A101 7D               ld a,l
 436+ A102 D6 05            sub 5
 437+ A104 6F               ld l,a
 438+ A105
 439+ A105 E5               push hl
 440+ A106 FD E1            pop iy
 441+ A108
 442+ A108 A7               and a
 443+ A109
 444+ A109 FD CB 00 1E      rr (iy+00)
 445+ A10D FD CB 01 1E      rr (iy+01)
 446+ A111 FD CB 02 1E      rr (iy+02)
 447+ A115
 448+ A115 30 11            jr nc,Exit
 449+ A117
 450+ A117              ; Desplazamiento completo hasta Carry.
 451+ A117              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A117
 453+ A117 FD 36 00 01      ld (iy+00),$01
 454+ A11B FD 36 01 80      ld (iy+01),$80
 455+ A11F FD 36 02 00      ld (iy+02),$00
 456+ A123
 457+ A123 21 76 8C         ld hl,Ctrl_5
 458+ A126 CB D6            set 2,(hl)
 459+ A128
 460+ A128 E1           Exit pop hl
 461+ A129 C9               ret
 462+ A12A
 463+ A12A              ; ------------ ----------- ------------
 464+ A12A              ;
 465+ A12A              ;   25/9/24
 466+ A12A
 467+ A12A              Elimina_disparo_entidad
 468+ A12A
 469+ A12A 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A12D 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A12E
 472+ A12E E1               pop hl
 473+ A12F E5               push hl
 474+ A130
 475+ A130 2C               inc l
 476+ A131 2C               inc l
 477+ A132
 478+ A132 CD 3A A1         call Borra_6_bytes
 479+ A135
 480+ A135 D1               pop de
 481+ A136
 482+ A136 21 00 00         ld hl,0
 483+ A139
 484+ A139 C9               ret
 485+ A13A
 486+ A13A              ; ----- ----- ----- ----- -----
 487+ A13A
 488+ A13A              Borra_6_bytes
 489+ A13A
 490+ A13A 16 06            ld d,6                                                    ; Contador
 491+ A13C AF               xor a                                                     ; Borrador
 492+ A13D 77           1 ld (hl),a
 493+ A13E 2D               dec l
 494+ A13F 15               dec d
 495+ A140 20 FB            jr nz,1B
 496+ A142
 497+ A142 C9               ret
 498+ A143
 499+ A143              ; --------------------------------------------------------------------------------------
 500+ A143              ;
 501+ A143              ;   12/10/24
 502+ A143              ;
 503+ A143
 504+ A143              Genera_datos_de_impresion_disparos_Entidades
 505+ A143
 506+ A143 3E 07            ld a,7
 507+ A145 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A146
 509+ A146              ; ---------------
 510+ A146
 511+ A146              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A146
 513+ A146 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A149
 515+ A149 CD 50 91     1 call Extrae_address
 516+ A14C
 517+ A14C 13               inc de
 518+ A14D 13               inc de
 519+ A14E
 520+ A14E ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A152
 522+ A152 2D               dec l
 523+ A153 7E               ld a,(hl)
 524+ A154 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A155 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A157
 527+ A157              ; ----- ----- ----- -----
 528+ A157
 529+ A157 2D               dec l
 530+ A158 CD 50 91         call Extrae_address
 531+ A15B E5               push hl
 532+ A15C
 533+ A15C 1D               dec e
 534+ A15D
 535+ A15D EB               ex de,hl
 536+ A15E
 537+ A15E 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A15F 2D               dec l
 539+ A160 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A161 2D               dec l
 541+ A162 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A163
 543+ A163 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A164
 545+ A164              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A164
 547+ A164 FD 2A 60 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A168 FD 73 00         ld (iy+0),e
 549+ A16B FD 70 01         ld (iy+1),b
 550+ A16E FD 71 02         ld (iy+2),c
 551+ A171
 552+ A171 FD 75 03         ld (iy+3),l
 553+ A174 FD 74 04         ld (iy+4),h
 554+ A177
 555+ A177 CD 5A 9A         call NextScan
 556+ A17A
 557+ A17A FD 75 05         ld (iy+5),l
 558+ A17D FD 74 06         ld (iy+6),h
 559+ A180
 560+ A180 FD E5            push iy
 561+ A182 E1               pop hl
 562+ A183
 563+ A183 3E 07            ld a,7
 564+ A185 85               add l
 565+ A186 6F               ld l,a
 566+ A187
 567+ A187 22 60 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A18A
 569+ A18A              ; ----- ----- ----- -----
 570+ A18A
 571+ A18A              Situa_en_siguiente_caja
 572+ A18A
 573+ A18A 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A18B 3D               dec a
 575+ A18C C8               ret z
 576+ A18D
 577+ A18D 08               ex af,af
 578+ A18E 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A191 18 B6            jr 1B
 580+ A193
 581+ A193              ; --------------------------------------------------------------------------------------
 582+ A193              ;
 583+ A193              ;   12/10/24
 584+ A193              ;
 585+ A193
 586+ A193              Genera_disparo_de_entidad_maldosa
 587+ A193
 588+ A193              ;   Estructura de un disparo de entidades.
 589+ A193
 590+ A193              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A193              ; 	defw 0											; Puntero de impresión.
 592+ A193              ;	defw 0											; Control.
 593+ A193
 594+ A193              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A193              ;   _de la entidad en el momento de disparar.
 596+ A193
 597+ A193              ;   El byte de control muestra la siguiente información:
 598+ A193
 599+ A193              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A193              ;
 601+ A193              ;                        10xx ..... Izquierda.
 602+ A193              ;                        01xx ..... Derecha.
 603+ A193              ;                        00xx ..... Recto.
 604+ A193
 605+ A193              ;*  Exclusiones.
 606+ A193
 607+ A193              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A193              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A193
 610+ A193 3A 64 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A196 A7               and a
 612+ A197 C8               ret z
 613+ A198
 614+ A198 3A FF 8B         ld a,(Coordenada_y)
 615+ A19B A7               and a
 616+ A19C C8               ret z
 617+ A19D
 618+ A19D 3D               dec a
 619+ A19E C8               ret z
 620+ A19F
 621+ A19F FE 10            cp 16
 622+ A1A1 D0               ret nc
 623+ A1A2
 624+ A1A2              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A1A2              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A1A2              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A1A2
 628+ A1A2 21 66 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A1A5 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A1A6
 631+ A1A6              ;   Decrementa el numero de disparos de entidades.
 632+ A1A6
 633+ A1A6 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A1A9 35               dec (hl)
 635+ A1AA
 636+ A1AA 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A1AD
 638+ A1AD CD 50 91     1 call Extrae_address
 639+ A1B0
 640+ A1B0 13               inc de
 641+ A1B1 13               inc de
 642+ A1B2
 643+ A1B2 ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A1B6
 645+ A1B6              ;   Comprobamos si la caja está vacía.
 646+ A1B6
 647+ A1B6 2D               dec l
 648+ A1B7 7E               ld a,(hl)
 649+ A1B8 A7               and a
 650+ A1B9 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A1BB 2C               inc l
 652+ A1BC
 653+ A1BC              ;   Caja vacía, vamos a generar un disparo.
 654+ A1BC              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A1BC
 656+ A1BC CD DD A1         call Genera_byte_inclinacion
 657+ A1BF
 658+ A1BF 7E               ld a,(hl)
 659+ A1C0 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A1C1
 661+ A1C1 2D               dec l
 662+ A1C2
 663+ A1C2 CD F9 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A1C5
 665+ A1C5 70               ld (hl),b
 666+ A1C6 2D               dec l
 667+ A1C7 71               ld (hl),c
 668+ A1C8
 669+ A1C8 2D               dec l
 670+ A1C9
 671+ A1C9              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A1C9
 673+ A1C9 FD 7E 02         ld a,(iy+02)
 674+ A1CC 77               ld (hl),a
 675+ A1CD 2D               dec l
 676+ A1CE
 677+ A1CE FD 7E 01         ld a,(iy+01)
 678+ A1D1 77               ld (hl),a
 679+ A1D2 2D               dec l
 680+ A1D3
 681+ A1D3 FD 7E 00         ld a,(iy+00)
 682+ A1D6 77               ld (hl),a
 683+ A1D7
 684+ A1D7 C9               ret
 685+ A1D8
 686+ A1D8              ;   --- --- ---
 687+ A1D8
 688+ A1D8              Situa_en_siguiente_disparo
 689+ A1D8
 690+ A1D8 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A1DB 18 D0            jr 1B
 692+ A1DD
 693+ A1DD              ; --------------------------------------------------------------------------------------
 694+ A1DD              ;
 695+ A1DD              ;   09/10/24
 696+ A1DD              ;
 697+ A1DD
 698+ A1DD              Genera_byte_inclinacion
 699+ A1DD
 700+ A1DD              ; Determina tendencia del disparo.
 701+ A1DD
 702+ A1DD 3A AF 89         ld a,(CX_Amadeus)
 703+ A1E0 47               ld b,a
 704+ A1E1 3A FE 8B         ld a,(Coordenada_X)
 705+ A1E4 90               sub b
 706+ A1E5 38 07            jr c,Disparo_a_derecha
 707+ A1E7
 708+ A1E7 FE 06        Disparo_a_izquierda cp 6
 709+ A1E9
 710+ A1E9 D8               ret c
 711+ A1EA C8               ret z
 712+ A1EB
 713+ A1EB CB FE            set 7,(hl)
 714+ A1ED C9               ret
 715+ A1EE
 716+ A1EE 47           Disparo_a_derecha ld b,a
 717+ A1EF 3E FF            ld a,$ff
 718+ A1F1 90               sub b
 719+ A1F2
 720+ A1F2 FE 05            cp 5
 721+ A1F4
 722+ A1F4 D8               ret c
 723+ A1F5 C8               ret z
 724+ A1F6
 725+ A1F6 CB F6            set 6,(hl)
 726+ A1F8 C9               ret
 727+ A1F9
 728+ A1F9              ; --------------------------------------------------------------------------------------
 729+ A1F9              ;
 730+ A1F9              ;   09/10/24
 731+ A1F9              ;
 732+ A1F9
 733+ A1F9              Modifica_puntero_de_impresion
 734+ A1F9
 735+ A1F9              ;   Puntero de impresión del disparo en BC.
 736+ A1F9
 737+ A1F9 E5               push hl
 738+ A1FA
 739+ A1FA 2A 79 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A1FD CD 5A 9A         call NextScan
 741+ A200
 742+ A200 4D               ld c,l
 743+ A201 44               ld b,h
 744+ A202
 745+ A202 E1               pop hl
 746+ A203
 747+ A203 08               ex af,af
 748+ A204 CB 77            bit 6,a
 749+ A206 28 06            jr z,1F
 750+ A208
 751+ A208 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A20C 0C               inc c
 753+ A20D C9               ret
 754+ A20E
 755+ A20E CB 7F        1 bit 7,a
 756+ A210 28 F6            jr z,2B
 757+ A212
 758+ A212 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A216 0D               dec c
 760+ A217
 761+ A217 C9               ret
 762+ A218
 763+ A218              ; --------------------------------------------------------------------------------------
 764+ A218              ;
 765+ A218              ;   28/11/24
 766+ A218              ;
 767+ A218
 768+ A218              Compara_con_coordenadas_de_disparo
 769+ A218
 770+ A218 DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A21B 47               ld b,a
 772+ A21C 3A 7E 8C         ld a,(Coordenadas_disparo_certero)
 773+ A21F 90               sub b
 774+ A220
 775+ A220              ; A = "0" ok
 776+ A220              ; A = "1" ok
 777+ A220
 778+ A220 28 08            jr z,Comprueba_coordenada_X
 779+ A222 3D               dec a
 780+ A223 28 05            jr z,Comprueba_coordenada_X
 781+ A225
 782+ A225              ; A = "$ff" ok
 783+ A225
 784+ A225 FE FE            cp $fe
 785+ A227 28 01            jr z,Comprueba_coordenada_X
 786+ A229
 787+ A229 C9               ret
 788+ A22A
 789+ A22A              Comprueba_coordenada_X
 790+ A22A
 791+ A22A DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A22D 47               ld b,a
 793+ A22E 21 7F 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A231 7E               ld a,(hl)
 795+ A232 90               sub b
 796+ A233
 797+ A233              ; A = "0" ok
 798+ A233              ; A = "1" ok
 799+ A233
 800+ A233 28 09            jr z,Activa_Impacto_en_entidad
 801+ A235 3D               dec a
 802+ A236 28 06            jr z,Activa_Impacto_en_entidad
 803+ A238
 804+ A238              ; A = "2" ok
 805+ A238
 806+ A238 3D               dec a
 807+ A239 28 03            jr z,Activa_Impacto_en_entidad
 808+ A23B
 809+ A23B              ; A = "$ff"
 810+ A23B
 811+ A23B FE FD            cp $fd
 812+ A23D C0               ret nz
 813+ A23E
 814+ A23E              Activa_Impacto_en_entidad
 815+ A23E
 816+ A23E              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A23E
 818+ A23E 3E 02            ld a,2
 819+ A240 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A243
 821+ A243              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A243
 823+ A243 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A246
 825+ A246 DD 73 07         ld (ix+7),e
 826+ A249 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A24C
 828+ A24C              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A24C
 830+ A24C 21 7B 8C         ld hl,Impacto2
 831+ A24F CB 9E            res 3,(hl)
 832+ A251
 833+ A251 C9               ret
 834+ A252
 835+ A252              ; --------------------------------------------------------------------------------------
 836+ A252              ;
 837+ A252              ;   13/10/24
 838+ A252              ;
 839+ A252
 840+ A252              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A252
 842+ A252              Limpia_album_de_pintado_disparos_Amadeus
 843+ A252
 844+ A252 2A 58 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A255 06 06            ld b,6
 846+ A257 AF               xor a
 847+ A258 77           1 ld (hl),a
 848+ A259 2C               inc l
 849+ A25A 10 FC            djnz 1B
 850+ A25C
 851+ A25C C9               ret
 852+ A25D
 853+ A25D              ; --------------------------------------------------------------------------------------
 854+ A25D              ;
 855+ A25D              ;   29/09/24
 856+ A25D              ;
 857+ A25D
 858+ A25D              Calcula_bytes_pintado_disparos
 859+ A25D
 860+ A25D 2A 5C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A260 45               ld b,l
 862+ A261 2A 60 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A264 7D               ld a,l
 864+ A265
 865+ A265 90               sub b
 866+ A266 32 62 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A269
 868+ A269 C9               ret
 869+ A26A
 870+ A26A              ; --------------------------------------------------------------------------------------
 871+ A26A              ;
 872+ A26A              ;   26/10/24
 873+ A26A              ;
 874+ A26A              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A26A              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A26A              ;   _disparos que el álbum del FRAME actual).
 877+ A26A
 878+ A26A              Limpia_album_de_pintado_disparos_entidades
 879+ A26A
 880+ A26A 21 63 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A26D 7E               ld a,(hl)
 882+ A26E 2D               dec l
 883+ A26F 46               ld b,(hl)
 884+ A270 90               sub b
 885+ A271
 886+ A271 D8               ret c
 887+ A272 C8               ret z
 888+ A273
 889+ A273 F5               push af
 890+ A274 80               add b
 891+ A275 77               ld (hl),a
 892+ A276 F1               pop af
 893+ A277
 894+ A277              ; Clean.
 895+ A277
 896+ A277 47           2 ld b,a
 897+ A278 AF               xor a
 898+ A279 2A 60 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A27C 77           1 ld (hl),a
 900+ A27D 23               inc hl
 901+ A27E 10 FC            djnz 1B
 902+ A280
 903+ A280 C9               ret
 904+ A281
 905+ A281              ; --------------------------------------------------------------------------------------
 906+ A281              ;
 907+ A281              ;   29/09/24
 908+ A281              ;
 909+ A281
 910+ A281              Motor_Disparos_Amadeus
 911+ A281
 912+ A281 21 1D 89         ld hl,Disparo_Amad+1
 913+ A284
 914+ A284 34               inc (hl)
 915+ A285 35               dec (hl)
 916+ A286
 917+ A286 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A287
 919+ A287              ;   Esta caja contiene un disparo.
 920+ A287
 921+ A287 CD 8E A2         call Consulta_Impacto
 922+ A28A CC A7 A2         call z,Mueve_disparo_Amadeus
 923+ A28D
 924+ A28D C9               ret
 925+ A28E
 926+ A28E              ; ----------------------
 927+ A28E              ;
 928+ A28E              ;
 929+ A28E              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A28E              ;
 931+ A28E              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A28E
 933+ A28E
 934+ A28E              Consulta_Impacto
 935+ A28E
 936+ A28E              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A28E              ;   _sea lo más coherente posible.
 938+ A28E
 939+ A28E E5               push hl
 940+ A28F 2B               dec hl
 941+ A290 CD 83 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A293 E1               pop hl
 943+ A294 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A295
 945+ A295 C8               ret z
 946+ A296
 947+ A296 3A 7B 8C         ld a,(Impacto2)
 948+ A299 CB DF            set 3,a
 949+ A29B 32 7B 8C         ld (Impacto2),a
 950+ A29E
 951+ A29E E5               push hl
 952+ A29F CD 70 A3         call Genera_coordenadas_de_disparo_Amadeus
 953+ A2A2 E1               pop hl
 954+ A2A3 CD C0 A2         call Elimina_disparo_Amadeus
 955+ A2A6
 956+ A2A6 C9               ret
 957+ A2A7
 958+ A2A7              ; ----------------------
 959+ A2A7              ;
 960+ A2A7              ;
 961+ A2A7              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A2A7
 963+ A2A7              Mueve_disparo_Amadeus
 964+ A2A7
 965+ A2A7 CD 50 91         call Extrae_address
 966+ A2AA
 967+ A2AA CD 69 9A         call PreviousScan
 968+ A2AD CD 69 9A         call PreviousScan
 969+ A2B0 CD 69 9A         call PreviousScan
 970+ A2B3 CD 69 9A         call PreviousScan
 971+ A2B6
 972+ A2B6              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A2B6
 974+ A2B6 7C               ld a,h
 975+ A2B7 D6 40            sub $40
 976+ A2B9 EB               ex de,hl
 977+ A2BA 38 04            jr c,Elimina_disparo_Amadeus
 978+ A2BC
 979+ A2BC               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A2BC
 981+ A2BC 73               ld (hl),e
 982+ A2BD 23               inc hl
 983+ A2BE 72               ld (hl),d
 984+ A2BF
 985+ A2BF C9               ret
 986+ A2C0
 987+ A2C0              ; ----------------------
 988+ A2C0              ;
 989+ A2C0              ;   29/9/24
 990+ A2C0
 991+ A2C0              Elimina_disparo_Amadeus
 992+ A2C0
 993+ A2C0              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A2C0              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A2C0
 996+ A2C0              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A2C0              ;   	defw 0											; Puntero de impresión.
 998+ A2C0
 999+ A2C0 2B               dec hl
1000+ A2C1 2B               dec hl
1001+ A2C2
1002+ A2C2 AF               xor a
1003+ A2C3 77               ld (hl),a
1004+ A2C4 23               inc hl
1005+ A2C5 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A2C6
1007+ A2C6 23               inc hl
1008+ A2C7 77               ld (hl),a
1009+ A2C8 23               inc hl
1010+ A2C9 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A2CA
1012+ A2CA 3E 01            ld a,1
1013+ A2CC 32 65 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A2CF
1015+ A2CF CD 52 A2         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A2D2
1017+ A2D2 AF               xor a
1018+ A2D3 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A2D4
1020+ A2D4 C9               ret
1021+ A2D5
1022+ A2D5              ; --------------------------------------------------------------------------------------
1023+ A2D5              ;
1024+ A2D5              ;   13/10/24
1025+ A2D5              ;
1026+ A2D5
1027+ A2D5              Pinta_disparos_Amadeus
1028+ A2D5
1029+ A2D5 06 02            ld b,2
1030+ A2D7 ED 73 4C 8C      ld (Stack),sp
1031+ A2DB ED 7B 5A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A2DF D1           3 pop de
1033+ A2E0 14               inc d
1034+ A2E1 15               dec d
1035+ A2E2 28 1C            jr z,1F
1036+ A2E4 E1               pop hl
1037+ A2E5
1038+ A2E5              Imprime_scanlines_en_pantalla
1039+ A2E5
1040+ A2E5              ; 1er scanline
1041+ A2E5
1042+ A2E5 1A               ld a,(de)
1043+ A2E6 AE               xor (hl)
1044+ A2E7 77               ld (hl),a
1045+ A2E8
1046+ A2E8 1C               inc e
1047+ A2E9 2C               inc l
1048+ A2EA
1049+ A2EA 1A               ld a,(de)
1050+ A2EB AE               xor (hl)
1051+ A2EC 77               ld (hl),a
1052+ A2ED
1053+ A2ED 1D               dec e
1054+ A2EE E1               pop hl
1055+ A2EF
1056+ A2EF              ; 2º scanline
1057+ A2EF
1058+ A2EF 1A               ld a,(de)
1059+ A2F0 AE               xor (hl)
1060+ A2F1 77               ld (hl),a
1061+ A2F2
1062+ A2F2 1C               inc e
1063+ A2F3 2C               inc l
1064+ A2F4
1065+ A2F4 1A               ld a,(de)
1066+ A2F5 AE               xor (hl)
1067+ A2F6 77               ld (hl),a
1068+ A2F7
1069+ A2F7 1D               dec e
1070+ A2F8
1071+ A2F8 18 06            jr 1F
1072+ A2FA
1073+ A2FA ED 7B 58 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A2FE 18 DF            jr 3B
1075+ A300 10 F8        1 djnz 2B
1076+ A302 ED 7B 4C 8C      ld sp,(Stack)
1077+ A306 C9               ret
1078+ A307
1079+ A307              ; --------------------------------------------------------------------------------------
1080+ A307              ;
1081+ A307              ;   13/10/24
1082+ A307              ;
1083+ A307              ;   Modifica: HL,BC y DE.
1084+ A307
1085+ A307
1086+ A307              Genera_datos_de_impresion_disparos_Amadeus
1087+ A307
1088+ A307 ED 73 4C 8C      ld (Stack),sp
1089+ A30B 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A30E D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A30F
1092+ A30F 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A310 15               dec d
1094+ A311
1095+ A311 28 0E            jr z,Salida
1096+ A313
1097+ A313              Genera_scanlines_de_disparo_Amadeus
1098+ A313
1099+ A313 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A314              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A314 ED 7B 58 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A318
1103+ A318 C1               pop bc
1104+ A319 C1               pop bc
1105+ A31A C1               pop bc
1106+ A31B
1107+ A31B E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A31C CD 69 9A         call PreviousScan
1109+ A31F E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A320 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A321
1112+ A321              Salida
1113+ A321
1114+ A321 ED 7B 4C 8C      ld sp,(Stack)
1115+ A325
1116+ A325 C9               ret
1117+ A326
1118+ A326              ; --------------------------------------------------------------------------------------
1119+ A326              ;
1120+ A326              ;   12/09/24
1121+ A326              ;
1122+ A326
1123+ A326              Genera_disparo_Amadeus
1124+ A326
1125+ A326              ;*  Exclusiones.
1126+ A326
1127+ A326 3A 65 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A329 A7               and a
1129+ A32A C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A32B
1131+ A32B 3D               dec a
1132+ A32C 32 65 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A32F
1134+ A32F              Define_puntero_objeto_disparo
1135+ A32F
1136+ A32F              ;   Inicializamos contador.
1137+ A32F
1138+ A32F 06 00            ld b,0
1139+ A331
1140+ A331 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A334 2C               inc l
1142+ A335
1143+ A335 3E 80            ld a,$80
1144+ A337 BE               cp (hl)
1145+ A338 28 0D            jr z,1F
1146+ A33A
1147+ A33A 04               inc b
1148+ A33B
1149+ A33B 3E 60            ld a,$60
1150+ A33D BE               cp (hl)
1151+ A33E 28 07            jr z,1F
1152+ A340
1153+ A340
1154+ A340 04               inc b
1155+ A341
1156+ A341 3E 18            ld a,$18
1157+ A343 BE               cp (hl)
1158+ A344 28 01            jr z,1F
1159+ A346
1160+ A346 04               inc b
1161+ A347
1162+ A347              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A347
1164+ A347              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A347
1166+ A347 CD 69 9A     1 call PreviousScan
1167+ A34A
1168+ A34A 78               ld a,b
1169+ A34B CB 3F            srl a
1170+ A34D 28 03            jr z,4F
1171+ A34F
1172+ A34F              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A34F E5               push hl
1174+ A350 18 02            jr 5F
1175+ A352 2D           4 dec l
1176+ A353 E5               push hl
1177+ A354              ; ---
1178+ A354
1179+ A354              ;   Calcula el Puntero_objeto del disparo.
1180+ A354
1181+ A354 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A357 04               inc b
1183+ A358 05               dec b
1184+ A359 28 04            jr z,2F
1185+ A35B
1186+ A35B              ;   Nos desplazamos por el índice de disparos.
1187+ A35B
1188+ A35B 2C           3 inc l
1189+ A35C 2C               inc l
1190+ A35D 10 FC            djnz 3B
1191+ A35F
1192+ A35F              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A35F CD 50 91     2 call Extrae_address
1194+ A362 E5               push hl
1195+ A363              ; ---
1196+ A363
1197+ A363              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A363              ; HL en el 1er .db de la caja.
1199+ A363
1200+ A363 21 1C 89         ld hl,Disparo_Amad
1201+ A366
1202+ A366 06 02            ld b,2
1203+ A368
1204+ A368 D1           6 pop de
1205+ A369 73               ld (hl),e
1206+ A36A 23               inc hl
1207+ A36B 72               ld (hl),d
1208+ A36C 23               inc hl
1209+ A36D
1210+ A36D 10 F9            djnz 6B
1211+ A36F
1212+ A36F C9               ret
1213+ A370
1214+ A370              Genera_coordenadas_de_disparo_Amadeus
1215+ A370
1216+ A370              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A370              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A370              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A370
1220+ A370 CD 50 91         call Extrae_address
1221+ A373 CD 65 95         call Genera_coordenadas
1222+ A376
1223+ A376 3D               dec a
1224+ A377
1225+ A377 21 7E 8C         ld hl,Coordenadas_disparo_certero
1226+ A37A 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A37B 23               inc hl
1228+ A37C 3A FE 8B         ld a,(Coordenada_X)
1229+ A37F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A380
1231+ A380 AF               xor a
1232+ A381 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A382
1234+ A382 C9               ret
1235+ A383
1236+ A383              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A383              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A383              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A383
1240+ A383              ; ----------------------------------------------
1241+ A383              ;
1242+ A383              ;   27/08/24
1243+ A383              ;
1244+ A383              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A383              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A383
1247+ A383              Detecta_impacto_en_disparo_de_Amadeus
1248+ A383
1249+ A383              Extraccion_de_datos
1250+ A383
1251+ A383 13               inc de
1252+ A384 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A385
1254+ A385 5E               ld e,(hl)
1255+ A386 23               inc hl
1256+ A387 56               ld d,(hl)
1257+ A388
1258+ A388 23               inc hl
1259+ A389
1260+ A389 4E               ld c,(hl)
1261+ A38A 23               inc hl
1262+ A38B 46               ld b,(hl)
1263+ A38C
1264+ A38C C5               push bc
1265+ A38D E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A38E
1267+ A38E              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A38E
1269+ A38E CD 69 9A         call PreviousScan
1270+ A391 CD 69 9A         call PreviousScan
1271+ A394
1272+ A394              Detecta_impacto_
1273+ A394
1274+ A394 1A               ld a,(de)
1275+ A395 A6               and (hl)
1276+ A396 C0               ret nz
1277+ A397
1278+ A397 13               inc de
1279+ A398 23               inc hl
1280+ A399
1281+ A399 1A               ld a,(de)
1282+ A39A A6               and (hl)
1283+ A39B C9               ret
1284+ A39C
1285+ A39C              ; -------------------------------------------------------------------------------------------------------------
1286+ A39C              ;
1287+ A39C              ;   25/11//24
1288+ A39C              ;
1289+ A39C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A39C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A39C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A39C              ;
1293+ A39C              ;   MODIFICA: HL,DE,BC y A.
1294+ A39C              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A39C              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A39C
1297+ A39C              Colision_Entidad_Amadeus
1298+ A39C
1299+ A39C              ; Posible contacto de entidad con Amadeus. ?????
1300+ A39C
1301+ A39C              ; Exclusiones:
1302+ A39C
1303+ A39C 3A 9D 8C         ld a,(Shield)
1304+ A39F A7               and a
1305+ A3A0 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A3A1
1307+ A3A1 21 74 8C         ld hl,Ctrl_3
1308+ A3A4 CB 76            bit 6,(hl)
1309+ A3A6 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A3A7
1311+ A3A7 21 7B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A3AA CB 56            bit 2,(hl)
1313+ A3AC C0               ret nz
1314+ A3AD
1315+ A3AD DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A3B0 FE 14        	cp $14
1317+ A3B2 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A3B3
1319+ A3B3 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A3B6 A7               and a
1321+ A3B7 C0               ret nz
1322+ A3B8
1323+ A3B8              Genera_coordenadas_X
1324+ A3B8
1325+ A3B8              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A3B8              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A3B8
1328+ A3B8              ;   Limpiamos almacenes.
1329+ A3B8
1330+ A3B8              ;    call Limpia_Coordenadas_X
1331+ A3B8
1332+ A3B8              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A3B8
1334+ A3B8 21 80 8C         ld hl,Coordenadas_X_Entidad
1335+ A3BB DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A3BE CD E4 A3         call Guarda_coordenadas_X
1337+ A3C1
1338+ A3C1              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A3C1
1340+ A3C1 3A AF 89         ld a,(CX_Amadeus)
1341+ A3C4 CD E4 A3         call Guarda_coordenadas_X
1342+ A3C7
1343+ A3C7 DD E5            push ix
1344+ A3C9 CD F8 A3         call Compara_coordenadas_X
1345+ A3CC DD E1            pop ix
1346+ A3CE
1347+ A3CE C0               ret nz
1348+ A3CF
1349+ A3CF 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A3D1 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A3D4
1352+ A3D4 DD 7D            ld a,ixl
1353+ A3D6 C6 04            add 4
1354+ A3D8 DD 6F            ld ixl,a
1355+ A3DA
1356+ A3DA DD 22 7C 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A3DE
1358+ A3DE 21 7B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A3E1 CB D6            set 2,(hl)
1360+ A3E3
1361+ A3E3 C9               ret
1362+ A3E4
1363+ A3E4               ; ----- ----- ----- ----- -----
1364+ A3E4
1365+ A3E4 77           Guarda_coordenadas_X ld (hl),a
1366+ A3E5 3C               inc a
1367+ A3E6 2C               inc l
1368+ A3E7 77               ld (hl),a
1369+ A3E8 3C               inc a
1370+ A3E9 2C               inc l
1371+ A3EA 77               ld (hl),a
1372+ A3EB 2C               inc l
1373+ A3EC C9               ret
1374+ A3ED
1375+ A3ED AF           Limpia_Coordenadas_X xor a
1376+ A3EE 06 06            ld b,6
1377+ A3F0 21 83 8C         ld hl,Coordenadas_X_Amadeus
1378+ A3F3 77           1 ld (hl),a
1379+ A3F4 23               inc hl
1380+ A3F5 10 FC            djnz 1B
1381+ A3F7 C9               ret
1382+ A3F8
1383+ A3F8              ; ----- ----- ----- ----- -----
1384+ A3F8
1385+ A3F8              Compara_coordenadas_X
1386+ A3F8
1387+ A3F8 DD 21 80 8C      ld ix,Coordenadas_X_Entidad
1388+ A3FC DD 7E 00         ld a,(ix+0)
1389+ A3FF CD 0D A4         call Comparando
1390+ A402 C8               ret z
1391+ A403
1392+ A403 3C               inc a
1393+ A404 CD 1C A4         call Comparando_1
1394+ A407 C8               ret z
1395+ A408
1396+ A408 3C               inc a
1397+ A409 CD 1C A4         call Comparando_1
1398+ A40C C9               ret
1399+ A40D
1400+ A40D              ; ----- ----- ----- ----- -----
1401+ A40D              ;
1402+ A40D              ;   4/12/23
1403+ A40D              ;
1404+ A40D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A40D
1406+ A40D              Comparando
1407+ A40D
1408+ A40D DD 2C            inc ixl
1409+ A40F DD 2C            inc ixl
1410+ A411 DD 2C            inc ixl
1411+ A413
1412+ A413 DD 46 00         ld b,(ix+0)
1413+ A416 DD 4E 01         ld c,(ix+1)
1414+ A419 DD 56 02         ld d,(ix+2)
1415+ A41C
1416+ A41C B8           Comparando_1 cp b
1417+ A41D C8               ret z
1418+ A41E B9               cp c
1419+ A41F C8               ret z
1420+ A420 BA               cp d
1421+ A421 C9               ret
1422+ A422
1423+ A422              ; -----------------------------------------------------------------------
1424+ A422              ;
1425+ A422              ;   04/7/24
1426+ A422              ;
1427+ A422
1428+ A422              Detecta_colision_nave_entidad
1429+ A422
1430+ A422              ; Exclusiones:
1431+ A422
1432+ A422              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A422
1434+ A422 21 7B 8C     	ld hl,Impacto2
1435+ A425 CB 56        	bit 2,(hl)
1436+ A427 C8           	ret z
1437+ A428
1438+ A428              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A428
1440+ A428 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A42B CD 50 91         call Extrae_address
1442+ A42E 54               ld d,h
1443+ A42F 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A430
1445+ A430 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A433 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A435 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A438
1449+ A438 C5           1 push bc
1450+ A439 06 03            ld b,3
1451+ A43B E5               push hl
1452+ A43C
1453+ A43C              ; .db
1454+ A43C
1455+ A43C 1A           3 ld a,(de)
1456+ A43D A7               and a
1457+ A43E 20 03            jr nz,4F
1458+ A440
1459+ A440 2C               inc l
1460+ A441 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A443
1462+ A443 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A445 28 04            jr z,2F
1464+ A447
1465+ A447              ; Impacto.
1466+ A447 FD 2D            dec iyl
1467+ A449 28 22            jr z,5F
1468+ A44B
1469+ A44B 1C           2 inc e
1470+ A44C 10 EE            djnz 3B
1471+ A44E
1472+ A44E E1               pop hl
1473+ A44F
1474+ A44F              ; Hay salto de línea en el puntero de impresión ???
1475+ A44F
1476+ A44F 7C               ld a,h
1477+ A450 D6 57            sub $57
1478+ A452 20 0A            jr nz,6F
1479+ A454
1480+ A454              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A454
1482+ A454 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A457 3E 20            ld a,$20
1484+ A459 A7               and a
1485+ A45A 85               add l
1486+ A45B 6F               ld l,a
1487+ A45C 18 01            jr 7F
1488+ A45E
1489+ A45E 24           6 inc h
1490+ A45F
1491+ A45F C1           7 pop bc
1492+ A460 10 D6            djnz 1B
1493+ A462
1494+ A462              ;   Fin de la comparativa.
1495+ A462
1496+ A462              ;   NO HAY COLISIÓN !!!!!.
1497+ A462              ;
1498+ A462              ;   .db (Impacto) de Amadeus a "0".
1499+ A462              ;   RES el bit2 de (Impacto2).
1500+ A462              ;
1501+ A462              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A462              ;   Lo colocamos a "0".
1503+ A462
1504+ A462 21 7B 8C         ld hl,Impacto2
1505+ A465 CB 96            res 2,(hl)
1506+ A467 2A 7C 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A46A 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A46C C9               ret
1509+ A46D
1510+ A46D              ;   COLISIÓN !!!!!.
1511+ A46D              ;
1512+ A46D              ;   .db (Impacto) de Amadeus a "1".
1513+ A46D              ;   SET el bit3 de (Impacto2).
1514+ A46D              ;
1515+ A46D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A46D
1517+ A46D E1           5 pop hl
1518+ A46E C1               pop bc
1519+ A46F
1520+ A46F 21 B2 89         ld hl,Impacto_Amadeus
1521+ A472 36 01            ld (hl),1
1522+ A474 21 7B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A477 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A479
1525+ A479 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A47C 2A 7C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A47F
1528+ A47F 23               inc hl
1529+ A480 23               inc hl
1530+ A481 23               inc hl
1531+ A482
1532+ A482 73               ld (hl),e
1533+ A483 23               inc hl
1534+ A484 72               ld (hl),d
1535+ A485
1536+ A485              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A485
1538+ A485 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A488 21 B5 89         ld hl,Pamm_Amadeus
1540+ A48B
1541+ A48B 73               ld (hl),e
1542+ A48C 23               inc hl
1543+ A48D 72               ld (hl),d
1544+ A48E
1545+ A48E C9               ret
1546+ A48F
1547+ A48F
1548+ A48F
# file closed: Disparo.asm
2220  A48F
2221  A48F              	SAVESNA "Pruebas.sna", START
2222  A48F
2223  A48F
2224  A48F
2225  A48F
# file closed: Banco_de_pruebas.asm
