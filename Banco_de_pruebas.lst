# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD B5 8E     	call Frame
  15  AA04 FB           	ei
  16  AA05 ED 4D        	reti
  17  AA07
  18  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  AA07
  20  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 14 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 18 8A        	defw End_Snapshot_1
 267+ 8500 1C 8A        	defw End_Snapshot_2
 268+ 8502 20 8A        	defw End_Snapshot_3
 269+ 8504 16 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 1A 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1E 8A        	defw End_Snapshot_disparos_2
 272+ 850A 22 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 C4 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 C4 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  22  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BC 88        	defw Nivel_2
   7+ 88AD C9 88        	defw Nivel_3
   8+ 88AF D9 88        	defw Nivel_4
   9+ 88B1 EB 88        	defw Nivel_5
  10+ 88B3              ;	...
  11+ 88B3              ;	...
  12+ 88B3              ;	+ Niveles ...
  13+ 88B3
  14+ 88B3 00 00        	defw 0
  15+ 88B5 00 00        	defw 0
  16+ 88B7
  17+ 88B7 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 88B8 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 88BC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 88BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88C1 01 02
  21+ 88C3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 88C7 01 02
  22+ 88C9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 88CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 88CE 01
  24+ 88CF 03 01 01 01  	db 3,1,1,1,1
  24+ 88D3 01
  25+ 88D4 03 01 01 01  	db 3,1,1,1,1
  25+ 88D8 01
  26+ 88D9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 88DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 88DE 01
  28+ 88DF 04 01 01 01  	db 4,1,1,1,1
  28+ 88E3 01
  29+ 88E4 04 01 01 01  	db 4,1,1,1,1
  29+ 88E8 01
  30+ 88E9 02 03        	db 2,3
  31+ 88EB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 88EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  32+ 88F0 01
  33+ 88F1 05 01 01 01  	db 5,1,1,1,1
  33+ 88F5 01
  34+ 88F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88FA 01
  35+ 88FB 05 01 01 01  	db 5,1,1,1,1
  35+ 88FF 01
  36+ 8900
  37+ 8900              ;---------------------------------------------------------------------------------------------------------------
  38+ 8900              ;
  39+ 8900              ;   21/5/23
  40+ 8900              ;
  41+ 8900              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8900              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8900              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8900              ;	_en la caja DRAW correspondiente.
  45+ 8900              ;
  46+ 8900              ;	MODIFICA: HL,DE y A.
  47+ 8900              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8900
  49+ 8900              Inicializa_Punteros_de_nivel
  50+ 8900
  51+ 8900 21 A9 88     	ld hl,Indice_de_niveles
  52+ 8903 22 4F 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8906 CD 8B 8D     	call Extrae_address
  54+ 8909 7E           	ld a,(hl)
  55+ 890A 32 02 8A     	ld (Numero_de_entidades),a
  56+ 890D 23           	inc hl
  57+ 890E 22 51 8A     	ld (Datos_de_nivel),hl
  58+ 8911 C9           	ret
  59+ 8912
  60+ 8912              ;---------------------------------------------------------------------------------------------------------------
  61+ 8912              ;
  62+ 8912              ;   13/5/23
  63+ 8912              ;
  64+ 8912              ;	Destruye A,BC,HL,DE
  65+ 8912
  66+ 8912              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8912              ;	_del juego.
  68+ 8912
  69+ 8912              Prepara_cajas
  70+ 8912
  71+ 8912              ; Preparamos los punteros de las cajas.
  72+ 8912
  73+ 8912 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8915 CD 8B 8D     	call Extrae_address
  75+ 8918 CD 55 89     	call Avanza_caja
  76+ 891B
  77+ 891B CD 99 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 891E
  79+ 891E 2A 51 8A     	ld hl,(Datos_de_nivel)
  80+ 8921
  81+ 8921              ; HL está en los datos del nivel correspondiente.
  82+ 8921              ; B actuará como contador de cajas.
  83+ 8921
  84+ 8921 C5           1 push bc
  85+ 8922
  86+ 8922 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8923 CD 46 89     	call PreparaBC
  88+ 8926
  89+ 8926 21 85 88     	ld hl,Indice_de_entidades
  90+ 8929 CD 4E 89     	call SBC_HL_con_BC_y_Extrae
  91+ 892C 22 08 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 892F
  93+ 892F CD 5F 89     	call Datos_de_entidad_a_caja
  94+ 8932
  95+ 8932 2A 00 8A     	ld hl,(Indice_restore_caja)
  96+ 8935 CD 8B 8D     	call Extrae_address
  97+ 8938 CD 55 89     	call Avanza_caja
  98+ 893B
  99+ 893B 2A 51 8A     	ld hl,(Datos_de_nivel)
 100+ 893E 23           	inc hl
 101+ 893F 22 51 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8942
 103+ 8942 C1           	pop bc
 104+ 8943 10 DC        	djnz 1B
 105+ 8945 C9           	ret
 106+ 8946
 107+ 8946 CB 27        PreparaBC sla a
 108+ 8948 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 894A 4F           	ld c,a
 110+ 894B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 894D C9           	ret
 112+ 894E
 113+ 894E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 894F ED 4A        	adc hl,bc
 115+ 8951 CD 8B 8D     	call Extrae_address
 116+ 8954 C9           	ret
 117+ 8955
 118+ 8955 22 FC 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8958 13           	inc de
 120+ 8959 13           	inc de
 121+ 895A EB           	ex de,hl
 122+ 895B 22 00 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 895E C9           	ret
 124+ 895F
 125+ 895F              Datos_de_entidad_a_caja
 126+ 895F
 127+ 895F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 895F
 129+ 895F
 130+ 895F ED 5B FC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8963
 132+ 8963 01 02 00     	ld bc,2
 133+ 8966 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8968
 135+ 8968 01 07 00     	ld bc,7
 136+ 896B CD 93 89     	call Situa_DE
 137+ 896E
 138+ 896E 01 05 00     	ld bc,5
 139+ 8971 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8973
 141+ 8973 01 04 00     	ld bc,4
 142+ 8976 CD 93 89     	call Situa_DE
 143+ 8979
 144+ 8979 01 07 00     	ld bc,7
 145+ 897C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 897E
 147+ 897E 01 18 00     	ld bc,24
 148+ 8981 CD 93 89     	call Situa_DE
 149+ 8984
 150+ 8984 01 02 00     	ld bc,2
 151+ 8987 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8989
 153+ 8989              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8989              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8989
 156+ 8989 01 0F 00     	ld bc,15									; *****
 157+ 898C CD 93 89     	call Situa_DE
 158+ 898F
 159+ 898F 3E 03        	ld a,3
 160+ 8991 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8992
 162+ 8992 C9           	ret
 163+ 8993
 164+ 8993 EB           Situa_DE ex de,hl
 165+ 8994 A7           	and a
 166+ 8995 ED 4A        	adc hl,bc
 167+ 8997 EB           	ex de,hl
 168+ 8998 C9           	ret
 169+ 8999
 170+ 8999              ;---------------------------------------------------------------------------------------------------------------
 171+ 8999              ;
 172+ 8999              ;	21/5/23
 173+ 8999              ;
 174+ 8999              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8999              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8999              ;
 177+ 8999              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8999              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8999              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8999              ;
 181+ 8999              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8999              ;	MODIFICA: A y B.
 183+ 8999              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8999
 185+ 8999              Admin_num_entidades
 186+ 8999
 187+ 8999              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8999
 189+ 8999 3A 02 8A     	ld a,(Numero_de_entidades)
 190+ 899C A7           	and a
 191+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 899D              ;	jr z,$
 193+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 899D
 195+ 899D 20 03        	jr nz,3F
 196+ 899F
 197+ 899F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 899F
 199+ 899F CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 89A2
 201+ 89A2 3A 02 8A     3 ld a,(Numero_de_entidades)
 202+ 89A5 FE 0A        	cp 10
 203+ 89A7 38 08        	jr c,1F
 204+ 89A9
 205+ 89A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 89A9              ; Actualizamos variables.
 207+ 89A9
 208+ 89A9 3E 0A        	ld a,10
 209+ 89AB 32 03 8A     	ld (Numero_parcial_de_entidades),a
 210+ 89AE 47           	ld b,a
 211+ 89AF 18 04        	jr 2F
 212+ 89B1
 213+ 89B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 89B1              ; (Numero_de_entidades)="0".
 215+ 89B1
 216+ 89B1 32 03 8A     1 ld (Numero_parcial_de_entidades),a
 217+ 89B4 47           	ld b,a
 218+ 89B5 C9           2 ret
# file closed: Niveles.asm
  23  89B6
  24  89B6              ; ******************************************************************************************************************************************************************************************
  25  89B6              ; Constantes.
  26  89B6              ; ******************************************************************************************************************************************************************************************
  27  89B6              ;
  28  89B6              ; 25/05/23
  29  89B6              ;
  30  89B6              ; Constantes generales.
  31  89B6              ;
  32  89B6
  33  89B6              Sprite_vacio equ $f000
  34  89B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89B6
  39  89B6              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89B6              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89B6              ;                               				        ; De momento situamos este almacén en $7060.
  45  89B6              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89B6              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89B6              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89B6              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89B6              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89B6              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  89B6
  52  89B6              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89B6
  54  89B6              ; ******************************************************************************************************************************************************************************************
  55  89B6              ; Variables.
  56  89B6              ; ******************************************************************************************************************************************************************************************
  57  89B6              ;
  58  89B6              ; 28/07/23
  59  89B6              ;
  60  89B6              ; Variables de DRAW. (Motor principal).
  61  89B6              ;
  62  89B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89B6
  64  89B6 00           Filas db 0												; Filas. [DRAW]
  65  89B7 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89BE
  71  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89BE
  73  89BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89BF 00           Attr db 0												; Atributos de la entidad:
  77  89C0
  78  89C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89C0              ;
  80  89C0              ;	COLORES: 0 ..... NEGRO
  81  89C0              ;    		 1 ..... AZUL
  82  89C0              ; 			 2 ..... ROJO
  83  89C0              ;			 3 ..... MAGENTA
  84  89C0              ; 			 4 ..... VERDE
  85  89C0              ; 			 5 ..... CIAN
  86  89C0              ;			 6 ..... AMARILLO
  87  89C0              ; 			 7 ..... BLANCO
  88  89C0
  89  89C0 00 00        Indice_Sprite_der defw 0
  90  89C2 00 00        Indice_Sprite_izq defw 0
  91  89C4 00 00        Puntero_DESPLZ_der defw 0
  92  89C6 00 00        Puntero_DESPLZ_izq defw 0
  93  89C8
  94  89C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89CB
  97  89CB              ; Variables de objeto. (Características).
  98  89CB
  99  89CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89CF
 104  89CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89D0
 108  89D0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 109  89D2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89D4 00 00        	defw 0
 111  89D6 00 00 00 00  	db 0,0,0,0
 112  89DA
 113  89DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 114  89DC 00 00        	defw 0
 115  89DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 116  89E0 00 00 00 00  	db 0,0,0,0
 117  89E4
 118  89E4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 119  89E4
 120  89E4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 121  89E5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 122  89E5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 123  89E5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 124  89E5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 125  89E5              ;
 126  89E5              ; 														DESCRIPCIÖN:
 127  89E5              ;
 128  89E5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 129  89E5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 130  89E5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 131  89E5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 132  89E5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 133  89E5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 134  89E5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 135  89E5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 136  89E5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 137  89E5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 138  89E5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 139  89E5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 140  89E5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 141  89E5              ;
 142  89E5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 143  89E5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 144  89E5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 145  89E5
 146  89E5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 147  89E6
 148  89E6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 149  89E6
 150  89E6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 151  89E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 152  89E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 153  89EB 00 00        Puntero_indice_mov_bucle defw 0							;
 154  89ED              ;
 155  89ED              ;
 156  89ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 157  89EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 158  89EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 159  89EE 00           Incrementa_puntero_backup db 0
 160  89EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 161  89F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 162  89F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 163  89F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 164  89F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 165  89F3              ;
 166  89F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 167  89F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 168  89F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 169  89F3              ;
 170  89F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 171  89F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 172  89F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 173  89F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 174  89F3              ;
 175  89F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 176  89F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 177  89F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 178  89F3
 179  89F3
 180  89F3              ; Variables de funcionamiento. [DRAW].
 181  89F3
 182  89F3 00           Columnas db 0
 183  89F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 184  89F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  89F7
 187  89F7              ; variables de control general.
 188  89F7
 189  89F7 00           Ctrl_2 db 0
 190  89F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 191  89F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 192  89F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 193  89F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 194  89F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 195  89F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 196  89F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 197  89F8              ;
 198  89F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 199  89F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 200  89F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 201  89F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 202  89F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 203  89F8
 204  89F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 205  89F9
 206  89F9              ;! 67 Bytes por entidad.
 207  89F9
 208  89F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 209  89F9              ;					         		---------;      ;---------
 210  89F9
 211  89F9
 212  89F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 213  89F9
 214  89F9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 215  89FA
 216  89FA              ;														DESCRIPCIÓN:
 217  89FA              ;
 218  89FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 219  89FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 220  89FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 221  89FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 222  89FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 223  89FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 224  89FA
 225  89FA              ;														BIT 3, Recarga de nueva oleada.
 226  89FA              ;														BIT 4, Recarga de nueva oleada.
 227  89FA              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 228  89FA              ;														BIT 6, **** Frame completo.
 229  89FA
 230  89FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 231  89FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 232  89FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 233  89FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 234  89FC
 235  89FC
 236  89FC
 237  89FC              ; Gestión de ENTIDADES y CAJAS.
 238  89FC
 239  89FC 00 00        Puntero_store_caja defw 0
 240  89FE 00 00        Puntero_restore_caja defw 0
 241  8A00 00 00        Indice_restore_caja defw 0
 242  8A02 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 243  8A03 00           Numero_parcial_de_entidades db 0
 244  8A04 00           Entidades_en_curso db 0									; ..... ..... .....
 245  8A05 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  8A06              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 247  8A06              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 248  8A06              ;														; _ (Numero_de_malotes)="0".
 249  8A06 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  8A08 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  8A0A              ;														; _ puntero (Indice_entidades).
 252  8A0A
 253  8A0A
 254  8A0A              ;---------------------------------------------------------------------------------------------------------------
 255  8A0A              ;
 256  8A0A              ;	9/8/23
 257  8A0A              ;
 258  8A0A              ;	Álbumes.
 259  8A0A
 260  8A0A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 261  8A0C              ;														; _variable para almacenar lo posición del puntero_
 262  8A0C              ; 														; _de pila, SP.
 263  8A0C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 264  8A0E              ;														; La utiliza la rutina [Extrae_foto_registros].
 265  8A0E 00 00        Stack_3 defw 0
 266  8A10              ;Stack_4 defw $ff00
 267  8A10 00 00        Stack_snapshot defw 0
 268  8A12 00 00        Stack_snapshot_disparos defw 0
 269  8A14
 270  8A14 00 00        End_Snapshot defw 0
 271  8A16              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 272  8A16 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 273  8A18              ;														; _el snapshot de los registros del siguiente disparo.
 274  8A18              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 275  8A18 00 00        End_Snapshot_1 defw 0
 276  8A1A 00 00        End_Snapshot_disparos_1 defw 0
 277  8A1C 00 00        End_Snapshot_2 defw 0
 278  8A1E 00 00        End_Snapshot_disparos_2 defw 0
 279  8A20 00 00        End_Snapshot_3 defw 0
 280  8A22 00 00        End_Snapshot_disparos_3 defw 0
 281  8A24
 282  8A24 00 00        Puntero_indice_album_de_fotos defw 0
 283  8A26 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 284  8A28
 285  8A28 00 00        Puntero_indice_End_Snapshot defw 0
 286  8A2A 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 287  8A2C 00 00        Puntero_de_End_Snapshot defw 0
 288  8A2E 00 00        Puntero_de_End_Snapshot_disparos defw 0
 289  8A30
 290  8A30              ;---------------------------------------------------------------------------------------------------------------
 291  8A30
 292  8A30              ; Gestión de Disparos.
 293  8A30
 294  8A30 00           Numero_de_disparotes db 0
 295  8A31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 296  8A33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 297  8A35 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 298  8A36              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 299  8A36              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 300  8A36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 301  8A38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 302  8A38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 303  8A38              ;														; _produzca colisión.
 304  8A38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 305  8A3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 306  8A3A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8A3D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 308  8A3D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 309  8A40              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 310  8A40 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 311  8A42 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 312  8A43
 313  8A43              ;---------------------------------------------------------------------------------------------------------------
 314  8A43
 315  8A43              ; Relojes y temporizaciones.
 316  8A43
 317  8A43 00           Contador_de_frames db 0
 318  8A44 00           Contador_de_frames_2 db 0
 319  8A45
 320  8A45 04           Clock_explosion db 4
 321  8A46 1E           Clock_Entidades_en_curso db 30
 322  8A47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 323  8A48              ;														; Repite la oleada de entidades.
 324  8A48 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 325  8A49 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 326  8A4A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 327  8A4B
 328  8A4B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 329  8A4C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 330  8A4D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 331  8A4E
 332  8A4E              ;---------------------------------------------------------------------------------------------------------------
 333  8A4E
 334  8A4E              ; Gestión de NIVELES.
 335  8A4E
 336  8A4E 00           Nivel db 0												; Nivel actual del juego.
 337  8A4F 00 00        Puntero_indice_NIVELES defw 0
 338  8A51 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 339  8A53              ; 														; _ que definen el NIVEL.
 340  8A53              ; Y todo comienza aquí .....
 341  8A53              ;
 342  8A53              ; Rutina principal *************************************************************************************************************************************************************************
 343  8A53              ;
 344  8A53              ;	14/11/22
 345  8A53
 346  8A53              START
 347  8A53
 348  8A53 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 349  8A56 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 350  8A58 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 351  8A5A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 352  8A5C F3           	DI
 353  8A5D
 354  8A5D 3E 07        	ld a,%00000111
 355  8A5F CD 00 9A     	call Cls
 356  8A62
 357  8A62 CD 64 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 358  8A65
 359  8A65              ; INICIALIZACIÓN.
 360  8A65
 361  8A65 CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 362  8A68
 363  8A68 CD 12 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 364  8A6B
 365  8A6B CD D7 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 366  8A6E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 367  8A6E CD ED 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 368  8A71              ;													     ; _ malotes antes de guardar ninguna foto.
 369  8A71              ; ----------
 370  8A71
 371  8A71 CD 14 8E     	call Restore_entidad
 372  8A74
 373  8A74 21 03 8A     	ld hl,Numero_parcial_de_entidades
 374  8A77 46           	ld b,(hl)
 375  8A78 04           	inc b
 376  8A79 05           	dec b
 377  8A7A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 378  8A7C
 379  8A7C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 380  8A7C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 381  8A7C              ;	Pintamos el resto de entidades:
 382  8A7C
 383  8A7C              ;	INICIA ENTIDADES !!!!!
 384  8A7C
 385  8A7C C5           1 push bc  												; Guardo el contador de entidades.
 386  8A7D
 387  8A7D CD 7E 8C     	call Inicia_entidad
 388  8A80
 389  8A80 C1           	pop bc
 390  8A81 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 391  8A83
 392  8A83              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 393  8A83              ; (Esto se dá cuando se inicia una nueva oleada).
 394  8A83
 395  8A83 3A F9 89     	ld a,(Ctrl_1)
 396  8A86 CB 5F        	bit 3,a
 397  8A88 20 18        	jr nz,5F											; Loop
 398  8A8A
 399  8A8A              ; 	INICIA AMADEUS !!!!!
 400  8A8A
 401  8A8A CD 3B 8E     3 call Restore_Amadeus
 402  8A8D CD 91 8D     	call Inicia_Puntero_objeto
 403  8A90 CD 36 94     	call Draw
 404  8A93 CD A0 7F     	call Guarda_foto_registros
 405  8A96 11 A4 85     	ld de,Amadeus_db
 406  8A99 CD 4D 8E     	call Store_Amadeus
 407  8A9C
 408  8A9C              ; 	INICIA DISPAROS !!!!!
 409  8A9C
 410  8A9C CD 4D 8D     	call Inicia_Puntero_Disparo_Entidades
 411  8A9F CD 54 8D     	call Inicia_Puntero_Disparo_Amadeus
 412  8AA2
 413  8AA2              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 414  8AA2
 415  8AA2 CD D7 8C     5 call Inicia_punteros_de_cajas
 416  8AA5 CD 14 8E     	call Restore_entidad
 417  8AA8
 418  8AA8 3A F9 89     	ld a,(Ctrl_1)
 419  8AAB CB 5F        	bit 3,a
 420  8AAD 28 0A        	jr z,6F
 421  8AAF
 422  8AAF              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 423  8AAF
 424  8AAF 21 F9 89     	ld hl,Ctrl_1
 425  8AB2 CB 9E        	res 3,(hl)
 426  8AB4 CD 5B 8D     	call Calcula_numero_de_malotes
 427  8AB7 18 0A        	jr Main
 428  8AB9
 429  8AB9              ; ----------
 430  8AB9
 431  8AB9 3A 03 8A     6 ld a,(Numero_parcial_de_entidades)
 432  8ABC 3C           	inc a
 433  8ABD 32 05 8A     	ld (Numero_de_malotes),a
 434  8AC0
 435  8AC0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 436  8AC0              ; _ tenemos calculado (Numero_de_malotes).
 437  8AC0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 438  8AC0              ; _ para situarnos en el siguiente album.
 439  8AC0
 440  8AC0 CD 1E 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 441  8AC3
 442  8AC3              ; ------------------------------------
 443  8AC3
 444  8AC3              Main
 445  8AC3
 446  8AC3              ;
 447  8AC3              ;	3/8/23
 448  8AC3
 449  8AC3 FB           	ei
 450  8AC4
 451  8AC4 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 452  8AC7 47           	ld b,a
 453  8AC8 3A 43 8A     	ld a,(Contador_de_frames)
 454  8ACB B8           	cp b
 455  8ACC 20 18        	jr nz,13F
 456  8ACE
 457  8ACE 3A 03 8A     	ld a,(Numero_parcial_de_entidades)
 458  8AD1 47           	ld b,a
 459  8AD2 3A 04 8A     	ld a,(Entidades_en_curso)
 460  8AD5 B8           	cp b
 461  8AD6 28 0E        	jr z,13F
 462  8AD8 30 0C        	jr nc,13F
 463  8ADA
 464  8ADA 3C           	inc a
 465  8ADB 32 04 8A     	ld (Entidades_en_curso),a
 466  8ADE
 467  8ADE 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 468  8AE1
 469  8AE1              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 470  8AE1              ;! _ IMPREDECIBLE !!!!
 471  8AE1
 472  8AE1 C6 64        	add 100
 473  8AE3 32 46 8A     	ld (Clock_Entidades_en_curso),a
 474  8AE6
 475  8AE6              ; Habilita disparos.
 476  8AE6
 477  8AE6 21 48 8A     13 ld hl,Disparo_Amadeus
 478  8AE9 11 4A 8A     	ld de,CLOCK_repone_disparo_Amadeus
 479  8AEC CD C5 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 480  8AEF
 481  8AEF 21 4B 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 482  8AF2 11 4D 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 483  8AF5 CD C5 A0     	call Habilita_disparos
 484  8AF8
 485  8AF8              ; COLISIONES.
 486  8AF8
 487  8AF8 CD 18 93     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 488  8AFB
 489  8AFB              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 490  8AFB              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 491  8AFB              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 492  8AFB
 493  8AFB AF           	xor a
 494  8AFC 32 35 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 495  8AFF
 496  8AFF CD D7 8C     	call Inicia_punteros_de_cajas
 497  8B02 CD 14 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 498  8B05              ; 														; _ en DRAW.
 499  8B05 3A B6 89     	ld a,(Filas)
 500  8B08 A7           	and a
 501  8B09 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 502  8B0B CD 26 8E     	call Incrementa_punteros_de_cajas
 503  8B0E 18 F2        	jr 12B
 504  8B10
 505  8B10              ; ---------------------------------------------------------------------------------------
 506  8B10
 507  8B10 3A 03 8A     10 ld a,(Numero_parcial_de_entidades)
 508  8B13 47               ld b,a
 509  8B14 A7           	and a
 510  8B15 20 14        	jr nz,11F
 511  8B17
 512  8B17 21 F9 89     	ld hl,Ctrl_1
 513  8B1A CB 66        	bit 4,(hl)
 514  8B1C C2 A8 8B     	jp nz,16F
 515  8B1F
 516  8B1F 21 F9 89     	ld hl,Ctrl_1
 517  8B22 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 518  8B24
 519  8B24 3A 43 8A     	ld a,(Contador_de_frames)
 520  8B27 3C           	inc a
 521  8B28 32 47 8A     	ld (Activa_recarga_cajas),a
 522  8B2B
 523  8B2B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 524  8B2B
 525  8B2B 3A 04 8A     11 ld a,(Entidades_en_curso)
 526  8B2E A7           	and a
 527  8B2F CA A8 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 528  8B32 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 529  8B33
 530  8B33              ; Código que ejecutamos con cada entidad:
 531  8B33              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 532  8B33
 533  8B33 C5           15 push bc 												; Nº de entidades en curso.
 534  8B34
 535  8B34              ; Impacto ???
 536  8B34
 537  8B34 3A CF 89     	ld a,(Impacto)
 538  8B37 A7           	and a
 539  8B38 28 2D        	jr z,8F
 540  8B3A
 541  8B3A              ; Hay Impacto en esta entidad.
 542  8B3A
 543  8B3A 21 45 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 544  8B3D 35           	dec (hl)
 545  8B3E 20 62        	jr nz,17F
 546  8B40
 547  8B40              ;! Velocidad de la animación de la explosión.
 548  8B40
 549  8B40 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 550  8B42              ;														; _,(velocidad de la explosión).
 551  8B42 CD 8E 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 552  8B45
 553  8B45              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 554  8B45
 555  8B45 3A F7 89     	ld a,(Ctrl_2)
 556  8B48 CB 4F        	bit 1,a
 557  8B4A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 558  8B4C
 559  8B4C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 560  8B4C
 561  8B4C 3A BE 89     	ld a,(CTRL_DESPLZ)
 562  8B4F A7           	and a
 563  8B50 20 08        	jr nz,18F
 564  8B52
 565  8B52 21 84 84     	ld hl,Indice_Explosion_2x2-2
 566  8B55 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 567  8B58 18 06        	jr 19F
 568  8B5A
 569  8B5A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 570  8B5D 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 571  8B60
 572  8B60 21 F7 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 573  8B63 CB CE        	set 1,(hl)
 574  8B65 18 22        	jr 7F
 575  8B67
 576  8B67              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 577  8B67              ; _con las coordenadas de la entidad almacenada en DRAW.
 578  8B67
 579  8B67 3A F9 89     8 ld a,(Ctrl_1)
 580  8B6A CB 57        	bit 2,a
 581  8B6C 28 1B        	jr z,7F
 582  8B6E
 583  8B6E 2A 38 8A     	ld hl,(Coordenadas_disparo_certero)
 584  8B71 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 585  8B72              ;														; E contiene la coordenada_X del disparo.
 586  8B72 2A BC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 587  8B75              ;														; H FILA, (Coordenada_y de la entidad).
 588  8B75 A7           	and a
 589  8B76 ED 52        	sbc hl,de
 590  8B78
 591  8B78 CD 4F 93     	call Determina_resultado_comparativa
 592  8B7B
 593  8B7B 78           	ld a,b
 594  8B7C A7           	and a
 595  8B7D 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 596  8B7F
 597  8B7F              ; ----- ----- -----
 598  8B7F
 599  8B7F 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 600  8B81 32 CF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 601  8B84
 602  8B84 21 F9 89     	ld hl,Ctrl_1
 603  8B87 CB 96        	res 2,(hl)
 604  8B89
 605  8B89 CD 00 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 606  8B8C
 607  8B8C 3A E4 89     	ld a,(Ctrl_0)
 608  8B8F CB 67        	bit 4,a
 609  8B91 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 610  8B93
 611  8B93              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 612  8B93              ; [[[
 613  8B93 CD AF 8E     	call Detecta_disparo_entidad
 614  8B96              ; ]]]
 615  8B96 CD 9E 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 616  8B99
 617  8B99 21 E4 89     	ld hl,Ctrl_0
 618  8B9C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 619  8B9E AF           	xor a
 620  8B9F 32 E5 89     	ld (Obj_dibujado),a
 621  8BA2
 622  8BA2 CD D9 8D     17 call Store_Restore_cajas
 623  8BA5
 624  8BA5 C1           	pop bc
 625  8BA6 10 8B        	djnz 15B
 626  8BA8
 627  8BA8              ; ------------------------------------
 628  8BA8
 629  8BA8              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 630  8BA8              ; Hemos gestionado todas las unidades.
 631  8BA8              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 632  8BA8
 633  8BA8              ;	ld hl,Ctrl_1
 634  8BA8              ;	res 2,(hl)
 635  8BA8
 636  8BA8              ; ------------------------------------
 637  8BA8
 638  8BA8              ; Tras la gestión de las entidades, ... AMADEUS.
 639  8BA8
 640  8BA8 CD 3B 8E     16 call Restore_Amadeus
 641  8BAB
 642  8BAB 3A CF 89     	ld a,(Impacto)
 643  8BAE A7           	and a
 644  8BAF 20 FE        	jr nz,$
 645  8BB1
 646  8BB1 CD 5F 8C     	call Mov_Amadeus
 647  8BB4
 648  8BB4 3A E4 89     	ld a,(Ctrl_0)
 649  8BB7 CB 67        	bit 4,a
 650  8BB9 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 651  8BBB
 652  8BBB CD 9E 8C     	call Guarda_foto_entidad_a_pintar
 653  8BBE
 654  8BBE 21 E4 89     14 ld hl,Ctrl_0
 655  8BC1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 656  8BC3
 657  8BC3 AF           	xor a
 658  8BC4 32 E5 89     	ld (Obj_dibujado),a
 659  8BC7
 660  8BC7 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 661  8BCA CD 4D 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 662  8BCD
 663  8BCD              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 664  8BCD
 665  8BCD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 666  8BCD
 667  8BCD              ;	call Calcula_numero_de_disparotes
 668  8BCD
 669  8BCD CD 1E 8D      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 670  8BD0              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 671  8BD0              ;														; _ interrupción.
 672  8BD0 3E 04        	ld a,4
 673  8BD2 D3 FE        	out ($fe),a
 674  8BD4
 675  8BD4              ; ----------------------------------------
 676  8BD4
 677  8BD4 3A F9 89     	ld a,(Ctrl_1) 										; Existe Loop?
 678  8BD7 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 679  8BD9 CA C3 8A     	jp z,Main
 680  8BDC
 681  8BDC              ; -----
 682  8BDC              ;	(((
 683  8BDC
 684  8BDC 3A 43 8A     	ld a,(Contador_de_frames)
 685  8BDF 47           	ld b,a
 686  8BE0 3A 47 8A     	ld a,(Activa_recarga_cajas)
 687  8BE3 B8           	cp b
 688  8BE4 28 08        	jr z,20F
 689  8BE6
 690  8BE6 21 F9 89     	ld hl,Ctrl_1
 691  8BE9 CB E6        	set 4,(hl)
 692  8BEB C3 C3 8A     	jp Main
 693  8BEE
 694  8BEE 21 F9 89     20 ld hl,Ctrl_1
 695  8BF1 CB A6        	res 4,(hl)
 696  8BF3 F3           	di
 697  8BF4
 698  8BF4 3A 43 8A     	ld a,(Contador_de_frames)
 699  8BF7
 700  8BF7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 701  8BF7              ;! _ IMPREDECIBLE !!!!
 702  8BF7
 703  8BF7 C6 0A        	add 10
 704  8BF9 32 46 8A     	ld (Clock_Entidades_en_curso),a
 705  8BFC
 706  8BFC C3 68 8A     	jp 4B
 707  8BFF
 708  8BFF C9           	ret
 709  8C00
 710  8C00              ; --------------------------------------------------------------------------------------------------------------
 711  8C00              ;
 712  8C00              ;	27/05/23
 713  8C00
 714  8C00              Mov_obj
 715  8C00
 716  8C00              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 717  8C00
 718  8C00 3A F7 89     	ld a,(Ctrl_2)
 719  8C03 CB 4F        	bit 1,a
 720  8C05 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 721  8C07
 722  8C07              ; Explosión:
 723  8C07
 724  8C07 3A F8 89     	ld a,(Frames_explosion)
 725  8C0A A7           	and a
 726  8C0B 20 11        	jr nz,4F
 727  8C0D
 728  8C0D              ; Una alimaña menos!!!!!!!!!1
 729  8C0D
 730  8C0D CD 56 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 731  8C10 21 03 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 732  8C13 35           	dec (hl)
 733  8C14 21 04 8A     	ld hl,Entidades_en_curso
 734  8C17 35           	dec (hl)
 735  8C18 21 02 8A     	ld hl,Numero_de_entidades
 736  8C1B 35           	dec (hl)
 737  8C1C 18 40        	jr 3F
 738  8C1E
 739  8C1E              ; -----
 740  8C1E
 741  8C1E              ;	`Movemos´ la explosión.
 742  8C1E
 743  8C1E 2A C4 89     4 ld hl,(Puntero_DESPLZ_der)
 744  8C21 23           	inc hl
 745  8C22 23           	inc hl
 746  8C23 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 747  8C26 CD 8B 8D     	call Extrae_address
 748  8C29 22 BA 89     	ld (Puntero_objeto),hl
 749  8C2C
 750  8C2C 21 F8 89     	ld hl,Frames_explosion
 751  8C2F 35           	dec (hl)
 752  8C30
 753  8C30 CD 8E 8C     	call Guarda_foto_entidad_a_borrar
 754  8C33 18 29        	jr 3F
 755  8C35
 756  8C35 AF           2 xor a
 757  8C36 32 E5 89     	ld (Obj_dibujado),a
 758  8C39 32 E4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 759  8C3C              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 760  8C3C              ; 														; _de la entidad.
 761  8C3C CD A8 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 762  8C3F              ;														; Obj_dibujado="0".
 763  8C3F              ; Movemos Entidades malignas.
 764  8C3F
 765  8C3F              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 766  8C3F              ;	and a 												; _a movernos. (Limitador_de_entidades).
 767  8C3F              ;	ret z
 768  8C3F
 769  8C3F CD 60 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 770  8C42
 771  8C42 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 772  8C45 CB 67        	bit 4,a
 773  8C47 C8           	ret z
 774  8C48
 775  8C48              ; Ha habido desplazamiento de la entidad maligna.
 776  8C48              ; Ha llegado a zona de AMADEUS ???
 777  8C48
 778  8C48 3A BD 89     	ld a,(Coordenada_y)
 779  8C4B FE 14        	cp $14
 780  8C4D D4 DD 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 781  8C50              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 782  8C50              ; ---------
 783  8C50
 784  8C50 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 785  8C52 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 786  8C55 CD A8 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 787  8C58 CD BF 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 788  8C5B CD 8E 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 789  8C5E C9           3 ret													; _de la misma.
 790  8C5F
 791  8C5F              ; --------------------------------------------------------------------------------------------------------------
 792  8C5F              ;
 793  8C5F              ;	29/1/23
 794  8C5F
 795  8C5F              Mov_Amadeus
 796  8C5F
 797  8C5F AF           	xor a
 798  8C60 32 E5 89     	ld (Obj_dibujado),a
 799  8C63 CD A8 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 800  8C66              ;														; Obj_dibujado="0".
 801  8C66              ; Movemos Amadeus.
 802  8C66
 803  8C66 CD 78 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 804  8C69 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 805  8C6C CB 67        	bit 4,a
 806  8C6E C8           	ret z
 807  8C6F
 808  8C6F              ; ---------
 809  8C6F
 810  8C6F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 811  8C71 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 812  8C74 CD A8 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 813  8C77 CD BF 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 814  8C7A CD 8E 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 815  8C7D C9           	ret													; _de la nave.
 816  8C7E
 817  8C7E              ; -----------------------------------------------------------------------------------
 818  8C7E
 819  8C7E CD 91 8D     Inicia_entidad	call Inicia_Puntero_objeto
 820  8C81 CD 14 9A     	call Recompone_posicion_inicio
 821  8C84 CD 36 94     	call Draw
 822  8C87 CD A0 7F     	call Guarda_foto_registros
 823  8C8A CD D9 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 824  8C8D C9           	ret
 825  8C8E
 826  8C8E              ; --------------------------------------------------------------------------------------------------------------
 827  8C8E              ;
 828  8C8E              ;	31/8/23
 829  8C8E              ;
 830  8C8E              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 831  8C8E
 832  8C8E              Guarda_foto_entidad_a_borrar
 833  8C8E
 834  8C8E CD 1A 97     	call Prepara_draw
 835  8C91 CD 4A 96     	call calcula_CColumnass
 836  8C94 CD 81 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 837  8C97 CD E0 96     	call Define_rutina_de_impresion
 838  8C9A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 839  8C9D C9           	ret
 840  8C9E
 841  8C9E              ; --------------------------------------------------------------------------------------------------------------
 842  8C9E              ;
 843  8C9E              ;	31/08/23
 844  8C9E              ;
 845  8C9E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 846  8C9E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 847  8C9E
 848  8C9E              Guarda_foto_entidad_a_pintar
 849  8C9E
 850  8C9E CD CB 8C     	call Repone_pintar
 851  8CA1 CD 36 94     	call Draw
 852  8CA4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 853  8CA7 C9           	ret
 854  8CA8
 855  8CA8              ; --------------------------------------------------------------------------------------------------------------
 856  8CA8              ;
 857  8CA8              ;
 858  8CA8
 859  8CA8 21 B6 89     Prepara_var_pintado_borrado	ld hl,Filas
 860  8CAB 3A E5 89     	ld a,(Obj_dibujado)
 861  8CAE A7           	and a
 862  8CAF 28 05        	jr z,1F
 863  8CB1 11 DA 89     	ld de,Variables_de_pintado
 864  8CB4 18 03        	jr 2F
 865  8CB6 11 D0 89     1 ld de,Variables_de_borrado
 866  8CB9 01 08 00     2 ld bc,8
 867  8CBC ED B0        	ldir
 868  8CBE C9           	ret
 869  8CBF
 870  8CBF              ; --------------------------------------------------------------------------------------------------------------
 871  8CBF
 872  8CBF 21 D0 89     Repone_borrar ld hl,Variables_de_borrado
 873  8CC2 11 B6 89     	ld de,Filas
 874  8CC5 01 08 00     	ld bc,8
 875  8CC8 ED B0        	ldir
 876  8CCA C9           	ret
 877  8CCB
 878  8CCB 21 DA 89     Repone_pintar ld hl,Variables_de_pintado
 879  8CCE 11 B6 89     	ld de,Filas
 880  8CD1 01 08 00     	ld bc,8
 881  8CD4 ED B0        	ldir
 882  8CD6 C9           	ret
 883  8CD7
 884  8CD7              ; *************************************************************************************************************************************************************
 885  8CD7              ;
 886  8CD7              ; 8/1/23
 887  8CD7              ;
 888  8CD7              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 889  8CD7              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 890  8CD7              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 891  8CD7
 892  8CD7              ; Destruye HL y DE !!!!!
 893  8CD7
 894  8CD7              Inicia_punteros_de_cajas
 895  8CD7
 896  8CD7 21 8C 85     	ld hl,Indice_de_cajas
 897  8CDA CD 8B 8D         call Extrae_address
 898  8CDD 22 FC 89         ld (Puntero_store_caja),hl
 899  8CE0 21 8E 85     	ld hl,Indice_de_cajas+2
 900  8CE3 22 00 8A     	ld (Indice_restore_caja),hl
 901  8CE6 CD 8B 8D     	call Extrae_address
 902  8CE9 22 FE 89     	ld (Puntero_restore_caja),hl
 903  8CEC C9               ret
 904  8CED
 905  8CED              ; ---------------------------------------------------------------
 906  8CED              ;
 907  8CED              ;	9/8/23
 908  8CED              ;
 909  8CED              ;	Inicialización y gestión de álbumes de fotos y cajas.
 910  8CED
 911  8CED              Inicia_punteros_de_albumes_y_malotes
 912  8CED
 913  8CED 21 EC 84     	ld hl,Indice_album_de_fotos
 914  8CF0 22 24 8A     	ld (Puntero_indice_album_de_fotos),hl
 915  8CF3 CD 8B 8D     	call Extrae_address
 916  8CF6 22 10 8A     	ld (Stack_snapshot),hl
 917  8CF9
 918  8CF9 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 919  8CFC 22 26 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 920  8CFF CD 8B 8D     	call Extrae_address
 921  8D02 22 12 8A     	ld (Stack_snapshot_disparos),hl
 922  8D05
 923  8D05 21 FC 84     	ld hl,Indice_End_Snapshot
 924  8D08 22 28 8A     	ld (Puntero_indice_End_Snapshot),hl
 925  8D0B CD 8B 8D     	call Extrae_address
 926  8D0E 22 2C 8A     	ld (Puntero_de_End_Snapshot),hl
 927  8D11
 928  8D11 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 929  8D14 22 2A 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 930  8D17 CD 8B 8D     	call Extrae_address
 931  8D1A 22 2E 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 932  8D1D
 933  8D1D C9           	ret
 934  8D1E
 935  8D1E              ;	12/8/23
 936  8D1E
 937  8D1E              Avanza_puntero_de_album_de_fotos_y_malotes
 938  8D1E
 939  8D1E              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 940  8D1E
 941  8D1E              ; Estamos en el último álbum del índice???.
 942  8D1E
 943  8D1E 2A 24 8A     	ld hl,(Puntero_indice_album_de_fotos)
 944  8D21 01 F2 84     	ld bc,Indice_album_de_fotos+6
 945  8D24 A7           	and a
 946  8D25 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 947  8D27 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 948  8D29
 949  8D29 21 F9 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 950  8D2C CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 951  8D2E 76           	halt
 952  8D2F C9           	ret
 953  8D30
 954  8D30 2A 24 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 955  8D33 23           	inc hl
 956  8D34 23           	inc hl
 957  8D35 22 24 8A     	ld (Puntero_indice_album_de_fotos),hl
 958  8D38 CD 8B 8D     	call Extrae_address
 959  8D3B 22 10 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 960  8D3E
 961  8D3E 2A 28 8A     	ld hl,(Puntero_indice_End_Snapshot)
 962  8D41 23           	inc hl
 963  8D42 23           	inc hl
 964  8D43 22 28 8A     	ld (Puntero_indice_End_Snapshot),hl
 965  8D46 CD 8B 8D     	call Extrae_address
 966  8D49 22 2C 8A     	ld (Puntero_de_End_Snapshot),hl
 967  8D4C
 968  8D4C C9           	ret
 969  8D4D
 970  8D4D              ; *************************************************************************************************************************************************************
 971  8D4D              ;
 972  8D4D              ; 8/1/23
 973  8D4D              ;
 974  8D4D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 975  8D4D
 976  8D4D 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 977  8D50 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 978  8D53 C9           	ret
 979  8D54 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 980  8D57 22 33 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 981  8D5A C9           	ret
 982  8D5B
 983  8D5B              ; -------------------------------------------------------------------------------------------------------------
 984  8D5B              ;
 985  8D5B              ; 3/8/23
 986  8D5B              ;
 987  8D5B
 988  8D5B              Calcula_numero_de_malotes
 989  8D5B
 990  8D5B 21 00 70     	ld hl,Album_de_fotos
 991  8D5E EB           	ex de,hl
 992  8D5F 2A 14 8A     	ld hl,(End_Snapshot)
 993  8D62
 994  8D62 06 00        	ld b,0
 995  8D64 7D           	ld a,l
 996  8D65 93           	sub e
 997  8D66 28 07        	jr z,1F
 998  8D68
 999  8D68              ; Nº de malotes no es "0".
1000  8D68
1001  8D68 D6 06        2 sub 6
1002  8D6A 04           	inc b
1003  8D6B A7           	and a
1004  8D6C 20 FA        	jr nz,2B
1005  8D6E 78           	ld a,b
1006  8D6F
1007  8D6F 32 05 8A     1 ld (Numero_de_malotes),a
1008  8D72 C9           	ret
1009  8D73
1010  8D73              ; -------------------------------------------------------------------------------------------------------------
1011  8D73              ;
1012  8D73              ; 28/2/23
1013  8D73              ;
1014  8D73
1015  8D73              Calcula_numero_de_disparotes
1016  8D73
1017  8D73 21 0D 72     	ld hl,Album_de_fotos_disparos
1018  8D76 EB           	ex de,hl
1019  8D77 2A 2E 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1020  8D7A
1021  8D7A 06 00        	ld b,0
1022  8D7C 7D           	ld a,l
1023  8D7D 93           	sub e
1024  8D7E 28 07        	jr z,1F
1025  8D80
1026  8D80              ; Nº de malotes no es "0".
1027  8D80
1028  8D80 D6 06        2 sub 6
1029  8D82 04           	inc b
1030  8D83 A7           	and a
1031  8D84 20 FA        	jr nz,2B
1032  8D86 78           	ld a,b
1033  8D87
1034  8D87 32 30 8A     1 ld (Numero_de_disparotes),a
1035  8D8A C9           	ret
1036  8D8B
1037  8D8B              ; *************************************************************************************************************************************************************
1038  8D8B              ;
1039  8D8B              ; 20/10/22
1040  8D8B              ;
1041  8D8B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1042  8D8B              ;
1043  8D8B              ; Destruye el puntero y DE !!!!!
1044  8D8B
1045  8D8B 5E           Extrae_address ld e,(hl)
1046  8D8C 23           	inc hl
1047  8D8D 56           	ld d,(hl)
1048  8D8E 2B           	dec hl
1049  8D8F EB           	ex de,hl
1050  8D90 C9           	ret
1051  8D91
1052  8D91              ; *************************************************************************************************************************************************************
1053  8D91              ;
1054  8D91              ;	7/2/23
1055  8D91              ;
1056  8D91              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1057  8D91              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1058  8D91              ;
1059  8D91              ;   Destruye HL y BC !!!!!,
1060  8D91              ;
1061  8D91              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1062  8D91              ;					"0" ..... Izquierda.
1063  8D91
1064  8D91              Inicia_Puntero_objeto
1065  8D91
1066  8D91 3A CA 89     	ld a,(Cuad_objeto)
1067  8D94 E6 01        	and 1
1068  8D96 F5           	push af
1069  8D97 CC B5 8D     	call z,Inicia_puntero_objeto_izq
1070  8D9A F1           	pop af
1071  8D9B 28 2B        	jr z,1F
1072  8D9D CD A2 8D     	call Inicia_puntero_objeto_der
1073  8DA0 18 26        	jr 1F
1074  8DA2
1075  8DA2              ; Arrancamos desde la parte izquierda de la pantalla.
1076  8DA2              ; Iniciamos (Indice_Sprite_der).
1077  8DA2
1078  8DA2 2A C0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1079  8DA5 22 C4 89     	ld (Puntero_DESPLZ_der),hl
1080  8DA8 CD 8B 8D     	call Extrae_address
1081  8DAB 22 BA 89     	ld (Puntero_objeto),hl
1082  8DAE
1083  8DAE 2A C2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1084  8DB1 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1085  8DB4 C9           	ret
1086  8DB5
1087  8DB5              ; Arrancamos desde la parte derecha de la pantalla.
1088  8DB5              ; Iniciamos (Indice_Sprite_izq).
1089  8DB5
1090  8DB5 2A C2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1091  8DB8 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1092  8DBB CD 8B 8D     	call Extrae_address
1093  8DBE 22 BA 89     	ld (Puntero_objeto),hl
1094  8DC1
1095  8DC1 2A C0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1096  8DC4 22 C4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1097  8DC7 C9           	ret
1098  8DC8
1099  8DC8              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1100  8DC8
1101  8DC8 21 40 83     1 ld hl,Amadeus
1102  8DCB ED 4B BA 89  	ld bc,(Puntero_objeto)
1103  8DCF B7 ED 42     	sub hl,bc
1104  8DD2 C0           	ret nz
1105  8DD3 21 E4 89     	ld hl,Ctrl_0
1106  8DD6 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1107  8DD8 C9           	ret 												; _de nuestra nave en los extremos.
1108  8DD9
1109  8DD9              ; *************************************************************************************************************************************************************
1110  8DD9              ;
1111  8DD9              ;	14/5/23
1112  8DD9              ;
1113  8DD9              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1114  8DD9              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1115  8DD9
1116  8DD9              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1117  8DD9              ;	_de la 2ª y 3ª entidad respectivamente.
1118  8DD9
1119  8DD9              Store_Restore_cajas
1120  8DD9
1121  8DD9 E5           	push hl
1122  8DDA D5           	push de
1123  8DDB C5            	push bc
1124  8DDC
1125  8DDC              ;	STORE !!!!!
1126  8DDC              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1127  8DDC
1128  8DDC 21 B6 89     	ld hl,Filas
1129  8DDF ED 5B FC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1130  8DE3 01 43 00     	ld bc,67
1131  8DE6 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1132  8DE8
1133  8DE8              ; 	Entidad_sospechosa. 20/4/23
1134  8DE8
1135  8DE8 3A CF 89     	ld a,(Impacto)
1136  8DEB A7           	and a
1137  8DEC 28 0C        	jr z,1F
1138  8DEE
1139  8DEE 2A FC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1140  8DF1 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1141  8DF4 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1142  8DF5 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1143  8DF7 22 36 8A     	ld (Entidad_sospechosa_de_colision),hl
1144  8DFA
1145  8DFA              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1146  8DFA
1147  8DFA 2A FE 89     1 ld hl,(Puntero_restore_caja)
1148  8DFD 7E           	ld a,(hl)
1149  8DFE A7           	and a
1150  8DFF F5           	push af
1151  8E00 28 08        	jr z,2F
1152  8E02
1153  8E02 11 B6 89     	ld de,Filas
1154  8E05 01 43 00     	ld bc,67
1155  8E08 ED B0        	ldir
1156  8E0A
1157  8E0A CD 26 8E     2 call Incrementa_punteros_de_cajas
1158  8E0D F1           	pop af
1159  8E0E 28 EA        	jr z,1B
1160  8E10
1161  8E10 C1           	pop bc
1162  8E11 D1           	pop de
1163  8E12 E1           	pop hl
1164  8E13
1165  8E13 C9           	ret
1166  8E14
1167  8E14              ; **************************************************************************************************
1168  8E14              ;
1169  8E14              ;	12/05/23
1170  8E14              ;
1171  8E14              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1172  8E14
1173  8E14 E5           Restore_entidad push hl
1174  8E15 D5           	push de
1175  8E16 C5            	push bc
1176  8E17
1177  8E17 2A FC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1178  8E1A 11 B6 89     	ld de,Filas
1179  8E1D 01 43 00     	ld bc,67
1180  8E20 ED B0        	ldir
1181  8E22
1182  8E22 C1           	pop bc
1183  8E23 D1           	pop de
1184  8E24 E1           	pop hl
1185  8E25 C9           	ret
1186  8E26
1187  8E26
1188  8E26              ; **************************************************************************************************
1189  8E26              ;
1190  8E26              ;	08/05/23
1191  8E26              ;
1192  8E26              ;	Incrementamos los dos punteros de entidades. (+1).
1193  8E26
1194  8E26 2A FE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1195  8E29 22 FC 89     	ld (Puntero_store_caja),hl
1196  8E2C 2A 00 8A     	ld hl,(Indice_restore_caja)
1197  8E2F 23           	inc hl
1198  8E30 23           	inc hl
1199  8E31 22 00 8A     	ld (Indice_restore_caja),hl
1200  8E34 CD 8B 8D         call Extrae_address
1201  8E37 22 FE 89         ld (Puntero_restore_caja),hl
1202  8E3A C9               ret
1203  8E3B
1204  8E3B              ; **************************************************************************************************
1205  8E3B              ;
1206  8E3B              ;	25/01/23
1207  8E3B              ;
1208  8E3B              ;	Restore_Amadeus
1209  8E3B              ;
1210  8E3B              ;	Cargamos en DRAW los parámetros de Amadeus.
1211  8E3B              ;
1212  8E3B
1213  8E3B E5           Restore_Amadeus	push hl
1214  8E3C D5           	push de
1215  8E3D C5            	push bc
1216  8E3E 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1217  8E41 11 B6 89     	ld de,Filas
1218  8E44 01 43 00     	ld bc,67
1219  8E47 ED B0        	ldir
1220  8E49 C1           	pop bc
1221  8E4A D1           	pop de
1222  8E4B E1           	pop hl
1223  8E4C C9           	ret
1224  8E4D
1225  8E4D              ; *************************************************************************************************************************************************************
1226  8E4D              ;
1227  8E4D              ;	29/04/23
1228  8E4D              ;
1229  8E4D              ;	Store_Amadeus
1230  8E4D              ;
1231  8E4D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1232  8E4D              ;
1233  8E4D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1234  8E4D              ;
1235  8E4D              ;	DESTRUYE: HL y BC y DE.
1236  8E4D
1237  8E4D 21 B6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1238  8E50 01 43 00     	ld bc,67
1239  8E53 ED B0        	ldir
1240  8E55 C9           	ret
1241  8E56
1242  8E56              ; -----------------------------------------------------------
1243  8E56              ;
1244  8E56              ;	27/04/23
1245  8E56              ;
1246  8E56              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1247  8E56              ;
1248  8E56              ;	Destruye: HL,BC,DE,A
1249  8E56
1250  8E56 21 B6 89     Borra_datos_entidad ld hl,Filas
1251  8E59 01 42 00     	ld bc,66
1252  8E5C AF           	xor a
1253  8E5D 77           	ld (hl),a
1254  8E5E 11 B7 89     	ld de,Filas+1
1255  8E61 ED B0        	ldir
1256  8E63 C9           	ret
1257  8E64
1258  8E64              ; -----------------------------------------------------------
1259  8E64
1260  8E64              ; Teclado.
1261  8E64
1262  8E64 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1263  8E66 DB FE        	in a,($fe)
1264  8E68 E6 01        	and $01
1265  8E6A 28 02        	jr z,1f
1266  8E6C 18 F6        	jr Pulsa_ENTER
1267  8E6E C9           1 ret
1268  8E6F
1269  8E6F              ; **************************************************************************************************
1270  8E6F              ;
1271  8E6F              ; Temporización.
1272  8E6F
1273  8E6F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1274  8E6F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1275  8E6F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1276  8E6F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1277  8E6F
1278  8E6F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1279  8E6F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1280  8E6F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1281  8E6F
1282  8E6F              ; A partir de $4f61 no hace falta DELAY.
1283  8E6F
1284  8E6F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1285  8E6F
1286  8E6F 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1287  8E72 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1288  8E73 78           	LD A,B
1289  8E74 A7           	AND A
1290  8E75 20 FB        	JR NZ,wait
1291  8E77 C9           	RET
1292  8E78
1293  8E78              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1294  8E78              ;
1295  8E78              ;	5/3/23
1296  8E78              ;
1297  8E78              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1298  8E78
1299  8E78              Movimiento_Amadeus
1300  8E78
1301  8E78              ; Disparo.
1302  8E78
1303  8E78 3A 48 8A     	ld a,(Disparo_Amadeus)
1304  8E7B A7           	and a
1305  8E7C 20 02        	jr nz,1F
1306  8E7E 18 15        	jr 2F
1307  8E80
1308  8E80 3E F7        1 ld a,$f7													; "5" para disparar.
1309  8E82 DB FE        	in a,($fe)
1310  8E84 E6 10        	and $10
1311  8E86
1312  8E86 F5           	push af
1313  8E87 CC 40 8F     	call z,Genera_disparo
1314  8E8A F1           	pop af
1315  8E8B 20 08        	jr nz,2F
1316  8E8D
1317  8E8D 3A 48 8A     	ld a,(Disparo_Amadeus)
1318  8E90 EE 01        	xor 1
1319  8E92 32 48 8A     	ld (Disparo_Amadeus),a
1320  8E95
1321  8E95 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1322  8E97 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1323  8E99 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1324  8E9B CC CE 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1325  8E9E 3E F7        	ld a,$f7
1326  8EA0 DB FE        	in a,($fe)
1327  8EA2 E6 01        	and $01
1328  8EA4 C8           	ret z
1329  8EA5
1330  8EA5 3E F7        	ld a,$f7
1331  8EA7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1332  8EA9 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1333  8EAB CC B0 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1334  8EAE C9           	ret
1335  8EAF
1336  8EAF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1337  8EAF              ;
1338  8EAF              ;	Rutina provisional para que los malotes cagen balas.
1339  8EAF
1340  8EAF              Detecta_disparo_entidad
1341  8EAF
1342  8EAF 3A 4B 8A     	ld a,(Disparo_entidad)
1343  8EB2 A7           	and a
1344  8EB3 C8           	ret z
1345  8EB4
1346  8EB4              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1347  8EB4
1348  8EB4              ;	ld a,$7f				; Detecta SPACE.
1349  8EB4              ;	in a,($fe)
1350  8EB4              ;	and 1
1351  8EB4              ;	ret nz
1352  8EB4
1353  8EB4              ;	call Genera_disparo
1354  8EB4 C9           	ret
1355  8EB5
1356  8EB5              ; ----------------------------------------------------------------------
1357  8EB5              ;
1358  8EB5              ;	11/8/23
1359  8EB5
1360  8EB5              Frame
1361  8EB5
1362  8EB5              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1363  8EB5              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1364  8EB5
1365  8EB5              ; PINTAMOS.
1366  8EB5
1367  8EB5 ED 73 0E 8A  	ld (Stack_3),sp
1368  8EB9              ;	ld sp,(Stack_4)
1369  8EB9
1370  8EB9 08           	ex af,af'
1371  8EBA F5           	push af	;af'
1372  8EBB
1373  8EBB D9           	exx
1374  8EBC E5           	push hl	;hl'
1375  8EBD D5           	push de	;de'
1376  8EBE C5           	push bc	;bc'
1377  8EBF
1378  8EBF D9           	exx
1379  8EC0 E5           	push hl	;hl
1380  8EC1 D5           	push de	;de
1381  8EC2 C5           	push bc	;bc
1382  8EC3
1383  8EC3 08           	ex af,af'
1384  8EC4 F5           	push af	;af
1385  8EC5
1386  8EC5 DD E5        	push ix
1387  8EC7 FD E5        	push iy
1388  8EC9
1389  8EC9 3E 02        	ld a,2
1390  8ECB D3 FE            out ($fe),a											; Rojo.
1391  8ECD
1392  8ECD              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1393  8ECD              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1394  8ECD
1395  8ECD 2A 24 8A     	ld hl,(Puntero_indice_album_de_fotos)
1396  8ED0 01 EC 84     	ld bc,Indice_album_de_fotos
1397  8ED3 A7           	and a
1398  8ED4 ED 42        	sbc hl,bc
1399  8ED6 28 4E        	jr z,6F
1400  8ED8
1401  8ED8              ; $59,
1402  8ED8
1403  8ED8 CD 5B 8D     	call Calcula_numero_de_malotes
1404  8EDB
1405  8EDB CD 44 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1406  8EDE
1407  8EDE              ;	call Extrae_foto_disparos
1408  8EDE 3E 01            ld a,1
1409  8EE0 D3 FE            out ($fe),a											; Azul.
1410  8EE2
1411  8EE2              ; 	Gestiona albumes de fotos.
1412  8EE2
1413  8EE2              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1414  8EE2 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1415  8EE5
1416  8EE5              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1417  8EE5
1418  8EE5 3A F9 89     	ld a,(Ctrl_1)
1419  8EE8 CB 6F        	bit 5,a
1420  8EEA 20 24        	jr nz,1F
1421  8EEC
1422  8EEC              ; No hemos terminado de guardar el último FRAME.
1423  8EEC
1424  8EEC 2A 24 8A     	ld hl,(Puntero_indice_album_de_fotos)
1425  8EEF              ;	ld bc,Indice_album_de_fotos
1426  8EEF 2B           	dec hl
1427  8EF0 2B           	dec hl
1428  8EF1
1429  8EF1              ;	ld a,l
1430  8EF1              ;	sub c
1431  8EF1              ;	jr z,$
1432  8EF1
1433  8EF1 22 24 8A     	ld (Puntero_indice_album_de_fotos),hl
1434  8EF4
1435  8EF4 2A 28 8A     	ld hl,(Puntero_indice_End_Snapshot)
1436  8EF7 2B           	dec hl
1437  8EF8 2B           	dec hl
1438  8EF9 22 28 8A     	ld (Puntero_indice_End_Snapshot),hl
1439  8EFC CD 8B 8D     	call Extrae_address
1440  8EFF 22 2C 8A     	ld (Puntero_de_End_Snapshot),hl
1441  8F02
1442  8F02 CD 8B 8D     	call Extrae_address
1443  8F05
1444  8F05              ; Esta vacío este album???
1445  8F05
1446  8F05 24           	inc h
1447  8F06 25           	dec h
1448  8F07 20 02        	jr nz,5F
1449  8F09
1450  8F09              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1451  8F09
1452  8F09 18 05        	jr 1F
1453  8F0B
1454  8F0B 22 10 8A     5 ld (Stack_snapshot),hl
1455  8F0E 18 09        	jr 2F
1456  8F10
1457  8F10              ; FRAME completo.
1458  8F10
1459  8F10 2A 24 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1460  8F13 CD 8B 8D     	call Extrae_address
1461  8F16 22 10 8A     	ld (Stack_snapshot),hl
1462  8F19
1463  8F19              ;	En este punto:
1464  8F19
1465  8F19              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1466  8F19              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1467  8F19
1468  8F19              ; RELOJES.
1469  8F19
1470  8F19 21 43 8A     2 ld hl,Contador_de_frames
1471  8F1C 7E           	ld a,(hl)
1472  8F1D FE FF        	cp $ff
1473  8F1F 20 04        	jr nz,3F
1474  8F21 34           	inc (hl)
1475  8F22 21 44 8A     	ld hl,Contador_de_frames_2
1476  8F25 34           3 inc (hl)											; 0 - 255
1477  8F26
1478  8F26 21 F9 89     6 ld hl,Ctrl_1
1479  8F29 CB AE        	res 5,(hl)
1480  8F2B
1481  8F2B FD E1        	pop iy
1482  8F2D DD E1        	pop ix
1483  8F2F
1484  8F2F F1           	pop af
1485  8F30 C1           	pop bc
1486  8F31 D1           	pop de
1487  8F32 E1           	pop hl
1488  8F33 D9           	exx
1489  8F34 C1           	pop bc
1490  8F35 D1           	pop de
1491  8F36 E1           	pop hl
1492  8F37 08           	ex af,af'
1493  8F38 F1           	pop af
1494  8F39
1495  8F39 08           	ex af,af'
1496  8F3A D9           	exx
1497  8F3B
1498  8F3B              ;	ld (Stack_4),sp
1499  8F3B ED 7B 0E 8A  	ld sp,(Stack_3)
1500  8F3F
1501  8F3F
1502  8F3F C9           	ret
1503  8F40
1504  8F40              ; ---------------------------------------------------------------
1505  8F40
1506  8F40              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F40              ; ******************************************************************************************************************************************************************************************
   2+ 8F40              ;
   3+ 8F40              ;   21/07/23
   4+ 8F40              ;
   5+ 8F40              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F40              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F40              ;
   8+ 8F40              ;
   9+ 8F40              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F40              ;
  11+ 8F40              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F40              ;               _ hacen las entidades hacia abajo.
  13+ 8F40              ;
  14+ 8F40              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F40              ;
  16+ 8F40              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F40              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F40              ;
  19+ 8F40              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F40              ;           _ la bala.
  21+ 8F40              ;
  22+ 8F40              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F40              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F40              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F40              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F40              ;           _ en el momento de generarse la bala)).
  27+ 8F40
  28+ 8F40              Genera_disparo
  29+ 8F40
  30+ 8F40              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F40              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F40              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F40              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F40              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F40              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F40              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F40
  38+ 8F40              ; Exclusiones:
  39+ 8F40
  40+ 8F40 3A CE 89         ld a,(Vel_down)
  41+ 8F43 47               ld b,a
  42+ 8F44 3A 42 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F47 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F48 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F49 3A F3 89         ld a,(Columnas)
  46+ 8F4C 47               ld b,a
  47+ 8F4D 3A B7 89         ld a,(Columns)
  48+ 8F50 B8               cp b
  49+ 8F51 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F52
  51+ 8F52              ; ----- ----- -----
  52+ 8F52
  53+ 8F52 3A E4 89         ld a,(Ctrl_0)
  54+ 8F55 CB 77            bit 6,a
  55+ 8F57 20 06            jr nz,14F
  56+ 8F59
  57+ 8F59 3A BD 89         ld a,(Coordenada_y)
  58+ 8F5C FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F5E D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F5F
  61+ 8F5F 21 00 80     14 ld hl,Indice_disparo
  62+ 8F62 3A BE 89         ld a,(CTRL_DESPLZ)
  63+ 8F65 4F               ld c,a
  64+ 8F66 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F68              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F68              ;                                            ""        ""       "f9", B="1"
  67+ 8F68              ;                                            ""        ""       "fb", B="2"
  68+ 8F68              ;                                            ""        ""       "fb", B="3"
  69+ 8F68 A7               and a
  70+ 8F69 28 10            jr z,1F
  71+ 8F6B E6 01            and 1
  72+ 8F6D C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F6E
  74+ 8F6E 79               ld a,c
  75+ 8F6F 16 F9            ld d,$f9
  76+ 8F71 23           2 inc hl
  77+ 8F72 23               inc hl
  78+ 8F73 04               inc b
  79+ 8F74 BA               cp d
  80+ 8F75 28 04            jr z,1F
  81+ 8F77 14               inc d
  82+ 8F78 14               inc d
  83+ 8F79 18 F6            jr 2B
  84+ 8F7B
  85+ 8F7B CD 8B 8D     1 call Extrae_address
  86+ 8F7E E5               push hl
  87+ 8F7F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F81 DD 21 C9 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F85
  90+ 8F85              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F85              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F85
  93+ 8F85 3A E4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F88 CB 77            bit 6,a
  95+ 8F8A 20 04            jr nz,19F
  96+ 8F8C
  97+ 8F8C AF               xor a
  98+ 8F8D 32 4B 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F90
 100+ 8F90 3A CA 89     19 ld a,(Cuad_objeto)
 101+ 8F93 FE 02            cp 2
 102+ 8F95 38 66            jr c,3F
 103+ 8F97 28 64            jr z,3F
 104+ 8F99
 105+ 8F99              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F99
 107+ 8F99 E6 01            and 1
 108+ 8F9B 28 30            jr z,4F
 109+ 8F9D
 110+ 8F9D              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F9D              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F9D              ;
 113+ 8F9D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F9D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F9D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F9D
 117+ 8F9D 2A B8 89     	ld hl,(Posicion_actual)
 118+ 8FA0
 119+ 8FA0              ;   Amadeus o entidad ???.
 120+ 8FA0
 121+ 8FA0 3A E4 89         ld a,(Ctrl_0)
 122+ 8FA3 CB 77            bit 6,a
 123+ 8FA5 28 0A            jr z,8F
 124+ 8FA7
 125+ 8FA7              ; 	Dispara Amadeus.
 126+ 8FA7
 127+ 8FA7 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8FA9 CD 35 97         call PreviousScan
 129+ 8FAC CD 35 97         call PreviousScan
 130+ 8FAF
 131+ 8FAF              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8FAF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8FAF              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8FAF              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8FAF
 136+ 8FAF 18 11            jr 10F
 137+ 8FB1
 138+ 8FB1              ; 	Dispara Entidad.
 139+ 8FB1
 140+ 8FB1 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8FB4              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8FB4
 143+ 8FB4              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8FB4              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8FB4
 146+ 8FB4 C5               push bc
 147+ 8FB5 06 10            ld b,16
 148+ 8FB7 CD 26 97     9 call NextScan
 149+ 8FBA 10 FB            djnz 9B
 150+ 8FBC C1               pop bc
 151+ 8FBD CD 27 90         call Ajusta_disparo_parte_izquierda
 152+ 8FC0 18 06            jr 17F
 153+ 8FC2
 154+ 8FC2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FC2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FC2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FC2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FC2
 159+ 8FC2 CD 27 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FC5 CD 9C 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FC8              ;                                                      ; _al generar el disparo.
 162+ 8FC8
 163+ 8FC8              ; 	LLegados a este punto tendremos:
 164+ 8FC8              ;
 165+ 8FC8              ;       Puntero_objeto_disparo en IY.
 166+ 8FC8              ;       Rutinas_de_impresion en IX.
 167+ 8FC8              ;       Puntero_de_impresion en HL.
 168+ 8FC8              ;       Impacto/Dirección en BC.
 169+ 8FC8
 170+ 8FC8 CD 2F 90     17 call Almacena_disparo
 171+ 8FCB 18 52            jr 6F                                             ; RET.
 172+ 8FCD
 173+ 8FCD              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FCD              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FCD              ;
 176+ 8FCD              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FCD              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FCD              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FCD
 180+ 8FCD 2A B8 89     4 ld hl,(Posicion_actual)
 181+ 8FD0
 182+ 8FD0              ;   Amadeus o entidad ???.
 183+ 8FD0
 184+ 8FD0 3A E4 89         ld a,(Ctrl_0)
 185+ 8FD3 CB 77            bit 6,a
 186+ 8FD5 28 0A            jr z,11F
 187+ 8FD7
 188+ 8FD7              ; 	Dispara Amadeus.
 189+ 8FD7
 190+ 8FD7 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FD9 CD 35 97         call PreviousScan
 192+ 8FDC CD 35 97         call PreviousScan
 193+ 8FDF
 194+ 8FDF              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FDF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FDF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FDF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FDF
 199+ 8FDF 18 11            jr 13F
 200+ 8FE1
 201+ 8FE1              ; 	Dispara Entidad.
 202+ 8FE1
 203+ 8FE1 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FE4              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FE4
 206+ 8FE4              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FE4              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FE4
 209+ 8FE4 C5               push bc
 210+ 8FE5 06 10            ld b,16
 211+ 8FE7 CD 26 97     12 call NextScan
 212+ 8FEA 10 FB            djnz 12B
 213+ 8FEC C1               pop bc
 214+ 8FED
 215+ 8FED CD 20 90         call Ajusta_disparo_parte_derecha
 216+ 8FF0 18 06            jr 18F
 217+ 8FF2
 218+ 8FF2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FF2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FF2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FF2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FF2
 223+ 8FF2 CD 20 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FF5 CD 9C 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FF8              ;                                                       ; _al generar el disparo.
 226+ 8FF8
 227+ 8FF8              ; LLegados a este punto tendremos:
 228+ 8FF8              ;
 229+ 8FF8              ;       Puntero_objeto_disparo en IY.
 230+ 8FF8              ;       Rutinas_de_impresion en IX.
 231+ 8FF8              ;       Puntero_de_impresion en HL.
 232+ 8FF8              ;       Impacto/Dirección en BC.
 233+ 8FF8
 234+ 8FF8 CD 2F 90     18 call Almacena_disparo
 235+ 8FFB 18 22            jr 6F                                               ; RET.
 236+ 8FFD
 237+ 8FFD              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FFD
 239+ 8FFD 28 11        3 jr z,5F
 240+ 8FFF
 241+ 8FFF              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FFF              ;
 243+ 8FFF              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FFF              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FFF              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FFF              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FFF
 248+ 8FFF              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FFF              ;	   ""        ""       "f9", B="1"
 250+ 8FFF              ;	   ""        ""       "fb", B="2"
 251+ 8FFF              ; 	   ""        ""       "fb", B="3"
 252+ 8FFF
 253+ 8FFF 2A B8 89     	ld hl,(Posicion_actual)
 254+ 9002 CD 26 97     	call NextScan
 255+ 9005
 256+ 9005              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9005              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9005              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9005              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9005
 261+ 9005 CD 27 90         call Ajusta_disparo_parte_izquierda
 262+ 9008
 263+ 9008              ; 	No se produce impacto. B="$80"
 264+ 9008              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9008
 266+ 9008 01 80 80         ld bc,$8080
 267+ 900B
 268+ 900B              ; 	LLegados a este punto tendremos:
 269+ 900B              ;
 270+ 900B              ;       Puntero_objeto_disparo en IY.
 271+ 900B              ;       Rutinas_de_impresion en IX.
 272+ 900B              ;       Puntero_de_impresion en HL.
 273+ 900B              ;       Impacto/Dirección en BC.
 274+ 900B
 275+ 900B CD 2F 90         call Almacena_disparo
 276+ 900E 18 0F            jr 6F                                           ; RET.
 277+ 9010
 278+ 9010              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9010              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9010              ;
 281+ 9010              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9010              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9010              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9010              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9010
 286+ 9010 2A B8 89     5 ld hl,(Posicion_actual)
 287+ 9013 CD 26 97     	call NextScan
 288+ 9016
 289+ 9016              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9016              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9016              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9016              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9016
 294+ 9016 CD 20 90         call Ajusta_disparo_parte_derecha
 295+ 9019
 296+ 9019              ; 	No se produce impacto. B="$80"
 297+ 9019              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9019
 299+ 9019 01 80 80     15 ld bc,$8080
 300+ 901C
 301+ 901C              ; 	LLegados a este punto tendremos:
 302+ 901C              ;
 303+ 901C              ;       Puntero_objeto_disparo en IY.
 304+ 901C              ;       Rutinas_de_impresion en IX.
 305+ 901C              ;       Puntero_de_impresion en HL.
 306+ 901C              ;       Impacto/Dirección en BC.
 307+ 901C
 308+ 901C CD 2F 90         call Almacena_disparo
 309+ 901F
 310+ 901F C9           6 ret
 311+ 9020
 312+ 9020              ; ----------------------------------------------------------------
 313+ 9020              ;
 314+ 9020              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9020              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9020              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9020
 318+ 9020 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9021 FE 02            cp 2
 320+ 9023 38 01            jr c,1F
 321+ 9025 23               inc hl
 322+ 9026 C9           1 ret
 323+ 9027
 324+ 9027 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9028 FE 01        	cp 1
 326+ 902A 20 01        	jr nz,1F
 327+ 902C 2B           	dec hl
 328+ 902D 2B           1 dec hl
 329+ 902E C9               ret
 330+ 902F
 331+ 902F              ; ----------------------------------------------------------------
 332+ 902F              ;
 333+ 902F              ;   25/02/23
 334+ 902F              ;
 335+ 902F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 902F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 902F              ;
 338+ 902F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 902F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 902F
 341+ 902F              Almacena_disparo
 342+ 902F
 343+ 902F E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9030 F1               pop af
 345+ 9031 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9032
 347+ 9032 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9033 E6 01            and 1
 349+ 9035 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9037              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9037              ; 	Dispara AMADEUS.
 352+ 9037
 353+ 9037              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9037              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9037              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9037              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9037
 358+ 9037 C5               push bc
 359+ 9038 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 903B 2A 33 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 903E A7               and a
 362+ 903F ED 42            sbc hl,bc
 363+ 9041 CC 54 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9044 C1               pop bc
 365+ 9045 28 54            jr z,4F
 366+ 9047
 367+ 9047 2A 33 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 904A 23               inc hl
 369+ 904B 23               inc hl
 370+ 904C 22 33 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 904F              ;                                                   ; _ Disparo_(+1).
 372+ 904F 18 18            jr 2F
 373+ 9051
 374+ 9051              ; Dispara una entidad.
 375+ 9051
 376+ 9051 C5           1 push bc
 377+ 9052 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9055 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9058 A7               and a
 380+ 9059 ED 42            sbc hl,bc
 381+ 905B CC 4D 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 905E C1               pop bc
 383+ 905F 28 3A            jr z,4F
 384+ 9061
 385+ 9061 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9064 23               inc hl
 387+ 9065 23               inc hl
 388+ 9066 22 31 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9069              ;                                                   ; _ Disparo_(+1).
 390+ 9069 CD 8B 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 906C              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 906C              ;
 393+ 906C              ;                                                     Puntero_objeto_disparo en IY.
 394+ 906C              ;                                                     Rutinas_de_impresion en IX.
 395+ 906C              ;                                                     Puntero_de_impresion en HL.
 396+ 906C              ;                                                     Impacto/Dirección en BC.
 397+ 906C
 398+ 906C 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 906D 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 906E 23               inc hl                                          ; _ al siguiente.
 401+ 906F A7               and a
 402+ 9070 20 C0            jr nz,3B
 403+ 9072
 404+ 9072 08               ex af,af
 405+ 9073 ED 73 0A 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9077 F9               ld sp,hl
 407+ 9078
 408+ 9078 DD E5            push ix                                         ; Rutina de impresión.
 409+ 907A F5               push af                                         ; Puntero de impresión.
 410+ 907B FD E5            push iy                                         ; Puntero objeto.
 411+ 907D C5               push bc                                         ; Control.
 412+ 907E
 413+ 907E ED 7B 0A 8A      ld sp,(Stack)
 414+ 9082
 415+ 9082              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9082
 417+ 9082 21 F9 89     	ld hl,Ctrl_1
 418+ 9085 CB C6        	set 0,(hl)
 419+ 9087
 420+ 9087 DD E5        	push ix
 421+ 9089 E1               pop hl
 422+ 908A F5               push af
 423+ 908B DD E1            pop ix
 424+ 908D
 425+ 908D CD A0 7F     	call Guarda_foto_registros
 426+ 9090
 427+ 9090 21 F9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9093 CB 86        	res 0,(hl)
 429+ 9095
 430+ 9095              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9095              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9095
 433+ 9095 CD 54 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9098 CD 4D 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 909B
 436+ 909B C9           4 ret
 437+ 909C
 438+ 909C              ; ----------------------------------------------------------------
 439+ 909C              ;
 440+ 909C              ;   4/3/23
 441+ 909C              ;
 442+ 909C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 909C              ;   _ al generarse el disparo.
 444+ 909C              ;
 445+ 909C              ;       "$80" ..... No se produce colisión.
 446+ 909C              ;       "$81" ..... Se produce colisión.
 447+ 909C              ;
 448+ 909C              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 909C              ;         _ que forman el disparo.
 450+ 909C
 451+ 909C
 452+ 909C              Comprueba_Colision
 453+ 909C
 454+ 909C              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 909C
 456+ 909C FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 909E E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 909F
 459+ 909F CD D5 90         call Modifica_H_Velocidad_disparo
 460+ 90A2
 461+ 90A2 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 90A3 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 90A5 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 90A7
 465+ 90A7 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 90A9 CD C5 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 90AC
 468+ 90AC 7B               ld a,e
 469+ 90AD E6 01            and 1
 470+ 90AF 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 90B1              ;                                                  ; _ para activar IMPACTO.
 472+ 90B1 E1               pop hl
 473+ 90B2 E5               push hl
 474+ 90B3 CD 26 97         call NextScan
 475+ 90B6
 476+ 90B6 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 90B7 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 90B9 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 90BB              ;                                                  ; _ 2º scanline si esto es así.
 480+ 90BB 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90BD CD C5 90         call Bucle_2
 482+ 90C0
 483+ 90C0 43           1 ld b,e
 484+ 90C1 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90C2 FD E1            pop iy
 486+ 90C4 C9               ret
 487+ 90C5
 488+ 90C5              ; ---------- ----------
 489+ 90C5
 490+ 90C5 06 02        Bucle_2 ld b,2
 491+ 90C7 FD 7E 00     2 ld a,(iy)
 492+ 90CA A6               and (hl)
 493+ 90CB 28 02            jr z,1F
 494+ 90CD 1E 81            ld e,$81
 495+ 90CF 23           1 inc hl
 496+ 90D0 FD 23            inc iy
 497+ 90D2 10 F3            djnz 2B
 498+ 90D4 C9               ret
 499+ 90D5
 500+ 90D5              ; ---------- ----------
 501+ 90D5              ;
 502+ 90D5              ;   21/7/23
 503+ 90D5
 504+ 90D5              Modifica_H_Velocidad_disparo
 505+ 90D5
 506+ 90D5 3A 42 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90D8 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90DA D0               ret nc                                         ; _ incrementamos H.
 509+ 90DB 24               inc h
 510+ 90DC
 511+ 90DC C9               ret
 512+ 90DD
 513+ 90DD              ; -------------------------------------------------------------------------------------------------------------
 514+ 90DD              ;
 515+ 90DD              ;   11/04/23
 516+ 90DD              ;
 517+ 90DD              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90DD              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90DD              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90DD              ;
 521+ 90DD              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90DD
 523+ 90DD              Compara_coordenadas_X
 524+ 90DD
 525+ 90DD              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90DD              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90DD
 528+ 90DD              ; Preparamos registros:
 529+ 90DD
 530+ 90DD 21 BC 89         ld hl,Filas+6
 531+ 90E0 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90E1 23               inc hl
 533+ 90E2 23               inc hl
 534+ 90E3 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90E4 43               ld b,e
 536+ 90E5
 537+ 90E5 21 CA 89         ld hl,Filas+20
 538+ 90E8 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90E9 21 3D 8A         ld hl,Coordenadas_X_Entidad
 540+ 90EC CD 08 93         call Guarda_coordenadas_X
 541+ 90EF
 542+ 90EF              ; Preparamos registros:
 543+ 90EF
 544+ 90EF 21 AA 85         ld hl,Amadeus_db+6
 545+ 90F2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90F3 23               inc hl
 547+ 90F4 23               inc hl
 548+ 90F5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90F6 7B               ld a,e
 550+ 90F7 08               ex af,af'
 551+ 90F8 21 B8 85         ld hl,Amadeus_db+20
 552+ 90FB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90FC 21 3A 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90FF CD 08 93         call Guarda_coordenadas_X
 555+ 9102
 556+ 9102              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9102              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9102
 559+ 9102 04               inc b
 560+ 9103 05               dec b
 561+ 9104 28 04            jr z,1F
 562+ 9106 06 03            ld b,3
 563+ 9108 18 02            jr 2F
 564+ 910A 06 02        1 ld b,2
 565+ 910C 08           2 ex af,af'
 566+ 910D 3C               inc a
 567+ 910E 3D               dec a
 568+ 910F 28 04            jr z,5F
 569+ 9111 0E 03            ld c,3
 570+ 9113 18 02            jr 6F
 571+ 9115 0E 02        5 ld c,2
 572+ 9117 79           6 ld a,c
 573+ 9118 08               ex af,af'
 574+ 9119 11 3D 8A         ld de,Coordenadas_X_Entidad
 575+ 911C 1A           4 ld a,(de)
 576+ 911D 21 3A 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9120 BE           3 cp (hl)
 578+ 9121 28 0E            jr z,7F
 579+ 9123 23               inc hl
 580+ 9124 0D               dec c
 581+ 9125 20 F9            jr nz,3B
 582+ 9127 13               inc de
 583+ 9128 08               ex af,af'
 584+ 9129 4F               ld c,a
 585+ 912A 08               ex af,af'
 586+ 912B 10 EF            djnz 4B
 587+ 912D
 588+ 912D              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 912D
 590+ 912D CD 44 93     8 call Limpia_Coordenadas_X
 591+ 9130 C9               ret
 592+ 9131
 593+ 9131 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9133 32 CF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9136 21 35 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9139 CB D6            set 2,(hl)
 597+ 913B 18 F0            jr 8B
 598+ 913D
 599+ 913D              ; -----------------------------------------------------------------------
 600+ 913D              ;
 601+ 913D              ;   17/04/23
 602+ 913D              ;
 603+ 913D
 604+ 913D              Detecta_colision_nave_entidad
 605+ 913D
 606+ 913D              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 913D
 608+ 913D 2A B8 89         ld hl,(Posicion_actual)
 609+ 9140 CD 81 96         call Calcula_puntero_de_impresion
 610+ 9143
 611+ 9143              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9143              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9143
 614+ 9143 DD E5            push ix
 615+ 9145 E1               pop hl
 616+ 9146 E5               push hl
 617+ 9147
 618+ 9147              ; ----- ----- -----
 619+ 9147 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9149 06 0A            ld b,10
 621+ 914B CD 7B 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 914E 7B               ld a,e
 623+ 914F FE 05            cp 5
 624+ 9151 38 0E            jr c,3F
 625+ 9153
 626+ 9153              ; LLegados a este punto:
 627+ 9153              ;
 628+ 9153              ;   HAY COLISIÓN !!!!!.
 629+ 9153              ;
 630+ 9153              ;   .db (Impacto) de Amadeus a "1".
 631+ 9153              ;   SET el bit3 de (Impacto2).
 632+ 9153              ;
 633+ 9153              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9153
 635+ 9153 21 BD 85         ld hl,Amadeus_db+25
 636+ 9156 36 01            ld (hl),1
 637+ 9158 21 35 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 915B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 915D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 915F 18 18            jr 1F
 641+ 9161
 642+ 9161              ; -----
 643+ 9161
 644+ 9161 E1           3 pop hl
 645+ 9162 CD 26 97         call NextScan
 646+ 9165 E5               push hl
 647+ 9166 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9167 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9169 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 916B 30 0C            jr nc,1F
 651+ 916D              ;                                                  ; _ 2º scanline si esto es así.
 652+ 916D 10 DC            djnz 2B
 653+ 916F
 654+ 916F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 916F
 656+ 916F              ; LLegados a este punto:
 657+ 916F              ;
 658+ 916F              ;   NO HAY COLISIÓN !!!!!.
 659+ 916F              ;
 660+ 916F              ;   .db (Impacto) de Amadeus a "0".
 661+ 916F              ;   RES el bit2 de (Impacto2).
 662+ 916F              ;
 663+ 916F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 916F              ;   Lo colocamos a "0".
 665+ 916F
 666+ 916F 21 35 8A         ld hl,Impacto2
 667+ 9172 CB 96            res 2,(hl)
 668+ 9174 2A 36 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9177 36 00            ld (hl),0
 670+ 9179
 671+ 9179 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 917A C9               ret
 673+ 917B
 674+ 917B               ; ---------- ----------
 675+ 917B
 676+ 917B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 917C 3A B7 89         ld a,(Columns)
 678+ 917F 47               ld b,a
 679+ 9180 FD 7E 00     2 ld a,(iy)
 680+ 9183 BE               cp (hl)
 681+ 9184 28 01            jr z,1F
 682+ 9186
 683+ 9186 1C               inc e
 684+ 9187
 685+ 9187 23           1 inc hl
 686+ 9188 FD 23            inc iy
 687+ 918A 10 F4            djnz 2B
 688+ 918C C1               pop bc
 689+ 918D C9               ret
 690+ 918E
 691+ 918E              ; -------------------------------------------------------------------------------------------------------------
 692+ 918E              ;
 693+ 918E              ;   13/03/23
 694+ 918E              ;
 695+ 918E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 918E              ;
 697+ 918E              ;   DESTRUYE: HL,BC,DE y A.
 698+ 918E
 699+ 918E 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9191 7E               ld a,(hl)
 701+ 9192 A7               and a
 702+ 9193 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9194
 704+ 9194 44               ld b,h
 705+ 9195 4D               ld c,l
 706+ 9196 2A 12 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9199 E5               push hl
 708+ 919A A7               and a
 709+ 919B ED 42            sbc hl,bc
 710+ 919D E5               push hl
 711+ 919E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 919F
 713+ 919F E1               pop hl
 714+ 91A0 54               ld d,h
 715+ 91A1 5D               ld e,l
 716+ 91A2 1B               dec de
 717+ 91A3 ED B8            lddr                                                ; Limpiamos.
 718+ 91A5
 719+ 91A5 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 91A8 22 12 8A         ld (Stack_snapshot_disparos),hl
 721+ 91AB
 722+ 91AB C9               ret
 723+ 91AC
 724+ 91AC              ; -------------------------------------------------------------------------------------------------------------
 725+ 91AC              ;
 726+ 91AC              ;   18/07/23
 727+ 91AC              ;
 728+ 91AC
 729+ 91AC              Motor_de_disparos
 730+ 91AC
 731+ 91AC              ; Gestiona DISPAROS DE AMADEUS.
 732+ 91AC
 733+ 91AC 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 91AF 2A 33 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 91B2
 736+ 91B2 CD 8B 8D     2 call Extrae_address
 737+ 91B5 7E               ld a,(hl)
 738+ 91B6 A7               and a
 739+ 91B7 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 91B9
 741+ 91B9              ; ----- ----- ----- ----- ----- -----
 742+ 91B9
 743+ 91B9 C5               push bc
 744+ 91BA CD 7E 92         call foto_disparo_a_borrar
 745+ 91BD
 746+ 91BD              ; Existe colisión con este disparo???
 747+ 91BD
 748+ 91BD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91BE 7E               ld a,(hl)
 750+ 91BF 2B               dec hl
 751+ 91C0 E6 01            and 1
 752+ 91C2 28 1D            jr z,9F
 753+ 91C4
 754+ 91C4              ;   En este punto:
 755+ 91C4              ;
 756+ 91C4              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91C4              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91C4              ;   _con la entidad).
 759+ 91C4              ;
 760+ 91C4              ;   Disparo_2A defw 0                                ; Control.
 761+ 91C4              ;    defw 0                                          ; Puntero objeto.
 762+ 91C4              ;    defw 0                                          ; Puntero de impresión.
 763+ 91C4              ;    defw 0                                          ; Rutina de impresión.
 764+ 91C4
 765+ 91C4 E5               push hl
 766+ 91C5
 767+ 91C5 06 04            ld b,4
 768+ 91C7 23           19 inc hl
 769+ 91C8 10 FD            djnz 19B
 770+ 91CA
 771+ 91CA CD 8B 8D         call Extrae_address
 772+ 91CD CD AC 9D         call Genera_coordenadas_disparo
 773+ 91D0
 774+ 91D0              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91D0
 776+ 91D0 21 38 8A         ld hl,Coordenadas_disparo_certero
 777+ 91D3 72               ld (hl),d
 778+ 91D4 23               inc hl
 779+ 91D5 73               ld (hl),e
 780+ 91D6
 781+ 91D6              ; Elimino el disparo de la base de datos.
 782+ 91D6
 783+ 91D6 E1               pop hl
 784+ 91D7 CD FD 92         call Elimina_disparo_de_base_de_datos
 785+ 91DA 21 35 8A         ld hl,Impacto2
 786+ 91DD CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91DF
 788+ 91DF 18 06            jr 11F
 789+ 91E1
 790+ 91E1 CD A7 92     9 call Mueve_disparo
 791+ 91E4 CD 7E 92         call foto_disparo_a_borrar
 792+ 91E7
 793+ 91E7 C1           11 pop bc
 794+ 91E8 18 04            jr 7F
 795+ 91EA
 796+ 91EA              ; ----- ----- ----- ----- ----- -----
 797+ 91EA
 798+ 91EA ED 42        1 sbc hl,bc
 799+ 91EC 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91EE
 801+ 91EE 2A 33 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91F1 23               inc hl
 803+ 91F2 23               inc hl
 804+ 91F3 22 33 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91F6 18 BA            jr 2B
 806+ 91F8
 807+ 91F8 CD 54 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91FB              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91FB
 810+ 91FB              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91FB
 812+ 91FB 01 8A 85         ld bc,Disparo_11
 813+ 91FE 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9201
 815+ 9201 CD 8B 8D     5 call Extrae_address
 816+ 9204 7E               ld a,(hl)
 817+ 9205 A7               and a
 818+ 9206 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9208
 820+ 9208              ; ----- ----- ----- ----- ----- -----
 821+ 9208
 822+ 9208 C5               push bc
 823+ 9209 CD 7E 92         call foto_disparo_a_borrar
 824+ 920C
 825+ 920C              ; Existe colisión con este disparo???
 826+ 920C
 827+ 920C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 920D 7E               ld a,(hl)
 829+ 920E 2B               dec hl
 830+ 920F E6 01            and 1
 831+ 9211 28 4D            jr z,10F
 832+ 9213
 833+ 9213              ;! La colisión se produce con Amadeus???
 834+ 9213              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9213
 836+ 9213 E5               push hl
 837+ 9214
 838+ 9214 06 04            ld b,4
 839+ 9216 23           16 inc hl
 840+ 9217 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9219
 842+ 9219 CD 8B 8D         call Extrae_address
 843+ 921C CD AC 9D         call Genera_coordenadas_disparo
 844+ 921F
 845+ 921F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9220 FE 16            cp $16
 847+ 9222 38 2A            jr c,15F
 848+ 9224
 849+ 9224
 850+ 9224              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9224
 852+ 9224 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9225
 854+ 9225              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9225
 856+ 9225
 857+ 9225 2A 40 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9228
 859+ 9228              ; Coordenada X de Amadeus en D.
 860+ 9228
 861+ 9228 7D               ld a,l
 862+ 9229 E6 1F            and $1F
 863+ 922B 57               ld d,a
 864+ 922C
 865+ 922C 21 AC 85         ld hl,Amadeus_db+8
 866+ 922F 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9230
 868+ 9230 21 3A 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9233 CD 08 93         call Guarda_coordenadas_X
 870+ 9236
 871+ 9236 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9237
 873+ 9237              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9237
 875+ 9237 06 02            ld b,2
 876+ 9239 C5           20 push bc
 877+ 923A
 878+ 923A 06 03            ld b,3
 879+ 923C 21 3A 8A         ld hl,Coordenadas_X_Amadeus
 880+ 923F 7E           18 ld a,(hl)
 881+ 9240 BA               cp d
 882+ 9241 20 04            jr nz,17F
 883+ 9243
 884+ 9243              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9243
 886+ 9243 C1               pop bc
 887+ 9244 E1               pop hl
 888+ 9245 18 0D            jr 14F
 889+ 9247
 890+ 9247 23           17 inc hl
 891+ 9248 10 F5            djnz 18B
 892+ 924A
 893+ 924A 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 924B
 895+ 924B C1               pop bc
 896+ 924C 10 EB            djnz 20B
 897+ 924E
 898+ 924E
 899+ 924E              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 924E              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 924E
 902+ 924E E1           15 pop hl
 903+ 924F 23               inc hl
 904+ 9250 35               dec (hl)
 905+ 9251 2B               dec hl
 906+ 9252 18 0C            jr 10F
 907+ 9254
 908+ 9254              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9254              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9254
 911+ 9254 E5           14 push hl
 912+ 9255 CD FD 92         call Elimina_disparo_de_base_de_datos
 913+ 9258 21 35 8A         ld hl,Impacto2
 914+ 925B CB CE            set 1,(hl)
 915+ 925D E1               pop hl
 916+ 925E 18 06            jr 12F
 917+ 9260
 918+ 9260              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9260
 920+ 9260 CD A7 92     10 call Mueve_disparo
 921+ 9263 CD 7E 92         call foto_disparo_a_borrar
 922+ 9266 C1           12 pop bc
 923+ 9267
 924+ 9267 18 04            jr 8F
 925+ 9269
 926+ 9269              ; ----- ----- ----- ----- ----- -----
 927+ 9269
 928+ 9269 ED 42        4 sbc hl,bc
 929+ 926B 28 0A            jr z,6F
 930+ 926D
 931+ 926D 2A 31 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9270 23               inc hl
 933+ 9271 23               inc hl
 934+ 9272 22 31 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9275 18 8A            jr 5B
 936+ 9277
 937+ 9277 CD 4D 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 927A CD 44 93         call Limpia_Coordenadas_X
 939+ 927D C9               ret
 940+ 927E
 941+ 927E              ; ------------------------------------------------------------------
 942+ 927E
 943+ 927E              foto_disparo_a_borrar
 944+ 927E
 945+ 927E 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 927F A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9280 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9281
 949+ 9281 E5               push hl
 950+ 9282 23               inc hl
 951+ 9283 23               inc hl
 952+ 9284 ED 73 0A 8A      ld (Stack),sp
 953+ 9288 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9289 FD E1            pop iy
 955+ 928B DD E1            pop ix
 956+ 928D E1               pop hl
 957+ 928E ED 7B 0A 8A      ld sp,(Stack)
 958+ 9292 3A F9 89         ld a,(Ctrl_1)
 959+ 9295 CB C7            set 0,a
 960+ 9297 32 F9 89         ld (Ctrl_1),a
 961+ 929A CD A0 7F         call Guarda_foto_registros
 962+ 929D 3A F9 89         ld a,(Ctrl_1)
 963+ 92A0 CB 87            res 0,a
 964+ 92A2 32 F9 89         ld (Ctrl_1),a
 965+ 92A5 E1               pop hl
 966+ 92A6 C9               ret
 967+ 92A7
 968+ 92A7              ;---------------------------------------------------
 969+ 92A7              ;
 970+ 92A7              ;   18/07/23
 971+ 92A7              ;
 972+ 92A7
 973+ 92A7              Mueve_disparo
 974+ 92A7
 975+ 92A7              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 92A7              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 92A7              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 92A7
 979+ 92A7 E5               push hl
 980+ 92A8
 981+ 92A8 7E               ld a,(hl)
 982+ 92A9
 983+ 92A9 06 04            ld b,4
 984+ 92AB 23           1 inc hl
 985+ 92AC 10 FD            djnz 1B
 986+ 92AE
 987+ 92AE              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 92AE
 989+ 92AE CD 8B 8D         call Extrae_address
 990+ 92B1
 991+ 92B1 E6 01            and 1
 992+ 92B3 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 92B5
 994+ 92B5              ; Disparo hacia arriba, (Amadeus).
 995+ 92B5
 996+ 92B5              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 92B5              ; _ de la dificultad.
 998+ 92B5
 999+ 92B5 CD 35 97         call PreviousScan
1000+ 92B8 CD 35 97         call PreviousScan
1001+ 92BB CD 35 97         call PreviousScan
1002+ 92BE CD 35 97         call PreviousScan
1003+ 92C1
1004+ 92C1              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92C1
1006+ 92C1 7C               ld a,h
1007+ 92C2 FE 40            cp $40
1008+ 92C4 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92C6
1010+ 92C6              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92C6
1012+ 92C6 EB               ex de,hl
1013+ 92C7 06 04            ld b,4
1014+ 92C9 2B           6 dec hl
1015+ 92CA 10 FD            djnz 6B
1016+ 92CC
1017+ 92CC CD FD 92         call Elimina_disparo_de_base_de_datos
1018+ 92CF E1               pop hl
1019+ 92D0 18 10            jr 7F
1020+ 92D2
1021+ 92D2              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92D2              ; HL contiene el puntero de impresión del disparo.
1023+ 92D2              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92D2
1025+ 92D2 D5           3 push de
1026+ 92D3 C5               push bc
1027+ 92D4
1028+ 92D4 CD 9C 90         call Comprueba_Colision
1029+ 92D7
1030+ 92D7              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92D7
1032+ 92D7 78               ld a,b
1033+ 92D8
1034+ 92D8 C1               pop bc
1035+ 92D9 D1               pop de
1036+ 92DA
1037+ 92DA EB               ex de,hl
1038+ 92DB
1039+ 92DB 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92DC 23               inc hl                                      ; _ movimiento.
1041+ 92DD 72               ld (hl),d
1042+ 92DE
1043+ 92DE E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92DF
1045+ 92DF 23               inc hl                                      ; _ en curso.
1046+ 92E0 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92E1 2B               dec hl
1048+ 92E2
1049+ 92E2 C9           7 ret
1050+ 92E3
1051+ 92E3              ; Disparo hacia abajo, (Entidad).
1052+ 92E3
1053+ 92E3 3A 42 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92E6 47               ld b,a
1055+ 92E7
1056+ 92E7 CD 26 97     4 call NextScan
1057+ 92EA 10 FB            djnz 4B
1058+ 92EC
1059+ 92EC              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92EC
1061+ 92EC 7C               ld a,h
1062+ 92ED FE 58            cp $58
1063+ 92EF 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92F1
1065+ 92F1 EB               ex de,hl
1066+ 92F2 06 04            ld b,4
1067+ 92F4 2B           5 dec hl
1068+ 92F5 10 FD            djnz 5B
1069+ 92F7
1070+ 92F7 CD FD 92         call Elimina_disparo_de_base_de_datos
1071+ 92FA E1               pop hl
1072+ 92FB 18 E5            jr 7B
1073+ 92FD
1074+ 92FD              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92FD
1076+ 92FD 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9300 AF               xor a
1078+ 9301 77               ld (hl),a
1079+ 9302 54               ld d,h
1080+ 9303 5D               ld e,l
1081+ 9304 13               inc de
1082+ 9305 ED B0            ldir
1083+ 9307 C9               ret
1084+ 9308
1085+ 9308              ; -----------------------------------------------------------------
1086+ 9308              ;
1087+ 9308              ;   19/7/23
1088+ 9308              ;
1089+ 9308              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9308              ;
1091+ 9308              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9308              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9308              ;
1094+ 9308              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9308              ;
1096+ 9308              ;   INPUTS:
1097+ 9308              ;
1098+ 9308              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9308              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9308
1101+ 9308              ;   MODIFICA: A, HL, BC y DE.
1102+ 9308
1103+ 9308              Guarda_coordenadas_X
1104+ 9308
1105+ 9308 7B               ld a,e
1106+ 9309 A7               and a
1107+ 930A 20 04            jr nz,1F
1108+ 930C
1109+ 930C 06 02            ld b,2
1110+ 930E 18 02            jr 2F
1111+ 9310
1112+ 9310 06 03        1 ld b,3
1113+ 9312 72           2 ld (hl),d
1114+ 9313 23               inc hl
1115+ 9314 14               inc d
1116+ 9315 10 FB            djnz 2B
1117+ 9317
1118+ 9317 C9               ret
1119+ 9318
1120+ 9318              ; -----------------------------------------------------------------
1121+ 9318              ;
1122+ 9318              ;   12/04/23
1123+ 9318              ;
1124+ 9318
1125+ 9318 3A 35 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 931B A7               and a
1127+ 931C C8               ret z
1128+ 931D
1129+ 931D FE 04            cp 4
1130+ 931F 20 09            jr nz,1F
1131+ 9321
1132+ 9321
1133+ 9321              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9321
1135+ 9321 CD 3D 91         call Detecta_colision_nave_entidad
1136+ 9324
1137+ 9324 21 35 8A         ld hl,Impacto2
1138+ 9327 CB 5E            bit 3,(hl)
1139+ 9329 C0               ret nz                                               ; Existe colisión, RET.
1140+ 932A
1141+ 932A              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 932A              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 932A
1144+ 932A 21 35 8A     1 ld hl,Impacto2
1145+ 932D CB 4E            bit 1,(hl)
1146+ 932F 28 07            jr z,2F
1147+ 9331
1148+ 9331 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9334 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9336 18 0B            jr 3F
1151+ 9338
1152+ 9338 21 35 8A     2 ld hl,Impacto2
1153+ 933B CB 46            bit 0,(hl)
1154+ 933D C8               ret z
1155+ 933E
1156+ 933E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 933E
1158+ 933E 21 F9 89         ld hl,Ctrl_1
1159+ 9341 CB D6            set 2,(hl)
1160+ 9343
1161+ 9343 C9           3 ret
1162+ 9344
1163+ 9344              ; -----------------------------------------------------------------
1164+ 9344              ;
1165+ 9344              ;   19/7/23
1166+ 9344              ;
1167+ 9344              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9344
1169+ 9344 AF           Limpia_Coordenadas_X xor a
1170+ 9345 06 06            ld b,6
1171+ 9347 21 3A 8A         ld hl,Coordenadas_X_Amadeus
1172+ 934A 77           1 ld (hl),a
1173+ 934B 23               inc hl
1174+ 934C 10 FC            djnz 1B
1175+ 934E C9               ret
1176+ 934F
1177+ 934F              ; -----------------------------------------------------------------
1178+ 934F              ;
1179+ 934F              ;   25/04/23
1180+ 934F              ;
1181+ 934F
1182+ 934F              Determina_resultado_comparativa
1183+ 934F
1184+ 934F              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 934F              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 934F              ;
1187+ 934F              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 934F              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 934F              ;
1190+ 934F              ;   SBC HL,DE
1191+ 934F
1192+ 934F              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 934F              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 934F
1195+ 934F              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 934F              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 934F
1198+ 934F
1199+ 934F 3A CA 89         ld a,(Cuad_objeto)
1200+ 9352 FE 02            cp 2
1201+ 9354 28 26            jr z,2F
1202+ 9356 38 24            jr c,2F
1203+ 9358
1204+ 9358              ; Cuadrantes 3º y 4º
1205+ 9358
1206+ 9358 E6 01            and 1
1207+ 935A 28 10            jr z,4F
1208+ 935C
1209+ 935C              ; Cuadrante 3º
1210+ 935C
1211+ 935C 7C               ld a,h
1212+ 935D 06 00            ld b,0
1213+ 935F
1214+ 935F CD EA 93         call Compara_cositas_H3
1215+ 9362
1216+ 9362 04               inc b
1217+ 9363 05               dec b
1218+ 9364 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9365
1220+ 9365 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9366 06 00            ld b,0
1222+ 9368
1223+ 9368 CD FC 93         call Compara_cositas_L3
1224+ 936B C9               ret
1225+ 936C
1226+ 936C              ; Cuadrante 4º
1227+ 936C
1228+ 936C 7C           4 ld a,h
1229+ 936D 06 00            ld b,0
1230+ 936F
1231+ 936F CD 0E 94         call Compara_cositas_H4
1232+ 9372
1233+ 9372 04               inc b
1234+ 9373 05               dec b
1235+ 9374 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9375
1237+ 9375 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9376 06 00            ld b,0
1239+ 9378
1240+ 9378 CD 24 94         call Compara_cositas_L4
1241+ 937B C9               ret
1242+ 937C
1243+ 937C              ; Cuadrantes 1º y 2º.
1244+ 937C
1245+ 937C 28 10        2 jr z,3F
1246+ 937E
1247+ 937E              ; 1er Cuadrante
1248+ 937E
1249+ 937E 7C               ld a,h
1250+ 937F 06 00            ld b,0
1251+ 9381
1252+ 9381 CD C2 93         call Compara_cositas_H1
1253+ 9384
1254+ 9384 04               inc b
1255+ 9385 05               dec b
1256+ 9386 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9387
1258+ 9387 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9388 06 00            ld b,0
1260+ 938A
1261+ 938A CD D8 93         call Compara_cositas_L1
1262+ 938D C9               ret
1263+ 938E
1264+ 938E
1265+ 938E              ; 2º Cuadrante
1266+ 938E
1267+ 938E 7C           3 ld a,h
1268+ 938F 06 00            ld b,0
1269+ 9391
1270+ 9391 CD 9E 93         call Compara_cositas_H2
1271+ 9394
1272+ 9394 04               inc b
1273+ 9395 05               dec b
1274+ 9396 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9397
1276+ 9397 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9398 06 00            ld b,0
1278+ 939A
1279+ 939A CD B0 93         call Compara_cositas_L2
1280+ 939D C9               ret
1281+ 939E
1282+ 939E A7           Compara_cositas_H2 and a
1283+ 939F 28 0D            jr z,1F
1284+ 93A1              ;    cp $fd
1285+ 93A1              ;    jr z,1F
1286+ 93A1              ;    cp $fe
1287+ 93A1              ;    jr z,1F
1288+ 93A1 FE FF            cp $ff
1289+ 93A3 28 09            jr z,1F
1290+ 93A5 FE 01            cp $01
1291+ 93A7 28 05            jr z,1F
1292+ 93A9 FE 02            cp $02
1293+ 93AB 28 01            jr z,1F
1294+ 93AD C0               ret nz
1295+ 93AE 04           1 inc b
1296+ 93AF C9               ret
1297+ 93B0
1298+ 93B0 A7           Compara_cositas_L2 and a
1299+ 93B1 28 0D            jr z,1F
1300+ 93B3              ;    cp $fd
1301+ 93B3              ;    jr z,1F
1302+ 93B3 FE FE            cp $fe
1303+ 93B5 28 09            jr z,1F
1304+ 93B7 FE FF            cp $ff
1305+ 93B9 28 05            jr z,1F
1306+ 93BB FE 01            cp $01
1307+ 93BD 28 01            jr z,1F
1308+ 93BF              ;    cp $02
1309+ 93BF              ;    jr z,1F
1310+ 93BF C0               ret nz
1311+ 93C0 04           1 inc b
1312+ 93C1 C9               ret
1313+ 93C2
1314+ 93C2 A7           Compara_cositas_H1 and a
1315+ 93C3 28 11            jr z,1F
1316+ 93C5              ;    cp $fd
1317+ 93C5              ;    jr z,1F
1318+ 93C5              ;    cp $fe
1319+ 93C5              ;    jr z,1F
1320+ 93C5 FE FF            cp $ff
1321+ 93C7 28 0D            jr z,1F
1322+ 93C9 FE 01            cp $01
1323+ 93CB 28 09            jr z,1F
1324+ 93CD FE 02            cp $02
1325+ 93CF 28 05            jr z,1F
1326+ 93D1 FE 03            cp $03
1327+ 93D3 28 01            jr z,1F
1328+ 93D5 C0               ret nz
1329+ 93D6 04           1 inc b
1330+ 93D7 C9               ret
1331+ 93D8
1332+ 93D8 A7           Compara_cositas_L1 and a
1333+ 93D9 28 0D            jr z,1F
1334+ 93DB              ;    cp $fd
1335+ 93DB              ;    jr z,1F
1336+ 93DB              ;    cp $fe
1337+ 93DB              ;    jr z,1F
1338+ 93DB              ;    cp $ff
1339+ 93DB              ;    jr z,1F
1340+ 93DB FE 01            cp $01
1341+ 93DD 28 09            jr z,1F
1342+ 93DF FE 02            cp $02
1343+ 93E1 28 05            jr z,1F
1344+ 93E3 FE 03            cp $03
1345+ 93E5 28 01            jr z,1F
1346+ 93E7 C0               ret nz
1347+ 93E8 04           1 inc b
1348+ 93E9 C9               ret
1349+ 93EA
1350+ 93EA A7           Compara_cositas_H3 and a
1351+ 93EB 28 0D            jr z,1F
1352+ 93ED              ;    cp $fd
1353+ 93ED              ;    jr z,1F
1354+ 93ED FE FE            cp $fe
1355+ 93EF 28 09            jr z,1F
1356+ 93F1 FE FF            cp $ff
1357+ 93F3 28 05            jr z,1F
1358+ 93F5 FE 01            cp $01
1359+ 93F7 28 01            jr z,1F
1360+ 93F9              ;    cp $02
1361+ 93F9              ;    jr z,1F
1362+ 93F9              ;    cp $03
1363+ 93F9              ;    jr z,1F
1364+ 93F9 C0               ret nz
1365+ 93FA 04           1 inc b
1366+ 93FB C9               ret
1367+ 93FC
1368+ 93FC A7           Compara_cositas_L3 and a
1369+ 93FD 28 0D            jr z,1F
1370+ 93FF              ;    cp $fd
1371+ 93FF              ;    jr z,1F
1372+ 93FF              ;    cp $fe
1373+ 93FF              ;    jr z,1F
1374+ 93FF              ;    cp $ff
1375+ 93FF              ;    jr z,1F
1376+ 93FF FE 01            cp $01
1377+ 9401 28 09            jr z,1F
1378+ 9403 FE 02            cp $02
1379+ 9405 28 05            jr z,1F
1380+ 9407 FE 03            cp $03
1381+ 9409 28 01            jr z,1F
1382+ 940B C0               ret nz
1383+ 940C 04           1 inc b
1384+ 940D C9               ret
1385+ 940E
1386+ 940E A7           Compara_cositas_H4 and a
1387+ 940F 28 11            jr z,1F
1388+ 9411 FE FD            cp $fd
1389+ 9413 28 0D            jr z,1F
1390+ 9415 FE FE            cp $fe
1391+ 9417 28 09            jr z,1F
1392+ 9419 FE FF            cp $ff
1393+ 941B 28 05            jr z,1F
1394+ 941D FE 01            cp $01
1395+ 941F 28 01            jr z,1F
1396+ 9421              ;    cp $02
1397+ 9421              ;    jr z,1F
1398+ 9421              ;    cp $03
1399+ 9421              ;    jr z,1F
1400+ 9421 C0               ret nz
1401+ 9422 04           1 inc b
1402+ 9423 C9               ret
1403+ 9424
1404+ 9424 A7           Compara_cositas_L4 and a
1405+ 9425 28 0D            jr z,1F
1406+ 9427              ;    cp $fd
1407+ 9427              ;    jr z,1F
1408+ 9427 FE FE            cp $fe
1409+ 9429 28 09            jr z,1F
1410+ 942B FE FF            cp $ff
1411+ 942D 28 05            jr z,1F
1412+ 942F FE 01            cp $01
1413+ 9431 28 01            jr z,1F
1414+ 9433              ;    cp $02
1415+ 9433              ;    jr z,1F
1416+ 9433              ;    cp $03
1417+ 9433              ;    jr z,1F
1418+ 9433 C0               ret nz
1419+ 9434 04           1 inc b
1420+ 9435 C9               ret
# file closed: Disparo.asm
1507  9436              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9436              ; ******************************************************************************************************************************************************************************************
   2+ 9436              ;
   3+ 9436              ; 26/06/23
   4+ 9436              ;
   5+ 9436              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9436
   7+ 9436 CD 1A 97     Draw call Prepara_draw
   8+ 9439 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 943A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 943B 28 05        	jr z,2F
  11+ 943D
  12+ 943D 3A CA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9440 18 0C        	jr 1F
  14+ 9442
  15+ 9442 2A C8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9445 22 B8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9448 CD D7 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 944B              ;													; _la esquina superior izquierda de la pantalla.
  19+ 944B CD 28 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 944E
  21+ 944E 3A E4 89     1 ld a,(Ctrl_0)
  22+ 9451 CB 6F        	bit 5,a
  23+ 9453 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9455
  25+ 9455 CD 6D 94     	call Comprueba_limite_horizontal
  26+ 9458 CD FD 94     	call Comprueba_limite_vertical
  27+ 945B
  28+ 945B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 945B              ; -----------------------
  30+ 945B              ; -----------------------
  31+ 945B              ; -----------------------
  32+ 945B
  33+ 945B CD 4A 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 945E CD 81 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9461 CD E0 96     	call Define_rutina_de_impresion
  36+ 9464
  37+ 9464 3A E4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9467 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9469 32 E4 89     	ld (Ctrl_0),a
  40+ 946C
  41+ 946C C9           	ret
  42+ 946D
  43+ 946D              ; *******************************************************************************************************************************************************************************************
  44+ 946D              ;	21/01/23
  45+ 946D              ;
  46+ 946D              ; 	Comprueba_limite_horizontal.
  47+ 946D              ;
  48+ 946D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 946D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 946D              ;
  51+ 946D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 946D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 946D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 946D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 946D
  56+ 946D
  57+ 946D
  58+ 946D 3A E4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9470 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9472 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9474 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9476 32 E4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9479 18 09            jr 6F
  64+ 947B CB 5F        1 bit 3,a
  65+ 947D 28 0A            jr z,2F
  66+ 947F E6 F7            and $f7
  67+ 9481 32 E4 89         ld (Ctrl_0),a
  68+ 9484 CD D7 95     6 call Inicializacion
  69+ 9487 18 5B            jr 5F
  70+ 9489 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 948A
  72+ 948A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 948A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 948A
  75+ 948A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 948B 2A F4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 948E CD F6 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9491 67           	ld h,a
  79+ 9492 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9493 CD F6 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9496 67           	ld h,a
  82+ 9497 A7           	and a
  83+ 9498 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 949A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 949B 3A CA 89     	ld a,(Cuad_objeto)
  86+ 949E FE 02        	cp 2
  87+ 94A0 38 1E        	jr c,3F
  88+ 94A2 28 1C        	jr z,3F
  89+ 94A4 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 94A5 28 23            jr z,7F
  91+ 94A7 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 94A9 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 94AB E1           	pop hl
  94+ 94AC
  95+ 94AC              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 94AC              ; _para indicar con E="2" en caso necesario.
  97+ 94AC
  98+ 94AC E5               push hl
  99+ 94AD C5               push bc
 100+ 94AE CD F6 99     	call calcula_tercio
 101+ 94B1 FE 01        	cp 1
 102+ 94B3 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 94B5 CD E5 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 94B8 28 26            jr z,9F
 105+ 94BA 38 24            jr c,9F
 106+ 94BC 1E 00        11 ld e,0
 107+ 94BE 18 22            jr 8F
 108+ 94C0 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94C1 28 07        	jr z, 7F
 110+ 94C3 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94C5 1E 00         	ld e,0
 112+ 94C7 E1           	pop hl
 113+ 94C8 18 04        	jr 4F
 114+ 94CA 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94CC 18 15            jr 10F
 116+ 94CE
 117+ 94CE              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94CE              ; _para indicar con E="2" en caso necesario.
 119+ 94CE
 120+ 94CE E5           4 push hl
 121+ 94CF C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94D0 CD F6 99     	call calcula_tercio
 123+ 94D3 FE 01        	cp 1
 124+ 94D5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94D7 CD E5 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94DA 28 04            jr z,9F
 127+ 94DC 30 02            jr nc,9F
 128+ 94DE 18 02        	jr 8F
 129+ 94E0 1E 02        9 ld e,2
 130+ 94E2 C1           8 pop bc
 131+ 94E3 E1           10 pop hl
 132+ 94E4 C9           5 ret
 133+ 94E5
 134+ 94E5              ; --------------------
 135+ 94E5              ;
 136+ 94E5              ; 25/08/22
 137+ 94E5
 138+ 94E5 CD F6 99     Comprueba_centro call calcula_tercio
 139+ 94E8 67               ld h,a
 140+ 94E9 08           	ex af,af
 141+ 94EA FE 02        	cp 2
 142+ 94EC 38 07        	jr c,1F
 143+ 94EE 28 05        	jr z,1F
 144+ 94F0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94F3 18 03        	jr 2F
 146+ 94F5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94F8 08           2 ex af,af
 148+ 94F9 A7               and a
 149+ 94FA ED 42            sbc hl,bc
 150+ 94FC C9               ret
 151+ 94FD
 152+ 94FD              ; *********************************************************************************************************************************************************************************************
 153+ 94FD              ;
 154+ 94FD              ;   16/8/22
 155+ 94FD              ;
 156+ 94FD              ;	Comprueba_limite_vertical
 157+ 94FD              ;
 158+ 94FD              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94FD              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94FD              ;
 161+ 94FD
 162+ 94FD 2A B8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9500 7D           	ld a,l
 164+ 9501 E6 1F        	and $1F
 165+ 9503 57           	ld d,a
 166+ 9504 3A F6 89     	ld a,(Limite_vertical)
 167+ 9507 BA           	cp d 											; Límite - Posición.
 168+ 9508 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9509 3A CA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 950C CB 47        	bit 0,a
 171+ 950E 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9510
 173+ 9510              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9510
 175+ 9510 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9511 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9513
 178+ 9513              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9513              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9513
 181+ 9513 3A BC 89         ld a,(Coordenada_X)
 182+ 9516 16 0F            ld d,Centro_izquierda
 183+ 9518 A7               and a
 184+ 9519 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 951A 28 1E            jr z,3F
 186+ 951C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 951E              ;                                                    ; _salimos sin modificar nada.
 188+ 951E 18 0E            jr 2F
 189+ 9520 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9521 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9523
 192+ 9523              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9523              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9523
 195+ 9523 3A BC 89         ld a,(Coordenada_X)
 196+ 9526 16 10            ld d,Centro_derecha
 197+ 9528 A7               and a
 198+ 9529 92               sub d
 199+ 952A 28 0E            jr z,3F
 200+ 952C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 952E              ;                                                    ; _salimos sin modificar nada.
 202+ 952E CB 43        2 bit 0,e
 203+ 9530 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9532 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9533 CD C7 95         call Modificaccionne
 206+ 9536 C1           	pop bc
 207+ 9537 CD D7 95         call Inicializacion
 208+ 953A C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 953B
 210+ 953B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 953B
 212+ 953B C5           4 push bc
 213+ 953C 01 B7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 953F 0A           	ld a,(bc)
 215+ 9540 3D           	dec a
 216+ 9541 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9542 7D           	ld a,l
 218+ 9543 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9544 CB 47        	bit 0,a
 220+ 9546 28 03        	jr z,5F
 221+ 9548 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9549 18 2E        	jr 7F
 223+ 954B
 224+ 954B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 954B
 226+ 954B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 954C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 954D 3A E4 89     	ld a,(Ctrl_0)
 229+ 9550 CB 4F        	bit 1,a
 230+ 9552 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9554 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9555
 233+ 9555              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9555
 235+ 9555 1C               inc e
 236+ 9556 1D               dec e
 237+ 9557 20 07            jr nz,12F
 238+ 9559 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 955A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 955B 22 B8 89     	ld (Posicion_actual),hl
 241+ 955E 18 44        13 jr 9F
 242+ 9560 CB 43        12 bit 0,e
 243+ 9562 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9564              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9564 C1           	pop bc
 246+ 9565 18 D3        	jr 3B
 247+ 9567 80           14 add b
 248+ 9568 6F               ld l,a
 249+ 9569 22 B8 89     	ld (Posicion_actual),hl
 250+ 956C CD C7 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 956F 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9571 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9573 32 E4 89         ld (Ctrl_0),a
 254+ 9576 F1           	pop af
 255+ 9577 18 2B        	jr 9F
 256+ 9579
 257+ 9579              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9579
 259+ 9579 F5           7 push af
 260+ 957A 3A E4 89     	ld a,(Ctrl_0)
 261+ 957D CB 47        	bit 0,a
 262+ 957F 20 1D        	jr nz,8F
 263+ 9581 F1           	pop af
 264+ 9582
 265+ 9582              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9582
 267+ 9582 1C           	inc e
 268+ 9583 1D               dec e
 269+ 9584 20 07            jr nz,10F
 270+ 9586 90           	sub b
 271+ 9587 6F               ld l,a
 272+ 9588 22 B8 89     	ld (Posicion_actual),hl
 273+ 958B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 958D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 958D CB 43        10 bit 0,e
 276+ 958F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9591              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9591 C1           	pop bc
 279+ 9592 18 A6        	jr 3B
 280+ 9594 90           16 sub b
 281+ 9595 6F               ld l,a
 282+ 9596 22 B8 89     	ld (Posicion_actual),hl
 283+ 9599 CD C7 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 959C 18 06            jr 9F
 285+ 959E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 95A0 32 E4 89         ld (Ctrl_0),a
 287+ 95A3 F1           	pop af
 288+ 95A4 C1           9 pop bc
 289+ 95A5 1E 00        	ld e,0
 290+ 95A7 CD D7 95         call Inicializacion
 291+ 95AA F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 95AB 08           	ex af,af
 293+ 95AC F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 95AD 18 8B            jr 3B
 295+ 95AF
 296+ 95AF              ; --------------------
 297+ 95AF
 298+ 95AF 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 95B1 CD 35 97     1 call PreviousScan
 300+ 95B4 10 FB            djnz 1B
 301+ 95B6 22 B8 89     	ld (Posicion_actual),hl
 302+ 95B9 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 95BA C9           	ret
 304+ 95BB
 305+ 95BB              ; --------------------
 306+ 95BB
 307+ 95BB 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95BD CD 26 97     1 call NextScan
 309+ 95C0 10 FB            djnz 1B
 310+ 95C2 22 B8 89     	ld (Posicion_actual),hl
 311+ 95C5 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95C6 C9           	ret
 313+ 95C7
 314+ 95C7              ; --------------------
 315+ 95C7              ;
 316+ 95C7              ;	22/01/23
 317+ 95C7              ;
 318+ 95C7              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95C7              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95C7              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95C7
 322+ 95C7
 323+ 95C7              Modificaccionne
 324+ 95C7
 325+ 95C7 3A CA 89     	ld a,(Cuad_objeto)
 326+ 95CA FE 02        	cp 2
 327+ 95CC CC AF 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95CF DC AF 95         call c,Modifica_Pos_actual
 329+ 95D2 C8           	ret z
 330+ 95D3 CD BB 95         call Modifica_Pos_actual2
 331+ 95D6 C9               ret
 332+ 95D7
 333+ 95D7              ; *************************************************************************************************************************************************************************************************
 334+ 95D7              ;
 335+ 95D7              ;	13/8/22
 336+ 95D7              ;
 337+ 95D7              ;	Inicializacion
 338+ 95D7              ;
 339+ 95D7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95D7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95D7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95D7              ;
 343+ 95D7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95D7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95D7              ;	_ desaparece/aparece.
 346+ 95D7
 347+ 95D7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95D7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95D7              ;
 350+ 95D7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95D7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95D7              ; 		   [E] ="0"
 353+ 95D7
 354+ 95D7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95D7
 356+ 95D7 CD F6 99     Inicializacion call calcula_tercio
 357+ 95DA 28 36        	jr z,primit
 358+ 95DC E6 02        	and 2
 359+ 95DE 20 07        	jr nz,segmit
 360+ 95E0 7D           	ld a,l
 361+ 95E1 FE 7F        	cp $7f
 362+ 95E3 38 2D        	jr c,primit
 363+ 95E5 28 2B        	jr z,primit
 364+ 95E7 CD 44 96     segmit call column
 365+ 95EA 38 13        	jr c,tercuad
 366+ 95EC 3E 04        cuarcuad ld a,4
 367+ 95EE 32 CA 89     	ld (Cuad_objeto),a
 368+ 95F1 21 20 48     	ld hl,$4820
 369+ 95F4 22 F4 89     	ld (Limite_horizontal),hl
 370+ 95F7 21 F6 89     	ld hl,Limite_vertical
 371+ 95FA 36 0D        	ld (hl),$0d
 372+ 95FC 08           	ex af,af
 373+ 95FD 18 3C        	jr 1F
 374+ 95FF              tercuad
 375+ 95FF 3E 03        	ld a,3
 376+ 9601 32 CA 89     	ld (Cuad_objeto),a
 377+ 9604 21 20 48     	ld hl,$4820
 378+ 9607 22 F4 89     	ld (Limite_horizontal),hl
 379+ 960A 21 F6 89     	ld hl,Limite_vertical
 380+ 960D 36 12        	ld (hl),$12
 381+ 960F 08           	ex af,af
 382+ 9610 18 29        	jr 1F
 383+ 9612 CD 44 96     primit call column
 384+ 9615 38 13        	jr c, primcuad
 385+ 9617              segcuad
 386+ 9617 3E 02        	ld a,2
 387+ 9619 32 CA 89     	ld (Cuad_objeto),a
 388+ 961C 21 C0 4F     	ld hl,$4fc0
 389+ 961F 22 F4 89     	ld (Limite_horizontal),hl
 390+ 9622 21 F6 89     	ld hl,Limite_vertical
 391+ 9625 36 0D        	ld (hl),$0d
 392+ 9627 08           	ex af,af
 393+ 9628 18 11        	jr 1F
 394+ 962A              primcuad
 395+ 962A 3E 01        	ld a,1
 396+ 962C 32 CA 89     	ld (Cuad_objeto),a
 397+ 962F 21 C0 4F     	ld hl,$4fc0
 398+ 9632 22 F4 89     	ld (Limite_horizontal),hl
 399+ 9635 21 F6 89     	ld hl,Limite_vertical
 400+ 9638 36 12        	ld (hl),$12
 401+ 963A 08           	ex af,af
 402+ 963B CD 81 9D     1 call Genera_coordenadas
 403+ 963E 21 E4 89     	ld hl,Ctrl_0
 404+ 9641 CB EE        	set 5,(hl)
 405+ 9643 C9           	ret
 406+ 9644
 407+ 9644              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9644
 409+ 9644              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9644              ;
 411+ 9644              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9644
 413+ 9644 7D           column ld a,l
 414+ 9645 E6 1F        	and $1f
 415+ 9647 FE 10         	cp $10
 416+ 9649 C9            	ret
 417+ 964A
 418+ 964A              ; --------------------------------------------------------------------------------------------------------------------
 419+ 964A              ;
 420+ 964A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 964A              ;
 422+ 964A              ; 14/12/22
 423+ 964A              ;
 424+ 964A              ;	Modifica: A y BC.
 425+ 964A
 426+ 964A 3A CA 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 964D E6 01        	and 1
 428+ 964F 28 17        	jr z,1F
 429+ 9651
 430+ 9651              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9651
 432+ 9651 3A BC 89     	ld a,(Coordenada_X)
 433+ 9654 47           	ld b,a
 434+ 9655 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9656 79           	ld a,c
 436+ 9657 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9658 38 08        	jr c,2F
 438+ 965A 47           	ld b,a
 439+ 965B 79           	ld a,c
 440+ 965C 90           	sub b
 441+ 965D 32 F3 89     	ld (Columnas),a
 442+ 9660 18 1B        	jr 4F
 443+ 9662 79           2 ld a,c
 444+ 9663 32 F3 89     	ld (Columnas),a
 445+ 9666 18 15        	jr 4F
 446+ 9668
 447+ 9668              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9668
 449+ 9668 3A BC 89     1 ld a,(Coordenada_X)
 450+ 966B 81           	add c
 451+ 966C 3D           	dec a
 452+ 966D D6 1F        	sub $1f
 453+ 966F 38 08        	jr c,3F
 454+ 9671 47           	ld b,a
 455+ 9672 79           	ld a,c
 456+ 9673 90           	sub b
 457+ 9674 32 F3 89     	ld (Columnas),a
 458+ 9677 18 04        	jr 4F
 459+ 9679 79           3 ld a,c
 460+ 967A 32 F3 89     	ld (Columnas),a
 461+ 967D D9           4 exx
 462+ 967E 4F           	ld c,a
 463+ 967F D9           	exx
 464+ 9680 C9            ret
 465+ 9681
 466+ 9681              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9681              ;
 468+ 9681              ;   19/7/23
 469+ 9681              ;
 470+ 9681              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9681              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9681              ;
 473+ 9681              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9681              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9681              ;
 476+ 9681              ;	DESTRUYE: HL,B Y A.
 477+ 9681
 478+ 9681 3A CA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9684 FE 02        	cp 2
 480+ 9686 38 18        	jr c,1F
 481+ 9688 28 16        	jr z,1F
 482+ 968A E6 01        	and 1
 483+ 968C 28 0D        	jr z,3F
 484+ 968E
 485+ 968E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 968E
 487+ 968E CD D4 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9691
 489+ 9691 7D           9 ld a,l
 490+ 9692 E6 1F        	and $1f
 491+ 9694 28 2A        	jr z,7F
 492+ 9696 2B           	dec hl
 493+ 9697 10 F8        	djnz 9B
 494+ 9699 18 25        	jr 7F
 495+ 969B
 496+ 969B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 969B
 498+ 969B 2A B8 89     3 ld hl,(Posicion_actual)
 499+ 969E 18 20        	jr 7F
 500+ 96A0
 501+ 96A0 28 14        1 jr z,2F
 502+ 96A2
 503+ 96A2              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 96A2
 505+ 96A2 CD D4 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 96A5
 507+ 96A5 7D           4 ld a,l
 508+ 96A6 E6 1F        	and $1f
 509+ 96A8 28 03        	jr z,6F
 510+ 96AA 2B           	dec hl
 511+ 96AB 10 F8        	djnz 4B
 512+ 96AD 06 0F        6 ld b,15
 513+ 96AF CD 35 97     5 call PreviousScan
 514+ 96B2 10 FB        	djnz 5B
 515+ 96B4 18 0A        	jr 7F
 516+ 96B6
 517+ 96B6              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 96B6
 519+ 96B6 CD D4 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 96B9 06 0F        	ld b,15
 521+ 96BB CD 35 97     8 call PreviousScan
 522+ 96BE 10 FB        	djnz 8B
 523+ 96C0
 524+ 96C0 E5           7 push hl
 525+ 96C1 DD E1        	pop ix
 526+ 96C3
 527+ 96C3 2A BA 89     	ld hl,(Puntero_objeto)
 528+ 96C6 E5           	push hl
 529+ 96C7 FD E1        	pop iy
 530+ 96C9
 531+ 96C9              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96C9
 533+ 96C9 3A E4 89     	ld a,(Ctrl_0)
 534+ 96CC CB 77        	bit 6,a
 535+ 96CE C8           	ret z
 536+ 96CF
 537+ 96CF              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96CF              ; _ entidad / Amadeus´.
 539+ 96CF
 540+ 96CF DD 22 40 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96D3
 542+ 96D3 C9           	ret
 543+ 96D4
 544+ 96D4              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96D4              ;
 546+ 96D4              ;	2/1/23
 547+ 96D4              ;
 548+ 96D4              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96D4              ;
 550+ 96D4              ;	Tras esta rutina tenemos:
 551+ 96D4              ;
 552+ 96D4              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96D4              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96D4              ;
 555+ 96D4              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96D4
 557+ 96D4 2A B8 89     Operandos ld hl,(Posicion_actual)
 558+ 96D7 3A F3 89     	ld a,(Columnas)
 559+ 96DA 3D           	dec a
 560+ 96DB 20 01        	jr nz,1F
 561+ 96DD 3C           	inc a
 562+ 96DE 47           1 ld b,a
 563+ 96DF C9           	ret
 564+ 96E0
 565+ 96E0              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96E0              ;
 567+ 96E0              ;	3/1/23
 568+ 96E0              ;
 569+ 96E0              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96E0              ;
 571+ 96E0              ;	Destruye: A,B,HL y DE.
 572+ 96E0
 573+ 96E0              Define_rutina_de_impresion
 574+ 96E0
 575+ 96E0 3A B7 89     	ld a,(Columns)
 576+ 96E3 47           	ld b,a
 577+ 96E4 3A F3 89     	ld a,(Columnas)
 578+ 96E7 B8           	cp b
 579+ 96E8 20 0D        	jr nz,2f
 580+ 96EA
 581+ 96EA              ;	La entidad se imprime entera.
 582+ 96EA
 583+ 96EA 21 C6 97     	ld hl, Indice_entidades_completas
 584+ 96ED E6 01        	and 1
 585+ 96EF 28 02        	jr z,1F
 586+ 96F1
 587+ 96F1 23           	inc hl
 588+ 96F2 23           	inc hl
 589+ 96F3
 590+ 96F3 CD 8B 8D     1 call Extrae_address
 591+ 96F6 C9           	ret		;	ret
 592+ 96F7
 593+ 96F7              ;	La entidad no se imprime entera en pantalla.
 594+ 96F7
 595+ 96F7 3A CA 89     2 ld a,(Cuad_objeto)
 596+ 96FA E6 01        	and 1
 597+ 96FC 28 17        	jr z,3F
 598+ 96FE
 599+ 96FE              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96FE
 601+ 96FE 21 CA 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9701 3A B7 89     4 ld a,(Columns)
 603+ 9704 E6 01        	and 1
 604+ 9706 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9708
 606+ 9708 23           	inc hl
 607+ 9709 23           	inc hl
 608+ 970A
 609+ 970A 3A F3 89     	ld a,(Columnas)
 610+ 970D E6 01        	and 1
 611+ 970F 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9711
 613+ 9711 23           	inc hl
 614+ 9712 23           	inc hl
 615+ 9713
 616+ 9713 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9715
 618+ 9715 21 D0 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9718 18 E7        	jr 4B
 620+ 971A
 621+ 971A              ; --------------------------------------------------------------------------------------------------------------------
 622+ 971A              ;
 623+ 971A              ;	Prepara_draw
 624+ 971A              ;
 625+ 971A              ;	Es una rutina de carga.
 626+ 971A              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 971A              ;
 628+ 971A              ;	FUNCIONAMIENTO:
 629+ 971A              ;
 630+ 971A              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 971A              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 971A              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 971A              ;
 634+ 971A              ;	DESTRUYE:
 635+ 971A              ;
 636+ 971A              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 971A
 638+ 971A 21 B6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 971D 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 971E 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 971F 4E           	ld c,(hl)
 642+ 9720 2A B8 89     	ld hl,(Posicion_actual)
 643+ 9723 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9725 C9           	ret
 645+ 9726
 646+ 9726              ;----------------------------------------------------------------------------------------------------------------
 647+ 9726              ;
 648+ 9726              ;	5/08/22
 649+ 9726              ;
 650+ 9726              ;   NextScan.
 651+ 9726              ;
 652+ 9726              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9726              ;
 654+ 9726              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9726              ;
 656+ 9726              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9726              ;
 658+ 9726              ;       DESTRUIDOS: AF y HL !!!
 659+ 9726              ;
 660+ 9726              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9726              ;
 662+ 9726
 663+ 9726 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9727 7C               ld a,h
 665+ 9728 E6 07            and 7
 666+ 972A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 972B
 668+ 972B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 972C C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 972E 6F               ld l,a
 671+ 972F D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9730
 673+ 9730 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9731 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9733 67               ld h,a
 676+ 9734 C9               ret
 677+ 9735
 678+ 9735              ;----------------------------------------------------------------------------------------------------------------
 679+ 9735              ;
 680+ 9735              ;	5/08/22
 681+ 9735              ;
 682+ 9735              ;   PreviousScan.
 683+ 9735              ;
 684+ 9735              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9735              ;
 686+ 9735              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9735              ;
 688+ 9735              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9735              ;
 690+ 9735              ;       DESTRUIDOS: AF y HL !!!
 691+ 9735              ;
 692+ 9735              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9735              ;
 694+ 9735
 695+ 9735 7C           PreviousScan ld a,h
 696+ 9736 25               dec h               ; Dec H.
 697+ 9737 E6 07            and 7
 698+ 9739 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 973A
 700+ 973A 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 973B D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 973D 6F               ld l,a
 703+ 973E D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 973F
 705+ 973F 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9740 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9742 67               ld h,a
 708+ 9743 C9               ret
 709+ 9744
 710+ 9744              ; -----------------------------------------------------------------------------------
 711+ 9744              ;
 712+ 9744              ;	31/7/23
 713+ 9744              ;
 714+ 9744              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9744              ;	Extrae fotos de Album_de_fotos.
 716+ 9744
 717+ 9744              Extrae_foto_entidades
 718+ 9744
 719+ 9744 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9747 7E           	ld a,(hl)
 721+ 9748 A7           	and a
 722+ 9749 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 974A
 724+ 974A 3A 05 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 974D A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 974E C8           	ret z
 727+ 974F
 728+ 974F              ; -----------------------------------
 729+ 974F
 730+ 974F ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9753 31 00 70     	ld sp,Album_de_fotos
 732+ 9756
 733+ 9756 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9758 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9759 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 975A
 737+ 975A ED 73 0C 8A  	ld (Stack_2),sp
 738+ 975E ED 7B 0A 8A  	ld sp,(Stack)
 739+ 9762
 740+ 9762              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9762
 742+ 9762 3E CD        	ld a,$cd
 743+ 9764 32 6C 97     	ld (Imprime),a
 744+ 9767 EB           	ex de,hl
 745+ 9768 22 6D 97     	ld (Imprime+1),hl
 746+ 976B EB           	ex de,hl
 747+ 976C
 748+ 976C              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 976C
 750+ 976C 00 00 00     Imprime db 0,0,0
 751+ 976F
 752+ 976F ED 73 0A 8A  	ld (Stack),sp
 753+ 9773
 754+ 9773 3A 05 8A     	ld a,(Numero_de_malotes)
 755+ 9776 3D           	dec a
 756+ 9777 28 09        	jr z,1F
 757+ 9779 32 05 8A      	ld (Numero_de_malotes),a
 758+ 977C
 759+ 977C ED 7B 0C 8A  	ld sp,(Stack_2)
 760+ 9780 18 D4        	jr 2B
 761+ 9782
 762+ 9782 AF           1 xor a
 763+ 9783 32 0C 8A     	ld (Stack_2),a
 764+ 9786
 765+ 9786 C9           	ret
 766+ 9787
 767+ 9787              ; -----------------------------------------------------------------------------------
 768+ 9787              ;
 769+ 9787              ;	28/2/23
 770+ 9787              ;
 771+ 9787              ;	Pinta los disparos generados.
 772+ 9787
 773+ 9787              Extrae_foto_disparos
 774+ 9787
 775+ 9787 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 776+ 978A 7E               ld a,(hl)
 777+ 978B A7               and a
 778+ 978C C8               ret z
 779+ 978D
 780+ 978D 3A 30 8A     	ld a,(Numero_de_disparotes)
 781+ 9790 A7           	and a
 782+ 9791 C8           	ret z
 783+ 9792 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9796 31 0D 72     	ld sp,Album_de_fotos_disparos
 785+ 9799
 786+ 9799 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 979B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 979C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 979D
 790+ 979D ED 73 0C 8A  	ld (Stack_2),sp
 791+ 97A1 ED 7B 0A 8A  	ld sp,(Stack)
 792+ 97A5
 793+ 97A5              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 97A5
 795+ 97A5 3E CD        	ld a,$cd
 796+ 97A7 32 AF 97     	ld (Imprime2),a
 797+ 97AA EB           	ex de,hl
 798+ 97AB 22 B0 97     	ld (Imprime2+1),hl
 799+ 97AE EB           	ex de,hl
 800+ 97AF
 801+ 97AF              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 97AF
 803+ 97AF 00 00 00     Imprime2 db 0,0,0
 804+ 97B2
 805+ 97B2 3A 30 8A     	ld a,(Numero_de_disparotes)
 806+ 97B5 3D           	dec a
 807+ 97B6 28 09        	jr z,1F
 808+ 97B8 32 30 8A      	ld (Numero_de_disparotes),a
 809+ 97BB
 810+ 97BB ED 7B 0C 8A  	ld sp,(Stack_2)
 811+ 97BF 18 D8        	jr 2B
 812+ 97C1
 813+ 97C1 AF           1 xor a
 814+ 97C2 32 0C 8A     	ld (Stack_2),a
 815+ 97C5 C9           	ret
 816+ 97C6
# file closed: Draw_XOR.asm
1508  97C6              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97C6              ;   índices de Rutinas de impresión.
   2+ 97C6
   3+ 97C6 D6 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97C8 03 98            defw Pinta_Amadeus_3x2
   5+ 97CA
   6+ 97CA 59 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97CC F9 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97CE AD 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97D0
  10+ 97D0 83 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97D2 87 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97D4 3B 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97D6
  14+ 97D6
  15+ 97D6              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97D6              ;
  17+ 97D6              ;   12/12/22
  18+ 97D6              ;
  19+ 97D6              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97D6              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97D6              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97D6              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97D6              ;
  24+ 97D6              ;   Modifica: DE y HL.
  25+ 97D6
  26+ 97D6 ED 73 0A 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97DA FD F9        	ld sp,iy
  28+ 97DC 06 10            ld b,16
  29+ 97DE D1           1 pop de
  30+ 97DF 7B               ld a,e
  31+ 97E0 AE               xor (hl)
  32+ 97E1 77           	ld (hl),a
  33+ 97E2 23           	inc hl
  34+ 97E3 7A               ld a,d
  35+ 97E4 AE               xor (hl)
  36+ 97E5 77           	ld (hl),a
  37+ 97E6 2B           	dec hl
  38+ 97E7 24           	inc h
  39+ 97E8 7C               ld a,h
  40+ 97E9 E6 07            and 7
  41+ 97EB 20 0A            jr nz,2F
  42+ 97ED 7D               ld a,l
  43+ 97EE C6 20            add a,$20
  44+ 97F0 6F               ld l,a
  45+ 97F1 38 04            jr c,2F
  46+ 97F3 7C               ld a,h
  47+ 97F4 D6 08            sub 8
  48+ 97F6 67               ld h,a
  49+ 97F7 7C           2 ld a,h
  50+ 97F8 FE 58            cp $58
  51+ 97FA 28 02            jr z,3F
  52+ 97FC 10 E0            djnz 1B
  53+ 97FE ED 7B 0A 8A  3 ld sp,(Stack)
  54+ 9802 C9           	ret
  55+ 9803
  56+ 9803 ED 73 0A 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9807 FD F9        	ld sp,iy
  58+ 9809 06 08            ld b,8
  59+ 980B D1           1 pop de
  60+ 980C 7B               ld a,e
  61+ 980D AE               xor (hl)
  62+ 980E 77           	ld (hl),a
  63+ 980F 23           	inc hl
  64+ 9810 7A               ld a,d
  65+ 9811 AE               xor (hl)
  66+ 9812 77           	ld (hl),a
  67+ 9813 23           	inc hl
  68+ 9814 D1           	pop de
  69+ 9815 7B               ld a,e
  70+ 9816 AE               xor (hl)
  71+ 9817 77           	ld (hl),a
  72+ 9818 2B           	dec hl
  73+ 9819 2B           	dec hl
  74+ 981A 24           	inc h
  75+ 981B 7C               ld a,h
  76+ 981C E6 07            and 7
  77+ 981E 20 0A            jr nz,2F
  78+ 9820 7D               ld a,l
  79+ 9821 C6 20            add a,$20
  80+ 9823 6F               ld l,a
  81+ 9824 38 04            jr c,2F
  82+ 9826 7C               ld a,h
  83+ 9827 D6 08            sub 8
  84+ 9829 67               ld h,a
  85+ 982A 7C           2 ld a,h
  86+ 982B FE 58            cp $58
  87+ 982D 28 25            jr z,4F
  88+ 982F 7A               ld a,d
  89+ 9830 AE               xor (hl)
  90+ 9831 77               ld (hl),a
  91+ 9832 D1           	pop de
  92+ 9833 23           	inc hl
  93+ 9834 7B               ld a,e
  94+ 9835 AE               xor (hl)
  95+ 9836 77           	ld (hl),a
  96+ 9837 23           	inc hl
  97+ 9838 7A               ld a,d
  98+ 9839 AE               xor (hl)
  99+ 983A 77           	ld (hl),a
 100+ 983B 2B           	dec hl
 101+ 983C 2B           	dec hl
 102+ 983D 24           	inc h
 103+ 983E 7C               ld a,h
 104+ 983F E6 07            and 7
 105+ 9841 20 0A            jr nz,3F
 106+ 9843 7D               ld a,l
 107+ 9844 C6 20            add a,$20
 108+ 9846 6F               ld l,a
 109+ 9847 38 04            jr c,3F
 110+ 9849 7C               ld a,h
 111+ 984A D6 08            sub 8
 112+ 984C 67               ld h,a
 113+ 984D 7C           3 ld a,h
 114+ 984E FE 58            cp $58
 115+ 9850 28 02            jr z,4F
 116+ 9852 10 B7            djnz 1B
 117+ 9854 ED 7B 0A 8A  4 ld sp,(Stack)
 118+ 9858 C9           	ret
 119+ 9859
 120+ 9859              ; ---------------------------------------------------
 121+ 9859
 122+ 9859 ED 73 0A 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 985D FD F9        	ld sp,iy
 124+ 985F
 125+ 985F              ; >>>
 126+ 985F
 127+ 985F 06 10            ld b,16
 128+ 9861 D1           1 pop de
 129+ 9862 7A           	ld a,d
 130+ 9863 AE           	xor (hl)
 131+ 9864 77           	ld (hl),a
 132+ 9865 24           	inc h
 133+ 9866 7C               ld a,h
 134+ 9867 E6 07            and 7
 135+ 9869 20 0C            jr nz,2F
 136+ 986B 7D               ld a,l
 137+ 986C C6 20            add a,$20
 138+ 986E 6F               ld l,a
 139+ 986F 38 06            jr c,2F
 140+ 9871 7C               ld a,h
 141+ 9872 D6 08            sub 8
 142+ 9874 67               ld h,a
 143+ 9875 18 00            jr 2F
 144+ 9877 7C           2 ld a,h
 145+ 9878 FE 58            cp $58
 146+ 987A 28 02            jr z,3F
 147+ 987C 10 E3            djnz 1B
 148+ 987E ED 7B 0A 8A  3 ld sp,(Stack)
 149+ 9882 C9           	ret
 150+ 9883
 151+ 9883 ED 73 0A 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9887 FD F9        	ld sp,iy
 153+ 9889
 154+ 9889              ; >>>
 155+ 9889
 156+ 9889 06 10            ld b,16
 157+ 988B D1           1 pop de
 158+ 988C 7B           	ld a,e
 159+ 988D AE           	xor (hl)
 160+ 988E 77           	ld (hl),a
 161+ 988F 24           	inc h
 162+ 9890 7C               ld a,h
 163+ 9891 E6 07            and 7
 164+ 9893 20 0C            jr nz,2F
 165+ 9895 7D               ld a,l
 166+ 9896 C6 20            add a,$20
 167+ 9898 6F               ld l,a
 168+ 9899 38 06            jr c,2F
 169+ 989B 7C               ld a,h
 170+ 989C D6 08            sub 8
 171+ 989E 67               ld h,a
 172+ 989F 18 00            jr 2F
 173+ 98A1 7C           2 ld a,h
 174+ 98A2 FE 58            cp $58
 175+ 98A4 28 02            jr z,3F
 176+ 98A6 10 E3            djnz 1B
 177+ 98A8 ED 7B 0A 8A  3 ld sp,(Stack)
 178+ 98AC C9           	ret
 179+ 98AD
 180+ 98AD              ; ---------------------------------------------------
 181+ 98AD
 182+ 98AD ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 98B1 FD F9        	ld sp,iy
 184+ 98B3 06 08            ld b,8
 185+ 98B5 D1           1 pop de
 186+ 98B6 7A           	ld a,d
 187+ 98B7 AE           	xor (hl)
 188+ 98B8 77           	ld (hl),a
 189+ 98B9 23           	inc hl
 190+ 98BA D1           	pop de
 191+ 98BB 7B           	ld a,e
 192+ 98BC AE           	xor (hl)
 193+ 98BD 77           	ld (hl),a
 194+ 98BE 2B           	dec hl
 195+ 98BF 24            	inc h
 196+ 98C0 7C               ld a,h
 197+ 98C1 E6 07            and 7
 198+ 98C3 20 0A            jr nz,2F
 199+ 98C5 7D               ld a,l
 200+ 98C6 C6 20            add a,$20
 201+ 98C8 6F               ld l,a
 202+ 98C9 38 04            jr c,2F
 203+ 98CB 7C               ld a,h
 204+ 98CC D6 08            sub 8
 205+ 98CE 67               ld h,a
 206+ 98CF 7C           2 ld a,h
 207+ 98D0 FE 58            cp $58
 208+ 98D2 28 20            jr z,4F
 209+ 98D4 D1               pop de
 210+ 98D5 7B           	ld a,e
 211+ 98D6 AE           	xor (hl)
 212+ 98D7 77           	ld (hl),a
 213+ 98D8 23           	inc hl
 214+ 98D9 7A           	ld a,d
 215+ 98DA AE           	xor (hl)
 216+ 98DB 77           	ld (hl),a
 217+ 98DC 2B           	dec hl
 218+ 98DD 24           	inc h
 219+ 98DE 7C               ld a,h
 220+ 98DF E6 07            and 7
 221+ 98E1 20 0A            jr nz,3F
 222+ 98E3 7D               ld a,l
 223+ 98E4 C6 20            add a,$20
 224+ 98E6 6F               ld l,a
 225+ 98E7 38 04            jr c,3F
 226+ 98E9 7C               ld a,h
 227+ 98EA D6 08            sub 8
 228+ 98EC 67               ld h,a
 229+ 98ED 7C           3 ld a,h
 230+ 98EE FE 58            cp $58
 231+ 98F0 28 02            jr z,4F
 232+ 98F2 10 C1            djnz 1B
 233+ 98F4 ED 7B 0A 8A  4 ld sp,(Stack)
 234+ 98F8 C9           	ret
 235+ 98F9
 236+ 98F9 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98FD FD F9        	ld sp,iy
 238+ 98FF 06 08            ld b,8
 239+ 9901 D1           1 pop de
 240+ 9902 D1           	pop de
 241+ 9903 7B           	ld a,e
 242+ 9904 AE           	xor (hl)
 243+ 9905 77           	ld (hl),a
 244+ 9906 24            	inc h
 245+ 9907 7C               ld a,h
 246+ 9908 E6 07            and 7
 247+ 990A 20 0A            jr nz,2F
 248+ 990C 7D               ld a,l
 249+ 990D C6 20            add a,$20
 250+ 990F 6F               ld l,a
 251+ 9910 38 04            jr c,2F
 252+ 9912 7C               ld a,h
 253+ 9913 D6 08            sub 8
 254+ 9915 67               ld h,a
 255+ 9916 7C           2 ld a,h
 256+ 9917 FE 58            cp $58
 257+ 9919 28 1B            jr z,4F
 258+ 991B D1               pop de
 259+ 991C 7A           	ld a,d
 260+ 991D AE           	xor (hl)
 261+ 991E 77           	ld (hl),a
 262+ 991F 24           	inc h
 263+ 9920 7C               ld a,h
 264+ 9921 E6 07            and 7
 265+ 9923 20 0A            jr nz,3F
 266+ 9925 7D               ld a,l
 267+ 9926 C6 20            add a,$20
 268+ 9928 6F               ld l,a
 269+ 9929 38 04            jr c,3F
 270+ 992B 7C               ld a,h
 271+ 992C D6 08            sub 8
 272+ 992E 67               ld h,a
 273+ 992F 7C           3 ld a,h
 274+ 9930 FE 58            cp $58
 275+ 9932 28 02            jr z,4F
 276+ 9934 10 CB            djnz 1B
 277+ 9936 ED 7B 0A 8A  4 ld sp,(Stack)
 278+ 993A C9           	ret
 279+ 993B
 280+ 993B ED 73 0A 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 993F FD F9        	ld sp,iy
 282+ 9941 06 08            ld b,8
 283+ 9943 D1           1 pop de
 284+ 9944 7B           	ld a,e
 285+ 9945 AE           	xor (hl)
 286+ 9946 77           	ld (hl),a
 287+ 9947 23           	inc hl
 288+ 9948 7A           	ld a,d
 289+ 9949 AE           	xor (hl)
 290+ 994A 77           	ld (hl),a
 291+ 994B 2B           	dec hl
 292+ 994C 24             	inc h
 293+ 994D 7C               ld a,h
 294+ 994E E6 07            and 7
 295+ 9950 20 0A            jr nz,2F
 296+ 9952 7D               ld a,l
 297+ 9953 C6 20            add a,$20
 298+ 9955 6F               ld l,a
 299+ 9956 38 04            jr c,2F
 300+ 9958 7C               ld a,h
 301+ 9959 D6 08            sub 8
 302+ 995B 67               ld h,a
 303+ 995C 7C           2 ld a,h
 304+ 995D FE 58            cp $58
 305+ 995F 28 21            jr z,4F
 306+ 9961 D1               pop de
 307+ 9962 7A           	ld a,d
 308+ 9963 AE           	xor (hl)
 309+ 9964 77           	ld (hl),a
 310+ 9965 23           	inc hl
 311+ 9966 D1               pop de
 312+ 9967 7B           	ld a,e
 313+ 9968 AE           	xor (hl)
 314+ 9969 77           	ld (hl),a
 315+ 996A 2B           	dec hl
 316+ 996B 24           	inc h
 317+ 996C 7C               ld a,h
 318+ 996D E6 07            and 7
 319+ 996F 20 0A            jr nz,3F
 320+ 9971 7D               ld a,l
 321+ 9972 C6 20            add a,$20
 322+ 9974 6F               ld l,a
 323+ 9975 38 04            jr c,3F
 324+ 9977 7C               ld a,h
 325+ 9978 D6 08            sub 8
 326+ 997A 67               ld h,a
 327+ 997B 7C           3 ld a,h
 328+ 997C FE 58            cp $58
 329+ 997E 28 02            jr z,4F
 330+ 9980 10 C1            djnz 1B
 331+ 9982 ED 7B 0A 8A  4 ld sp,(Stack)
 332+ 9986 C9           	ret
 333+ 9987
 334+ 9987 ED 73 0A 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 998B FD F9        	ld sp,iy
 336+ 998D 06 08            ld b,8
 337+ 998F D1           1 pop de
 338+ 9990 7B           	ld a,e
 339+ 9991 AE           	xor (hl)
 340+ 9992 77           	ld (hl),a
 341+ 9993 24            	inc h
 342+ 9994 7C               ld a,h
 343+ 9995 E6 07            and 7
 344+ 9997 20 0A            jr nz,2F
 345+ 9999 7D               ld a,l
 346+ 999A C6 20            add a,$20
 347+ 999C 6F               ld l,a
 348+ 999D 38 04            jr c,2F
 349+ 999F 7C               ld a,h
 350+ 99A0 D6 08            sub 8
 351+ 99A2 67               ld h,a
 352+ 99A3 7C           2 ld a,h
 353+ 99A4 FE 58            cp $58
 354+ 99A6 28 1C            jr z,4F
 355+ 99A8 D1               pop de
 356+ 99A9 7A           	ld a,d
 357+ 99AA AE           	xor (hl)
 358+ 99AB 77           	ld (hl),a
 359+ 99AC 24           	inc h
 360+ 99AD 7C               ld a,h
 361+ 99AE E6 07            and 7
 362+ 99B0 20 0A            jr nz,3F
 363+ 99B2 7D               ld a,l
 364+ 99B3 C6 20            add a,$20
 365+ 99B5 6F               ld l,a
 366+ 99B6 38 04            jr c,3F
 367+ 99B8 7C               ld a,h
 368+ 99B9 D6 08            sub 8
 369+ 99BB 67               ld h,a
 370+ 99BC 7C           3 ld a,h
 371+ 99BD FE 58            cp $58
 372+ 99BF 28 03            jr z,4F
 373+ 99C1 D1               pop de
 374+ 99C2 10 CB            djnz 1B
 375+ 99C4 ED 7B 0A 8A  4 ld sp,(Stack)
 376+ 99C8 C9           	ret
 377+ 99C9
 378+ 99C9              ; ---------------------------------------------------
 379+ 99C9              ;
 380+ 99C9              ;   27/02/23
 381+ 99C9              ;
 382+ 99C9              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99C9              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99C9              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99C9
 386+ 99C9 ED 73 0A 8A  Pinta_Disparo ld (Stack),sp
 387+ 99CD FD F9            ld sp,iy
 388+ 99CF 06 03            ld b,3
 389+ 99D1 D1           1 pop de
 390+ 99D2 7B               ld a,e
 391+ 99D3 AE               xor (hl)
 392+ 99D4 77               ld (hl),a
 393+ 99D5 23               inc hl
 394+ 99D6 7A               ld a,d
 395+ 99D7 AE               xor (hl)
 396+ 99D8 77               ld (hl),a
 397+ 99D9 2B               dec hl
 398+ 99DA
 399+ 99DA 24               inc h
 400+ 99DB 7C               ld a,h
 401+ 99DC E6 07            and 7
 402+ 99DE 20 0A            jr nz,2F
 403+ 99E0 7D               ld a,l
 404+ 99E1 C6 20            add a,$20
 405+ 99E3 6F               ld l,a
 406+ 99E4 38 04            jr c,2F
 407+ 99E6 7C               ld a,h
 408+ 99E7 D6 08            sub 8
 409+ 99E9 67               ld h,a
 410+ 99EA 7C           2 ld a,h
 411+ 99EB FE 58            cp $58
 412+ 99ED 28 02            jr z,3F
 413+ 99EF
 414+ 99EF 10 E0            djnz 1B
 415+ 99F1 ED 7B 0A 8A  3 ld sp,(Stack)
 416+ 99F5 C9               ret
 417+ 99F6
# file closed: Rutinas_de_impresion_sprites.asm
1509  99F6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99F6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99F6              ;
   3+ 99F6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99F6              ;
   5+ 99F6              ; *****************************************************************************************************************************************************************************************
   6+ 99F6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99F6
   8+ 99F6 7C           calcula_tercio ld a,h
   9+ 99F7 E6 18        	and $18
  10+ 99F9 CB 2F        	sra a
  11+ 99FB CB 2F        	sra a
  12+ 99FD CB 2F        	sra a
  13+ 99FF C9           	ret
  14+ 9A00
# file closed: calcula_tercio.asm
1510  9A00              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9A00              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9A00              ;
   3+ 9A00              ;
   4+ 9A00              ;	CLS.
   5+ 9A00              ;
   6+ 9A00              ;	Limpia la pantalla y define sus atributos.
   7+ 9A00              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9A00              ;
   9+ 9A00              ;	COLORES: 0 ..... NEGRO
  10+ 9A00              ;    		 1 ..... AZUL
  11+ 9A00              ; 			 2 ..... ROJO
  12+ 9A00              ;			 3 ..... MAGENTA
  13+ 9A00              ; 			 4 ..... VERDE
  14+ 9A00              ; 			 5 ..... CIAN
  15+ 9A00              ;			 6 ..... AMARILLO
  16+ 9A00              ; 			 7 ..... BLANCO
  17+ 9A00              ;
  18+ 9A00              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9A00              ;
  20+ 9A00              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9A00
  22+ 9A00
  23+ 9A00 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9A03 11 01 40     	LD DE,$4001
  25+ 9A06 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9A09 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9A0B ED B0        	LDIR
  28+ 9A0D 01 FF 02     	LD BC,767
  29+ 9A10 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9A11 ED B0        	LDIR
  31+ 9A13 C9           	ret
  32+ 9A14
# file closed: Cls.asm
1511  9A14              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A14              ; ******************************************************************************************************************************************************************************************
   2+ 9A14              ;
   3+ 9A14              ;   20/05/23
   4+ 9A14              ;
   5+ 9A14              ;	Recompone_posicion_inicio
   6+ 9A14              ;
   7+ 9A14              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9A14              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9A14              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9A14              ;	_ a una u otra rutina.
  11+ 9A14
  12+ 9A14              Recompone_posicion_inicio
  13+ 9A14
  14+ 9A14 2A C8 89     	ld hl,(Posicion_inicio)
  15+ 9A17 7D           	ld a,l
  16+ 9A18 E6 1F        	and $1f
  17+ 9A1A 28 16        	jr z,1F
  18+ 9A1C
  19+ 9A1C FE 1F        	cp $1f
  20+ 9A1E 28 0D        	jr z,3F
  21+ 9A20
  22+ 9A20 21 F7 89     	ld hl,Ctrl_2
  23+ 9A23 CB C6        	set 0,(hl)
  24+ 9A25 2A BA 89     	ld hl,(Puntero_objeto)
  25+ 9A28 22 FA 89     	ld (Repone_puntero_objeto),hl
  26+ 9A2B 18 08        	jr 2F
  27+ 9A2D
  28+ 9A2D CD CE 9B     3 call Mov_left
  29+ 9A30 18 03        	jr 2F
  30+ 9A32
  31+ 9A32 CD B0 9A     1 call Mov_right
  32+ 9A35 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A38 22 BA 89     	ld (Puntero_objeto),hl
  34+ 9A3B C9           	ret
  35+ 9A3C
  36+ 9A3C              ; ******************************************************************************************************************************************************************************************
  37+ 9A3C              ;
  38+ 9A3C              ;   27/05/23
  39+ 9A3C              ;
  40+ 9A3C              ;	Mov_down
  41+ 9A3C              ;
  42+ 9A3C              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A3C              ;
  44+ 9A3C              ;
  45+ 9A3C              Mov_down
  46+ 9A3C
  47+ 9A3C CD 9E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A3F              ;																	; _ repone (Puntero_objeto).
  49+ 9A3F 21 E4 89     	ld hl,Ctrl_0
  50+ 9A42 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A44              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A44              ; 																	; _ en el caso de que no lo haya.
  53+ 9A44 3A CE 89     	ld a,(Vel_down)
  54+ 9A47 47           	ld b,a
  55+ 9A48 2A B8 89         ld hl,(Posicion_actual)
  56+ 9A4B CD F6 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A4E E6 02        	and 2
  58+ 9A50 28 0F        	jr z,1F
  59+ 9A52
  60+ 9A52              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A52              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A52
  63+ 9A52 7C           	ld a,h
  64+ 9A53 FE 57        	cp $57
  65+ 9A55 20 0A        	jr nz,1F
  66+ 9A57
  67+ 9A57 7D           	ld a,l
  68+ 9A58 C6 20        	add $20
  69+ 9A5A 30 05        	jr nc,1F
  70+ 9A5C
  71+ 9A5C              ; ------------------------------
  72+ 9A5C              ;	call Reaparece_arriba
  73+ 9A5C CD 5B 9D     	call Reinicio
  74+ 9A5F              ; ------------------------------
  75+ 9A5F
  76+ 9A5F 18 08        	jr 3F
  77+ 9A61 CD 26 97     1 call NextScan
  78+ 9A64 22 B8 89     	ld (Posicion_actual),hl
  79+ 9A67 10 E2            djnz 2B
  80+ 9A69 CD 81 9D     3 call Genera_coordenadas
  81+ 9A6C C9           	ret
  82+ 9A6D
  83+ 9A6D              ; ******************************************************************************************************************************************************************************************
  84+ 9A6D              ;
  85+ 9A6D              ;   27/05/23
  86+ 9A6D              ;
  87+ 9A6D              ;	Mov_up
  88+ 9A6D              ;
  89+ 9A6D              ; 	Mueve el Sprite hacia arriba.
  90+ 9A6D              ;
  91+ 9A6D              ;
  92+ 9A6D              Mov_up
  93+ 9A6D
  94+ 9A6D CD 9E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A70              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A70 21 E4 89     	ld hl,Ctrl_0
  97+ 9A73 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A75              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A75              ; 																		; _ en el caso de que no lo haya.
 100+ 9A75 3A CD 89     	ld a,(Vel_up)
 101+ 9A78 47           	ld b,a
 102+ 9A79 2A B8 89     	ld hl,(Posicion_actual)
 103+ 9A7C CD F6 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A7F A7           	and a
 105+ 9A80 20 10        	jr nz,1F
 106+ 9A82
 107+ 9A82              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A82              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A82
 110+ 9A82 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A83 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A85 20 0B            jr nz,1F
 113+ 9A87 7D               ld a,l
 114+ 9A88 D6 20            sub $20
 115+ 9A8A 30 06            jr nc,1F
 116+ 9A8C 25               dec h
 117+ 9A8D
 118+ 9A8D              ; -----------------------------
 119+ 9A8D CD 3C 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A90              ;	call Reinicio
 121+ 9A90              ; -----------------------------
 122+ 9A90
 123+ 9A90 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A92 CD 35 97     1 call PreviousScan
 125+ 9A95 22 B8 89     	ld (Posicion_actual),hl
 126+ 9A98 10 E2            djnz 3B
 127+ 9A9A CD 81 9D     2 call Genera_coordenadas
 128+ 9A9D C9           	ret
 129+ 9A9E
 130+ 9A9E              ; -----------------------------
 131+ 9A9E              ;
 132+ 9A9E              ;	27/5/23
 133+ 9A9E              ;
 134+ 9A9E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A9E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A9E              ;
 137+ 9A9E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A9E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A9E              ;
 140+ 9A9E              ;	Modifica: A y (Puntero_objeto).
 141+ 9A9E
 142+ 9A9E 3A F7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9AA1 CB 47        	bit 0,a
 144+ 9AA3 C8           	ret z
 145+ 9AA4 CB 87        	res 0,a
 146+ 9AA6 32 F7 89     	ld (Ctrl_2),a
 147+ 9AA9 2A FA 89     	ld hl,(Repone_puntero_objeto)
 148+ 9AAC 22 BA 89     	ld (Puntero_objeto),hl
 149+ 9AAF C9           	ret
 150+ 9AB0
 151+ 9AB0              ; ******************************************************************************************************************************************************************************************
 152+ 9AB0              ;
 153+ 9AB0              ;	19/10/22
 154+ 9AB0              ;
 155+ 9AB0              ;	Mov_right.
 156+ 9AB0              ;
 157+ 9AB0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9AB0              ;
 159+ 9AB0
 160+ 9AB0 21 E4 89     Mov_right ld hl,Ctrl_0
 161+ 9AB3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9AB5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9AB5              ; 																	; _ en el caso de que no lo haya.
 164+ 9AB5 3A E4 89     	ld a,(Ctrl_0)
 165+ 9AB8 CB 77        	bit 6,a
 166+ 9ABA 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9ABC
 168+ 9ABC CD EA 9C     	call Stop_Amadeus_right
 169+ 9ABF C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9AC0 18 4D        	jr 8F
 171+ 9AC2
 172+ 9AC2 3A BC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AC5 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AC7 20 46        	jr nz,8F
 175+ 9AC9
 176+ 9AC9 3A BE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9ACC A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9ACD 28 40        	jr z,8F
 179+ 9ACF
 180+ 9ACF              ; ---------- ---------- ----------
 181+ 9ACF              ;
 182+ 9ACF              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9ACF
 184+ 9ACF 3A CC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AD2 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AD4 28 11        	jr z,1F
 187+ 9AD6 38 06        	jr c,6F
 188+ 9AD8 FE 04        	cp 4
 189+ 9ADA 28 14        	jr z,7F
 190+ 9ADC 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9ADE
 192+ 9ADE              ; ---------- ---------- ----------
 193+ 9ADE              ;
 194+ 9ADE              ; Perfiles de velocidad
 195+ 9ADE              ;
 196+ 9ADE
 197+ 9ADE 3A BE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AE1 FE FE        	cp $fe
 199+ 9AE3 20 2A        	jr nz,8F
 200+ 9AE5 18 10        	jr 3F
 201+ 9AE7 3A BE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AEA FE FD        	cp $fd
 203+ 9AEC 20 21        	jr nz,8F
 204+ 9AEE 18 07        	jr 3F
 205+ 9AF0 3A BE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AF3 FE FB        	cp $fb
 207+ 9AF5 20 18        	jr nz,8F
 208+ 9AF7
 209+ 9AF7              ; ---------- ---------- ----------
 210+ 9AF7
 211+ 9AF7              3
 212+ 9AF7 CD 2A 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AFA              ;	call Reinicio
 214+ 9AFA
 215+ 9AFA              ; ---------- ---------- ----------
 216+ 9AFA              ;
 217+ 9AFA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AFA
 219+ 9AFA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AFC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AFD CD 16 9B     	call DESPLZ_DER
 222+ 9B00 C1           	pop bc
 223+ 9B01 10 F9        	djnz 5B
 224+ 9B03 2A B8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9B06 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9B07 22 B8 89     	ld (Posicion_actual),hl
 227+ 9B0A CD 81 9D     	call Genera_coordenadas
 228+ 9B0D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9B0F
 230+ 9B0F              ; ---------- ---------- ----------
 231+ 9B0F
 232+ 9B0F 2A B8 89     8 ld hl,(Posicion_actual)
 233+ 9B12 CD 16 9B     	call DESPLZ_DER
 234+ 9B15 C9           2 ret
 235+ 9B16
 236+ 9B16              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9B16              ;
 238+ 9B16              ;	22/9/22
 239+ 9B16              ;
 240+ 9B16
 241+ 9B16 CD 25 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B19 CD 71 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B1C CD 9A 9B         call Ciclo_completo
 244+ 9B1F 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B22 CB FE        	set 7,(hl)
 246+ 9B24 C9           	ret
 247+ 9B25
 248+ 9B25              ; ******************************************************************************************************************************************************************************************
 249+ 9B25              ;	15/02/23
 250+ 9B25              ;
 251+ 9B25
 252+ 9B25 3A CC 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B28 47           	ld b,a
 254+ 9B29 2A C4 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B2C 23           1 inc hl
 256+ 9B2D 23           	inc hl
 257+ 9B2E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B30 22 C4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B33 CD 8B 8D     	call Extrae_address
 260+ 9B36 22 BA 89     	ld (Puntero_objeto),hl
 261+ 9B39
 262+ 9B39              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B39
 264+ 9B39              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B39              ; Cuántos movimientos hemos hecho ??
 266+ 9B39              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B39
 268+ 9B39 2A C0 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B3C EB           	ex de,hl
 270+ 9B3D A7           	and a
 271+ 9B3E ED 52        	sbc hl,de
 272+ 9B40 CB 3D        	srl l
 273+ 9B42 3E 08        6 ld a,8
 274+ 9B44 95           	sub l
 275+ 9B45 30 1E        	jr nc,3F
 276+ 9B47
 277+ 9B47              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B47              ; B="0".
 279+ 9B47
 280+ 9B47 04           4 inc b
 281+ 9B48 3C           	inc a
 282+ 9B49 20 FC        	jr nz,4B
 283+ 9B4B 78           	ld a,b
 284+ 9B4C 08           	ex af,af
 285+ 9B4D 2A C0 89     	ld hl,(Indice_Sprite_der)
 286+ 9B50 23           5 inc hl
 287+ 9B51 23           	inc hl
 288+ 9B52 10 FC        	djnz 5B
 289+ 9B54 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B57 CD 8B 8D     	call Extrae_address
 291+ 9B5A 22 BA 89     	ld (Puntero_objeto),hl
 292+ 9B5D
 293+ 9B5D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B5D              ; _(Posicion_actual).
 295+ 9B5D
 296+ 9B5D 21 B8 89     	ld hl,Posicion_actual
 297+ 9B60 34           	inc (hl)
 298+ 9B61 08               ex af,af
 299+ 9B62 6F           	ld l,a
 300+ 9B63 18 DD        	jr 6B
 301+ 9B65
 302+ 9B65              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B65
 304+ 9B65 47           3 ld b,a
 305+ 9B66 2A C2 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B69 23           2 inc hl
 307+ 9B6A 23           	inc hl
 308+ 9B6B 10 FC        	djnz 2B
 309+ 9B6D 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B70 C9           8 ret
 311+ 9B71
 312+ 9B71              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B71              ;
 314+ 9B71              ;	24/7/22
 315+ 9B71              ;
 316+ 9B71              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B71              ;
 318+ 9B71              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B71              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B71              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B71
 322+ 9B71 3A BE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B74 A7           	and a
 324+ 9B75 20 1F        	jr nz,1F
 325+ 9B77 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B79 32 BE 89         ld (CTRL_DESPLZ),a
 327+ 9B7C
 328+ 9B7C 21 B7 89     	ld hl,Columns
 329+ 9B7F 34           	inc (hl)
 330+ 9B80 3A CA 89     	ld a,(Cuad_objeto)
 331+ 9B83 E6 01        	and 1
 332+ 9B85 28 0F        	jr z,1F
 333+ 9B87 2A B8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B8A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B8B 22 B8 89     	ld (Posicion_actual),hl
 336+ 9B8E CD 81 9D     	call Genera_coordenadas
 337+ 9B91 CD F6 9C     	call Inc_CTRL_DESPLZ
 338+ 9B94 18 03        	jr 2F
 339+ 9B96 CD F6 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B99 C9           2 ret
 341+ 9B9A
 342+ 9B9A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B9A              ;
 344+ 9B9A              ;	24/7/22
 345+ 9B9A              ;
 346+ 9B9A              ;	Ciclo_completo.
 347+ 9B9A              ;
 348+ 9B9A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B9A              ;
 350+ 9B9A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B9A              ; 	Decrementamos (Columns).
 352+ 9B9A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B9A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B9A
 355+ 9B9A
 356+ 9B9A 3A BE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B9D FE FF        	cp $ff
 358+ 9B9F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9BA1 E6 F0        	and $f0
 360+ 9BA3 20 28        	jr nz,3F
 361+ 9BA5
 362+ 9BA5              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9BA5
 364+ 9BA5 3A BE 89     	ld a,(CTRL_DESPLZ)
 365+ 9BA8 47           	ld b,a
 366+ 9BA9 3E F8        	ld a,$f8
 367+ 9BAB 80           	add b
 368+ 9BAC 32 BE 89     	ld (CTRL_DESPLZ),a
 369+ 9BAF 18 1C        	jr 3F
 370+ 9BB1 21 B7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9BB4 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9BB5 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9BB6 32 BE 89     	ld (CTRL_DESPLZ),a
 374+ 9BB9 3A CA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BBC E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BBE 20 0A        	jr nz,2F
 377+ 9BC0 2A B8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BC3 23           	inc hl
 379+ 9BC4 22 B8 89     	ld (Posicion_actual),hl
 380+ 9BC7 CD 81 9D     	call Genera_coordenadas
 381+ 9BCA
 382+ 9BCA              ; Inicia el puntero de Sprite.
 383+ 9BCA
 384+ 9BCA CD A2 8D     2 call Inicia_puntero_objeto_der
 385+ 9BCD C9           3 ret
 386+ 9BCE
 387+ 9BCE              ; ******************************************************************************************************************************************************************************************
 388+ 9BCE              ;
 389+ 9BCE              ;	15/02/23
 390+ 9BCE              ;
 391+ 9BCE              ;	Mov_left.
 392+ 9BCE              ;
 393+ 9BCE              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BCE              ;
 395+ 9BCE 21 E4 89     Mov_left ld hl,Ctrl_0
 396+ 9BD1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BD3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BD3              ; 																	; _ en el caso de que no lo haya.
 399+ 9BD3 3A E4 89     	ld a,(Ctrl_0)
 400+ 9BD6 CB 77        	bit 6,a
 401+ 9BD8 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BDA
 403+ 9BDA CD F0 9C     	call Stop_Amadeus_left
 404+ 9BDD C8           	ret z
 405+ 9BDE 20 4A        	jr nz,8F
 406+ 9BE0
 407+ 9BE0 3A BC 89     11 ld a,(Coordenada_X)
 408+ 9BE3 A7           	and a
 409+ 9BE4 20 44        	jr nz,8F
 410+ 9BE6
 411+ 9BE6 3A BE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BE9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BEA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BEC
 415+ 9BEC              ; ---------- ---------- ----------
 416+ 9BEC
 417+ 9BEC 3A CB 89     	ld a,(Vel_left)
 418+ 9BEF FE 02        	cp 2
 419+ 9BF1 28 0F        	jr z,1F
 420+ 9BF3 38 04        	jr c,6F
 421+ 9BF5 FE 04        	cp 4
 422+ 9BF7 28 12        	jr z,7F
 423+ 9BF9
 424+ 9BF9              ; ---------- ---------- ----------
 425+ 9BF9
 426+ 9BF9 3A BE 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BFC FE F8        	cp $f8
 428+ 9BFE 20 2A        	jr nz,8F
 429+ 9C00 18 10        	jr 4F
 430+ 9C02 3A BE 89     1 ld a,(CTRL_DESPLZ)
 431+ 9C05 FE F9        	cp $f9
 432+ 9C07 20 21        	jr nz,8F
 433+ 9C09 18 07        	jr 4F
 434+ 9C0B 3A BE 89     7 ld a,(CTRL_DESPLZ)
 435+ 9C0E FE FB        	cp $fb
 436+ 9C10 20 18        	jr nz,8F
 437+ 9C12
 438+ 9C12              ; ---------- ---------- ----------
 439+ 9C12
 440+ 9C12              4
 441+ 9C12 CD 18 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9C15              ;	call Reinicio
 443+ 9C15
 444+ 9C15              ; ---------- ---------- ----------
 445+ 9C15
 446+ 9C15 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9C17 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9C18
 449+ 9C18              ;	ld hl,(Indice_Sprite_izq)
 450+ 9C18              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9C18
 452+ 9C18 CD 31 9C     	call DESPLZ_IZQ
 453+ 9C1B C1           	pop bc
 454+ 9C1C 10 F9        	djnz 5B
 455+ 9C1E 2A B8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C21 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C22 22 B8 89     	ld (Posicion_actual),hl
 458+ 9C25 CD 81 9D     	call Genera_coordenadas
 459+ 9C28 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C2A
 461+ 9C2A              ; ---------- ---------- ----------
 462+ 9C2A
 463+ 9C2A              ; Movemos, no hay recolocación.
 464+ 9C2A
 465+ 9C2A 2A B8 89     8 ld hl,(Posicion_actual)
 466+ 9C2D CD 31 9C     	call DESPLZ_IZQ
 467+ 9C30 C9           2 ret
 468+ 9C31
 469+ 9C31              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C31              ;
 471+ 9C31              ;	22/9/22
 472+ 9C31
 473+ 9C31              DESPLZ_IZQ
 474+ 9C31
 475+ 9C31 CD 40 9C     	call Desplaza_izquierda
 476+ 9C34 CD 8C 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C37 CD B4 9C     	call Ciclo_completo_2
 478+ 9C3A 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C3D CB BE        	res 7,(hl)
 480+ 9C3F C9           	ret
 481+ 9C40
 482+ 9C40              Desplaza_izquierda
 483+ 9C40
 484+ 9C40 3A CB 89     	ld a,(Vel_left)
 485+ 9C43 47           	ld b,a
 486+ 9C44 2A C6 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C47 23           1 inc hl
 488+ 9C48 23           	inc hl
 489+ 9C49 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C4B 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C4E CD 8B 8D     	call Extrae_address
 492+ 9C51 22 BA 89     	ld (Puntero_objeto),hl
 493+ 9C54
 494+ 9C54              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C54
 496+ 9C54              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C54              ; Cuántos movimientos hemos hecho ??
 498+ 9C54              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C54
 500+ 9C54 2A C2 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C57 EB           	ex de,hl
 502+ 9C58 A7           	and a
 503+ 9C59 ED 52        	sbc hl,de
 504+ 9C5B CB 3D        	srl l
 505+ 9C5D 3E 08        6 ld a,8
 506+ 9C5F 95           	sub l
 507+ 9C60 30 1E        	jr nc,3F
 508+ 9C62
 509+ 9C62              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C62              ; B="0".
 511+ 9C62
 512+ 9C62 04           4 inc b
 513+ 9C63 3C           	inc a
 514+ 9C64 20 FC        	jr nz,4B
 515+ 9C66 78           	ld a,b
 516+ 9C67 08           	ex af,af
 517+ 9C68 2A C2 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C6B 23           5 inc hl
 519+ 9C6C 23           	inc hl
 520+ 9C6D 10 FC        	djnz 5B
 521+ 9C6F 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C72 CD 8B 8D     	call Extrae_address
 523+ 9C75 22 BA 89     	ld (Puntero_objeto),hl
 524+ 9C78
 525+ 9C78              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C78              ; _(Posicion_actual).
 527+ 9C78
 528+ 9C78 21 B8 89     	ld hl,Posicion_actual
 529+ 9C7B 35           	dec (hl)
 530+ 9C7C 08           	ex af,af
 531+ 9C7D 6F           	ld l,a
 532+ 9C7E 18 DD        	jr 6B
 533+ 9C80
 534+ 9C80              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C80
 536+ 9C80 47           3 ld b,a
 537+ 9C81 2A C0 89     	ld hl,(Indice_Sprite_der)
 538+ 9C84 23           2 inc hl
 539+ 9C85 23           	inc hl
 540+ 9C86 10 FC        	djnz 2B
 541+ 9C88 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C8B C9           8 ret
 543+ 9C8C
 544+ 9C8C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C8C              ;
 546+ 9C8C              ;	modifica_parametros_1er_DESPLZ
 547+ 9C8C              ;
 548+ 9C8C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C8C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C8C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C8C
 552+ 9C8C 3A BE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C8F A7           	and a
 554+ 9C90 20 1E        	jr nz,1F
 555+ 9C92 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C93 32 BE 89         ld (CTRL_DESPLZ),a
 557+ 9C96 21 B7 89     	ld hl,Columns
 558+ 9C99 34           	inc (hl)
 559+ 9C9A 3A CA 89     	ld a,(Cuad_objeto)
 560+ 9C9D E6 01        	and 1
 561+ 9C9F 20 0F        	jr nz,1F
 562+ 9CA1 2A B8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9CA4 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9CA5 22 B8 89     	ld (Posicion_actual),hl
 565+ 9CA8 CD 81 9D     	call Genera_coordenadas
 566+ 9CAB CD 07 9D     	call Dec_CTRL_DESPLZ
 567+ 9CAE 18 03        	jr 2F
 568+ 9CB0 CD 07 9D     1 call Dec_CTRL_DESPLZ
 569+ 9CB3 C9           2 ret
 570+ 9CB4
 571+ 9CB4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9CB4
 573+ 9CB4 3A BE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9CB7 FE F7        	cp $f7
 575+ 9CB9 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9CBB 30 2C        	jr nc,3F
 577+ 9CBD
 578+ 9CBD              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CBD
 580+ 9CBD 06 00        	ld b,0
 581+ 9CBF 04           4 inc b
 582+ 9CC0 3C           	inc a
 583+ 9CC1 FE F7        	cp $f7
 584+ 9CC3 20 FA        	jr nz,4B
 585+ 9CC5 3E FF        	ld a,$ff
 586+ 9CC7 90           	sub b
 587+ 9CC8 32 BE 89     	ld (CTRL_DESPLZ),a
 588+ 9CCB 18 1C        	jr 3F
 589+ 9CCD
 590+ 9CCD              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CCD
 592+ 9CCD 21 B7 89     1 ld hl,Columns
 593+ 9CD0 35           	dec (hl)
 594+ 9CD1 AF           	xor a
 595+ 9CD2 32 BE 89     	ld (CTRL_DESPLZ),a
 596+ 9CD5 3A CA 89     	ld a,(Cuad_objeto)
 597+ 9CD8 E6 01        	and 1
 598+ 9CDA 28 0A        	jr z,2F
 599+ 9CDC 2A B8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CDF 2B           	dec hl
 601+ 9CE0 22 B8 89     	ld (Posicion_actual),hl
 602+ 9CE3 CD 81 9D     	call Genera_coordenadas
 603+ 9CE6
 604+ 9CE6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CE6
 606+ 9CE6 CD B5 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CE9 C9           3 ret
 608+ 9CEA
 609+ 9CEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CEA              ;
 611+ 9CEA              ;	19/10/22
 612+ 9CEA              ;
 613+ 9CEA              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CEA              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CEA
 616+ 9CEA 3A BC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CED FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CEF C9           	ret
 619+ 9CF0
 620+ 9CF0              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CF0              ;
 622+ 9CF0              ;	19/10/22
 623+ 9CF0              ;
 624+ 9CF0              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CF0              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CF0
 627+ 9CF0 3A BC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CF3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CF5 C9           	ret
 630+ 9CF6
 631+ 9CF6              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CF6              ;
 633+ 9CF6              ;	24/7/22
 634+ 9CF6              ;
 635+ 9CF6              ;	Inc_CTRL_DESPLZ
 636+ 9CF6              ;
 637+ 9CF6              ;
 638+ 9CF6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CF6
 640+ 9CF6 21 BE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CF9 3A CC 89     	ld a,(Vel_right)
 642+ 9CFC A7           	and a
 643+ 9CFD 28 06        	jr z,1F
 644+ 9CFF 47           	ld b,a
 645+ 9D00 34           3 inc (hl)
 646+ 9D01 10 FD        	djnz 3B
 647+ 9D03 18 01        	jr 2F
 648+ 9D05 34           1 inc (hl)
 649+ 9D06 C9           2 ret
 650+ 9D07
 651+ 9D07              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9D07              ;
 653+ 9D07              ;	5/2/23
 654+ 9D07              ;
 655+ 9D07              ;	Dec_CTRL_DESPLZ
 656+ 9D07              ;
 657+ 9D07              ;
 658+ 9D07              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9D07
 660+ 9D07 21 BE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9D0A 3A CB 89     	ld a,(Vel_left)
 662+ 9D0D A7           	and a
 663+ 9D0E 28 06        	jr z,1F
 664+ 9D10 47           	ld b,a
 665+ 9D11 35           3 dec (hl)
 666+ 9D12 10 FD        	djnz 3B
 667+ 9D14 18 01        	jr 2F
 668+ 9D16 35           1 dec (hl)
 669+ 9D17 C9           2 ret
 670+ 9D18
 671+ 9D18              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9D18
 673+ 9D18 2A B8 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9D1B 01 1F 00     	ld bc,31
 675+ 9D1E A7           	and a
 676+ 9D1F ED 4A        	adc hl,bc
 677+ 9D21 22 B8 89     	ld (Posicion_actual),hl
 678+ 9D24 21 E4 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D27 CB C6        	set 0,(hl)
 680+ 9D29 C9           	ret
 681+ 9D2A
 682+ 9D2A              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D2A
 684+ 9D2A 2A B8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D2D 01 1F 00     	ld bc,31
 686+ 9D30 A7           	and a
 687+ 9D31 ED 42        	sbc hl,bc
 688+ 9D33 22 B8 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D36 21 E4 89     	ld hl,Ctrl_0
 690+ 9D39 CB CE        	set 1,(hl)
 691+ 9D3B C9           	ret
 692+ 9D3C
 693+ 9D3C              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D3C
 695+ 9D3C 24           Reaparece_abajo inc h
 696+ 9D3D 01 E0 17     	ld bc,$17e0
 697+ 9D40 A7           	and a
 698+ 9D41 ED 4A        	adc hl,bc
 699+ 9D43 22 B8 89     	ld (Posicion_actual),hl
 700+ 9D46 21 E4 89     	ld hl,Ctrl_0
 701+ 9D49 CB D6        	set 2,(hl)
 702+ 9D4B C9           	ret
 703+ 9D4C
 704+ 9D4C              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D4C
 706+ 9D4C 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D4F A7           	and a
 708+ 9D50 ED 42        	sbc hl,bc
 709+ 9D52 22 B8 89     	ld (Posicion_actual),hl
 710+ 9D55 21 E4 89     	ld hl,Ctrl_0
 711+ 9D58 CB DE        	set 3,(hl)
 712+ 9D5A C9           	ret
 713+ 9D5B
 714+ 9D5B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D5B              ;
 716+ 9D5B              ;	15/07/23
 717+ 9D5B
 718+ 9D5B              Reinicio
 719+ 9D5B
 720+ 9D5B              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D5B
 722+ 9D5B AF           	xor a
 723+ 9D5C 21 EB 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D5F CD 7D 9D     	call Limpia_contenido_hl
 725+ 9D62
 726+ 9D62 21 B8 89     	ld hl,Posicion_actual
 727+ 9D65 CD 7D 9D     	call Limpia_contenido_hl
 728+ 9D68
 729+ 9D68 CD 9E A0     	call Inicializa_Puntero_indice_mov
 730+ 9D6B CD 28 A0     	call Inicia_Puntero_mov
 731+ 9D6E
 732+ 9D6E 21 ED 89     	ld hl,Incrementa_puntero
 733+ 9D71 06 05        	ld b,5
 734+ 9D73 77           1 ld (hl),a
 735+ 9D74 23           	inc hl
 736+ 9D75 10 FC        	djnz 1B
 737+ 9D77
 738+ 9D77 21 F7 89     	ld hl,Ctrl_2
 739+ 9D7A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D7C
 741+ 9D7C C9           	ret
 742+ 9D7D
 743+ 9D7D 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D7E 23           	inc hl
 745+ 9D7F 77           	ld (hl),a
 746+ 9D80 C9           	ret
 747+ 9D81
 748+ 9D81
# file closed: Direcciones.asm
1512  9D81              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D81              ; ------------------------------------------------------------------------
   2+ 9D81              ;
   3+ 9D81              ;	02/04/23
   4+ 9D81              ;
   5+ 9D81              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D81              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D81              ;
   8+ 9D81              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D81              ;
  10+ 9D81              ;	Modifica: A,BC y DE.
  11+ 9D81
  12+ 9D81 C5           Genera_coordenadas push bc
  13+ 9D82 E5           	push hl
  14+ 9D83 D5           	push de
  15+ 9D84
  16+ 9D84 2A B8 89     	ld hl,(Posicion_actual)
  17+ 9D87
  18+ 9D87 7D           	ld a,l
  19+ 9D88 E6 1F        	and $1f
  20+ 9D8A 32 BC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D8D
  22+ 9D8D CD F6 99     	call calcula_tercio
  23+ 9D90 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D91
  25+ 9D91 1E 00        	ld e,0
  26+ 9D93 7D           	ld a,l
  27+ 9D94 E6 E0        	and $e0
  28+ 9D96 28 01        	jr z,1F
  29+ 9D98 04           	inc b
  30+ 9D99
  31+ 9D99 04           1 inc b
  32+ 9D9A 05           	dec b
  33+ 9D9B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D9D              ;														; _ , salimos.
  35+ 9D9D 1C           3 inc e
  36+ 9D9E D6 20        	sub 32
  37+ 9DA0 20 FB        	jr nz,3B
  38+ 9DA2 10 F5        	djnz 1B
  39+ 9DA4
  40+ 9DA4 7B           2 ld a,e
  41+ 9DA5 32 BD 89     	ld (Coordenada_y),a
  42+ 9DA8
  43+ 9DA8 D1           	pop de
  44+ 9DA9 E1           	pop hl
  45+ 9DAA C1           	pop bc
  46+ 9DAB
  47+ 9DAB C9           	ret
  48+ 9DAC
  49+ 9DAC              ; ------------------------------------------------------------------------
  50+ 9DAC              ;	28/05/23
  51+ 9DAC              ;
  52+ 9DAC              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9DAC              ;	Fila superior "0", Columna izquierda "0".
  54+ 9DAC              ;
  55+ 9DAC              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9DAC              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9DAC              ;
  58+ 9DAC              ;		DE="$120d"
  59+ 9DAC              ;
  60+ 9DAC              ;		D, (Coordenada_X), Columnas, $12
  61+ 9DAC              ;		E, (Coordenada_y), Filas, $0d
  62+ 9DAC              ;
  63+ 9DAC              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9DAC
  65+ 9DAC              ;	Modifica: A,BC y DE.
  66+ 9DAC
  67+ 9DAC
  68+ 9DAC              Genera_coordenadas_disparo
  69+ 9DAC
  70+ 9DAC              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9DAC
  72+ 9DAC 7D           	ld a,l
  73+ 9DAD E6 1F        	and $1f
  74+ 9DAF 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9DB0 CD F6 99     	call calcula_tercio
  76+ 9DB3 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DB4 1E 00        	ld e,0
  78+ 9DB6 7D           	ld a,l
  79+ 9DB7 E6 E0        	and $e0
  80+ 9DB9 28 01        	jr z,1F
  81+ 9DBB 04           	inc b
  82+ 9DBC 1C           1 inc e
  83+ 9DBD D6 20        	sub 32
  84+ 9DBF 20 FB        	jr nz,1B
  85+ 9DC1 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DC3 C9           	ret
  87+ 9DC4
# file closed: Genera_coordenadas.asm
1513  9DC4              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DC4
   2+ 9DC4
   3+ 9DC4              ;   07/07/23
   4+ 9DC4              ;
   5+ 9DC4              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DC4              ;
   7+ 9DC4              ;   Codificación:
   8+ 9DC4              ;
   9+ 9DC4              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DC4              ;
  11+ 9DC4              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DC4              ;
  13+ 9DC4              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DC4              ;
  15+ 9DC4              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DC4              ;
  17+ 9DC4              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DC4              ;                               ..... %01000010 Vel_up 4
  19+ 9DC4              ;                                               Vel_down 2
  20+ 9DC4              ;                               ..... $42
  21+ 9DC4              ;
  22+ 9DC4              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DC4              ;
  24+ 9DC4              ;                               ..... %01000010 Vel_left 4
  25+ 9DC4              ;                                               Vel_right 2
  26+ 9DC4              ;                               ..... $42
  27+ 9DC4              ;
  28+ 9DC4              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DC4              ;
  30+ 9DC4              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DC4              ;
  32+ 9DC4              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DC4              ;
  34+ 9DC4              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DC4              ;                                     $53
  36+ 9DC4              ;
  37+ 9DC4              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DC4              ;
  39+ 9DC4              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DC4              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DC4              ;
  42+ 9DC4              ;                       Arriba ..... $81
  43+ 9DC4              ;                       Arriba - izquierda ..... $a1
  44+ 9DC4              ;                       Arriba - derecha ..... $91
  45+ 9DC4              ;
  46+ 9DC4              ;                       Abajo ..... $41
  47+ 9DC4              ;                       Abajo - izquierda ..... $61
  48+ 9DC4              ;                       Abajo - derecha ..... $51
  49+ 9DC4              ;
  50+ 9DC4              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DC4              ;
  52+ 9DC4              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DC4              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DC4              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DC4              ;
  56+ 9DC4              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DC4              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DC4              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DC4              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DC4              ;
  61+ 9DC4              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DC4              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DC4              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DC4              ;
  65+ 9DC4              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DC4              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DC4              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DC4              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DC4
  70+ 9DC4              ; ----- ----- ----- ----- -----
  71+ 9DC4
  72+ 9DC4 F0 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DC6 F8 9D            defw F_1
  74+ 9DC8 02 9E            defw F_2
  75+ 9DCA 0C 9E            defw Codo_abajo_derecha
  76+ 9DCC 40 9E            defw Derecha_y_subiendo
  77+ 9DCE 4A 9E            defw Derecha_y_subiendo_1
  78+ 9DD0 54 9E            defw F_3
  79+ 9DD2 5E 9E            defw F_4
  80+ 9DD4 68 9E            defw Derecha_y_bajando
  81+ 9DD6 72 9E            defw Derecha_y_bajando_1
  82+ 9DD8 7C 9E            defw Derecha_y_bajando_2
  83+ 9DDA 86 9E            defw Codo_derecha_abajo
  84+ 9DDC B6 9E            defw Codo_abajo_izq.
  85+ 9DDE EA 9E            defw Izquierda_y_subiendo
  86+ 9DE0 F4 9E            defw Izquierda_y_subiendo_1
  87+ 9DE2 FE 9E            defw F_5
  88+ 9DE4 08 9F            defw F_6
  89+ 9DE6 12 9F            defw Izquierda_y_bajando
  90+ 9DE8 1C 9F            defw Izquierda_y_bajando_1
  91+ 9DEA 26 9F            defw Izquierda_y_bajando_2
  92+ 9DEC 30 9F            defw Codo_izquierda_abajo
  93+ 9DEE 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DF0
  95+ 9DF0 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DF4 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DF8
  98+ 9DF8 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DFC 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9E00 08 00
 100+ 9E02 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9E06 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9E0A 0F FE
 102+ 9E0C
 103+ 9E0C 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E10 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E14 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E18 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E1C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E20 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E24 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E28 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E2C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E30 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E34 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E38 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E3C 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E40
 117+ 9E40 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E44 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E48 06 00
 119+ 9E4A
 120+ 9E4A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E4E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E52 02 00
 122+ 9E54
 123+ 9E54 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E58 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E5C 04 00
 125+ 9E5E 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E62 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E66 08 00
 127+ 9E68
 128+ 9E68 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E6C 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E70 02 00
 130+ 9E72
 131+ 9E72 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E76 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E7A 06 00
 133+ 9E7C
 134+ 9E7C 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E80 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E84 06 00
 136+ 9E86
 137+ 9E86              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E86
 139+ 9E86 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E8A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E8E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E92 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E9A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E9E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9EA2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9EA6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9EAA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EAE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EB2 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EB6
 152+ 9EB6 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EBA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EBE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EC2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EC6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9ECA 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9ECE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9ED2 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9ED6 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EDA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EDE 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EE2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EE6 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EEA
 166+ 9EEA 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EEE 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EF2 06 00
 168+ 9EF4
 169+ 9EF4 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EF8 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EFC 02 00
 171+ 9EFE
 172+ 9EFE 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9F02 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9F06 04 00
 174+ 9F08 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9F0C 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F10 08 00
 176+ 9F12
 177+ 9F12 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F16 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F1A 02 00
 179+ 9F1C
 180+ 9F1C 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F20 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F24 06 00
 182+ 9F26
 183+ 9F26 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F2A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F2E 06 00
 185+ 9F30
 186+ 9F30 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F34 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F38 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F3C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F40 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F44 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F48 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F4C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F50 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F54 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F58 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F5C 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F60
 199+ 9F60              ; ----- ----- ----- ----- -----
 200+ 9F60              ;
 201+ 9F60              ;   27/06/23
 202+ 9F60
 203+ 9F60              Movimiento
 204+ 9F60
 205+ 9F60              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F60
 207+ 9F60              ;    ld hl,(Posicion_actual)
 208+ 9F60
 209+ 9F60 3A F7 89         ld a,(Ctrl_2)
 210+ 9F63 CB 57            bit 2,a
 211+ 9F65 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F67
 213+ 9F67 2A E9 89         ld hl,(Puntero_mov)
 214+ 9F6A 7E               ld a,(hl)
 215+ 9F6B
 216+ 9F6B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F6B
 218+ 9F6B              Inicia_desplazamiento.
 219+ 9F6B
 220+ 9F6B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F6B
 222+ 9F6B CD 5F A0         call Ajusta_velocidad_desplazamiento
 223+ 9F6E
 224+ 9F6E              ; Iniciamos (Repetimos_mov).
 225+ 9F6E
 226+ 9F6E 7E               ld a,(hl)
 227+ 9F6F E6 0F            and $0f
 228+ 9F71 32 EF 89         ld (Repetimos_desplazamiento),a
 229+ 9F74 32 F0 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F77
 231+ 9F77              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F77
 233+ 9F77 23               inc hl
 234+ 9F78 7E               ld a,(hl)
 235+ 9F79 32 F2 89         ld (Cola_de_desplazamiento),a
 236+ 9F7C 2B               dec hl
 237+ 9F7D
 238+ 9F7D 21 F7 89         ld hl,Ctrl_2
 239+ 9F80 CB D6            set 2,(hl)
 240+ 9F82
 241+ 9F82              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F82              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F82
 244+ 9F82              Desplazamiento_iniciado
 245+ 9F82
 246+ 9F82 CD 33 A0         call Aplica_desplazamiento
 247+ 9F85
 248+ 9F85 3A F7 89         ld a,(Ctrl_2)
 249+ 9F88 CB 67            bit 4,a
 250+ 9F8A C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F8B
 252+ 9F8B 21 EF 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F8E 35               dec (hl)
 254+ 9F8F C0               ret nz
 255+ 9F90
 256+ 9F90              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F90              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F90              ; Analiza (Cola_de_desplazamiento).
 259+ 9F90
 260+ 9F90 3A F2 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F93 A7               and a
 262+ 9F94 CC 88 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F97 28 30            jr z,Reinicia_el_movimiento
 264+ 9F99
 265+ 9F99 FE FF            cp $ff
 266+ 9F9B 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F9D
 268+ 9F9D FE FE            cp $fe
 269+ 9F9F CC 0C A0         call z,Fijamos_bucle
 270+ 9FA2 28 25            jr z,Reinicia_el_movimiento
 271+ 9FA4
 272+ 9FA4 FE FD            cp $fd
 273+ 9FA6 20 11            jr nz,1F
 274+ 9FA8
 275+ 9FA8              ; ---
 276+ 9FA8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9FA8
 278+ 9FA8 3A F7 89         ld a,(Ctrl_2)
 279+ 9FAB CB 5F            bit 3,a
 280+ 9FAD 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9FAF
 282+ 9FAF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9FAF
 284+ 9FAF 21 F7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9FB2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9FB4
 287+ 9FB4 CD 1D A0         call Inicia_Repetimos_movimiento
 288+ 9FB7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9FB9              ; ---
 290+ 9FB9
 291+ 9FB9 FE 01        1 cp 1
 292+ 9FBB CA F6 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FBE
 294+ 9FBE 3D               dec a
 295+ 9FBF 32 F2 89         ld (Cola_de_desplazamiento),a
 296+ 9FC2
 297+ 9FC2 3A F0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FC5 32 EF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FC8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FC8 C9               ret
 301+ 9FC9
 302+ 9FC9              Reinicia_el_movimiento
 303+ 9FC9
 304+ 9FC9 3A F7 89         ld a,(Ctrl_2)
 305+ 9FCC CB 5F            bit 3,a
 306+ 9FCE 28 1B            jr z,2F
 307+ 9FD0
 308+ 9FD0              ; (Cola_de_desplazamiento)="254".
 309+ 9FD0
 310+ 9FD0 21 F1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FD3 35               dec (hl)
 312+ 9FD4 20 15            jr nz,2F
 313+ 9FD6
 314+ 9FD6              ; Fin de las repeticiones del último movimiento.
 315+ 9FD6
 316+ 9FD6 21 F7 89         ld hl,Ctrl_2
 317+ 9FD9 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FDB
 319+ 9FDB 2A E9 89         ld hl,(Puntero_mov)
 320+ 9FDE 23               inc hl
 321+ 9FDF 23               inc hl
 322+ 9FE0 23               inc hl
 323+ 9FE1 22 E9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FE4              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FE4 7E               ld a,(hl)
 326+ 9FE5 32 F2 89         ld (Cola_de_desplazamiento),a
 327+ 9FE8
 328+ 9FE8 C3 90 9F         jp Cola
 329+ 9FEB
 330+ 9FEB
 331+ 9FEB CD 28 A0     2 call Inicia_Puntero_mov
 332+ 9FEE
 333+ 9FEE 21 F7 89         ld hl,Ctrl_2
 334+ 9FF1 CB 96            res 2,(hl)
 335+ 9FF3
 336+ 9FF3 C3 60 9F         jp Movimiento
 337+ 9FF6
 338+ 9FF6              Siguiente_desplazamiento
 339+ 9FF6
 340+ 9FF6              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FF6              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FF6
 343+ 9FF6 21 F7 89         ld hl,Ctrl_2
 344+ 9FF9 CB 96            res 2,(hl)
 345+ 9FFB
 346+ 9FFB 2A E9 89         ld hl,(Puntero_mov)
 347+ 9FFE 23               inc hl
 348+ 9FFF 23               inc hl
 349+ A000 22 E9 89         ld (Puntero_mov),hl
 350+ A003
 351+ A003 7E               ld a,(hl)
 352+ A004 A7               and a
 353+ A005 CC 88 A0         call z,Incrementa_Puntero_indice_mov
 354+ A008 CA C9 9F         jp z,Reinicia_el_movimiento
 355+ A00B
 356+ A00B C9               ret
 357+ A00C              ; Subrutinas -----------------------------------------
 358+ A00C              ; ---------- --------- --------- ---------- ----------
 359+ A00C              ;
 360+ A00C              ;   24/07/23
 361+ A00C              ;
 362+ A00C              ;   Fijamos_bucle
 363+ A00C              ;
 364+ A00C              ;
 365+ A00C
 366+ A00C              Fijamos_bucle
 367+ A00C
 368+ A00C 3A ED 89         ld a,(Incrementa_puntero)
 369+ A00F 3C               inc a
 370+ A010 32 EE 89         ld (Incrementa_puntero_backup),a
 371+ A013
 372+ A013 CD 88 A0         call Incrementa_Puntero_indice_mov
 373+ A016 2A E7 89         ld hl,(Puntero_indice_mov)
 374+ A019 22 EB 89         ld (Puntero_indice_mov_bucle),hl
 375+ A01C C9               ret
 376+ A01D
 377+ A01D              ; ---------- --------- --------- ---------- ----------
 378+ A01D              ;
 379+ A01D              ;   07/7/23
 380+ A01D              ;
 381+ A01D              ;   Inicia_Repetimos_movimiento
 382+ A01D              ;
 383+ A01D              ;
 384+ A01D
 385+ A01D              Inicia_Repetimos_movimiento
 386+ A01D
 387+ A01D              ; Iniciamos (Repetimos_movimiento).
 388+ A01D
 389+ A01D DD 2A E9 89      ld ix,(Puntero_mov)
 390+ A021 DD 7E 02         ld a,(ix+2)
 391+ A024 32 F1 89         ld (Repetimos_movimiento),a
 392+ A027
 393+ A027 C9               ret
 394+ A028
 395+ A028              ; ---------- --------- --------- ---------- ----------
 396+ A028              ;
 397+ A028              ;   26/6/23
 398+ A028              ;
 399+ A028              ;   Inicia_Puntero_mov
 400+ A028              ;
 401+ A028              ;
 402+ A028
 403+ A028 2A E7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A02B 5E               ld e,(hl)
 405+ A02C 23               inc hl
 406+ A02D 56               ld d,(hl)
 407+ A02E EB               ex de,hl
 408+ A02F 22 E9 89         ld (Puntero_mov),hl
 409+ A032 C9               ret
 410+ A033
 411+ A033              ; ---------- --------- --------- ---------- ----------
 412+ A033              ;
 413+ A033              ;   27/06/23
 414+ A033              ;
 415+ A033              ;   Aplica_movimiento.
 416+ A033
 417+ A033              Aplica_desplazamiento
 418+ A033
 419+ A033              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A033
 421+ A033 2A E9 89         ld hl, (Puntero_mov)
 422+ A036
 423+ A036 7E               ld a,(hl)
 424+ A037 E6 F0            and $f0
 425+ A039 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A03A
 427+ A03A CB 7E            bit 7,(hl)
 428+ A03C 28 03            jr z,1F
 429+ A03E CD 6D 9A         call Mov_up
 430+ A041 2A E9 89     1 ld hl, (Puntero_mov)
 431+ A044 CB 76            bit 6,(hl)
 432+ A046 28 03            jr z,2F
 433+ A048 CD 3C 9A         call Mov_down
 434+ A04B 2A E9 89     2 ld hl, (Puntero_mov)
 435+ A04E CB 6E            bit 5,(hl)
 436+ A050 28 03            jr z,3F
 437+ A052 CD CE 9B         call Mov_left
 438+ A055 2A E9 89     3 ld hl, (Puntero_mov)
 439+ A058 CB 66            bit 4,(hl)
 440+ A05A C8               ret z
 441+ A05B CD B0 9A         call Mov_right
 442+ A05E C9               ret
 443+ A05F
 444+ A05F              ; ---------- --------- --------- ---------- ----------
 445+ A05F              ;
 446+ A05F              ;   26/06/23
 447+ A05F              ;
 448+ A05F              ;   Ajusta_velocidad_desplazamiento.
 449+ A05F
 450+ A05F              Ajusta_velocidad_desplazamiento
 451+ A05F
 452+ A05F              ; 1er byte de la cadena de movimiento.
 453+ A05F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A05F
 455+ A05F CD 7D A0         call Extrae_nibble_alto
 456+ A062
 457+ A062 32 CD 89         ld (Vel_up),a
 458+ A065 79               ld a,c
 459+ A066 E6 0F            and $0f
 460+ A068 32 CE 89         ld (Vel_down),a
 461+ A06B
 462+ A06B              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A06B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A06B
 465+ A06B 23               inc hl
 466+ A06C CD 7D A0         call Extrae_nibble_alto
 467+ A06F
 468+ A06F 32 CB 89         ld (Vel_left),a
 469+ A072 79               ld a,c
 470+ A073 E6 0F            and $0f
 471+ A075 32 CC 89         ld (Vel_right),a
 472+ A078
 473+ A078              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A078
 475+ A078 23               inc hl
 476+ A079 22 E9 89         ld (Puntero_mov),hl
 477+ A07C C9               ret
 478+ A07D
 479+ A07D 06 04        Extrae_nibble_alto ld b,4
 480+ A07F 7E               ld a,(hl)
 481+ A080 4F               ld c,a
 482+ A081 E6 F0            and $f0
 483+ A083 CB 3F        1 srl a
 484+ A085 10 FC            djnz 1B
 485+ A087 C9               ret
 486+ A088
 487+ A088              ; ---------- --------- --------- ---------- ----------
 488+ A088              ;
 489+ A088              ;   5/7/23
 490+ A088              ;
 491+ A088              ;   Incrementa_Puntero_indice_mov
 492+ A088
 493+ A088              Incrementa_Puntero_indice_mov
 494+ A088
 495+ A088 21 ED 89         ld hl,Incrementa_puntero
 496+ A08B 34               inc (hl)
 497+ A08C
 498+ A08C 2A E7 89         ld hl,(Puntero_indice_mov)
 499+ A08F 01 02 00         ld bc,2
 500+ A092 A7               and a
 501+ A093 09               add hl,bc
 502+ A094 22 E7 89         ld (Puntero_indice_mov),hl
 503+ A097
 504+ A097 7E               ld a,(hl)
 505+ A098 A7               and a
 506+ A099
 507+ A099              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A099
 509+ A099              ;    jr z,$
 510+ A099
 511+ A099              ;! Reinicia el Patrón de movimiento.
 512+ A099
 513+ A099 CC 9E A0         call z,Inicializa_Puntero_indice_mov
 514+ A09C
 515+ A09C AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A09D
 517+ A09D C9               ret
 518+ A09E
 519+ A09E
 520+ A09E              ; ---------- --------- --------- ---------- ----------
 521+ A09E              ;
 522+ A09E              ;   24/07/23
 523+ A09E              ;
 524+ A09E              ;   Inicializa_Puntero_indice_mov
 525+ A09E
 526+ A09E              Inicializa_Puntero_indice_mov
 527+ A09E
 528+ A09E              ; Existe etiqueta de bucle principal???
 529+ A09E
 530+ A09E 2A EB 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A0A1 24               inc h
 532+ A0A2 25               dec h
 533+ A0A3 28 05            jr z,2F
 534+ A0A5
 535+ A0A5 22 E7 89         ld (Puntero_indice_mov),hl
 536+ A0A8 18 14            jr 3F
 537+ A0AA
 538+ A0AA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A0AA
 540+ A0AA 3A ED 89     2 ld a,(Incrementa_puntero)
 541+ A0AD 47               ld b,a
 542+ A0AE
 543+ A0AE 2A E7 89         ld hl,(Puntero_indice_mov)
 544+ A0B1 2B           1 dec hl
 545+ A0B2 2B               dec hl
 546+ A0B3 10 FC            djnz 1B
 547+ A0B5 22 E7 89         ld (Puntero_indice_mov),hl
 548+ A0B8
 549+ A0B8 AF               xor a
 550+ A0B9 32 ED 89         ld (Incrementa_puntero),a
 551+ A0BC 18 06            jr 4F
 552+ A0BE
 553+ A0BE 3A EE 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0C1 32 ED 89         ld (Incrementa_puntero),a
 555+ A0C4 C9           4 ret
 556+ A0C5
 557+ A0C5
 558+ A0C5
# file closed: Patrones_de_mov.asm
1514  A0C5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0C5              ; Relojes y temporizaciones.
   2+ A0C5
   3+ A0C5              ; ------------------------------------------------------
   4+ A0C5              ;
   5+ A0C5              ;	16/7/23
   6+ A0C5              ;
   7+ A0C5              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0C5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0C5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0C5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0C5              ;
  12+ A0C5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0C5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0C5
  15+ A0C5              ; Disparo_entidad db 1
  16+ A0C5              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0C5              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0C5
  19+ A0C5              Habilita_disparos
  20+ A0C5
  21+ A0C5 7E           	ld a,(hl)
  22+ A0C6 A7           	and a
  23+ A0C7 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0C8
  25+ A0C8 EB           	ex de,hl
  26+ A0C9
  27+ A0C9 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0CA C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0CB
  30+ A0CB              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0CB
  32+ A0CB 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0CC 7E           	ld a,(hl)
  34+ A0CD 23           	inc hl
  35+ A0CE 77           	ld (hl),a
  36+ A0CF
  37+ A0CF EB           	ex de,hl						; Habilitamos disparo.
  38+ A0D0 3E 01        	ld a,1
  39+ A0D2 77           	ld (hl),a
  40+ A0D3 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1515  A0D4              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0D4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0D4              ;
   3+ A0D4              ;	9/8/23
   4+ A0D4              ;
   5+ A0D4              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0D4
   7+ A0D4              ;	ADC HL,SP	LD (addr),SP
   8+ A0D4              ;	ADD HL,SP	LD SP,(addr)
   9+ A0D4              ;	ADD IX,SP	LD SP,nn
  10+ A0D4              ; 	ADD IY,SP	LD SP,HL
  11+ A0D4              ;				LD SP,IX
  12+ A0D4              ;	DEC SP		LD SP,IY
  13+ A0D4
  14+ A0D4              ;	EX (SP),HL
  15+ A0D4              ;	EX (SP),IX
  16+ A0D4              ;	EX (SP),IY
  17+ A0D4
  18+ A0D4              ;	INC SP
  19+ A0D4
  20+ A0D4                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0A 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F9 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 12 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 10 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 12 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 10 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0A 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2C 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 14 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 14 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 18 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 14 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 18 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 18 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1C 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 18 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1C 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1C 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 20 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1C 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 20 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 20 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1516  74C8
1517  74C8              	SAVESNA "Pruebas.sna", START
1518  74C8
1519  74C8
1520  74C8
1521  74C8
# file closed: Banco_de_pruebas.asm
