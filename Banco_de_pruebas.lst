# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 43 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  9+  83E8              ;                    _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 7E 50        	defw $507e                                      ; (Posicion_inicio).
199+  84FC 04           	db 4											; (Cuad_objeto).
200+  84FD
201+  84FD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 F2 94 00 00  	defw Indice_mov_Izquierda_y_derecha,0  	  		; (Puntero_indice_mov) / (Puntero_mov).
216+  851B
217+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
218+  851E
219+  851E 00           	db 0 											; (Columnas).
220+  851F 00 00        	defw 0											; (Limite_horizontal).
221+  8521 00           	db 0											; (Limite_vertical).
222+  8522
223+  8522              ; ---------- ---------- ---------- ---------- ----------
224+  8522
225+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
226+  8524 00 00        	defw 0                                          ; (Posicion_actual).
227+  8526 00 00        	defw 0											; (Puntero_objeto).
228+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
229+  852B
230+  852B 04           	db %00000100									; (Attr).
231+  852C
232+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
233+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
234+  8530
235+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
236+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
237+  8534
238+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
239+  8536 01           	db 1											; (Cuad_objeto).
240+  8537
241+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
242+  853B
243+  853B 00 00        	db 0,0											; Variables_de_borrado
244+  853D 00 00        	defw 0										 	;	" " " " " " "
245+  853F 00 00        	defw 0											;	" " " " " " "
246+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
247+  8545
248+  8545 00 00        	db 0,0											; Variables_de_pintado
249+  8547 00 00        	defw 0											;	" " " " " " "
250+  8549 00 00        	defw 0											;	" " " " " " "
251+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
252+  854F
253+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
254+  8551
255+  8551 06 95 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
256+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
257+  8558
258+  8558 00           	db 0 											; (Columnas).
259+  8559 00 00        	defw 0											; (Limite_horizontal).
260+  855B 00           	db 0											; (Limite_vertical).
261+  855C
262+  855C              ; ---------- ---------- ---------- ---------- ----------
263+  855C
264+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
265+  855E 00 00        	defw 0                                          ; (Posicion_actual).
266+  8560 00 00        	defw 0 											; (Puntero_objeto).
267+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
268+  8565
269+  8565 01           	db %00000001									; (Attr).
270+  8566
271+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
272+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
273+  856A
274+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
275+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
276+  856E
277+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
278+  8570 00           	db 0											; (Cuad_objeto).
279+  8571
280+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
281+  8575
282+  8575 00 00        	db 0,0											; Variables_de_borrado
283+  8577 00 00        	defw 0										 	;	" " " " " " "
284+  8579 00 00        	defw 0											;	" " " " " " "
285+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
286+  857F
287+  857F 00 00        	db 0,0											; Variables_de_pintado
288+  8581 00 00        	defw 0											;	" " " " " " "
289+  8583 00 00        	defw 0											;	" " " " " " "
290+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
291+  8589
292+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
293+  858B
294+  858B F6 94 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
295+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
296+  8592
297+  8592 00           	db 0 											; (Columnas).
298+  8593 00 00        	defw 0											; (Limite_horizontal).
299+  8595 00           	db 0											; (Limite_vertical).
300+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 8D 50        Posicion_inicio defw $508d								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 03           Cuad_objeto db 3										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 00 00        Puntero_indice_mov defw 0
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1 00           Numero_de_disparotes db 0
194   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
195   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
196   85E6 00           Impacto db 0											; Este byte indica que se ha producido impacto:
197   85E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
198   85E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
199   85E7 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
200   85EA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
201   85EA              ; Gestión de FRAMES.
202   85EA
203   85EA 00           Switch db 0
204   85EB
205   85EB              ; Variables de Raster y localización en pantalla.
206   85EB
207   85EB 00 FF        Temp_Raster defw $ff00
208   85ED
209   85ED              ; Rutina principal *************************************************************************************************************************************************************************
210   85ED              ;
211   85ED              ;	14/11/22
212   85ED
213   85ED 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
214   85F0
215   85F0 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
216   85F2 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
217   85F4 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
218   85F6 F3           	DI
219   85F7
220   85F7 3E 01        	ld a,1
221   85F9 D3 FE        	out ($fe),a
222   85FB
223   85FB 3E 07        	ld a,%00000111
224   85FD CD 24 91     	call Cls
225   8600
226   8600              ;	call Pinta_FILAS
227   8600
228   8600 CD 51 88     	call Pulsa_ENTER
229   8603
230   8603 21 D7 85     	ld hl,Numero_de_entidades
231   8606 46           	ld b,(hl)
232   8607 04           	inc b
233   8608 05           	dec b
234   8609 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
235   860B
236   860B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
237   860B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
238   860B              ;	Pintamos el resto de entidades:
239   860B
240   860B CD 4A 87     	call Inicia_punteros_de_entidades
241   860E
242   860E              ;	INICIA ENTIDADES!!!!!
243   860E
244   860E C5           1 push bc  												; Guardo el contador de entidades.
245   860F CD A4 87      	call Inicia_Puntero_objeto
246   8612 CD 74 8B     	call Draw
247   8615 CD A0 7F     	call Guarda_foto_registros
248   8618 CD EC 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
249   861B C1           	pop bc
250   861C 10 F0        	djnz 1B  											; Decremento el contador de entidades.
251   861E
252   861E              ;
253   861E
254   861E
255   861E
256   861E
257   861E
258   861E
259   861E
260   861E
261   861E
262   861E              ; 	INICIA AMADEUS!!!!!
263   861E
264   861E CD 2D 88     3 call Restore_Amadeus
265   8621 CD A4 87     	call Inicia_Puntero_objeto
266   8624 CD 74 8B     	call Draw
267   8627 CD A0 7F     	call Guarda_foto_registros
268   862A CD 3F 88     	call Store_Amadeus
269   862D
270   862D              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
271   862D
272   862D CD 60 87     	call Inicia_Puntero_Disparo_Entidades
273   8630 CD 67 87     	call Inicia_Puntero_Disparo_Amadeus
274   8633
275   8633              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
276   8633
277   8633 CD 4A 87     	call Inicia_punteros_de_entidades
278   8636 CD 1B 88     	call Restore_Primera_entidad
279   8639
280   8639 3A D7 85     	ld a,(Numero_de_entidades)
281   863C 3C           	inc a
282   863D 32 D8 85     	ld (Numero_de_malotes),a
283   8640
284   8640 FB           2 ei
285   8641 18 FD        	jr 2B
286   8643
287   8643              ; -----------------------------------------------------------------------------------
288   8643
289   8643              Frame
290   8643
291   8643              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
292   8643              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
293   8643
294   8643 3E 02            ld a,2
295   8645 D3 FE            out ($fe),a
296   8647 CD 78 8E     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
297   864A CD B1 8E     	call Extrae_foto_disparos
298   864D 3E 01            ld a,1
299   864F D3 FE            out ($fe),a
300   8651
301   8651              ; ----------------------------------------------------------------------
302   8651
303   8651              ;	Existe colisión?????
304   8651
305   8651 3A E6 85     	ld a,(Impacto)
306   8654 A7           	and a
307   8655 28 02        	jr z,5F
308   8657
309   8657              ; A="1" Impacto en entidad.
310   8657              ; A="2"	Impacto en Amadeus.
311   8657
312   8657 18 FE        	jr $
313   8659
314   8659 AF           5 xor a
315   865A 32 E6 85     	ld (Impacto),a										; Flag (Impacto) a "0".
316   865D
317   865D CD 3B 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
318   8660 CD 59 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
319   8663
320   8663 21 00 70     	ld hl,Album_de_fotos
321   8666 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
322   8669              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
323   8669 3A D7 85         ld a,(Numero_de_entidades)
324   866C 47               ld b,a
325   866D A7           	and a
326   866E 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
327   8670
328   8670 C5           2 push bc
329   8671 CD BD 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
330   8674 3A C3 85     	ld a,(Ctrl_0)
331   8677 CB 67        	bit 4,a
332   8679 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
333   867B
334   867B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
335   867B              ; Las entidades sólo generan disparo cuando se mueven.
336   867B              ; 16/02/23.
337   867B              ; [[[
338   867B CD 88 88     	call Detecta_disparo_entidad
339   867E              ; ]]]
340   867E CD 11 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
341   8681
342   8681 21 C3 85     1 ld hl,Ctrl_0
343   8684 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
344   8686 AF           	xor a
345   8687 32 C4 85     	ld (Obj_dibujado),a
346   868A CD EC 87     	call Store_Restore_entidades
347   868D C1           	pop bc
348   868E 10 E0        	djnz 2B
349   8690
350   8690              ; Tras la gestión de las entidades, ... AMADEUS.
351   8690
352   8690 CD 2D 88     4 call Restore_Amadeus
353   8693 CD E2 86     	call Mov_Amadeus
354   8696 3A C3 85     	ld a,(Ctrl_0)
355   8699 CB 67        	bit 4,a
356   869B 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
357   869D CD 11 87     	call Guarda_foto_entidad_a_pintar
358   86A0
359   86A0 21 C3 85     3 ld hl,Ctrl_0
360   86A3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
361   86A5 AF           	xor a
362   86A6 32 C4 85     	ld (Obj_dibujado),a
363   86A9 CD 3F 88     	call Store_Amadeus
364   86AC
365   86AC              ; -----
366   86AC
367   86AC CD 4A 87     	call Inicia_punteros_de_entidades
368   86AF CD 1B 88     	call Restore_Primera_entidad
369   86B2
370   86B2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
371   86B2
372   86B2 CD 6E 87     	call Calcula_numero_de_malotes
373   86B5 CD 86 87     	call Calcula_numero_de_disparotes
374   86B8
375   86B8 3E 04        	ld a,4
376   86BA D3 FE        	out ($fe),a
377   86BC C9           	ret
378   86BD
379   86BD              ; --------------------------------------------------------------------------------------------------------------
380   86BD              ;
381   86BD              ;	27/03/23
382   86BD
383   86BD              Mov_obj
384   86BD
385   86BD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
386   86BD
387   86BD AF           	xor a
388   86BE 32 C4 85     	ld (Obj_dibujado),a
389   86C1 CD 1B 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
390   86C4              ;														; Obj_dibujado="0".
391   86C4              ; Movemos Entidades malignas.
392   86C4
393   86C4 2A C5 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
394   86C7 24           	inc h                                               ; Salimos de la rutina.
395   86C8 25           	dec h
396   86C9 C8           	ret z
397   86CA
398   86CA CD 08 95     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
399   86CD 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
400   86D0 CB 67        	bit 4,a
401   86D2 C8           	ret z
402   86D3
403   86D3              ; ---------
404   86D3
405   86D3 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
406   86D5 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
407   86D8 CD 1B 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
408   86DB CD 32 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
409   86DE CD 01 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
410   86E1 C9           	ret													; _de la misma.
411   86E2
412   86E2              ; --------------------------------------------------------------------------------------------------------------
413   86E2              ;
414   86E2              ;	29/1/23
415   86E2
416   86E2              Mov_Amadeus
417   86E2
418   86E2 AF           	xor a
419   86E3 32 C4 85     	ld (Obj_dibujado),a
420   86E6 CD 1B 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
421   86E9              ;														; Obj_dibujado="0".
422   86E9              ; Movemos Amadeus.
423   86E9
424   86E9 CD 65 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
425   86EC 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
426   86EF CB 67        	bit 4,a
427   86F1 C8           	ret z
428   86F2
429   86F2              ; ---------
430   86F2
431   86F2 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
432   86F4 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
433   86F7 CD 1B 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
434   86FA CD 32 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
435   86FD CD 01 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
436   8700 C9           	ret													; _de la nave.
437   8701
438   8701              ; --------------------------------------------------------------------------------------------------------------
439   8701              ;
440   8701              ;	31/01/23
441   8701              ;
442   8701              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
443   8701
444   8701              Guarda_foto_entidad_a_borrar
445   8701
446   8701 CD 4E 8E     	call Prepara_draw
447   8704 CD 88 8D     	call calcula_CColumnass
448   8707 CD BF 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
449   870A CD 14 8E     	call Define_rutina_de_impresion
450   870D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
451   8710 C9           	ret
452   8711
453   8711              ; --------------------------------------------------------------------------------------------------------------
454   8711              ;
455   8711              ;	31/01/23
456   8711              ;
457   8711              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
458   8711              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
459   8711
460   8711              Guarda_foto_entidad_a_pintar
461   8711
462   8711 CD 3E 87     	call Repone_pintar
463   8714 CD 74 8B     	call Draw
464   8717 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
465   871A C9           	ret
466   871B
467   871B              ; --------------------------------------------------------------------------------------------------------------
468   871B              ;
469   871B              ;
470   871B
471   871B 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
472   871E 3A C4 85     	ld a,(Obj_dibujado)
473   8721 A7           	and a
474   8722 28 05        	jr z,1F
475   8724 11 B9 85     	ld de,Variables_de_pintado
476   8727 18 03        	jr 2F
477   8729 11 AF 85     1 ld de,Variables_de_borrado
478   872C 01 08 00     2 ld bc,8
479   872F ED B0        	ldir
480   8731 C9           	ret
481   8732
482   8732              ; --------------------------------------------------------------------------------------------------------------
483   8732
484   8732 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
485   8735 11 96 85     	ld de,Filas
486   8738 01 08 00     	ld bc,8
487   873B ED B0        	ldir
488   873D C9           	ret
489   873E
490   873E 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
491   8741 11 96 85     	ld de,Filas
492   8744 01 08 00     	ld bc,8
493   8747 ED B0        	ldir
494   8749 C9           	ret
495   874A
496   874A              ; *************************************************************************************************************************************************************
497   874A              ;
498   874A              ; 8/1/23
499   874A              ;
500   874A              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
501   874A              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
502   874A              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
503   874A
504   874A              ; Destruye HL y DE !!!!!
505   874A
506   874A              Inicia_punteros_de_entidades
507   874A
508   874A 21 68 84     	ld hl,Indice_de_entidades
509   874D CD 9E 87         call Extrae_address
510   8750 22 D1 85         ld (Puntero_store_entidades),hl
511   8753 21 6A 84     	ld hl,Indice_de_entidades+2
512   8756 22 D5 85     	ld (Indice_restore),hl
513   8759 CD 9E 87     	call Extrae_address
514   875C 22 D3 85     	ld (Puntero_restore_entidades),hl
515   875F C9               ret
516   8760
517   8760              ; *************************************************************************************************************************************************************
518   8760              ;
519   8760              ; 8/1/23
520   8760              ;
521   8760              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
522   8760
523   8760 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
524   8763 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
525   8766 C9           	ret
526   8767 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
527   876A 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
528   876D C9           	ret
529   876E
530   876E              ; -------------------------------------------------------------------------------------------------------------
531   876E              ;
532   876E              ; 28/2/23
533   876E              ;
534   876E
535   876E              Calcula_numero_de_malotes
536   876E
537   876E 21 00 70     	ld hl,Album_de_fotos
538   8771 EB           	ex de,hl
539   8772 2A DD 85     	ld hl,(Stack_snapshot)
540   8775
541   8775 06 00        	ld b,0
542   8777 7D           	ld a,l
543   8778 93           	sub e
544   8779 28 07        	jr z,1F
545   877B
546   877B              ; Nº de malotes no es "0".
547   877B
548   877B D6 06        2 sub 6
549   877D 04           	inc b
550   877E A7           	and a
551   877F 20 FA        	jr nz,2B
552   8781 78           	ld a,b
553   8782
554   8782 32 D8 85     1 ld (Numero_de_malotes),a
555   8785 C9           	ret
556   8786
557   8786              ; -------------------------------------------------------------------------------------------------------------
558   8786              ;
559   8786              ; 28/2/23
560   8786              ;
561   8786
562   8786              Calcula_numero_de_disparotes
563   8786
564   8786 21 60 70     	ld hl,Album_de_fotos_disparos
565   8789 EB           	ex de,hl
566   878A 2A DF 85     	ld hl,(Stack_snapshot_disparos)
567   878D
568   878D 06 00        	ld b,0
569   878F 7D           	ld a,l
570   8790 93           	sub e
571   8791 28 07        	jr z,1F
572   8793
573   8793              ; Nº de malotes no es "0".
574   8793
575   8793 D6 06        2 sub 6
576   8795 04           	inc b
577   8796 A7           	and a
578   8797 20 FA        	jr nz,2B
579   8799 78           	ld a,b
580   879A
581   879A 32 E1 85     1 ld (Numero_de_disparotes),a
582   879D C9           	ret
583   879E              ; *************************************************************************************************************************************************************
584   879E              ;
585   879E              ; 20/10/22
586   879E              ;
587   879E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
588   879E              ;
589   879E              ; Destruye el puntero y DE !!!!!
590   879E
591   879E 5E           Extrae_address ld e,(hl)
592   879F 23           	inc hl
593   87A0 56           	ld d,(hl)
594   87A1 2B           	dec hl
595   87A2 EB           	ex de,hl
596   87A3 C9           	ret
597   87A4
598   87A4              ; *************************************************************************************************************************************************************
599   87A4              ;
600   87A4              ;	7/2/23
601   87A4              ;
602   87A4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
603   87A4              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
604   87A4              ;
605   87A4              ;   Destruye HL y BC !!!!!,
606   87A4              ;
607   87A4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
608   87A4              ;					"0" ..... Izquierda.
609   87A4
610   87A4              Inicia_Puntero_objeto
611   87A4
612   87A4 3A AA 85     	ld a,(Cuad_objeto)
613   87A7 E6 01        	and 1
614   87A9 F5           	push af
615   87AA CC C8 87     	call z,Inicia_puntero_objeto_izq
616   87AD F1           	pop af
617   87AE 28 2B        	jr z,1F
618   87B0 CD B5 87     	call Inicia_puntero_objeto_der
619   87B3 18 26        	jr 1F
620   87B5
621   87B5              ; Arrancamos desde la parte izquierda de la pantalla.
622   87B5              ; Iniciamos (Indice_Sprite_der).
623   87B5
624   87B5 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
625   87B8 22 A4 85     	ld (Puntero_DESPLZ_der),hl
626   87BB CD 9E 87     	call Extrae_address
627   87BE 22 9A 85     	ld (Puntero_objeto),hl
628   87C1
629   87C1 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
630   87C4              ;	call Extrae_address
631   87C4 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
632   87C7 C9           	ret
633   87C8
634   87C8              ; Arrancamos desde la parte derecha de la pantalla.
635   87C8              ; Iniciamos (Indice_Sprite_izq).
636   87C8
637   87C8 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
638   87CB 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
639   87CE CD 9E 87     	call Extrae_address
640   87D1 22 9A 85     	ld (Puntero_objeto),hl
641   87D4
642   87D4 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
643   87D7              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
644   87D7 22 A4 85     	ld (Puntero_DESPLZ_der),hl
645   87DA C9           	ret
646   87DB
647   87DB              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
648   87DB
649   87DB 21 38 83     1 ld hl,Amadeus
650   87DE ED 4B 9A 85  	ld bc,(Puntero_objeto)
651   87E2 B7 ED 42     	sub hl,bc
652   87E5 C0           	ret nz
653   87E6 21 C3 85     	ld hl,Ctrl_0
654   87E9 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
655   87EB C9           	ret 												; _de nuestra nave en los extremos.
656   87EC
657   87EC              ; *************************************************************************************************************************************************************
658   87EC              ;
659   87EC              ;	8/1/23
660   87EC              ;
661   87EC              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
662   87EC              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
663   87EC
664   87EC              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
665   87EC              ;	_de la 2ª y 3ª entidad respectivamente.
666   87EC
667   87EC              Store_Restore_entidades
668   87EC
669   87EC E5           	push hl
670   87ED D5           	push de
671   87EE C5            	push bc
672   87EF
673   87EF              ;	STORE !!!!!
674   87EF              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
675   87EF
676   87EF 21 96 85     	ld hl,Filas
677   87F2 ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
678   87F6 01 3A 00     	ld bc,58
679   87F9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
680   87FB
681   87FB              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
682   87FB
683   87FB 2A D3 85     	ld hl,(Puntero_restore_entidades)
684   87FE 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
685   8801 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
686   8804 01 3A 00     	ld bc,58
687   8807 ED B0        	ldir
688   8809
689   8809              ;	Incrementa RESTORE !!!!!
690   8809
691   8809 2A D5 85         ld hl,(Indice_restore)
692   880C 23           	inc hl
693   880D 23           	inc hl
694   880E 22 D5 85     	ld (Indice_restore),hl
695   8811 CD 9E 87         call Extrae_address
696   8814 22 D3 85         ld (Puntero_restore_entidades),hl
697   8817 C1           	pop bc
698   8818 D1           	pop de
699   8819 E1           	pop hl
700   881A C9           	ret
701   881B
702   881B              ; **************************************************************************************************
703   881B              ;
704   881B              ;	29/10/22
705   881B              ;
706   881B              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
707   881B
708   881B E5           Restore_Primera_entidad push hl
709   881C D5           	push de
710   881D C5            	push bc
711   881E 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
712   8821 11 96 85     	ld de,Filas
713   8824 01 3A 00     	ld bc,58
714   8827 ED B0        	ldir
715   8829 C1           	pop bc
716   882A D1           	pop de
717   882B E1           	pop hl
718   882C C9           	ret
719   882D
720   882D              ; **************************************************************************************************
721   882D              ;
722   882D              ;	25/01/23
723   882D              ;
724   882D              ;	Restore_Amadeus
725   882D              ;
726   882D              ;	Cargamos en DRAW los parámetros de Amadeus.
727   882D              ;
728   882D
729   882D E5           Restore_Amadeus	push hl
730   882E D5           	push de
731   882F C5            	push bc
732   8830 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
733   8833 11 96 85     	ld de,Filas
734   8836 01 3A 00     	ld bc,58
735   8839 ED B0        	ldir
736   883B C1           	pop bc
737   883C D1           	pop de
738   883D E1           	pop hl
739   883E C9           	ret
740   883F
741   883F              ; *************************************************************************************************************************************************************
742   883F              ;
743   883F              ;	29/01/23
744   883F              ;
745   883F              ;	Store_Amadeus
746   883F              ;
747   883F              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
748   883F              ;
749   883F
750   883F E5           Store_Amadeus push hl
751   8840 D5           	push de
752   8841 C5            	push bc
753   8842 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
754   8845 11 74 84     	ld de,Amadeus_db
755   8848 01 3A 00     	ld bc,58
756   884B ED B0        	ldir
757   884D C1           	pop bc
758   884E D1           	pop de
759   884F E1           	pop hl
760   8850 C9           	ret
761   8851
762   8851              ; **************************************************************************************************
763   8851
764   8851              ; Teclado.
765   8851
766   8851 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
767   8853 DB FE        	in a,($fe)
768   8855 E6 01        	and $01
769   8857 28 02        	jr z,1f
770   8859 18 F6        	jr Pulsa_ENTER
771   885B C9           1 ret
772   885C
773   885C              ; **************************************************************************************************
774   885C              ;
775   885C              ; Temporización.
776   885C
777   885C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
778   885C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
779   885C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
780   885C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
781   885C
782   885C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
783   885C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
784   885C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
785   885C
786   885C              ; A partir de $4f61 no hace falta DELAY.
787   885C
788   885C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
789   885C
790   885C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
791   885F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
792   8860 78           	LD A,B
793   8861 A7           	AND A
794   8862 20 FB        	JR NZ,wait
795   8864 C9           	RET
796   8865
797   8865              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
798   8865              ;
799   8865              ;	5/3/23
800   8865              ;
801   8865              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
802   8865
803   8865              Movimiento_Amadeus
804   8865
805   8865              ; Disparo.
806   8865
807   8865 3E F7        	ld a,$f7												; "5" para disparar.
808   8867 DB FE        	in a,($fe)
809   8869 E6 10        	and $10
810   886B CC BC 88     	call z,Genera_disparo
811   886E
812   886E 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
813   8870 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
814   8872 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
815   8874 CC B2 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
816   8877 3E F7        	ld a,$f7
817   8879 DB FE        	in a,($fe)
818   887B E6 01        	and $01
819   887D C8           	ret z
820   887E
821   887E 3E F7        	ld a,$f7
822   8880 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
823   8882 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
824   8884 CC 94 91     	call z,Mov_right										;			"			"			"			"			"			"			"			"
825   8887 C9           	ret
826   8888
827   8888              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
828   8888              ;
829   8888              ;	Rutina provisional para que los malotes cagen balas.
830   8888
831   8888 3E 7F        Detecta_disparo_entidad ld a,$7f
832   888A DB FE        	in a,($fe)
833   888C E6 01        	and 1
834   888E C0           	ret nz
835   888F CD BC 88     	call Genera_disparo
836   8892 C9           	ret
837   8893
838   8893              ; Pinta indicadores de FILAS. ------------------------------------------------------
839   8893
840   8893 21 10 40     Pinta_FILAS ld hl,$4010
841   8896              ;	ld b,9
842   8896              ;2 push hl
843   8896              ;	push bc
844   8896 06 BF        	ld b,$bf
845   8898 36 80        1 ld (hl),%10000000
846   889A CD 5A 8E     	call NextScan
847   889D 10 F9        	djnz 1B
848   889F              ;	pop bc
849   889F              ;	pop hl
850   889F              ;	inc l
851   889F              ;	djnz 2B
852   889F 06 03        	ld b,3
853   88A1 21 00 47         ld hl,$4700
854   88A4 CD AA 88     3 call Bucle_1
855   88A7 10 FB            djnz 3B
856   88A9 C9               ret
857   88AA
858   88AA C5           Bucle_1 push bc
859   88AB E5                   push hl
860   88AC D1                   pop de
861   88AD 13                   inc de
862   88AE 01 FF 00             ld bc,255
863   88B1 36 FF                ld (hl),255
864   88B3 ED B0                ldir
865   88B5 23                   inc hl
866   88B6 3E 07                ld a,7
867   88B8 84                   add a,h
868   88B9 67                   ld h,a
869   88BA C1                   pop bc
870   88BB C9                   ret
871   88BC
872   88BC              ; ---------------------------------------------------------------
873   88BC
874   88BC              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88BC              ; ******************************************************************************************************************************************************************************************
  2+  88BC              ;
  3+  88BC              ;   27/03/23
  4+  88BC              ;
  5+  88BC              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88BC              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88BC              ;
  8+  88BC              ;
  9+  88BC              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88BC              ;
 11+  88BC              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88BC              ;               _ hacen las entidades hacia abajo.
 13+  88BC              ;
 14+  88BC              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88BC              ;
 16+  88BC              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88BC              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88BC              ;
 19+  88BC              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88BC              ;           _ la bala.
 21+  88BC              ;
 22+  88BC              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88BC              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88BC              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88BC              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88BC              ;           _ en el momento de generarse la bala)).
 27+  88BC
 28+  88BC              Genera_disparo
 29+  88BC
 30+  88BC              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88BC              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88BC              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88BC              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88BC              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88BC              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88BC              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88BC
 38+  88BC              ; Exclusiones:
 39+  88BC
 40+  88BC 3A CC 85         ld a,(Columnas)
 41+  88BF 47               ld b,a
 42+  88C0 3A 97 85         ld a,(Columns)
 43+  88C3 B8               cp b
 44+  88C4 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88C5
 46+  88C5              ; ----- ----- -----
 47+  88C5
 48+  88C5 3A C3 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
 49+  88C8 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
 50+  88CA 20 06            jr nz,16F
 51+  88CC
 52+  88CC 3A 9D 85         ld a,(Coordenada_y)
 53+  88CF FE 14            cp $14
 54+  88D1 D0               ret nc
 55+  88D2
 56+  88D2              ; ----- ----- -----
 57+  88D2
 58+  88D2              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 59+  88D2
 60+  88D2 21 F2 83     16 ld hl,ON_Disparo_2A
 61+  88D5 CD 9E 87         call Extrae_address
 62+  88D8 24               inc h
 63+  88D9 25               dec h
 64+  88DA 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 65+  88DC
 66+  88DC 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 67+  88DF A7               and a
 68+  88E0 ED 52            sbc hl,de
 69+  88E2 D0               ret nc
 70+  88E3
 71+  88E3              ; ----- ----- -----
 72+  88E3
 73+  88E3 21 00 80     14 ld hl,Indice_disparo
 74+  88E6 3A 9E 85         ld a,(CTRL_DESPLZ)
 75+  88E9 4F               ld c,a
 76+  88EA 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 77+  88EC              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 78+  88EC              ;                                            ""        ""       "f9", B="1"
 79+  88EC              ;                                            ""        ""       "fb", B="2"
 80+  88EC              ;                                            ""        ""       "fb", B="3"
 81+  88EC A7               and a
 82+  88ED 28 10            jr z,1F
 83+  88EF E6 01            and 1
 84+  88F1 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 85+  88F2
 86+  88F2 79               ld a,c
 87+  88F3 16 F9            ld d,$f9
 88+  88F5 23           2 inc hl
 89+  88F6 23               inc hl
 90+  88F7 04               inc b
 91+  88F8 BA               cp d
 92+  88F9 28 04            jr z,1F
 93+  88FB 14               inc d
 94+  88FC 14               inc d
 95+  88FD 18 F6            jr 2B
 96+  88FF
 97+  88FF CD 9E 87     1 call Extrae_address
 98+  8902 E5               push hl
 99+  8903 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
100+  8905 DD 21 ED 90  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
101+  8909
102+  8909              ;	Se cumplen las condiciones necesarias para generar un disparo.
103+  8909              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
104+  8909
105+  8909 3A AA 85     	ld a,(Cuad_objeto)
106+  890C FE 02            cp 2
107+  890E 38 60            jr c,3F
108+  8910 28 5E            jr z,3F
109+  8912
110+  8912              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
111+  8912
112+  8912 E6 01            and 1
113+  8914 28 2D            jr z,4F
114+  8916
115+  8916              ; 	Estamos en el 3er cuadrante de pantalla.
116+  8916              ; 	3er CUAD. ----- ----- ----- ----- -----
117+  8916              ;
118+  8916              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
119+  8916              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
120+  8916              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
121+  8916
122+  8916 2A 98 85     	ld hl,(Posicion_actual)
123+  8919
124+  8919              ;   Amadeus o entidad ???.
125+  8919
126+  8919 3A C3 85         ld a,(Ctrl_0)
127+  891C CB 77            bit 6,a
128+  891E 28 0D            jr z,8F
129+  8920
130+  8920              ; 	Dispara Amadeus.
131+  8920
132+  8920 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
133+  8922 CD 69 8E         call PreviousScan
134+  8925 CD 69 8E         call PreviousScan
135+  8928
136+  8928              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
137+  8928              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
138+  8928              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
139+  8928              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
140+  8928
141+  8928 CD 9A 89         call Ajusta_disparo_parte_izquierda
142+  892B 18 0E            jr 10F
143+  892D
144+  892D              ; 	Dispara Entidad.
145+  892D
146+  892D 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
147+  892F
148+  892F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
149+  892F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
150+  892F
151+  892F C5               push bc
152+  8930 06 10            ld b,16
153+  8932 CD 5A 8E     9 call NextScan
154+  8935 10 FB            djnz 9B
155+  8937 C1               pop bc
156+  8938
157+  8938              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
158+  8938              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
159+  8938              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
160+  8938              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
161+  8938
162+  8938 CD 9A 89         call Ajusta_disparo_parte_izquierda
163+  893B
164+  893B CD 0F 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
165+  893E              ;                                                   ; _al generar el disparo.
166+  893E
167+  893E              ; 	LLegados a este punto tendremos:
168+  893E              ;
169+  893E              ;       Puntero_objeto_disparo en IY.
170+  893E              ;       Rutinas_de_impresion en IX.
171+  893E              ;       Puntero_de_impresion en HL.
172+  893E              ;       Impacto/Dirección en BC.
173+  893E
174+  893E CD A2 89         call Almacena_disparo
175+  8941 18 4F            jr 6F                                           ; RET.
176+  8943
177+  8943
178+  8943              ; 	Estamos en el 4º cuadrante de pantalla.
179+  8943              ; 	4º CUAD. ----- ----- ----- ----- -----
180+  8943              ;
181+  8943              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
182+  8943              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
183+  8943              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
184+  8943
185+  8943 2A 98 85     4 ld hl,(Posicion_actual)
186+  8946
187+  8946              ;   Amadeus o entidad ???.
188+  8946
189+  8946 3A C3 85         ld a,(Ctrl_0)
190+  8949 CB 77            bit 6,a
191+  894B 28 0D            jr z,11F
192+  894D
193+  894D              ; 	Dispara Amadeus.
194+  894D
195+  894D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
196+  894F CD 69 8E         call PreviousScan
197+  8952 CD 69 8E         call PreviousScan
198+  8955
199+  8955              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
200+  8955              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
201+  8955              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
202+  8955              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
203+  8955
204+  8955 CD 93 89         call Ajusta_disparo_parte_derecha
205+  8958 18 0E            jr 13F
206+  895A
207+  895A              ; 	Dispara Entidad.
208+  895A
209+  895A 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
210+  895C
211+  895C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
212+  895C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
213+  895C
214+  895C C5               push bc
215+  895D
216+  895D 06 10            ld b,16
217+  895F CD 5A 8E     12 call NextScan
218+  8962 10 FB            djnz 12B
219+  8964
220+  8964 C1               pop bc
221+  8965
222+  8965              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
223+  8965              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
224+  8965              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
225+  8965              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
226+  8965
227+  8965 CD 93 89         call Ajusta_disparo_parte_derecha
228+  8968
229+  8968 CD 0F 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
230+  896B              ;                                                     ; _al generar el disparo.
231+  896B
232+  896B              ; LLegados a este punto tendremos:
233+  896B              ;
234+  896B              ;       Puntero_objeto_disparo en IY.
235+  896B              ;       Rutinas_de_impresion en IX.
236+  896B              ;       Puntero_de_impresion en HL.
237+  896B              ;       Impacto/Dirección en BC.
238+  896B
239+  896B CD A2 89         call Almacena_disparo
240+  896E 18 22            jr 6F                                           ; RET.
241+  8970
242+  8970              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
243+  8970
244+  8970 28 11        3 jr z,5F
245+  8972
246+  8972              ; 	1er CUAD. ----- ----- ----- ----- -----
247+  8972              ;
248+  8972              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
249+  8972              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
250+  8972              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
251+  8972              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
252+  8972
253+  8972              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
254+  8972              ;	   ""        ""       "f9", B="1"
255+  8972              ;	   ""        ""       "fb", B="2"
256+  8972              ; 	   ""        ""       "fb", B="3"
257+  8972
258+  8972 2A 98 85     	ld hl,(Posicion_actual)
259+  8975 CD 5A 8E     	call NextScan
260+  8978
261+  8978              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
262+  8978              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
263+  8978              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
264+  8978              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
265+  8978
266+  8978 CD 9A 89         call Ajusta_disparo_parte_izquierda
267+  897B
268+  897B              ; 	No se produce impacto. B="$80"
269+  897B              ; 	Dirección del proyectil hacia abajo. C="$80"
270+  897B
271+  897B 01 80 80         ld bc,$8080
272+  897E
273+  897E              ; 	LLegados a este punto tendremos:
274+  897E              ;
275+  897E              ;       Puntero_objeto_disparo en IY.
276+  897E              ;       Rutinas_de_impresion en IX.
277+  897E              ;       Puntero_de_impresion en HL.
278+  897E              ;       Impacto/Dirección en BC.
279+  897E
280+  897E CD A2 89         call Almacena_disparo
281+  8981 18 0F            jr 6F                                           ; RET.
282+  8983
283+  8983              ; 	Estamos en el 2º cuadrante de pantalla.
284+  8983              ; 	2º CUAD. ----- ----- ----- ----- -----
285+  8983              ;
286+  8983              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
287+  8983              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
288+  8983              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
289+  8983              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
290+  8983
291+  8983 2A 98 85     5 ld hl,(Posicion_actual)
292+  8986 CD 5A 8E     	call NextScan
293+  8989
294+  8989              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
295+  8989              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
296+  8989              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
297+  8989              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
298+  8989
299+  8989 CD 93 89         call Ajusta_disparo_parte_derecha
300+  898C
301+  898C              ; 	No se produce impacto. B="$80"
302+  898C              ; 	Dirección del proyectil hacia abajo. C="80"
303+  898C
304+  898C 01 80 80     15 ld bc,$8080
305+  898F
306+  898F              ; 	LLegados a este punto tendremos:
307+  898F              ;
308+  898F              ;       Puntero_objeto_disparo en IY.
309+  898F              ;       Rutinas_de_impresion en IX.
310+  898F              ;       Puntero_de_impresion en HL.
311+  898F              ;       Impacto/Dirección en BC.
312+  898F
313+  898F CD A2 89         call Almacena_disparo
314+  8992
315+  8992 C9           6 ret
316+  8993
317+  8993              ; ----------------------------------------------------------------
318+  8993              ;
319+  8993              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
320+  8993              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
321+  8993              ;	_ (lado izq. o derecho), de la entidad que lo genera.
322+  8993
323+  8993 78           Ajusta_disparo_parte_derecha ld a,b
324+  8994 FE 02            cp 2
325+  8996 38 01            jr c,1F
326+  8998 23               inc hl
327+  8999 C9           1 ret
328+  899A
329+  899A 78           Ajusta_disparo_parte_izquierda ld a,b
330+  899B FE 01        	cp 1
331+  899D 20 01        	jr nz,1F
332+  899F 2B           	dec hl
333+  89A0 2B           1 dec hl
334+  89A1 C9               ret
335+  89A2
336+  89A2              ; ----------------------------------------------------------------
337+  89A2              ;
338+  89A2              ;   25/02/23
339+  89A2              ;
340+  89A2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
341+  89A2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
342+  89A2
343+  89A2              Almacena_disparo
344+  89A2
345+  89A2 E5               push hl  										; HL contiene el puntero de impresión.
346+  89A3 F1               pop af
347+  89A4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
348+  89A5
349+  89A5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
350+  89A6 E6 01            and 1
351+  89A8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
352+  89AA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
353+  89AA              ; 	Dispara AMADEUS.
354+  89AA
355+  89AA              ;	Comprobamos que a Amadeus aún le quedan disparos.
356+  89AA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
357+  89AA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
358+  89AA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
359+  89AA
360+  89AA C5               push bc
361+  89AB 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
362+  89AE 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
363+  89B1 A7               and a
364+  89B2 ED 42            sbc hl,bc
365+  89B4 CC 67 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
366+  89B7 C1               pop bc
367+  89B8 28 54            jr z,4F
368+  89BA
369+  89BA 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
370+  89BD 23               inc hl
371+  89BE 23               inc hl
372+  89BF 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
373+  89C2              ;                                                   ; _ Disparo_(+1).
374+  89C2 18 18            jr 2F
375+  89C4
376+  89C4              ; Dispara una entidad.
377+  89C4
378+  89C4 C5           1 push bc
379+  89C5 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
380+  89C8 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
381+  89CB A7               and a
382+  89CC ED 42            sbc hl,bc
383+  89CE CC 60 87         call z,Inicia_Puntero_Disparo_Entidades
384+  89D1 C1               pop bc
385+  89D2 28 3A            jr z,4F
386+  89D4
387+  89D4 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
388+  89D7 23               inc hl
389+  89D8 23               inc hl
390+  89D9 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
391+  89DC              ;                                                   ; _ Disparo_(+1).
392+  89DC CD 9E 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
393+  89DF              ;                                                   ; _ los 8 bytes que definen el disparo:
394+  89DF              ;
395+  89DF              ;                                                     Puntero_objeto_disparo en IY.
396+  89DF              ;                                                     Rutinas_de_impresion en IX.
397+  89DF              ;                                                     Puntero_de_impresion en HL.
398+  89DF              ;                                                     Impacto/Dirección en BC.
399+  89DF
400+  89DF 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
401+  89E0 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
402+  89E1 23               inc hl                                          ; _ al siguiente.
403+  89E2 A7               and a
404+  89E3 20 C0            jr nz,3B
405+  89E5
406+  89E5 08               ex af,af
407+  89E6 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
408+  89EA F9               ld sp,hl
409+  89EB
410+  89EB DD E5            push ix                                         ; Rutina de impresión.
411+  89ED F5               push af                                         ; Puntero de impresión.
412+  89EE FD E5            push iy                                         ; Puntero objeto.
413+  89F0 C5               push bc                                         ; Control.
414+  89F1
415+  89F1 ED 7B D9 85      ld sp,(Stack)
416+  89F5
417+  89F5              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
418+  89F5
419+  89F5 21 D0 85     	ld hl,Ctrl_1
420+  89F8 CB C6        	set 0,(hl)
421+  89FA
422+  89FA DD E5        	push ix
423+  89FC E1               pop hl
424+  89FD F5               push af
425+  89FE DD E1            pop ix
426+  8A00
427+  8A00 CD A0 7F     	call Guarda_foto_registros
428+  8A03
429+  8A03 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
430+  8A06 CB 86        	res 0,(hl)
431+  8A08
432+  8A08              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
433+  8A08              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
434+  8A08
435+  8A08 CD 67 87         call Inicia_Puntero_Disparo_Amadeus
436+  8A0B CD 60 87         call Inicia_Puntero_Disparo_Entidades
437+  8A0E
438+  8A0E C9           4 ret
439+  8A0F
440+  8A0F              ; ----------------------------------------------------------------
441+  8A0F              ;
442+  8A0F              ;   4/3/23
443+  8A0F              ;
444+  8A0F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
445+  8A0F              ;   _ al generarse el disparo.
446+  8A0F              ;
447+  8A0F              ;       "$80" ..... No se produce colisión.
448+  8A0F              ;       "$81" ..... Se produce colisión.
449+  8A0F
450+  8A0F              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
451+  8A0F              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
452+  8A0F
453+  8A0F
454+  8A0F FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
455+  8A11 E5               push hl                                        ; Puntero de impresión.
456+  8A12 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
457+  8A14 CD 2B 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
458+  8A17 E1               pop hl
459+  8A18 E5               push hl
460+  8A19 CD 5A 8E         call NextScan
461+  8A1C
462+  8A1C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
463+  8A1D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
464+  8A1F 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
465+  8A21              ;                                                  ; _ 2º scanline si esto es así.
466+  8A21 1E 80            ld e,$80                                       ; ----- ( ) -----
467+  8A23 CD 2B 8A         call Bucle_2
468+  8A26
469+  8A26 43           2 ld b,e
470+  8A27 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
471+  8A28 FD E1            pop iy
472+  8A2A C9               ret
473+  8A2B
474+  8A2B               ; ---------- ----------
475+  8A2B
476+  8A2B 06 02        Bucle_2 ld b,2
477+  8A2D FD 7E 00     2 ld a,(iy)
478+  8A30 A6               and (hl)
479+  8A31 28 02            jr z,1F
480+  8A33 1E 81            ld e,$81
481+  8A35 23           1 inc hl
482+  8A36 FD 23            inc iy
483+  8A38 10 F3            djnz 2B
484+  8A3A C9               ret
485+  8A3B
486+  8A3B              ; -------------------------------------------------------------------------------------------------------------
487+  8A3B              ;
488+  8A3B              ;   13/03/23
489+  8A3B              ;
490+  8A3B              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
491+  8A3B              ;
492+  8A3B              ;   DESTRUYE: HL,BC,DE y A.
493+  8A3B
494+  8A3B 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
495+  8A3E 7E               ld a,(hl)
496+  8A3F A7               and a
497+  8A40 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
498+  8A41
499+  8A41 44               ld b,h
500+  8A42 4D               ld c,l
501+  8A43 2A DF 85         ld hl,(Stack_snapshot_disparos)
502+  8A46 E5               push hl
503+  8A47 A7               and a
504+  8A48 ED 42            sbc hl,bc
505+  8A4A E5               push hl
506+  8A4B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
507+  8A4C
508+  8A4C E1               pop hl
509+  8A4D 54               ld d,h
510+  8A4E 5D               ld e,l
511+  8A4F 1B               dec de
512+  8A50 ED B8            lddr                                                ; Limpiamos.
513+  8A52
514+  8A52 21 60 70         ld hl,Album_de_fotos_disparos
515+  8A55 22 DF 85         ld (Stack_snapshot_disparos),hl
516+  8A58
517+  8A58 C9               ret
518+  8A59
519+  8A59              ; -------------------------------------------------------------------------------------------------------------
520+  8A59              ;
521+  8A59              ;   28/03/23
522+  8A59              ;
523+  8A59
524+  8A59 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
525+  8A5C 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
526+  8A5F
527+  8A5F CD 9E 87     2 call Extrae_address
528+  8A62 7E               ld a,(hl)
529+  8A63 A7               and a
530+  8A64 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
531+  8A66
532+  8A66              ; ----- ----- ----- ----- ----- -----
533+  8A66
534+  8A66 C5               push bc
535+  8A67 CD EF 8A         call foto_disparo_a_borrar
536+  8A6A
537+  8A6A              ; Existe colisión con este disparo???
538+  8A6A
539+  8A6A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
540+  8A6B 7E               ld a,(hl)
541+  8A6C 2B               dec hl
542+  8A6D E6 01            and 1
543+  8A6F 28 0C            jr z,9F
544+  8A71
545+  8A71              ; Elimino el disparo de la base de datos.
546+  8A71
547+  8A71 E5               push hl
548+  8A72 CD 69 8B         call Elimina_disparo_de_base_de_datos
549+  8A75 E1               pop hl
550+  8A76 3E 01            ld a,1
551+  8A78 32 E6 85         ld (Impacto),a                                       ; Indicamos que se ha producido Impacto en una entidad.
552+  8A7B 18 06            jr 11F
553+  8A7D
554+  8A7D CD 18 8B     9 call Mueve_disparo
555+  8A80 CD EF 8A         call foto_disparo_a_borrar
556+  8A83
557+  8A83 C1           11 pop bc
558+  8A84
559+  8A84 18 04            jr 7F
560+  8A86
561+  8A86              ; ----- ----- ----- ----- ----- -----
562+  8A86
563+  8A86 ED 42        1 sbc hl,bc
564+  8A88 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
565+  8A8A
566+  8A8A 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
567+  8A8D 23               inc hl
568+  8A8E 23               inc hl
569+  8A8F 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
570+  8A92 18 CB            jr 2B
571+  8A94
572+  8A94 CD 67 87     3 call Inicia_Puntero_Disparo_Amadeus
573+  8A97
574+  8A97 01 66 84         ld bc,Disparo_11
575+  8A9A 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
576+  8A9D
577+  8A9D CD 9E 87     5 call Extrae_address
578+  8AA0 7E               ld a,(hl)
579+  8AA1 A7               and a
580+  8AA2 28 39            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
581+  8AA4
582+  8AA4              ; ----- ----- ----- ----- ----- -----
583+  8AA4
584+  8AA4 C5               push bc
585+  8AA5 CD EF 8A         call foto_disparo_a_borrar
586+  8AA8
587+  8AA8              ; Existe colisión con este disparo???
588+  8AA8
589+  8AA8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
590+  8AA9 7E               ld a,(hl)
591+  8AAA 2B               dec hl
592+  8AAB E6 01            and 1
593+  8AAD 28 25            jr z,10F
594+  8AAF
595+  8AAF              ; La colisión se produce con Amadeus???
596+  8AAF              ; Amadeus siempre tiene (Coordenada_y)="$16".
597+  8AAF
598+  8AAF E5               push hl
599+  8AB0
600+  8AB0 06 04            ld b,4
601+  8AB2 23           16 inc hl
602+  8AB3 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
603+  8AB5
604+  8AB5 CD 9E 87         call Extrae_address
605+  8AB8 CD 69 94         call Genera_coordenadas_disparo
606+  8ABB 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
607+  8ABC FE 16            cp $16
608+  8ABE 38 02            jr c,15F
609+  8AC0
610+  8AC0              ; ----------- debug (Colisiones en filas 16 y 17).
611+  8AC0 18 FE            jr $
612+  8AC2
613+  8AC2              ; No hay colisión. Amadeus se encuentra en una línea inferior.
614+  8AC2              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
615+  8AC2
616+  8AC2 E1           15  pop hl
617+  8AC3 23               inc hl
618+  8AC4 35               dec (hl)
619+  8AC5 2B               dec hl
620+  8AC6 18 0C            jr 10F
621+  8AC8
622+  8AC8              ; -----------------------debug
623+  8AC8
624+  8AC8              ; Elimino el disparo de la base de datos.
625+  8AC8
626+  8AC8 E5           14 push hl
627+  8AC9 CD 69 8B         call Elimina_disparo_de_base_de_datos
628+  8ACC E1               pop hl
629+  8ACD
630+  8ACD 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
631+  8ACF 32 E6 85         ld (Impacto),a
632+  8AD2 18 06            jr 12F
633+  8AD4
634+  8AD4 CD 18 8B     10 call Mueve_disparo
635+  8AD7 CD EF 8A         call foto_disparo_a_borrar
636+  8ADA C1           12 pop bc
637+  8ADB
638+  8ADB 18 04            jr 8F
639+  8ADD
640+  8ADD              ; ----- ----- ----- ----- ----- -----
641+  8ADD
642+  8ADD ED 42        4 sbc hl,bc
643+  8ADF 28 0A            jr z,6F
644+  8AE1
645+  8AE1 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
646+  8AE4 23               inc hl
647+  8AE5 23               inc hl
648+  8AE6 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
649+  8AE9 18 B2            jr 5B
650+  8AEB
651+  8AEB CD 60 87     6 call Inicia_Puntero_Disparo_Entidades
652+  8AEE C9               ret
653+  8AEF
654+  8AEF              ; ------------------------------------------------------------------
655+  8AEF
656+  8AEF              foto_disparo_a_borrar
657+  8AEF
658+  8AEF 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
659+  8AF0 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
660+  8AF1 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
661+  8AF2
662+  8AF2 E5               push hl
663+  8AF3 23               inc hl
664+  8AF4 23               inc hl
665+  8AF5 ED 73 D9 85      ld (Stack),sp
666+  8AF9 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
667+  8AFA FD E1            pop iy
668+  8AFC DD E1            pop ix
669+  8AFE E1               pop hl
670+  8AFF ED 7B D9 85      ld sp,(Stack)
671+  8B03 3A D0 85         ld a,(Ctrl_1)
672+  8B06 CB C7            set 0,a
673+  8B08 32 D0 85         ld (Ctrl_1),a
674+  8B0B CD A0 7F         call Guarda_foto_registros
675+  8B0E 3A D0 85         ld a,(Ctrl_1)
676+  8B11 CB 87            res 0,a
677+  8B13 32 D0 85         ld (Ctrl_1),a
678+  8B16 E1               pop hl
679+  8B17 C9               ret
680+  8B18
681+  8B18 E5           Mueve_disparo push hl
682+  8B19 7E               ld a,(hl)
683+  8B1A 06 04            ld b,4
684+  8B1C 23           1 inc hl
685+  8B1D 10 FD            djnz 1B
686+  8B1F
687+  8B1F              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
688+  8B1F
689+  8B1F CD 9E 87         call Extrae_address
690+  8B22
691+  8B22 E6 01            and 1
692+  8B24 28 2A            jr z,2F
693+  8B26
694+  8B26              ; Disparo hacia arriba, (Amadeus).
695+  8B26
696+  8B26              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
697+  8B26              ; _ de la dificultad.
698+  8B26
699+  8B26 CD 69 8E         call PreviousScan
700+  8B29 CD 69 8E         call PreviousScan
701+  8B2C CD 69 8E         call PreviousScan
702+  8B2F
703+  8B2F              ; Detecta si el disparo de Amadeus sale de pantalla:
704+  8B2F
705+  8B2F 7C               ld a,h
706+  8B30 FE 40            cp $40
707+  8B32 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
708+  8B34
709+  8B34              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
710+  8B34
711+  8B34 EB               ex de,hl
712+  8B35 06 04            ld b,4
713+  8B37 2B           6 dec hl
714+  8B38 10 FD            djnz 6B
715+  8B3A
716+  8B3A CD 69 8B         call Elimina_disparo_de_base_de_datos
717+  8B3D
718+  8B3D 18 0C            jr 4F
719+  8B3F
720+  8B3F              ; Se ha desplazado la bala, compruebo colisión.
721+  8B3F
722+  8B3F D5           3 push de
723+  8B40 C5               push bc
724+  8B41 CD 0F 8A         call Comprueba_Colision
725+  8B44 78               ld a,b
726+  8B45 C1               pop bc
727+  8B46 D1               pop de
728+  8B47
729+  8B47 EB               ex de,hl
730+  8B48
731+  8B48 73               ld (hl),e
732+  8B49 23               inc hl
733+  8B4A 72               ld (hl),d
734+  8B4B
735+  8B4B E1           4 pop hl
736+  8B4C 23               inc hl
737+  8B4D 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
738+  8B4E 2B               dec hl
739+  8B4F C9               ret
740+  8B50
741+  8B50              ; Disparo hacia abajo, (Entidad).
742+  8B50
743+  8B50              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
744+  8B50              ; _ de la dificultad.
745+  8B50
746+  8B50 CD 5A 8E     2 call NextScan
747+  8B53 CD 5A 8E         call NextScan
748+  8B56 CD 5A 8E         call NextScan
749+  8B59
750+  8B59              ; Detecta si el disparo de la entidad sale de la pantalla.
751+  8B59
752+  8B59 7C               ld a,h
753+  8B5A FE 58            cp $58
754+  8B5C 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
755+  8B5E
756+  8B5E EB               ex de,hl
757+  8B5F 06 04            ld b,4
758+  8B61 2B           5 dec hl
759+  8B62 10 FD            djnz 5B
760+  8B64
761+  8B64 CD 69 8B         call Elimina_disparo_de_base_de_datos
762+  8B67
763+  8B67 18 E2            jr 4B
764+  8B69
765+  8B69              ; HL apunta al primer byte de la base de datos del disparo.
766+  8B69 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
767+  8B6C AF               xor a
768+  8B6D 77               ld (hl),a
769+  8B6E 54               ld d,h
770+  8B6F 5D               ld e,l
771+  8B70 13               inc de
772+  8B71 ED B0            ldir
773+  8B73 C9               ret
# file closed: Disparo.asm
875   8B74              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8B74              ; ******************************************************************************************************************************************************************************************
  2+  8B74              ;
  3+  8B74              ; 01/23
  4+  8B74              ;
  5+  8B74              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8B74
  7+  8B74 CD 4E 8E     Draw call Prepara_draw
  8+  8B77 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8B78 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8B79 28 05        	jr z,2F
 11+  8B7B
 12+  8B7B 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8B7E 18 0C        	jr 1F
 14+  8B80 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8B83 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8B86 CD 15 8D     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8B89              ;													; _la esquina superior izquierda de la pantalla.
 18+  8B89 CD 8A 95     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8B8C 3A C3 85     1 ld a,(Ctrl_0)
 20+  8B8F CB 6F        	bit 5,a
 21+  8B91 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8B93
 23+  8B93 CD AB 8B     	call Comprueba_limite_horizontal
 24+  8B96 CD 3B 8C     	call Comprueba_limite_vertical
 25+  8B99
 26+  8B99              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8B99
 28+  8B99 CD 88 8D     3 call calcula_CColumnass
 29+  8B9C CD BF 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8B9F CD 14 8E     	call Define_rutina_de_impresion
 31+  8BA2
 32+  8BA2 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8BA5 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8BA7 32 C3 85     	ld (Ctrl_0),a
 35+  8BAA
 36+  8BAA C9           	ret
 37+  8BAB
 38+  8BAB              ; *******************************************************************************************************************************************************************************************
 39+  8BAB              ;	21/01/23
 40+  8BAB              ;
 41+  8BAB              ; 	Comprueba_limite_horizontal.
 42+  8BAB              ;
 43+  8BAB              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8BAB              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8BAB              ;
 46+  8BAB              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8BAB              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8BAB              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8BAB              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8BAB
 51+  8BAB
 52+  8BAB
 53+  8BAB 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8BAE CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8BB0 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8BB2 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8BB4 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8BB7 18 09            jr 6F
 59+  8BB9 CB 5F        1 bit 3,a
 60+  8BBB 28 0A            jr z,2F
 61+  8BBD E6 F7            and $f7
 62+  8BBF 32 C3 85         ld (Ctrl_0),a
 63+  8BC2 CD 15 8D     6 call Inicializacion
 64+  8BC5 18 5B            jr 5F
 65+  8BC7 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8BC8
 67+  8BC8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8BC8              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8BC8
 70+  8BC8 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8BC9 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8BCC CD 1A 91     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8BCF 67           	ld h,a
 74+  8BD0 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8BD1 CD 1A 91     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8BD4 67           	ld h,a
 77+  8BD5 A7           	and a
 78+  8BD6 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8BD8 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8BD9 3A AA 85     	ld a,(Cuad_objeto)
 81+  8BDC FE 02        	cp 2
 82+  8BDE 38 1E        	jr c,3F
 83+  8BE0 28 1C        	jr z,3F
 84+  8BE2 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8BE3 28 23            jr z,7F
 86+  8BE5 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8BE7 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8BE9 E1           	pop hl
 89+  8BEA
 90+  8BEA              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8BEA              ; _para indicar con E="2" en caso necesario.
 92+  8BEA
 93+  8BEA E5               push hl
 94+  8BEB C5               push bc
 95+  8BEC CD 1A 91     	call calcula_tercio
 96+  8BEF FE 01        	cp 1
 97+  8BF1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8BF3 CD 23 8C         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8BF6 28 26            jr z,9F
100+  8BF8 38 24            jr c,9F
101+  8BFA 1E 00        11 ld e,0
102+  8BFC 18 22            jr 8F
103+  8BFE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8BFF 28 07        	jr z, 7F
105+  8C01 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8C03 1E 00         	ld e,0
107+  8C05 E1           	pop hl
108+  8C06 18 04        	jr 4F
109+  8C08 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8C0A 18 15            jr 10F
111+  8C0C
112+  8C0C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8C0C              ; _para indicar con E="2" en caso necesario.
114+  8C0C
115+  8C0C E5           4 push hl
116+  8C0D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8C0E CD 1A 91     	call calcula_tercio
118+  8C11 FE 01        	cp 1
119+  8C13 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8C15 CD 23 8C         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8C18 28 04            jr z,9F
122+  8C1A 30 02            jr nc,9F
123+  8C1C 18 02        	jr 8F
124+  8C1E 1E 02        9 ld e,2
125+  8C20 C1           8 pop bc
126+  8C21 E1           10 pop hl
127+  8C22 C9           5 ret
128+  8C23
129+  8C23              ; --------------------
130+  8C23              ;
131+  8C23              ; 25/08/22
132+  8C23
133+  8C23 CD 1A 91     Comprueba_centro call calcula_tercio
134+  8C26 67               ld h,a
135+  8C27 08           	ex af,af
136+  8C28 FE 02        	cp 2
137+  8C2A 38 07        	jr c,1F
138+  8C2C 28 05        	jr z,1F
139+  8C2E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8C31 18 03        	jr 2F
141+  8C33 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8C36 08           2 ex af,af
143+  8C37 A7               and a
144+  8C38 ED 42            sbc hl,bc
145+  8C3A C9               ret
146+  8C3B
147+  8C3B              ; *********************************************************************************************************************************************************************************************
148+  8C3B              ;
149+  8C3B              ;   16/8/22
150+  8C3B              ;
151+  8C3B              ;	Comprueba_limite_vertical
152+  8C3B              ;
153+  8C3B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8C3B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8C3B              ;
156+  8C3B
157+  8C3B 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8C3E 7D           	ld a,l
159+  8C3F E6 1F        	and $1F
160+  8C41 57           	ld d,a
161+  8C42 3A CF 85     	ld a,(Limite_vertical)
162+  8C45 BA           	cp d 											; Límite - Posición.
163+  8C46 08           	ex af,af 										; Resultado de CP d en F'.
164+  8C47 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8C4A CB 47        	bit 0,a
166+  8C4C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8C4E
168+  8C4E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8C4E
170+  8C4E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8C4F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8C51
173+  8C51              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8C51              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8C51
176+  8C51 3A 9C 85         ld a,(Coordenada_X)
177+  8C54 16 0F            ld d,Centro_izquierda
178+  8C56 A7               and a
179+  8C57 92               sub d 											 ; Posición - Centro_izquierda.
180+  8C58 28 1E            jr z,3F
181+  8C5A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8C5C              ;                                                    ; _salimos sin modificar nada.
183+  8C5C 18 0E            jr 2F
184+  8C5E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8C5F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8C61
187+  8C61              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8C61              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8C61
190+  8C61 3A 9C 85         ld a,(Coordenada_X)
191+  8C64 16 10            ld d,Centro_derecha
192+  8C66 A7               and a
193+  8C67 92               sub d
194+  8C68 28 0E            jr z,3F
195+  8C6A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8C6C              ;                                                    ; _salimos sin modificar nada.
197+  8C6C CB 43        2 bit 0,e
198+  8C6E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8C70 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8C71 CD 05 8D         call Modificaccionne
201+  8C74 C1           	pop bc
202+  8C75 CD 15 8D         call Inicializacion
203+  8C78 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8C79
205+  8C79              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8C79
207+  8C79 C5           4 push bc
208+  8C7A 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8C7D 0A           	ld a,(bc)
210+  8C7E 3D           	dec a
211+  8C7F 47           	ld b,a 											 ; Columnas-1 en B.
212+  8C80 7D           	ld a,l
213+  8C81 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8C82 CB 47        	bit 0,a
215+  8C84 28 03        	jr z,5F
216+  8C86 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8C87 18 2E        	jr 7F
218+  8C89
219+  8C89              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8C89
221+  8C89 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8C8A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8C8B 3A C3 85     	ld a,(Ctrl_0)
224+  8C8E CB 4F        	bit 1,a
225+  8C90 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8C92 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8C93
228+  8C93              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8C93
230+  8C93 1C               inc e
231+  8C94 1D               dec e
232+  8C95 20 07            jr nz,12F
233+  8C97 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8C98 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8C99 22 98 85     	ld (Posicion_actual),hl
236+  8C9C 18 44        13 jr 9F
237+  8C9E CB 43        12 bit 0,e
238+  8CA0 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8CA2              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8CA2 C1           	pop bc
241+  8CA3 18 D3        	jr 3B
242+  8CA5 80           14 add b
243+  8CA6 6F               ld l,a
244+  8CA7 22 98 85     	ld (Posicion_actual),hl
245+  8CAA CD 05 8D         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8CAD 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8CAF E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8CB1 32 C3 85         ld (Ctrl_0),a
249+  8CB4 F1           	pop af
250+  8CB5 18 2B        	jr 9F
251+  8CB7
252+  8CB7              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8CB7
254+  8CB7 F5           7 push af
255+  8CB8 3A C3 85     	ld a,(Ctrl_0)
256+  8CBB CB 47        	bit 0,a
257+  8CBD 20 1D        	jr nz,8F
258+  8CBF F1           	pop af
259+  8CC0
260+  8CC0              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8CC0
262+  8CC0 1C           	inc e
263+  8CC1 1D               dec e
264+  8CC2 20 07            jr nz,10F
265+  8CC4 90           	sub b
266+  8CC5 6F               ld l,a
267+  8CC6 22 98 85     	ld (Posicion_actual),hl
268+  8CC9 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8CCB              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8CCB CB 43        10 bit 0,e
271+  8CCD 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8CCF              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8CCF C1           	pop bc
274+  8CD0 18 A6        	jr 3B
275+  8CD2 90           16 sub b
276+  8CD3 6F               ld l,a
277+  8CD4 22 98 85     	ld (Posicion_actual),hl
278+  8CD7 CD 05 8D         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8CDA 18 06            jr 9F
280+  8CDC E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8CDE 32 C3 85         ld (Ctrl_0),a
282+  8CE1 F1           	pop af
283+  8CE2 C1           9 pop bc
284+  8CE3 1E 00        	ld e,0
285+  8CE5 CD 15 8D         call Inicializacion
286+  8CE8 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8CE9 08           	ex af,af
288+  8CEA F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8CEB 18 8B            jr 3B
290+  8CED
291+  8CED              ; --------------------
292+  8CED
293+  8CED 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8CEF CD 69 8E     1 call PreviousScan
295+  8CF2 10 FB            djnz 1B
296+  8CF4 22 98 85     	ld (Posicion_actual),hl
297+  8CF7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8CF8 C9           	ret
299+  8CF9
300+  8CF9              ; --------------------
301+  8CF9
302+  8CF9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8CFB CD 5A 8E     1 call NextScan
304+  8CFE 10 FB            djnz 1B
305+  8D00 22 98 85     	ld (Posicion_actual),hl
306+  8D03 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8D04 C9           	ret
308+  8D05
309+  8D05              ; --------------------
310+  8D05              ;
311+  8D05              ;	22/01/23
312+  8D05              ;
313+  8D05              ;	E="1". Hemos cambiado de cuadrante.
314+  8D05              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8D05              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8D05
317+  8D05
318+  8D05              Modificaccionne
319+  8D05
320+  8D05 3A AA 85     	ld a,(Cuad_objeto)
321+  8D08 FE 02        	cp 2
322+  8D0A CC ED 8C         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8D0D DC ED 8C         call c,Modifica_Pos_actual
324+  8D10 C8           	ret z
325+  8D11 CD F9 8C         call Modifica_Pos_actual2
326+  8D14 C9               ret
327+  8D15
328+  8D15              ; *************************************************************************************************************************************************************************************************
329+  8D15              ;
330+  8D15              ;	13/8/22
331+  8D15              ;
332+  8D15              ;	Inicializacion
333+  8D15              ;
334+  8D15              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8D15              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8D15              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8D15              ;
338+  8D15              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8D15              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8D15              ;	_ desaparece/aparece.
341+  8D15
342+  8D15              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8D15              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8D15              ;
345+  8D15              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8D15              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8D15              ; 		   [E] ="0"
348+  8D15
349+  8D15              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8D15
351+  8D15 CD 1A 91     Inicializacion call calcula_tercio
352+  8D18 28 36        	jr z,primit
353+  8D1A E6 02        	and 2
354+  8D1C 20 07        	jr nz,segmit
355+  8D1E 7D           	ld a,l
356+  8D1F FE 7F        	cp $7f
357+  8D21 38 2D        	jr c,primit
358+  8D23 28 2B        	jr z,primit
359+  8D25 CD 82 8D     segmit call column
360+  8D28 38 13        	jr c,tercuad
361+  8D2A 3E 04        cuarcuad ld a,4
362+  8D2C 32 AA 85     	ld (Cuad_objeto),a
363+  8D2F 21 20 48     	ld hl,$4820
364+  8D32 22 CD 85     	ld (Limite_horizontal),hl
365+  8D35 21 CF 85     	ld hl,Limite_vertical
366+  8D38 36 0D        	ld (hl),$0d
367+  8D3A 08           	ex af,af
368+  8D3B 18 3C        	jr 1F
369+  8D3D              tercuad
370+  8D3D 3E 03        	ld a,3
371+  8D3F 32 AA 85     	ld (Cuad_objeto),a
372+  8D42 21 20 48     	ld hl,$4820
373+  8D45 22 CD 85     	ld (Limite_horizontal),hl
374+  8D48 21 CF 85     	ld hl,Limite_vertical
375+  8D4B 36 12        	ld (hl),$12
376+  8D4D 08           	ex af,af
377+  8D4E 18 29        	jr 1F
378+  8D50 CD 82 8D     primit call column
379+  8D53 38 13        	jr c, primcuad
380+  8D55              segcuad
381+  8D55 3E 02        	ld a,2
382+  8D57 32 AA 85     	ld (Cuad_objeto),a
383+  8D5A 21 C0 4F     	ld hl,$4fc0
384+  8D5D 22 CD 85     	ld (Limite_horizontal),hl
385+  8D60 21 CF 85     	ld hl,Limite_vertical
386+  8D63 36 0D        	ld (hl),$0d
387+  8D65 08           	ex af,af
388+  8D66 18 11        	jr 1F
389+  8D68              primcuad
390+  8D68 3E 01        	ld a,1
391+  8D6A 32 AA 85     	ld (Cuad_objeto),a
392+  8D6D 21 C0 4F     	ld hl,$4fc0
393+  8D70 22 CD 85     	ld (Limite_horizontal),hl
394+  8D73 21 CF 85     	ld hl,Limite_vertical
395+  8D76 36 12        	ld (hl),$12
396+  8D78 08           	ex af,af
397+  8D79 CD 46 94     1 call Genera_coordenadas
398+  8D7C 21 C3 85     	ld hl,Ctrl_0
399+  8D7F CB EE        	set 5,(hl)
400+  8D81 C9           	ret
401+  8D82
402+  8D82              ; ------------------------------------------------------------------------------------------------------------------
403+  8D82
404+  8D82              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8D82              ;
406+  8D82              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8D82
408+  8D82 7D           column ld a,l
409+  8D83 E6 1F        	and $1f
410+  8D85 FE 10         	cp $10
411+  8D87 C9            	ret
412+  8D88
413+  8D88              ; --------------------------------------------------------------------------------------------------------------------
414+  8D88              ;
415+  8D88              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8D88              ;
417+  8D88              ; 14/12/22
418+  8D88              ;
419+  8D88              ;	Modifica: A y BC.
420+  8D88
421+  8D88 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8D8B E6 01        	and 1
423+  8D8D 28 17        	jr z,1F
424+  8D8F
425+  8D8F              ; Nos encontramos en la parte izquierda de la pantalla
426+  8D8F
427+  8D8F 3A 9C 85     	ld a,(Coordenada_X)
428+  8D92 47           	ld b,a
429+  8D93 04           	inc b											; (Coordenada_X)+1 en B.
430+  8D94 79           	ld a,c
431+  8D95 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8D96 38 08        	jr c,2F
433+  8D98 47           	ld b,a
434+  8D99 79           	ld a,c
435+  8D9A 90           	sub b
436+  8D9B 32 CC 85     	ld (Columnas),a
437+  8D9E 18 1B        	jr 4F
438+  8DA0 79           2 ld a,c
439+  8DA1 32 CC 85     	ld (Columnas),a
440+  8DA4 18 15        	jr 4F
441+  8DA6
442+  8DA6              ; Nos encontramos en la parte derecha de la pantalla.
443+  8DA6
444+  8DA6 3A 9C 85     1 ld a,(Coordenada_X)
445+  8DA9 81           	add c
446+  8DAA 3D           	dec a
447+  8DAB D6 1F        	sub $1f
448+  8DAD 38 08        	jr c,3F
449+  8DAF 47           	ld b,a
450+  8DB0 79           	ld a,c
451+  8DB1 90           	sub b
452+  8DB2 32 CC 85     	ld (Columnas),a
453+  8DB5 18 04        	jr 4F
454+  8DB7 79           3 ld a,c
455+  8DB8 32 CC 85     	ld (Columnas),a
456+  8DBB D9           4 exx
457+  8DBC 4F           	ld c,a
458+  8DBD D9           	exx
459+  8DBE C9            ret
460+  8DBF
461+  8DBF              ; --------------------------------------------------------------------------------------------------------------------
462+  8DBF              ;
463+  8DBF              ; 7/1/23
464+  8DBF              ;
465+  8DBF              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8DBF              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8DBF              ;
468+  8DBF              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8DBF              ;	DESTRUYE: HL,B Y A.
470+  8DBF
471+  8DBF 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8DC2 FE 02        	cp 2
473+  8DC4 38 18        	jr c,1F
474+  8DC6 28 16        	jr z,1F
475+  8DC8 E6 01        	and 1
476+  8DCA 28 0D        	jr z,3F
477+  8DCC
478+  8DCC              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8DCC
480+  8DCC CD 08 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8DCF
482+  8DCF 7D           9 ld a,l
483+  8DD0 E6 1F        	and $1f
484+  8DD2 28 2A        	jr z,7F
485+  8DD4 2B           	dec hl
486+  8DD5 10 F8        	djnz 9B
487+  8DD7 18 25        	jr 7F
488+  8DD9
489+  8DD9              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8DD9
491+  8DD9 2A 98 85     3 ld hl,(Posicion_actual)
492+  8DDC 18 20        	jr 7F
493+  8DDE
494+  8DDE 28 14        1 jr z,2F
495+  8DE0
496+  8DE0              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8DE0
498+  8DE0 CD 08 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8DE3 7D           4 ld a,l
500+  8DE4 E6 1F        	and $1f
501+  8DE6 28 03        	jr z,6F
502+  8DE8 2B           	dec hl
503+  8DE9 10 F8        	djnz 4B
504+  8DEB 06 0F        6 ld b,15
505+  8DED CD 69 8E     5 call PreviousScan
506+  8DF0 10 FB        	djnz 5B
507+  8DF2 18 0A        	jr 7F
508+  8DF4
509+  8DF4              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8DF4
511+  8DF4 CD 08 8E     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8DF7 06 0F        	ld b,15
513+  8DF9 CD 69 8E     8 call PreviousScan
514+  8DFC 10 FB        	djnz 8B
515+  8DFE
516+  8DFE E5           7 push hl
517+  8DFF DD E1        	pop ix
518+  8E01
519+  8E01 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8E04 E5           	push hl
521+  8E05 FD E1        	pop iy
522+  8E07
523+  8E07 C9           	ret
524+  8E08
525+  8E08              ; --------------------------------------------------------------------------------------------------------------------
526+  8E08              ;
527+  8E08              ;	2/1/23
528+  8E08              ;
529+  8E08              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8E08              ;
531+  8E08              ;	Tras esta rutina tenemos:
532+  8E08              ;
533+  8E08              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8E08              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8E08              ;
536+  8E08              ;	DESTRUYE!!!!! HL,B y A.
537+  8E08
538+  8E08 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8E0B 3A CC 85     	ld a,(Columnas)
540+  8E0E 3D           	dec a
541+  8E0F 20 01        	jr nz,1F
542+  8E11 3C           	inc a
543+  8E12 47           1 ld b,a
544+  8E13 C9           	ret
545+  8E14
546+  8E14              ; --------------------------------------------------------------------------------------------------------------------
547+  8E14              ;
548+  8E14              ;	3/1/23
549+  8E14              ;
550+  8E14              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8E14              ;
552+  8E14              ;	Destruye: A,B,HL y DE.
553+  8E14
554+  8E14              Define_rutina_de_impresion
555+  8E14
556+  8E14 3A 97 85     	ld a,(Columns)
557+  8E17 47           	ld b,a
558+  8E18 3A CC 85     	ld a,(Columnas)
559+  8E1B B8           	cp b
560+  8E1C 20 0D        	jr nz,2f
561+  8E1E
562+  8E1E              ;	La entidad se imprime entera.
563+  8E1E
564+  8E1E 21 EA 8E     	ld hl, Indice_entidades_completas
565+  8E21 E6 01        	and 1
566+  8E23 28 02        	jr z,1F
567+  8E25
568+  8E25 23           	inc hl
569+  8E26 23           	inc hl
570+  8E27
571+  8E27 CD 9E 87     1 call Extrae_address
572+  8E2A C9           	ret		;	ret
573+  8E2B
574+  8E2B              ;	La entidad no se imprime entera en pantalla.
575+  8E2B
576+  8E2B 3A AA 85     2 ld a,(Cuad_objeto)
577+  8E2E E6 01        	and 1
578+  8E30 28 17        	jr z,3F
579+  8E32
580+  8E32              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8E32
582+  8E32 21 EE 8E     	ld hl, Indice_entidades_incompletas_izquierda
583+  8E35 3A 97 85     4 ld a,(Columns)
584+  8E38 E6 01        	and 1
585+  8E3A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8E3C
587+  8E3C 23           	inc hl
588+  8E3D 23           	inc hl
589+  8E3E
590+  8E3E 3A CC 85     	ld a,(Columnas)
591+  8E41 E6 01        	and 1
592+  8E43 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8E45
594+  8E45 23           	inc hl
595+  8E46 23           	inc hl
596+  8E47
597+  8E47 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8E49
599+  8E49 21 F4 8E     3 ld hl, Indice_entidades_incompletas_derecha
600+  8E4C 18 E7        	jr 4B
601+  8E4E
602+  8E4E              ; --------------------------------------------------------------------------------------------------------------------
603+  8E4E              ;
604+  8E4E              ;	Prepara_draw
605+  8E4E              ;
606+  8E4E              ;	Es una rutina de carga.
607+  8E4E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8E4E              ;
609+  8E4E              ;	FUNCIONAMIENTO:
610+  8E4E              ;
611+  8E4E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8E4E              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8E4E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8E4E              ;
615+  8E4E              ;	DESTRUYE:
616+  8E4E              ;
617+  8E4E              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8E4E
619+  8E4E 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8E51 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8E52 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8E53 4E           	ld c,(hl)
623+  8E54 2A 98 85     	ld hl,(Posicion_actual)
624+  8E57 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8E59 C9           	ret
626+  8E5A
627+  8E5A              ;----------------------------------------------------------------------------------------------------------------
628+  8E5A              ;
629+  8E5A              ;	5/08/22
630+  8E5A              ;
631+  8E5A              ;   NextScan.
632+  8E5A              ;
633+  8E5A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8E5A              ;
635+  8E5A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8E5A              ;
637+  8E5A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8E5A              ;
639+  8E5A              ;       DESTRUIDOS: AF y HL !!!
640+  8E5A              ;
641+  8E5A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8E5A              ;
643+  8E5A
644+  8E5A 24           NextScan inc h          ; Incrementamos el scanline.
645+  8E5B 7C               ld a,h
646+  8E5C E6 07            and 7
647+  8E5E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8E5F
649+  8E5F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8E60 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8E62 6F               ld l,a
652+  8E63 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8E64
654+  8E64 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8E65 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8E67 67               ld h,a
657+  8E68 C9               ret
658+  8E69
659+  8E69              ;----------------------------------------------------------------------------------------------------------------
660+  8E69              ;
661+  8E69              ;	5/08/22
662+  8E69              ;
663+  8E69              ;   PreviousScan.
664+  8E69              ;
665+  8E69              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8E69              ;
667+  8E69              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8E69              ;
669+  8E69              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8E69              ;
671+  8E69              ;       DESTRUIDOS: AF y HL !!!
672+  8E69              ;
673+  8E69              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8E69              ;
675+  8E69
676+  8E69 7C           PreviousScan ld a,h
677+  8E6A 25               dec h               ; Dec H.
678+  8E6B E6 07            and 7
679+  8E6D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8E6E
681+  8E6E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8E6F D6 20            sub $20             ; Vamos a comprobarlo...
683+  8E71 6F               ld l,a
684+  8E72 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8E73
686+  8E73 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8E74 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8E76 67               ld h,a
689+  8E77 C9               ret
690+  8E78
691+  8E78              ; -----------------------------------------------------------------------------------
692+  8E78              ;
693+  8E78              ;	28/2/23
694+  8E78              ;
695+  8E78              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8E78              ;	Extrae fotos de Album_de_fotos.
697+  8E78
698+  8E78 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8E7B A7           	and a
700+  8E7C C8           	ret z
701+  8E7D ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8E81 31 00 70     	ld sp,Album_de_fotos
703+  8E84
704+  8E84 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8E86 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8E87 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8E88
708+  8E88 ED 73 DB 85  	ld (Stack_2),sp
709+  8E8C ED 7B D9 85  	ld sp,(Stack)
710+  8E90
711+  8E90              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8E90
713+  8E90 3E CD        	ld a,$cd
714+  8E92 32 9A 8E     	ld (Imprime),a
715+  8E95 EB           	ex de,hl
716+  8E96 22 9B 8E     	ld (Imprime+1),hl
717+  8E99 EB           	ex de,hl
718+  8E9A
719+  8E9A              ; Ejecuta la llamada:	CALL $xx,xx
720+  8E9A
721+  8E9A 00 00 00     Imprime db 0,0,0
722+  8E9D
723+  8E9D 3A D8 85     	ld a,(Numero_de_malotes)
724+  8EA0 3D           	dec a
725+  8EA1 28 09        	jr z,1F
726+  8EA3 32 D8 85      	ld (Numero_de_malotes),a
727+  8EA6
728+  8EA6 ED 7B DB 85   	ld sp,(Stack_2)
729+  8EAA 18 D8        	jr 2B
730+  8EAC
731+  8EAC AF           1 xor a
732+  8EAD 32 DB 85     	ld (Stack_2),a
733+  8EB0 C9           	ret
734+  8EB1
735+  8EB1              ; -----------------------------------------------------------------------------------
736+  8EB1              ;
737+  8EB1              ;	28/2/23
738+  8EB1              ;
739+  8EB1              ;	Pinta los disparos generados.
740+  8EB1
741+  8EB1              Extrae_foto_disparos
742+  8EB1
743+  8EB1 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8EB4 A7           	and a
745+  8EB5 C8           	ret z
746+  8EB6 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8EBA 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8EBD
749+  8EBD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8EBF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8EC0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8EC1
753+  8EC1 ED 73 DB 85  	ld (Stack_2),sp
754+  8EC5 ED 7B D9 85  	ld sp,(Stack)
755+  8EC9
756+  8EC9              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8EC9
758+  8EC9 3E CD        	ld a,$cd
759+  8ECB 32 D3 8E     	ld (Imprime2),a
760+  8ECE EB           	ex de,hl
761+  8ECF 22 D4 8E     	ld (Imprime2+1),hl
762+  8ED2 EB           	ex de,hl
763+  8ED3
764+  8ED3              ; Ejecuta la llamada:	CALL $xx,xx
765+  8ED3
766+  8ED3 00 00 00     Imprime2 db 0,0,0
767+  8ED6
768+  8ED6 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8ED9 3D           	dec a
770+  8EDA 28 09        	jr z,1F
771+  8EDC 32 E1 85      	ld (Numero_de_disparotes),a
772+  8EDF
773+  8EDF ED 7B DB 85  	ld sp,(Stack_2)
774+  8EE3 18 D8        	jr 2B
775+  8EE5
776+  8EE5 AF           1 xor a
777+  8EE6 32 DB 85     	ld (Stack_2),a
778+  8EE9 C9           	ret
779+  8EEA
# file closed: Draw_XOR.asm
876   8EEA              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8EEA              ;   índices de Rutinas de impresión.
  2+  8EEA
  3+  8EEA FA 8E        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8EEC 27 8F            defw Pinta_Amadeus_3x2
  5+  8EEE
  6+  8EEE 7D 8F        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8EF0 1D 90            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8EF2 D1 8F            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8EF4
 10+  8EF4 A7 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8EF6 AB 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8EF8 5F 90            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8EFA
 14+  8EFA
 15+  8EFA              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8EFA              ;
 17+  8EFA              ;   12/12/22
 18+  8EFA              ;
 19+  8EFA              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8EFA              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8EFA              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8EFA              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8EFA              ;
 24+  8EFA              ;   Modifica: DE y HL.
 25+  8EFA
 26+  8EFA ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8EFE FD F9        	ld sp,iy
 28+  8F00 06 10            ld b,16
 29+  8F02 D1           1 pop de
 30+  8F03 7B               ld a,e
 31+  8F04 AE               xor (hl)
 32+  8F05 77           	ld (hl),a
 33+  8F06 23           	inc hl
 34+  8F07 7A               ld a,d
 35+  8F08 AE               xor (hl)
 36+  8F09 77           	ld (hl),a
 37+  8F0A 2B           	dec hl
 38+  8F0B 24           	inc h
 39+  8F0C 7C               ld a,h
 40+  8F0D E6 07            and 7
 41+  8F0F 20 0A            jr nz,2F
 42+  8F11 7D               ld a,l
 43+  8F12 C6 20            add a,$20
 44+  8F14 6F               ld l,a
 45+  8F15 38 04            jr c,2F
 46+  8F17 7C               ld a,h
 47+  8F18 D6 08            sub 8
 48+  8F1A 67               ld h,a
 49+  8F1B 7C           2 ld a,h
 50+  8F1C FE 58            cp $58
 51+  8F1E 28 02            jr z,3F
 52+  8F20 10 E0            djnz 1B
 53+  8F22 ED 7B D9 85  3 ld sp,(Stack)
 54+  8F26 C9           	ret
 55+  8F27
 56+  8F27 ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8F2B FD F9        	ld sp,iy
 58+  8F2D 06 08            ld b,8
 59+  8F2F D1           1 pop de
 60+  8F30 7B               ld a,e
 61+  8F31 AE               xor (hl)
 62+  8F32 77           	ld (hl),a
 63+  8F33 23           	inc hl
 64+  8F34 7A               ld a,d
 65+  8F35 AE               xor (hl)
 66+  8F36 77           	ld (hl),a
 67+  8F37 23           	inc hl
 68+  8F38 D1           	pop de
 69+  8F39 7B               ld a,e
 70+  8F3A AE               xor (hl)
 71+  8F3B 77           	ld (hl),a
 72+  8F3C 2B           	dec hl
 73+  8F3D 2B           	dec hl
 74+  8F3E 24           	inc h
 75+  8F3F 7C               ld a,h
 76+  8F40 E6 07            and 7
 77+  8F42 20 0A            jr nz,2F
 78+  8F44 7D               ld a,l
 79+  8F45 C6 20            add a,$20
 80+  8F47 6F               ld l,a
 81+  8F48 38 04            jr c,2F
 82+  8F4A 7C               ld a,h
 83+  8F4B D6 08            sub 8
 84+  8F4D 67               ld h,a
 85+  8F4E 7C           2 ld a,h
 86+  8F4F FE 58            cp $58
 87+  8F51 28 25            jr z,4F
 88+  8F53 7A               ld a,d
 89+  8F54 AE               xor (hl)
 90+  8F55 77               ld (hl),a
 91+  8F56 D1           	pop de
 92+  8F57 23           	inc hl
 93+  8F58 7B               ld a,e
 94+  8F59 AE               xor (hl)
 95+  8F5A 77           	ld (hl),a
 96+  8F5B 23           	inc hl
 97+  8F5C 7A               ld a,d
 98+  8F5D AE               xor (hl)
 99+  8F5E 77           	ld (hl),a
100+  8F5F 2B           	dec hl
101+  8F60 2B           	dec hl
102+  8F61 24           	inc h
103+  8F62 7C               ld a,h
104+  8F63 E6 07            and 7
105+  8F65 20 0A            jr nz,3F
106+  8F67 7D               ld a,l
107+  8F68 C6 20            add a,$20
108+  8F6A 6F               ld l,a
109+  8F6B 38 04            jr c,3F
110+  8F6D 7C               ld a,h
111+  8F6E D6 08            sub 8
112+  8F70 67               ld h,a
113+  8F71 7C           3 ld a,h
114+  8F72 FE 58            cp $58
115+  8F74 28 02            jr z,4F
116+  8F76 10 B7            djnz 1B
117+  8F78 ED 7B D9 85  4 ld sp,(Stack)
118+  8F7C C9           	ret
119+  8F7D
120+  8F7D              ; ---------------------------------------------------
121+  8F7D
122+  8F7D ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8F81 FD F9        	ld sp,iy
124+  8F83
125+  8F83              ; >>>
126+  8F83
127+  8F83 06 10            ld b,16
128+  8F85 D1           1 pop de
129+  8F86 7A           	ld a,d
130+  8F87 AE           	xor (hl)
131+  8F88 77           	ld (hl),a
132+  8F89 24           	inc h
133+  8F8A 7C               ld a,h
134+  8F8B E6 07            and 7
135+  8F8D 20 0C            jr nz,2F
136+  8F8F 7D               ld a,l
137+  8F90 C6 20            add a,$20
138+  8F92 6F               ld l,a
139+  8F93 38 06            jr c,2F
140+  8F95 7C               ld a,h
141+  8F96 D6 08            sub 8
142+  8F98 67               ld h,a
143+  8F99 18 00            jr 2F
144+  8F9B 7C           2 ld a,h
145+  8F9C FE 58            cp $58
146+  8F9E 28 02            jr z,3F
147+  8FA0 10 E3            djnz 1B
148+  8FA2 ED 7B D9 85  3 ld sp,(Stack)
149+  8FA6 C9           	ret
150+  8FA7
151+  8FA7 ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8FAB FD F9        	ld sp,iy
153+  8FAD
154+  8FAD              ; >>>
155+  8FAD
156+  8FAD 06 10            ld b,16
157+  8FAF D1           1 pop de
158+  8FB0 7B           	ld a,e
159+  8FB1 AE           	xor (hl)
160+  8FB2 77           	ld (hl),a
161+  8FB3 24           	inc h
162+  8FB4 7C               ld a,h
163+  8FB5 E6 07            and 7
164+  8FB7 20 0C            jr nz,2F
165+  8FB9 7D               ld a,l
166+  8FBA C6 20            add a,$20
167+  8FBC 6F               ld l,a
168+  8FBD 38 06            jr c,2F
169+  8FBF 7C               ld a,h
170+  8FC0 D6 08            sub 8
171+  8FC2 67               ld h,a
172+  8FC3 18 00            jr 2F
173+  8FC5 7C           2 ld a,h
174+  8FC6 FE 58            cp $58
175+  8FC8 28 02            jr z,3F
176+  8FCA 10 E3            djnz 1B
177+  8FCC ED 7B D9 85  3 ld sp,(Stack)
178+  8FD0 C9           	ret
179+  8FD1
180+  8FD1              ; ---------------------------------------------------
181+  8FD1
182+  8FD1 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8FD5 FD F9        	ld sp,iy
184+  8FD7 06 08            ld b,8
185+  8FD9 D1           1 pop de
186+  8FDA 7A           	ld a,d
187+  8FDB AE           	xor (hl)
188+  8FDC 77           	ld (hl),a
189+  8FDD 23           	inc hl
190+  8FDE D1           	pop de
191+  8FDF 7B           	ld a,e
192+  8FE0 AE           	xor (hl)
193+  8FE1 77           	ld (hl),a
194+  8FE2 2B           	dec hl
195+  8FE3 24            	inc h
196+  8FE4 7C               ld a,h
197+  8FE5 E6 07            and 7
198+  8FE7 20 0A            jr nz,2F
199+  8FE9 7D               ld a,l
200+  8FEA C6 20            add a,$20
201+  8FEC 6F               ld l,a
202+  8FED 38 04            jr c,2F
203+  8FEF 7C               ld a,h
204+  8FF0 D6 08            sub 8
205+  8FF2 67               ld h,a
206+  8FF3 7C           2 ld a,h
207+  8FF4 FE 58            cp $58
208+  8FF6 28 20            jr z,4F
209+  8FF8 D1               pop de
210+  8FF9 7B           	ld a,e
211+  8FFA AE           	xor (hl)
212+  8FFB 77           	ld (hl),a
213+  8FFC 23           	inc hl
214+  8FFD 7A           	ld a,d
215+  8FFE AE           	xor (hl)
216+  8FFF 77           	ld (hl),a
217+  9000 2B           	dec hl
218+  9001 24           	inc h
219+  9002 7C               ld a,h
220+  9003 E6 07            and 7
221+  9005 20 0A            jr nz,3F
222+  9007 7D               ld a,l
223+  9008 C6 20            add a,$20
224+  900A 6F               ld l,a
225+  900B 38 04            jr c,3F
226+  900D 7C               ld a,h
227+  900E D6 08            sub 8
228+  9010 67               ld h,a
229+  9011 7C           3 ld a,h
230+  9012 FE 58            cp $58
231+  9014 28 02            jr z,4F
232+  9016 10 C1            djnz 1B
233+  9018 ED 7B D9 85  4 ld sp,(Stack)
234+  901C C9           	ret
235+  901D
236+  901D ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  9021 FD F9        	ld sp,iy
238+  9023 06 08            ld b,8
239+  9025 D1           1 pop de
240+  9026 D1           	pop de
241+  9027 7B           	ld a,e
242+  9028 AE           	xor (hl)
243+  9029 77           	ld (hl),a
244+  902A 24            	inc h
245+  902B 7C               ld a,h
246+  902C E6 07            and 7
247+  902E 20 0A            jr nz,2F
248+  9030 7D               ld a,l
249+  9031 C6 20            add a,$20
250+  9033 6F               ld l,a
251+  9034 38 04            jr c,2F
252+  9036 7C               ld a,h
253+  9037 D6 08            sub 8
254+  9039 67               ld h,a
255+  903A 7C           2 ld a,h
256+  903B FE 58            cp $58
257+  903D 28 1B            jr z,4F
258+  903F D1               pop de
259+  9040 7A           	ld a,d
260+  9041 AE           	xor (hl)
261+  9042 77           	ld (hl),a
262+  9043 24           	inc h
263+  9044 7C               ld a,h
264+  9045 E6 07            and 7
265+  9047 20 0A            jr nz,3F
266+  9049 7D               ld a,l
267+  904A C6 20            add a,$20
268+  904C 6F               ld l,a
269+  904D 38 04            jr c,3F
270+  904F 7C               ld a,h
271+  9050 D6 08            sub 8
272+  9052 67               ld h,a
273+  9053 7C           3 ld a,h
274+  9054 FE 58            cp $58
275+  9056 28 02            jr z,4F
276+  9058 10 CB            djnz 1B
277+  905A ED 7B D9 85  4 ld sp,(Stack)
278+  905E C9           	ret
279+  905F
280+  905F ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  9063 FD F9        	ld sp,iy
282+  9065 06 08            ld b,8
283+  9067 D1           1 pop de
284+  9068 7B           	ld a,e
285+  9069 AE           	xor (hl)
286+  906A 77           	ld (hl),a
287+  906B 23           	inc hl
288+  906C 7A           	ld a,d
289+  906D AE           	xor (hl)
290+  906E 77           	ld (hl),a
291+  906F 2B           	dec hl
292+  9070 24             	inc h
293+  9071 7C               ld a,h
294+  9072 E6 07            and 7
295+  9074 20 0A            jr nz,2F
296+  9076 7D               ld a,l
297+  9077 C6 20            add a,$20
298+  9079 6F               ld l,a
299+  907A 38 04            jr c,2F
300+  907C 7C               ld a,h
301+  907D D6 08            sub 8
302+  907F 67               ld h,a
303+  9080 7C           2 ld a,h
304+  9081 FE 58            cp $58
305+  9083 28 21            jr z,4F
306+  9085 D1               pop de
307+  9086 7A           	ld a,d
308+  9087 AE           	xor (hl)
309+  9088 77           	ld (hl),a
310+  9089 23           	inc hl
311+  908A D1               pop de
312+  908B 7B           	ld a,e
313+  908C AE           	xor (hl)
314+  908D 77           	ld (hl),a
315+  908E 2B           	dec hl
316+  908F 24           	inc h
317+  9090 7C               ld a,h
318+  9091 E6 07            and 7
319+  9093 20 0A            jr nz,3F
320+  9095 7D               ld a,l
321+  9096 C6 20            add a,$20
322+  9098 6F               ld l,a
323+  9099 38 04            jr c,3F
324+  909B 7C               ld a,h
325+  909C D6 08            sub 8
326+  909E 67               ld h,a
327+  909F 7C           3 ld a,h
328+  90A0 FE 58            cp $58
329+  90A2 28 02            jr z,4F
330+  90A4 10 C1            djnz 1B
331+  90A6 ED 7B D9 85  4 ld sp,(Stack)
332+  90AA C9           	ret
333+  90AB
334+  90AB ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  90AF FD F9        	ld sp,iy
336+  90B1 06 08            ld b,8
337+  90B3 D1           1 pop de
338+  90B4 7B           	ld a,e
339+  90B5 AE           	xor (hl)
340+  90B6 77           	ld (hl),a
341+  90B7 24            	inc h
342+  90B8 7C               ld a,h
343+  90B9 E6 07            and 7
344+  90BB 20 0A            jr nz,2F
345+  90BD 7D               ld a,l
346+  90BE C6 20            add a,$20
347+  90C0 6F               ld l,a
348+  90C1 38 04            jr c,2F
349+  90C3 7C               ld a,h
350+  90C4 D6 08            sub 8
351+  90C6 67               ld h,a
352+  90C7 7C           2 ld a,h
353+  90C8 FE 58            cp $58
354+  90CA 28 1C            jr z,4F
355+  90CC D1               pop de
356+  90CD 7A           	ld a,d
357+  90CE AE           	xor (hl)
358+  90CF 77           	ld (hl),a
359+  90D0 24           	inc h
360+  90D1 7C               ld a,h
361+  90D2 E6 07            and 7
362+  90D4 20 0A            jr nz,3F
363+  90D6 7D               ld a,l
364+  90D7 C6 20            add a,$20
365+  90D9 6F               ld l,a
366+  90DA 38 04            jr c,3F
367+  90DC 7C               ld a,h
368+  90DD D6 08            sub 8
369+  90DF 67               ld h,a
370+  90E0 7C           3 ld a,h
371+  90E1 FE 58            cp $58
372+  90E3 28 03            jr z,4F
373+  90E5 D1               pop de
374+  90E6 10 CB            djnz 1B
375+  90E8 ED 7B D9 85  4 ld sp,(Stack)
376+  90EC C9           	ret
377+  90ED
378+  90ED              ; ---------------------------------------------------
379+  90ED              ;
380+  90ED              ;   27/02/23
381+  90ED              ;
382+  90ED              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  90ED              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  90ED              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  90ED
386+  90ED ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  90F1 FD F9            ld sp,iy
388+  90F3 06 02            ld b,2
389+  90F5 D1           1 pop de
390+  90F6 7B               ld a,e
391+  90F7 AE               xor (hl)
392+  90F8 77               ld (hl),a
393+  90F9 23               inc hl
394+  90FA 7A               ld a,d
395+  90FB AE               xor (hl)
396+  90FC 77               ld (hl),a
397+  90FD 2B               dec hl
398+  90FE
399+  90FE 24               inc h
400+  90FF 7C               ld a,h
401+  9100 E6 07            and 7
402+  9102 20 0A            jr nz,2F
403+  9104 7D               ld a,l
404+  9105 C6 20            add a,$20
405+  9107 6F               ld l,a
406+  9108 38 04            jr c,2F
407+  910A 7C               ld a,h
408+  910B D6 08            sub 8
409+  910D 67               ld h,a
410+  910E 7C           2 ld a,h
411+  910F FE 58            cp $58
412+  9111 28 02            jr z,3F
413+  9113
414+  9113 10 E0            djnz 1B
415+  9115 ED 7B D9 85  3 ld sp,(Stack)
416+  9119 C9               ret
417+  911A
# file closed: Rutinas_de_impresion_sprites.asm
877   911A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  911A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  911A              ;
  3+  911A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  911A              ;
  5+  911A              ; *****************************************************************************************************************************************************************************************
  6+  911A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  911A
  8+  911A 7C           calcula_tercio ld a,h
  9+  911B E6 18        	and $18
 10+  911D CB 2F        	sra a
 11+  911F CB 2F        	sra a
 12+  9121 CB 2F        	sra a
 13+  9123 C9           	ret
 14+  9124
# file closed: calcula_tercio.asm
878   9124              	include "Cls.asm"
# file opened: Cls.asm
  1+  9124              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  9124              ;
  3+  9124              ;
  4+  9124              ;	CLS.
  5+  9124              ;
  6+  9124              ;	Limpia la pantalla y define sus atributos.
  7+  9124              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  9124              ;
  9+  9124              ;	COLORES: 0 ..... NEGRO
 10+  9124              ;    		 1 ..... AZUL
 11+  9124              ; 			 2 ..... ROJO
 12+  9124              ;			 3 ..... MAGENTA
 13+  9124              ; 			 4 ..... VERDE
 14+  9124              ; 			 5 ..... CIAN
 15+  9124              ;			 6 ..... AMARILLO
 16+  9124              ; 			 7 ..... BLANCO
 17+  9124              ;
 18+  9124              ;	INPUT: A contiene los atributos de pantalla.
 19+  9124              ;
 20+  9124              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  9124
 22+  9124
 23+  9124 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  9127 11 01 40     	LD DE,$4001
 25+  912A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  912D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  912F ED B0        	LDIR
 28+  9131 01 FF 02     	LD BC,767
 29+  9134 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  9135 ED B0        	LDIR
 31+  9137 C9           	ret
 32+  9138
# file closed: Cls.asm
879   9138              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  9138              ; ******************************************************************************************************************************************************************************************
  2+  9138              ;
  3+  9138              ;   22/01/23
  4+  9138              ;
  5+  9138              ;	Mov_down
  6+  9138              ;
  7+  9138              ; 	Mueve el Sprite X px hacia abajo.
  8+  9138              ;
  9+  9138              ;
 10+  9138 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  913B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  913D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  913D              ; 																	; _ en el caso de que no lo haya.
 14+  913D 3A AE 85     	ld a,(Vel_down)
 15+  9140 47           	ld b,a
 16+  9141 2A 98 85         ld hl,(Posicion_actual)
 17+  9144 CD 1A 91     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  9147 E6 02        	and 2
 19+  9149 28 0F        	jr z,1F
 20+  914B
 21+  914B              ; Nos encontramos en el último tercio de pantalla.
 22+  914B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  914B
 24+  914B 7C           	ld a,h
 25+  914C FE 57        	cp $57
 26+  914E 20 0A        	jr nz,1F
 27+  9150 7D           	ld a,l
 28+  9151 C6 20        	add $20
 29+  9153 30 05        	jr nc,1F
 30+  9155
 31+  9155              ; ------------------------------
 32+  9155 CD 30 94     	call Reaparece_arriba
 33+  9158              ;	call Reinicio
 34+  9158              ; ------------------------------
 35+  9158 18 08        	jr 3F
 36+  915A CD 5A 8E     1 call NextScan
 37+  915D 22 98 85     	ld (Posicion_actual),hl
 38+  9160 10 E2            djnz 2B
 39+  9162 CD 46 94     3 call Genera_coordenadas
 40+  9165 C9           	ret
 41+  9166
 42+  9166
 43+  9166              ; ******************************************************************************************************************************************************************************************
 44+  9166              ;
 45+  9166              ;   22/01/23
 46+  9166              ;
 47+  9166              ;	Mov_up
 48+  9166              ;
 49+  9166              ; 	Mueve el Sprite hacia arriba.
 50+  9166              ;
 51+  9166              ;
 52+  9166 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  9169 CB DE        	set 3,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  916B              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  916B              ; 																		; _ en el caso de que no lo haya.
 56+  916B 3A AD 85     	ld a,(Vel_up)
 57+  916E 47           	ld b,a
 58+  916F 2A 98 85     	ld hl,(Posicion_actual)
 59+  9172 CD 1A 91     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  9175 A7           	and a
 61+  9176 20 10        	jr nz,1F
 62+  9178
 63+  9178              ; Nos encontramos en el 1er tercio de pantalla.
 64+  9178              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  9178
 66+  9178 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  9179 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  917B 20 0B            jr nz,1F
 69+  917D 7D               ld a,l
 70+  917E D6 20            sub $20
 71+  9180 30 06            jr nc,1F
 72+  9182 25               dec h
 73+  9183
 74+  9183              ; -----------------------------
 75+  9183 CD 20 94         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  9186              ;	call Reinicio
 77+  9186              ; -----------------------------
 78+  9186
 79+  9186 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  9188 CD 69 8E     1 call PreviousScan
 81+  918B 22 98 85     	ld (Posicion_actual),hl
 82+  918E 10 E2            djnz 3B
 83+  9190 CD 46 94     2 call Genera_coordenadas
 84+  9193 C9           	ret
 85+  9194
 86+  9194              ; ******************************************************************************************************************************************************************************************
 87+  9194              ;
 88+  9194              ;	19/10/22
 89+  9194              ;
 90+  9194              ;	Mov_right.
 91+  9194              ;
 92+  9194              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9194              ;
 94+  9194
 95+  9194 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  9197 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9199              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9199              ; 																	; _ en el caso de que no lo haya.
 99+  9199 3A C3 85     	ld a,(Ctrl_0)
100+  919C CB 77        	bit 6,a
101+  919E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  91A0
103+  91A0 CD CE 93     	call Stop_Amadeus_right
104+  91A3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  91A4 18 4D        	jr 8F
106+  91A6
107+  91A6 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  91A9 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  91AB 20 46        	jr nz,8F
110+  91AD
111+  91AD 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  91B0 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  91B1 28 40        	jr z,8F
114+  91B3
115+  91B3              ; ---------- ---------- ----------
116+  91B3              ;
117+  91B3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  91B3
119+  91B3 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  91B6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  91B8 28 11        	jr z,1F
122+  91BA 38 06        	jr c,6F
123+  91BC FE 04        	cp 4
124+  91BE 28 14        	jr z,7F
125+  91C0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  91C2
127+  91C2              ; ---------- ---------- ----------
128+  91C2              ;
129+  91C2              ; Perfiles de velocidad
130+  91C2              ;
131+  91C2
132+  91C2 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  91C5 FE FE        	cp $fe
134+  91C7 20 2A        	jr nz,8F
135+  91C9 18 10        	jr 3F
136+  91CB 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  91CE FE FD        	cp $fd
138+  91D0 20 21        	jr nz,8F
139+  91D2 18 07        	jr 3F
140+  91D4 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  91D7 FE FB        	cp $fb
142+  91D9 20 18        	jr nz,8F
143+  91DB
144+  91DB              ; ---------- ---------- ----------
145+  91DB
146+  91DB              3
147+  91DB CD 0E 94     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  91DE              ;	call Reinicio
149+  91DE
150+  91DE              ; ---------- ---------- ----------
151+  91DE              ;
152+  91DE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  91DE
154+  91DE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  91E0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  91E1 CD FA 91     	call DESPLZ_DER
157+  91E4 C1           	pop bc
158+  91E5 10 F9        	djnz 5B
159+  91E7 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  91EA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  91EB 22 98 85     	ld (Posicion_actual),hl
162+  91EE CD 46 94     	call Genera_coordenadas
163+  91F1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  91F3
165+  91F3              ; ---------- ---------- ----------
166+  91F3
167+  91F3 2A 98 85     8 ld hl,(Posicion_actual)
168+  91F6 CD FA 91     	call DESPLZ_DER
169+  91F9 C9           2 ret
170+  91FA
171+  91FA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  91FA              ;
173+  91FA              ;	22/9/22
174+  91FA              ;
175+  91FA
176+  91FA CD 09 92     DESPLZ_DER call Desplaza_derecha
177+  91FD CD 55 92         call modifica_parametros_1er_DESPLZ_2
178+  9200 CD 7E 92         call Ciclo_completo
179+  9203 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  9206 CB FE        	set 7,(hl)
181+  9208 C9           	ret
182+  9209
183+  9209              ; ******************************************************************************************************************************************************************************************
184+  9209              ;	15/02/23
185+  9209              ;
186+  9209
187+  9209 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  920C 47           	ld b,a
189+  920D 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  9210 23           1 inc hl
191+  9211 23           	inc hl
192+  9212 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9214 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9217 CD 9E 87     	call Extrae_address
195+  921A 22 9A 85     	ld (Puntero_objeto),hl
196+  921D
197+  921D              ; Modifica (Puntero_DESPLZ_izq).
198+  921D
199+  921D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  921D              ; Cuántos movimientos hemos hecho ??
201+  921D              ; DE contiene (Puntero_DESPLZ_der).
202+  921D
203+  921D 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  9220 EB           	ex de,hl
205+  9221 A7           	and a
206+  9222 ED 52        	sbc hl,de
207+  9224 CB 3D        	srl l
208+  9226 3E 08        6 ld a,8
209+  9228 95           	sub l
210+  9229 30 1E        	jr nc,3F
211+  922B
212+  922B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  922B              ; B="0".
214+  922B
215+  922B 04           4 inc b
216+  922C 3C           	inc a
217+  922D 20 FC        	jr nz,4B
218+  922F 78           	ld a,b
219+  9230 08           	ex af,af
220+  9231 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  9234 23           5 inc hl
222+  9235 23           	inc hl
223+  9236 10 FC        	djnz 5B
224+  9238 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  923B CD 9E 87     	call Extrae_address
226+  923E 22 9A 85     	ld (Puntero_objeto),hl
227+  9241
228+  9241              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  9241              ; _(Posicion_actual).
230+  9241
231+  9241 21 98 85     	ld hl,Posicion_actual
232+  9244 34           	inc (hl)
233+  9245 08               ex af,af
234+  9246 6F           	ld l,a
235+  9247 18 DD        	jr 6B
236+  9249
237+  9249              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  9249
239+  9249 47           3 ld b,a
240+  924A 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  924D 23           2 inc hl
242+  924E 23           	inc hl
243+  924F 10 FC        	djnz 2B
244+  9251 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  9254 C9           8 ret
246+  9255
247+  9255              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  9255              ;
249+  9255              ;	24/7/22
250+  9255              ;
251+  9255              ;	modifica_parametros_1er_DESPLZ_2
252+  9255              ;
253+  9255              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  9255              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  9255              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  9255
257+  9255 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9258 A7           	and a
259+  9259 20 1F        	jr nz,1F
260+  925B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  925D 32 9E 85         ld (CTRL_DESPLZ),a
262+  9260
263+  9260 21 97 85     	ld hl,Columns
264+  9263 34           	inc (hl)
265+  9264 3A AA 85     	ld a,(Cuad_objeto)
266+  9267 E6 01        	and 1
267+  9269 28 0F        	jr z,1F
268+  926B 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  926E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  926F 22 98 85     	ld (Posicion_actual),hl
271+  9272 CD 46 94     	call Genera_coordenadas
272+  9275 CD DA 93     	call Inc_CTRL_DESPLZ
273+  9278 18 03        	jr 2F
274+  927A CD DA 93     1 call Inc_CTRL_DESPLZ
275+  927D C9           2 ret
276+  927E
277+  927E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  927E              ;
279+  927E              ;	24/7/22
280+  927E              ;
281+  927E              ;	Ciclo_completo.
282+  927E              ;
283+  927E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  927E              ;
285+  927E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  927E              ; 	Decrementamos (Columns).
287+  927E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  927E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  927E
290+  927E
291+  927E 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9281 FE FF        	cp $ff
293+  9283 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  9285 E6 F0        	and $f0
295+  9287 20 28        	jr nz,3F
296+  9289
297+  9289              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9289
299+  9289 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  928C 47           	ld b,a
301+  928D 3E F8        	ld a,$f8
302+  928F 80           	add b
303+  9290 32 9E 85     	ld (CTRL_DESPLZ),a
304+  9293 18 1C        	jr 3F
305+  9295 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9298 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9299 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  929A 32 9E 85     	ld (CTRL_DESPLZ),a
309+  929D 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  92A0 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  92A2 20 0A        	jr nz,2F
312+  92A4 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  92A7 23           	inc hl
314+  92A8 22 98 85     	ld (Posicion_actual),hl
315+  92AB CD 46 94     	call Genera_coordenadas
316+  92AE
317+  92AE              ; Inicia el puntero de Sprite.
318+  92AE
319+  92AE CD B5 87     2 call Inicia_puntero_objeto_der
320+  92B1 C9           3 ret
321+  92B2
322+  92B2              ; ******************************************************************************************************************************************************************************************
323+  92B2              ;
324+  92B2              ;	15/02/23
325+  92B2              ;
326+  92B2              ;	Mov_left.
327+  92B2              ;
328+  92B2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  92B2              ;
330+  92B2              Mov_left
331+  92B2
332+  92B2 21 C3 85     	ld hl,Ctrl_0
333+  92B5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  92B7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  92B7              ; 																	; _ en el caso de que no lo haya.
336+  92B7 3A C3 85     	ld a,(Ctrl_0)
337+  92BA CB 77        	bit 6,a
338+  92BC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  92BE
340+  92BE CD D4 93     	call Stop_Amadeus_left
341+  92C1 C8           	ret z
342+  92C2 20 4A        	jr nz,8F
343+  92C4
344+  92C4 3A 9C 85     11 ld a,(Coordenada_X)
345+  92C7 A7           	and a
346+  92C8 20 44        	jr nz,8F
347+  92CA
348+  92CA 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  92CD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  92CE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  92D0
352+  92D0              ; ---------- ---------- ----------
353+  92D0
354+  92D0 3A AB 85     	ld a,(Vel_left)
355+  92D3 FE 02        	cp 2
356+  92D5 28 0F        	jr z,1F
357+  92D7 38 04        	jr c,6F
358+  92D9 FE 04        	cp 4
359+  92DB 28 12        	jr z,7F
360+  92DD
361+  92DD              ; ---------- ---------- ----------
362+  92DD
363+  92DD 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  92E0 FE F9        	cp $f9
365+  92E2 20 2A        	jr nz,8F
366+  92E4 18 10        	jr 4F
367+  92E6 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  92E9 FE FA        	cp $fa
369+  92EB 20 21        	jr nz,8F
370+  92ED 18 07        	jr 4F
371+  92EF 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  92F2 FE FC        	cp $fc
373+  92F4 20 18        	jr nz,8F
374+  92F6
375+  92F6              ; ---------- ---------- ----------
376+  92F6
377+  92F6              4
378+  92F6 CD FC 93     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  92F9              ;	call Reinicio
380+  92F9
381+  92F9              ; ---------- ---------- ----------
382+  92F9
383+  92F9 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  92FB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  92FC
386+  92FC              ;	ld hl,(Indice_Sprite_izq)
387+  92FC              ;	ld (Puntero_DESPLZ_izq),hl
388+  92FC
389+  92FC CD 15 93     	call DESPLZ_IZQ
390+  92FF C1           	pop bc
391+  9300 10 F9        	djnz 5B
392+  9302 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  9305 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  9306 22 98 85     	ld (Posicion_actual),hl
395+  9309 CD 46 94     	call Genera_coordenadas
396+  930C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  930E
398+  930E              ; ---------- ---------- ----------
399+  930E
400+  930E              ; Movemos, no hay recolocación.
401+  930E
402+  930E 2A 98 85     8 ld hl,(Posicion_actual)
403+  9311 CD 15 93     	call DESPLZ_IZQ
404+  9314 C9           2 ret
405+  9315
406+  9315              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
407+  9315              ;
408+  9315              ;	22/9/22
409+  9315
410+  9315              DESPLZ_IZQ
411+  9315
412+  9315 CD 24 93     	call Desplaza_izquierda
413+  9318 CD 70 93         call modifica_parametros_1er_DESPLZ
414+  931B CD 98 93     	call Ciclo_completo_2
415+  931E 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
416+  9321 CB BE        	res 7,(hl)
417+  9323 C9           	ret
418+  9324
419+  9324              Desplaza_izquierda
420+  9324
421+  9324 3A AB 85     	ld a,(Vel_left)
422+  9327 47           	ld b,a
423+  9328 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
424+  932B 23           1 inc hl
425+  932C 23           	inc hl
426+  932D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
427+  932F 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
428+  9332 CD 9E 87     	call Extrae_address
429+  9335 22 9A 85     	ld (Puntero_objeto),hl
430+  9338
431+  9338              ; Modifica (Puntero_DESPLZ_der).
432+  9338
433+  9338              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
434+  9338              ; Cuántos movimientos hemos hecho ??
435+  9338              ; DE contiene (Puntero_DESPLZ_izq).
436+  9338
437+  9338 2A A2 85     7 ld hl,(Indice_Sprite_izq)
438+  933B EB           	ex de,hl
439+  933C A7           	and a
440+  933D ED 52        	sbc hl,de
441+  933F CB 3D        	srl l
442+  9341 3E 08        6 ld a,8
443+  9343 95           	sub l
444+  9344 30 1E        	jr nc,3F
445+  9346
446+  9346              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
447+  9346              ; B="0".
448+  9346
449+  9346 04           4 inc b
450+  9347 3C           	inc a
451+  9348 20 FC        	jr nz,4B
452+  934A 78           	ld a,b
453+  934B 08           	ex af,af
454+  934C 2A A2 85     	ld hl,(Indice_Sprite_izq)
455+  934F 23           5 inc hl
456+  9350 23           	inc hl
457+  9351 10 FC        	djnz 5B
458+  9353 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
459+  9356 CD 9E 87     	call Extrae_address
460+  9359 22 9A 85     	ld (Puntero_objeto),hl
461+  935C
462+  935C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
463+  935C              ; _(Posicion_actual).
464+  935C
465+  935C 21 98 85     	ld hl,Posicion_actual
466+  935F 35           	dec (hl)
467+  9360 08           	ex af,af
468+  9361 6F           	ld l,a
469+  9362 18 DD        	jr 6B
470+  9364
471+  9364              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
472+  9364
473+  9364 47           3 ld b,a
474+  9365 2A A0 85     	ld hl,(Indice_Sprite_der)
475+  9368 23           2 inc hl
476+  9369 23           	inc hl
477+  936A 10 FC        	djnz 2B
478+  936C 22 A4 85     	ld (Puntero_DESPLZ_der),hl
479+  936F C9           8 ret
480+  9370
481+  9370              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
482+  9370              ;
483+  9370              ;	modifica_parametros_1er_DESPLZ
484+  9370              ;
485+  9370              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
486+  9370              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
487+  9370              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
488+  9370
489+  9370 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
490+  9373 A7           	and a
491+  9374 20 1E        	jr nz,1F
492+  9376 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
493+  9377 32 9E 85         ld (CTRL_DESPLZ),a
494+  937A 21 97 85     	ld hl,Columns
495+  937D 34           	inc (hl)
496+  937E 3A AA 85     	ld a,(Cuad_objeto)
497+  9381 E6 01        	and 1
498+  9383 20 0F        	jr nz,1F
499+  9385 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
500+  9388 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
501+  9389 22 98 85     	ld (Posicion_actual),hl
502+  938C CD 46 94     	call Genera_coordenadas
503+  938F CD EB 93     	call Dec_CTRL_DESPLZ
504+  9392 18 03        	jr 2F
505+  9394 CD EB 93     1 call Dec_CTRL_DESPLZ
506+  9397 C9           2 ret
507+  9398
508+  9398              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
509+  9398
510+  9398 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
511+  939B FE F7        	cp $f7
512+  939D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
513+  939F 30 2C        	jr nc,3F
514+  93A1
515+  93A1              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
516+  93A1
517+  93A1 06 00        	ld b,0
518+  93A3 04           4 inc b
519+  93A4 3C           	inc a
520+  93A5 FE F7        	cp $f7
521+  93A7 20 FA        	jr nz,4B
522+  93A9 3E FF        	ld a,$ff
523+  93AB 90           	sub b
524+  93AC 32 9E 85     	ld (CTRL_DESPLZ),a
525+  93AF 18 1C        	jr 3F
526+  93B1
527+  93B1              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
528+  93B1
529+  93B1 21 97 85     1 ld hl,Columns
530+  93B4 35           	dec (hl)
531+  93B5 AF           	xor a
532+  93B6 32 9E 85     	ld (CTRL_DESPLZ),a
533+  93B9 3A AA 85     	ld a,(Cuad_objeto)
534+  93BC E6 01        	and 1
535+  93BE 28 0A        	jr z,2F
536+  93C0 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
537+  93C3 2B           	dec hl
538+  93C4 22 98 85     	ld (Posicion_actual),hl
539+  93C7 CD 46 94     	call Genera_coordenadas
540+  93CA
541+  93CA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
542+  93CA
543+  93CA CD C8 87     2 call Inicia_puntero_objeto_izq
544+  93CD C9           3 ret
545+  93CE
546+  93CE              ; ---------- ---------- ---------- ---------- ---------- ----------
547+  93CE              ;
548+  93CE              ;	19/10/22
549+  93CE              ;
550+  93CE              ;	(cp 29) para un Amadeus de 3 Columns.
551+  93CE              ;	(cp 30)   ""  ""    ""     2 Columns.
552+  93CE
553+  93CE 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
554+  93D1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
555+  93D3 C9           	ret
556+  93D4
557+  93D4              ; ---------- ---------- ---------- ---------- ---------- ----------
558+  93D4              ;
559+  93D4              ;	19/10/22
560+  93D4              ;
561+  93D4              ;	(cp 2) para un Amadeus de 3 Columns.
562+  93D4              ;	(cp 1)   ""  ""    ""     2 Columns.
563+  93D4
564+  93D4 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
565+  93D7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
566+  93D9 C9           	ret
567+  93DA
568+  93DA              ; ---------- ---------- ---------- ---------- ---------- ----------
569+  93DA              ;
570+  93DA              ;	24/7/22
571+  93DA              ;
572+  93DA              ;	Inc_CTRL_DESPLZ
573+  93DA              ;
574+  93DA              ;
575+  93DA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
576+  93DA
577+  93DA 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
578+  93DD 3A AC 85     	ld a,(Vel_right)
579+  93E0 A7           	and a
580+  93E1 28 06        	jr z,1F
581+  93E3 47           	ld b,a
582+  93E4 34           3 inc (hl)
583+  93E5 10 FD        	djnz 3B
584+  93E7 18 01        	jr 2F
585+  93E9 34           1 inc (hl)
586+  93EA C9           2 ret
587+  93EB
588+  93EB              ; ---------- ---------- ---------- ---------- ---------- ----------
589+  93EB              ;
590+  93EB              ;	5/2/23
591+  93EB              ;
592+  93EB              ;	Dec_CTRL_DESPLZ
593+  93EB              ;
594+  93EB              ;
595+  93EB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
596+  93EB
597+  93EB 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
598+  93EE 3A AB 85     	ld a,(Vel_left)
599+  93F1 A7           	and a
600+  93F2 28 06        	jr z,1F
601+  93F4 47           	ld b,a
602+  93F5 35           3 dec (hl)
603+  93F6 10 FD        	djnz 3B
604+  93F8 18 01        	jr 2F
605+  93FA 35           1 dec (hl)
606+  93FB C9           2 ret
607+  93FC
608+  93FC              ; ---------- ---------- ---------- ---------- ---------- ----------
609+  93FC
610+  93FC 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
611+  93FF 01 1F 00     	ld bc,31
612+  9402 A7           	and a
613+  9403 ED 4A        	adc hl,bc
614+  9405 22 98 85     	ld (Posicion_actual),hl
615+  9408 21 C3 85     	ld hl,Ctrl_0														; $xxx1
616+  940B CB C6        	set 0,(hl)
617+  940D C9           	ret
618+  940E
619+  940E              ; ---------- ---------- ---------- ---------- ---------- ----------
620+  940E
621+  940E 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
622+  9411 01 1F 00     	ld bc,31
623+  9414 A7           	and a
624+  9415 ED 42        	sbc hl,bc
625+  9417 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
626+  941A 21 C3 85     	ld hl,Ctrl_0
627+  941D CB CE        	set 1,(hl)
628+  941F C9           	ret
629+  9420
630+  9420              ; ---------- ---------- ---------- ---------- ---------- ----------
631+  9420
632+  9420 24           Reaparece_abajo inc h
633+  9421 01 E0 17     	ld bc,$17e0
634+  9424 A7           	and a
635+  9425 ED 4A        	adc hl,bc
636+  9427 22 98 85     	ld (Posicion_actual),hl
637+  942A 21 C3 85     	ld hl,Ctrl_0
638+  942D CB D6        	set 2,(hl)
639+  942F C9           	ret
640+  9430
641+  9430              ; ---------- ---------- ---------- ---------- ---------- ----------
642+  9430
643+  9430 01 E0 17     Reaparece_arriba ld bc,$17e0
644+  9433 A7           	and a
645+  9434 ED 42        	sbc hl,bc
646+  9436 22 98 85     	ld (Posicion_actual),hl
647+  9439 21 C3 85     	ld hl,Ctrl_0
648+  943C CB DE        	set 3,(hl)
649+  943E C9           	ret
650+  943F
651+  943F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
652+  943F
653+  943F 2A A8 85     Reinicio ld hl,(Posicion_inicio)
654+  9442 22 98 85     	ld (Posicion_actual),hl
655+  9445 C9           	ret
# file closed: Direcciones.asm
880   9446              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9446              ; ------------------------------------------------------------------------
  2+  9446              ;
  3+  9446              ;	28/03/23
  4+  9446              ;
  5+  9446              ;	Proporciona las coordenadas del objeto a imprimir.
  6+  9446              ;	Fila superior "0", Columna izquierda "0".
  7+  9446              ;
  8+  9446              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  9+  9446              ;
 10+  9446              ;	Modifica: A,BC y DE.
 11+  9446
 12+  9446 C5           Genera_coordenadas push bc
 13+  9447 E5           	push hl
 14+  9448
 15+  9448 2A 98 85     	ld hl,(Posicion_actual)
 16+  944B 7D           	ld a,l
 17+  944C E6 1F        	and $1f
 18+  944E
 19+  944E 32 9C 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
 20+  9451
 21+  9451 CD 1A 91     	call calcula_tercio
 22+  9454 3C           	inc a
 23+  9455 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 24+  9456
 25+  9456 1E 00        	ld e,0
 26+  9458 7D           	ld a,l
 27+  9459 E6 E0        	and $e0
 28+  945B 1C           1 inc e
 29+  945C D6 20        	sub 32
 30+  945E 20 FB        	jr nz,1B
 31+  9460
 32+  9460 10 F9        	djnz 1B
 33+  9462
 34+  9462 7B           	ld a,e
 35+  9463 32 9D 85     	ld (Coordenada_y),a
 36+  9466
 37+  9466 E1           	pop hl
 38+  9467 C1           	pop bc
 39+  9468
 40+  9468 C9           	ret
 41+  9469
 42+  9469              ; ------------------------------------------------------------------------
 43+  9469              ;	28/03/23
 44+  9469              ;
 45+  9469              ;	Proporciona las coordenadas del disparo a imprimir.
 46+  9469              ;	Fila superior "0", Columna izquierda "0".
 47+  9469              ;
 48+  9469              ;	Input: HL contendrá la posición del proyectil en pantalla.
 49+  9469              ;	Output: DE contendrá las coordenadas del disparo:
 50+  9469              ;
 51+  9469              ;		DE="$120d"
 52+  9469              ;
 53+  9469              ;		D, (Coordenada_X), Columnas, $12
 54+  9469              ;		E, (Coordenada_y), Filas, $0d
 55+  9469              ;
 56+  9469              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
 57+  9469
 58+  9469              ;	Modifica: A,BC y DE.
 59+  9469
 60+  9469
 61+  9469              Genera_coordenadas_disparo
 62+  9469
 63+  9469              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
 64+  9469
 65+  9469 7D           	ld a,l
 66+  946A E6 1F        	and $1f
 67+  946C 57           	ld d,a 												; Columnas en D. Coordenada_X.
 68+  946D
 69+  946D CD 1A 91     	call calcula_tercio
 70+  9470 3C           	inc a
 71+  9471 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 72+  9472
 73+  9472 1E 00        	ld e,0
 74+  9474 7D           	ld a,l
 75+  9475 E6 E0        	and $e0
 76+  9477 1C           1 inc e
 77+  9478 D6 20        	sub 32
 78+  947A 20 FB        	jr nz,1B
 79+  947C
 80+  947C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
 81+  947E C9           	ret
 82+  947F
# file closed: Genera_coordenadas.asm
881   947F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  947F
  2+  947F
  3+  947F              ;   11/8/22
  4+  947F              ;
  5+  947F              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  947F              ;
  7+  947F              ;   Mov_obj.asm
  8+  947F              ;
  9+  947F              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  947F              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  947F              ;
 12+  947F              ;   Codificación:
 13+  947F              ;
 14+  947F              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  947F
 16+  947F              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  947F
 18+  947F 02 40 00     Arriba db 2,%01000000,0
 19+  9482 02 80 00     Abajo db 2,%10000000,0
 20+  9485 02 20 00     Derecha db 2,%00100000,0
 21+  9488 02 10 00     Izquierda db 2,%00010000,0
 22+  948B 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  948F 60 42 60 40
 22+  9493 63
 23+  9494 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9498 22 A3 80 A0
 24+  949C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  94A0 84 A0 83 A0
 25+  94A4 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  94A8 80 A3 22 A0
 26+  94AC 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  94B0 40 60 42 60
 27+  94B4 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  94B8
 29+  94B8 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 30+  94BC 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 31+  94C0 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
 31+  94C4 84 00
 32+  94C6 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 32+  94CA 84 00
 33+  94CC 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 34+  94D0 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  94D4 1F 1F 1F 1F
 35+  94D8 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 35+  94DC 1F 1F 1F 1F
 35+  94E0 1F
 36+  94E1 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 36+  94E5 2F 2F 2F 2F
 36+  94E9 2F 2F
 37+  94EB 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 37+  94EF 2F 2F 00
 38+  94F2
 39+  94F2              ; ----- ----- ----- ----- -----
 40+  94F2
 41+  94F2 D0 94        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  94F4 CC 94        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  94F6 88 94        Indice_mov_Izquierda defw Izquierda
 44+  94F8 85 94        Indice_mov_Derecha defw Derecha
 45+  94FA 82 94        Indice_mov_Abajo defw Abajo
 46+  94FC 7F 94        Indice_mov_Arriba defw Arriba
 47+  94FE BC 94        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  9500 C0 94        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9502 B8 94        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  9504 C6 94        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9506 8B 94        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9508              ; ----- ----- ----- ----- -----
 53+  9508
 54+  9508 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  950B A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  950C 28 02            jr z,1F
 57+  950E 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  9510 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  9513 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  9515 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9518              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9518 2A C7 85         ld hl,(Puntero_mov)
 63+  951B 7E               ld a,(hl)
 64+  951C 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  951F 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  9520 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  9523
 68+  9523 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  9526 A7               and a
 70+  9527 20 0C            jr nz,12F
 71+  9529 2A C7 85         ld hl,(Puntero_mov)
 72+  952C 7E               ld a,(hl)
 73+  952D A7               and a
 74+  952E 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  9530 E6 0F            and $0f
 76+  9532 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  9535              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  9535 2A C7 85     12 ld hl,(Puntero_mov)
 79+  9538 CB 7E            bit 7,(hl)
 80+  953A 28 03            jr z,2F
 81+  953C CD 38 91         call Mov_down
 82+  953F 2A C7 85     2 ld hl, (Puntero_mov)
 83+  9542 CB 76            bit 6,(hl)
 84+  9544 28 03            jr z,3F
 85+  9546 CD 66 91         call Mov_up
 86+  9549 2A C7 85     3 ld hl, (Puntero_mov)
 87+  954C CB 6E            bit 5,(hl)
 88+  954E 28 03            jr z,4F
 89+  9550 CD 94 91         call Mov_right
 90+  9553 2A C7 85     4 ld hl, (Puntero_mov)
 91+  9556 CB 66            bit 4,(hl)
 92+  9558 28 03            jr z,5F
 93+  955A CD B2 92         call Mov_left
 94+  955D
 95+  955D              ; ---------- --------- --------- ---------- ----------
 96+  955D
 97+  955D 3A CB 85     5 ld a,(Repetimos_db)
 98+  9560 A7               and a
 99+  9561 28 07            jr z,6F
100+  9563 3D               dec a
101+  9564 32 CB 85         ld (Repetimos_db),a
102+  9567 28 01            jr z,6f
103+  9569 C9           11 ret
104+  956A 21 C9 85     6 ld hl,Contador_db_mov
105+  956D 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  956E 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  9571 23               inc hl
108+  9572 22 C7 85         ld (Puntero_mov),hl
109+  9575 18 F2            jr 11B
110+  9577 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  957A 3A CA 85         ld a,(Incrementa_puntero)
112+  957D 47               ld b,a
113+  957E 23           8 inc hl
114+  957F 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  9581 5E               ld e,(hl)
116+  9582 23               inc hl
117+  9583 56               ld d,(hl)
118+  9584 EB               ex de,hl
119+  9585 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9588 18 DF            jr 11B
121+  958A
122+  958A              ; ---------- --------- --------- ---------- ----------
123+  958A              ;
124+  958A              ;   11/8/22
125+  958A              ;
126+  958A              ;   Prepara_Puntero_mov
127+  958A
128+  958A E5           Prepara_Puntero_mov push hl
129+  958B D5               push de
130+  958C 2A C5 85         ld hl,(Puntero_indice_mov)
131+  958F 5E               ld e,(hl)
132+  9590 23               inc hl
133+  9591 56               ld d,(hl)
134+  9592 EB               ex de,hl
135+  9593 22 C7 85         ld (Puntero_mov),hl
136+  9596 D1               pop de
137+  9597 E1               pop hl
138+  9598 C9               ret
139+  9599
140+  9599              ; ---------- --------- --------- ---------- ----------
141+  9599              ;
142+  9599              ;   11/8/22
143+  9599              ;
144+  9599              ;   Reinicia_el_movimiento
145+  9599
146+  9599 CD 8A 95     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  959C AF               xor a
148+  959D 32 C9 85         ld (Contador_db_mov),a
149+  95A0 32 CA 85         ld (Incrementa_puntero),a
150+  95A3 C3 08 95         jp Movimiento
151+  95A6 C9               ret
152+  95A7              ; ---------- --------- --------- ---------- ----------
153+  95A7
154+  95A7
155+  95A7
156+  95A7
157+  95A7
158+  95A7
159+  95A7
160+  95A7
161+  95A7
162+  95A7
163+  95A7
164+  95A7
165+  95A7
166+  95A7
167+  95A7
168+  95A7
169+  95A7
170+  95A7
# file closed: Patrones_de_mov.asm
882   95A7              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  95A7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  95A7              ;
  3+  95A7              ;	3/1/23
  4+  95A7              ;
  5+  95A7              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  95A7
  7+  95A7              ;	ADC HL,SP	LD (addr),SP
  8+  95A7              ;	ADD HL,SP	LD SP,(addr)
  9+  95A7              ;	ADD IX,SP	LD SP,nn
 10+  95A7              ; 	ADD IY,SP	LD SP,HL
 11+  95A7              ;				LD SP,IX
 12+  95A7              ;	DEC SP		LD SP,IY
 13+  95A7
 14+  95A7              ;	EX (SP),HL
 15+  95A7              ;	EX (SP),IX
 16+  95A7              ;	EX (SP),IY
 17+  95A7
 18+  95A7              ;	INC SP
 19+  95A7
 20+  95A7
 21+  95A7                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
883   7FD4
884   7FD4              	SAVESNA "Pruebas.sna", START
885   7FD4
886   7FD4
887   7FD4
# file closed: Banco_de_pruebas.asm
