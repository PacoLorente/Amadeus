# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 1F 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 1C A0     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 47 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD 0F 91     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 45 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 45 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 48 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD 1F 91     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo_Amadeus defw Disparo_0
  12+ 8372 7C 83        	defw Disparo_f9
  13+ 8374 80 83        	defw Disparo_fb
  14+ 8376 84 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  19+ 837C              ; Disparo (CTRL_DESPLZ)="f9"
  20+ 837C 00 60        Disparo_f9 DEFB $00,$60
  21+ 837E 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  22+ 8380              ; Disparo (CTRL_DESPLZ)="fb"
  23+ 8380 18 00        Disparo_fb DEFB $18,$00
  24+ 8382 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  25+ 8384              ; Disparo (CTRL_DESPLZ)="fd"
  26+ 8384 06 00        Disparo_fd DEFB $06,$00
  27+ 8386 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  28+ 8388
  29+ 8388              ; ----------------------------------------------------------------------------------------
  30+ 8388
  31+ 8388              ; Badsat_izq. 2x2.
  32+ 8388
  33+ 8388 98 83        Indice_Badsat_izq defw Badsat_izquierda
  34+ 838A 00 85        	defw Badsat_izq_fe
  35+ 838C C0 84        	defw Badsat_izq_fd
  36+ 838E 90 84        	defw Badsat_izq_fc
  37+ 8390 60 84        	defw Badsat_izq_fb
  38+ 8392 30 84        	defw Badsat_izq_fa
  39+ 8394 00 84        	defw Badsat_izq_f9
  40+ 8396 C8 83        	defw Badsat_izq_f8
  41+ 8398
  42+ 8398 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  43+ 839B 02 14 00     	DEFB 	$02,$14,$00
  44+ 839E 02 2A 00     	DEFB 	$02,$2A,$00
  45+ 83A1 02 55 00     	DEFB 	$02,$55,$00
  46+ 83A4 02 AA 00     	DEFB	$02,$AA,$00
  47+ 83A7 02 54 00     	DEFB 	$02,$54,$00
  48+ 83AA 7F E8 00     	DEFB 	$7F,$E8,$00
  49+ 83AD 03 60 00     	DEFB 	$03,$60,$00
  50+ 83B0 0A E0 00     	DEFB	$0A,$E0,$00
  51+ 83B3 17 F8 00     	DEFB 	$17,$F8,$00
  52+ 83B6 2B E8 00     	DEFB 	$2B,$E8,$00
  53+ 83B9 54 40 00     	DEFB 	$54,$40,$00
  54+ 83BC AA 60 00     	DEFB	$AA,$60,$00
  55+ 83BF 54 00 00     	DEFB 	$54,$00,$00
  56+ 83C2 28 00 00     	DEFB 	$28,$00,$00
  57+ 83C5 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  58+ 83C8
  59+ 83C8 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  59+ 83CC 0A 00 01 15
  60+ 83D0 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  60+ 83D4 01 55 00 01
  61+ 83D8 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  61+ 83DC 00 01 B0 00
  62+ 83E0 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  62+ 83E4 FC 00 15 F4
  63+ 83E8 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  63+ 83EC 55 30 00 2A
  64+ 83F0 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  64+ 83F4 00 08 00 00
  65+ 83F8
  66+ 83F8              	org $8400
  67+ 8400
  68+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  68+ 8404 85 00 00 8A
  69+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  69+ 840C 00 AA 80 00
  70+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  70+ 8414 00 00 D8 00
  71+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  71+ 841C FE 00 0A FA
  72+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  72+ 8424 2A 98 00 15
  73+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  73+ 842C 00 04 00 00
  74+ 8430
  75+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  75+ 8434 42 80 00 45
  76+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  76+ 843C 00 55 40 00
  77+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  77+ 8444 00 00 6C 00
  78+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  78+ 844C FF 00 05 7D
  79+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  79+ 8454 15 4C 00 0A
  80+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  80+ 845C 00 02 00 00
  81+ 8460
  82+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  82+ 8464 21 40 00 22
  83+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  83+ 846C 00 2A A0 00
  84+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  84+ 8474 80 00 36 00
  85+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  85+ 847C 7F 80 02 BE
  86+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  86+ 8484 0A A6 00 05
  87+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  87+ 848C 00 01 00 00
  88+ 8490
  89+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  89+ 8494 10 A0 00 11
  90+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  90+ 849C 00 15 50 00
  91+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  91+ 84A4 40 00 1B 00
  92+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  92+ 84AC BF C0 01 5F
  93+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  93+ 84B4 05 53 00 02
  94+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  94+ 84BC 00 00 80 00
  95+ 84C0
  96+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  96+ 84C4 08 50 00 08
  97+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  97+ 84CC 00 0A A8 00
  98+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  98+ 84D4 A0 00 0D 80
  99+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  99+ 84DC 5F F8 00 AF
 100+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 100+ 84E4 02 A9 00 01
 101+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 101+ 84EC 00 00 40 00
 102+ 84F0
 103+ 84F0              	org $8500
 104+ 8500
 105+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 105+ 8504 04 28 00 04
 106+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 106+ 850C 00 05 54 00
 107+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 107+ 8514 D0 00 06 C0
 108+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 108+ 851C 2F FC 00 57
 109+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 109+ 8524 01 54 80 00
 110+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 110+ 852C 00 00 20 00
 111+ 8530
 112+ 8530
 113+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 114+ 8532 70 85        	defw Badsat_der_f8
 115+ 8534 A0 85        	defw Badsat_der_f9
 116+ 8536 D0 85        	defw Badsat_der_fa
 117+ 8538 00 86        	defw Badsat_der_fb
 118+ 853A 30 86        	defw Badsat_der_fc
 119+ 853C 60 86        	defw Badsat_der_fd
 120+ 853E 90 86        	defw Badsat_der_fe
 121+ 8540
 122+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 123+ 8543 28 40 00     	DEFB    $28,$40,$00
 124+ 8546 54 40 00     	DEFB	$54,$40,$00
 125+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 126+ 854C 55 40 00     	DEFB	$55,$40,$00
 127+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 128+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 129+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 130+ 8558 07 50 00     	DEFB	$07,$50,$00
 131+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 132+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 133+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 134+ 8564 06 55 00     	DEFB	$06,$55,$00
 135+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 136+ 856A 00 14 00     	DEFB	$00,$14,$00
 137+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 138+ 8570
 139+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 139+ 8574 20 00 2A 20
 140+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 140+ 857C 2A A0 00 15
 141+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 141+ 8584 00 03 60 00
 142+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 142+ 858C F4 00 0B EA
 143+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 143+ 8594 03 2A 80 00
 144+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 144+ 859C 00 00 04 00
 145+ 85A0
 146+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 146+ 85A4 10 00 15 10
 147+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 147+ 85AC 15 50 00 0A
 148+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 148+ 85B4 80 01 B0 00
 149+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 149+ 85BC FA 00 05 F5
 150+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 150+ 85C4 01 95 40 00
 151+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 151+ 85CC 00 00 02 00
 152+ 85D0
 153+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 153+ 85D4 08 00 0A 88
 154+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 154+ 85DC 0A A8 00 05
 155+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 155+ 85E4 C0 00 D8 00
 156+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 156+ 85EC FD 00 02 FA
 157+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 157+ 85F4 00 CA A0 00
 158+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 158+ 85FC 80 00 01 00
 159+ 8600
 160+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 160+ 8604 84 00 05 44
 161+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 161+ 860C 05 54 00 02
 162+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 162+ 8614 E0 00 6C 00
 163+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 163+ 861C FE 80 01 7D
 164+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 164+ 8624 00 65 50 00
 165+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 165+ 862C 40 00 00 80
 166+ 8630
 167+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 167+ 8634 42 00 02 A2
 168+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 168+ 863C 02 AA 00 01
 169+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 169+ 8644 F0 00 36 00
 170+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 170+ 864C FF 40 00 BE
 171+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 171+ 8654 00 32 A8 00
 172+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 172+ 865C A0 00 00 40
 173+ 8660
 174+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 174+ 8664 A1 00 01 51
 175+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 175+ 866C 01 55 00 00
 176+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 176+ 8674 F8 00 1B 00
 177+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 177+ 867C FF A0 00 1F
 178+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 178+ 8684 00 09 54 00
 179+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 179+ 868C 50 00 00 20
 180+ 8690
 181+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 181+ 8694 50 80 00 A8
 182+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 182+ 869C 00 AA 80 00
 183+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 183+ 86A4 FC 00 0D 80
 184+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 184+ 86AC FF D0 00 0F
 185+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 185+ 86B4 00 04 AA 00
 186+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 186+ 86BC 28 00 00 10
 187+ 86C0
 188+ 86C0              ; ----------------------------------------------------------------------------------------
 189+ 86C0
 190+ 86C0              ; Amadeus. 2x2.
 191+ 86C0
 192+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 193+ 86C2 00 00        	defw 0
 194+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 195+ 86C6 00 00        	defw 0
 196+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 197+ 86CA 00 00        	defw 0
 198+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 199+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 200+ 86D0
 201+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 202+ 86D2 00 00        	defw 0
 203+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 204+ 86D6 00 00        	defw 0
 205+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 206+ 86DA 00 00        	defw 0
 207+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 208+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 209+ 86E0
 210+ 86E0              	org $8700
 211+ 8700
 212+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 213+ 8703 23 C4 00     	DEFB	$23,$C4,0
 214+ 8706 26 64 00     	DEFB	$26,$64,0
 215+ 8709 24 24 00     	DEFB	$24,$24,0
 216+ 870C 2C 34 00     	DEFB	$2C,$34,0
 217+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 218+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 219+ 8715 67 E6 00     	DEFB	$67,$E6,0
 220+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 221+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 222+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 223+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 224+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 225+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 226+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 227+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 228+ 8730
 229+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 229+ 8734 F1 00 09 99
 230+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 230+ 873C 0B 0D 00 1B
 231+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 231+ 8744 80 19 F9 80
 232+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 232+ 874C F3 C0 3D FB
 233+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 233+ 8754 3E F7 C0 3E
 234+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 234+ 875C 40 1C 63 80
 235+ 8760
 236+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 236+ 8764 3C 40 02 66
 237+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 237+ 876C 02 C3 40 06
 238+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 238+ 8774 60 06 7E 60
 239+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 239+ 877C 3C F0 0F 7E
 240+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 240+ 8784 0F BD F0 0F
 241+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 241+ 878C 10 07 18 E0
 242+ 8790
 243+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 243+ 8794 8F 10 00 99
 244+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 244+ 879C 00 B0 D0 01
 245+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 245+ 87A4 D8 01 9F 98
 246+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 246+ 87AC CF 3C 03 DF
 247+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 247+ 87B4 03 EF 7C 03
 248+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 248+ 87BC 44 01 C6 38
 249+ 87C0
 250+ 87C0              ; ----------------------------------------------------------------------------------------
 251+ 87C0
 252+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 253+ 87C2 00 88        	defw Explosion_entidades_2
 254+ 87C4 30 88        	defw Explosion_entidades_3
 255+ 87C6
 256+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 257+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 258+ 87CC 04 38 40     	DEFB	$04,$38,$40
 259+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 260+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 261+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 262+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 263+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 264+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 265+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 266+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 267+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 268+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 269+ 87ED 03 00 40     	DEFB	$03,$00,$40
 270+ 87F0 04 00 00     	DEFB	$04,$00,$00
 271+ 87F3 08 00 00     	DEFB	$08,$00,$00
 272+ 87F6
 273+ 87F6              	org $8800
 274+ 8800
 275+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 275+ 8804 38 10 03 BC
 276+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 276+ 880C 04 06 C0 00
 277+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 277+ 8814 00 03 DD 80
 278+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 278+ 881C 3A 70 01 9C
 279+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 279+ 8824 04 F8 80 06
 280+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 280+ 882C 00 00 00 00
 281+ 8830
 282+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 282+ 8834 00 20 08 00
 283+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 283+ 883C 00 06 00 00
 284+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 284+ 8844 00 00 14 30
 285+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 285+ 884C 38 00 01 08
 286+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 286+ 8854 00 80 00 04
 287+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 287+ 885C 10 08 00 20
 288+ 8860
 289+ 8860              ; ------------------------------------------
 290+ 8860
 291+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 292+ 8862 96 88        	defw Explosion_Amadeus_2
 293+ 8864 C6 88        	defw Explosion_Amadeus_3
 294+ 8866
 295+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 296+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 297+ 886C 02 66 56     	DEFB	$02,$66,$56
 298+ 886F 02 42 48     	DEFB	$02,$42,$48
 299+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 300+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 301+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 302+ 887B 06 79 68     	DEFB	$06,$79,$68
 303+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 304+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 305+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 306+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 307+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 308+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 309+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 310+ 8893 07 19 80     	DEFB	$07,$19,$80
 311+ 8896
 312+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 313+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 314+ 889C 00 66 56     	DEFB	$00,$66,$56
 315+ 889F 04 42 48     	DEFB	$04,$42,$48
 316+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 317+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 318+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 319+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 320+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 321+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 322+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 323+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 324+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 325+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 326+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 327+ 88C3 07 19 80     	DEFB	$07,$19,$80
 328+ 88C6
 329+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 330+ 88C9 00 00 00     	DEFB	$00,$00,$00
 331+ 88CC 00 00 00     	DEFB	$00,$00,$00
 332+ 88CF 00 00 40     	DEFB	$00,$00,$40
 333+ 88D2 00 00 30     	DEFB	$00,$00,$30
 334+ 88D5 00 00 08     	DEFB	$00,$00,$08
 335+ 88D8 00 82 40     	DEFB	$00,$82,$40
 336+ 88DB 04 04 68     	DEFB	$04,$04,$68
 337+ 88DE 04 20 58     	DEFB	$04,$20,$58
 338+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 339+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 340+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 341+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 342+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 343+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 344+ 88F3 07 11 80     	DEFB	$07,$11,$80
 345+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F1 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 36 89        	defw Disparo_2
  40+ 8927 3B 89        	defw Disparo_3
  41+ 8929 40 89        	defw Disparo_4
  42+ 892B 45 89        	defw Disparo_5
  43+ 892D 4A 89        	defw Disparo_6
  44+ 892F 4F 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00           	db 0											; Control.
  49+ 8936
  50+ 8936 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8938 00 00        	defw 0											; Puntero de impresión.
  52+ 893A 00           	db 0											; Control.
  53+ 893B
  54+ 893B 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893D 00 00        	defw 0											; Puntero de impresión.
  56+ 893F 00           	db 0											; Control.
  57+ 8940
  58+ 8940 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8942 00 00        	defw 0											; Puntero de impresión.
  60+ 8944 00           	db 0											; Control.
  61+ 8945
  62+ 8945 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 8947 00 00        	defw 0											; Puntero de impresión.
  64+ 8949 00           	db 0											; Control.
  65+ 894A
  66+ 894A 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 894C 00 00        	defw 0											; Puntero de impresión.
  68+ 894E 00           	db 0											; Control.
  69+ 894F
  70+ 894F 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8951 00 00        	defw 0											; Puntero de impresión.
  72+ 8953 00           	db 0											; Control.
  73+ 8954
  74+ 8954              ; -------------------------------------------------------------------------------------
  75+ 8954              ;
  76+ 8954              ;	Índice de cajas de entidades.
  77+ 8954              ;
  78+ 8954              ;	18/1/24
  79+ 8954              ;
  80+ 8954
  81+ 8954              Indice_de_cajas_de_entidades
  82+ 8954
  83+ 8954 72 89        	defw Caja_1
  84+ 8956 7E 89        	defw Caja_2
  85+ 8958 8A 89        	defw Caja_3
  86+ 895A 96 89        	defw Caja_4
  87+ 895C A2 89        	defw Caja_5
  88+ 895E AE 89        	defw Caja_6
  89+ 8960 BA 89        	defw Caja_7
  90+ 8962
  91+ 8962 00 00        	defw 0
  92+ 8964 00 00        	defw 0
  93+ 8966
  94+ 8966              ; -------------------------
  95+ 8966
  96+ 8966              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8966
  98+ 8966              ;	db 0
  99+ 8966
 100+ 8966              ; ---------- ---------- ---------- ---------- ----------
 101+ 8966              ;
 102+ 8966              ;	28/05/24
 103+ 8966              ;
 104+ 8966              ; 	Cada caja tiene 14 bytes !!!
 105+ 8966              ;
 106+ 8966              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8966
 108+ 8966 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8967 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8969 00           	db 0												; (Contador_de_vueltas).
 111+ 896A 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 896B 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 896D 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 896F 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8971 00           	db 0												; (Velocidad).
 116+ 8972
 117+ 8972              ; ---------- ---------- ---------- ---------- ----------
 118+ 8972              ;
 119+ 8972              ;	22/01/24
 120+ 8972              ;
 121+ 8972              ; 	Cada caja tiene 12 bytes !!!
 122+ 8972
 123+ 8972 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8975 00           	db 0												; (Contador_de_vueltas).
 125+ 8976 00           	db 0												; (Impacto).
 126+ 8977 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8979 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 897B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 897D 00           	db 0												; (Velocidad).
 130+ 897E
 131+ 897E              ; ---------- ---------- ---------- ---------- ----------
 132+ 897E
 133+ 897E 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8981 00           	db 0 												; (Contador_de_vueltas).
 135+ 8982 00           	db 0												; (Impacto).
 136+ 8983 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8985 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8987 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8989 00           	db 0												; (Velocidad).
 140+ 898A
 141+ 898A              ; ---------- ---------- ---------- ---------- ----------
 142+ 898A
 143+ 898A 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 898D 00           	db 0 												; (Contador_de_vueltas).
 145+ 898E 00           	db 0												; (Impacto).
 146+ 898F 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8991 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 8993 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 8995 00           	db 0												; (Velocidad).
 150+ 8996
 151+ 8996              ; ---------- ---------- ---------- ---------- ----------
 152+ 8996
 153+ 8996 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 8999 00           	db 0 												; (Contador_de_vueltas).
 155+ 899A 00           	db 0												; (Impacto).
 156+ 899B 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 899D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 899F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A1 00           	db 0												; (Velocidad).
 160+ 89A2
 161+ 89A2              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A2
 163+ 89A2 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89A5 00           	db 0 												; (Contador_de_vueltas).
 165+ 89A6 00           	db 0												; (Impacto).
 166+ 89A7 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89A9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89AB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89AD 00           	db 0												; (Velocidad).
 170+ 89AE
 171+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 172+ 89AE
 173+ 89AE 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B1 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B2 00           	db 0												; (Impacto).
 176+ 89B3 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89B5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89B7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89B9 00           	db 0												; (Velocidad).
 180+ 89BA
 181+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 182+ 89BA
 183+ 89BA 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89BD 00           	db 0 												; (Contador_de_vueltas).
 185+ 89BE 00           	db 0												; (Impacto).
 186+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89C5 00           	db 0												; (Velocidad).
 190+ 89C6
 191+ 89C6              ; -------------------------------------------------------------------------------------
 192+ 89C6              ;
 193+ 89C6              ;	11/1/24
 194+ 89C6              ;
 195+ 89C6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89C6              ;
 197+ 89C6              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89C6              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89C6              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89C6              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89C6
 202+ 89C6              Indice_de_definiciones_de_entidades
 203+ 89C6
 204+ 89C6 CA 89        	defw Entidad_1
 205+ 89C8 D7 89        	defw Entidad_2
 206+ 89CA
 207+ 89CA              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89CA
 209+ 89CA              ;	BADSAT, (Satélite malvado).
 210+ 89CA
 211+ 89CA 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89CD 01           	db 1												; (Contador_de_vueltas).
 213+ 89CE 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D0 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D2 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89D4 01           	db 1												; (Cuad_objeto).
 217+ 89D5 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89D7
 219+ 89D7 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89DA 01           	db 1												; (Contador_de_vueltas).
 221+ 89DB 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89DD 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89DF 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E1 01           	db 1												; (Cuad_objeto).
 225+ 89E2 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89E4
 227+ 89E4              ; -------------------------------------------------------------------------------------
 228+ 89E4              ;
 229+ 89E4              ;	28/05/24
 230+ 89E4              ;
 231+ 89E4              ;	Definición de Amadeus.
 232+ 89E4              ;
 233+ 89E4              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89E4              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89E4
 236+ 89E4 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89E7 00           	db 0												; (Contador_de_vueltas).
 238+ 89E8 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89EA D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89EC C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89EE 03           	db 3												; (Cuad_objeto).
 242+ 89EF 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F1
   2+ 89F1
   3+ 89F1              ;   07/07/23
   4+ 89F1              ;
   5+ 89F1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F1              ;
   7+ 89F1              ;   Codificación:
   8+ 89F1              ;
   9+ 89F1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F1              ;
  11+ 89F1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F1              ;
  13+ 89F1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F1              ;
  15+ 89F1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F1              ;
  17+ 89F1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F1              ;                               ..... %01000010 Vel_up 4
  19+ 89F1              ;                                               Vel_down 2
  20+ 89F1              ;                               ..... $42
  21+ 89F1              ;
  22+ 89F1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F1              ;
  24+ 89F1              ;                               ..... %01000010 Vel_left 4
  25+ 89F1              ;                                               Vel_right 2
  26+ 89F1              ;                               ..... $42
  27+ 89F1              ;
  28+ 89F1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F1              ;
  30+ 89F1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F1              ;
  32+ 89F1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F1              ;
  34+ 89F1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F1              ;                                     $53
  36+ 89F1              ;
  37+ 89F1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F1              ;
  39+ 89F1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F1              ;
  42+ 89F1              ;                       Arriba ..... $81
  43+ 89F1              ;                       Arriba - izquierda ..... $a1
  44+ 89F1              ;                       Arriba - derecha ..... $91
  45+ 89F1              ;
  46+ 89F1              ;                       Abajo ..... $41
  47+ 89F1              ;                       Abajo - izquierda ..... $61
  48+ 89F1              ;                       Abajo - derecha ..... $51
  49+ 89F1              ;
  50+ 89F1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F1              ;
  52+ 89F1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F1              ;
  56+ 89F1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F1              ;
  61+ 89F1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F1              ;
  65+ 89F1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F1
  70+ 89F1              ; ----- ----- ----- ----- -----
  71+ 89F1
  72+ 89F1 1D 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89F3 25 8A            defw F_1
  74+ 89F5 2F 8A            defw F_2
  75+ 89F7 39 8A            defw Codo_abajo_derecha
  76+ 89F9 6D 8A            defw Derecha_y_subiendo
  77+ 89FB 77 8A            defw Derecha_y_subiendo_1
  78+ 89FD 81 8A            defw F_3
  79+ 89FF 8B 8A            defw F_4
  80+ 8A01 95 8A            defw Derecha_y_bajando
  81+ 8A03 9F 8A            defw Derecha_y_bajando_1
  82+ 8A05 A9 8A            defw Derecha_y_bajando_2
  83+ 8A07 B3 8A            defw Codo_derecha_abajo
  84+ 8A09 E3 8A            defw Codo_abajo_izq.
  85+ 8A0B 17 8B            defw Izquierda_y_subiendo
  86+ 8A0D 21 8B            defw Izquierda_y_subiendo_1
  87+ 8A0F 2B 8B            defw F_5
  88+ 8A11 35 8B            defw F_6
  89+ 8A13 3F 8B            defw Izquierda_y_bajando
  90+ 8A15 49 8B            defw Izquierda_y_bajando_1
  91+ 8A17 53 8B            defw Izquierda_y_bajando_2
  92+ 8A19 5D 8B            defw Codo_izquierda_abajo
  93+ 8A1B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A1D
  95+ 8A1D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A21 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A25
  98+ 8A25 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A29 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A2D 08 00
 100+ 8A2F
 101+ 8A2F 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A33 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A37 0F FE
 103+ 8A39
 104+ 8A39 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A3D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A41 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A45 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A4D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A55 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A59 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A5D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A61 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A65 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A69 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A6D
 118+ 8A6D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A71 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A75 06 00
 120+ 8A77
 121+ 8A77 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A7B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A7F 02 00
 123+ 8A81
 124+ 8A81 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A85 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A89 04 00
 126+ 8A8B
 127+ 8A8B 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A8F 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A93 08 00
 129+ 8A95
 130+ 8A95 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8A99 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8A9D 02 00
 132+ 8A9F
 133+ 8A9F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AA3 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AA7 06 00
 135+ 8AA9
 136+ 8AA9 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB1 06 00
 138+ 8AB3
 139+ 8AB3              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AB3
 141+ 8AB3 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AB7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8ABB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ABF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AC3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AC7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8ACB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ACF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AD3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AD7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8ADB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8ADF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AE3
 154+ 8AE3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AE7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AEB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AEF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AF3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AF7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8AFB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8AFF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B03 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B07 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B0B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B0F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B13 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B17
 168+ 8B17 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B1B 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B1F 06 00
 170+ 8B21
 171+ 8B21 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B29 02 00
 173+ 8B2B
 174+ 8B2B 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B2F 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B33 04 00
 176+ 8B35
 177+ 8B35 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B39 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B3D 08 00
 179+ 8B3F
 180+ 8B3F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B43 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B47 02 00
 182+ 8B49
 183+ 8B49 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B4D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B51 06 00
 185+ 8B53
 186+ 8B53 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B5B 06 00
 188+ 8B5D
 189+ 8B5D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B61 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B65 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B69 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B6D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B71 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B75 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B79 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B7D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B81 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B85 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B89 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B8D
 202+ 8B8D
 203+ 8B8D
 204+ 8B8D
 205+ 8B8D
 206+ 8B8D
 207+ 8B8D
 208+ 8B8D
 209+ 8B8D
 210+ 8B8D
# file closed: Patrones_de_mov.asm
 143  8B8D              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B8D              ; 19/1/24
   2+ 8B8D
   3+ 8B8D              Indice_de_niveles
   4+ 8B8D
   5+ 8B8D 95 8B        	defw Nivel_1
   6+ 8B8F 9B 8B        	defw Nivel_2
   7+ 8B91
   8+ 8B91              ;	...
   9+ 8B91              ;	...
  10+ 8B91              ;	+ Niveles ...
  11+ 8B91
  12+ 8B91 00 00        	defw 0
  13+ 8B93 00 00        	defw 0
  14+ 8B95
  15+ 8B95 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B96 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8B9A 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8B9B
  19+ 8B9B 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8B9C 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BA4 01 02
  22+ 8BA6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BAA 01 02
  23+ 8BAC
# file closed: Niveles.asm
 144  8BAC
 145  8BAC              ; --------------------------------------------------------------------------------
 146  8BAC              ;
 147  8BAC              ; 12/05/24
 148  8BAC              ;
 149  8BAC              ; Parámetros DRAW.
 150  8BAC              ;
 151  8BAC
 152  8BAC              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BAC
 154  8BAC 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BAD              ;															- Patrón de movimiento.
 156  8BAD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BAE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BAF
 159  8BAF 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BB0              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BB0
 162  8BB0              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BB0              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BB0              ; Ejemplos.
 165  8BB0
 166  8BB0              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BB0              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BB0              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BB0              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BB0              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BB0
 172  8BB0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BB1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BB1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BB1
 176  8BB1 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BB3              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BB3
 179  8BB3 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BB5
 181  8BB5              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BB5
 183  8BB5 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BB7              ;														; _palabras que componen el "movimiento_masticado".
 185  8BB7
 186  8BB7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BB7
 188  8BB7 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BB8              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BB8              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BB8              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BB8              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BB8
 194  8BB8 00           Ctrl_2 db 0
 195  8BB9              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BB9              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BB9              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BB9              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BB9              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BB9              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BB9              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BB9              ;
 203  8BB9              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BB9              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BB9              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BB9              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BB9              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BB9              ;														BIT 4, ???
 209  8BB9              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BB9
 211  8BB9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BBA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BBA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BBA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BBA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BBA              ;
 217  8BBA              ; 														DESCRIPCIÖN:
 218  8BBA              ;
 219  8BBA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BBA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BBA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BBA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BBA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BBA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BBA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BBA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BBA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BBA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BBA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BBA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BBA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BBA              ;
 233  8BBA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BBA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BBA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BBA
 237  8BBA              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BBA
 239  8BBA 00           Filas db 0												; Filas. [DRAW]
 240  8BBB 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BBC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BBE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BC0
 244  8BC0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BC0
 246  8BC0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BC1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BC1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BC1
 250  8BC1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BC1
 252  8BC1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BC1              ;
 254  8BC1              ;	COLORES: 0 ..... NEGRO
 255  8BC1              ;    		 1 ..... AZUL
 256  8BC1              ; 			 2 ..... ROJO
 257  8BC1              ;			 3 ..... MAGENTA
 258  8BC1              ; 			 4 ..... VERDE
 259  8BC1              ; 			 5 ..... CIAN
 260  8BC1              ;			 6 ..... AMARILLO
 261  8BC1              ; 			 7 ..... BLANCO
 262  8BC1
 263  8BC1 00 00        Indice_Sprite_der defw 0
 264  8BC3 00 00        Indice_Sprite_izq defw 0
 265  8BC5 00 00        Puntero_DESPLZ_der defw 0
 266  8BC7 00 00        Puntero_DESPLZ_izq defw 0
 267  8BC9
 268  8BC9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BCB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BCC 00           Columnas db 0
 271  8BCD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BCF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BCF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD0
 275  8BD0              ; variables de control general.
 276  8BD0
 277  8BD0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BD1
 279  8BD1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BD1
 281  8BD1              Perfiles_de_velocidad
 282  8BD1
 283  8BD1 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BD2 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BD3 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BD4 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BD5
 288  8BD5              ; Contadores de 16 bits.
 289  8BD5
 290  8BD5 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BD7 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BD9 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BDB 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BDD
 295  8BDD              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BDD
 297  8BDD 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BDF 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BE1 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BE3              ;
 301  8BE3              ;
 302  8BE3 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BE4              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BE4              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BE4 00           Incrementa_puntero_backup db 0
 306  8BE5 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BE6              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BE6 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BE7 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BE8 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BE9              ;
 312  8BE9              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BE9              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BE9              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BE9              ;
 316  8BE9              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BE9              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BE9              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BE9              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BE9              ;
 321  8BE9              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BE9              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BE9              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BE9
 325  8BE9 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BEA
 327  8BEA              ;														DESCRIPCIÓN:
 328  8BEA              ;
 329  8BEA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BEA              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BEA              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BEA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BEA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BEA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BEA
 336  8BEA              ;														BIT 3, Recarga de nueva oleada.
 337  8BEA              ;														BIT 4, Recarga de nueva oleada.
 338  8BEA              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BEA              ;														BIT 6, **** Frame completo.
 340  8BEA              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BEA
 342  8BEA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BEC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BEC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BEC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BEC
 347  8BEC              ; Gestión de ENTIDADES y CAJAS.
 348  8BEC
 349  8BEC 00 00        Puntero_store_caja defw 0
 350  8BEE 00 00        Puntero_restore_caja defw 0
 351  8BF0 00 00        Indice_restore_caja defw 0
 352  8BF2 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8BF3 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8BF4 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8BF5
 356  8BF5 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8BF7 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8BF9              ;														; _ puntero (Indice_entidades).
 359  8BF9
 360  8BF9              ;---------------------------------------------------------------------------------------------------------------
 361  8BF9              ;
 362  8BF9              ;	11/09/24
 363  8BF9              ;
 364  8BF9              ;	Álbumes.
 365  8BF9
 366  8BF9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8BFB              ;														; _variable para almacenar lo posición del puntero_
 368  8BFB              ; 														; _de pila, SP.
 369  8BFB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8BFD              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8BFD
 372  8BFD              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8BFD
 374  8BFD 00 00        Album_de_pintado defw 0
 375  8BFF 00 00        Album_de_borrado defw 0
 376  8C01 00 00        Album_de_pintado_Amadeus defw 0
 377  8C03 00 00        Album_de_borrado_Amadeus defw 0
 378  8C05 00 00        Album_de_pintado_disparos defw 0
 379  8C07 00 00        Album_de_borrado_disparos defw 0
 380  8C09
 381  8C09 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C0B 00           Num_de_bytes_album_de_disparos db 0
 383  8C0C 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C0D
 385  8C0D 00           Numero_de_disparos_de_entidades db 0
 386  8C0E
 387  8C0E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C0F 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C10
 390  8C10 00 00        Puntero_rancio_disparos_album defw 0
 391  8C12
 392  8C12 00 00        Techo_Scanlines_album defw 0
 393  8C14 00 00        Techo_Scanlines_album_2 defw 0
 394  8C16 00           Switch db 0
 395  8C17 00 00        Techo defw 0
 396  8C19 00 00        Scanlines_album_SP defw 0
 397  8C1B 00 89        India_SP defw Tabla_de_pintado
 398  8C1D 03 89        India_2_SP defw Tabla_de_pintado+3
 399  8C1F
 400  8C1F 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  8C20              ;
 402  8C20              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  8C20              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  8C20              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  8C20              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 406  8C20              ;																Habilita el borrado/pintado de sprites.
 407  8C20              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 408  8C20              ;																_ a la baja.
 409  8C20              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 410  8C20              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 411  8C20              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 412  8C20              ; 																_ el último frame de la explosión de nuestra nave.
 413  8C20              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 414  8C20              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 415  8C20
 416  8C20 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  8C21              ;
 418  8C21              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  8C21              ;
 420  8C21              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  8C21              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  8C21              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  8C21              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  8C21              ;
 425  8C21              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  8C21              ;															_ masticados ya generados.
 427  8C21              ;
 428  8C21              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  8C21              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  8C21              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  8C21              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  8C21
 433  8C21 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 434  8C22              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 435  8C22              ; Gestión de Disparos.
 436  8C22
 437  8C22 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 438  8C24
 439  8C24 00           Impacto2 db 0											; Byte de control de impactos.
 440  8C25
 441  8C25              ;
 442  8C25              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 443  8C25              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 444  8C25              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 445  8C25              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 446  8C25
 447  8C25
 448  8C25
 449  8C25
 450  8C25
 451  8C25
 452  8C25
 453  8C25 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 454  8C27              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 455  8C27              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 456  8C27
 457  8C27 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 458  8C29              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 459  8C29 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C2C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 461  8C2C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 462  8C2F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 463  8C2F
 464  8C2F              ;---------------------------------------------------------------------------------------------------------------
 465  8C2F
 466  8C2F              ; Relojes y temporizaciones.
 467  8C2F
 468  8C2F 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 469  8C30 05           Clock_explosion_Amadeus db 5
 470  8C31 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 471  8C32
 472  8C32 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 473  8C34 F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 474  8C36 00           DB_RND_disparos db 0
 475  8C37
 476  8C37 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 477  8C39 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 478  8C3A              ;														; Repite la oleada de entidades.
 479  8C3A 90           CLOCK_disparo_entidad_MASTER db $90						; Reloj, decreciente.
 480  8C3B 90           CLOCK_disparo_entidad db $90
 481  8C3C
 482  8C3C              ;---------------------------------------------------------------------------------------------------------------
 483  8C3C
 484  8C3C              ; Gestión de NIVELES.
 485  8C3C
 486  8C3C 00           Nivel db 0												; Nivel actual del juego.
 487  8C3D 00 00        Puntero_indice_NIVELES defw 0
 488  8C3F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 489  8C41              ; 														; _ que definen el NIVEL.
 490  8C41
 491  8C41              ; ---------------------------------------------------------------------------------------------------------------
 492  8C41
 493  8C41              ; Temporizaciones Shield.
 494  8C41
 495  8C41 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 496  8C45 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 497  8C47 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 498  8C48 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 499  8C49 00           Shield_3 db 0
 500  8C4A
 501  8C4A 06           Lives db 6
 502  8C4B
 503  8C4B              ; 	INICIO  *************************************************************************************************************************************************************************
 504  8C4B              ;
 505  8C4B              ;	5/1/24
 506  8C4B
 507  8C4B              START
 508  8C4B
 509  8C4B 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 510  8C4E 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 511  8C50 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 512  8C52 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 513  8C54 F3           	DI
 514  8C55
 515  8C55              ; Limpiamos pantalla.
 516  8C55
 517  8C55 3E 07        	ld a,%00000111
 518  8C57 CD AC 94     	call Cls
 519  8C5A CD 04 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 520  8C5D
 521  8C5D              ; INICIALIZACIÓN.
 522  8C5D
 523  8C5D 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 524  8C5F CD 51 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 525  8C62 CD 9B 8E     	call Extrae_numero_aleatorio_y_avanza
 526  8C65
 527  8C65 6F           	ld l,a
 528  8C66 26 00        	ld h,0
 529  8C68 22 37 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 530  8C6B
 531  8C6B              ;	Inicializa 1er Nivel.
 532  8C6B
 533  8C6B 21 8D 8B     	ld hl,Indice_de_niveles
 534  8C6E 22 3D 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 535  8C71 CD 81 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 536  8C74              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 537  8C74              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 538  8C74              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 539  8C74
 540  8C74              ;	Inicia los álbumes de líneas.
 541  8C74
 542  8C74 CD 54 90     	call Inicia_albumes_de_lineas
 543  8C77              ;
 544  8C77 CD 64 90     	call Inicia_albumes_de_lineas_Amadeus
 545  8C7A CD 71 90     	call Inicia_albumes_de_disparos
 546  8C7D
 547  8C7D CD 9A 90     	call Inicia_Puntero_Disparo_Entidades
 548  8C80
 549  8C80 CD C6 92     4 call Inicia_Entidades
 550  8C83 CD 29 93     	call Inicia_Amadeus
 551  8C86
 552  8C86              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 553  8C86              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 554  8C86              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 555  8C86
 556  8C86 11 66 89     	ld de,Amadeus_BOX
 557  8C89 CD 7C 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 558  8C8C CD 6C 93     	call Limpiamos_bandeja_DRAW
 559  8C8F
 560  8C8F              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 561  8C8F
 562  8C8F 06 3C        	ld b,60
 563  8C91 CD 4E 9D     2 call Amadeus_a_izquierda
 564  8C94 10 FB        	djnz 2B
 565  8C96
 566  8C96 CD 32 90     	call Genera_datos_de_impresion_Amadeus
 567  8C99
 568  8C99              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 569  8C99
 570  8C99 CD 84 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 571  8C9C              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 572  8C9C
 573  8C9C              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 574  8C9C              ; (Esto se dá cuando se inicia una nueva oleada).
 575  8C9C
 576  8C9C              ;	ld a,(Ctrl_1)
 577  8C9C              ;	bit 3,a
 578  8C9C              ;	jr nz,5F											 ; Loop
 579  8C9C
 580  8C9C              ;	ld de,Amadeus_db
 581  8C9C              ;	call Store_Amadeus
 582  8C9C
 583  8C9C              ; 	INICIA DISPAROS !!!!!
 584  8C9C
 585  8C9C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 586  8C9C
 587  8C9C              ;5 call Inicia_punteros_de_cajas
 588  8C9C              ;	call Restore_entidad
 589  8C9C
 590  8C9C              ;	ld a,(Ctrl_1)
 591  8C9C              ;	bit 3,a
 592  8C9C              ;	jr z,6F
 593  8C9C
 594  8C9C              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 595  8C9C
 596  8C9C              ;	ld hl,Ctrl_1
 597  8C9C              ;	res 3,(hl)
 598  8C9C              ;	jr Main
 599  8C9C
 600  8C9C              ; Damos por concluida la construcción del FRAME.
 601  8C9C              ;
 602  8C9C
 603  8C9C CD 0F 91     	call Inicia_Shield
 604  8C9F
 605  8C9F
 606  8C9F 2A 19 8C     6 ld hl,(Scanlines_album_SP)
 607  8CA2 22 12 8C     	ld (Techo_Scanlines_album),hl
 608  8CA5
 609  8CA5 2A FF 8B     	ld hl,(Album_de_borrado)
 610  8CA8 22 19 8C     	ld (Scanlines_album_SP),hl
 611  8CAB
 612  8CAB 21 00 89     	ld hl,Tabla_de_pintado
 613  8CAE 22 1B 8C     	ld (India_SP),hl
 614  8CB1
 615  8CB1 21 1F 8C     	ld hl,Ctrl_3
 616  8CB4 CB C6        	set 0,(hl) 											; Indica Frame completo.
 617  8CB6 CB D6        	set 2,(hl)
 618  8CB8 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 619  8CBA
 620  8CBA FB           	ei 													; Ha de apuntar a $5c3a.
 621  8CBB
 622  8CBB 76           	halt
 623  8CBC
 624  8CBC              ; ------------------------------------
 625  8CBC
 626  8CBC              Main
 627  8CBC              ;
 628  8CBC              ; 22/08/24
 629  8CBC
 630  8CBC              ; Gestión de disparos.
 631  8CBC
 632  8CBC CD 6E 9F     	call Limpia_album_de_borrado_disparos
 633  8CBF CD 82 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 634  8CC2 CD AA 9F     	call Motor_Disparos
 635  8CC5
 636  8CC5              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 637  8CC5              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 638  8CC5              ; Este hecho lo indica el bit2 de (Impacto2).
 639  8CC5
 640  8CC5 CD 68 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 641  8CC8
 642  8CC8              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 643  8CC8
 644  8CC8 21 3B 8C     	ld hl,CLOCK_disparo_entidad
 645  8CCB 35           	dec (hl)
 646  8CCC CC C5 8D     	call z,Autoriza_disparo_de_entidades
 647  8CCF
 648  8CCF 2A 37 8C     	ld hl,(Clock_next_entity)
 649  8CD2 ED 4B 78 5C  	ld bc,(FRAMES)
 650  8CD6 A7           	and a
 651  8CD7 ED 42        	sbc hl,bc
 652  8CD9 20 16        	jr nz,1F
 653  8CDB
 654  8CDB              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 655  8CDB              ; _ (Clock_next_entity) para la siguiente entidad.
 656  8CDB
 657  8CDB 3A F3 8B     	ld a,(Numero_parcial_de_entidades)
 658  8CDE 47           	ld b,a
 659  8CDF 3A F4 8B     	ld a,(Entidades_en_curso)
 660  8CE2 B8           	cp b
 661  8CE3 28 0C        	jr z,1F
 662  8CE5 30 0A        	jr nc,1F
 663  8CE7
 664  8CE7 3C           	inc a
 665  8CE8 32 F4 8B     	ld (Entidades_en_curso),a
 666  8CEB
 667  8CEB              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 668  8CEB
 669  8CEB CD 9B 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 670  8CEE CD B7 8E     	call Define_Clock_next_entity
 671  8CF1
 672  8CF1 3A F4 8B     1 ld a,(Entidades_en_curso)
 673  8CF4 A7           	and a
 674  8CF5 CA 73 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 675  8CF8 47           	ld b,a												; No hay entidades que gestionar.
 676  8CF9
 677  8CF9              ; ( Código que ejecutamos con cada entidad: ).
 678  8CF9
 679  8CF9              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 680  8CF9              ;
 681  8CF9              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 682  8CF9
 683  8CF9 21 00 89     	ld hl,Tabla_de_pintado
 684  8CFC 22 1B 8C     	ld (India_SP),hl
 685  8CFF
 686  8CFF 21 1F 8C     	ld hl,Ctrl_3
 687  8D02 CB D6        	set 2,(hl)
 688  8D04 CD 57 8E     	call Change
 689  8D07
 690  8D07 C5           2 push bc 												; Nº de entidades en curso.
 691  8D08
 692  8D08 CD DC 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 693  8D0B ED 5B 19 8C  	ld de,(Scanlines_album_SP)
 694  8D0F
 695  8D0F              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 696  8D0F
 697  8D0F              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 698  8D0F              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 699  8D0F
 700  8D0F 3A 24 8C     	ld a,(Impacto2)
 701  8D12 CB 5F        	bit 3,a
 702  8D14 C4 34 9F     	call nz,Compara_con_coordenadas_de_disparo
 703  8D17
 704  8D17 3A B0 8B     	ld a,(Impacto)
 705  8D1A CB 4F        	bit 1,a
 706  8D1C C4 EC 91     	call nz,Genera_explosion
 707  8D1F 20 31        	jr nz,Gestiona_siguiente_entidad
 708  8D21
 709  8D21 3A B0 8B     	ld a,(Impacto)
 710  8D24 A7           	and a
 711  8D25 28 0C        	jr z,3F
 712  8D27
 713  8D27              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D27
 715  8D27              ; 5/7/24
 716  8D27              ; Nota importante:
 717  8D27              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D27              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D27              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D27
 721  8D27 3A 6A 89     	ld a,(Impacto_Amadeus)
 722  8D2A A7           	and a
 723  8D2B C4 EC 91     	call nz,Genera_explosion
 724  8D2E 20 22        	jr nz,Gestiona_siguiente_entidad
 725  8D30
 726  8D30              ; Falsa colisión !!!
 727  8D30
 728  8D30 32 B0 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8D33
 730  8D33              ; -------------------------------------------
 731  8D33
 732  8D33 CD FB 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8D36 CD 37 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8D39 CD EB 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 735  8D3C CD EC 94     	call Genera_datos_de_impresion
 736  8D3F CD 8F 93     	call Decrementa_Contador_de_mov_masticados
 737  8D42
 738  8D42              ; -------------------------------------------
 739  8D42
 740  8D42              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 741  8D42
 742  8D42 2A B1 8B     	ld hl,(Puntero_de_impresion)
 743  8D45 CD C0 94     	call Genera_coordenadas
 744  8D48
 745  8D48              ; TODO: Generamos disparo ???
 746  8D48
 747  8D48 3A 0F 8C     	ld a,(Permiso_de_disparo_Entidades)
 748  8D4B A7           	and a
 749  8D4C C4 E7 8D     	call nz,Entidad_genera_disparo_si_procede
 750  8D4F
 751  8D4F CD E6 A0     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 752  8D52
 753  8D52              Gestiona_siguiente_entidad
 754  8D52
 755  8D52 CD 61 93      	call Store_Restore_cajas
 756  8D55 C1           	pop bc
 757  8D56 10 AF        	djnz 2B
 758  8D58
 759  8D58              ; Hemos gestionado todas las entidades.
 760  8D58
 761  8D58 AF           	xor a
 762  8D59 32 0F 8C     	ld (Permiso_de_disparo_Entidades),a							; Volvemos a deshabilitar el permiso de disparo para las entidades hasta que (CLOCK_disparo_entidad) llegue a "0".
 763  8D5C
 764  8D5C              ; ----- ----- -----
 765  8D5C
 766  8D5C CD 0F 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 767  8D5F CD 26 8F     	call Ordena_tabla_de_impresion
 768  8D62 CD 84 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 769  8D65
 770  8D65              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 771  8D65              ; Hemos gestionado todas las unidades.
 772  8D65              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 773  8D65
 774  8D65              ;	ld hl,Ctrl_1
 775  8D65              ;	res 2,(hl)
 776  8D65
 777  8D65 CD CC 8E     	call Borra_diferencia
 778  8D68
 779  8D68 3A 1F 8C     	ld a,(Ctrl_3)
 780  8D6B CB 5F        	bit 3,a
 781  8D6D 20 04        	jr nz,Gestion_de_Amadeus
 782  8D6F
 783  8D6F EB           	ex de,hl
 784  8D70 71           	ld (hl),c
 785  8D71 2C           	inc l
 786  8D72 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 787  8D73
 788  8D73
 789  8D73              ;! GESTIONA AMADEUS !!!!!!!!!!
 790  8D73
 791  8D73              Gestion_de_Amadeus
 792  8D73
 793  8D73 21 1F 8C     	ld hl,Ctrl_3
 794  8D76 CB 76        	bit 6,(hl)
 795  8D78 28 13        	jr z,Amadeus_vivo
 796  8D7A
 797  8D7A              ; Amadeus ha sido destruido.
 798  8D7A              ; Decrementa (Temp_new_live).
 799  8D7A
 800  8D7A 21 31 8C     	ld hl,Temp_new_live
 801  8D7D 35           	dec (hl)
 802  8D7E 20 26        	jr nz,End_frame
 803  8D80
 804  8D80              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 805  8D80
 806  8D80 21 4A 8C     	ld hl,Lives
 807  8D83 35           	dec (hl)
 808  8D84
 809  8D84              ;! Fin del juego
 810  8D84
 811  8D84 F3           	di
 812  8D85 28 FE        	jr z,$
 813  8D87 FB           	ei
 814  8D88
 815  8D88              ; Nueva nave.
 816  8D88
 817  8D88 CD FD 8D     	call Reinicia_Amadeus
 818  8D8B 18 19        	jr End_frame
 819  8D8D
 820  8D8D              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 821  8D8D
 822  8D8D              Amadeus_vivo
 823  8D8D
 824  8D8D 3A 6A 89     	ld a,(Impacto_Amadeus)
 825  8D90 A7           	and a
 826  8D91 C4 1C 92     	call nz, Genera_explosion_Amadeus
 827  8D94 20 10        	jr nz, End_frame
 828  8D96
 829  8D96 CD C9 91     	call Teclado
 830  8D99
 831  8D99 21 1F 8C     	ld hl,Ctrl_3
 832  8D9C CB 6E        	bit 5,(hl)
 833  8D9E 28 06        	jr z,End_frame
 834  8DA0
 835  8DA0              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 836  8DA0
 837  8DA0 CD 72 8E     	call Change_Amadeus
 838  8DA3 CD 32 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 839  8DA6
 840  8DA6              End_frame
 841  8DA6
 842  8DA6              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 843  8DA6              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 844  8DA6
 845  8DA6 CD 4D A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 846  8DA9 CD 84 9F     	call Calcula_bytes_pintado_disparos
 847  8DAC CD 91 9F     	call Limpia_album_de_pintado_disparos
 848  8DAF
 849  8DAF              ; ------------ ------------- --------------
 850  8DAF
 851  8DAF 2A FF 8B     	ld hl,(Album_de_borrado)
 852  8DB2 22 19 8C     	ld (Scanlines_album_SP),hl
 853  8DB5
 854  8DB5 21 1F 8C     	ld hl,Ctrl_3
 855  8DB8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8DBA CB 9E        	res 3,(hl)
 857  8DBC CB A6        	res 4,(hl)
 858  8DBE
 859  8DBE AF           	xor a
 860  8DBF D3 FE        	out ($fe),a
 861  8DC1
 862  8DC1 76           	halt
 863  8DC2
 864  8DC2              ; ----------------------------------------
 865  8DC2
 866  8DC2              ;	ld a,(Ctrl_1) 										; Existe Loop?
 867  8DC2              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 868  8DC2 CA BC 8C     	jp z,Main
 869  8DC5
 870  8DC5              ;------------------------------------------
 871  8DC5              ;
 872  8DC5              ;	14/09/24
 873  8DC5
 874  8DC5              Autoriza_disparo_de_entidades
 875  8DC5
 876  8DC5 3E 01        	ld a,1
 877  8DC7 32 0F 8C     	ld (Permiso_de_disparo_Entidades),a
 878  8DCA
 879  8DCA 3A 3A 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 880  8DCD 32 3B 8C     	ld (CLOCK_disparo_entidad),a
 881  8DD0
 882  8DD0 2A 34 8C     	ld hl,(RND_SP_Disparos)
 883  8DD3
 884  8DD3 7E           2 ld a,(hl)
 885  8DD4 A7           	and a
 886  8DD5 28 08        	jr z,1F
 887  8DD7
 888  8DD7 32 36 8C     	ld (DB_RND_disparos),a
 889  8DDA 23           	inc hl
 890  8DDB 22 34 8C     	ld (RND_SP_Disparos),hl
 891  8DDE
 892  8DDE C9           	ret
 893  8DDF
 894  8DDF 21 F6 88     1	ld hl,Numeros_aleatorios
 895  8DE2 22 34 8C     	ld (RND_SP_Disparos),hl
 896  8DE5 18 EC        	jr 2B
 897  8DE7
 898  8DE7              ;------------------------------------------
 899  8DE7              ;
 900  8DE7              ;	14/09/24
 901  8DE7              ;
 902  8DE7              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 903  8DE7
 904  8DE7              Entidad_genera_disparo_si_procede
 905  8DE7
 906  8DE7 3A F4 8B     	ld a,(Entidades_en_curso)
 907  8DEA A7           	and a
 908  8DEB C8           	ret z
 909  8DEC
 910  8DEC 3A 36 8C     	ld a,(DB_RND_disparos)
 911  8DEF CB 4F        	bit 1,a
 912  8DF1 F5           	push af											; Guardamos FLAGS.
 913  8DF2
 914  8DF2 17           	rla
 915  8DF3 17           	rla
 916  8DF4
 917  8DF4 32 36 8C     	ld (DB_RND_disparos),a
 918  8DF7
 919  8DF7 F1           	pop af
 920  8DF8 C4 FB 9E     	call nz,Genera_disparo_de_entidad_maldosa
 921  8DFB
 922  8DFB C9           	ret
 923  8DFC
 924  8DFC
 925  8DFC              ; RECARGA DE NUEVA OLEADA.
 926  8DFC
 927  8DFC              ;	ld a,(Contador_de_frames)
 928  8DFC              ;	ld b,a
 929  8DFC              ;	ld a,(Activa_recarga_cajas)
 930  8DFC              ;	cp b
 931  8DFC              ;	jr z,20F
 932  8DFC
 933  8DFC              ;	ld hl,Ctrl_1
 934  8DFC              ;	set 4,(hl)
 935  8DFC              ;	jp Main
 936  8DFC
 937  8DFC              ;20 ld hl,Ctrl_1
 938  8DFC              ;	res 4,(hl)
 939  8DFC
 940  8DFC              ;	ld a,(Contador_de_frames)
 941  8DFC
 942  8DFC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 943  8DFC              ;! _ IMPREDECIBLE !!!!
 944  8DFC
 945  8DFC              ;	add 10
 946  8DFC              ;	ld (Clock_next_entity),a
 947  8DFC
 948  8DFC              ;	jp 4B
 949  8DFC
 950  8DFC C9           	ret
 951  8DFD
 952  8DFD              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 953  8DFD              ;
 954  8DFD              ;	16/11/23
 955  8DFD
 956  8DFD              ;;Gestiona_Amadeus
 957  8DFD
 958  8DFD              ;! Activa/desactiva impacto con Amadeus.
 959  8DFD
 960  8DFD              ;	ld a,(Impacto)
 961  8DFD              ;	and a
 962  8DFD              ;	jr nz,2F
 963  8DFD
 964  8DFD              ;;	call Mov_Amadeus
 965  8DFD
 966  8DFD              ;;2 ld a,(Ctrl_0)
 967  8DFD              ;;	bit 4,a
 968  8DFD              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 969  8DFD
 970  8DFD              ;;	call Guarda_foto_entidad_a_pintar
 971  8DFD              ;;	call Guarda_datos_de_borrado_Amadeus
 972  8DFD
 973  8DFD              ;;1 ld hl,Ctrl_0
 974  8DFD              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 975  8DFD
 976  8DFD              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 977  8DFD
 978  8DFD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 979  8DFD
 980  8DFD              ;	call Calcula_numero_de_disparotes
 981  8DFD
 982  8DFD              ;;	ret
 983  8DFD
 984  8DFD              ; -----------------------------
 985  8DFD              ;
 986  8DFD              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 987  8DFD              ;
 988  8DFD              ;	INPUTS: B a de estar a "0".
 989  8DFD
 990  8DFD              ;Prepara_Borra_sprites
 991  8DFD
 992  8DFD              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 993  8DFD              ;	ld a,l
 994  8DFD              ;	ret z
 995  8DFD
 996  8DFD              ;	srl a
 997  8DFD
 998  8DFD              ;2 sub 16
 999  8DFD              ;	jr z,1F
1000  8DFD              ;	inc b
1001  8DFD              ;	jr 2B
1002  8DFD
1003  8DFD              ;1 inc b
1004  8DFD
1005  8DFD              ;	exx
1006  8DFD              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1007  8DFD              ;	exx
1008  8DFD
1009  8DFD              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1010  8DFD              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1011  8DFD
1012  8DFD              ;	ret
1013  8DFD
1014  8DFD              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1015  8DFD              ;
1016  8DFD              ;	24/07/24
1017  8DFD
1018  8DFD              Reinicia_Amadeus
1019  8DFD
1020  8DFD              ;	Reinicia posición y estado.
1021  8DFD
1022  8DFD 21 CF 50     	ld hl,$50cf
1023  8E00 22 6B 89     	ld (p.imp.amadeus),hl
1024  8E03 21 F0 E0     	ld hl,$e0f0
1025  8E06 22 6D 89     	ld (Pamm_Amadeus),hl
1026  8E09 21 3D 00     	ld hl,$003d
1027  8E0C 22 6F 89     	ld (Comm_Amadeus),hl
1028  8E0F
1029  8E0F              ;	limpiamos el álbum de borrado.
1030  8E0F
1031  8E0F 2A 03 8C     	ld hl,(Album_de_borrado_Amadeus)
1032  8E12
1033  8E12 AF           	xor a
1034  8E13 77           	ld (hl),a
1035  8E14
1036  8E14 E5           	push hl
1037  8E15 D1           	pop de
1038  8E16 13           	inc de
1039  8E17
1040  8E17 01 23 00     	ld bc,35
1041  8E1A ED B0        	ldir
1042  8E1C
1043  8E1C CD 32 90     	call Genera_datos_de_impresion_Amadeus
1044  8E1F
1045  8E1F              ;	Reinicia temporizaciones.
1046  8E1F
1047  8E1F CD 0F 91     	call Inicia_Shield
1048  8E22
1049  8E22 3E 5A        	ld a,90
1050  8E24 32 47 8C     	ld (Shield),a
1051  8E27
1052  8E27 3E 64        	ld a,100
1053  8E29 32 31 8C     	ld (Temp_new_live),a
1054  8E2C
1055  8E2C              ; 	Restauramos el FLAG: Amadeus vivo.
1056  8E2C
1057  8E2C 21 1F 8C     	ld hl,Ctrl_3
1058  8E2F CB B6        	res 6,(hl)
1059  8E31
1060  8E31              ;	Fuerza la impresión de la nave en el siguiente frame.
1061  8E31
1062  8E31 21 1F 8C      	ld hl,Ctrl_3
1063  8E34 CB EE        	set 5,(hl)
1064  8E36
1065  8E36 C9           	ret
1066  8E37
1067  8E37              ; --------------------------------------------------------------------------------------------------------------
1068  8E37              ;
1069  8E37              ;	12/05/24
1070  8E37
1071  8E37 3A B7 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1072  8E3A CB 27        	sla a
1073  8E3C 32 B7 8B     	ld (Velocidad),a
1074  8E3F E6 10        	and $10
1075  8E41 C8           	ret z
1076  8E42
1077  8E42              ; Restaura (Velocidad) a razón del nº de vueltas.
1078  8E42
1079  8E42 3A AF 8B     	ld a,(Contador_de_vueltas)
1080  8E45 CB 2F        	sra a
1081  8E47 CB 2F        	sra a
1082  8E49 32 B7 8B     	ld (Velocidad),a
1083  8E4C
1084  8E4C 2A B3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1085  8E4F 23           	inc hl
1086  8E50 23           	inc hl
1087  8E51 23           	inc hl
1088  8E52 23           	inc hl
1089  8E53 22 B3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1090  8E56
1091  8E56 C9           	ret
1092  8E57
1093  8E57              ; --------------------------------------------------------------------------------------------------------------
1094  8E57              ;
1095  8E57              ;	25/08/24
1096  8E57
1097  8E57              Change
1098  8E57
1099  8E57 3A 16 8C     	ld a,(Switch)
1100  8E5A EE 01        	xor 1
1101  8E5C 32 16 8C     	ld (Switch),a
1102  8E5F 2A FD 8B     	ld hl,(Album_de_pintado)
1103  8E62 ED 5B FF 8B  	ld de,(Album_de_borrado)
1104  8E66 EB           	ex de,hl
1105  8E67 22 FD 8B     	ld (Album_de_pintado),hl
1106  8E6A 22 19 8C     	ld (Scanlines_album_SP),hl
1107  8E6D ED 53 FF 8B  	ld (Album_de_borrado),de
1108  8E71 C9           	ret
1109  8E72
1110  8E72              Change_Amadeus
1111  8E72
1112  8E72 2A 01 8C     	ld hl,(Album_de_pintado_Amadeus)
1113  8E75 ED 5B 03 8C  	ld de,(Album_de_borrado_Amadeus)
1114  8E79 EB           	ex de,hl
1115  8E7A 22 01 8C     	ld (Album_de_pintado_Amadeus),hl
1116  8E7D ED 53 03 8C  	ld (Album_de_borrado_Amadeus),de
1117  8E81 C9           	ret
1118  8E82
1119  8E82              Change_Disparos
1120  8E82
1121  8E82 2A 05 8C     	ld hl,(Album_de_pintado_disparos)
1122  8E85 ED 5B 07 8C  	ld de,(Album_de_borrado_disparos)
1123  8E89 EB           	ex de,hl
1124  8E8A 22 05 8C     	ld (Album_de_pintado_disparos),hl
1125  8E8D ED 53 07 8C  	ld (Album_de_borrado_disparos),de
1126  8E91 22 09 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1127  8E94
1128  8E94 3A 0B 8C     	ld a,(Num_de_bytes_album_de_disparos)
1129  8E97 32 0C 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1130  8E9A
1131  8E9A C9           	ret
1132  8E9B
1133  8E9B              ; ------------------------------------
1134  8E9B              ;
1135  8E9B              ; 1/05/24
1136  8E9B
1137  8E9B              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1138  8E9B              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1139  8E9B
1140  8E9B              ;	DESTRUYE: HL,DE,A
1141  8E9B              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1142  8E9B
1143  8E9B              ;	Variables implicadas: (RND_SP).
1144  8E9B
1145  8E9B              Extrae_numero_aleatorio_y_avanza
1146  8E9B
1147  8E9B 21 00 89     	ld hl,Tabla_de_pintado
1148  8E9E EB           	ex de,hl
1149  8E9F 2A 32 8C     	ld hl,(RND_SP)
1150  8EA2 EB           	ex de,hl
1151  8EA3 A7           	and a
1152  8EA4 ED 52        	sbc hl,de
1153  8EA6
1154  8EA6 2A 32 8C     	ld hl,(RND_SP)
1155  8EA9 20 06        	jr nz,1F
1156  8EAB
1157  8EAB              ; Sitúa HL al principio de la tabla de nº aleatorios.
1158  8EAB
1159  8EAB 21 F6 88     	ld hl,Numeros_aleatorios
1160  8EAE 22 32 8C     	ld (RND_SP),HL
1161  8EB1
1162  8EB1              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1163  8EB1
1164  8EB1 7E           1 ld a,(hl)
1165  8EB2 23           	inc hl
1166  8EB3 22 32 8C     	ld (RND_SP),hl
1167  8EB6 C9           	ret
1168  8EB7
1169  8EB7              ; ------------------------------------
1170  8EB7              ;
1171  8EB7              ; 1/05/24
1172  8EB7
1173  8EB7              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1174  8EB7              ; (1 a 4 segundos).
1175  8EB7              ; Actualizamos (Clock_next_entity) con A.
1176  8EB7
1177  8EB7              ;	DESTRUYE: A y B.
1178  8EB7              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1179  8EB7              ;			 Actualiza (Clock_next_entity) con A.
1180  8EB7
1181  8EB7              ;	Variables implicadas: (Clock_next_entity).
1182  8EB7
1183  8EB7              ; Notas:
1184  8EB7
1185  8EB7              ; 	$32 1 seg.
1186  8EB7              ; 	$64 2 seg.
1187  8EB7              ; 	$96 3 seg.
1188  8EB7              ; 	$c8 4 seg.
1189  8EB7              ; 	$fa 5 seg.
1190  8EB7
1191  8EB7              ; $ffff 1310,7 seg, 22 minutos.
1192  8EB7
1193  8EB7              ;	$0100  5 seg. aproximadamente.
1194  8EB7              ;	$0200 10 seg. aproximadamente.
1195  8EB7              ;	$0300 15 seg. aproximadamente.
1196  8EB7              ;	$0400 20 seg. aproximadamente.
1197  8EB7              ;	$0500 25 seg. aproximadamente.
1198  8EB7              ;	$0600 30 seg. aproximadamente.
1199  8EB7
1200  8EB7              Define_Clock_next_entity
1201  8EB7
1202  8EB7 FE 34        	cp $34
1203  8EB9 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1204  8EBB
1205  8EBB              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1206  8EBB
1207  8EBB 4F           3 ld c,a
1208  8EBC 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1209  8EBE 2A 78 5C     	ld hl,(FRAMES)
1210  8EC1 A7           	and a
1211  8EC2 ED 4A        	adc hl,bc
1212  8EC4 22 37 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1213  8EC7 C9           	ret
1214  8EC8
1215  8EC8 3E 34        1 ld a,$34
1216  8ECA 18 EF        	jr 3B
1217  8ECC
1218  8ECC              ; ------------------------------------
1219  8ECC              ;
1220  8ECC              ; 18/03/24
1221  8ECC
1222  8ECC              Borra_diferencia
1223  8ECC
1224  8ECC ED 4B 19 8C  	ld bc,(Scanlines_album_SP)
1225  8ED0
1226  8ED0 3A 16 8C     	ld a,(Switch)
1227  8ED3 A7           	and a
1228  8ED4 28 08        	jr z,2F
1229  8ED6
1230  8ED6 2A 14 8C     	ld hl,(Techo_Scanlines_album_2)
1231  8ED9 11 14 8C     	ld de,Techo_Scanlines_album_2
1232  8EDC 18 06        	jr 3F
1233  8EDE
1234  8EDE 2A 12 8C     2 ld hl,(Techo_Scanlines_album)
1235  8EE1 11 12 8C     	ld de,Techo_Scanlines_album
1236  8EE4
1237  8EE4              ; Diferencia.
1238  8EE4
1239  8EE4 ED 42        3 sbc hl,bc
1240  8EE6
1241  8EE6 C8           	ret z
1242  8EE7 D8           	ret c
1243  8EE8
1244  8EE8              ; Nuevo techo, (más bajo que el anterior).
1245  8EE8              ; Fijamos nuevo techo y borramos bytes sobrantes.
1246  8EE8
1247  8EE8 EB           	ex de,hl
1248  8EE9
1249  8EE9 71           	ld (hl),c
1250  8EEA 2C           	inc l
1251  8EEB 70           	ld (hl),b
1252  8EEC
1253  8EEC AF           	xor a
1254  8EED 43           	ld b,e
1255  8EEE
1256  8EEE 2A 19 8C     	ld hl,(Scanlines_album_SP)
1257  8EF1
1258  8EF1 77           1 ld (hl),a
1259  8EF2 23           	inc hl
1260  8EF3 10 FC        	djnz 1B
1261  8EF5
1262  8EF5              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1263  8EF5
1264  8EF5 21 1F 8C     	ld hl,Ctrl_3
1265  8EF8 CB DE        	set 3,(hl)
1266  8EFA
1267  8EFA C9           	ret
1268  8EFB
1269  8EFB              ; --------------------------------------------------------------------------------------------------------------
1270  8EFB              ;
1271  8EFB              ;	26/3/24
1272  8EFB
1273  8EFB              Recauda_informacion_de_entidad_en_curso
1274  8EFB
1275  8EFB              ; Almacena la Coordenada Y de la entidad en curso.
1276  8EFB
1277  8EFB              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1278  8EFB
1279  8EFB 3A AE 8B     	ld a,(Coordenada_y)
1280  8EFE 2A 1B 8C     	ld hl,(India_SP)
1281  8F01 77           	ld (hl),a
1282  8F02 2C           	inc l
1283  8F03
1284  8F03              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1285  8F03
1286  8F03 ED 5B 19 8C  	ld de,(Scanlines_album_SP)
1287  8F07
1288  8F07 73           	ld (hl),e
1289  8F08 2C           	inc l
1290  8F09 72           	ld (hl),d
1291  8F0A 2C           	inc l
1292  8F0B
1293  8F0B 22 1B 8C     	ld (India_SP),hl
1294  8F0E
1295  8F0E C9           	ret
1296  8F0F
1297  8F0F              ; --------------------------------------------------------------------------------------------------------------
1298  8F0F              ;
1299  8F0F              ;	27/03/24
1300  8F0F              ;
1301  8F0F
1302  8F0F              Inicializa_India_y_limpia_Tabla_de_impresion
1303  8F0F
1304  8F0F 2A 1B 8C     	ld hl,(India_SP)
1305  8F12 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1306  8F15
1307  8F15 79           	ld a,c
1308  8F16 95           	sub l
1309  8F17 28 06        	jr z,2F
1310  8F19 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1311  8F1A              ;														; _ y pasamos a inicializar (India_SP).
1312  8F1A AF           	xor a
1313  8F1B
1314  8F1B 77           1 ld (hl),a
1315  8F1C 2C           	inc l
1316  8F1D 10 FC        	djnz 1B												; Limpia Tabla.
1317  8F1F
1318  8F1F 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1319  8F22 22 1B 8C     	ld (India_SP),hl
1320  8F25
1321  8F25 C9           	ret
1322  8F26
1323  8F26              ; --------------------------------------------------------------------------------------------------------------
1324  8F26              ;
1325  8F26              ;	31/3/24
1326  8F26
1327  8F26              Ordena_tabla_de_impresion
1328  8F26
1329  8F26              ; 5794 T/states.
1330  8F26              ; 6278 T/states.
1331  8F26              ; 5310 T/states.
1332  8F26
1333  8F26              ; Inicializamos punteros (India_SP) e (India_2_SP).
1334  8F26              ; Inicializamos contador de comparaciones, [C].
1335  8F26              ; Cargamos los registros A y B para efectuar comparación.
1336  8F26
1337  8F26 FD 2E 00     	ld iyl,0
1338  8F29
1339  8F29 3A F4 8B     	ld a,(Entidades_en_curso)
1340  8F2C FE 04        	cp 4 	;	4
1341  8F2E D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1342  8F2F
1343  8F2F 3D           	dec a
1344  8F30 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1345  8F31 51           	ld d,c 										; Copia de respaldo.
1346  8F32
1347  8F32 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1348  8F33
1349  8F33 21 03 89     	ld hl,Tabla_de_pintado+3
1350  8F36 46           	ld b,(hl)
1351  8F37 22 1D 8C     	ld (India_2_SP),hl
1352  8F3A
1353  8F3A B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1354  8F3B DC 63 8F     	call c, Avanza_India_2_SP
1355  8F3E CC 63 8F     	call z, Avanza_India_2_SP
1356  8F41
1357  8F41 FD 2D        	dec iyl
1358  8F43 28 18        	jr z,2F
1359  8F45
1360  8F45
1361  8F45              ; --------------------------------------------------------------------------------------------------------------
1362  8F45              ;
1363  8F45              ;	7/4/24
1364  8F45
1365  8F45              Trueque
1366  8F45
1367  8F45              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1368  8F45              ;  			A contiene en nº de fila de (India_SP).
1369  8F45              ;			HL contiene (India_2_SP).
1370  8F45
1371  8F45 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1372  8F46 E5           	push hl										; Preservo (India_2_SP).
1373  8F47
1374  8F47 ED 5B 1B 8C  	ld de,(India_SP)
1375  8F4B EB           	ex de,hl
1376  8F4C 70           	ld (hl),b
1377  8F4D 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1378  8F4E
1379  8F4E CD 8F 8F     	call Intercambia_1_byte
1380  8F51 CD 8F 8F     	call Intercambia_1_byte
1381  8F54
1382  8F54
1383  8F54              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1384  8F54              ; Recuperamos (India_2_SP) en HL.
1385  8F54
1386  8F54 2A 1B 8C     	ld hl,(India_SP)
1387  8F57 7E           	ld a,(hl)
1388  8F58
1389  8F58 E1           	pop hl
1390  8F59 D1           	pop de
1391  8F5A
1392  8F5A              ; --------------------------------------------------------------------------------------------------------------
1393  8F5A
1394  8F5A CD 63 8F     	call Avanza_India_2_SP
1395  8F5D
1396  8F5D 14           2 inc d
1397  8F5E 15           	dec d
1398  8F5F C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1399  8F60 18 D8        	jr 1B
1400  8F62
1401  8F62 C9           	ret
1402  8F63
1403  8F63              ; ----- ----- ----- ----- -----
1404  8F63
1405  8F63              Avanza_India_2_SP
1406  8F63
1407  8F63 0D           	dec c
1408  8F64 28 0A        	jr z,Avanza_punteros_indios
1409  8F66
1410  8F66 FD 2C        	inc iyl
1411  8F68
1412  8F68 2C           	inc l
1413  8F69 2C           	inc l
1414  8F6A 2C           	inc l
1415  8F6B
1416  8F6B 46           	ld b,(hl)
1417  8F6C 22 1D 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1418  8F6F
1419  8F6F C9           	ret
1420  8F70
1421  8F70              ; ----- ----- ----- ----- -----
1422  8F70
1423  8F70              Avanza_punteros_indios
1424  8F70
1425  8F70 15           	dec d
1426  8F71 28 15        	jr z,Prepara_salida
1427  8F73
1428  8F73 4A           	ld c,d
1429  8F74
1430  8F74 2A 1B 8C     	ld hl,(India_SP)
1431  8F77 2C           	inc l
1432  8F78 2C           	inc l
1433  8F79 2C           	inc l
1434  8F7A 7E           	ld a,(hl)
1435  8F7B 22 1B 8C     	ld (India_SP),hl
1436  8F7E
1437  8F7E 2C           	inc l
1438  8F7F 2C           	inc l
1439  8F80 2C           	inc l
1440  8F81 46           	ld b,(hl)
1441  8F82 22 1D 8C     	ld (India_2_SP),hl
1442  8F85
1443  8F85 FD 2C        	inc iyl
1444  8F87
1445  8F87 C9           	ret
1446  8F88
1447  8F88              Prepara_salida
1448  8F88
1449  8F88 21 00 89     	ld hl,Tabla_de_pintado
1450  8F8B 22 1B 8C     	ld (India_SP),hl
1451  8F8E C9           	ret
1452  8F8F
1453  8F8F
1454  8F8F 2C           Intercambia_1_byte inc l
1455  8F90 1C           	inc e
1456  8F91 46           	ld b,(hl)
1457  8F92 1A           	ld a,(de)
1458  8F93 EB           	ex de,hl
1459  8F94 70           	ld (hl),b
1460  8F95 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1461  8F96 C9           	ret
1462  8F97
1463  8F97              ; -----------------------------------------------------------------------------------
1464  8F97              ;
1465  8F97              ;	20/01/24
1466  8F97              ;
1467  8F97              ;
1468  8F97
1469  8F97              Construye_movimientos_masticados_entidad
1470  8F97
1471  8F97 2A B3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1472  8F9A E5           	push hl
1473  8F9B CD DE 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1474  8F9E              ;															; _ el (Contador_de_mov_masticados).
1475  8F9E CD A7 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1476  8FA1              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1477  8FA1 CD D4 99     	call Recompone_posicion_inicio
1478  8FA4
1479  8FA4 CD 04 97     1 call Draw
1480  8FA7 CD C3 8F     	call Guarda_movimiento_masticado
1481  8FAA
1482  8FAA CD 81 9D     	call Movimiento
1483  8FAD
1484  8FAD 3A 1F 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1485  8FB0 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1486  8FB2 28 F0        	jr z,1B
1487  8FB4
1488  8FB4              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1489  8FB4              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1490  8FB4
1491  8FB4 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1492  8FB5 22 B3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1493  8FB8
1494  8FB8              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1495  8FB8
1496  8FB8 CD E5 9E     	call Situa_en_contador_general_de_mov_masticados
1497  8FBB
1498  8FBB              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1499  8FBB              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1500  8FBB
1501  8FBB ED 4B B5 8B  	ld bc,(Contador_de_mov_masticados)
1502  8FBF
1503  8FBF 71           	ld (hl),c
1504  8FC0 23           	inc hl
1505  8FC1 70           	ld (hl),b
1506  8FC2
1507  8FC2 C9           	ret
1508  8FC3
1509  8FC3              ; -----------------------------------------------------------------------------------
1510  8FC3              ;
1511  8FC3              ;	28/12/23
1512  8FC3              ;
1513  8FC3              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1514  8FC3              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1515  8FC3
1516  8FC3              Guarda_movimiento_masticado
1517  8FC3
1518  8FC3 ED 73 F9 8B  	ld (Stack),sp
1519  8FC7 ED 7B B3 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1520  8FCB
1521  8FCB DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1522  8FCD FD E5            push iy 												; Pushea Puntero_objeto.
1523  8FCF
1524  8FCF ED 7B F9 8B      ld sp,(Stack)
1525  8FD3
1526  8FD3 2A B5 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1527  8FD6 23           	inc hl
1528  8FD7 22 B5 8B     	ld (Contador_de_mov_masticados),hl
1529  8FDA
1530  8FDA CD DE 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1531  8FDD              ;															; _ el (Contador_de_mov_masticados).
1532  8FDD C9               ret
1533  8FDE
1534  8FDE              ; --------------------------------------------------------------------------------------------------------------
1535  8FDE              ;
1536  8FDE              ;	12/1/24
1537  8FDE              ;
1538  8FDE              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1539  8FDE
1540  8FDE              Actualiza_Puntero_de_almacen_de_mov_masticados
1541  8FDE
1542  8FDE 2A B3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1543  8FE1 01 04 00     	ld bc,4
1544  8FE4 A7           	and a
1545  8FE5 ED 4A        	adc hl,bc
1546  8FE7 22 B3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1547  8FEA C9           	ret
1548  8FEB
1549  8FEB              ; --------------------------------------------------------------------------------------------------------------
1550  8FEB              ;
1551  8FEB              ;	24/03/24
1552  8FEB              ;
1553  8FEB              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1554  8FEB              ;
1555  8FEB              ;	IX contiene el puntero de impresión.
1556  8FEB              ;	DE contiene (Puntero_objeto).
1557  8FEB
1558  8FEB
1559  8FEB              Cargamos_registros_con_mov_masticado
1560  8FEB
1561  8FEB ED 73 F9 8B  	ld (Stack),sp
1562  8FEF ED 7B B3 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1563  8FF3
1564  8FF3 D1           	pop de 															; DE contiene Puntero_objeto
1565  8FF4 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1566  8FF6
1567  8FF6 ED 73 B3 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1568  8FFA ED 7B F9 8B  	ld sp,(Stack)
1569  8FFE
1570  8FFE 7B           	ld a,e
1571  8FFF 82           	add d															; Comprueba si ya no hay datos en el almacén.
1572  9000
1573  9000 CC 97 93     	call z,Reinicia_entidad_maliciosa
1574  9003
1575  9003 C9           	ret
1576  9004
1577  9004              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1578  9004              ;
1579  9004              ;	22/7/24
1580  9004
1581  9004              Cargamos_registros_con_explosion
1582  9004
1583  9004
1584  9004 2A B3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1585  9007 CD A1 90     	call Extrae_address
1586  900A
1587  900A 5D           	ld e,l
1588  900B 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1589  900C
1590  900C DD 2A B1 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1591  9010
1592  9010 C9           	ret
1593  9011
1594  9011
1595  9011              Cargamos_registros_con_explosion_Amadeus
1596  9011
1597  9011 2A 6D 89     	ld hl,(Pamm_Amadeus)
1598  9014 CD A1 90     	call Extrae_address
1599  9017
1600  9017 5D           	ld e,l
1601  9018 54           	ld d,h
1602  9019
1603  9019 DD 2A 6B 89  	ld ix,(p.imp.amadeus)
1604  901D
1605  901D C9           	ret
1606  901E
1607  901E              ; --------------------------------------------------------------------------------------------------------------
1608  901E              ;
1609  901E              ;	17/06/24
1610  901E              ;
1611  901E              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1612  901E              ;
1613  901E              ;	IX contiene el puntero de impresión.
1614  901E              ;	DE contiene (Puntero_objeto).
1615  901E
1616  901E
1617  901E              Cargamos_registros_con_mov_masticado_Amadeus
1618  901E
1619  901E ED 73 F9 8B  	ld (Stack),sp
1620  9022 ED 7B 6D 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1621  9026 D1           	pop de 															; DE contiene Puntero_objeto
1622  9027 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1623  9029 DD 22 6B 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1624  902D ED 7B F9 8B  	ld sp,(Stack)
1625  9031 C9           	ret
1626  9032
1627  9032              ; ---------------------------------------------------------------------------------------------------------------------
1628  9032              ;
1629  9032              ;	18/6/24
1630  9032              ;
1631  9032              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1632  9032
1633  9032              Genera_datos_de_impresion_Amadeus
1634  9032
1635  9032 3A 6A 89     	ld a,(Impacto_Amadeus)
1636  9035 A7           	and a
1637  9036 20 03        	jr nz,1F
1638  9038
1639  9038              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1640  9038              ; _apuntando a la correspondiente explosión.
1641  9038
1642  9038 CD 1E 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1643  903B
1644  903B DD 7D        1 ld a,ixl
1645  903D E6 1F        	and $1f
1646  903F 32 67 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1647  9042
1648  9042 2A 19 8C     	ld hl,(Scanlines_album_SP)
1649  9045 E5           	push hl
1650  9046
1651  9046 2A 01 8C     	ld hl,(Album_de_pintado_Amadeus)
1652  9049 22 19 8C     	ld (Scanlines_album_SP),hl
1653  904C
1654  904C CD EC 94     	call Genera_datos_de_impresion
1655  904F
1656  904F E1           	pop hl
1657  9050 22 19 8C     	ld (Scanlines_album_SP),hl
1658  9053
1659  9053 C9           	ret
1660  9054
1661  9054              ; ---------------------------------------------------------------------------------------------------------------------
1662  9054              ;
1663  9054              ;	13/03/24
1664  9054              ;
1665  9054              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1666  9054
1667  9054              Inicia_albumes_de_lineas
1668  9054
1669  9054 21 00 80     	ld hl,Scanlines_album
1670  9057 22 FD 8B     	ld (Album_de_pintado),hl
1671  905A 22 19 8C     	ld (Scanlines_album_SP),hl
1672  905D
1673  905D 21 1A 81     	ld hl,Scanlines_album_2
1674  9060 22 FF 8B     	ld (Album_de_borrado),hl
1675  9063
1676  9063 C9           	ret
1677  9064
1678  9064              Inicia_albumes_de_lineas_Amadeus
1679  9064
1680  9064 21 34 82     	ld hl,Amadeus_scanlines_album
1681  9067 22 01 8C     	ld (Album_de_pintado_Amadeus),hl
1682  906A 21 58 82     	ld hl,Amadeus_scanlines_album_2
1683  906D 22 03 8C     	ld (Album_de_borrado_Amadeus),hl
1684  9070
1685  9070 C9           	ret
1686  9071
1687  9071              Inicia_albumes_de_disparos
1688  9071
1689  9071 21 7C 82     	ld hl,Disparos_scanlines_album
1690  9074 22 05 8C     	ld (Album_de_pintado_disparos),hl
1691  9077 21 B8 82     	ld hl,Disparos_scanlines_album_2
1692  907A 22 07 8C     	ld (Album_de_borrado_disparos),hl
1693  907D
1694  907D 21 7C 82     	ld hl,Disparos_scanlines_album
1695  9080 22 09 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1696  9083
1697  9083 C9           	ret
1698  9084
1699  9084              ; ---------------------------------------------------------------------------------------------------------------------
1700  9084              ;
1701  9084              ; 8/1/23
1702  9084              ;
1703  9084              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1704  9084              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1705  9084              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1706  9084
1707  9084              ; Destruye HL y DE !!!!!
1708  9084
1709  9084              Inicia_punteros_de_cajas
1710  9084
1711  9084 21 54 89     	ld hl,Indice_de_cajas_de_entidades
1712  9087 CD A1 90         call Extrae_address
1713  908A 22 EC 8B         ld (Puntero_store_caja),hl
1714  908D 21 56 89     	ld hl,Indice_de_cajas_de_entidades+2
1715  9090 22 F0 8B     	ld (Indice_restore_caja),hl
1716  9093 CD A1 90     	call Extrae_address
1717  9096 22 EE 8B     	ld (Puntero_restore_caja),hl
1718  9099 C9               ret
1719  909A
1720  909A              ; *************************************************************************************************************************************************************
1721  909A              ;
1722  909A              ; 8/1/23
1723  909A              ;
1724  909A              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1725  909A
1726  909A 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1727  909D 22 22 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1728  90A0 C9           	ret
1729  90A1
1730  90A1              ; *************************************************************************************************************************************************************
1731  90A1              ;
1732  90A1              ; 20/10/22
1733  90A1              ;
1734  90A1              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1735  90A1              ;
1736  90A1              ; Destruye el puntero y DE !!!!!
1737  90A1
1738  90A1 5E           Extrae_address ld e,(hl)
1739  90A2 23           	inc hl
1740  90A3 56           	ld d,(hl)
1741  90A4 2B           	dec hl
1742  90A5 EB           	ex de,hl
1743  90A6 C9           	ret
1744  90A7
1745  90A7              ; *************************************************************************************************************************************************************
1746  90A7              ;
1747  90A7              ;	20/1/24
1748  90A7              ;
1749  90A7              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1750  90A7              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1751  90A7              ;
1752  90A7              ;   Destruye HL y BC !!!!!,
1753  90A7              ;
1754  90A7              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1755  90A7              ;					"0" ..... Izquierda.
1756  90A7
1757  90A7              Inicia_Puntero_objeto
1758  90A7
1759  90A7 3A CB 8B     	ld a,(Cuad_objeto)
1760  90AA E6 01        	and 1
1761  90AC F5           	push af
1762  90AD CC C9 90     	call z,Inicia_puntero_objeto_izq
1763  90B0 F1           	pop af
1764  90B1 C8           	ret z
1765  90B2 CD B6 90     	call Inicia_puntero_objeto_der
1766  90B5 C9           	ret
1767  90B6
1768  90B6              ; Arrancamos desde la parte izquierda de la pantalla.
1769  90B6              ; Iniciamos (Indice_Sprite_der).
1770  90B6
1771  90B6 2A C1 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1772  90B9 22 C5 8B     	ld (Puntero_DESPLZ_der),hl
1773  90BC CD A1 90     	call Extrae_address
1774  90BF 22 BE 8B     	ld (Puntero_objeto),hl
1775  90C2
1776  90C2 2A C3 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1777  90C5 22 C7 8B     	ld (Puntero_DESPLZ_izq),hl
1778  90C8 C9           	ret
1779  90C9
1780  90C9              ; Arrancamos desde la parte derecha de la pantalla.
1781  90C9              ; Iniciamos (Indice_Sprite_izq).
1782  90C9
1783  90C9 2A C3 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1784  90CC 22 C7 8B     	ld (Puntero_DESPLZ_izq),hl
1785  90CF CD A1 90     	call Extrae_address
1786  90D2 22 BE 8B     	ld (Puntero_objeto),hl
1787  90D5
1788  90D5 2A C1 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1789  90D8 22 C5 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1790  90DB C9           	ret
1791  90DC
1792  90DC              ; **************************************************************************************************
1793  90DC              ;
1794  90DC              ;	06/07/24
1795  90DC              ;
1796  90DC              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1797  90DC
1798  90DC              Restore_entidad
1799  90DC
1800  90DC 2A EC 8B     	ld hl,(Puntero_store_caja)
1801  90DF 7E           	ld a,(hl)
1802  90E0 A7           	and a
1803  90E1 CC EF 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1804  90E4 28 F6        	jr z,Restore_entidad
1805  90E6
1806  90E6 11 AC 8B     	ld de,Bandeja_DRAW
1807  90E9 01 0C 00     	ld bc,12
1808  90EC ED B0        	ldir
1809  90EE C9           	ret
1810  90EF
1811  90EF              ; **************************************************************************************************
1812  90EF              ;
1813  90EF              ;	08/05/23
1814  90EF              ;
1815  90EF              ;	Incrementamos los dos punteros de entidades. (+1).
1816  90EF
1817  90EF              Incrementa_punteros_de_cajas
1818  90EF
1819  90EF 2A EE 8B     	ld hl,(Puntero_restore_caja)
1820  90F2 22 EC 8B     	ld (Puntero_store_caja),hl
1821  90F5 2A F0 8B     	ld hl,(Indice_restore_caja)
1822  90F8 23           	inc hl
1823  90F9 23           	inc hl
1824  90FA 22 F0 8B     	ld (Indice_restore_caja),hl
1825  90FD CD A1 90         call Extrae_address
1826  9100 22 EE 8B         ld (Puntero_restore_caja),hl
1827  9103 C9               ret
1828  9104
1829  9104              ; -----------------------------------------------------------
1830  9104
1831  9104              ; Teclado.
1832  9104
1833  9104 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1834  9106 DB FE        	in a,($fe)
1835  9108 E6 01        	and $01
1836  910A 28 02        	jr z,1f
1837  910C 18 F6        	jr Pulsa_ENTER
1838  910E C9           1 ret
1839  910F
1840  910F              ; **************************************************************************************************
1841  910F              ;
1842  910F              ; Temporización.
1843  910F
1844  910F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1845  910F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1846  910F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1847  910F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1848  910F
1849  910F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1850  910F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1851  910F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1852  910F
1853  910F              ; A partir de $4f61 no hace falta DELAY.
1854  910F
1855  910F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1856  910F
1857  910F              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1858  910F              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1859  910F              ;	LD A,B
1860  910F              ;	AND A
1861  910F              ;	JR NZ,wait
1862  910F              ;	RET
1863  910F
1864  910F              ; ---------------------------------------------------------------------------------------------------------------
1865  910F              ;
1866  910F              ;	13/07/24
1867  910F              ;
1868  910F
1869  910F              Inicia_Shield
1870  910F
1871  910F 21 41 8C     	ld hl,Datos_Shield
1872  9112 22 45 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1873  9115
1874  9115 7E           	ld a,(hl)
1875  9116 32 48 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1876  9119
1877  9119 3E 01        	ld a,1
1878  911B 32 49 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1879  911E
1880  911E C9           	ret
1881  911F
1882  911F              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1883  911F              ;
1884  911F              ;	4/6/24
1885  911F              ;
1886  911F              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1887  911F              ;
1888  911F              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1889  911F              ;
1890  911F
1891  911F              Actualiza_pantalla
1892  911F
1893  911F 3E 02        	ld a,2
1894  9121 D3 FE        	out ($fe),a
1895  9123
1896  9123 3A 1F 8C     	ld a,(Ctrl_3)
1897  9126 CB 57        	bit 2,a
1898  9128 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1899  912A
1900  912A              Borrando_entidades
1901  912A
1902  912A 2A 19 8C     	ld hl,(Scanlines_album_SP)
1903  912D CD A1 90     	call Extrae_address
1904  9130 24           	inc h
1905  9131 25           	dec h
1906  9132 28 05        	jr z,Pintando_entidades
1907  9134 CD E1 95     	call Pinta_Sprites
1908  9137 18 F1        	jr Borrando_entidades
1909  9139
1910  9139              Pintando_entidades
1911  9139
1912  9139 2A 1B 8C     	ld hl,(India_SP)
1913  913C 2C           	inc l
1914  913D CD A1 90     	call Extrae_address
1915  9140 24           	inc h
1916  9141 25           	dec h
1917  9142 28 0E        	jr z,Ejecuta_escudo
1918  9144 1C           	inc e
1919  9145 1C           	inc e
1920  9146 ED 53 1B 8C  	ld (India_SP),de
1921  914A CD A1 90     	call Extrae_address
1922  914D CD E1 95     	call Pinta_Sprites
1923  9150 18 E7        	jr Pintando_entidades
1924  9152
1925  9152              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1926  9152
1927  9152              Ejecuta_escudo
1928  9152
1929  9152 3A 47 8C     	ld a,(Shield)
1930  9155 A7           	and a
1931  9156 20 2F        	jr nz,Aplica_Shield
1932  9158
1933  9158              Borrando_Amadeus
1934  9158
1935  9158 21 1F 8C     	ld hl,Ctrl_3
1936  915B CB 6E        	bit 5,(hl)
1937  915D 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1938  915F
1939  915F 2A 03 8C     	ld hl,(Album_de_borrado_Amadeus)
1940  9162 CD A1 90     	call Extrae_address
1941  9165 24           	inc h
1942  9166 25           	dec h
1943  9167 28 03        	jr z,Pintando_Amadeus
1944  9169 CD E1 95     	call Pinta_Sprites
1945  916C
1946  916C              Pintando_Amadeus
1947  916C
1948  916C 2A 01 8C     	ld hl,(Album_de_pintado_Amadeus)
1949  916F CD A1 90     	call Extrae_address
1950  9172 24           	inc h
1951  9173 25           	dec h
1952  9174 28 03        	jr z,1F
1953  9176 CD E1 95     	call Pinta_Sprites
1954  9179
1955  9179              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1956  9179
1957  9179 21 1F 8C     1 ld hl,Ctrl_3
1958  917C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1959  917E CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1960  9180 CB AE        	res 5,(hl)
1961  9182
1962  9182 3E 01        	ld a,1												; Borde azul.
1963  9184 D3 FE        	out ($fe),a
1964  9186
1965  9186 C9           	ret
1966  9187
1967  9187              Aplica_Shield
1968  9187
1969  9187              ;	Bit 1 "1" (Shield_3) Sólo borra.
1970  9187              ;		  "0"     ""     Borra/Pinta.
1971  9187              ;	Bit 2    ""  RET.	 No borra, no pinta.
1972  9187
1973  9187 21 49 8C     	ld hl,Shield_3
1974  918A
1975  918A CB 5E        	bit 3,(hl)
1976  918C 20 DE        	jr nz,Pintando_Amadeus
1977  918E
1978  918E CB 56        	bit 2,(hl)
1979  9190 20 E7        	jr nz,1B
1980  9192
1981  9192 CB 4E        	bit 1,(hl)
1982  9194 C4 9B 91     	call nz,Borra_Amadeus_shield
1983  9197
1984  9197 28 BF        	jr z,Borrando_Amadeus
1985  9199 18 DE        	jr 1B
1986  919B
1987  919B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1988  919B
1989  919B              Borra_Amadeus_shield
1990  919B
1991  919B 3A 1F 8C     	ld a,(Ctrl_3)
1992  919E CB 6F        	bit 5,a
1993  91A0 28 08        	jr z,1F
1994  91A2
1995  91A2 2A 03 8C     	ld hl,(Album_de_borrado_Amadeus)
1996  91A5 CD A1 90     	call Extrae_address
1997  91A8 18 06        	jr 2F
1998  91AA
1999  91AA 2A 01 8C     1 ld hl,(Album_de_pintado_Amadeus)
2000  91AD CD A1 90     	call Extrae_address
2001  91B0
2002  91B0 CD E1 95     2 call Pinta_Sprites
2003  91B3
2004  91B3 AF           	xor a
2005  91B4 3C           	inc a											; Asegura NZ en la salida de la rutina.
2006  91B5
2007  91B5 C9           	ret
2008  91B6
2009  91B6              Pinta_Amadeus_shield
2010  91B6
2011  91B6 2A 01 8C     	ld hl,(Album_de_pintado_Amadeus)
2012  91B9 CD A1 90     	call Extrae_address
2013  91BC CD E1 95     	call Pinta_Sprites
2014  91BF
2015  91BF AF           	xor a
2016  91C0 3C           	inc a											; Asegura NZ en la salida de la rutina.
2017  91C1
2018  91C1 C9           	ret
2019  91C2
2020  91C2              Borra_Pinta_Amadeus_shield
2021  91C2
2022  91C2 CD 9B 91     	call Borra_Amadeus_shield
2023  91C5 CD B6 91     	call Pinta_Amadeus_shield
2024  91C8 C9           	ret
2025  91C9
2026  91C9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2027  91C9              ;
2028  91C9              ;	19/6/24
2029  91C9              ;
2030  91C9
2031  91C9              Teclado
2032  91C9
2033  91C9              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2034  91C9
2035  91C9 3E F7        	ld a,$f7												; "5" para disparar.
2036  91CB DB FE        	in a,($fe)
2037  91CD E6 10        	and $10
2038  91CF
2039  91CF CC 70 A0     	call z,Genera_disparo_Amadeus
2040  91D2
2041  91D2 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2042  91D4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2043  91D6 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2044  91D8 CC 4E 9D         call z,Amadeus_a_izquierda
2045  91DB
2046  91DB 3E F7        	ld a,$f7
2047  91DD DB FE        	in a,($fe)
2048  91DF E6 01        	and $01
2049  91E1 C8           	ret z
2050  91E2
2051  91E2 3E F7        	ld a,$f7
2052  91E4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2053  91E6 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2054  91E8 CC 66 9D     	call z,Amadeus_a_derecha
2055  91EB
2056  91EB C9           	ret
2057  91EC
2058  91EC              ; ------------------------------------------------------------------------------------------------------------------------
2059  91EC              ;
2060  91EC              ;	06/07/24
2061  91EC              ;
2062  91EC
2063  91EC              Genera_explosion
2064  91EC
2065  91EC 21 2F 8C     	ld hl,Clock_explosion
2066  91EF 35           	dec (hl)
2067  91F0 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2068  91F2
2069  91F2              Borra_entidad_colisionada
2070  91F2
2071  91F2 CD FB 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2072  91F5 CD 04 90     	call Cargamos_registros_con_explosion
2073  91F8 CD EC 94     	call Genera_datos_de_impresion
2074  91FB
2075  91FB AF           	xor a
2076  91FC 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2077  91FD
2078  91FD C9           	ret
2079  91FE
2080  91FE              Siguiente_frame_explosion
2081  91FE
2082  91FE 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2083  9200
2084  9200              ; Avanza Frame de explosión.
2085  9200
2086  9200 2A B3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2087  9203 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2088  9206
2089  9206 79           	ld a,c
2090  9207 95           	sub l
2091  9208 20 0B        	jr nz,1F
2092  920A
2093  920A              ; Fín de la entidad !!!!!!!!!!!!!
2094  920A
2095  920A 21 F3 8B     	ld hl,Numero_parcial_de_entidades
2096  920D 35           	dec (hl)
2097  920E 23           	inc hl
2098  920F 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2099  9210
2100  9210 CD 6C 93     	call Limpiamos_bandeja_DRAW
2101  9213 18 DD        	jr Borra_entidad_colisionada
2102  9215
2103  9215 23           1 inc hl
2104  9216 23           	inc hl
2105  9217 22 B3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2106  921A 18 D6        	jr Borra_entidad_colisionada
2107  921C
2108  921C              ; ----- ----- ----- ----- -----
2109  921C
2110  921C              Genera_explosion_Amadeus
2111  921C
2112  921C 21 30 8C     	ld hl,Clock_explosion_Amadeus
2113  921F 35           	dec (hl)
2114  9220 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2115  9222
2116  9222              Borra_Amadeus_impactado
2117  9222
2118  9222 CD 72 8E     	call Change_Amadeus
2119  9225 CD 11 90     	call Cargamos_registros_con_explosion_Amadeus
2120  9228 CD 32 90     	call Genera_datos_de_impresion_Amadeus
2121  922B
2122  922B 21 1F 8C     	ld hl,Ctrl_3
2123  922E CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2124  9230
2125  9230 AF           	xor a
2126  9231 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2127  9232
2128  9232 C9           	ret
2129  9233
2130  9233              Siguiente_frame_explosion_Amadeus
2131  9233
2132  9233 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2133  9235
2134  9235              ; Avanza Frame de explosión.
2135  9235
2136  9235 2A 6D 89     	ld hl,(Pamm_Amadeus)
2137  9238 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2138  923B
2139  923B 79           	ld a,c
2140  923C 95           	sub l
2141  923D 20 0B        	jr nz,1F
2142  923F
2143  923F              ; Fín de Amadeus !!!!!!!!!!!!!
2144  923F              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2145  923F
2146  923F AF           	xor a
2147  9240 32 6A 89     	ld (Impacto_Amadeus),a
2148  9243 21 1F 8C     	ld hl,Ctrl_3
2149  9246 CB F6        	set 6,(hl)
2150  9248
2151  9248 18 D8        	jr Borra_Amadeus_impactado
2152  924A
2153  924A 23           1 inc hl
2154  924B 23           	inc hl
2155  924C 22 6D 89     	ld (Pamm_Amadeus),hl
2156  924F 18 D1        	jr Borra_Amadeus_impactado
2157  9251
2158  9251              ; ---------------------------------------------------------------
2159  9251
2160  9251              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9251              ; ******************************************************************************************************************************************************************************************
   2+ 9251              ;
   3+ 9251              ;   21/04/24
   4+ 9251              ;
   5+ 9251              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9251              ;   (XOR) bit a bit.
   7+ 9251              ;
   8+ 9251              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9251
  10+ 9251              Derivando_RND
  11+ 9251
  12+ 9251 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9254
  14+ 9254 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9256 C5               push bc
  16+ 9257              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9257 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 925A              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 925A
  20+ 925A A7           6 and a                                 ; Carry a "0".
  21+ 925B CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 925D 30 02            jr nc,1F
  23+ 925F
  24+ 925F CB C1            set 0,c
  25+ 9261
  26+ 9261 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9262 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9264 5F               ld e,a
  29+ 9265
  30+ 9265 7A               ld a,d
  31+ 9266 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9268 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 926A
  34+ 926A CB 3F            srl a
  35+ 926C
  36+ 926C AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 926D
  38+ 926D 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 926E 28 04            jr z,4F
  40+ 9270
  41+ 9270 CB FF            set 7,a
  42+ 9272 18 02            jr 5F
  43+ 9274
  44+ 9274 CB BF        4 res 7,a
  45+ 9276
  46+ 9276 CB 21        5 sla c
  47+ 9278 10 E0            djnz 6B
  48+ 927A
  49+ 927A 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 927B
  51+ 927B 77               ld (hl),a
  52+ 927C 23               inc hl
  53+ 927D C1               pop bc
  54+ 927E 10 D4            djnz 3B
  55+ 9280
  56+ 9280 C9               ret
  57+ 9281
  58+ 9281
  59+ 9281
# file closed: RND_Derivando.asm
2161  9281              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9281              ;---------------------------------------------------------------------------------------------------------------
   2+ 9281              ;
   3+ 9281              ;   8/3/24
   4+ 9281              ;
   5+ 9281              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9281              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9281              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9281              ;	_ de la 1ª entidad del Nivel.
   9+ 9281              ;
  10+ 9281              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9281
  12+ 9281              ;	MODIFICA: HL,DE y A.
  13+ 9281              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9281
  15+ 9281              Inicializa_Nivel
  16+ 9281
  17+ 9281 2A 3D 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9284 CD A1 90     	call Extrae_address
  19+ 9287 7E           	ld a,(hl)
  20+ 9288 32 F2 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 928B 23           	inc hl
  22+ 928C CD 99 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 928F 22 3F 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9292 CD A2 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9295
  26+ 9295 CD B3 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9298 C9           	ret
  28+ 9299
  29+ 9299              ; ----------------------
  30+ 9299
  31+ 9299 11 D1 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 929C 01 04 00     	ld bc,4
  33+ 929F ED B0        	ldir
  34+ 92A1 C9           	ret
  35+ 92A2
  36+ 92A2 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92A3 CD 3D 94         call Calcula_salto_en_BC
  38+ 92A6 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92A9 A7               and a
  40+ 92AA ED 4A            adc hl,bc
  41+ 92AC CD A1 90         call Extrae_address
  42+ 92AF 22 DD 8B         ld (Puntero_indice_mov),hl
  43+ 92B2 C9               ret
  44+ 92B3
  45+ 92B3 3A AC 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92B6 CD 3D 94     	call Calcula_salto_en_BC
  47+ 92B9 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92BC A7               and a
  49+ 92BD ED 4A            adc hl,bc
  50+ 92BF CD A1 90         call Extrae_address
  51+ 92C2 22 B3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92C5 C9           	ret
  53+ 92C6
  54+ 92C6              ;---------------------------------------------------------------------------------------------------------------
  55+ 92C6              ;
  56+ 92C6              ;   5/1/24
  57+ 92C6              ;
  58+ 92C6              ;	Destruye A,BC,HL,DE
  59+ 92C6
  60+ 92C6              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92C6              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92C6
  63+ 92C6              Inicia_Entidades
  64+ 92C6
  65+ 92C6              ; Preparamos los punteros de las cajas de entidades:
  66+ 92C6
  67+ 92C6 CD 84 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92C9              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92C9 CD 85 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92CC
  71+ 92CC 2A 3F 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92CF
  73+ 92CF 22 3F 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92D2
  75+ 92D2 CD EB 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92D5
  77+ 92D5 2A 3F 8C     	ld hl,(Datos_de_nivel)
  78+ 92D8
  79+ 92D8              ; En este punto:
  80+ 92D8              ;
  81+ 92D8              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92D8              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92D8
  84+ 92D8 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92D9
  86+ 92D9 7E           	ld a,(hl)
  87+ 92DA CD 57 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92DD
  89+ 92DD CD 4F 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92E0
  91+ 92E0              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92E0
  93+ 92E0 CD 0D 94     	call Busca_mov_masticados_segun_tipo
  94+ 92E3
  95+ 92E3 A7           	and a
  96+ 92E4 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92E6
  98+ 92E6              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92E6
 100+ 92E6              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92E6              ;	_ de este tipo de entidad.
 102+ 92E6
 103+ 92E6 CD E5 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92E9 CD F2 9E     	call Transfiere_datos_de_contadores
 105+ 92EC
 106+ 92EC 18 06        	jr 4F
 107+ 92EE
 108+ 92EE CD 97 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92F1
 110+ 92F1              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92F1              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92F1              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92F1              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92F1              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92F1
 116+ 92F1 CD CB 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92F4              ;																; _ Mov_masticados ya generados.
 118+ 92F4
 119+ 92F4 CD EB 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92F7
 121+ 92F7 DD E5        	push ix
 122+ 92F9 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92FA
 124+ 92FA D5           	push de
 125+ 92FB CD C0 94     	call Genera_coordenadas
 126+ 92FE
 127+ 92FE ED 5B 19 8C  	ld de,(Scanlines_album_SP)
 128+ 9302 CD FB 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9305 D1           	pop de
 130+ 9306
 131+ 9306 CD EC 94     	call Genera_datos_de_impresion
 132+ 9309              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9309              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9309              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9309              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9309
 137+ 9309 CD 8F 93     	call Decrementa_Contador_de_mov_masticados
 138+ 930C
 139+ 930C              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 930C
 141+ 930C ED 5B EC 8B  	ld de,(Puntero_store_caja)
 142+ 9310 CD 7C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9313
 144+ 9313 CD 6C 93     	call Limpiamos_bandeja_DRAW
 145+ 9316 CD EF 90     	call Incrementa_punteros_de_cajas
 146+ 9319
 147+ 9319              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9319              ; _ entidad del Nivel.
 149+ 9319
 150+ 9319 3A 20 8C     	ld a,(Ctrl_4)
 151+ 931C E6 F0        	and $f0
 152+ 931E 32 20 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9321
 154+ 9321              ; Siguiente entidad del Nivel.
 155+ 9321
 156+ 9321 2A 3F 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9324 23           	inc hl 														; _ entidad del Nivel.
 158+ 9325
 159+ 9325 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9326
 161+ 9326 10 A7        	djnz 2B
 162+ 9328
 163+ 9328 C9           	ret
 164+ 9329
 165+ 9329              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9329              ;
 167+ 9329              ;	27/5/24
 168+ 9329              ;
 169+ 9329              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9329              ;
 171+ 9329
 172+ 9329              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9329              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9329
 175+ 9329 21 E4 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 932C CD 4F 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 932F
 178+ 932F
 179+ 932F              Construye_movimientos_masticados_Amadeus
 180+ 932F
 181+ 932F 2A B3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9332 CD DE 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9335              ;															; _ el (Contador_de_mov_masticados).
 184+ 9335 CD A7 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9338              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9338
 187+ 9338              ; Generamos movimientos masticados de Amadeus.
 188+ 9338
 189+ 9338 06 79        	ld b,121												; $0079, 121d.
 190+ 933A
 191+ 933A C5           1 push bc
 192+ 933B CD 04 97     	call Draw
 193+ 933E CD C3 8F     	call Guarda_movimiento_masticado
 194+ 9341
 195+ 9341 CD 78 9A     	call Mov_right
 196+ 9344 CD 78 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9347
 198+ 9347 C1           	pop bc
 199+ 9348 10 F0        	djnz 1B
 200+ 934A
 201+ 934A              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 934A
 203+ 934A              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 934A              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 934A
 206+ 934A 2A B3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 934D 01 08 00     	ld bc,8
 208+ 9350 A7           	and a
 209+ 9351 ED 42        	sbc hl,bc
 210+ 9353 22 B3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9356
 212+ 9356 C9           	ret
 213+ 9357
 214+ 9357              ; ---------------------------------------------------------------------
 215+ 9357              ;
 216+ 9357              ;	10/02/24
 217+ 9357              ;
 218+ 9357              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9357              ;
 220+ 9357              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9357
 222+ 9357              Definicion_segun_tipo
 223+ 9357
 224+ 9357 CD 3D 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 935A 21 C6 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 935D CD 45 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9360 C9           	ret
 228+ 9361
 229+ 9361              ; ---------------------------------------------------------------------
 230+ 9361              ;
 231+ 9361              ;	6/7/24
 232+ 9361
 233+ 9361
 234+ 9361              Store_Restore_cajas
 235+ 9361
 236+ 9361 ED 5B EC 8B  	ld de,(Puntero_store_caja)
 237+ 9365 CD 7C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9368 CD EF 90     	call Incrementa_punteros_de_cajas
 239+ 936B C9           	ret
 240+ 936C
 241+ 936C              ; ---------------------------------------------------------------------
 242+ 936C              ;
 243+ 936C              ;	23/6/24
 244+ 936C              ;
 245+ 936C              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 936C              ;
 247+ 936C              ;	MODIFY: HL
 248+ 936C
 249+ 936C              Limpiamos_bandeja_DRAW
 250+ 936C
 251+ 936C ED 73 F9 8B  	ld (Stack),sp
 252+ 9370 31 D1 8B     	ld sp,Vel_left
 253+ 9373
 254+ 9373 AF           	xor a
 255+ 9374 67           	ld h,a
 256+ 9375 6F           	ld l,a
 257+ 9376
 258+ 9376 E5           	push hl
 259+ 9377 E5           	push hl
 260+ 9378 E5           	push hl
 261+ 9379 E5           	push hl
 262+ 937A E5           	push hl
 263+ 937B E5           	push hl
 264+ 937C E5           	push hl
 265+ 937D E5           	push hl
 266+ 937E E5           	push hl
 267+ 937F E5           	push hl
 268+ 9380 E5           	push hl
 269+ 9381 E5           	push hl
 270+ 9382 E5           	push hl
 271+ 9383 E5           	push hl
 272+ 9384 E5           	push hl
 273+ 9385 E5           	push hl
 274+ 9386 E5           	push hl
 275+ 9387 E5           	push hl
 276+ 9388
 277+ 9388 33           	inc sp
 278+ 9389
 279+ 9389 E5           	push hl
 280+ 938A ED 7B F9 8B  	ld sp,(Stack)
 281+ 938E
 282+ 938E C9           	ret
 283+ 938F
 284+ 938F              ; ---------------------------------------------------------------------
 285+ 938F              ;
 286+ 938F              ;	24/03/24
 287+ 938F
 288+ 938F 2A B5 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9392 2B           	dec hl
 290+ 9393 22 B5 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9396 C9           	ret
 292+ 9397
 293+ 9397              ; ---------------------------------------------------------------------
 294+ 9397              ;
 295+ 9397              ;	8/5/24
 296+ 9397
 297+ 9397              Reinicia_entidad_maliciosa
 298+ 9397
 299+ 9397              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9397
 301+ 9397 CD E5 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 939A CD F2 9E     	call Transfiere_datos_de_contadores
 303+ 939D
 304+ 939D              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 939D
 306+ 939D 3A AC 8B     	ld a,(Tipo)
 307+ 93A0 CD 57 93     	call Definicion_segun_tipo
 308+ 93A3
 309+ 93A3 E5           	push hl
 310+ 93A4 DD E1        	pop ix
 311+ 93A6
 312+ 93A6 DD 6E 0B     	ld l,(ix+11)
 313+ 93A9 DD 66 0C     	ld h,(ix+12)
 314+ 93AC
 315+ 93AC 22 B3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93AF
 317+ 93AF CD EB 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93B2
 319+ 93B2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93B2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93B2              ; Ejemplos.
 322+ 93B2
 323+ 93B2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93B2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93B2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93B2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93B2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93B2
 329+ 93B2 21 AF 8B     	ld hl,Contador_de_vueltas
 330+ 93B5 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93B7
 332+ 93B7 7E           	ld a,(hl)
 333+ 93B8 CB 2F        	sra a
 334+ 93BA CB 2F        	sra a
 335+ 93BC
 336+ 93BC 32 B7 8B     	ld (Velocidad),a
 337+ 93BF
 338+ 93BF 3E 40        	ld a,$40
 339+ 93C1 BE           	cp (hl)
 340+ 93C2 C0           	ret nz
 341+ 93C3
 342+ 93C3              ; Límitador.
 343+ 93C3
 344+ 93C3              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93C3
 346+ 93C3 CB 2E        	sra (hl)
 347+ 93C5 21 B7 8B     	ld hl,Velocidad
 348+ 93C8 CB 2E        	sra (hl)
 349+ 93CA
 350+ 93CA C9           	ret
 351+ 93CB
 352+ 93CB              ; ---------------------------------------------------------------------
 353+ 93CB              ;
 354+ 93CB              ;	22/01/24
 355+ 93CB
 356+ 93CB 21 20 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93CE CB 46        	bit 0,(hl)
 358+ 93D0 20 0D        	jr nz,1F
 359+ 93D2 CB 4E        	bit 1,(hl)
 360+ 93D4 20 0C        	jr nz,2F
 361+ 93D6 CB 56        	bit 2,(hl)
 362+ 93D8 20 0B        	jr nz,3F
 363+ 93DA CB 5E        	bit 3,(hl)
 364+ 93DC 20 0A        	jr nz,4F
 365+ 93DE C9           	ret
 366+ 93DF
 367+ 93DF CB E6        1 set 4,(hl)
 368+ 93E1 C9           	ret
 369+ 93E2 CB EE        2 set 5,(hl)
 370+ 93E4 C9           	ret
 371+ 93E5 CB F6        3 set 6,(hl)
 372+ 93E7 C9           	ret
 373+ 93E8 CB FE        4 set 7,(hl)
 374+ 93EA C9           	ret
 375+ 93EB
 376+ 93EB              ; ---------------------------------------------------------------------
 377+ 93EB              ;
 378+ 93EB              ;	23/01/24
 379+ 93EB              ;
 380+ 93EB              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93EB              ;
 382+ 93EB              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93EB              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93EB              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93EB              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93EB
 387+ 93EB              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93EB
 389+ 93EB 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93EC 3D           	dec a
 391+ 93ED 20 06        	jr nz,1F
 392+ 93EF
 393+ 93EF              ; --- Tipo_1
 394+ 93EF
 395+ 93EF 21 20 8C     	ld hl,Ctrl_4
 396+ 93F2 CB C6        	set 0,(hl)
 397+ 93F4 C9           	ret
 398+ 93F5
 399+ 93F5 3D           1 dec a
 400+ 93F6 20 06        	jr nz,2F
 401+ 93F8
 402+ 93F8              ; --- Tipo_2
 403+ 93F8
 404+ 93F8 21 20 8C     	ld hl,Ctrl_4
 405+ 93FB CB CE        	set 1,(hl)
 406+ 93FD C9           	ret
 407+ 93FE
 408+ 93FE 3D           2 dec a
 409+ 93FF 20 06        	jr nz,3F
 410+ 9401
 411+ 9401              ; --- Tipo_3
 412+ 9401
 413+ 9401 21 20 8C     	ld hl,Ctrl_4
 414+ 9404 CB D6        	set 2,(hl)
 415+ 9406 C9           	ret
 416+ 9407
 417+ 9407              ; --- Tipo_3
 418+ 9407
 419+ 9407 21 20 8C     3 ld hl,Ctrl_4
 420+ 940A CB D6        	set 2,(hl)
 421+ 940C C9           	ret
 422+ 940D
 423+ 940D              ; ---------------------------------------------------------------------
 424+ 940D              ;
 425+ 940D              ;	22/01/24
 426+ 940D
 427+ 940D 21 20 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9410 CB 46        	bit 0,(hl)
 429+ 9412 20 0E        	jr nz,1F
 430+ 9414
 431+ 9414 CB 4E        	bit 1,(hl)
 432+ 9416 20 10        	jr nz,2F
 433+ 9418
 434+ 9418 CB 56        	bit 2,(hl)
 435+ 941A 20 12        	jr nz,3F
 436+ 941C
 437+ 941C CB 5E        	bit 3,(hl)
 438+ 941E 20 14        	jr nz,4F
 439+ 9420 18 19        	jr 6F
 440+ 9422
 441+ 9422              ; Entidad_de_Tipo_1.
 442+ 9422
 443+ 9422 CB 66        1 bit 4,(hl)
 444+ 9424 28 15        	jr z,6F
 445+ 9426 18 10        	jr 5F
 446+ 9428
 447+ 9428              ; Entidad_de_Tipo_2.
 448+ 9428
 449+ 9428 CB 6E        2 bit 5,(hl)
 450+ 942A 28 0F        	jr z,6F
 451+ 942C 18 0A        	jr 5F
 452+ 942E
 453+ 942E              ; Entidad_de_Tipo_3.
 454+ 942E
 455+ 942E CB 76        3 bit 6,(hl)
 456+ 9430 28 09        	jr z,6F
 457+ 9432 18 04        	jr 5F
 458+ 9434
 459+ 9434              ; Entidad_de_Tipo_4.
 460+ 9434
 461+ 9434 CB 7E        4 bit 7,(hl)
 462+ 9436 28 03        	jr z,6F
 463+ 9438
 464+ 9438              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9438
 466+ 9438 AF           5 xor a
 467+ 9439 3C           	inc a
 468+ 943A C9           	ret
 469+ 943B
 470+ 943B              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 943B
 472+ 943B AF           6 xor a
 473+ 943C C9           	ret
 474+ 943D
 475+ 943D              ;	------------------------------------------------------------------------------------
 476+ 943D              ;
 477+ 943D              ;	12/01/24
 478+ 943D              ;
 479+ 943D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 943D              ;
 481+ 943D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 943D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 943D
 484+ 943D CB 27        Calcula_salto_en_BC sla a
 485+ 943F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9441 4F           	ld c,a
 487+ 9442 06 00        	ld b,0
 488+ 9444 C9           	ret
 489+ 9445
 490+ 9445              ; ------------------------------------------------------------------
 491+ 9445              ;
 492+ 9445              ;	19/1/24
 493+ 9445              ;
 494+ 9445              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9445              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9445
 497+ 9445 A7           Situa_en_datos_de_definicion and a
 498+ 9446 ED 4A        	adc hl,bc
 499+ 9448 CD A1 90     	call Extrae_address
 500+ 944B 22 F7 8B         ld (Datos_de_entidad),hl
 501+ 944E C9           	ret
 502+ 944F
 503+ 944F              ; ------------------------------------------------------------------
 504+ 944F
 505+ 944F              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 944F              ; 	inc de
 507+ 944F              ; 	inc de
 508+ 944F              ; 	ex de,hl
 509+ 944F              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 944F              ; 	ret
 511+ 944F
 512+ 944F              ; ----------------------------------------------------------------------------------------------------------
 513+ 944F              ;
 514+ 944F              ;	24/6/24
 515+ 944F              ;
 516+ 944F              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 944F              ;	_ de entidad.
 518+ 944F              ;
 519+ 944F              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 944F              ;
 521+ 944F              ;
 522+ 944F              ;	MODIFICA: HL,DE y BC
 523+ 944F
 524+ 944F
 525+ 944F              Definicion_de_entidad_a_bandeja_DRAW
 526+ 944F
 527+ 944F 11 AC 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9452 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9453 12           	ld (de),a
 530+ 9454 23           	inc hl
 531+ 9455              ;
 532+ 9455 11 BA 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9458 01 02 00     	ld bc,2
 534+ 945B ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 945D              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 945D 11 AF 8B     	ld de,Contador_de_vueltas
 537+ 9460 7E           	ld a,(hl)
 538+ 9461 12           	ld (de),a
 539+ 9462 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9463
 541+ 9463 11 C1 8B     	ld de,Indice_Sprite_der
 542+ 9466 01 04 00     	ld bc,4
 543+ 9469 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 946B
 545+ 946B 11 C9 8B     	ld de,Posicion_inicio
 546+ 946E 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9471 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9473
 549+ 9473 11 B3 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9476 01 02 00     	ld bc,2
 551+ 9479 ED B0        	ldir
 552+ 947B
 553+ 947B C9           	ret
 554+ 947C
 555+ 947C              ; ----------------------------------------------------------------------------------------------------------
 556+ 947C              ;
 557+ 947C              ;	1/8/24
 558+ 947C              ;
 559+ 947C
 560+ 947C              Parametros_de_bandeja_DRAW_a_caja
 561+ 947C
 562+ 947C 21 AC 8B     	ld hl,Bandeja_DRAW
 563+ 947F 01 0C 00     	ld bc,12
 564+ 9482 ED B0        	ldir
 565+ 9484 C9           	ret
 566+ 9485
 567+ 9485              ;---------------------------------------------------------------------------------------------------------------
 568+ 9485              ;
 569+ 9485              ;	5/1/24
 570+ 9485              ;
 571+ 9485              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9485              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9485              ;
 574+ 9485              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9485              ;
 576+ 9485              ;	(Numero_parcial_de_entidades)="7".
 577+ 9485              ;
 578+ 9485              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9485              ;
 580+ 9485              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9485              ;
 582+ 9485              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9485              ;	MODIFICA: A y B.
 584+ 9485              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9485
 586+ 9485              Inicializa_Numero_parcial_de_entidades
 587+ 9485
 588+ 9485              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9485
 590+ 9485 3A F2 8B     	ld a,(Numero_de_entidades)
 591+ 9488 A7           	and a
 592+ 9489
 593+ 9489              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9489              ;	jr z,$
 595+ 9489              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9489
 597+ 9489 20 03        	jr nz,3F
 598+ 948B
 599+ 948B              ; ---------- ---------- ----------
 600+ 948B
 601+ 948B              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 948B              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 948B
 604+ 948B CD 81 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 948E
 606+ 948E              ; ---------- ---------- ----------
 607+ 948E
 608+ 948E 3A F2 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9491 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9493 38 08        	jr c,1F
 611+ 9495
 612+ 9495              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9495              ; Actualizamos variables.
 614+ 9495
 615+ 9495 3E 07        	ld a,7
 616+ 9497 32 F3 8B     	ld (Numero_parcial_de_entidades),a
 617+ 949A 47           	ld b,a
 618+ 949B 18 04        	jr 2F
 619+ 949D
 620+ 949D              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 949D              ; (Numero_de_entidades)="0".
 622+ 949D
 623+ 949D 32 F3 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94A0 47           	ld b,a
 625+ 94A1 C9           2 ret
 626+ 94A2
# file closed: Rutinas_de_inicio_y_niveles.asm
2162  94A2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94A2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94A2              ;
   3+ 94A2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94A2              ;
   5+ 94A2              ; *****************************************************************************************************************************************************************************************
   6+ 94A2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94A2
   8+ 94A2 7C           calcula_tercio ld a,h
   9+ 94A3 E6 18        	and $18
  10+ 94A5 CB 2F        	sra a
  11+ 94A7 CB 2F        	sra a
  12+ 94A9 CB 2F        	sra a
  13+ 94AB C9           	ret
  14+ 94AC
# file closed: calcula_tercio.asm
2163  94AC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94AC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94AC              ;
   3+ 94AC              ;
   4+ 94AC              ;	CLS.
   5+ 94AC              ;
   6+ 94AC              ;	Limpia la pantalla y define sus atributos.
   7+ 94AC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94AC              ;
   9+ 94AC              ;	COLORES: 0 ..... NEGRO
  10+ 94AC              ;    		 1 ..... AZUL
  11+ 94AC              ; 			 2 ..... ROJO
  12+ 94AC              ;			 3 ..... MAGENTA
  13+ 94AC              ; 			 4 ..... VERDE
  14+ 94AC              ; 			 5 ..... CIAN
  15+ 94AC              ;			 6 ..... AMARILLO
  16+ 94AC              ; 			 7 ..... BLANCO
  17+ 94AC              ;
  18+ 94AC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94AC              ;
  20+ 94AC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94AC
  22+ 94AC
  23+ 94AC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94AF 11 01 40     	LD DE,$4001
  25+ 94B2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94B5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94B7 ED B0        	LDIR
  28+ 94B9 01 FF 02     	LD BC,767
  29+ 94BC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94BD ED B0        	LDIR
  31+ 94BF C9           	ret
  32+ 94C0
# file closed: Cls.asm
2164  94C0              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94C0              ; ------------------------------------------------------------------------
   2+ 94C0              ;
   3+ 94C0              ;	30/1/24
   4+ 94C0              ;
   5+ 94C0              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94C0              ;	Fila superior "0", Columna izquierda "0".
   7+ 94C0              ;
   8+ 94C0              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94C0              ;
  10+ 94C0              ;	Modifica: A,BC y DE.
  11+ 94C0
  12+ 94C0 7D           Genera_coordenadas ld a,l
  13+ 94C1 E6 1F        	and $1f
  14+ 94C3 32 AD 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94C6
  16+ 94C6 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94C7 FE 40        	cp $40
  18+ 94C9 38 1C        	jr c,4F
  19+ 94CB
  20+ 94CB CD A2 94     	call calcula_tercio
  21+ 94CE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94CF
  23+ 94CF 1E 00        	ld e,0
  24+ 94D1 7D           	ld a,l
  25+ 94D2 E6 E0        	and $e0
  26+ 94D4 28 01        	jr z,1F
  27+ 94D6 04           	inc b
  28+ 94D7
  29+ 94D7 04           1 inc b
  30+ 94D8 05           	dec b
  31+ 94D9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94DB              ;														; _ , salimos.
  33+ 94DB 1C           3 inc e
  34+ 94DC D6 20        	sub 32
  35+ 94DE 20 FB        	jr nz,3B
  36+ 94E0 10 F5        	djnz 1B
  37+ 94E2
  38+ 94E2 7B           2 ld a,e
  39+ 94E3 32 AE 8B     	ld (Coordenada_y),a
  40+ 94E6 C9           	ret
  41+ 94E7
  42+ 94E7 AF           4 xor a
  43+ 94E8 32 AE 8B     	ld (Coordenada_y),a
  44+ 94EB C9           	ret
  45+ 94EC
# file closed: Genera_coordenadas.asm
2165  94EC              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94EC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94EC              ;
   3+ 94EC              ;	11/03/24
   4+ 94EC              ;
   5+ 94EC              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94EC              ;   DE contiene Puntero_objeto.
   7+ 94EC              ;   IX contiene el Puntero de impresión.
   8+ 94EC
   9+ 94EC              Genera_datos_de_impresion
  10+ 94EC
  11+ 94EC ED 73 F9 8B      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94F0
  13+ 94F0 31 B3 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94F3 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94F5
  16+ 94F5 2A 19 8C         ld hl,(Scanlines_album_SP)
  17+ 94F8
  18+ 94F8 3E 05            ld a,5
  19+ 94FA 85               add l
  20+ 94FB 6F               ld l,a
  21+ 94FC
  22+ 94FC F9               ld sp,hl
  23+ 94FD 22 19 8C         ld (Scanlines_album_SP),hl
  24+ 9500
  25+ 9500 21 00 00         ld hl,0
  26+ 9503
  27+ 9503 DD E5            push ix
  28+ 9505 3B               dec sp
  29+ 9506 ED 7A            adc hl,sp
  30+ 9508 D5               push de
  31+ 9509
  32+ 9509              ; Recuperamos SP.
  33+ 9509
  34+ 9509 ED 7B F9 8B      ld sp,(Stack)
  35+ 950D
  36+ 950D E5               push hl
  37+ 950E F1               pop af
  38+ 950F 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9510
  40+ 9510              ; Tenemos el encabezado listo.
  41+ 9510              ; Preparamos registros para generar los scanlines.
  42+ 9510
  43+ 9510 DD E5            push ix
  44+ 9512 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9513
  46+ 9513 ED 5B 19 8C      ld de,(Scanlines_album_SP)
  47+ 9517
  48+ 9517              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9517              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9517
  51+ 9517 7C               ld a,h
  52+ 9518 FE 50            cp $50
  53+ 951A 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 951C
  55+ 951C 20 05            jr nz,2F
  56+ 951E
  57+ 951E 7D               ld a,l
  58+ 951F FE E0            cp $e0
  59+ 9521 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9523
  61+ 9523 7D           2 ld a,l
  62+ 9524 FE C0            cp $c0
  63+ 9526 D2 B8 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9529
  65+ 9529              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9529
  67+ 9529 CD B6 99         call NextScan
  68+ 952C EB               ex de,hl
  69+ 952D
  70+ 952D 73               ld (hl),e
  71+ 952E 23               inc hl
  72+ 952F 72               ld (hl),d
  73+ 9530 23               inc hl
  74+ 9531
  75+ 9531 EB               ex de,hl
  76+ 9532
  77+ 9532 CD B6 99         call NextScan
  78+ 9535 EB               ex de,hl
  79+ 9536
  80+ 9536 73               ld (hl),e
  81+ 9537 23               inc hl
  82+ 9538 72               ld (hl),d
  83+ 9539 23               inc hl
  84+ 953A
  85+ 953A EB               ex de,hl
  86+ 953B
  87+ 953B CD B6 99         call NextScan
  88+ 953E EB               ex de,hl
  89+ 953F
  90+ 953F 73               ld (hl),e
  91+ 9540 23               inc hl
  92+ 9541 72               ld (hl),d
  93+ 9542 23               inc hl
  94+ 9543
  95+ 9543 EB               ex de,hl
  96+ 9544
  97+ 9544 CD B6 99         call NextScan
  98+ 9547 EB               ex de,hl
  99+ 9548
 100+ 9548 73               ld (hl),e
 101+ 9549 23               inc hl
 102+ 954A 72               ld (hl),d
 103+ 954B 23               inc hl
 104+ 954C
 105+ 954C EB               ex de,hl
 106+ 954D
 107+ 954D CD B6 99         call NextScan
 108+ 9550 EB               ex de,hl
 109+ 9551
 110+ 9551 73               ld (hl),e
 111+ 9552 23               inc hl
 112+ 9553 72               ld (hl),d
 113+ 9554 23               inc hl
 114+ 9555
 115+ 9555 EB               ex de,hl
 116+ 9556
 117+ 9556 CD B6 99         call NextScan
 118+ 9559 EB               ex de,hl
 119+ 955A
 120+ 955A 73               ld (hl),e
 121+ 955B 23               inc hl
 122+ 955C 72               ld (hl),d
 123+ 955D 23               inc hl
 124+ 955E
 125+ 955E EB               ex de,hl
 126+ 955F
 127+ 955F CD B6 99         call NextScan
 128+ 9562 EB               ex de,hl
 129+ 9563
 130+ 9563 73               ld (hl),e
 131+ 9564 23               inc hl
 132+ 9565 72               ld (hl),d
 133+ 9566 23               inc hl
 134+ 9567
 135+ 9567 EB               ex de,hl
 136+ 9568
 137+ 9568 CD B6 99         call NextScan
 138+ 956B EB               ex de,hl
 139+ 956C
 140+ 956C 73               ld (hl),e
 141+ 956D 23               inc hl
 142+ 956E 72               ld (hl),d
 143+ 956F 23               inc hl
 144+ 9570
 145+ 9570 EB               ex de,hl
 146+ 9571
 147+ 9571 CD B6 99         call NextScan
 148+ 9574 EB               ex de,hl
 149+ 9575
 150+ 9575 73               ld (hl),e
 151+ 9576 23               inc hl
 152+ 9577 72               ld (hl),d
 153+ 9578 23               inc hl
 154+ 9579
 155+ 9579 EB               ex de,hl
 156+ 957A
 157+ 957A CD B6 99         call NextScan
 158+ 957D EB               ex de,hl
 159+ 957E
 160+ 957E 73               ld (hl),e
 161+ 957F 23               inc hl
 162+ 9580 72               ld (hl),d
 163+ 9581 23               inc hl
 164+ 9582
 165+ 9582 EB               ex de,hl
 166+ 9583
 167+ 9583 CD B6 99         call NextScan
 168+ 9586 EB               ex de,hl
 169+ 9587
 170+ 9587 73               ld (hl),e
 171+ 9588 23               inc hl
 172+ 9589 72               ld (hl),d
 173+ 958A 23               inc hl
 174+ 958B
 175+ 958B EB               ex de,hl
 176+ 958C
 177+ 958C CD B6 99         call NextScan
 178+ 958F EB               ex de,hl
 179+ 9590
 180+ 9590 73               ld (hl),e
 181+ 9591 23               inc hl
 182+ 9592 72               ld (hl),d
 183+ 9593 23               inc hl
 184+ 9594
 185+ 9594 EB               ex de,hl
 186+ 9595
 187+ 9595 CD B6 99         call NextScan
 188+ 9598 EB               ex de,hl
 189+ 9599
 190+ 9599 73               ld (hl),e
 191+ 959A 23               inc hl
 192+ 959B 72               ld (hl),d
 193+ 959C 23               inc hl
 194+ 959D
 195+ 959D EB               ex de,hl
 196+ 959E
 197+ 959E CD B6 99         call NextScan
 198+ 95A1 EB               ex de,hl
 199+ 95A2
 200+ 95A2 73               ld (hl),e
 201+ 95A3 23               inc hl
 202+ 95A4 72               ld (hl),d
 203+ 95A5 23               inc hl
 204+ 95A6
 205+ 95A6 EB               ex de,hl
 206+ 95A7
 207+ 95A7 CD B6 99         call NextScan
 208+ 95AA EB               ex de,hl
 209+ 95AB
 210+ 95AB 73               ld (hl),e
 211+ 95AC 23               inc hl
 212+ 95AD 72               ld (hl),d
 213+ 95AE 23               inc hl
 214+ 95AF
 215+ 95AF              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 95AF
 217+ 95AF 22 19 8C         ld (Scanlines_album_SP),hl
 218+ 95B2
 219+ 95B2              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 95B2
 221+ 95B2 08               ex af,af
 222+ 95B3
 223+ 95B3 F5               push af
 224+ 95B4 E1               pop hl
 225+ 95B5
 226+ 95B5 36 10            ld (hl),16
 227+ 95B7
 228+ 95B7 C9               ret
 229+ 95B8
 230+ 95B8              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 95B8
 232+ 95B8              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 95B8
 234+ 95B8 3E 57            ld a,$57
 235+ 95BA 94               sub h
 236+ 95BB 47               ld b,a
 237+ 95BC
 238+ 95BC 3E DF            ld a,$df
 239+ 95BE BD               cp l
 240+ 95BF 38 04            jr c,1F
 241+ 95C1
 242+ 95C1 3E 08            ld a,8
 243+ 95C3 80               add b
 244+ 95C4 47               ld b,a
 245+ 95C5
 246+ 95C5              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95C5              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95C5
 249+ 95C5 48           1 ld c,b
 250+ 95C6 0C               inc c
 251+ 95C7
 252+ 95C7 04               inc b
 253+ 95C8 05               dec b
 254+ 95C9 20 02            jr nz,3F
 255+ 95CB
 256+ 95CB 18 0B            jr 6F
 257+ 95CD
 258+ 95CD CD B6 99     3 call NextScan
 259+ 95D0 EB               ex de,hl
 260+ 95D1
 261+ 95D1 73               ld (hl),e
 262+ 95D2 23               inc hl
 263+ 95D3 72               ld (hl),d
 264+ 95D4 23               inc hl
 265+ 95D5
 266+ 95D5 EB               ex de,hl
 267+ 95D6 10 F5            djnz 3B
 268+ 95D8
 269+ 95D8 ED 53 19 8C  6 ld (Scanlines_album_SP),de
 270+ 95DC
 271+ 95DC 08           5 ex af,af
 272+ 95DD F5               push af
 273+ 95DE E1               pop hl
 274+ 95DF
 275+ 95DF 71               ld (hl),c
 276+ 95E0
 277+ 95E0 C9               ret
 278+ 95E1
# file closed: Genera_datos_de_impresion.asm
2166  95E1              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95E1              ; -----------------------------------------------------------------------------
   2+ 95E1              ;
   3+ 95E1              ;   11/03/24
   4+ 95E1              ;
   5+ 95E1
   6+ 95E1              Pinta_Sprites
   7+ 95E1
   8+ 95E1              ;    ld hl,(Scanlines_album_SP)
   9+ 95E1              ;    call Extrae_address
  10+ 95E1
  11+ 95E1              ;    inc h
  12+ 95E1              ;    dec h
  13+ 95E1              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95E1
  15+ 95E1 ED 73 F9 8B      ld (Stack),sp
  16+ 95E5
  17+ 95E5 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95E6              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95E6 2C               inc l
  20+ 95E7 2C               inc l
  21+ 95E8
  22+ 95E8 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95E9
  24+ 95E9 2C               inc l
  25+ 95EA F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95EB
  27+ 95EB              ;   Seleccionamos rutina de impresión:
  28+ 95EB
  29+ 95EB 3E 10            ld a,16
  30+ 95ED B8               cp b
  31+ 95EE C2 EA 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95F1
  33+ 95F1              ;   Rutinas:
  34+ 95F1
  35+ 95F1              Pinta_rapido    ;   1520 t/states.
  36+ 95F1
  37+ 95F1 E1               pop hl
  38+ 95F2
  39+ 95F2 1A               ld a,(de)
  40+ 95F3 AE               xor (hl)
  41+ 95F4 77               ld (hl),a
  42+ 95F5 2C               inc l
  43+ 95F6 1C               inc e
  44+ 95F7 1A               ld a,(de)
  45+ 95F8 AE               xor (hl)
  46+ 95F9 77               ld (hl),a
  47+ 95FA 2C               inc l
  48+ 95FB 1C               inc e
  49+ 95FC 1A               ld a,(de)
  50+ 95FD AE               xor (hl)
  51+ 95FE 77               ld (hl),a
  52+ 95FF 13               inc de
  53+ 9600
  54+ 9600 E1               pop hl
  55+ 9601
  56+ 9601 1A               ld a,(de)
  57+ 9602 AE               xor (hl)
  58+ 9603 77               ld (hl),a
  59+ 9604 2C               inc l
  60+ 9605 1C               inc e
  61+ 9606 1A               ld a,(de)
  62+ 9607 AE               xor (hl)
  63+ 9608 77               ld (hl),a
  64+ 9609 2C               inc l
  65+ 960A 1C               inc e
  66+ 960B 1A               ld a,(de)
  67+ 960C AE               xor (hl)
  68+ 960D 77               ld (hl),a
  69+ 960E 13               inc de
  70+ 960F
  71+ 960F E1               pop hl
  72+ 9610
  73+ 9610 1A               ld a,(de)
  74+ 9611 AE               xor (hl)
  75+ 9612 77               ld (hl),a
  76+ 9613 2C               inc l
  77+ 9614 1C               inc e
  78+ 9615 1A               ld a,(de)
  79+ 9616 AE               xor (hl)
  80+ 9617 77               ld (hl),a
  81+ 9618 2C               inc l
  82+ 9619 1C               inc e
  83+ 961A 1A               ld a,(de)
  84+ 961B AE               xor (hl)
  85+ 961C 77               ld (hl),a
  86+ 961D 13               inc de
  87+ 961E
  88+ 961E E1               pop hl
  89+ 961F
  90+ 961F 1A               ld a,(de)
  91+ 9620 AE               xor (hl)
  92+ 9621 77               ld (hl),a
  93+ 9622 2C               inc l
  94+ 9623 1C               inc e
  95+ 9624 1A               ld a,(de)
  96+ 9625 AE               xor (hl)
  97+ 9626 77               ld (hl),a
  98+ 9627 2C               inc l
  99+ 9628 1C               inc e
 100+ 9629 1A               ld a,(de)
 101+ 962A AE               xor (hl)
 102+ 962B 77               ld (hl),a
 103+ 962C 13               inc de
 104+ 962D
 105+ 962D E1               pop hl
 106+ 962E
 107+ 962E 1A               ld a,(de)
 108+ 962F AE               xor (hl)
 109+ 9630 77               ld (hl),a
 110+ 9631 2C               inc l
 111+ 9632 1C               inc e
 112+ 9633 1A               ld a,(de)
 113+ 9634 AE               xor (hl)
 114+ 9635 77               ld (hl),a
 115+ 9636 2C               inc l
 116+ 9637 1C               inc e
 117+ 9638 1A               ld a,(de)
 118+ 9639 AE               xor (hl)
 119+ 963A 77               ld (hl),a
 120+ 963B 13               inc de
 121+ 963C
 122+ 963C E1               pop hl
 123+ 963D
 124+ 963D 1A               ld a,(de)
 125+ 963E AE               xor (hl)
 126+ 963F 77               ld (hl),a
 127+ 9640 2C               inc l
 128+ 9641 1C               inc e
 129+ 9642 1A               ld a,(de)
 130+ 9643 AE               xor (hl)
 131+ 9644 77               ld (hl),a
 132+ 9645 2C               inc l
 133+ 9646 1C               inc e
 134+ 9647 1A               ld a,(de)
 135+ 9648 AE               xor (hl)
 136+ 9649 77               ld (hl),a
 137+ 964A 13               inc de
 138+ 964B
 139+ 964B E1               pop hl
 140+ 964C
 141+ 964C 1A               ld a,(de)
 142+ 964D AE               xor (hl)
 143+ 964E 77               ld (hl),a
 144+ 964F 2C               inc l
 145+ 9650 1C               inc e
 146+ 9651 1A               ld a,(de)
 147+ 9652 AE               xor (hl)
 148+ 9653 77               ld (hl),a
 149+ 9654 2C               inc l
 150+ 9655 1C               inc e
 151+ 9656 1A               ld a,(de)
 152+ 9657 AE               xor (hl)
 153+ 9658 77               ld (hl),a
 154+ 9659 13               inc de
 155+ 965A
 156+ 965A E1               pop hl
 157+ 965B
 158+ 965B 1A               ld a,(de)
 159+ 965C AE               xor (hl)
 160+ 965D 77               ld (hl),a
 161+ 965E 2C               inc l
 162+ 965F 1C               inc e
 163+ 9660 1A               ld a,(de)
 164+ 9661 AE               xor (hl)
 165+ 9662 77               ld (hl),a
 166+ 9663 2C               inc l
 167+ 9664 1C               inc e
 168+ 9665 1A               ld a,(de)
 169+ 9666 AE               xor (hl)
 170+ 9667 77               ld (hl),a
 171+ 9668 13               inc de
 172+ 9669
 173+ 9669 E1               pop hl
 174+ 966A
 175+ 966A 1A               ld a,(de)
 176+ 966B AE               xor (hl)
 177+ 966C 77               ld (hl),a
 178+ 966D 2C               inc l
 179+ 966E 1C               inc e
 180+ 966F 1A               ld a,(de)
 181+ 9670 AE               xor (hl)
 182+ 9671 77               ld (hl),a
 183+ 9672 2C               inc l
 184+ 9673 1C               inc e
 185+ 9674 1A               ld a,(de)
 186+ 9675 AE               xor (hl)
 187+ 9676 77               ld (hl),a
 188+ 9677 13               inc de
 189+ 9678
 190+ 9678 E1               pop hl
 191+ 9679
 192+ 9679 1A               ld a,(de)
 193+ 967A AE               xor (hl)
 194+ 967B 77               ld (hl),a
 195+ 967C 2C               inc l
 196+ 967D 1C               inc e
 197+ 967E 1A               ld a,(de)
 198+ 967F AE               xor (hl)
 199+ 9680 77               ld (hl),a
 200+ 9681 2C               inc l
 201+ 9682 1C               inc e
 202+ 9683 1A               ld a,(de)
 203+ 9684 AE               xor (hl)
 204+ 9685 77               ld (hl),a
 205+ 9686 13               inc de
 206+ 9687
 207+ 9687 E1               pop hl
 208+ 9688
 209+ 9688 1A               ld a,(de)
 210+ 9689 AE               xor (hl)
 211+ 968A 77               ld (hl),a
 212+ 968B 2C               inc l
 213+ 968C 1C               inc e
 214+ 968D 1A               ld a,(de)
 215+ 968E AE               xor (hl)
 216+ 968F 77               ld (hl),a
 217+ 9690 2C               inc l
 218+ 9691 1C               inc e
 219+ 9692 1A               ld a,(de)
 220+ 9693 AE               xor (hl)
 221+ 9694 77               ld (hl),a
 222+ 9695 13               inc de
 223+ 9696
 224+ 9696 E1               pop hl
 225+ 9697
 226+ 9697 1A               ld a,(de)
 227+ 9698 AE               xor (hl)
 228+ 9699 77               ld (hl),a
 229+ 969A 2C               inc l
 230+ 969B 1C               inc e
 231+ 969C 1A               ld a,(de)
 232+ 969D AE               xor (hl)
 233+ 969E 77               ld (hl),a
 234+ 969F 2C               inc l
 235+ 96A0 1C               inc e
 236+ 96A1 1A               ld a,(de)
 237+ 96A2 AE               xor (hl)
 238+ 96A3 77               ld (hl),a
 239+ 96A4 13               inc de
 240+ 96A5
 241+ 96A5 E1               pop hl
 242+ 96A6
 243+ 96A6 1A               ld a,(de)
 244+ 96A7 AE               xor (hl)
 245+ 96A8 77               ld (hl),a
 246+ 96A9 2C               inc l
 247+ 96AA 1C               inc e
 248+ 96AB 1A               ld a,(de)
 249+ 96AC AE               xor (hl)
 250+ 96AD 77               ld (hl),a
 251+ 96AE 2C               inc l
 252+ 96AF 1C               inc e
 253+ 96B0 1A               ld a,(de)
 254+ 96B1 AE               xor (hl)
 255+ 96B2 77               ld (hl),a
 256+ 96B3 13               inc de
 257+ 96B4
 258+ 96B4 E1               pop hl
 259+ 96B5
 260+ 96B5 1A               ld a,(de)
 261+ 96B6 AE               xor (hl)
 262+ 96B7 77               ld (hl),a
 263+ 96B8 2C               inc l
 264+ 96B9 1C               inc e
 265+ 96BA 1A               ld a,(de)
 266+ 96BB AE               xor (hl)
 267+ 96BC 77               ld (hl),a
 268+ 96BD 2C               inc l
 269+ 96BE 1C               inc e
 270+ 96BF 1A               ld a,(de)
 271+ 96C0 AE               xor (hl)
 272+ 96C1 77               ld (hl),a
 273+ 96C2 13               inc de
 274+ 96C3
 275+ 96C3 E1               pop hl
 276+ 96C4
 277+ 96C4 1A               ld a,(de)
 278+ 96C5 AE               xor (hl)
 279+ 96C6 77               ld (hl),a
 280+ 96C7 2C               inc l
 281+ 96C8 1C               inc e
 282+ 96C9 1A               ld a,(de)
 283+ 96CA AE               xor (hl)
 284+ 96CB 77               ld (hl),a
 285+ 96CC 2C               inc l
 286+ 96CD 1C               inc e
 287+ 96CE 1A               ld a,(de)
 288+ 96CF AE               xor (hl)
 289+ 96D0 77               ld (hl),a
 290+ 96D1 13               inc de
 291+ 96D2
 292+ 96D2 E1               pop hl
 293+ 96D3
 294+ 96D3 1A               ld a,(de)
 295+ 96D4 AE               xor (hl)
 296+ 96D5 77               ld (hl),a
 297+ 96D6 2C               inc l
 298+ 96D7 1C               inc e
 299+ 96D8 1A               ld a,(de)
 300+ 96D9 AE               xor (hl)
 301+ 96DA 77               ld (hl),a
 302+ 96DB 2C               inc l
 303+ 96DC 1C               inc e
 304+ 96DD 1A               ld a,(de)
 305+ 96DE AE               xor (hl)
 306+ 96DF 77               ld (hl),a
 307+ 96E0 13               inc de
 308+ 96E1
 309+ 96E1 ED 73 19 8C      ld (Scanlines_album_SP),sp
 310+ 96E5 ED 7B F9 8B      ld sp,(Stack)
 311+ 96E9 C9               ret
 312+ 96EA
 313+ 96EA              Pinta_lento
 314+ 96EA
 315+ 96EA E1           1 pop hl
 316+ 96EB
 317+ 96EB 1A               ld a,(de)
 318+ 96EC AE               xor (hl)
 319+ 96ED 77               ld (hl),a
 320+ 96EE 2C               inc l
 321+ 96EF 1C               inc e
 322+ 96F0 1A               ld a,(de)
 323+ 96F1 AE               xor (hl)
 324+ 96F2 77               ld (hl),a
 325+ 96F3 2C               inc l
 326+ 96F4 1C               inc e
 327+ 96F5 1A               ld a,(de)
 328+ 96F6 AE               xor (hl)
 329+ 96F7 77               ld (hl),a
 330+ 96F8 13               inc de
 331+ 96F9
 332+ 96F9 10 EF            djnz 1B
 333+ 96FB
 334+ 96FB ED 73 19 8C      ld (Scanlines_album_SP),sp
 335+ 96FF ED 7B F9 8B      ld sp,(Stack)
 336+ 9703 C9               ret
# file closed: Pinta_Sprites.asm
2167  9704              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9704              ; ******************************************************************************************************************************************************************************************
   2+ 9704              ;
   3+ 9704              ; 26/06/23
   4+ 9704              ;
   5+ 9704              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9704
   7+ 9704              Draw
   8+ 9704
   9+ 9704 CD AA 99     	call Prepara_draw
  10+ 9707 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9708 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9709 28 05        	jr z,2F
  13+ 970B
  14+ 970B 3A CB 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 970E 18 0C        	jr 1F
  16+ 9710
  17+ 9710 2A C9 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9713 22 BC 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9716 CD A2 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9719              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9719
  22+ 9719 CD 49 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 971C
  24+ 971C 3A B9 8B     1 ld a,(Ctrl_0)
  25+ 971F CB 6F        	bit 5,a
  26+ 9721 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9723
  28+ 9723 CD 38 97     	call Comprueba_limite_horizontal
  29+ 9726 CD C8 97     	call Comprueba_limite_vertical
  30+ 9729
  31+ 9729              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9729              ; -----------------------
  33+ 9729              ; -----------------------
  34+ 9729              ; -----------------------
  35+ 9729
  36+ 9729 CD 1E 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 972C CD 55 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 972F
  39+ 972F 3A B9 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9732 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9734 32 B9 8B     	ld (Ctrl_0),a
  42+ 9737
  43+ 9737 C9           	ret
  44+ 9738
  45+ 9738              ; *******************************************************************************************************************************************************************************************
  46+ 9738              ;	21/01/23
  47+ 9738              ;
  48+ 9738              ; 	Comprueba_limite_horizontal.
  49+ 9738              ;
  50+ 9738              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9738              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9738              ;
  53+ 9738              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9738              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9738              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9738              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9738
  58+ 9738
  59+ 9738
  60+ 9738 3A B9 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 973B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 973D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 973F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9741 32 B9 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9744 18 09            jr 6F
  66+ 9746 CB 5F        1 bit 3,a
  67+ 9748 28 0A            jr z,2F
  68+ 974A E6 F7            and $f7
  69+ 974C 32 B9 8B         ld (Ctrl_0),a
  70+ 974F CD A2 98     6 call Inicializacion
  71+ 9752 18 5B            jr 5F
  72+ 9754 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9755
  74+ 9755              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9755              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9755
  77+ 9755 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9756 2A CD 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9759 CD A2 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 975C 67           	ld h,a
  81+ 975D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 975E CD A2 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9761 67           	ld h,a
  84+ 9762 A7           	and a
  85+ 9763 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9765 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9766 3A CB 8B     	ld a,(Cuad_objeto)
  88+ 9769 FE 02        	cp 2
  89+ 976B 38 1E        	jr c,3F
  90+ 976D 28 1C        	jr z,3F
  91+ 976F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9770 28 23            jr z,7F
  93+ 9772 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9774 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9776 E1           	pop hl
  96+ 9777
  97+ 9777              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9777              ; _para indicar con E="2" en caso necesario.
  99+ 9777
 100+ 9777 E5               push hl
 101+ 9778 C5               push bc
 102+ 9779 CD A2 94     	call calcula_tercio
 103+ 977C FE 01        	cp 1
 104+ 977E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9780 CD B0 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9783 28 26            jr z,9F
 107+ 9785 38 24            jr c,9F
 108+ 9787 1E 00        11 ld e,0
 109+ 9789 18 22            jr 8F
 110+ 978B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 978C 28 07        	jr z, 7F
 112+ 978E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9790 1E 00         	ld e,0
 114+ 9792 E1           	pop hl
 115+ 9793 18 04        	jr 4F
 116+ 9795 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9797 18 15            jr 10F
 118+ 9799
 119+ 9799              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9799              ; _para indicar con E="2" en caso necesario.
 121+ 9799
 122+ 9799 E5           4 push hl
 123+ 979A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 979B CD A2 94     	call calcula_tercio
 125+ 979E FE 01        	cp 1
 126+ 97A0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A2 CD B0 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97A5 28 04            jr z,9F
 129+ 97A7 30 02            jr nc,9F
 130+ 97A9 18 02        	jr 8F
 131+ 97AB 1E 02        9 ld e,2
 132+ 97AD C1           8 pop bc
 133+ 97AE E1           10 pop hl
 134+ 97AF C9           5 ret
 135+ 97B0
 136+ 97B0              ; --------------------
 137+ 97B0              ;
 138+ 97B0              ; 25/08/22
 139+ 97B0
 140+ 97B0 CD A2 94     Comprueba_centro call calcula_tercio
 141+ 97B3 67               ld h,a
 142+ 97B4 08           	ex af,af
 143+ 97B5 FE 02        	cp 2
 144+ 97B7 38 07        	jr c,1F
 145+ 97B9 28 05        	jr z,1F
 146+ 97BB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97BE 18 03        	jr 2F
 148+ 97C0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97C3 08           2 ex af,af
 150+ 97C4 A7               and a
 151+ 97C5 ED 42            sbc hl,bc
 152+ 97C7 C9               ret
 153+ 97C8
 154+ 97C8              ; *********************************************************************************************************************************************************************************************
 155+ 97C8              ;
 156+ 97C8              ;   16/8/22
 157+ 97C8              ;
 158+ 97C8              ;	Comprueba_limite_vertical
 159+ 97C8              ;
 160+ 97C8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97C8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97C8              ;
 163+ 97C8
 164+ 97C8 2A BC 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97CB 7D           	ld a,l
 166+ 97CC E6 1F        	and $1F
 167+ 97CE 57           	ld d,a
 168+ 97CF 3A CF 8B     	ld a,(Limite_vertical)
 169+ 97D2 BA           	cp d 											; Límite - Posición.
 170+ 97D3 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97D4 3A CB 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97D7 CB 47        	bit 0,a
 173+ 97D9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97DB
 175+ 97DB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97DB
 177+ 97DB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97DC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97DE
 180+ 97DE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97DE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97DE
 183+ 97DE 3A AD 8B         ld a,(Coordenada_X)
 184+ 97E1 16 0F            ld d,Centro_izquierda
 185+ 97E3 A7               and a
 186+ 97E4 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97E5 28 1E            jr z,3F
 188+ 97E7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97E9              ;                                                    ; _salimos sin modificar nada.
 190+ 97E9 18 0E            jr 2F
 191+ 97EB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97EC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97EE
 194+ 97EE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97EE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97EE
 197+ 97EE 3A AD 8B         ld a,(Coordenada_X)
 198+ 97F1 16 10            ld d,Centro_derecha
 199+ 97F3 A7               and a
 200+ 97F4 92               sub d
 201+ 97F5 28 0E            jr z,3F
 202+ 97F7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97F9              ;                                                    ; _salimos sin modificar nada.
 204+ 97F9 CB 43        2 bit 0,e
 205+ 97FB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97FD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97FE CD 92 98         call Modificaccionne
 208+ 9801 C1           	pop bc
 209+ 9802 CD A2 98         call Inicializacion
 210+ 9805 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9806
 212+ 9806              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9806
 214+ 9806 C5           4 push bc
 215+ 9807 01 BB 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 980A 0A           	ld a,(bc)
 217+ 980B 3D           	dec a
 218+ 980C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 980D 7D           	ld a,l
 220+ 980E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 980F CB 47        	bit 0,a
 222+ 9811 28 03        	jr z,5F
 223+ 9813 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9814 18 2E        	jr 7F
 225+ 9816
 226+ 9816              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9816
 228+ 9816 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9817 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9818 3A B9 8B     	ld a,(Ctrl_0)
 231+ 981B CB 4F        	bit 1,a
 232+ 981D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 981F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9820
 235+ 9820              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9820
 237+ 9820 1C               inc e
 238+ 9821 1D               dec e
 239+ 9822 20 07            jr nz,12F
 240+ 9824 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9825 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9826 22 BC 8B     	ld (Posicion_actual),hl
 243+ 9829 18 44        13 jr 9F
 244+ 982B CB 43        12 bit 0,e
 245+ 982D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 982F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 982F C1           	pop bc
 248+ 9830 18 D3        	jr 3B
 249+ 9832 80           14 add b
 250+ 9833 6F               ld l,a
 251+ 9834 22 BC 8B     	ld (Posicion_actual),hl
 252+ 9837 CD 92 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 983A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 983C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 983E 32 B9 8B         ld (Ctrl_0),a
 256+ 9841 F1           	pop af
 257+ 9842 18 2B        	jr 9F
 258+ 9844
 259+ 9844              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9844
 261+ 9844 F5           7 push af
 262+ 9845 3A B9 8B     	ld a,(Ctrl_0)
 263+ 9848 CB 47        	bit 0,a
 264+ 984A 20 1D        	jr nz,8F
 265+ 984C F1           	pop af
 266+ 984D
 267+ 984D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 984D
 269+ 984D 1C           	inc e
 270+ 984E 1D               dec e
 271+ 984F 20 07            jr nz,10F
 272+ 9851 90           	sub b
 273+ 9852 6F               ld l,a
 274+ 9853 22 BC 8B     	ld (Posicion_actual),hl
 275+ 9856 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9858              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9858 CB 43        10 bit 0,e
 278+ 985A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 985C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 985C C1           	pop bc
 281+ 985D 18 A6        	jr 3B
 282+ 985F 90           16 sub b
 283+ 9860 6F               ld l,a
 284+ 9861 22 BC 8B     	ld (Posicion_actual),hl
 285+ 9864 CD 92 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9867 18 06            jr 9F
 287+ 9869 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 986B 32 B9 8B         ld (Ctrl_0),a
 289+ 986E F1           	pop af
 290+ 986F C1           9 pop bc
 291+ 9870 1E 00        	ld e,0
 292+ 9872 CD A2 98         call Inicializacion
 293+ 9875 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9876 08           	ex af,af
 295+ 9877 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9878 18 8B            jr 3B
 297+ 987A
 298+ 987A              ; --------------------
 299+ 987A
 300+ 987A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 987C CD C5 99     1 call PreviousScan
 302+ 987F 10 FB            djnz 1B
 303+ 9881 22 BC 8B     	ld (Posicion_actual),hl
 304+ 9884 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9885 C9           	ret
 306+ 9886
 307+ 9886              ; --------------------
 308+ 9886
 309+ 9886 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9888 CD B6 99     1 call NextScan
 311+ 988B 10 FB            djnz 1B
 312+ 988D 22 BC 8B     	ld (Posicion_actual),hl
 313+ 9890 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9891 C9           	ret
 315+ 9892
 316+ 9892              ; --------------------
 317+ 9892              ;
 318+ 9892              ;	22/01/23
 319+ 9892              ;
 320+ 9892              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9892              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9892              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9892
 324+ 9892
 325+ 9892              Modificaccionne
 326+ 9892
 327+ 9892 3A CB 8B     	ld a,(Cuad_objeto)
 328+ 9895 FE 02        	cp 2
 329+ 9897 CC 7A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 989A DC 7A 98         call c,Modifica_Pos_actual
 331+ 989D C8           	ret z
 332+ 989E CD 86 98         call Modifica_Pos_actual2
 333+ 98A1 C9               ret
 334+ 98A2
 335+ 98A2              ; *************************************************************************************************************************************************************************************************
 336+ 98A2              ;
 337+ 98A2              ;	13/8/22
 338+ 98A2              ;
 339+ 98A2              ;	Inicializacion
 340+ 98A2              ;
 341+ 98A2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A2              ;
 345+ 98A2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A2              ;	_ desaparece/aparece.
 348+ 98A2
 349+ 98A2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A2              ;
 352+ 98A2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A2              ; 		   [E] ="0"
 355+ 98A2
 356+ 98A2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A2
 358+ 98A2 CD A2 94     Inicializacion call calcula_tercio
 359+ 98A5 28 36        	jr z,primit
 360+ 98A7 E6 02        	and 2
 361+ 98A9 20 07        	jr nz,segmit
 362+ 98AB 7D           	ld a,l
 363+ 98AC FE 7F        	cp $7f
 364+ 98AE 38 2D        	jr c,primit
 365+ 98B0 28 2B        	jr z,primit
 366+ 98B2 CD 18 99     segmit call column
 367+ 98B5 38 13        	jr c,tercuad
 368+ 98B7 3E 04        cuarcuad ld a,4
 369+ 98B9 32 CB 8B     	ld (Cuad_objeto),a
 370+ 98BC 21 20 48     	ld hl,$4820
 371+ 98BF 22 CD 8B     	ld (Limite_horizontal),hl
 372+ 98C2 21 CF 8B     	ld hl,Limite_vertical
 373+ 98C5 36 0D        	ld (hl),$0d
 374+ 98C7 08           	ex af,af
 375+ 98C8 18 3C        	jr 1F
 376+ 98CA              tercuad
 377+ 98CA 3E 03        	ld a,3
 378+ 98CC 32 CB 8B     	ld (Cuad_objeto),a
 379+ 98CF 21 20 48     	ld hl,$4820
 380+ 98D2 22 CD 8B     	ld (Limite_horizontal),hl
 381+ 98D5 21 CF 8B     	ld hl,Limite_vertical
 382+ 98D8 36 12        	ld (hl),$12
 383+ 98DA 08           	ex af,af
 384+ 98DB 18 29        	jr 1F
 385+ 98DD CD 18 99     primit call column
 386+ 98E0 38 13        	jr c, primcuad
 387+ 98E2              segcuad
 388+ 98E2 3E 02        	ld a,2
 389+ 98E4 32 CB 8B     	ld (Cuad_objeto),a
 390+ 98E7 21 C0 4F     	ld hl,$4fc0
 391+ 98EA 22 CD 8B     	ld (Limite_horizontal),hl
 392+ 98ED 21 CF 8B     	ld hl,Limite_vertical
 393+ 98F0 36 0D        	ld (hl),$0d
 394+ 98F2 08           	ex af,af
 395+ 98F3 18 11        	jr 1F
 396+ 98F5              primcuad
 397+ 98F5 3E 01        	ld a,1
 398+ 98F7 32 CB 8B     	ld (Cuad_objeto),a
 399+ 98FA 21 C0 4F     	ld hl,$4fc0
 400+ 98FD 22 CD 8B     	ld (Limite_horizontal),hl
 401+ 9900 21 CF 8B     	ld hl,Limite_vertical
 402+ 9903 36 12        	ld (hl),$12
 403+ 9905 08           	ex af,af
 404+ 9906
 405+ 9906 C5           1 push bc
 406+ 9907 E5           	push hl
 407+ 9908 D5           	push de
 408+ 9909
 409+ 9909 2A BC 8B     	ld hl,(Posicion_actual)
 410+ 990C CD C0 94     	call Genera_coordenadas
 411+ 990F
 412+ 990F D1           	pop de
 413+ 9910 E1           	pop hl
 414+ 9911 C1           	pop bc
 415+ 9912
 416+ 9912 21 B9 8B     	ld hl,Ctrl_0
 417+ 9915 CB EE        	set 5,(hl)
 418+ 9917 C9           	ret
 419+ 9918
 420+ 9918              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9918
 422+ 9918              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9918              ;
 424+ 9918              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9918
 426+ 9918 7D           column ld a,l
 427+ 9919 E6 1F        	and $1f
 428+ 991B FE 10         	cp $10
 429+ 991D C9            	ret
 430+ 991E
 431+ 991E              ; --------------------------------------------------------------------------------------------------------------------
 432+ 991E              ;
 433+ 991E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 991E              ;
 435+ 991E              ; 14/12/22
 436+ 991E              ;
 437+ 991E              ;	Modifica: A y BC.
 438+ 991E
 439+ 991E 3A CB 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9921 E6 01        	and 1
 441+ 9923 28 17        	jr z,1F
 442+ 9925
 443+ 9925              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9925
 445+ 9925 3A AD 8B     	ld a,(Coordenada_X)
 446+ 9928 47           	ld b,a
 447+ 9929 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 992A 79           	ld a,c
 449+ 992B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 992C 38 08        	jr c,2F
 451+ 992E 47           	ld b,a
 452+ 992F 79           	ld a,c
 453+ 9930 90           	sub b
 454+ 9931 32 CC 8B     	ld (Columnas),a
 455+ 9934 18 1B        	jr 4F
 456+ 9936 79           2 ld a,c
 457+ 9937 32 CC 8B     	ld (Columnas),a
 458+ 993A 18 15        	jr 4F
 459+ 993C
 460+ 993C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 993C
 462+ 993C 3A AD 8B     1 ld a,(Coordenada_X)
 463+ 993F 81           	add c
 464+ 9940 3D           	dec a
 465+ 9941 D6 1F        	sub $1f
 466+ 9943 38 08        	jr c,3F
 467+ 9945 47           	ld b,a
 468+ 9946 79           	ld a,c
 469+ 9947 90           	sub b
 470+ 9948 32 CC 8B     	ld (Columnas),a
 471+ 994B 18 04        	jr 4F
 472+ 994D 79           3 ld a,c
 473+ 994E 32 CC 8B     	ld (Columnas),a
 474+ 9951 D9           4 exx
 475+ 9952 4F           	ld c,a
 476+ 9953 D9           	exx
 477+ 9954 C9            ret
 478+ 9955
 479+ 9955              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9955              ;
 481+ 9955              ;   19/7/23
 482+ 9955              ;
 483+ 9955              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9955              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9955              ;
 486+ 9955              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9955              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9955              ;
 489+ 9955              ;	DESTRUYE: HL,B Y A.
 490+ 9955
 491+ 9955 3A CB 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9958 FE 02        	cp 2
 493+ 995A 38 18        	jr c,1F
 494+ 995C 28 16        	jr z,1F
 495+ 995E E6 01        	and 1
 496+ 9960 28 0D        	jr z,3F
 497+ 9962
 498+ 9962              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9962
 500+ 9962 CD 9E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9965
 502+ 9965 7D           9 ld a,l
 503+ 9966 E6 1F        	and $1f
 504+ 9968 28 2A        	jr z,7F
 505+ 996A 2B           	dec hl
 506+ 996B 10 F8        	djnz 9B
 507+ 996D 18 25        	jr 7F
 508+ 996F
 509+ 996F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 996F
 511+ 996F 2A BC 8B     3 ld hl,(Posicion_actual)
 512+ 9972 18 20        	jr 7F
 513+ 9974
 514+ 9974 28 14        1 jr z,2F
 515+ 9976
 516+ 9976              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9976
 518+ 9976 CD 9E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9979
 520+ 9979 7D           4 ld a,l
 521+ 997A E6 1F        	and $1f
 522+ 997C 28 03        	jr z,6F
 523+ 997E 2B           	dec hl
 524+ 997F 10 F8        	djnz 4B
 525+ 9981 06 0F        6 ld b,15
 526+ 9983 CD C5 99     5 call PreviousScan
 527+ 9986 10 FB        	djnz 5B
 528+ 9988 18 0A        	jr 7F
 529+ 998A
 530+ 998A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 998A
 532+ 998A CD 9E 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 998D 06 0F        	ld b,15
 534+ 998F CD C5 99     8 call PreviousScan
 535+ 9992 10 FB        	djnz 8B
 536+ 9994
 537+ 9994 E5           7 push hl
 538+ 9995 DD E1        	pop ix
 539+ 9997
 540+ 9997 2A BE 8B     	ld hl,(Puntero_objeto)
 541+ 999A E5           	push hl
 542+ 999B FD E1        	pop iy
 543+ 999D
 544+ 999D C9           	ret
 545+ 999E
 546+ 999E              ; --------------------------------------------------------------------------------------------------------------------
 547+ 999E              ;
 548+ 999E              ;	2/1/23
 549+ 999E              ;
 550+ 999E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 999E              ;
 552+ 999E              ;	Tras esta rutina tenemos:
 553+ 999E              ;
 554+ 999E              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 999E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 999E              ;
 557+ 999E              ;	DESTRUYE!!!!! HL,B y A.
 558+ 999E
 559+ 999E 2A BC 8B     Operandos ld hl,(Posicion_actual)
 560+ 99A1 3A CC 8B     	ld a,(Columnas)
 561+ 99A4 3D           	dec a
 562+ 99A5 20 01        	jr nz,1F
 563+ 99A7 3C           	inc a
 564+ 99A8 47           1 ld b,a
 565+ 99A9 C9           	ret
 566+ 99AA
 567+ 99AA              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99AA              ;
 569+ 99AA              ;	Prepara_draw
 570+ 99AA              ;
 571+ 99AA              ;	Es una rutina de carga.
 572+ 99AA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99AA              ;
 574+ 99AA              ;	FUNCIONAMIENTO:
 575+ 99AA              ;
 576+ 99AA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99AA              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99AA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99AA              ;
 580+ 99AA              ;	DESTRUYE:
 581+ 99AA              ;
 582+ 99AA              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99AA
 584+ 99AA 21 BA 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99AD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99AE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99AF 4E           	ld c,(hl)
 588+ 99B0 2A BC 8B     	ld hl,(Posicion_actual)
 589+ 99B3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99B5 C9           	ret
 591+ 99B6
 592+ 99B6              ;----------------------------------------------------------------------------------------------------------------
 593+ 99B6              ;
 594+ 99B6              ;	5/08/22
 595+ 99B6              ;
 596+ 99B6              ;   NextScan.
 597+ 99B6              ;
 598+ 99B6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99B6              ;
 600+ 99B6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99B6              ;
 602+ 99B6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99B6              ;
 604+ 99B6              ;       DESTRUIDOS: AF y HL !!!
 605+ 99B6              ;
 606+ 99B6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99B6              ;
 608+ 99B6
 609+ 99B6 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99B7 7C               ld a,h
 611+ 99B8 E6 07            and 7
 612+ 99BA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99BB
 614+ 99BB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99BC C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99BE 6F               ld l,a
 617+ 99BF D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99C0
 619+ 99C0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99C1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99C3 67               ld h,a
 622+ 99C4 C9               ret
 623+ 99C5
 624+ 99C5              ;----------------------------------------------------------------------------------------------------------------
 625+ 99C5              ;
 626+ 99C5              ;	5/08/22
 627+ 99C5              ;
 628+ 99C5              ;   PreviousScan.
 629+ 99C5              ;
 630+ 99C5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99C5              ;
 632+ 99C5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99C5              ;
 634+ 99C5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99C5              ;
 636+ 99C5              ;       DESTRUIDOS: AF y HL !!!
 637+ 99C5              ;
 638+ 99C5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99C5              ;
 640+ 99C5
 641+ 99C5 7C           PreviousScan ld a,h
 642+ 99C6 25               dec h               ; Dec H.
 643+ 99C7 E6 07            and 7
 644+ 99C9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99CA
 646+ 99CA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99CB D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99CD 6F               ld l,a
 649+ 99CE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99CF
 651+ 99CF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99D0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D2 67               ld h,a
 654+ 99D3 C9               ret
 655+ 99D4
 656+ 99D4
 657+ 99D4
 658+ 99D4
 659+ 99D4
 660+ 99D4
 661+ 99D4
 662+ 99D4
 663+ 99D4
 664+ 99D4
 665+ 99D4
 666+ 99D4
# file closed: Draw_XOR.asm
2168  99D4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D4
   2+ 99D4              ; ******************************************************************************************************************************************************************************************
   3+ 99D4              ;
   4+ 99D4              ;   20/05/23
   5+ 99D4              ;
   6+ 99D4              ;	Recompone_posicion_inicio
   7+ 99D4              ;
   8+ 99D4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99D4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99D4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99D4              ;	_ a una u otra rutina.
  12+ 99D4
  13+ 99D4              Recompone_posicion_inicio
  14+ 99D4
  15+ 99D4 2A C9 8B     	ld hl,(Posicion_inicio)
  16+ 99D7 7D           	ld a,l
  17+ 99D8 E6 1F        	and $1f
  18+ 99DA 28 16        	jr z,1F
  19+ 99DC
  20+ 99DC FE 1F        	cp $1f
  21+ 99DE 28 0D        	jr z,3F
  22+ 99E0
  23+ 99E0 21 B8 8B     	ld hl,Ctrl_2
  24+ 99E3 CB C6        	set 0,(hl)
  25+ 99E5 2A BE 8B     	ld hl,(Puntero_objeto)
  26+ 99E8 22 EA 8B     	ld (Repone_puntero_objeto),hl
  27+ 99EB 18 08        	jr 2F
  28+ 99ED
  29+ 99ED CD 9B 9B     3 call Mov_left
  30+ 99F0 18 03        	jr 2F
  31+ 99F2
  32+ 99F2 CD 78 9A     1 call Mov_right
  33+ 99F5 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99F8 22 BE 8B     	ld (Puntero_objeto),hl
  35+ 99FB C9           	ret
  36+ 99FC
  37+ 99FC              ; ******************************************************************************************************************************************************************************************
  38+ 99FC              ;
  39+ 99FC              ;   27/05/23
  40+ 99FC              ;
  41+ 99FC              ;	Mov_down
  42+ 99FC              ;
  43+ 99FC              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99FC              ;
  45+ 99FC              ;
  46+ 99FC              Mov_down
  47+ 99FC
  48+ 99FC CD 66 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99FF              ;																	; _ repone (Puntero_objeto).
  50+ 99FF 21 B9 8B     	ld hl,Ctrl_0
  51+ 9A02 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A04              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A04              ; 																	; _ en el caso de que no lo haya.
  54+ 9A04 3A D4 8B     	ld a,(Vel_down)
  55+ 9A07 47           	ld b,a
  56+ 9A08 2A BC 8B         ld hl,(Posicion_actual)
  57+ 9A0B CD A2 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A0E E6 02        	and 2
  59+ 9A10 28 17        	jr z,1F
  60+ 9A12
  61+ 9A12              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A12              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A12
  64+ 9A12 7C           	ld a,h
  65+ 9A13 FE 57        	cp $57
  66+ 9A15 20 12        	jr nz,1F
  67+ 9A17
  68+ 9A17 7D           	ld a,l
  69+ 9A18 C6 20        	add $20
  70+ 9A1A 30 0D        	jr nc,1F
  71+ 9A1C
  72+ 9A1C              ; ------------------------------
  73+ 9A1C              ;
  74+ 9A1C              ;	12/01/24
  75+ 9A1C
  76+ 9A1C              ;	call Reaparece_arriba
  77+ 9A1C CD 28 9D     	call Reinicio
  78+ 9A1F
  79+ 9A1F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A1F
  81+ 9A1F 3A 1F 8C     	ld a,(Ctrl_3)
  82+ 9A22 CB CF        	set 1,a
  83+ 9A24 32 1F 8C     	ld (Ctrl_3),a
  84+ 9A27
  85+ 9A27 18 08        	jr 3F
  86+ 9A29              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A29              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A29              ; ------------------------------
  89+ 9A29
  90+ 9A29 CD B6 99     1 call NextScan
  91+ 9A2C 22 BC 8B     	ld (Posicion_actual),hl
  92+ 9A2F 10 DA            djnz 2B
  93+ 9A31 CD C0 94     3 call Genera_coordenadas
  94+ 9A34 C9           	ret
  95+ 9A35
  96+ 9A35              ; ******************************************************************************************************************************************************************************************
  97+ 9A35              ;
  98+ 9A35              ;   27/05/23
  99+ 9A35              ;
 100+ 9A35              ;	Mov_up
 101+ 9A35              ;
 102+ 9A35              ; 	Mueve el Sprite hacia arriba.
 103+ 9A35              ;
 104+ 9A35              ;
 105+ 9A35              Mov_up
 106+ 9A35
 107+ 9A35 CD 66 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A38              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A38 21 B9 8B     	ld hl,Ctrl_0
 110+ 9A3B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A3D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A3D              ; 																		; _ en el caso de que no lo haya.
 113+ 9A3D 3A D3 8B     	ld a,(Vel_up)
 114+ 9A40 47           	ld b,a
 115+ 9A41 2A BC 8B     	ld hl,(Posicion_actual)
 116+ 9A44 CD A2 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A47 A7           	and a
 118+ 9A48 20 10        	jr nz,1F
 119+ 9A4A
 120+ 9A4A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A4A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A4A
 123+ 9A4A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A4B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A4D 20 0B            jr nz,1F
 126+ 9A4F 7D               ld a,l
 127+ 9A50 D6 20            sub $20
 128+ 9A52 30 06            jr nc,1F
 129+ 9A54 25               dec h
 130+ 9A55
 131+ 9A55              ; -----------------------------
 132+ 9A55 CD 09 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A58              ;	call Reinicio
 134+ 9A58              ; -----------------------------
 135+ 9A58
 136+ 9A58 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A5A CD C5 99     1 call PreviousScan
 138+ 9A5D 22 BC 8B     	ld (Posicion_actual),hl
 139+ 9A60 10 E2            djnz 3B
 140+ 9A62 CD C0 94     2 call Genera_coordenadas
 141+ 9A65 C9           	ret
 142+ 9A66
 143+ 9A66              ; -----------------------------
 144+ 9A66              ;
 145+ 9A66              ;	27/5/23
 146+ 9A66              ;
 147+ 9A66              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A66              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A66              ;
 150+ 9A66              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A66              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A66              ;
 153+ 9A66              ;	Modifica: A y (Puntero_objeto).
 154+ 9A66
 155+ 9A66 3A B8 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A69 CB 47        	bit 0,a
 157+ 9A6B C8           	ret z
 158+ 9A6C CB 87        	res 0,a
 159+ 9A6E 32 B8 8B     	ld (Ctrl_2),a
 160+ 9A71 2A EA 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A74 22 BE 8B     	ld (Puntero_objeto),hl
 162+ 9A77 C9           	ret
 163+ 9A78
 164+ 9A78              ; ******************************************************************************************************************************************************************************************
 165+ 9A78              ;
 166+ 9A78              ;	19/10/22
 167+ 9A78              ;
 168+ 9A78              ;	Mov_right.
 169+ 9A78              ;
 170+ 9A78              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A78              ;
 172+ 9A78
 173+ 9A78 3A B9 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A7B CB 77        	bit 6,a
 175+ 9A7D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A7F
 177+ 9A7F CD B7 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A82 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A83
 180+ 9A83 21 B9 8B     	ld hl,Ctrl_0
 181+ 9A86 CB E6        	set 4,(hl)
 182+ 9A88 18 52        	jr 8F
 183+ 9A8A
 184+ 9A8A 21 B9 8B     10 ld hl,Ctrl_0
 185+ 9A8D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A8F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A8F              ; 																	; _ en el caso de que no lo haya.
 188+ 9A8F 3A AD 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A92 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A94 20 46        	jr nz,8F
 191+ 9A96
 192+ 9A96 3A C0 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A99 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A9A 28 40        	jr z,8F
 195+ 9A9C
 196+ 9A9C              ; ---------- ---------- ----------
 197+ 9A9C              ;
 198+ 9A9C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A9C
 200+ 9A9C 3A D2 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A9F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AA1 28 11        	jr z,1F
 203+ 9AA3 38 06        	jr c,6F
 204+ 9AA5 FE 04        	cp 4
 205+ 9AA7 28 14        	jr z,7F
 206+ 9AA9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AAB
 208+ 9AAB              ; ---------- ---------- ----------
 209+ 9AAB              ;
 210+ 9AAB              ; Perfiles de velocidad
 211+ 9AAB              ;
 212+ 9AAB
 213+ 9AAB 3A C0 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AAE FE FE        	cp $fe
 215+ 9AB0 20 2A        	jr nz,8F
 216+ 9AB2 18 10        	jr 3F
 217+ 9AB4 3A C0 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AB7 FE FD        	cp $fd
 219+ 9AB9 20 21        	jr nz,8F
 220+ 9ABB 18 07        	jr 3F
 221+ 9ABD 3A C0 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AC0 FE FB        	cp $fb
 223+ 9AC2 20 18        	jr nz,8F
 224+ 9AC4
 225+ 9AC4              ; ---------- ---------- ----------
 226+ 9AC4
 227+ 9AC4              3
 228+ 9AC4 CD F7 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AC7              ;	call Reinicio
 230+ 9AC7
 231+ 9AC7              ; ---------- ---------- ----------
 232+ 9AC7              ;
 233+ 9AC7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AC7
 235+ 9AC7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AC9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ACA CD E3 9A     	call DESPLZ_DER
 238+ 9ACD C1           	pop bc
 239+ 9ACE 10 F9        	djnz 5B
 240+ 9AD0 2A BC 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AD3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AD4 22 BC 8B     	ld (Posicion_actual),hl
 243+ 9AD7 CD C0 94     	call Genera_coordenadas
 244+ 9ADA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9ADC
 246+ 9ADC              ; ---------- ---------- ----------
 247+ 9ADC
 248+ 9ADC 2A BC 8B     8 ld hl,(Posicion_actual)
 249+ 9ADF CD E3 9A     	call DESPLZ_DER
 250+ 9AE2 C9           2 ret
 251+ 9AE3
 252+ 9AE3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AE3              ;
 254+ 9AE3              ;	22/9/22
 255+ 9AE3              ;
 256+ 9AE3
 257+ 9AE3 CD F2 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AE6 CD 3E 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AE9 CD 67 9B         call Ciclo_completo
 260+ 9AEC 21 B9 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AEF CB FE        	set 7,(hl)
 262+ 9AF1 C9           	ret
 263+ 9AF2
 264+ 9AF2              ; ******************************************************************************************************************************************************************************************
 265+ 9AF2              ;	15/02/23
 266+ 9AF2              ;
 267+ 9AF2
 268+ 9AF2 3A D2 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AF5 47           	ld b,a
 270+ 9AF6 2A C5 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AF9 23           1 inc hl
 272+ 9AFA 23           	inc hl
 273+ 9AFB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AFD 22 C5 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B00 CD A1 90     	call Extrae_address
 276+ 9B03 22 BE 8B     	ld (Puntero_objeto),hl
 277+ 9B06
 278+ 9B06              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B06
 280+ 9B06              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B06              ; Cuántos movimientos hemos hecho ??
 282+ 9B06              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B06
 284+ 9B06 2A C1 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B09 EB           	ex de,hl
 286+ 9B0A A7           	and a
 287+ 9B0B ED 52        	sbc hl,de
 288+ 9B0D CB 3D        	srl l
 289+ 9B0F 3E 08        6 ld a,8
 290+ 9B11 95           	sub l
 291+ 9B12 30 1E        	jr nc,3F
 292+ 9B14
 293+ 9B14              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B14              ; B="0".
 295+ 9B14
 296+ 9B14 04           4 inc b
 297+ 9B15 3C           	inc a
 298+ 9B16 20 FC        	jr nz,4B
 299+ 9B18 78           	ld a,b
 300+ 9B19 08           	ex af,af
 301+ 9B1A 2A C1 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B1D 23           5 inc hl
 303+ 9B1E 23           	inc hl
 304+ 9B1F 10 FC        	djnz 5B
 305+ 9B21 22 C5 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B24 CD A1 90     	call Extrae_address
 307+ 9B27 22 BE 8B     	ld (Puntero_objeto),hl
 308+ 9B2A
 309+ 9B2A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B2A              ; _(Posicion_actual).
 311+ 9B2A
 312+ 9B2A 21 BC 8B     	ld hl,Posicion_actual
 313+ 9B2D 34           	inc (hl)
 314+ 9B2E 08               ex af,af
 315+ 9B2F 6F           	ld l,a
 316+ 9B30 18 DD        	jr 6B
 317+ 9B32
 318+ 9B32              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B32
 320+ 9B32 47           3 ld b,a
 321+ 9B33 2A C3 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B36 23           2 inc hl
 323+ 9B37 23           	inc hl
 324+ 9B38 10 FC        	djnz 2B
 325+ 9B3A 22 C7 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B3D C9           8 ret
 327+ 9B3E
 328+ 9B3E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B3E              ;
 330+ 9B3E              ;	24/7/22
 331+ 9B3E              ;
 332+ 9B3E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B3E              ;
 334+ 9B3E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B3E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B3E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B3E
 338+ 9B3E 3A C0 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B41 A7           	and a
 340+ 9B42 20 1F        	jr nz,1F
 341+ 9B44 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B46 32 C0 8B         ld (CTRL_DESPLZ),a
 343+ 9B49
 344+ 9B49 21 BB 8B     	ld hl,Columns
 345+ 9B4C 34           	inc (hl)
 346+ 9B4D 3A CB 8B     	ld a,(Cuad_objeto)
 347+ 9B50 E6 01        	and 1
 348+ 9B52 28 0F        	jr z,1F
 349+ 9B54 2A BC 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B57 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B58 22 BC 8B     	ld (Posicion_actual),hl
 352+ 9B5B CD C0 94     	call Genera_coordenadas
 353+ 9B5E CD C3 9C     	call Inc_CTRL_DESPLZ
 354+ 9B61 18 03        	jr 2F
 355+ 9B63 CD C3 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B66 C9           2 ret
 357+ 9B67
 358+ 9B67              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B67              ;
 360+ 9B67              ;	24/7/22
 361+ 9B67              ;
 362+ 9B67              ;	Ciclo_completo.
 363+ 9B67              ;
 364+ 9B67              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B67              ;
 366+ 9B67              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B67              ; 	Decrementamos (Columns).
 368+ 9B67              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B67              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B67
 371+ 9B67
 372+ 9B67 3A C0 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B6A FE FF        	cp $ff
 374+ 9B6C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B6E E6 F0        	and $f0
 376+ 9B70 20 28        	jr nz,3F
 377+ 9B72
 378+ 9B72              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B72
 380+ 9B72 3A C0 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B75 47           	ld b,a
 382+ 9B76 3E F8        	ld a,$f8
 383+ 9B78 80           	add b
 384+ 9B79 32 C0 8B     	ld (CTRL_DESPLZ),a
 385+ 9B7C 18 1C        	jr 3F
 386+ 9B7E 21 BB 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B81 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B82 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B83 32 C0 8B     	ld (CTRL_DESPLZ),a
 390+ 9B86 3A CB 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B89 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B8B 20 0A        	jr nz,2F
 393+ 9B8D 2A BC 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B90 23           	inc hl
 395+ 9B91 22 BC 8B     	ld (Posicion_actual),hl
 396+ 9B94 CD C0 94     	call Genera_coordenadas
 397+ 9B97
 398+ 9B97              ; Inicia el puntero de Sprite.
 399+ 9B97
 400+ 9B97 CD B6 90     2 call Inicia_puntero_objeto_der
 401+ 9B9A C9           3 ret
 402+ 9B9B
 403+ 9B9B              ; ******************************************************************************************************************************************************************************************
 404+ 9B9B              ;
 405+ 9B9B              ;	15/02/23
 406+ 9B9B              ;
 407+ 9B9B              ;	Mov_left.
 408+ 9B9B              ;
 409+ 9B9B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B9B              ;
 411+ 9B9B              Mov_left
 412+ 9B9B
 413+ 9B9B 21 B9 8B     	ld hl,Ctrl_0
 414+ 9B9E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BA0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BA0              ; 																	; _ en el caso de que no lo haya.
 417+ 9BA0 3A B9 8B     	ld a,(Ctrl_0)
 418+ 9BA3 CB 77        	bit 6,a
 419+ 9BA5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BA7
 421+ 9BA7 CD BD 9C     	call Stop_Amadeus_left
 422+ 9BAA C8           	ret z
 423+ 9BAB 20 4A        	jr nz,8F
 424+ 9BAD
 425+ 9BAD 3A AD 8B     11 ld a,(Coordenada_X)
 426+ 9BB0 A7           	and a
 427+ 9BB1 20 44        	jr nz,8F
 428+ 9BB3
 429+ 9BB3 3A C0 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BB6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BB7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BB9
 433+ 9BB9              ; ---------- ---------- ----------
 434+ 9BB9
 435+ 9BB9 3A D1 8B     	ld a,(Vel_left)
 436+ 9BBC FE 02        	cp 2
 437+ 9BBE 28 0F        	jr z,1F
 438+ 9BC0 38 04        	jr c,6F
 439+ 9BC2 FE 04        	cp 4
 440+ 9BC4 28 12        	jr z,7F
 441+ 9BC6
 442+ 9BC6              ; ---------- ---------- ----------
 443+ 9BC6
 444+ 9BC6 3A C0 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BC9 FE F8        	cp $f8
 446+ 9BCB 20 2A        	jr nz,8F
 447+ 9BCD 18 10        	jr 4F
 448+ 9BCF 3A C0 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BD2 FE F9        	cp $f9
 450+ 9BD4 20 21        	jr nz,8F
 451+ 9BD6 18 07        	jr 4F
 452+ 9BD8 3A C0 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BDB FE FB        	cp $fb
 454+ 9BDD 20 18        	jr nz,8F
 455+ 9BDF
 456+ 9BDF              ; ---------- ---------- ----------
 457+ 9BDF
 458+ 9BDF              4
 459+ 9BDF CD E5 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE2              ;	call Reinicio
 461+ 9BE2
 462+ 9BE2              ; ---------- ---------- ----------
 463+ 9BE2
 464+ 9BE2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BE4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BE5
 467+ 9BE5              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BE5              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BE5
 470+ 9BE5 CD FE 9B     	call DESPLZ_IZQ
 471+ 9BE8 C1           	pop bc
 472+ 9BE9 10 F9        	djnz 5B
 473+ 9BEB 2A BC 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BEE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BEF 22 BC 8B     	ld (Posicion_actual),hl
 476+ 9BF2 CD C0 94     	call Genera_coordenadas
 477+ 9BF5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BF7
 479+ 9BF7              ; ---------- ---------- ----------
 480+ 9BF7
 481+ 9BF7              ; Movemos, no hay recolocación.
 482+ 9BF7
 483+ 9BF7 2A BC 8B     8 ld hl,(Posicion_actual)
 484+ 9BFA CD FE 9B     	call DESPLZ_IZQ
 485+ 9BFD C9           2 ret
 486+ 9BFE
 487+ 9BFE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BFE              ;
 489+ 9BFE              ;	22/9/22
 490+ 9BFE
 491+ 9BFE              DESPLZ_IZQ
 492+ 9BFE
 493+ 9BFE CD 0D 9C     	call Desplaza_izquierda
 494+ 9C01 CD 59 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C04 CD 81 9C     	call Ciclo_completo_2
 496+ 9C07 21 B9 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C0A CB BE        	res 7,(hl)
 498+ 9C0C C9           	ret
 499+ 9C0D
 500+ 9C0D              Desplaza_izquierda
 501+ 9C0D
 502+ 9C0D 3A D1 8B     	ld a,(Vel_left)
 503+ 9C10 47           	ld b,a
 504+ 9C11 2A C7 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C14 23           1 inc hl
 506+ 9C15 23           	inc hl
 507+ 9C16 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C18 22 C7 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C1B CD A1 90     	call Extrae_address
 510+ 9C1E 22 BE 8B     	ld (Puntero_objeto),hl
 511+ 9C21
 512+ 9C21              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C21
 514+ 9C21              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C21              ; Cuántos movimientos hemos hecho ??
 516+ 9C21              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C21
 518+ 9C21 2A C3 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C24 EB           	ex de,hl
 520+ 9C25 A7           	and a
 521+ 9C26 ED 52        	sbc hl,de
 522+ 9C28 CB 3D        	srl l
 523+ 9C2A 3E 08        6 ld a,8
 524+ 9C2C 95           	sub l
 525+ 9C2D 30 1E        	jr nc,3F
 526+ 9C2F
 527+ 9C2F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C2F              ; B="0".
 529+ 9C2F
 530+ 9C2F 04           4 inc b
 531+ 9C30 3C           	inc a
 532+ 9C31 20 FC        	jr nz,4B
 533+ 9C33 78           	ld a,b
 534+ 9C34 08           	ex af,af
 535+ 9C35 2A C3 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C38 23           5 inc hl
 537+ 9C39 23           	inc hl
 538+ 9C3A 10 FC        	djnz 5B
 539+ 9C3C 22 C7 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C3F CD A1 90     	call Extrae_address
 541+ 9C42 22 BE 8B     	ld (Puntero_objeto),hl
 542+ 9C45
 543+ 9C45              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C45              ; _(Posicion_actual).
 545+ 9C45
 546+ 9C45 21 BC 8B     	ld hl,Posicion_actual
 547+ 9C48 35           	dec (hl)
 548+ 9C49 08           	ex af,af
 549+ 9C4A 6F           	ld l,a
 550+ 9C4B 18 DD        	jr 6B
 551+ 9C4D
 552+ 9C4D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C4D
 554+ 9C4D 47           3 ld b,a
 555+ 9C4E 2A C1 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C51 23           2 inc hl
 557+ 9C52 23           	inc hl
 558+ 9C53 10 FC        	djnz 2B
 559+ 9C55 22 C5 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C58 C9           8 ret
 561+ 9C59
 562+ 9C59              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C59              ;
 564+ 9C59              ;	modifica_parametros_1er_DESPLZ
 565+ 9C59              ;
 566+ 9C59              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C59              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C59              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C59
 570+ 9C59 3A C0 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C5C A7           	and a
 572+ 9C5D 20 1E        	jr nz,1F
 573+ 9C5F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C60 32 C0 8B         ld (CTRL_DESPLZ),a
 575+ 9C63 21 BB 8B     	ld hl,Columns
 576+ 9C66 34           	inc (hl)
 577+ 9C67 3A CB 8B     	ld a,(Cuad_objeto)
 578+ 9C6A E6 01        	and 1
 579+ 9C6C 20 0F        	jr nz,1F
 580+ 9C6E 2A BC 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C71 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C72 22 BC 8B     	ld (Posicion_actual),hl
 583+ 9C75 CD C0 94     	call Genera_coordenadas
 584+ 9C78 CD D4 9C     	call Dec_CTRL_DESPLZ
 585+ 9C7B 18 03        	jr 2F
 586+ 9C7D CD D4 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C80 C9           2 ret
 588+ 9C81
 589+ 9C81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C81
 591+ 9C81 3A C0 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C84 FE F7        	cp $f7
 593+ 9C86 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C88 30 2C        	jr nc,3F
 595+ 9C8A
 596+ 9C8A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C8A
 598+ 9C8A 06 00        	ld b,0
 599+ 9C8C 04           4 inc b
 600+ 9C8D 3C           	inc a
 601+ 9C8E FE F7        	cp $f7
 602+ 9C90 20 FA        	jr nz,4B
 603+ 9C92 3E FF        	ld a,$ff
 604+ 9C94 90           	sub b
 605+ 9C95 32 C0 8B     	ld (CTRL_DESPLZ),a
 606+ 9C98 18 1C        	jr 3F
 607+ 9C9A
 608+ 9C9A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C9A
 610+ 9C9A 21 BB 8B     1 ld hl,Columns
 611+ 9C9D 35           	dec (hl)
 612+ 9C9E AF           	xor a
 613+ 9C9F 32 C0 8B     	ld (CTRL_DESPLZ),a
 614+ 9CA2 3A CB 8B     	ld a,(Cuad_objeto)
 615+ 9CA5 E6 01        	and 1
 616+ 9CA7 28 0A        	jr z,2F
 617+ 9CA9 2A BC 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CAC 2B           	dec hl
 619+ 9CAD 22 BC 8B     	ld (Posicion_actual),hl
 620+ 9CB0 CD C0 94     	call Genera_coordenadas
 621+ 9CB3
 622+ 9CB3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CB3
 624+ 9CB3 CD C9 90     2 call Inicia_puntero_objeto_izq
 625+ 9CB6 C9           3 ret
 626+ 9CB7
 627+ 9CB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CB7              ;
 629+ 9CB7              ;	19/10/22
 630+ 9CB7              ;
 631+ 9CB7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CB7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CB7
 634+ 9CB7 3A AD 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CBA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CBC C9           	ret
 637+ 9CBD
 638+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CBD              ;
 640+ 9CBD              ;	19/10/22
 641+ 9CBD              ;
 642+ 9CBD              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CBD              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CBD
 645+ 9CBD 3A AD 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CC0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC2 C9           	ret
 648+ 9CC3
 649+ 9CC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CC3              ;
 651+ 9CC3              ;	24/7/22
 652+ 9CC3              ;
 653+ 9CC3              ;	Inc_CTRL_DESPLZ
 654+ 9CC3              ;
 655+ 9CC3              ;
 656+ 9CC3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CC3
 658+ 9CC3 21 C0 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CC6 3A D2 8B     	ld a,(Vel_right)
 660+ 9CC9 A7           	and a
 661+ 9CCA 28 06        	jr z,1F
 662+ 9CCC 47           	ld b,a
 663+ 9CCD 34           3 inc (hl)
 664+ 9CCE 10 FD        	djnz 3B
 665+ 9CD0 18 01        	jr 2F
 666+ 9CD2 34           1 inc (hl)
 667+ 9CD3 C9           2 ret
 668+ 9CD4
 669+ 9CD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CD4              ;
 671+ 9CD4              ;	5/2/23
 672+ 9CD4              ;
 673+ 9CD4              ;	Dec_CTRL_DESPLZ
 674+ 9CD4              ;
 675+ 9CD4              ;
 676+ 9CD4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CD4
 678+ 9CD4 21 C0 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CD7 3A D1 8B     	ld a,(Vel_left)
 680+ 9CDA A7           	and a
 681+ 9CDB 28 06        	jr z,1F
 682+ 9CDD 47           	ld b,a
 683+ 9CDE 35           3 dec (hl)
 684+ 9CDF 10 FD        	djnz 3B
 685+ 9CE1 18 01        	jr 2F
 686+ 9CE3 35           1 dec (hl)
 687+ 9CE4 C9           2 ret
 688+ 9CE5
 689+ 9CE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CE5
 691+ 9CE5 2A BC 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CE8 01 1F 00     	ld bc,31
 693+ 9CEB A7           	and a
 694+ 9CEC ED 4A        	adc hl,bc
 695+ 9CEE 22 BC 8B     	ld (Posicion_actual),hl
 696+ 9CF1 21 B9 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CF4 CB C6        	set 0,(hl)
 698+ 9CF6 C9           	ret
 699+ 9CF7
 700+ 9CF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CF7
 702+ 9CF7 2A BC 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CFA 01 1F 00     	ld bc,31
 704+ 9CFD A7           	and a
 705+ 9CFE ED 42        	sbc hl,bc
 706+ 9D00 22 BC 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D03 21 B9 8B     	ld hl,Ctrl_0
 708+ 9D06 CB CE        	set 1,(hl)
 709+ 9D08 C9           	ret
 710+ 9D09
 711+ 9D09              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D09
 713+ 9D09 24           Reaparece_abajo inc h
 714+ 9D0A 01 E0 17     	ld bc,$17e0
 715+ 9D0D A7           	and a
 716+ 9D0E ED 4A        	adc hl,bc
 717+ 9D10 22 BC 8B     	ld (Posicion_actual),hl
 718+ 9D13 21 B9 8B     	ld hl,Ctrl_0
 719+ 9D16 CB D6        	set 2,(hl)
 720+ 9D18 C9           	ret
 721+ 9D19
 722+ 9D19              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D19
 724+ 9D19 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D1C A7           	and a
 726+ 9D1D ED 42        	sbc hl,bc
 727+ 9D1F 22 BC 8B     	ld (Posicion_actual),hl
 728+ 9D22 21 B9 8B     	ld hl,Ctrl_0
 729+ 9D25 CB DE        	set 3,(hl)
 730+ 9D27 C9           	ret
 731+ 9D28
 732+ 9D28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D28              ;
 734+ 9D28              ;	15/07/23
 735+ 9D28
 736+ 9D28              Reinicio
 737+ 9D28
 738+ 9D28              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D28
 740+ 9D28 AF           	xor a
 741+ 9D29 21 E1 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D2C CD 4A 9D     	call Limpia_contenido_hl
 743+ 9D2F
 744+ 9D2F 21 BC 8B     	ld hl,Posicion_actual
 745+ 9D32 CD 4A 9D     	call Limpia_contenido_hl
 746+ 9D35
 747+ 9D35 CD A2 92     	call Inicializa_Puntero_indice_mov
 748+ 9D38 CD 49 9E     	call Inicia_Puntero_mov
 749+ 9D3B
 750+ 9D3B 21 E3 8B     	ld hl,Incrementa_puntero
 751+ 9D3E 06 05        	ld b,5
 752+ 9D40 77           1 ld (hl),a
 753+ 9D41 23           	inc hl
 754+ 9D42 10 FC        	djnz 1B
 755+ 9D44
 756+ 9D44 21 B8 8B     	ld hl,Ctrl_2
 757+ 9D47 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D49
 759+ 9D49 C9           	ret
 760+ 9D4A
 761+ 9D4A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D4B 23           	inc hl
 763+ 9D4C 77           	ld (hl),a
 764+ 9D4D C9           	ret
 765+ 9D4E
 766+ 9D4E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D4E              ;
 768+ 9D4E              ;	18/6/24
 769+ 9D4E              ;
 770+ 9D4E
 771+ 9D4E              Amadeus_a_izquierda
 772+ 9D4E
 773+ 9D4E              ;	Actualiza contador de movimientos.
 774+ 9D4E
 775+ 9D4E 21 6F 89     	ld hl,Comm_Amadeus
 776+ 9D51 35           	dec (hl)
 777+ 9D52 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D54
 779+ 9D54 2A 6D 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D57 2B           	dec hl
 781+ 9D58 2B           	dec hl
 782+ 9D59 2B           	dec hl
 783+ 9D5A 2B           	dec hl
 784+ 9D5B 22 6D 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D5E
 786+ 9D5E 21 1F 8C     	ld hl,Ctrl_3
 787+ 9D61 CB EE        	set 5,(hl)
 788+ 9D63
 789+ 9D63 C9           	ret
 790+ 9D64
 791+ 9D64 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D65 C9           	ret
 793+ 9D66
 794+ 9D66
 795+ 9D66              Amadeus_a_derecha
 796+ 9D66
 797+ 9D66              ;	Actualiza contador de movimientos.
 798+ 9D66
 799+ 9D66 21 6F 89     	ld hl,Comm_Amadeus
 800+ 9D69 34           	inc (hl)
 801+ 9D6A 3E 7A        	ld a,$7a
 802+ 9D6C BE           	cp (hl)
 803+ 9D6D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D6F
 805+ 9D6F 2A 6D 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D72 23           	inc hl
 807+ 9D73 23           	inc hl
 808+ 9D74 23           	inc hl
 809+ 9D75 23           	inc hl
 810+ 9D76 22 6D 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D79
 812+ 9D79 21 1F 8C     	ld hl,Ctrl_3
 813+ 9D7C CB EE        	set 5,(hl)
 814+ 9D7E C9           	ret
 815+ 9D7F
 816+ 9D7F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D80 C9           	ret
# file closed: Direcciones.asm
2169  9D81              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D81              ; ----- ----- ----- ----- -----
   2+ 9D81              ;
   3+ 9D81              ;   28/12/23
   4+ 9D81
   5+ 9D81              Movimiento
   6+ 9D81
   7+ 9D81              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D81
   9+ 9D81 3A B8 8B         ld a,(Ctrl_2)
  10+ 9D84 CB 57            bit 2,a
  11+ 9D86 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D88
  13+ 9D88 2A DF 8B         ld hl,(Puntero_mov)
  14+ 9D8B 7E               ld a,(hl)
  15+ 9D8C
  16+ 9D8C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D8C
  18+ 9D8C              Inicia_desplazamiento.
  19+ 9D8C
  20+ 9D8C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D8C
  22+ 9D8C CD 7F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D8F
  24+ 9D8F              ; Iniciamos (Repetimos_mov).
  25+ 9D8F
  26+ 9D8F 7E               ld a,(hl)
  27+ 9D90 E6 0F            and $0f
  28+ 9D92 32 E5 8B         ld (Repetimos_desplazamiento),a
  29+ 9D95 32 E6 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D98
  31+ 9D98              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D98
  33+ 9D98 23               inc hl
  34+ 9D99 7E               ld a,(hl)
  35+ 9D9A 32 E8 8B         ld (Cola_de_desplazamiento),a
  36+ 9D9D 2B               dec hl
  37+ 9D9E
  38+ 9D9E 21 B8 8B         ld hl,Ctrl_2
  39+ 9DA1 CB D6            set 2,(hl)
  40+ 9DA3
  41+ 9DA3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DA3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DA3
  44+ 9DA3              Desplazamiento_iniciado
  45+ 9DA3
  46+ 9DA3 CD 53 9E         call Aplica_desplazamiento
  47+ 9DA6
  48+ 9DA6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DA6
  50+ 9DA6 3A 1F 8C         ld a,(Ctrl_3)
  51+ 9DA9 CB 4F            bit 1,a
  52+ 9DAB C0               ret nz
  53+ 9DAC
  54+ 9DAC 21 E5 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DAF 35               dec (hl)
  56+ 9DB0 C0               ret nz
  57+ 9DB1
  58+ 9DB1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DB1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DB1              ; Analiza (Cola_de_desplazamiento).
  61+ 9DB1
  62+ 9DB1 3A E8 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DB4 A7               and a
  64+ 9DB5 CC A8 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DB8 28 30            jr z,Reinicia_el_movimiento
  66+ 9DBA
  67+ 9DBA FE FF            cp $ff
  68+ 9DBC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DBE
  70+ 9DBE FE FE            cp $fe
  71+ 9DC0 CC 2D 9E         call z,Fijamos_bucle
  72+ 9DC3 28 25            jr z,Reinicia_el_movimiento
  73+ 9DC5
  74+ 9DC5 FE FD            cp $fd
  75+ 9DC7 20 11            jr nz,1F
  76+ 9DC9
  77+ 9DC9              ; ---
  78+ 9DC9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DC9
  80+ 9DC9 3A B8 8B         ld a,(Ctrl_2)
  81+ 9DCC CB 5F            bit 3,a
  82+ 9DCE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DD0
  84+ 9DD0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DD0
  86+ 9DD0 21 B8 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DD3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DD5
  89+ 9DD5 CD 3E 9E         call Inicia_Repetimos_movimiento
  90+ 9DD8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DDA              ; ---
  92+ 9DDA
  93+ 9DDA FE 01        1 cp 1
  94+ 9DDC CA 17 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DDF
  96+ 9DDF 3D               dec a
  97+ 9DE0 32 E8 8B         ld (Cola_de_desplazamiento),a
  98+ 9DE3
  99+ 9DE3 3A E6 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DE6 32 E5 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DE9              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DE9 C9               ret
 103+ 9DEA
 104+ 9DEA              Reinicia_el_movimiento
 105+ 9DEA
 106+ 9DEA 3A B8 8B         ld a,(Ctrl_2)
 107+ 9DED CB 5F            bit 3,a
 108+ 9DEF 28 1B            jr z,2F
 109+ 9DF1
 110+ 9DF1              ; (Cola_de_desplazamiento)="254".
 111+ 9DF1
 112+ 9DF1 21 E7 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DF4 35               dec (hl)
 114+ 9DF5 20 15            jr nz,2F
 115+ 9DF7
 116+ 9DF7              ; Fin de las repeticiones del último movimiento.
 117+ 9DF7
 118+ 9DF7 21 B8 8B         ld hl,Ctrl_2
 119+ 9DFA CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DFC
 121+ 9DFC 2A DF 8B         ld hl,(Puntero_mov)
 122+ 9DFF 23               inc hl
 123+ 9E00 23               inc hl
 124+ 9E01 23               inc hl
 125+ 9E02 22 DF 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E05              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E05 7E               ld a,(hl)
 128+ 9E06 32 E8 8B         ld (Cola_de_desplazamiento),a
 129+ 9E09
 130+ 9E09 C3 B1 9D         jp Cola
 131+ 9E0C
 132+ 9E0C CD 49 9E     2 call Inicia_Puntero_mov
 133+ 9E0F
 134+ 9E0F 21 B8 8B         ld hl,Ctrl_2
 135+ 9E12 CB 96            res 2,(hl)
 136+ 9E14
 137+ 9E14 C3 81 9D         jp Movimiento
 138+ 9E17
 139+ 9E17              Siguiente_desplazamiento
 140+ 9E17
 141+ 9E17              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E17              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E17
 144+ 9E17 21 B8 8B         ld hl,Ctrl_2
 145+ 9E1A CB 96            res 2,(hl)
 146+ 9E1C
 147+ 9E1C 2A DF 8B         ld hl,(Puntero_mov)
 148+ 9E1F 23               inc hl
 149+ 9E20 23               inc hl
 150+ 9E21 22 DF 8B         ld (Puntero_mov),hl
 151+ 9E24
 152+ 9E24 7E               ld a,(hl)
 153+ 9E25 A7               and a
 154+ 9E26 CC A8 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E29 CA EA 9D         jp z,Reinicia_el_movimiento
 156+ 9E2C
 157+ 9E2C C9               ret
 158+ 9E2D
 159+ 9E2D              ; Subrutinas -----------------------------------------
 160+ 9E2D              ; ---------- --------- --------- ---------- ----------
 161+ 9E2D              ;
 162+ 9E2D              ;   24/07/23
 163+ 9E2D              ;
 164+ 9E2D              ;   Fijamos_bucle
 165+ 9E2D              ;
 166+ 9E2D              ;
 167+ 9E2D
 168+ 9E2D              Fijamos_bucle
 169+ 9E2D
 170+ 9E2D 3A E3 8B         ld a,(Incrementa_puntero)
 171+ 9E30 3C               inc a
 172+ 9E31 32 E4 8B         ld (Incrementa_puntero_backup),a
 173+ 9E34
 174+ 9E34 CD A8 9E         call Incrementa_Puntero_indice_mov
 175+ 9E37 2A DD 8B         ld hl,(Puntero_indice_mov)
 176+ 9E3A 22 E1 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E3D C9               ret
 178+ 9E3E
 179+ 9E3E              ; ---------- --------- --------- ---------- ----------
 180+ 9E3E              ;
 181+ 9E3E              ;   07/7/23
 182+ 9E3E              ;
 183+ 9E3E              ;   Inicia_Repetimos_movimiento
 184+ 9E3E              ;
 185+ 9E3E              ;
 186+ 9E3E
 187+ 9E3E              Inicia_Repetimos_movimiento
 188+ 9E3E
 189+ 9E3E              ; Iniciamos (Repetimos_movimiento).
 190+ 9E3E
 191+ 9E3E DD 2A DF 8B      ld ix,(Puntero_mov)
 192+ 9E42 DD 7E 02         ld a,(ix+2)
 193+ 9E45 32 E7 8B         ld (Repetimos_movimiento),a
 194+ 9E48
 195+ 9E48 C9               ret
 196+ 9E49
 197+ 9E49              ; ---------- --------- --------- ---------- ----------
 198+ 9E49              ;
 199+ 9E49              ;   26/6/23
 200+ 9E49              ;
 201+ 9E49              ;   Inicia_Puntero_mov
 202+ 9E49              ;
 203+ 9E49              ;
 204+ 9E49
 205+ 9E49 2A DD 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E4C CD A1 90         call Extrae_address
 207+ 9E4F 22 DF 8B         ld (Puntero_mov),hl
 208+ 9E52 C9               ret
 209+ 9E53
 210+ 9E53              ; ---------- --------- --------- ---------- ----------
 211+ 9E53              ;
 212+ 9E53              ;   27/06/23
 213+ 9E53              ;
 214+ 9E53              ;   Aplica_movimiento.
 215+ 9E53
 216+ 9E53              Aplica_desplazamiento
 217+ 9E53
 218+ 9E53              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E53
 220+ 9E53 2A DF 8B         ld hl, (Puntero_mov)
 221+ 9E56
 222+ 9E56 7E               ld a,(hl)
 223+ 9E57 E6 F0            and $f0
 224+ 9E59 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E5A
 226+ 9E5A CB 7E            bit 7,(hl)
 227+ 9E5C 28 03            jr z,1F
 228+ 9E5E CD 35 9A         call Mov_up
 229+ 9E61 2A DF 8B     1 ld hl, (Puntero_mov)
 230+ 9E64 CB 76            bit 6,(hl)
 231+ 9E66 28 03            jr z,2F
 232+ 9E68 CD FC 99         call Mov_down
 233+ 9E6B
 234+ 9E6B              ; Se ha aplicado reinicio ???
 235+ 9E6B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E6B
 237+ 9E6B              ;    ld a,(Ctrl_3)
 238+ 9E6B              ;    bit 1,a
 239+ 9E6B              ;    ret nz
 240+ 9E6B
 241+ 9E6B 2A DF 8B     2 ld hl, (Puntero_mov)
 242+ 9E6E CB 6E            bit 5,(hl)
 243+ 9E70 28 03            jr z,3F
 244+ 9E72 CD 9B 9B         call Mov_left
 245+ 9E75 2A DF 8B     3 ld hl, (Puntero_mov)
 246+ 9E78 CB 66            bit 4,(hl)
 247+ 9E7A C8               ret z
 248+ 9E7B CD 78 9A         call Mov_right
 249+ 9E7E C9               ret
 250+ 9E7F
 251+ 9E7F              ; ---------- --------- --------- ---------- ----------
 252+ 9E7F              ;
 253+ 9E7F              ;   26/06/23
 254+ 9E7F              ;
 255+ 9E7F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E7F
 257+ 9E7F              Ajusta_velocidad_desplazamiento
 258+ 9E7F
 259+ 9E7F              ; 1er byte de la cadena de movimiento.
 260+ 9E7F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E7F
 262+ 9E7F CD 9D 9E         call Extrae_nibble_alto
 263+ 9E82
 264+ 9E82 32 D3 8B         ld (Vel_up),a
 265+ 9E85 79               ld a,c
 266+ 9E86 E6 0F            and $0f
 267+ 9E88 32 D4 8B         ld (Vel_down),a
 268+ 9E8B
 269+ 9E8B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E8B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E8B
 272+ 9E8B 23               inc hl
 273+ 9E8C CD 9D 9E         call Extrae_nibble_alto
 274+ 9E8F
 275+ 9E8F 32 D1 8B         ld (Vel_left),a
 276+ 9E92 79               ld a,c
 277+ 9E93 E6 0F            and $0f
 278+ 9E95 32 D2 8B         ld (Vel_right),a
 279+ 9E98
 280+ 9E98              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E98
 282+ 9E98 23               inc hl
 283+ 9E99 22 DF 8B         ld (Puntero_mov),hl
 284+ 9E9C C9               ret
 285+ 9E9D
 286+ 9E9D 06 04        Extrae_nibble_alto ld b,4
 287+ 9E9F 7E               ld a,(hl)
 288+ 9EA0 4F               ld c,a
 289+ 9EA1 E6 F0            and $f0
 290+ 9EA3 CB 3F        1 srl a
 291+ 9EA5 10 FC            djnz 1B
 292+ 9EA7 C9               ret
 293+ 9EA8
 294+ 9EA8              ; ---------- --------- --------- ---------- ----------
 295+ 9EA8              ;
 296+ 9EA8              ;   5/7/23
 297+ 9EA8              ;
 298+ 9EA8              ;   Incrementa_Puntero_indice_mov
 299+ 9EA8
 300+ 9EA8              Incrementa_Puntero_indice_mov
 301+ 9EA8
 302+ 9EA8 21 E3 8B         ld hl,Incrementa_puntero
 303+ 9EAB 34               inc (hl)
 304+ 9EAC
 305+ 9EAC 2A DD 8B         ld hl,(Puntero_indice_mov)
 306+ 9EAF 01 02 00         ld bc,2
 307+ 9EB2 A7               and a
 308+ 9EB3 09               add hl,bc
 309+ 9EB4 22 DD 8B         ld (Puntero_indice_mov),hl
 310+ 9EB7
 311+ 9EB7 7E               ld a,(hl)
 312+ 9EB8 A7               and a
 313+ 9EB9
 314+ 9EB9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EB9
 316+ 9EB9              ;    jr z,$
 317+ 9EB9
 318+ 9EB9              ;! Reinicia el Patrón de movimiento.
 319+ 9EB9
 320+ 9EB9 CC BE 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EBC
 322+ 9EBC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EBD
 324+ 9EBD C9               ret
 325+ 9EBE
 326+ 9EBE              ; ---------- --------- --------- ---------- ----------
 327+ 9EBE              ;
 328+ 9EBE              ;   15/01/24
 329+ 9EBE              ;
 330+ 9EBE              ;   Inicializa_Puntero_indice_mov
 331+ 9EBE
 332+ 9EBE              Inicializa_Puntero_indice_mov_2
 333+ 9EBE
 334+ 9EBE              ; Existe etiqueta de bucle principal???
 335+ 9EBE
 336+ 9EBE 2A E1 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EC1 24               inc h
 338+ 9EC2 25               dec h
 339+ 9EC3 28 05            jr z,2F
 340+ 9EC5
 341+ 9EC5 22 DD 8B         ld (Puntero_indice_mov),hl
 342+ 9EC8 18 14            jr 3F
 343+ 9ECA
 344+ 9ECA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ECA
 346+ 9ECA 3A E3 8B     2 ld a,(Incrementa_puntero)
 347+ 9ECD 47               ld b,a
 348+ 9ECE
 349+ 9ECE 2A DD 8B         ld hl,(Puntero_indice_mov)
 350+ 9ED1 2B           1 dec hl
 351+ 9ED2 2B               dec hl
 352+ 9ED3 10 FC            djnz 1B
 353+ 9ED5 22 DD 8B         ld (Puntero_indice_mov),hl
 354+ 9ED8
 355+ 9ED8 AF               xor a
 356+ 9ED9 32 E3 8B         ld (Incrementa_puntero),a
 357+ 9EDC 18 06            jr 4F
 358+ 9EDE
 359+ 9EDE 3A E4 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EE1 32 E3 8B         ld (Incrementa_puntero),a
 361+ 9EE4 C9           4 ret
 362+ 9EE5
 363+ 9EE5              ; ----------------------------------------------------------------------
 364+ 9EE5              ;
 365+ 9EE5              ;   30/01/24
 366+ 9EE5              ;
 367+ 9EE5              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EE5
 369+ 9EE5 3A AC 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EE8 CD 3D 94         call Calcula_salto_en_BC
 371+ 9EEB 21 D5 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EEE A7               and a
 373+ 9EEF ED 4A            adc hl,bc
 374+ 9EF1 C9               ret
 375+ 9EF2
 376+ 9EF2              ; ----------------------------------------------------------------------
 377+ 9EF2              ;
 378+ 9EF2              ;   30/01/24
 379+ 9EF2              ;
 380+ 9EF2              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF2              ;
 382+ 9EF2              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF2
 384+ 9EF2 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EF3 23               inc hl
 386+ 9EF4 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EF5 69               ld l,c
 388+ 9EF6 60               ld h,b
 389+ 9EF7 22 B5 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EFA C9               ret
 391+ 9EFB
# file closed: Movimiento.asm
2170  9EFB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EFB              ; --------------------------------------------------------------------------------------
   2+ 9EFB              ;
   3+ 9EFB              ;   14/09/24
   4+ 9EFB              ;
   5+ 9EFB
   6+ 9EFB              Genera_disparo_de_entidad_maldosa
   7+ 9EFB
   8+ 9EFB              ;   Estructura de un disparo de entidades.
   9+ 9EFB
  10+ 9EFB              ;   Disparo_1 defw 0								; Puntero objeto.
  11+ 9EFB              ; 	defw 0											; Puntero de impresión.
  12+ 9EFB              ;	db 0											; Control.
  13+ 9EFB
  14+ 9EFB              ;*  Exclusiones.
  15+ 9EFB
  16+ 9EFB              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
  17+ 9EFB
  18+ 9EFB 3A AE 8B         ld a,(Coordenada_y)
  19+ 9EFE A7               and a
  20+ 9EFF C8               ret z
  21+ 9F00
  22+ 9F00 3D               dec a
  23+ 9F01 C8               ret z
  24+ 9F02
  25+ 9F02 FE 0D            cp 13
  26+ 9F04 D0               ret nc
  27+ 9F05
  28+ 9F05              Define_puntero_objeto_disparo_de_entidades
  29+ 9F05
  30+ 9F05              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
  31+ 9F05              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
  32+ 9F05              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
  33+ 9F05              ;
  34+ 9F05              ;   (Puntero_objeto) = "$00,$18"
  35+ 9F05
  36+ 9F05 7D               ld a,l
  37+ 9F06 C6 40            add $40
  38+ 9F08 6F               ld l,a
  39+ 9F09
  40+ 9F09 4D               ld c,l
  41+ 9F0A 44               ld b,h
  42+ 9F0B
  43+ 9F0B              ;   Puntero de impresión del disparo en BC , (1 scanline libre entre la entidad y el disparo).
  44+ 9F0B
  45+ 9F0B 2A 22 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  46+ 9F0E CD A1 90     1 call Extrae_address
  47+ 9F11
  48+ 9F11              ;   Comprobamos si la caja está vacía.
  49+ 9F11
  50+ 9F11 23               inc hl
  51+ 9F12 7E               ld a,(hl)
  52+ 9F13 A7               and a
  53+ 9F14
  54+ 9F14 20 0F            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
  55+ 9F16
  56+ 9F16              ;   Generamos disparo.
  57+ 9F16
  58+ 9F16 2B               dec hl
  59+ 9F17
  60+ 9F17 36 00            ld (hl),$00
  61+ 9F19 23               inc hl
  62+ 9F1A 36 18            ld (hl),$18
  63+ 9F1C 23               inc hl
  64+ 9F1D
  65+ 9F1D 71               ld (hl),c
  66+ 9F1E 23               inc hl
  67+ 9F1F 70               ld (hl),b
  68+ 9F20 23               inc hl
  69+ 9F21
  70+ 9F21 F3               di
  71+ 9F22 18 FE            jr $
  72+ 9F24 FB               ei
  73+ 9F25
  74+ 9F25              ;
  75+ 9F25              Situa_en_siguiente_disparo
  76+ 9F25
  77+ 9F25 F3               di
  78+ 9F26 18 FE            jr $
  79+ 9F28 FB               ei
  80+ 9F29
  81+ 9F29 13               inc de
  82+ 9F2A 13               inc de
  83+ 9F2B
  84+ 9F2B 21 31 89         ld hl,Disparo_1
  85+ 9F2E 7D               ld a,l
  86+ 9F2F 93               sub e
  87+ 9F30 C8               ret z                                               ;
  88+ 9F31
  89+ 9F31 EB               ex de,hl
  90+ 9F32 18 DA            jr 1B
  91+ 9F34
  92+ 9F34              ; --------------------------------------------------------------------------------------
  93+ 9F34              ;
  94+ 9F34              ;   31/08/24
  95+ 9F34              ;
  96+ 9F34
  97+ 9F34              Compara_con_coordenadas_de_disparo
  98+ 9F34
  99+ 9F34 3A AE 8B         ld a,(Coordenada_y)
 100+ 9F37 47               ld b,a
 101+ 9F38 3A 27 8C         ld a,(Coordenadas_disparo_certero)
 102+ 9F3B 90               sub b
 103+ 9F3C
 104+ 9F3C              ; A = "0" ok
 105+ 9F3C              ; A = "1" ok
 106+ 9F3C
 107+ 9F3C 28 08            jr z,Comprueba_coordenada_X
 108+ 9F3E 3D               dec a
 109+ 9F3F 28 05            jr z,Comprueba_coordenada_X
 110+ 9F41
 111+ 9F41              ; A = "$ff" ok
 112+ 9F41
 113+ 9F41 FE FE            cp $fe
 114+ 9F43 28 01            jr z,Comprueba_coordenada_X
 115+ 9F45
 116+ 9F45 C9               ret
 117+ 9F46
 118+ 9F46              Comprueba_coordenada_X
 119+ 9F46
 120+ 9F46 3A AD 8B         ld a,(Coordenada_X)
 121+ 9F49 47               ld b,a
 122+ 9F4A 21 28 8C         ld hl,Coordenadas_disparo_certero+1
 123+ 9F4D 7E               ld a,(hl)
 124+ 9F4E 90               sub b
 125+ 9F4F
 126+ 9F4F              ; A = "0" ok
 127+ 9F4F              ; A = "1" ok
 128+ 9F4F
 129+ 9F4F 28 09            jr z,Activa_Impacto_en_entidad
 130+ 9F51 3D               dec a
 131+ 9F52 28 06            jr z,Activa_Impacto_en_entidad
 132+ 9F54
 133+ 9F54              ; A = "2" ok
 134+ 9F54
 135+ 9F54 3D               dec a
 136+ 9F55 28 03            jr z,Activa_Impacto_en_entidad
 137+ 9F57
 138+ 9F57              ; A = "$ff"
 139+ 9F57
 140+ 9F57 FE FD            cp $fd
 141+ 9F59 C0               ret nz
 142+ 9F5A
 143+ 9F5A              Activa_Impacto_en_entidad
 144+ 9F5A
 145+ 9F5A              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 146+ 9F5A
 147+ 9F5A 3E 02            ld a,2
 148+ 9F5C 32 B0 8B         ld (Impacto),a
 149+ 9F5F
 150+ 9F5F              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 151+ 9F5F
 152+ 9F5F 11 C0 87         ld de,Indice_Explosion_entidades
 153+ 9F62 21 B3 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 154+ 9F65
 155+ 9F65 73               ld (hl),e
 156+ 9F66 23               inc hl
 157+ 9F67 72               ld (hl),d
 158+ 9F68
 159+ 9F68              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 160+ 9F68
 161+ 9F68 21 24 8C         ld hl,Impacto2
 162+ 9F6B CB 9E            res 3,(hl)
 163+ 9F6D
 164+ 9F6D C9               ret
 165+ 9F6E
 166+ 9F6E              ; --------------------------------------------------------------------------------------
 167+ 9F6E              ;
 168+ 9F6E              ;   11/09/24
 169+ 9F6E              ;
 170+ 9F6E
 171+ 9F6E              Limpia_album_de_borrado_disparos
 172+ 9F6E
 173+ 9F6E 21 21 8C         ld hl,Ctrl_5
 174+ 9F71 CB 46            bit 0,(hl)
 175+ 9F73 C8               ret z
 176+ 9F74 CB 86            res 0,(hl)
 177+ 9F76
 178+ 9F76              Limpiando
 179+ 9F76
 180+ 9F76 AF               xor a
 181+ 9F77 2A 07 8C         ld hl,(Album_de_borrado_disparos)
 182+ 9F7A 77               ld (hl),a
 183+ 9F7B 5D               ld e,l
 184+ 9F7C 54               ld d,h
 185+ 9F7D 1C               inc e                                           ; DE = HL+1
 186+ 9F7E 01 3A 00         ld bc,$003a
 187+ 9F81 ED B0            ldir
 188+ 9F83
 189+ 9F83 C9               ret
 190+ 9F84
 191+ 9F84
 192+ 9F84              ; --------------------------------------------------------------------------------------
 193+ 9F84              ;
 194+ 9F84              ;   26/08/24
 195+ 9F84              ;
 196+ 9F84
 197+ 9F84              Calcula_bytes_pintado_disparos
 198+ 9F84
 199+ 9F84 2A 05 8C         ld hl,(Album_de_pintado_disparos)
 200+ 9F87 45               ld b,l
 201+ 9F88 2A 09 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 202+ 9F8B 7D               ld a,l
 203+ 9F8C
 204+ 9F8C 90               sub b
 205+ 9F8D 32 0B 8C         ld (Num_de_bytes_album_de_disparos),a
 206+ 9F90
 207+ 9F90 C9               ret
 208+ 9F91
 209+ 9F91              ; --------------------------------------------------------------------------------------
 210+ 9F91              ;
 211+ 9F91              ;   11/09/24
 212+ 9F91              ;
 213+ 9F91              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 214+ 9F91              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 215+ 9F91              ;   _disparos que el álbum del FRAME actual).
 216+ 9F91
 217+ 9F91              Limpia_album_de_pintado_disparos
 218+ 9F91
 219+ 9F91              ;*   Exclusiones.
 220+ 9F91
 221+ 9F91 3A 0C 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 222+ 9F94 A7               and a
 223+ 9F95 C8               ret z
 224+ 9F96
 225+ 9F96              ; -----
 226+ 9F96
 227+ 9F96 3A 0B 8C         ld a,(Num_de_bytes_album_de_disparos)
 228+ 9F99 47               ld b,a
 229+ 9F9A 3A 0C 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 230+ 9F9D
 231+ 9F9D 90               sub b
 232+ 9F9E
 233+ 9F9E C8               ret z
 234+ 9F9F D8               ret c
 235+ 9FA0
 236+ 9FA0 2A 09 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 237+ 9FA3 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 238+ 9FA4 AF               xor a                                                               ; "0".
 239+ 9FA5
 240+ 9FA5 77           1 ld (hl),a
 241+ 9FA6 2C               inc l
 242+ 9FA7 10 FC            djnz 1B
 243+ 9FA9
 244+ 9FA9 C9               ret
 245+ 9FAA
 246+ 9FAA              ; --------------------------------------------------------------------------------------
 247+ 9FAA              ;
 248+ 9FAA              ;   27/08/24
 249+ 9FAA              ;
 250+ 9FAA
 251+ 9FAA              Motor_Disparos
 252+ 9FAA
 253+ 9FAA              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 254+ 9FAA
 255+ 9FAA 21 20 89         ld hl,Disparo_Amad+1
 256+ 9FAD
 257+ 9FAD 34               inc (hl)
 258+ 9FAE 35               dec (hl)
 259+ 9FAF
 260+ 9FAF 28 06            jr z,2F
 261+ 9FB1
 262+ 9FB1              ;   Esta caja contiene un disparo.
 263+ 9FB1
 264+ 9FB1 CD D3 9F         call Consulta_Impacto
 265+ 9FB4 CC EC 9F         call z,Mueve_disparo_Amadeus
 266+ 9FB7
 267+ 9FB7              ; Disparos de entidades.
 268+ 9FB7
 269+ 9FB7 3A 0D 8C     2 ld a,(Numero_de_disparos_de_entidades)
 270+ 9FBA A7               and a
 271+ 9FBB C8               ret z
 272+ 9FBC
 273+ 9FBC 06 07            ld b,7                                                               ; Contador de disparos.
 274+ 9FBE 21 23 89         ld hl,Indice_de_disparos_entidades
 275+ 9FC1
 276+ 9FC1 CD A1 90     4 call Extrae_address
 277+ 9FC4 13               inc de
 278+ 9FC5 13               inc de
 279+ 9FC6 ED 53 10 8C      ld (Puntero_rancio_disparos_album),de
 280+ 9FCA
 281+ 9FCA 23               inc hl
 282+ 9FCB
 283+ 9FCB 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
 284+ 9FCC 35               dec (hl)
 285+ 9FCD 28 00            jr z,3F
 286+ 9FCF
 287+ 9FCF EB           3 ex de,hl
 288+ 9FD0 10 EF            djnz 4B
 289+ 9FD2
 290+ 9FD2 C9               ret
 291+ 9FD3
 292+ 9FD3              ; ----------------------
 293+ 9FD3              ;
 294+ 9FD3              ;
 295+ 9FD3              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 296+ 9FD3              ;
 297+ 9FD3              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 298+ 9FD3
 299+ 9FD3
 300+ 9FD3              Consulta_Impacto
 301+ 9FD3
 302+ 9FD3              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 303+ 9FD3              ;   _sea lo más coherente posible.
 304+ 9FD3
 305+ 9FD3 E5               push hl
 306+ 9FD4 2B               dec hl
 307+ 9FD5 CD CD A0         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 308+ 9FD8 E1               pop hl
 309+ 9FD9 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 310+ 9FDA
 311+ 9FDA C8               ret z
 312+ 9FDB
 313+ 9FDB 3A 24 8C         ld a,(Impacto2)
 314+ 9FDE CB DF            set 3,a
 315+ 9FE0 32 24 8C         ld (Impacto2),a
 316+ 9FE3
 317+ 9FE3 E5               push hl
 318+ 9FE4 CD BA A0         call Genera_coordenadas_de_disparo_Amadeus
 319+ 9FE7 E1               pop hl
 320+ 9FE8 CD 05 A0         call Elimina_disparo
 321+ 9FEB
 322+ 9FEB C9               ret
 323+ 9FEC
 324+ 9FEC              ; ----------------------
 325+ 9FEC              ;
 326+ 9FEC              ;
 327+ 9FEC              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 328+ 9FEC
 329+ 9FEC              Mueve_disparo_Amadeus
 330+ 9FEC
 331+ 9FEC CD A1 90         call Extrae_address
 332+ 9FEF
 333+ 9FEF CD C5 99         call PreviousScan
 334+ 9FF2 CD C5 99         call PreviousScan
 335+ 9FF5 CD C5 99         call PreviousScan
 336+ 9FF8 CD C5 99         call PreviousScan
 337+ 9FFB
 338+ 9FFB              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 339+ 9FFB
 340+ 9FFB 7C               ld a,h
 341+ 9FFC D6 40            sub $40
 342+ 9FFE EB               ex de,hl
 343+ 9FFF 38 04            jr c,Elimina_disparo
 344+ A001
 345+ A001               ; Introduce nuevo puntero_de_impresión en la caja.
 346+ A001
 347+ A001 73               ld (hl),e
 348+ A002 23               inc hl
 349+ A003 72               ld (hl),d
 350+ A004
 351+ A004 C9               ret
 352+ A005
 353+ A005              ; ----------------------
 354+ A005              ;
 355+ A005              ;   11/9/24
 356+ A005
 357+ A005              Elimina_disparo
 358+ A005
 359+ A005              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 360+ A005              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 361+ A005
 362+ A005              ;   Disparo_1A defw 0									; Puntero objeto.
 363+ A005              ;   	defw 0											; Puntero de impresión.
 364+ A005
 365+ A005 2B               dec hl
 366+ A006 2B               dec hl
 367+ A007
 368+ A007 AF               xor a
 369+ A008 77               ld (hl),a
 370+ A009 23               inc hl
 371+ A00A 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 372+ A00B
 373+ A00B 23               inc hl
 374+ A00C 77               ld (hl),a
 375+ A00D 23               inc hl
 376+ A00E 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 377+ A00F
 378+ A00F 3E 01            ld a,1
 379+ A011 32 0E 8C         ld (Permiso_de_disparo_Amadeus),a
 380+ A014
 381+ A014 21 21 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 382+ A017 CB C6            set 0,(hl)
 383+ A019
 384+ A019 AF               xor a
 385+ A01A 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 386+ A01B
 387+ A01B C9               ret
 388+ A01C
 389+ A01C              ; --------------------------------------------------------------------------------------
 390+ A01C              ;
 391+ A01C              ;   21/8/24
 392+ A01C              ;
 393+ A01C
 394+ A01C              Pinta_disparos
 395+ A01C
 396+ A01C ED 73 F9 8B      ld (Stack),sp
 397+ A020 06 02            ld b,2
 398+ A022
 399+ A022 ED 7B 07 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 400+ A026
 401+ A026 D1           2 pop de
 402+ A027
 403+ A027 14               inc d
 404+ A028 15               dec d
 405+ A029
 406+ A029 28 1B            jr z,1F
 407+ A02B
 408+ A02B              Imprime_scanlines_de_disparo
 409+ A02B
 410+ A02B E1               pop hl
 411+ A02C
 412+ A02C              ; Puntero objeto en DE.
 413+ A02C              ; Puntero_de_impresión en HL.
 414+ A02C
 415+ A02C              ; 1er scanline.
 416+ A02C
 417+ A02C 1A               ld a,(de)
 418+ A02D AE               xor (hl)
 419+ A02E 77               ld (hl),a
 420+ A02F
 421+ A02F 13               inc de
 422+ A030 2C               inc l
 423+ A031
 424+ A031 1A               ld a,(de)
 425+ A032 AE               xor (hl)
 426+ A033 77               ld (hl),a
 427+ A034
 428+ A034              ; 2º scanline.
 429+ A034
 430+ A034 E1               pop hl
 431+ A035 1B               dec de
 432+ A036
 433+ A036 1A               ld a,(de)
 434+ A037 AE               xor (hl)
 435+ A038 77               ld (hl),a
 436+ A039
 437+ A039 13               inc de
 438+ A03A 2C               inc l
 439+ A03B
 440+ A03B 1A               ld a,(de)
 441+ A03C AE               xor (hl)
 442+ A03D 77               ld (hl),a
 443+ A03E
 444+ A03E              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 445+ A03E
 446+ A03E 18 E6            jr 2B
 447+ A040
 448+ A040 ED 7B 05 8C  3 ld sp,(Album_de_pintado_disparos)
 449+ A044 18 E0            jr 2B
 450+ A046
 451+ A046 10 F8        1 djnz 3B
 452+ A048 ED 7B F9 8B      ld sp,(Stack)
 453+ A04C C9               ret
 454+ A04D
 455+ A04D              ; --------------------------------------------------------------------------------------
 456+ A04D              ;
 457+ A04D              ;   14/09/24
 458+ A04D              ;
 459+ A04D              ;   Modifica: HL y DE.
 460+ A04D
 461+ A04D
 462+ A04D              Genera_datos_de_impresion_disparos_Amadeus
 463+ A04D
 464+ A04D ED 73 F9 8B      ld (Stack),sp
 465+ A051 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 466+ A054 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 467+ A055
 468+ A055 14               inc d                                                     ;? Salimos si no hay disparo.
 469+ A056 15               dec d
 470+ A057
 471+ A057 28 12            jr z,Salida
 472+ A059
 473+ A059              Genera_scanlines_de_disparo_Amadeus
 474+ A059
 475+ A059 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 476+ A05A              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 477+ A05A ED 7B 09 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 478+ A05E
 479+ A05E C1               pop bc
 480+ A05F C1               pop bc
 481+ A060 C1               pop bc
 482+ A061
 483+ A061 ED 73 09 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 484+ A065
 485+ A065 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 486+ A066 CD C5 99         call PreviousScan
 487+ A069 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 488+ A06A D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 489+ A06B
 490+ A06B              Salida
 491+ A06B
 492+ A06B ED 7B F9 8B      ld sp,(Stack)
 493+ A06F C9               ret
 494+ A070
 495+ A070              ; --------------------------------------------------------------------------------------
 496+ A070              ;
 497+ A070              ;   12/09/24
 498+ A070              ;
 499+ A070
 500+ A070              Genera_disparo_Amadeus
 501+ A070
 502+ A070              ;*  Exclusiones.
 503+ A070
 504+ A070 3A 0E 8C         ld a,(Permiso_de_disparo_Amadeus)
 505+ A073 A7               and a
 506+ A074 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 507+ A075
 508+ A075 3D               dec a
 509+ A076 32 0E 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 510+ A079
 511+ A079              Define_puntero_objeto_disparo
 512+ A079
 513+ A079              ;   Inicializamos contador.
 514+ A079
 515+ A079 06 00            ld b,0
 516+ A07B
 517+ A07B 2A 6B 89         ld hl,(p.imp.amadeus)
 518+ A07E 2C               inc l
 519+ A07F
 520+ A07F 3E 80            ld a,$80
 521+ A081 BE               cp (hl)
 522+ A082 28 0D            jr z,1F
 523+ A084
 524+ A084 04               inc b
 525+ A085
 526+ A085 3E 60            ld a,$60
 527+ A087 BE               cp (hl)
 528+ A088 28 07            jr z,1F
 529+ A08A
 530+ A08A
 531+ A08A 04               inc b
 532+ A08B
 533+ A08B 3E 18            ld a,$18
 534+ A08D BE               cp (hl)
 535+ A08E 28 01            jr z,1F
 536+ A090
 537+ A090 04               inc b
 538+ A091
 539+ A091              ;   Calcula el Puntero_de_impresión del disparo.
 540+ A091
 541+ A091              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 542+ A091
 543+ A091 CD C5 99     1 call PreviousScan
 544+ A094
 545+ A094 78               ld a,b
 546+ A095 CB 3F            srl a
 547+ A097 28 03            jr z,4F
 548+ A099
 549+ A099              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 550+ A099 E5               push hl
 551+ A09A 18 02            jr 5F
 552+ A09C 2D           4 dec l
 553+ A09D E5               push hl
 554+ A09E              ; ---
 555+ A09E
 556+ A09E              ;   Calcula el Puntero_objeto del disparo.
 557+ A09E
 558+ A09E 21 70 83     5 ld hl,Indice_disparo_Amadeus
 559+ A0A1 04               inc b
 560+ A0A2 05               dec b
 561+ A0A3 28 04            jr z,2F
 562+ A0A5
 563+ A0A5              ;   Nos desplazamos por el índice de disparos.
 564+ A0A5
 565+ A0A5 2C           3 inc l
 566+ A0A6 2C               inc l
 567+ A0A7 10 FC            djnz 3B
 568+ A0A9
 569+ A0A9              ; --- Guarda el Puntero_objeto del disparo en la pila.
 570+ A0A9 CD A1 90     2 call Extrae_address
 571+ A0AC E5               push hl
 572+ A0AD              ; ---
 573+ A0AD
 574+ A0AD              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 575+ A0AD              ; HL en el 1er .db de la caja.
 576+ A0AD
 577+ A0AD 21 1F 89         ld hl,Disparo_Amad
 578+ A0B0
 579+ A0B0 06 02            ld b,2
 580+ A0B2
 581+ A0B2 D1           6 pop de
 582+ A0B3 73               ld (hl),e
 583+ A0B4 23               inc hl
 584+ A0B5 72               ld (hl),d
 585+ A0B6 23               inc hl
 586+ A0B7
 587+ A0B7 10 F9            djnz 6B
 588+ A0B9
 589+ A0B9 C9               ret
 590+ A0BA
 591+ A0BA              Genera_coordenadas_de_disparo_Amadeus
 592+ A0BA
 593+ A0BA              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 594+ A0BA              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 595+ A0BA              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 596+ A0BA
 597+ A0BA CD A1 90         call Extrae_address
 598+ A0BD CD C0 94         call Genera_coordenadas
 599+ A0C0
 600+ A0C0 3D               dec a
 601+ A0C1
 602+ A0C1 21 27 8C         ld hl,Coordenadas_disparo_certero
 603+ A0C4 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 604+ A0C5 23               inc hl
 605+ A0C6 3A AD 8B         ld a,(Coordenada_X)
 606+ A0C9 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 607+ A0CA
 608+ A0CA AF               xor a
 609+ A0CB 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 610+ A0CC
 611+ A0CC C9               ret
 612+ A0CD
 613+ A0CD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 614+ A0CD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 615+ A0CD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 616+ A0CD
 617+ A0CD              ; ----------------------------------------------
 618+ A0CD              ;
 619+ A0CD              ;   27/08/24
 620+ A0CD              ;
 621+ A0CD              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 622+ A0CD              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 623+ A0CD
 624+ A0CD              Detecta_impacto_en_disparo_de_Amadeus
 625+ A0CD
 626+ A0CD              Extraccion_de_datos
 627+ A0CD
 628+ A0CD 13               inc de
 629+ A0CE 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 630+ A0CF
 631+ A0CF 5E               ld e,(hl)
 632+ A0D0 23               inc hl
 633+ A0D1 56               ld d,(hl)
 634+ A0D2
 635+ A0D2 23               inc hl
 636+ A0D3
 637+ A0D3 4E               ld c,(hl)
 638+ A0D4 23               inc hl
 639+ A0D5 46               ld b,(hl)
 640+ A0D6
 641+ A0D6 C5               push bc
 642+ A0D7 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 643+ A0D8
 644+ A0D8              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 645+ A0D8
 646+ A0D8 CD C5 99         call PreviousScan
 647+ A0DB CD C5 99         call PreviousScan
 648+ A0DE
 649+ A0DE              Detecta_impacto_
 650+ A0DE
 651+ A0DE 1A               ld a,(de)
 652+ A0DF A6               and (hl)
 653+ A0E0 C0               ret nz
 654+ A0E1
 655+ A0E1 13               inc de
 656+ A0E2 23               inc hl
 657+ A0E3
 658+ A0E3 1A               ld a,(de)
 659+ A0E4 A6               and (hl)
 660+ A0E5 C9               ret
 661+ A0E6
 662+ A0E6              ; -------------------------------------------------------------------------------------------------------------
 663+ A0E6              ;
 664+ A0E6              ;   8/8/24
 665+ A0E6              ;
 666+ A0E6              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 667+ A0E6              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 668+ A0E6              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 669+ A0E6              ;
 670+ A0E6              ;   MODIFICA: HL,DE,BC y A.
 671+ A0E6              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 672+ A0E6              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 673+ A0E6
 674+ A0E6              Colision_Entidad_Amadeus
 675+ A0E6
 676+ A0E6              ; Posible contacto de entidad con Amadeus. ?????
 677+ A0E6
 678+ A0E6              ; Exclusiones:
 679+ A0E6
 680+ A0E6 3A 47 8C         ld a,(Shield)
 681+ A0E9 A7               and a
 682+ A0EA C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 683+ A0EB
 684+ A0EB 21 1F 8C         ld hl,Ctrl_3
 685+ A0EE CB 76            bit 6,(hl)
 686+ A0F0 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 687+ A0F1
 688+ A0F1 21 24 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 689+ A0F4 CB 56            bit 2,(hl)
 690+ A0F6 C0               ret nz
 691+ A0F7
 692+ A0F7 3A AE 8B     	ld a,(Coordenada_y)
 693+ A0FA FE 14        	cp $14
 694+ A0FC D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 695+ A0FD
 696+ A0FD 3A 6A 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 697+ A100 A7               and a
 698+ A101 C0               ret nz
 699+ A102
 700+ A102              Genera_coordenadas_X
 701+ A102
 702+ A102              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 703+ A102              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 704+ A102
 705+ A102              ;   Limpiamos almacenes.
 706+ A102
 707+ A102              ;    call Limpia_Coordenadas_X
 708+ A102
 709+ A102              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 710+ A102
 711+ A102 21 29 8C         ld hl,Coordenadas_X_Entidad
 712+ A105 3A AD 8B         ld a,(Coordenada_X)
 713+ A108 CD 2A A1         call Guarda_coordenadas_X
 714+ A10B
 715+ A10B              ;   Almacenamos las coordenadas X de Amadeus.
 716+ A10B
 717+ A10B 3A 67 89         ld a,(CX_Amadeus)
 718+ A10E CD 2A A1         call Guarda_coordenadas_X
 719+ A111 CD 3E A1         call Compara_coordenadas_X
 720+ A114 C0               ret nz
 721+ A115
 722+ A115 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 723+ A117 32 B0 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 724+ A11A
 725+ A11A 2A EC 8B         ld hl,(Puntero_store_caja)
 726+ A11D 2C               inc l
 727+ A11E 2C               inc l
 728+ A11F 2C               inc l
 729+ A120 2C               inc l
 730+ A121 22 25 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 731+ A124
 732+ A124 21 24 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 733+ A127 CB D6            set 2,(hl)
 734+ A129
 735+ A129 C9               ret
 736+ A12A
 737+ A12A               ; ----- ----- ----- ----- -----
 738+ A12A
 739+ A12A 77           Guarda_coordenadas_X ld (hl),a
 740+ A12B 3C               inc a
 741+ A12C 2C               inc l
 742+ A12D 77               ld (hl),a
 743+ A12E 3C               inc a
 744+ A12F 2C               inc l
 745+ A130 77               ld (hl),a
 746+ A131 2C               inc l
 747+ A132 C9               ret
 748+ A133
 749+ A133 AF           Limpia_Coordenadas_X xor a
 750+ A134 06 06            ld b,6
 751+ A136 21 2C 8C         ld hl,Coordenadas_X_Amadeus
 752+ A139 77           1 ld (hl),a
 753+ A13A 23               inc hl
 754+ A13B 10 FC            djnz 1B
 755+ A13D C9               ret
 756+ A13E
 757+ A13E              ; ----- ----- ----- ----- -----
 758+ A13E
 759+ A13E              Compara_coordenadas_X
 760+ A13E
 761+ A13E DD 21 29 8C      ld ix,Coordenadas_X_Entidad
 762+ A142 DD 7E 00         ld a,(ix+0)
 763+ A145 CD 53 A1         call Comparando
 764+ A148 C8               ret z
 765+ A149
 766+ A149 3C               inc a
 767+ A14A CD 62 A1         call Comparando_1
 768+ A14D C8               ret z
 769+ A14E
 770+ A14E 3C               inc a
 771+ A14F CD 62 A1         call Comparando_1
 772+ A152 C9               ret
 773+ A153
 774+ A153              ; ----- ----- ----- ----- -----
 775+ A153              ;
 776+ A153              ;   4/12/23
 777+ A153              ;
 778+ A153              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 779+ A153
 780+ A153              Comparando
 781+ A153
 782+ A153 DD 2C            inc ixl
 783+ A155 DD 2C            inc ixl
 784+ A157 DD 2C            inc ixl
 785+ A159
 786+ A159 DD 46 00         ld b,(ix+0)
 787+ A15C DD 4E 01         ld c,(ix+1)
 788+ A15F DD 56 02         ld d,(ix+2)
 789+ A162
 790+ A162 B8           Comparando_1 cp b
 791+ A163 C8               ret z
 792+ A164 B9               cp c
 793+ A165 C8               ret z
 794+ A166 BA               cp d
 795+ A167 C9               ret
 796+ A168
 797+ A168              ; -----------------------------------------------------------------------
 798+ A168              ;
 799+ A168              ;   04/7/24
 800+ A168              ;
 801+ A168
 802+ A168              Detecta_colision_nave_entidad
 803+ A168
 804+ A168              ; Exclusiones:
 805+ A168
 806+ A168              ; Salimos de la rutina si no hay advertencia de posible colisión.
 807+ A168
 808+ A168 21 24 8C     	ld hl,Impacto2
 809+ A16B CB 56        	bit 2,(hl)
 810+ A16D C8           	ret z
 811+ A16E
 812+ A16E              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 813+ A16E
 814+ A16E 2A 6D 89         ld hl,(Pamm_Amadeus)
 815+ A171 CD A1 90         call Extrae_address
 816+ A174 54               ld d,h
 817+ A175 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 818+ A176
 819+ A176 2A 6B 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 820+ A179 06 10            ld b,16                                        ; Contador de scanlines en B.
 821+ A17B FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 822+ A17E
 823+ A17E C5           1 push bc
 824+ A17F 06 03            ld b,3
 825+ A181 E5               push hl
 826+ A182
 827+ A182              ; .db
 828+ A182
 829+ A182 1A           3 ld a,(de)
 830+ A183 A7               and a
 831+ A184 20 03            jr nz,4F
 832+ A186
 833+ A186 2C               inc l
 834+ A187 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 835+ A189
 836+ A189 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 837+ A18B 28 04            jr z,2F
 838+ A18D
 839+ A18D              ; Impacto.
 840+ A18D FD 2D            dec iyl
 841+ A18F 28 22            jr z,5F
 842+ A191
 843+ A191 1C           2 inc e
 844+ A192 10 EE            djnz 3B
 845+ A194
 846+ A194 E1               pop hl
 847+ A195
 848+ A195              ; Hay salto de línea en el puntero de impresión ???
 849+ A195
 850+ A195 7C               ld a,h
 851+ A196 D6 57            sub $57
 852+ A198 20 0A            jr nz,6F
 853+ A19A
 854+ A19A              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 855+ A19A
 856+ A19A 2A 6B 89         ld hl,(p.imp.amadeus)
 857+ A19D 3E 20            ld a,$20
 858+ A19F A7               and a
 859+ A1A0 85               add l
 860+ A1A1 6F               ld l,a
 861+ A1A2 18 01            jr 7F
 862+ A1A4
 863+ A1A4 24           6 inc h
 864+ A1A5
 865+ A1A5 C1           7 pop bc
 866+ A1A6 10 D6            djnz 1B
 867+ A1A8
 868+ A1A8              ;   Fin de la comparativa.
 869+ A1A8
 870+ A1A8              ;   NO HAY COLISIÓN !!!!!.
 871+ A1A8              ;
 872+ A1A8              ;   .db (Impacto) de Amadeus a "0".
 873+ A1A8              ;   RES el bit2 de (Impacto2).
 874+ A1A8              ;
 875+ A1A8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 876+ A1A8              ;   Lo colocamos a "0".
 877+ A1A8
 878+ A1A8 21 24 8C         ld hl,Impacto2
 879+ A1AB CB 96            res 2,(hl)
 880+ A1AD 2A 25 8C         ld hl,(Entidad_sospechosa_de_colision)
 881+ A1B0 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 882+ A1B2 C9               ret
 883+ A1B3
 884+ A1B3              ;   COLISIÓN !!!!!.
 885+ A1B3              ;
 886+ A1B3              ;   .db (Impacto) de Amadeus a "1".
 887+ A1B3              ;   SET el bit3 de (Impacto2).
 888+ A1B3              ;
 889+ A1B3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 890+ A1B3
 891+ A1B3 E1           5 pop hl
 892+ A1B4 C1               pop bc
 893+ A1B5
 894+ A1B5 21 6A 89         ld hl,Impacto_Amadeus
 895+ A1B8 36 01            ld (hl),1
 896+ A1BA 21 24 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 897+ A1BD CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 898+ A1BF
 899+ A1BF 11 C0 87         ld de,Indice_Explosion_entidades
 900+ A1C2 2A 25 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 901+ A1C5
 902+ A1C5 23               inc hl
 903+ A1C6 23               inc hl
 904+ A1C7 23               inc hl
 905+ A1C8
 906+ A1C8 73               ld (hl),e
 907+ A1C9 23               inc hl
 908+ A1CA 72               ld (hl),d
 909+ A1CB
 910+ A1CB              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 911+ A1CB
 912+ A1CB 11 60 88         ld de,Indice_Explosion_Amadeus
 913+ A1CE 21 6D 89         ld hl,Pamm_Amadeus
 914+ A1D1
 915+ A1D1 73               ld (hl),e
 916+ A1D2 23               inc hl
 917+ A1D3 72               ld (hl),d
 918+ A1D4
 919+ A1D4 C9               ret
 920+ A1D5
 921+ A1D5
 922+ A1D5
# file closed: Disparo.asm
2171  A1D5
2172  A1D5              	SAVESNA "Pruebas.sna", START
2173  A1D5
2174  A1D5
2175  A1D5
2176  A1D5
# file closed: Banco_de_pruebas.asm
