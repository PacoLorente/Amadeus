# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD FB 85     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83E8              ;                  _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F0 83        	defw Disparo_2A
 15+  83EC F2 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0              ;	defw 0											; Puntero objeto.
 19+  83F0              ;	defw 0											; Puntero de impresión.
 20+  83F0              ;	defw 0											; Rutina de impresión.
 21+  83F0
 22+  83F0 00 00        Disparo_2A defw 0									; Control.
 23+  83F2              ;	defw 0											; Puntero objeto.
 24+  83F2              ;	defw 0											; Puntero de impresión.
 25+  83F2              ;	defw 0											; Rutina de impresión.
 26+  83F2
 27+  83F2 00 00        Disparo_3A defw 0
 28+  83F4
 29+  83F4 0A 84        Indice_de_disparos_entidades defw Disparo_1
 30+  83F6 0C 84        	defw Disparo_2
 31+  83F8 0E 84        	defw Disparo_3
 32+  83FA 10 84        	defw Disparo_4
 33+  83FC 12 84        	defw Disparo_5
 34+  83FE 14 84        	defw Disparo_6
 35+  8400 16 84        	defw Disparo_7
 36+  8402 18 84        	defw Disparo_8
 37+  8404 1A 84        	defw Disparo_9
 38+  8406 1C 84        	defw Disparo_10
 39+  8408 1E 84        	defw Disparo_11
 40+  840A
 41+  840A 00 00        Disparo_1 defw 0									; Control.
 42+  840C              ;	defw 0											; Puntero objeto.
 43+  840C              ;	defw 0											; Puntero de impresión.
 44+  840C              ;	defw 0											; Rutina de impresión.
 45+  840C
 46+  840C 00 00        Disparo_2 defw 0									; Control.
 47+  840E              ;	defw 0											; Puntero objeto.
 48+  840E              ;	defw 0											; Puntero de impresión.
 49+  840E              ;	defw 0											; Rutina de impresión.
 50+  840E
 51+  840E 00 00        Disparo_3 defw 0									; Control.
 52+  8410              ;	defw 0											; Puntero objeto.
 53+  8410              ;	defw 0											; Puntero de impresión.
 54+  8410              ;	defw 0											; Rutina de impresión.
 55+  8410
 56+  8410 00 00        Disparo_4 defw 0									; Control.
 57+  8412              ;	defw 0											; Puntero objeto.
 58+  8412              ;	defw 0											; Puntero de impresión.
 59+  8412              ;	defw 0											; Rutina de impresión.
 60+  8412
 61+  8412 00 00        Disparo_5 defw 0									; Control.
 62+  8414              ;	defw 0											; Puntero objeto.
 63+  8414              ;	defw 0											; Puntero de impresión.
 64+  8414              ;	defw 0											; Rutina de impresión.
 65+  8414
 66+  8414 00 00        Disparo_6 defw 0									; Control.
 67+  8416              ;	defw 0											; Puntero objeto.
 68+  8416              ;	defw 0											; Puntero de impresión.
 69+  8416              ;	defw 0											; Rutina de impresión.
 70+  8416
 71+  8416 00 00        Disparo_7 defw 0									; Control.
 72+  8418              ;	defw 0											; Puntero objeto.
 73+  8418              ;	defw 0											; Puntero de impresión.
 74+  8418              ;	defw 0											; Rutina de impresión.
 75+  8418
 76+  8418 00 00        Disparo_8 defw 0									; Control.
 77+  841A              ;	defw 0											; Puntero objeto.
 78+  841A              ;	defw 0											; Puntero de impresión.
 79+  841A              ;	defw 0											; Rutina de impresión.
 80+  841A
 81+  841A 00 00        Disparo_9 defw 0									; Control.
 82+  841C              ;	defw 0											; Puntero objeto.
 83+  841C              ;	defw 0											; Puntero de impresión.
 84+  841C              ;	defw 0											; Rutina de impresión.
 85+  841C
 86+  841C 00 00        Disparo_10 defw 0									; Control.
 87+  841E              ;	defw 0											; Puntero objeto.
 88+  841E              ;	defw 0											; Puntero de impresión.
 89+  841E              ;	defw 0											; Rutina de impresión.
 90+  841E
 91+  841E 00 00        Disparo_11 defw 0
 92+  8420
 93+  8420              ; -------------------------------------------------------------------------------------
 94+  8420
 95+  8420              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8420
 97+  8420 66 84        	defw Entidad_1
 98+  8422 A0 84        	defw Entidad_2
 99+  8424 DA 84        	defw Entidad_3
100+  8426 14 85        	defw Entidad_4
101+  8428              ;	...
102+  8428              ;	...
103+  8428              ;	+ entidades ...
104+  8428
105+  8428 00 00        	defw 0
106+  842A 00 00        	defw 0
107+  842C
108+  842C              ; ---------- ---------- ---------- ---------- ----------
109+  842C
110+  842C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  842E 00 00        	defw 0		 									; (Posicion_actual).
112+  8430 00 00        	defw 0	 										; (Puntero_objeto).
113+  8432 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  8435
115+  8435 05           	db %00000101									; (Attr).
116+  8436
117+  8436 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8438 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  843A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  843C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  843E
122+  843E D0 50        	defw $50d0										; (Posicion_inicio).
123+  8440 04           	db 4 											; (Cuad_objeto).
124+  8441
125+  8441 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  8445
127+  8445 00 00        	db 0,0											; Variables_de_borrado
128+  8447 00 00        	defw 0											;	" " " " " " "
129+  8449 00 00        	defw 0											;	" " " " " " "
130+  844B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  844F
132+  844F 00 00        	db 0,0											; Variables_de_pintado
133+  8451 00 00        	defw 0											;	" " " " " " "
134+  8453 00 00        	defw 0											;	" " " " " " "
135+  8455 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  8459
137+  8459 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  845B
139+  845B 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  845F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  8462
142+  8462 00           	db 0 											; (Columnas).
143+  8463 00 00        	defw 0											; (Limite_horizontal).
144+  8465 00           	db 0											; (Limite_vertical).
145+  8466
146+  8466              ; ---------- ---------- ---------- ---------- ----------
147+  8466
148+  8466 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  8468 00 00        	defw 0											; (Posicion_actual).
150+  846A 00 00        	defw 0 											; (Puntero_objeto).
151+  846C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  846F
153+  846F 00           	db %00000000 									; (Attr).
154+  8470
155+  8470 00 00        	defw 0											; (Indice_Sprite_der).
156+  8472 00 00        	defw 0											; (Indice_Sprite_izq).
157+  8474 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  8476 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  8478
160+  8478 00 00        	defw 0											; (Posicion_inicio).
161+  847A 00           	db 0											; (Cuad_objeto).
162+  847B
163+  847B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  847F
165+  847F 00 00        	db 0,0										    ; Variables_de_borrado
166+  8481 00 00        	defw 0											;	" " " " " " "
167+  8483 00 00        	defw 0											;	" " " " " " "
168+  8485 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  8489
170+  8489 00 00        	db 0,0											; Variables_de_pintado
171+  848B 00 00        	defw 0											;	" " " " " " "
172+  848D 00 00        	defw 0											;	" " " " " " "
173+  848F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  8493
175+  8493 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  8495
177+  8495 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  8499 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  849C
180+  849C 00           	db 0 											; (Columnas).
181+  849D 00 00        	defw 0											; (Limite_horizontal).
182+  849F 00           	db 0											; (Limite_vertical).
183+  84A0
184+  84A0              ; ---------- ---------- ---------- ---------- ----------
185+  84A0
186+  84A0 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84A2 00 00        	defw 0                                          ; (Posicion_actual).
188+  84A4 00 00        	defw 0											; (Puntero_objeto).
189+  84A6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84A9
191+  84A9 02           	db %00000010									; (Attr).
192+  84AA
193+  84AA 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84AC 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84AE 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84B0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84B2
198+  84B2 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  84B4 02           	db 2											; (Cuad_objeto).
200+  84B5
201+  84B5 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  84B9
203+  84B9 00 00        	db 0,0											; Variables_de_borrado
204+  84BB 00 00        	defw 0										 	;	" " " " " " "
205+  84BD 00 00        	defw 0											;	" " " " " " "
206+  84BF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  84C3
208+  84C3 00 00        	db 0,0											; Variables_de_pintado
209+  84C5 00 00        	defw 0											;	" " " " " " "
210+  84C7 00 00        	defw 0											;	" " " " " " "
211+  84C9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  84CD
213+  84CD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  84CF
215+  84CF 3B 93 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  84D3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  84D6
218+  84D6 00           	db 0 											; (Columnas).
219+  84D7 00 00        	defw 0											; (Limite_horizontal).
220+  84D9 00           	db 0											; (Limite_vertical).
221+  84DA
222+  84DA              ; ---------- ---------- ---------- ---------- ----------
223+  84DA
224+  84DA 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  84DC 00 00        	defw 0                                          ; (Posicion_actual).
226+  84DE 00 00        	defw 0											; (Puntero_objeto).
227+  84E0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  84E3
229+  84E3 04           	db %00000100									; (Attr).
230+  84E4
231+  84E4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  84E6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  84E8
234+  84E8 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  84EA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  84EC
237+  84EC A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  84EE 01           	db 1											; (Cuad_objeto).
239+  84EF
240+  84EF 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  84F3
242+  84F3 00 00        	db 0,0											; Variables_de_borrado
243+  84F5 00 00        	defw 0										 	;	" " " " " " "
244+  84F7 00 00        	defw 0											;	" " " " " " "
245+  84F9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  84FD
247+  84FD 00 00        	db 0,0											; Variables_de_pintado
248+  84FF 00 00        	defw 0											;	" " " " " " "
249+  8501 00 00        	defw 0											;	" " " " " " "
250+  8503 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  8507
252+  8507 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8509
254+  8509 3D 93 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  850D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8510
257+  8510 00           	db 0 											; (Columnas).
258+  8511 00 00        	defw 0											; (Limite_horizontal).
259+  8513 00           	db 0											; (Limite_vertical).
260+  8514
261+  8514              ; ---------- ---------- ---------- ---------- ----------
262+  8514
263+  8514 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  8516 00 00        	defw 0                                          ; (Posicion_actual).
265+  8518 00 00        	defw 0 											; (Puntero_objeto).
266+  851A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  851D
268+  851D 01           	db %00000001									; (Attr).
269+  851E
270+  851E 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8520 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  8522
273+  8522 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  8524 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  8526
276+  8526 BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8528 00           	db 0											; (Cuad_objeto).
278+  8529
279+  8529 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  852D
281+  852D 00 00        	db 0,0											; Variables_de_borrado
282+  852F 00 00        	defw 0										 	;	" " " " " " "
283+  8531 00 00        	defw 0											;	" " " " " " "
284+  8533 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  8537
286+  8537 00 00        	db 0,0											; Variables_de_pintado
287+  8539 00 00        	defw 0											;	" " " " " " "
288+  853B 00 00        	defw 0											;	" " " " " " "
289+  853D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8541
291+  8541 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  8543
293+  8543 2D 93 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  8547 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  854A
296+  854A 00           	db 0 											; (Columnas).
297+  854B 00 00        	defw 0											; (Limite_horizontal).
298+  854D 00           	db 0											; (Limite_vertical).
299+  854E
# file closed: Entidades_y_disparos.asm
 21   854E
 22   854E              ; ******************************************************************************************************************************************************************************************
 23   854E              ; Constantes.
 24   854E              ; ******************************************************************************************************************************************************************************************
 25   854E              ;
 26   854E              ; 8/11/22
 27   854E              ;
 28   854E              ; Constantes generales.
 29   854E              ;
 30   854E
 31   854E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   854E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   854E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   854E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   854E
 36   854E              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   854E              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   854E              ;                               				        ; De momento situamos este almacén en $7000.
 39   854E              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   854E              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   854E              ;                               				        ; De momento situamos este almacén en $7060.
 42   854E
 43   854E              ; ******************************************************************************************************************************************************************************************
 44   854E              ; Variables.
 45   854E              ; ******************************************************************************************************************************************************************************************
 46   854E              ;
 47   854E              ; 10/11/22
 48   854E              ;
 49   854E              ; Variables de DRAW. (Motor principal).
 50   854E              ;
 51   854E              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   854E
 53   854E 02           Filas db 2												; Filas. [DRAW]
 54   854F 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8550 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   8552 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   8554 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   8555 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   8556
 60   8556              ; ---------- ---------- ---------- ---------;      ;---------
 61   8556
 62   8556 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   8557              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   8557              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   8557 04           Attr db %00000100										; Atributos de la entidad:
 66   8558
 67   8558              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   8558              ;
 69   8558              ;	COLORES: 0 ..... NEGRO
 70   8558              ;    		 1 ..... AZUL
 71   8558              ; 			 2 ..... ROJO
 72   8558              ;			 3 ..... MAGENTA
 73   8558              ; 			 4 ..... VERDE
 74   8558              ; 			 5 ..... CIAN
 75   8558              ;			 6 ..... AMARILLO
 76   8558              ; 			 7 ..... BLANCO
 77   8558
 78   8558 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   855A 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   855C 00 00        Puntero_DESPLZ_der defw 0
 81   855E 00 00        Puntero_DESPLZ_izq defw 0
 82   8560
 83   8560 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   8562 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   8563
 86   8563              ; Variables de objeto. (Características).
 87   8563
 88   8563 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   8564 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   8565 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   8566 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   8567
 93   8567 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   8569 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   856B 00 00        	defw 0
 96   856D 00 00 00 00  	db 0,0,0,0
 97   8571
 98   8571 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   8573 00 00        	defw 0
100   8575 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   8577 00 00 00 00  	db 0,0,0,0
102   857B
103   857B              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   857B
105   857B 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   857C              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   857C              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   857C              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   857C              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   857C              ;
111   857C              ; 														DESCRIPCIÖN:
112   857C              ;
113   857C              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   857C              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   857C              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   857C              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   857C              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   857C              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   857C              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   857C              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   857C              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   857C              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   857C              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   857C              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   857C              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   857C              ;
127   857C              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   857C              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   857C              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   857C
131   857C 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   857D
133   857D              ; Movimiento.
134   857D
135   857D 29 93        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   857F 00 00        Puntero_mov defw 0
137   8581 00           Contador_db_mov db 0
138   8582 00           Incrementa_puntero db 0
139   8583 00           Repetimos_db db 0
140   8584
141   8584              ; Variables de funcionamiento. [DRAW].
142   8584
143   8584 00           Columnas db 0
144   8585 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   8587              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   8587 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   8588
148   8588              ; 59 Bytes por entidad.
149   8588              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   8588              ;					         		---------;      ;---------
151   8588
152   8588
153   8588              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   8588
155   8588 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   8589
157   8589              ;														DESCRIPCIÓN:
158   8589              ;
159   8589              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   8589              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   8589              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   8589              ; Gestión de ENTIDADES.
163   8589
164   8589 00 00        Puntero_store_entidades defw 0
165   858B 00 00        Puntero_restore_entidades defw 0
166   858D 00 00        Indice_restore defw 0
167   858F 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
168   8590 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
169   8591              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
170   8591              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
171   8591              ;														; _ (Numero_de_malotes)="0".
172   8591 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
173   8593              ;														; _variable para almacenar lo posición del puntero_
174   8593              ; 														; _de pila, SP.
175   8593 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
176   8595              ;														; La utiliza la rutina [Extrae_foto_registros].
177   8595 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
178   8597              ;														; _el snapshot de los registros de la siguiente entidad.
179   8597              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
180   8597 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
181   8599              ;														; _el snapshot de los registros del siguiente disparo.
182   8599              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
183   8599
184   8599              ; Gestión de Disparos.
185   8599
186   8599 00 00        Puntero_extraccion_disparo_Amadeus defw 0
187   859B 00 00        Puntero_extraccion_disparo_entidades defw 0
188   859D 00           Numero_de_disparotes db 0
189   859E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
190   85A0 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
191   85A2
192   85A2              ; Gestión de FRAMES.
193   85A2
194   85A2 00           Switch db 0
195   85A3
196   85A3              ; Variables de Raster y localización en pantalla.
197   85A3
198   85A3 00 FF        Temp_Raster defw $ff00
199   85A5
200   85A5              ; Rutina principal *************************************************************************************************************************************************************************
201   85A5              ;
202   85A5              ;	14/11/22
203   85A5
204   85A5 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
205   85A8
206   85A8 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
207   85AA ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
208   85AC ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
209   85AE F3           	DI
210   85AF
211   85AF 3E 01        	ld a,1
212   85B1 D3 FE        	out ($fe),a
213   85B3
214   85B3 3E 07        	ld a,%00000111
215   85B5 CD 62 8F     	call Cls
216   85B8
217   85B8              ;	call Pinta_FILAS
218   85B8
219   85B8 CD F1 87     	call Pulsa_ENTER
220   85BB
221   85BB 21 8F 85     	ld hl,Numero_de_entidades
222   85BE 46           	ld b,(hl)
223   85BF 04           	inc b
224   85C0 05           	dec b
225   85C1 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
226   85C3
227   85C3              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
228   85C3              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
229   85C3              ;	Pintamos el resto de entidades:
230   85C3
231   85C3 CD EA 86     	call Inicia_punteros_de_entidades
232   85C6
233   85C6              ;	INICIA ENTIDADES!!!!!
234   85C6
235   85C6 C5           1 push bc  												; Guardo el contador de entidades.
236   85C7 CD 44 87      	call Inicia_Puntero_objeto
237   85CA CD B2 89     	call Draw
238   85CD CD A0 7F     	call Guarda_foto_registros
239   85D0 CD 8C 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
240   85D3 C1           	pop bc
241   85D4 10 F0        	djnz 1B  											; Decremento el contador de entidades.
242   85D6
243   85D6              ; 	INICIA AMADEUS!!!!!
244   85D6
245   85D6 CD CD 87     3 call Restore_Amadeus
246   85D9 CD 44 87     	call Inicia_Puntero_objeto
247   85DC CD B2 89     	call Draw
248   85DF CD A0 7F     	call Guarda_foto_registros
249   85E2 CD DF 87     	call Store_Amadeus
250   85E5
251   85E5              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
252   85E5
253   85E5 CD 00 87     	call Inicia_Puntero_Disparo_Entidades
254   85E8 CD 07 87     	call Inicia_Puntero_Disparo_Amadeus
255   85EB
256   85EB              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
257   85EB
258   85EB CD EA 86     	call Inicia_punteros_de_entidades
259   85EE CD BB 87     	call Restore_Primera_entidad
260   85F1
261   85F1 3A 8F 85     	ld a,(Numero_de_entidades)
262   85F4 3C           	inc a
263   85F5 32 90 85     	ld (Numero_de_malotes),a
264   85F8
265   85F8 FB           2 ei
266   85F9 18 FD        	jr 2B
267   85FB
268   85FB              ; -----------------------------------------------------------------------------------
269   85FB
270   85FB              Frame
271   85FB
272   85FB              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
273   85FB              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
274   85FB
275   85FB 3E 02            ld a,2
276   85FD D3 FE            out ($fe),a
277   85FF CD B6 8C     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
278   8602 CD EF 8C     	call Extrae_foto_disparos
279   8605 3E 01            ld a,1
280   8607 D3 FE            out ($fe),a
281   8609
282   8609              ; ----------------------------------------------------------------------
283   8609
284   8609 21 00 70     	ld hl,Album_de_fotos
285   860C 22 95 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
286   860F              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
287   860F 3A 8F 85         ld a,(Numero_de_entidades)
288   8612 47               ld b,a
289   8613 A7           	and a
290   8614 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
291   8616
292   8616 C5           2 push bc
293   8617 CD 63 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
294   861A 3A 7B 85     	ld a,(Ctrl_0)
295   861D CB 67        	bit 4,a
296   861F 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
297   8621
298   8621              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
299   8621              ; Las entidades sólo generan disparo cuando se mueven.
300   8621              ; 16/02/23.
301   8621              ; [[[
302   8621 CD 28 88     	call Detecta_disparo_entidad
303   8624              ; ]]]
304   8624 CD B1 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
305   8627
306   8627 21 7B 85     1 ld hl,Ctrl_0
307   862A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
308   862C AF           	xor a
309   862D 32 7C 85     	ld (Obj_dibujado),a
310   8630 CD 8C 87     	call Store_Restore_entidades
311   8633 C1           	pop bc
312   8634 10 E0        	djnz 2B
313   8636
314   8636              ; Tras la gestión de las entidades, ... AMADEUS.
315   8636
316   8636 CD CD 87     4 call Restore_Amadeus
317   8639 CD 82 86     	call Mov_Amadeus
318   863C 3A 7B 85     	ld a,(Ctrl_0)
319   863F CB 67        	bit 4,a
320   8641 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
321   8643 CD B1 86     	call Guarda_foto_entidad_a_pintar
322   8646
323   8646 21 7B 85     3 ld hl,Ctrl_0
324   8649 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
325   864B AF           	xor a
326   864C 32 7C 85     	ld (Obj_dibujado),a
327   864F CD DF 87     	call Store_Amadeus
328   8652
329   8652              ; -----
330   8652
331   8652 CD EA 86     	call Inicia_punteros_de_entidades
332   8655 CD BB 87     	call Restore_Primera_entidad
333   8658
334   8658              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
335   8658
336   8658 CD 0E 87     	call Calcula_numero_de_malotes
337   865B CD 26 87     	call Calcula_numero_de_disparotes
338   865E
339   865E 3E 04        	ld a,4
340   8660 D3 FE        	out ($fe),a
341   8662 C9           	ret
342   8663
343   8663              ; --------------------------------------------------------------------------------------------------------------
344   8663              ;
345   8663              ;	29/1/23
346   8663
347   8663              Mov_obj
348   8663
349   8663              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
350   8663
351   8663 AF           	xor a
352   8664 32 7C 85     	ld (Obj_dibujado),a
353   8667 CD BB 86         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
354   866A              ;														; Obj_dibujado="0".
355   866A              ; Movemos Entidades malignas.
356   866A
357   866A CD 3F 93     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
358   866D 3A 7B 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
359   8670 CB 67        	bit 4,a
360   8672 C8           	ret z
361   8673
362   8673              ; ---------
363   8673
364   8673 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
365   8675 32 7C 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
366   8678 CD BB 86         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
367   867B CD D2 86         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
368   867E CD A1 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
369   8681 C9           	ret													; _de la misma.
370   8682
371   8682              ; --------------------------------------------------------------------------------------------------------------
372   8682              ;
373   8682              ;	29/1/23
374   8682
375   8682              Mov_Amadeus
376   8682
377   8682 AF           	xor a
378   8683 32 7C 85     	ld (Obj_dibujado),a
379   8686 CD BB 86         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
380   8689              ;														; Obj_dibujado="0".
381   8689              ; Movemos Amadeus.
382   8689
383   8689 CD 05 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
384   868C 3A 7B 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
385   868F CB 67        	bit 4,a
386   8691 C8           	ret z
387   8692
388   8692              ; ---------
389   8692
390   8692 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
391   8694 32 7C 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
392   8697 CD BB 86         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
393   869A CD D2 86         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
394   869D CD A1 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
395   86A0 C9           	ret													; _de la nave.
396   86A1
397   86A1              ; --------------------------------------------------------------------------------------------------------------
398   86A1              ;
399   86A1              ;	31/01/23
400   86A1              ;
401   86A1              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
402   86A1
403   86A1              Guarda_foto_entidad_a_borrar
404   86A1
405   86A1 CD 8C 8C     	call Prepara_draw
406   86A4 CD C6 8B     	call calcula_CColumnass
407   86A7 CD FD 8B     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
408   86AA CD 52 8C     	call Define_rutina_de_impresion
409   86AD CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
410   86B0 C9           	ret
411   86B1
412   86B1              ; --------------------------------------------------------------------------------------------------------------
413   86B1              ;
414   86B1              ;	31/01/23
415   86B1              ;
416   86B1              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
417   86B1              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
418   86B1
419   86B1              Guarda_foto_entidad_a_pintar
420   86B1
421   86B1 CD DE 86     	call Repone_pintar
422   86B4 CD B2 89     	call Draw
423   86B7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
424   86BA C9           	ret
425   86BB
426   86BB              ; --------------------------------------------------------------------------------------------------------------
427   86BB              ;
428   86BB              ;
429   86BB
430   86BB 21 4E 85     Prepara_var_pintado_borrado	ld hl,Filas
431   86BE 3A 7C 85     	ld a,(Obj_dibujado)
432   86C1 A7           	and a
433   86C2 28 05        	jr z,1F
434   86C4 11 71 85     	ld de,Variables_de_pintado
435   86C7 18 03        	jr 2F
436   86C9 11 67 85     1 ld de,Variables_de_borrado
437   86CC 01 08 00     2 ld bc,8
438   86CF ED B0        	ldir
439   86D1 C9           	ret
440   86D2
441   86D2              ; --------------------------------------------------------------------------------------------------------------
442   86D2
443   86D2 21 67 85     Repone_borrar ld hl,Variables_de_borrado
444   86D5 11 4E 85     	ld de,Filas
445   86D8 01 08 00     	ld bc,8
446   86DB ED B0        	ldir
447   86DD C9           	ret
448   86DE
449   86DE 21 71 85     Repone_pintar ld hl,Variables_de_pintado
450   86E1 11 4E 85     	ld de,Filas
451   86E4 01 08 00     	ld bc,8
452   86E7 ED B0        	ldir
453   86E9 C9           	ret
454   86EA
455   86EA              ; *************************************************************************************************************************************************************
456   86EA              ;
457   86EA              ; 8/1/23
458   86EA              ;
459   86EA              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
460   86EA              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
461   86EA              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
462   86EA
463   86EA              ; Destruye HL y DE !!!!!
464   86EA
465   86EA              Inicia_punteros_de_entidades
466   86EA
467   86EA 21 20 84     	ld hl,Indice_de_entidades
468   86ED CD 3E 87         call Extrae_address
469   86F0 22 89 85         ld (Puntero_store_entidades),hl
470   86F3 21 22 84     	ld hl,Indice_de_entidades+2
471   86F6 22 8D 85     	ld (Indice_restore),hl
472   86F9 CD 3E 87     	call Extrae_address
473   86FC 22 8B 85     	ld (Puntero_restore_entidades),hl
474   86FF C9               ret
475   8700
476   8700              ; *************************************************************************************************************************************************************
477   8700              ;
478   8700              ; 8/1/23
479   8700              ;
480   8700              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
481   8700
482   8700 21 F4 83     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
483   8703 22 9E 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
484   8706 C9           	ret
485   8707 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
486   870A 22 A0 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
487   870D C9           	ret
488   870E
489   870E              ; -------------------------------------------------------------------------------------------------------------
490   870E              ;
491   870E              ; 28/2/23
492   870E              ;
493   870E
494   870E              Calcula_numero_de_malotes
495   870E
496   870E 21 00 70     	ld hl,Album_de_fotos
497   8711 EB           	ex de,hl
498   8712 2A 95 85     	ld hl,(Stack_snapshot)
499   8715
500   8715 06 00        	ld b,0
501   8717 7D           	ld a,l
502   8718 93           	sub e
503   8719 28 07        	jr z,1F
504   871B
505   871B              ; Nº de malotes no es "0".
506   871B
507   871B D6 06        2 sub 6
508   871D 04           	inc b
509   871E A7           	and a
510   871F 20 FA        	jr nz,2B
511   8721 78           	ld a,b
512   8722
513   8722 32 90 85     1 ld (Numero_de_malotes),a
514   8725 C9           	ret
515   8726
516   8726              ; -------------------------------------------------------------------------------------------------------------
517   8726              ;
518   8726              ; 28/2/23
519   8726              ;
520   8726
521   8726              Calcula_numero_de_disparotes
522   8726
523   8726 21 60 70     	ld hl,Album_de_fotos_disparos
524   8729 EB           	ex de,hl
525   872A 2A 97 85     	ld hl,(Stack_snapshot_disparos)
526   872D
527   872D 06 00        	ld b,0
528   872F 7D           	ld a,l
529   8730 93           	sub e
530   8731 28 07        	jr z,1F
531   8733
532   8733              ; Nº de malotes no es "0".
533   8733
534   8733 D6 06        2 sub 6
535   8735 04           	inc b
536   8736 A7           	and a
537   8737 20 FA        	jr nz,2B
538   8739 78           	ld a,b
539   873A
540   873A 32 9D 85     1 ld (Numero_de_disparotes),a
541   873D C9           	ret
542   873E              ; *************************************************************************************************************************************************************
543   873E              ;
544   873E              ; 20/10/22
545   873E              ;
546   873E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
547   873E              ;
548   873E              ; Destruye el puntero y DE !!!!!
549   873E
550   873E 5E           Extrae_address ld e,(hl)
551   873F 23           	inc hl
552   8740 56           	ld d,(hl)
553   8741 2B           	dec hl
554   8742 EB           	ex de,hl
555   8743 C9           	ret
556   8744
557   8744              ; *************************************************************************************************************************************************************
558   8744              ;
559   8744              ;	7/2/23
560   8744              ;
561   8744              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
562   8744              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
563   8744              ;
564   8744              ;   Destruye HL y BC !!!!!,
565   8744              ;
566   8744              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
567   8744              ;					"0" ..... Izquierda.
568   8744
569   8744              Inicia_Puntero_objeto
570   8744
571   8744 3A 62 85     	ld a,(Cuad_objeto)
572   8747 E6 01        	and 1
573   8749 F5           	push af
574   874A CC 68 87     	call z,Inicia_puntero_objeto_izq
575   874D F1           	pop af
576   874E 28 2B        	jr z,1F
577   8750 CD 55 87     	call Inicia_puntero_objeto_der
578   8753 18 26        	jr 1F
579   8755
580   8755              ; Arrancamos desde la parte izquierda de la pantalla.
581   8755              ; Iniciamos (Indice_Sprite_der).
582   8755
583   8755 2A 58 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
584   8758 22 5C 85     	ld (Puntero_DESPLZ_der),hl
585   875B CD 3E 87     	call Extrae_address
586   875E 22 52 85     	ld (Puntero_objeto),hl
587   8761
588   8761 2A 5A 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
589   8764              ;	call Extrae_address
590   8764 22 5E 85     	ld (Puntero_DESPLZ_izq),hl
591   8767 C9           	ret
592   8768
593   8768              ; Arrancamos desde la parte derecha de la pantalla.
594   8768              ; Iniciamos (Indice_Sprite_izq).
595   8768
596   8768 2A 5A 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
597   876B 22 5E 85     	ld (Puntero_DESPLZ_izq),hl
598   876E CD 3E 87     	call Extrae_address
599   8771 22 52 85     	ld (Puntero_objeto),hl
600   8774
601   8774 2A 58 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
602   8777              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
603   8777 22 5C 85     	ld (Puntero_DESPLZ_der),hl
604   877A C9           	ret
605   877B
606   877B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
607   877B
608   877B 21 38 83     1 ld hl,Amadeus
609   877E ED 4B 52 85  	ld bc,(Puntero_objeto)
610   8782 B7 ED 42     	sub hl,bc
611   8785 C0           	ret nz
612   8786 21 7B 85     	ld hl,Ctrl_0
613   8789 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
614   878B C9           	ret 												; _de nuestra nave en los extremos.
615   878C
616   878C              ; *************************************************************************************************************************************************************
617   878C              ;
618   878C              ;	8/1/23
619   878C              ;
620   878C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
621   878C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
622   878C
623   878C              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
624   878C              ;	_de la 2ª y 3ª entidad respectivamente.
625   878C
626   878C              Store_Restore_entidades
627   878C
628   878C E5           	push hl
629   878D D5           	push de
630   878E C5            	push bc
631   878F
632   878F              ;	STORE !!!!!
633   878F              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
634   878F
635   878F 21 4E 85     	ld hl,Filas
636   8792 ED 5B 89 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
637   8796 01 3A 00     	ld bc,58
638   8799 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
639   879B
640   879B              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
641   879B
642   879B 2A 8B 85     	ld hl,(Puntero_restore_entidades)
643   879E 22 89 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
644   87A1 11 4E 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
645   87A4 01 3A 00     	ld bc,58
646   87A7 ED B0        	ldir
647   87A9
648   87A9              ;	Incrementa RESTORE !!!!!
649   87A9
650   87A9 2A 8D 85         ld hl,(Indice_restore)
651   87AC 23           	inc hl
652   87AD 23           	inc hl
653   87AE 22 8D 85     	ld (Indice_restore),hl
654   87B1 CD 3E 87         call Extrae_address
655   87B4 22 8B 85         ld (Puntero_restore_entidades),hl
656   87B7 C1           	pop bc
657   87B8 D1           	pop de
658   87B9 E1           	pop hl
659   87BA C9           	ret
660   87BB
661   87BB              ; **************************************************************************************************
662   87BB              ;
663   87BB              ;	29/10/22
664   87BB              ;
665   87BB              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
666   87BB
667   87BB E5           Restore_Primera_entidad push hl
668   87BC D5           	push de
669   87BD C5            	push bc
670   87BE 2A 89 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
671   87C1 11 4E 85     	ld de,Filas
672   87C4 01 3A 00     	ld bc,58
673   87C7 ED B0        	ldir
674   87C9 C1           	pop bc
675   87CA D1           	pop de
676   87CB E1           	pop hl
677   87CC C9           	ret
678   87CD
679   87CD              ; **************************************************************************************************
680   87CD              ;
681   87CD              ;	25/01/23
682   87CD              ;
683   87CD              ;	Restore_Amadeus
684   87CD              ;
685   87CD              ;	Cargamos en DRAW los parámetros de Amadeus.
686   87CD              ;
687   87CD
688   87CD E5           Restore_Amadeus	push hl
689   87CE D5           	push de
690   87CF C5            	push bc
691   87D0 21 2C 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
692   87D3 11 4E 85     	ld de,Filas
693   87D6 01 3A 00     	ld bc,58
694   87D9 ED B0        	ldir
695   87DB C1           	pop bc
696   87DC D1           	pop de
697   87DD E1           	pop hl
698   87DE C9           	ret
699   87DF
700   87DF              ; *************************************************************************************************************************************************************
701   87DF              ;
702   87DF              ;	29/01/23
703   87DF              ;
704   87DF              ;	Store_Amadeus
705   87DF              ;
706   87DF              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
707   87DF              ;
708   87DF
709   87DF E5           Store_Amadeus push hl
710   87E0 D5           	push de
711   87E1 C5            	push bc
712   87E2 21 4E 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
713   87E5 11 2C 84     	ld de,Amadeus_db
714   87E8 01 3A 00     	ld bc,58
715   87EB ED B0        	ldir
716   87ED C1           	pop bc
717   87EE D1           	pop de
718   87EF E1           	pop hl
719   87F0 C9           	ret
720   87F1
721   87F1              ; **************************************************************************************************
722   87F1
723   87F1              ; Teclado.
724   87F1
725   87F1 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
726   87F3 DB FE        	in a,($fe)
727   87F5 E6 01        	and $01
728   87F7 28 02        	jr z,1f
729   87F9 18 F6        	jr Pulsa_ENTER
730   87FB C9           1 ret
731   87FC
732   87FC              ; **************************************************************************************************
733   87FC              ;
734   87FC              ; Temporización.
735   87FC
736   87FC              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
737   87FC              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
738   87FC              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
739   87FC              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
740   87FC
741   87FC              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
742   87FC              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
743   87FC              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
744   87FC
745   87FC              ; A partir de $4f61 no hace falta DELAY.
746   87FC
747   87FC              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
748   87FC
749   87FC 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
750   87FF 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
751   8800 78           	LD A,B
752   8801 A7           	AND A
753   8802 20 FB        	JR NZ,wait
754   8804 C9           	RET
755   8805
756   8805              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
757   8805              ;
758   8805              ;	5/3/23
759   8805              ;
760   8805              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
761   8805
762   8805              Movimiento_Amadeus
763   8805
764   8805              ; Disparo.
765   8805
766   8805 3E F7        	ld a,$f7												; "5" para disparar.
767   8807 DB FE        	in a,($fe)
768   8809 E6 10        	and $10
769   880B CC 5C 88     	call z,Genera_disparo
770   880E
771   880E 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
772   8810 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
773   8812 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
774   8814 CC F0 90         call z,Mov_left											;			"			"			"			"			"			"			"			"
775   8817 3E F7        	ld a,$f7
776   8819 DB FE        	in a,($fe)
777   881B E6 01        	and $01
778   881D C8           	ret z
779   881E
780   881E 3E F7        	ld a,$f7
781   8820 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
782   8822 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
783   8824 CC D2 8F     	call z,Mov_right										;			"			"			"			"			"			"			"			"
784   8827 C9           	ret
785   8828
786   8828              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
787   8828              ;
788   8828              ;	Rutina provisional para que los malotes cagen balas.
789   8828
790   8828 3E 7F        Detecta_disparo_entidad ld a,$7f
791   882A DB FE        	in a,($fe)
792   882C E6 01        	and 1
793   882E C0           	ret nz
794   882F CD 5C 88     	call Genera_disparo
795   8832 C9           	ret
796   8833
797   8833              ; Pinta indicadores de FILAS. ------------------------------------------------------
798   8833
799   8833 21 10 40     Pinta_FILAS ld hl,$4010
800   8836              ;	ld b,9
801   8836              ;2 push hl
802   8836              ;	push bc
803   8836 06 BF        	ld b,$bf
804   8838 36 80        1 ld (hl),%10000000
805   883A CD 98 8C     	call NextScan
806   883D 10 F9        	djnz 1B
807   883F              ;	pop bc
808   883F              ;	pop hl
809   883F              ;	inc l
810   883F              ;	djnz 2B
811   883F 06 03        	ld b,3
812   8841 21 00 47         ld hl,$4700
813   8844 CD 4A 88     3 call Bucle_1
814   8847 10 FB            djnz 3B
815   8849 C9               ret
816   884A
817   884A C5           Bucle_1 push bc
818   884B E5                   push hl
819   884C D1                   pop de
820   884D 13                   inc de
821   884E 01 FF 00             ld bc,255
822   8851 36 FF                ld (hl),255
823   8853 ED B0                ldir
824   8855 23                   inc hl
825   8856 3E 07                ld a,7
826   8858 84                   add a,h
827   8859 67                   ld h,a
828   885A C1                   pop bc
829   885B C9                   ret
830   885C
831   885C              ; ---------------------------------------------------------------
832   885C
833   885C              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  885C              ; ******************************************************************************************************************************************************************************************
  2+  885C              ;
  3+  885C              ;   19/02/23
  4+  885C              ;
  5+  885C              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  885C              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  885C              ;
  8+  885C              ;
  9+  885C              ;       -1 .defw ..... Control. %00000001 00000001
 10+  885C              ;
 11+  885C              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  885C              ;               _ hacen las entidades hacia abajo.
 13+  885C              ;
 14+  885C              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  885C              ;
 16+  885C              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  885C              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  885C              ;
 19+  885C              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  885C              ;           _ la bala.
 21+  885C              ;
 22+  885C              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  885C              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  885C              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  885C              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  885C              ;           _ en el momento de generarse la bala)).
 27+  885C
 28+  885C              Genera_disparo
 29+  885C
 30+  885C              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  885C              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  885C              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  885C              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  885C              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  885C              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  885C              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  885C
 38+  885C 3A 84 85         ld a,(Columnas)
 39+  885F 47               ld b,a
 40+  8860 3A 4F 85         ld a,(Columns)
 41+  8863 B8               cp b
 42+  8864 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  8865
 44+  8865              ; ----- ----- -----
 45+  8865
 46+  8865 21 00 80         ld hl,Indice_disparo
 47+  8868 3A 56 85         ld a,(CTRL_DESPLZ)
 48+  886B 4F               ld c,a
 49+  886C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 50+  886E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 51+  886E              ;                                            ""        ""       "f9", B="1"
 52+  886E              ;                                            ""        ""       "fb", B="2"
 53+  886E              ;                                            ""        ""       "fb", B="3"
 54+  886E A7               and a
 55+  886F 28 10            jr z,1F
 56+  8871 E6 01            and 1
 57+  8873 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 58+  8874
 59+  8874 79               ld a,c
 60+  8875 16 F9            ld d,$f9
 61+  8877 23           2 inc hl
 62+  8878 23               inc hl
 63+  8879 04               inc b
 64+  887A BA               cp d
 65+  887B 28 04            jr z,1F
 66+  887D 14               inc d
 67+  887E 14               inc d
 68+  887F 18 F6            jr 2B
 69+  8881
 70+  8881 CD 3E 87     1 call Extrae_address
 71+  8884 E5               push hl
 72+  8885 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 73+  8887 DD 21 2B 8F  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 74+  888B
 75+  888B              ;	Se cumplen las condiciones necesarias para generar un disparo.
 76+  888B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 77+  888B
 78+  888B 3A 62 85     	ld a,(Cuad_objeto)
 79+  888E FE 02            cp 2
 80+  8890 38 60            jr c,3F
 81+  8892 28 5E            jr z,3F
 82+  8894
 83+  8894              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 84+  8894
 85+  8894 E6 01            and 1
 86+  8896 28 2D            jr z,4F
 87+  8898
 88+  8898              ; 	Estamos en el 3er cuadrante de pantalla.
 89+  8898              ; 	3er CUAD. ----- ----- ----- ----- -----
 90+  8898              ;
 91+  8898              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 92+  8898              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 93+  8898              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 94+  8898
 95+  8898 2A 50 85     	ld hl,(Posicion_actual)
 96+  889B
 97+  889B              ;   Amadeus o entidad ???.
 98+  889B
 99+  889B 3A 7B 85         ld a,(Ctrl_0)
100+  889E CB 77            bit 6,a
101+  88A0 28 0D            jr z,8F
102+  88A2
103+  88A2              ; 	Dispara Amadeus.
104+  88A2
105+  88A2 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
106+  88A4 CD A7 8C         call PreviousScan
107+  88A7 CD A7 8C         call PreviousScan
108+  88AA
109+  88AA              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
110+  88AA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
111+  88AA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
112+  88AA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
113+  88AA
114+  88AA CD 1C 89         call Ajusta_disparo_parte_izquierda
115+  88AD 18 0E            jr 10F
116+  88AF
117+  88AF              ; 	Dispara Entidad.
118+  88AF
119+  88AF 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
120+  88B1
121+  88B1              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
122+  88B1              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
123+  88B1
124+  88B1 C5               push bc
125+  88B2 06 10            ld b,16
126+  88B4 CD 98 8C     9 call NextScan
127+  88B7 10 FB            djnz 9B
128+  88B9 C1               pop bc
129+  88BA
130+  88BA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
131+  88BA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
132+  88BA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
133+  88BA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
134+  88BA
135+  88BA CD 1C 89         call Ajusta_disparo_parte_izquierda
136+  88BD
137+  88BD CD 8C 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
138+  88C0              ;                                                   ; _al generar el disparo.
139+  88C0
140+  88C0              ; 	LLegados a este punto tendremos:
141+  88C0              ;
142+  88C0              ;       Puntero_objeto_disparo en IY.
143+  88C0              ;       Rutinas_de_impresion en IX.
144+  88C0              ;       Puntero_de_impresion en HL.
145+  88C0              ;       Impacto/Dirección en BC.
146+  88C0
147+  88C0 CD 24 89         call Almacena_disparo
148+  88C3 18 4F            jr 6F                                           ; RET.
149+  88C5
150+  88C5
151+  88C5              ; 	Estamos en el 4º cuadrante de pantalla.
152+  88C5              ; 	4º CUAD. ----- ----- ----- ----- -----
153+  88C5              ;
154+  88C5              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
155+  88C5              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
156+  88C5              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
157+  88C5
158+  88C5 2A 50 85     4 ld hl,(Posicion_actual)
159+  88C8
160+  88C8              ;   Amadeus o entidad ???.
161+  88C8
162+  88C8 3A 7B 85         ld a,(Ctrl_0)
163+  88CB CB 77            bit 6,a
164+  88CD 28 0D            jr z,11F
165+  88CF
166+  88CF              ; 	Dispara Amadeus.
167+  88CF
168+  88CF 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
169+  88D1 CD A7 8C         call PreviousScan
170+  88D4 CD A7 8C         call PreviousScan
171+  88D7
172+  88D7              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
173+  88D7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
174+  88D7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
175+  88D7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
176+  88D7
177+  88D7 CD 15 89         call Ajusta_disparo_parte_derecha
178+  88DA 18 0E            jr 13F
179+  88DC
180+  88DC              ; 	Dispara Entidad.
181+  88DC
182+  88DC 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
183+  88DE
184+  88DE              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
185+  88DE              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
186+  88DE
187+  88DE C5               push bc
188+  88DF
189+  88DF 06 10            ld b,16
190+  88E1 CD 98 8C     12 call NextScan
191+  88E4 10 FB            djnz 12B
192+  88E6
193+  88E6 C1               pop bc
194+  88E7
195+  88E7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
196+  88E7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
197+  88E7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
198+  88E7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
199+  88E7
200+  88E7 CD 15 89         call Ajusta_disparo_parte_derecha
201+  88EA
202+  88EA CD 8C 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
203+  88ED              ;                                                     ; _al generar el disparo.
204+  88ED
205+  88ED              ; LLegados a este punto tendremos:
206+  88ED              ;
207+  88ED              ;       Puntero_objeto_disparo en IY.
208+  88ED              ;       Rutinas_de_impresion en IX.
209+  88ED              ;       Puntero_de_impresion en HL.
210+  88ED              ;       Impacto/Dirección en BC.
211+  88ED
212+  88ED CD 24 89         call Almacena_disparo
213+  88F0 18 22            jr 6F                                           ; RET.
214+  88F2
215+  88F2              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
216+  88F2
217+  88F2 28 11        3 jr z,5F
218+  88F4
219+  88F4              ; 	1er CUAD. ----- ----- ----- ----- -----
220+  88F4              ;
221+  88F4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
222+  88F4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
223+  88F4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
224+  88F4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
225+  88F4
226+  88F4              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
227+  88F4              ;	   ""        ""       "f9", B="1"
228+  88F4              ;	   ""        ""       "fb", B="2"
229+  88F4              ; 	   ""        ""       "fb", B="3"
230+  88F4
231+  88F4 2A 50 85     	ld hl,(Posicion_actual)
232+  88F7 CD 98 8C     	call NextScan
233+  88FA
234+  88FA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
235+  88FA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
236+  88FA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
237+  88FA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
238+  88FA
239+  88FA CD 1C 89         call Ajusta_disparo_parte_izquierda
240+  88FD
241+  88FD              ; 	No se produce impacto. B="$80"
242+  88FD              ; 	Dirección del proyectil hacia abajo. C="$80"
243+  88FD
244+  88FD 01 80 80         ld bc,$8080
245+  8900
246+  8900              ; 	LLegados a este punto tendremos:
247+  8900              ;
248+  8900              ;       Puntero_objeto_disparo en IY.
249+  8900              ;       Rutinas_de_impresion en IX.
250+  8900              ;       Puntero_de_impresion en HL.
251+  8900              ;       Impacto/Dirección en BC.
252+  8900
253+  8900 CD 24 89         call Almacena_disparo
254+  8903 18 0F            jr 6F                                           ; RET.
255+  8905
256+  8905              ; 	Estamos en el 2º cuadrante de pantalla.
257+  8905              ; 	2º CUAD. ----- ----- ----- ----- -----
258+  8905              ;
259+  8905              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
260+  8905              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
261+  8905              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
262+  8905              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
263+  8905
264+  8905 2A 50 85     5 ld hl,(Posicion_actual)
265+  8908 CD 98 8C     	call NextScan
266+  890B
267+  890B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
268+  890B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
269+  890B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
270+  890B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
271+  890B
272+  890B CD 15 89         call Ajusta_disparo_parte_derecha
273+  890E
274+  890E              ; 	No se produce impacto. B="$80"
275+  890E              ; 	Dirección del proyectil hacia abajo. C="80"
276+  890E
277+  890E 01 80 80     15 ld bc,$8080
278+  8911
279+  8911              ; 	LLegados a este punto tendremos:
280+  8911              ;
281+  8911              ;       Puntero_objeto_disparo en IY.
282+  8911              ;       Rutinas_de_impresion en IX.
283+  8911              ;       Puntero_de_impresion en HL.
284+  8911              ;       Impacto/Dirección en BC.
285+  8911
286+  8911 CD 24 89         call Almacena_disparo
287+  8914
288+  8914 C9           6 ret
289+  8915
290+  8915              ; ----------------------------------------------------------------
291+  8915              ;
292+  8915              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
293+  8915              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
294+  8915              ;	_ (lado izq. o derecho), de la entidad que lo genera.
295+  8915
296+  8915 78           Ajusta_disparo_parte_derecha ld a,b
297+  8916 FE 02            cp 2
298+  8918 38 01            jr c,1F
299+  891A 23               inc hl
300+  891B C9           1 ret
301+  891C
302+  891C 78           Ajusta_disparo_parte_izquierda ld a,b
303+  891D FE 01        	cp 1
304+  891F 20 01        	jr nz,1F
305+  8921 2B           	dec hl
306+  8922 2B           1 dec hl
307+  8923 C9               ret
308+  8924
309+  8924              ; ----------------------------------------------------------------
310+  8924              ;
311+  8924              ;   25/02/23
312+  8924              ;
313+  8924              ;   La Rutina va almacenando disparos en sus respectiva bases de datos.
314+  8924              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
315+  8924
316+  8924              Almacena_disparo
317+  8924
318+  8924 E5               push hl  										; HL contiene el puntero de impresión.
319+  8925 F1               pop af
320+  8926 08               ex af,af                                        ; Puntero_de_impresion en AF'.
321+  8927
322+  8927 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
323+  8928 E6 01            and 1
324+  892A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
325+  892C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
326+  892C              ; 	Dispara AMADEUS.
327+  892C
328+  892C              ;	Comprobamos que a Amadeus aún le quedan disparos.
329+  892C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
330+  892C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
331+  892C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
332+  892C
333+  892C C5               push bc
334+  892D 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
335+  8930 2A A0 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
336+  8933 A7               and a
337+  8934 ED 42            sbc hl,bc
338+  8936 CC 07 87         call z,Inicia_Puntero_Disparo_Amadeus
339+  8939 C1               pop bc
340+  893A 28 4F            jr z,4F
341+  893C
342+  893C 2A A0 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
343+  893F 23               inc hl
344+  8940 23               inc hl
345+  8941 22 A0 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
346+  8944              ;                                                   ; _ Disparo_(+1).
347+  8944 18 18            jr 2F
348+  8946
349+  8946              ; Dispara una entidad.
350+  8946
351+  8946 C5           1 push bc
352+  8947 01 08 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
353+  894A 2A 9E 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
354+  894D A7               and a
355+  894E ED 42            sbc hl,bc
356+  8950 CC 00 87         call z,Inicia_Puntero_Disparo_Entidades
357+  8953 C1               pop bc
358+  8954 28 35            jr z,4F
359+  8956
360+  8956 2A 9E 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
361+  8959 23               inc hl
362+  895A 23               inc hl
363+  895B 22 9E 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
364+  895E              ;                                                   ; _ Disparo_(+1).
365+  895E CD 3E 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
366+  8961              ;                                                   ; _ los 8 bytes que definen el disparo:
367+  8961              ;
368+  8961              ;                                                     Puntero_objeto_disparo en IY.
369+  8961              ;                                                     Rutinas_de_impresion en IX.
370+  8961              ;                                                     Puntero_de_impresion en HL.
371+  8961              ;                                                     Impacto/Dirección en BC.
372+  8961
373+  8961 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
374+  8962 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
375+  8963 23               inc hl                                          ; _ al siguiente.
376+  8964 A7               and a
377+  8965 20 C0            jr nz,3B
378+  8967
379+  8967 08               ex af,af
380+  8968 ED 73 91 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
381+  896C F9               ld sp,hl
382+  896D
383+  896D              ;    push ix                                         ; Rutina de impresión.
384+  896D              ;    push af                                         ; Puntero de impresión.
385+  896D              ;    push iy                                         ; Puntero objeto.
386+  896D
387+  896D C5               push bc                                         ; Control.
388+  896E
389+  896E ED 7B 91 85      ld sp,(Stack)
390+  8972
391+  8972              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
392+  8972
393+  8972 21 88 85     	ld hl,Ctrl_1
394+  8975 CB C6        	set 0,(hl)
395+  8977
396+  8977 DD E5        	push ix
397+  8979 E1               pop hl
398+  897A F5               push af
399+  897B DD E1            pop ix
400+  897D
401+  897D CD A0 7F     	call Guarda_foto_registros
402+  8980
403+  8980 21 88 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
404+  8983 CB 86        	res 0,(hl)
405+  8985
406+  8985              ;   Preparamos los punteros de extraccion de disparos para utilizarlos más tarde en la rutina: Extrae_foto_registros_disparos.
407+  8985
408+  8985              ;    ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
409+  8985              ;    ld (Puntero_extraccion_disparo_Amadeus),hl
410+  8985              ;    ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
411+  8985              ;    ld (Puntero_extraccion_disparo_entidades),hl
412+  8985
413+  8985              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
414+  8985              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
415+  8985
416+  8985 CD 07 87         call Inicia_Puntero_Disparo_Amadeus
417+  8988 CD 00 87         call Inicia_Puntero_Disparo_Entidades
418+  898B
419+  898B C9           4 ret
420+  898C
421+  898C              ; ----------------------------------------------------------------
422+  898C              ;
423+  898C              ;   4/3/23
424+  898C              ;
425+  898C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
426+  898C              ;   _ al generarse el disparo.
427+  898C              ;       "$80" ..... No se produce colisión.
428+  898C              ;       "$81" ..... Se produce colisión.
429+  898C
430+  898C E5           Comprueba_Colision push hl
431+  898D 1E 80            ld e,$80                                       ; E,(Impacto)="0".
432+  898F CD A4 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
433+  8992
434+  8992 7B               ld a,e
435+  8993 E6 01            and 1
436+  8995 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
437+  8997
438+  8997              ; Hay impacto.
439+  8997
440+  8997 43           2 ld b,e
441+  8998 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
442+  8999 C9           3 ret
443+  899A
444+  899A E1           1 pop hl
445+  899B E5               push hl
446+  899C CD 98 8C         call NextScan
447+  899F CD A4 89         call Bucle_2
448+  89A2 18 F3            jr 2B
449+  89A4
450+  89A4              ; ---------- ----------
451+  89A4
452+  89A4 06 02        Bucle_2 ld b,2
453+  89A6 7E           2 ld a,(hl)
454+  89A7 A7               and a
455+  89A8 20 04            jr nz,1F
456+  89AA 23               inc hl
457+  89AB 10 F9            djnz 2B
458+  89AD C9           3 ret
459+  89AE 1E 81        1 ld e,$81
460+  89B0 18 FB            jr 3B
461+  89B2
462+  89B2              ; -------------------------------------------------------------------------------------------------------------
463+  89B2
464+  89B2
465+  89B2
466+  89B2
467+  89B2
# file closed: Disparo.asm
834   89B2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  89B2              ; ******************************************************************************************************************************************************************************************
  2+  89B2              ;
  3+  89B2              ; 01/23
  4+  89B2              ;
  5+  89B2              ; DRAW. ************************************************************************************************************************************************************************************
  6+  89B2
  7+  89B2 CD 8C 8C     Draw call Prepara_draw
  8+  89B5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  89B6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  89B7 28 05        	jr z,2F
 11+  89B9
 12+  89B9 3A 62 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  89BC 18 0C        	jr 1F
 14+  89BE 2A 60 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  89C1 22 50 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  89C4 CD 53 8B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  89C7              ;													; _la esquina superior izquierda de la pantalla.
 18+  89C7 CD C1 93     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  89CA 3A 7B 85     1 ld a,(Ctrl_0)
 20+  89CD CB 6F        	bit 5,a
 21+  89CF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  89D1
 23+  89D1 CD E9 89     	call Comprueba_limite_horizontal
 24+  89D4 CD 79 8A     	call Comprueba_limite_vertical
 25+  89D7
 26+  89D7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  89D7
 28+  89D7 CD C6 8B     3 call calcula_CColumnass
 29+  89DA CD FD 8B     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  89DD CD 52 8C     	call Define_rutina_de_impresion
 31+  89E0
 32+  89E0 3A 7B 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  89E3 CB AF        	res 5,a											; _a ser de utilidad.
 34+  89E5 32 7B 85     	ld (Ctrl_0),a
 35+  89E8
 36+  89E8 C9           	ret
 37+  89E9
 38+  89E9              ; *******************************************************************************************************************************************************************************************
 39+  89E9              ;	21/01/23
 40+  89E9              ;
 41+  89E9              ; 	Comprueba_limite_horizontal.
 42+  89E9              ;
 43+  89E9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  89E9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  89E9              ;
 46+  89E9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  89E9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  89E9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  89E9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  89E9
 51+  89E9
 52+  89E9
 53+  89E9 3A 7B 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  89EC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  89EE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  89F0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  89F2 32 7B 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  89F5 18 09            jr 6F
 59+  89F7 CB 5F        1 bit 3,a
 60+  89F9 28 0A            jr z,2F
 61+  89FB E6 F7            and $f7
 62+  89FD 32 7B 85         ld (Ctrl_0),a
 63+  8A00 CD 53 8B     6 call Inicializacion
 64+  8A03 18 5B            jr 5F
 65+  8A05 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8A06
 67+  8A06              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8A06              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8A06
 70+  8A06 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8A07 2A 85 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8A0A CD 58 8F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8A0D 67           	ld h,a
 74+  8A0E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8A0F CD 58 8F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8A12 67           	ld h,a
 77+  8A13 A7           	and a
 78+  8A14 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8A16 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8A17 3A 62 85     	ld a,(Cuad_objeto)
 81+  8A1A FE 02        	cp 2
 82+  8A1C 38 1E        	jr c,3F
 83+  8A1E 28 1C        	jr z,3F
 84+  8A20 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8A21 28 23            jr z,7F
 86+  8A23 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8A25 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8A27 E1           	pop hl
 89+  8A28
 90+  8A28              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8A28              ; _para indicar con E="2" en caso necesario.
 92+  8A28
 93+  8A28 E5               push hl
 94+  8A29 C5               push bc
 95+  8A2A CD 58 8F     	call calcula_tercio
 96+  8A2D FE 01        	cp 1
 97+  8A2F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8A31 CD 61 8A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8A34 28 26            jr z,9F
100+  8A36 38 24            jr c,9F
101+  8A38 1E 00        11 ld e,0
102+  8A3A 18 22            jr 8F
103+  8A3C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8A3D 28 07        	jr z, 7F
105+  8A3F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8A41 1E 00         	ld e,0
107+  8A43 E1           	pop hl
108+  8A44 18 04        	jr 4F
109+  8A46 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8A48 18 15            jr 10F
111+  8A4A
112+  8A4A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8A4A              ; _para indicar con E="2" en caso necesario.
114+  8A4A
115+  8A4A E5           4 push hl
116+  8A4B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8A4C CD 58 8F     	call calcula_tercio
118+  8A4F FE 01        	cp 1
119+  8A51 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8A53 CD 61 8A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8A56 28 04            jr z,9F
122+  8A58 30 02            jr nc,9F
123+  8A5A 18 02        	jr 8F
124+  8A5C 1E 02        9 ld e,2
125+  8A5E C1           8 pop bc
126+  8A5F E1           10 pop hl
127+  8A60 C9           5 ret
128+  8A61
129+  8A61              ; --------------------
130+  8A61              ;
131+  8A61              ; 25/08/22
132+  8A61
133+  8A61 CD 58 8F     Comprueba_centro call calcula_tercio
134+  8A64 67               ld h,a
135+  8A65 08           	ex af,af
136+  8A66 FE 02        	cp 2
137+  8A68 38 07        	jr c,1F
138+  8A6A 28 05        	jr z,1F
139+  8A6C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8A6F 18 03        	jr 2F
141+  8A71 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8A74 08           2 ex af,af
143+  8A75 A7               and a
144+  8A76 ED 42            sbc hl,bc
145+  8A78 C9               ret
146+  8A79
147+  8A79              ; *********************************************************************************************************************************************************************************************
148+  8A79              ;
149+  8A79              ;   16/8/22
150+  8A79              ;
151+  8A79              ;	Comprueba_limite_vertical
152+  8A79              ;
153+  8A79              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8A79              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8A79              ;
156+  8A79
157+  8A79 2A 50 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8A7C 7D           	ld a,l
159+  8A7D E6 1F        	and $1F
160+  8A7F 57           	ld d,a
161+  8A80 3A 87 85     	ld a,(Limite_vertical)
162+  8A83 BA           	cp d 											; Límite - Posición.
163+  8A84 08           	ex af,af 										; Resultado de CP d en F'.
164+  8A85 3A 62 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8A88 CB 47        	bit 0,a
166+  8A8A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8A8C
168+  8A8C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8A8C
170+  8A8C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8A8D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8A8F
173+  8A8F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8A8F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8A8F
176+  8A8F 3A 54 85         ld a,(Coordenada_X)
177+  8A92 16 0F            ld d,Centro_izquierda
178+  8A94 A7               and a
179+  8A95 92               sub d 											 ; Posición - Centro_izquierda.
180+  8A96 28 1E            jr z,3F
181+  8A98 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8A9A              ;                                                    ; _salimos sin modificar nada.
183+  8A9A 18 0E            jr 2F
184+  8A9C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8A9D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8A9F
187+  8A9F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8A9F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8A9F
190+  8A9F 3A 54 85         ld a,(Coordenada_X)
191+  8AA2 16 10            ld d,Centro_derecha
192+  8AA4 A7               and a
193+  8AA5 92               sub d
194+  8AA6 28 0E            jr z,3F
195+  8AA8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8AAA              ;                                                    ; _salimos sin modificar nada.
197+  8AAA CB 43        2 bit 0,e
198+  8AAC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8AAE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8AAF CD 43 8B         call Modificaccionne
201+  8AB2 C1           	pop bc
202+  8AB3 CD 53 8B         call Inicializacion
203+  8AB6 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8AB7
205+  8AB7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8AB7
207+  8AB7 C5           4 push bc
208+  8AB8 01 4F 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8ABB 0A           	ld a,(bc)
210+  8ABC 3D           	dec a
211+  8ABD 47           	ld b,a 											 ; Columnas-1 en B.
212+  8ABE 7D           	ld a,l
213+  8ABF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8AC0 CB 47        	bit 0,a
215+  8AC2 28 03        	jr z,5F
216+  8AC4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8AC5 18 2E        	jr 7F
218+  8AC7
219+  8AC7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8AC7
221+  8AC7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8AC8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8AC9 3A 7B 85     	ld a,(Ctrl_0)
224+  8ACC CB 4F        	bit 1,a
225+  8ACE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8AD0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8AD1
228+  8AD1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8AD1
230+  8AD1 1C               inc e
231+  8AD2 1D               dec e
232+  8AD3 20 07            jr nz,12F
233+  8AD5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8AD6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8AD7 22 50 85     	ld (Posicion_actual),hl
236+  8ADA 18 44        13 jr 9F
237+  8ADC CB 43        12 bit 0,e
238+  8ADE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8AE0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8AE0 C1           	pop bc
241+  8AE1 18 D3        	jr 3B
242+  8AE3 80           14 add b
243+  8AE4 6F               ld l,a
244+  8AE5 22 50 85     	ld (Posicion_actual),hl
245+  8AE8 CD 43 8B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8AEB 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8AED E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8AEF 32 7B 85         ld (Ctrl_0),a
249+  8AF2 F1           	pop af
250+  8AF3 18 2B        	jr 9F
251+  8AF5
252+  8AF5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8AF5
254+  8AF5 F5           7 push af
255+  8AF6 3A 7B 85     	ld a,(Ctrl_0)
256+  8AF9 CB 47        	bit 0,a
257+  8AFB 20 1D        	jr nz,8F
258+  8AFD F1           	pop af
259+  8AFE
260+  8AFE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8AFE
262+  8AFE 1C           	inc e
263+  8AFF 1D               dec e
264+  8B00 20 07            jr nz,10F
265+  8B02 90           	sub b
266+  8B03 6F               ld l,a
267+  8B04 22 50 85     	ld (Posicion_actual),hl
268+  8B07 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8B09              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8B09 CB 43        10 bit 0,e
271+  8B0B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8B0D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8B0D C1           	pop bc
274+  8B0E 18 A6        	jr 3B
275+  8B10 90           16 sub b
276+  8B11 6F               ld l,a
277+  8B12 22 50 85     	ld (Posicion_actual),hl
278+  8B15 CD 43 8B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8B18 18 06            jr 9F
280+  8B1A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8B1C 32 7B 85         ld (Ctrl_0),a
282+  8B1F F1           	pop af
283+  8B20 C1           9 pop bc
284+  8B21 1E 00        	ld e,0
285+  8B23 CD 53 8B         call Inicializacion
286+  8B26 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8B27 08           	ex af,af
288+  8B28 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8B29 18 8B            jr 3B
290+  8B2B
291+  8B2B              ; --------------------
292+  8B2B
293+  8B2B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8B2D CD A7 8C     1 call PreviousScan
295+  8B30 10 FB            djnz 1B
296+  8B32 22 50 85     	ld (Posicion_actual),hl
297+  8B35 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8B36 C9           	ret
299+  8B37
300+  8B37              ; --------------------
301+  8B37
302+  8B37 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8B39 CD 98 8C     1 call NextScan
304+  8B3C 10 FB            djnz 1B
305+  8B3E 22 50 85     	ld (Posicion_actual),hl
306+  8B41 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8B42 C9           	ret
308+  8B43
309+  8B43              ; --------------------
310+  8B43              ;
311+  8B43              ;	22/01/23
312+  8B43              ;
313+  8B43              ;	E="1". Hemos cambiado de cuadrante.
314+  8B43              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8B43              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8B43
317+  8B43
318+  8B43              Modificaccionne
319+  8B43
320+  8B43 3A 62 85     	ld a,(Cuad_objeto)
321+  8B46 FE 02        	cp 2
322+  8B48 CC 2B 8B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8B4B DC 2B 8B         call c,Modifica_Pos_actual
324+  8B4E C8           	ret z
325+  8B4F CD 37 8B         call Modifica_Pos_actual2
326+  8B52 C9               ret
327+  8B53
328+  8B53              ; *************************************************************************************************************************************************************************************************
329+  8B53              ;
330+  8B53              ;	13/8/22
331+  8B53              ;
332+  8B53              ;	Inicializacion
333+  8B53              ;
334+  8B53              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8B53              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8B53              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8B53              ;
338+  8B53              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8B53              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8B53              ;	_ desaparece/aparece.
341+  8B53
342+  8B53              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8B53              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8B53              ;
345+  8B53              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8B53              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8B53              ; 		   [E] ="0"
348+  8B53
349+  8B53              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8B53
351+  8B53 CD 58 8F     Inicializacion call calcula_tercio
352+  8B56 28 36        	jr z,primit
353+  8B58 E6 02        	and 2
354+  8B5A 20 07        	jr nz,segmit
355+  8B5C 7D           	ld a,l
356+  8B5D FE 7F        	cp $7f
357+  8B5F 38 2D        	jr c,primit
358+  8B61 28 2B        	jr z,primit
359+  8B63 CD C0 8B     segmit call column
360+  8B66 38 13        	jr c,tercuad
361+  8B68 3E 04        cuarcuad ld a,4
362+  8B6A 32 62 85     	ld (Cuad_objeto),a
363+  8B6D 21 20 48     	ld hl,$4820
364+  8B70 22 85 85     	ld (Limite_horizontal),hl
365+  8B73 21 87 85     	ld hl,Limite_vertical
366+  8B76 36 0D        	ld (hl),$0d
367+  8B78 08           	ex af,af
368+  8B79 18 3C        	jr 1F
369+  8B7B              tercuad
370+  8B7B 3E 03        	ld a,3
371+  8B7D 32 62 85     	ld (Cuad_objeto),a
372+  8B80 21 20 48     	ld hl,$4820
373+  8B83 22 85 85     	ld (Limite_horizontal),hl
374+  8B86 21 87 85     	ld hl,Limite_vertical
375+  8B89 36 12        	ld (hl),$12
376+  8B8B 08           	ex af,af
377+  8B8C 18 29        	jr 1F
378+  8B8E CD C0 8B     primit call column
379+  8B91 38 13        	jr c, primcuad
380+  8B93              segcuad
381+  8B93 3E 02        	ld a,2
382+  8B95 32 62 85     	ld (Cuad_objeto),a
383+  8B98 21 C0 4F     	ld hl,$4fc0
384+  8B9B 22 85 85     	ld (Limite_horizontal),hl
385+  8B9E 21 87 85     	ld hl,Limite_vertical
386+  8BA1 36 0D        	ld (hl),$0d
387+  8BA3 08           	ex af,af
388+  8BA4 18 11        	jr 1F
389+  8BA6              primcuad
390+  8BA6 3E 01        	ld a,1
391+  8BA8 32 62 85     	ld (Cuad_objeto),a
392+  8BAB 21 C0 4F     	ld hl,$4fc0
393+  8BAE 22 85 85     	ld (Limite_horizontal),hl
394+  8BB1 21 87 85     	ld hl,Limite_vertical
395+  8BB4 36 12        	ld (hl),$12
396+  8BB6 08           	ex af,af
397+  8BB7 CD 8A 92     1 call Genera_coordenadas
398+  8BBA 21 7B 85     	ld hl,Ctrl_0
399+  8BBD CB EE        	set 5,(hl)
400+  8BBF C9           	ret
401+  8BC0
402+  8BC0              ; ------------------------------------------------------------------------------------------------------------------
403+  8BC0
404+  8BC0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8BC0              ;
406+  8BC0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8BC0
408+  8BC0 7D           column ld a,l
409+  8BC1 E6 1F        	and $1f
410+  8BC3 FE 10         	cp $10
411+  8BC5 C9            	ret
412+  8BC6
413+  8BC6              ; --------------------------------------------------------------------------------------------------------------------
414+  8BC6              ;
415+  8BC6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8BC6              ;
417+  8BC6              ; 14/12/22
418+  8BC6              ;
419+  8BC6              ;	Modifica: A y BC.
420+  8BC6
421+  8BC6 3A 62 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8BC9 E6 01        	and 1
423+  8BCB 28 17        	jr z,1F
424+  8BCD
425+  8BCD              ; Nos encontramos en la parte izquierda de la pantalla
426+  8BCD
427+  8BCD 3A 54 85     	ld a,(Coordenada_X)
428+  8BD0 47           	ld b,a
429+  8BD1 04           	inc b											; (Coordenada_X)+1 en B.
430+  8BD2 79           	ld a,c
431+  8BD3 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8BD4 38 08        	jr c,2F
433+  8BD6 47           	ld b,a
434+  8BD7 79           	ld a,c
435+  8BD8 90           	sub b
436+  8BD9 32 84 85     	ld (Columnas),a
437+  8BDC 18 1B        	jr 4F
438+  8BDE 79           2 ld a,c
439+  8BDF 32 84 85     	ld (Columnas),a
440+  8BE2 18 15        	jr 4F
441+  8BE4
442+  8BE4              ; Nos encontramos en la parte derecha de la pantalla.
443+  8BE4
444+  8BE4 3A 54 85     1 ld a,(Coordenada_X)
445+  8BE7 81           	add c
446+  8BE8 3D           	dec a
447+  8BE9 D6 1F        	sub $1f
448+  8BEB 38 08        	jr c,3F
449+  8BED 47           	ld b,a
450+  8BEE 79           	ld a,c
451+  8BEF 90           	sub b
452+  8BF0 32 84 85     	ld (Columnas),a
453+  8BF3 18 04        	jr 4F
454+  8BF5 79           3 ld a,c
455+  8BF6 32 84 85     	ld (Columnas),a
456+  8BF9 D9           4 exx
457+  8BFA 4F           	ld c,a
458+  8BFB D9           	exx
459+  8BFC C9            ret
460+  8BFD
461+  8BFD              ; --------------------------------------------------------------------------------------------------------------------
462+  8BFD              ;
463+  8BFD              ; 7/1/23
464+  8BFD              ;
465+  8BFD              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8BFD              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8BFD              ;
468+  8BFD              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8BFD              ;	DESTRUYE: HL,B Y A.
470+  8BFD
471+  8BFD 3A 62 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8C00 FE 02        	cp 2
473+  8C02 38 18        	jr c,1F
474+  8C04 28 16        	jr z,1F
475+  8C06 E6 01        	and 1
476+  8C08 28 0D        	jr z,3F
477+  8C0A
478+  8C0A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8C0A
480+  8C0A CD 46 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8C0D
482+  8C0D 7D           9 ld a,l
483+  8C0E E6 1F        	and $1f
484+  8C10 28 2A        	jr z,7F
485+  8C12 2B           	dec hl
486+  8C13 10 F8        	djnz 9B
487+  8C15 18 25        	jr 7F
488+  8C17
489+  8C17              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8C17
491+  8C17 2A 50 85     3 ld hl,(Posicion_actual)
492+  8C1A 18 20        	jr 7F
493+  8C1C
494+  8C1C 28 14        1 jr z,2F
495+  8C1E
496+  8C1E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8C1E
498+  8C1E CD 46 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8C21 7D           4 ld a,l
500+  8C22 E6 1F        	and $1f
501+  8C24 28 03        	jr z,6F
502+  8C26 2B           	dec hl
503+  8C27 10 F8        	djnz 4B
504+  8C29 06 0F        6 ld b,15
505+  8C2B CD A7 8C     5 call PreviousScan
506+  8C2E 10 FB        	djnz 5B
507+  8C30 18 0A        	jr 7F
508+  8C32
509+  8C32              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8C32
511+  8C32 CD 46 8C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8C35 06 0F        	ld b,15
513+  8C37 CD A7 8C     8 call PreviousScan
514+  8C3A 10 FB        	djnz 8B
515+  8C3C
516+  8C3C E5           7 push hl
517+  8C3D DD E1        	pop ix
518+  8C3F
519+  8C3F 2A 52 85     	ld hl,(Puntero_objeto)
520+  8C42 E5           	push hl
521+  8C43 FD E1        	pop iy
522+  8C45
523+  8C45 C9           	ret
524+  8C46
525+  8C46              ; --------------------------------------------------------------------------------------------------------------------
526+  8C46              ;
527+  8C46              ;	2/1/23
528+  8C46              ;
529+  8C46              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8C46              ;
531+  8C46              ;	Tras esta rutina tenemos:
532+  8C46              ;
533+  8C46              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8C46              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8C46              ;
536+  8C46              ;	DESTRUYE!!!!! HL,B y A.
537+  8C46
538+  8C46 2A 50 85     Operandos ld hl,(Posicion_actual)
539+  8C49 3A 84 85     	ld a,(Columnas)
540+  8C4C 3D           	dec a
541+  8C4D 20 01        	jr nz,1F
542+  8C4F 3C           	inc a
543+  8C50 47           1 ld b,a
544+  8C51 C9           	ret
545+  8C52
546+  8C52              ; --------------------------------------------------------------------------------------------------------------------
547+  8C52              ;
548+  8C52              ;	3/1/23
549+  8C52              ;
550+  8C52              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8C52              ;
552+  8C52              ;	Destruye: A,B,HL y DE.
553+  8C52
554+  8C52              Define_rutina_de_impresion
555+  8C52
556+  8C52 3A 4F 85     	ld a,(Columns)
557+  8C55 47           	ld b,a
558+  8C56 3A 84 85     	ld a,(Columnas)
559+  8C59 B8           	cp b
560+  8C5A 20 0D        	jr nz,2f
561+  8C5C
562+  8C5C              ;	La entidad se imprime entera.
563+  8C5C
564+  8C5C 21 28 8D     	ld hl, Indice_entidades_completas
565+  8C5F E6 01        	and 1
566+  8C61 28 02        	jr z,1F
567+  8C63
568+  8C63 23           	inc hl
569+  8C64 23           	inc hl
570+  8C65
571+  8C65 CD 3E 87     1 call Extrae_address
572+  8C68 C9           	ret		;	ret
573+  8C69
574+  8C69              ;	La entidad no se imprime entera en pantalla.
575+  8C69
576+  8C69 3A 62 85     2 ld a,(Cuad_objeto)
577+  8C6C E6 01        	and 1
578+  8C6E 28 17        	jr z,3F
579+  8C70
580+  8C70              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8C70
582+  8C70 21 2C 8D     	ld hl, Indice_entidades_incompletas_izquierda
583+  8C73 3A 4F 85     4 ld a,(Columns)
584+  8C76 E6 01        	and 1
585+  8C78 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8C7A
587+  8C7A 23           	inc hl
588+  8C7B 23           	inc hl
589+  8C7C
590+  8C7C 3A 84 85     	ld a,(Columnas)
591+  8C7F E6 01        	and 1
592+  8C81 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8C83
594+  8C83 23           	inc hl
595+  8C84 23           	inc hl
596+  8C85
597+  8C85 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8C87
599+  8C87 21 32 8D     3 ld hl, Indice_entidades_incompletas_derecha
600+  8C8A 18 E7        	jr 4B
601+  8C8C
602+  8C8C              ; --------------------------------------------------------------------------------------------------------------------
603+  8C8C              ;
604+  8C8C              ;	Prepara_draw
605+  8C8C              ;
606+  8C8C              ;	Es una rutina de carga.
607+  8C8C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8C8C              ;
609+  8C8C              ;	FUNCIONAMIENTO:
610+  8C8C              ;
611+  8C8C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8C8C              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8C8C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8C8C              ;
615+  8C8C              ;	DESTRUYE:
616+  8C8C              ;
617+  8C8C              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8C8C
619+  8C8C 21 4E 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8C8F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8C90 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8C91 4E           	ld c,(hl)
623+  8C92 2A 50 85     	ld hl,(Posicion_actual)
624+  8C95 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8C97 C9           	ret
626+  8C98
627+  8C98              ;----------------------------------------------------------------------------------------------------------------
628+  8C98              ;
629+  8C98              ;	5/08/22
630+  8C98              ;
631+  8C98              ;   NextScan.
632+  8C98              ;
633+  8C98              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8C98              ;
635+  8C98              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8C98              ;
637+  8C98              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8C98              ;
639+  8C98              ;       DESTRUIDOS: AF y HL !!!
640+  8C98              ;
641+  8C98              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8C98              ;
643+  8C98
644+  8C98 24           NextScan inc h          ; Incrementamos el scanline.
645+  8C99 7C               ld a,h
646+  8C9A E6 07            and 7
647+  8C9C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8C9D
649+  8C9D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8C9E C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8CA0 6F               ld l,a
652+  8CA1 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8CA2
654+  8CA2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8CA3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8CA5 67               ld h,a
657+  8CA6 C9               ret
658+  8CA7
659+  8CA7              ;----------------------------------------------------------------------------------------------------------------
660+  8CA7              ;
661+  8CA7              ;	5/08/22
662+  8CA7              ;
663+  8CA7              ;   PreviousScan.
664+  8CA7              ;
665+  8CA7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8CA7              ;
667+  8CA7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8CA7              ;
669+  8CA7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8CA7              ;
671+  8CA7              ;       DESTRUIDOS: AF y HL !!!
672+  8CA7              ;
673+  8CA7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8CA7              ;
675+  8CA7
676+  8CA7 7C           PreviousScan ld a,h
677+  8CA8 25               dec h               ; Dec H.
678+  8CA9 E6 07            and 7
679+  8CAB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8CAC
681+  8CAC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8CAD D6 20            sub $20             ; Vamos a comprobarlo...
683+  8CAF 6F               ld l,a
684+  8CB0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8CB1
686+  8CB1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8CB2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8CB4 67               ld h,a
689+  8CB5 C9               ret
690+  8CB6
691+  8CB6              ; -----------------------------------------------------------------------------------
692+  8CB6              ;
693+  8CB6              ;	28/2/23
694+  8CB6              ;
695+  8CB6              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8CB6              ;	Extrae fotos de Album_de_fotos.
697+  8CB6
698+  8CB6 3A 90 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8CB9 A7           	and a
700+  8CBA C8           	ret z
701+  8CBB ED 73 91 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8CBF 31 00 70     	ld sp,Album_de_fotos
703+  8CC2
704+  8CC2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8CC4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8CC5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8CC6
708+  8CC6 ED 73 93 85  	ld (Stack_2),sp
709+  8CCA ED 7B 91 85  	ld sp,(Stack)
710+  8CCE
711+  8CCE              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8CCE
713+  8CCE 3E CD        	ld a,$cd
714+  8CD0 32 D8 8C     	ld (Imprime),a
715+  8CD3 EB           	ex de,hl
716+  8CD4 22 D9 8C     	ld (Imprime+1),hl
717+  8CD7 EB           	ex de,hl
718+  8CD8
719+  8CD8              ; Ejecuta la llamada:	CALL $xx,xx
720+  8CD8
721+  8CD8 00 00 00     Imprime db 0,0,0
722+  8CDB
723+  8CDB 3A 90 85     	ld a,(Numero_de_malotes)
724+  8CDE 3D           	dec a
725+  8CDF 28 09        	jr z,1F
726+  8CE1 32 90 85      	ld (Numero_de_malotes),a
727+  8CE4
728+  8CE4 ED 7B 93 85   	ld sp,(Stack_2)
729+  8CE8 18 D8        	jr 2B
730+  8CEA
731+  8CEA AF           1 xor a
732+  8CEB 32 93 85     	ld (Stack_2),a
733+  8CEE C9           	ret
734+  8CEF
735+  8CEF              ; -----------------------------------------------------------------------------------
736+  8CEF              ;
737+  8CEF              ;	28/2/23
738+  8CEF              ;
739+  8CEF              ;	Pinta los disparos generados.
740+  8CEF
741+  8CEF              Extrae_foto_disparos
742+  8CEF
743+  8CEF 3A 9D 85     	ld a,(Numero_de_disparotes)
744+  8CF2 A7           	and a
745+  8CF3 C8           	ret z
746+  8CF4 ED 73 91 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8CF8 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8CFB
749+  8CFB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8CFD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8CFE D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8CFF
753+  8CFF ED 73 93 85  	ld (Stack_2),sp
754+  8D03 ED 7B 91 85  	ld sp,(Stack)
755+  8D07
756+  8D07              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8D07
758+  8D07 3E CD        	ld a,$cd
759+  8D09 32 11 8D     	ld (Imprime2),a
760+  8D0C EB           	ex de,hl
761+  8D0D 22 12 8D     	ld (Imprime2+1),hl
762+  8D10 EB           	ex de,hl
763+  8D11
764+  8D11              ; Ejecuta la llamada:	CALL $xx,xx
765+  8D11
766+  8D11 00 00 00     Imprime2 db 0,0,0
767+  8D14
768+  8D14 3A 9D 85     	ld a,(Numero_de_disparotes)
769+  8D17 3D           	dec a
770+  8D18 28 09        	jr z,1F
771+  8D1A 32 9D 85      	ld (Numero_de_disparotes),a
772+  8D1D
773+  8D1D ED 7B 93 85  	ld sp,(Stack_2)
774+  8D21 18 D8        	jr 2B
775+  8D23
776+  8D23 AF           1 xor a
777+  8D24 32 93 85     	ld (Stack_2),a
778+  8D27 C9           	ret
779+  8D28
# file closed: Draw_XOR.asm
835   8D28              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8D28              ;   índices de Rutinas de impresión.
  2+  8D28
  3+  8D28 38 8D        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8D2A 65 8D            defw Pinta_Amadeus_3x2
  5+  8D2C
  6+  8D2C BB 8D        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8D2E 5B 8E            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8D30 0F 8E            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8D32
 10+  8D32 E5 8D        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8D34 E9 8E            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8D36 9D 8E            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8D38
 14+  8D38
 15+  8D38              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8D38              ;
 17+  8D38              ;   12/12/22
 18+  8D38              ;
 19+  8D38              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8D38              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8D38              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8D38              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8D38              ;
 24+  8D38              ;   Modifica: DE y HL.
 25+  8D38
 26+  8D38 ED 73 91 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8D3C FD F9        	ld sp,iy
 28+  8D3E 06 10            ld b,16
 29+  8D40 D1           1 pop de
 30+  8D41 7B               ld a,e
 31+  8D42 AE               xor (hl)
 32+  8D43 77           	ld (hl),a
 33+  8D44 23           	inc hl
 34+  8D45 7A               ld a,d
 35+  8D46 AE               xor (hl)
 36+  8D47 77           	ld (hl),a
 37+  8D48 2B           	dec hl
 38+  8D49 24           	inc h
 39+  8D4A 7C               ld a,h
 40+  8D4B E6 07            and 7
 41+  8D4D 20 0A            jr nz,2F
 42+  8D4F 7D               ld a,l
 43+  8D50 C6 20            add a,$20
 44+  8D52 6F               ld l,a
 45+  8D53 38 04            jr c,2F
 46+  8D55 7C               ld a,h
 47+  8D56 D6 08            sub 8
 48+  8D58 67               ld h,a
 49+  8D59 7C           2 ld a,h
 50+  8D5A FE 58            cp $58
 51+  8D5C 28 02            jr z,3F
 52+  8D5E 10 E0            djnz 1B
 53+  8D60 ED 7B 91 85  3 ld sp,(Stack)
 54+  8D64 C9           	ret
 55+  8D65
 56+  8D65 ED 73 91 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8D69 FD F9        	ld sp,iy
 58+  8D6B 06 08            ld b,8
 59+  8D6D D1           1 pop de
 60+  8D6E 7B               ld a,e
 61+  8D6F AE               xor (hl)
 62+  8D70 77           	ld (hl),a
 63+  8D71 23           	inc hl
 64+  8D72 7A               ld a,d
 65+  8D73 AE               xor (hl)
 66+  8D74 77           	ld (hl),a
 67+  8D75 23           	inc hl
 68+  8D76 D1           	pop de
 69+  8D77 7B               ld a,e
 70+  8D78 AE               xor (hl)
 71+  8D79 77           	ld (hl),a
 72+  8D7A 2B           	dec hl
 73+  8D7B 2B           	dec hl
 74+  8D7C 24           	inc h
 75+  8D7D 7C               ld a,h
 76+  8D7E E6 07            and 7
 77+  8D80 20 0A            jr nz,2F
 78+  8D82 7D               ld a,l
 79+  8D83 C6 20            add a,$20
 80+  8D85 6F               ld l,a
 81+  8D86 38 04            jr c,2F
 82+  8D88 7C               ld a,h
 83+  8D89 D6 08            sub 8
 84+  8D8B 67               ld h,a
 85+  8D8C 7C           2 ld a,h
 86+  8D8D FE 58            cp $58
 87+  8D8F 28 25            jr z,4F
 88+  8D91 7A               ld a,d
 89+  8D92 AE               xor (hl)
 90+  8D93 77               ld (hl),a
 91+  8D94 D1           	pop de
 92+  8D95 23           	inc hl
 93+  8D96 7B               ld a,e
 94+  8D97 AE               xor (hl)
 95+  8D98 77           	ld (hl),a
 96+  8D99 23           	inc hl
 97+  8D9A 7A               ld a,d
 98+  8D9B AE               xor (hl)
 99+  8D9C 77           	ld (hl),a
100+  8D9D 2B           	dec hl
101+  8D9E 2B           	dec hl
102+  8D9F 24           	inc h
103+  8DA0 7C               ld a,h
104+  8DA1 E6 07            and 7
105+  8DA3 20 0A            jr nz,3F
106+  8DA5 7D               ld a,l
107+  8DA6 C6 20            add a,$20
108+  8DA8 6F               ld l,a
109+  8DA9 38 04            jr c,3F
110+  8DAB 7C               ld a,h
111+  8DAC D6 08            sub 8
112+  8DAE 67               ld h,a
113+  8DAF 7C           3 ld a,h
114+  8DB0 FE 58            cp $58
115+  8DB2 28 02            jr z,4F
116+  8DB4 10 B7            djnz 1B
117+  8DB6 ED 7B 91 85  4 ld sp,(Stack)
118+  8DBA C9           	ret
119+  8DBB
120+  8DBB              ; ---------------------------------------------------
121+  8DBB
122+  8DBB ED 73 91 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8DBF FD F9        	ld sp,iy
124+  8DC1
125+  8DC1              ; >>>
126+  8DC1
127+  8DC1 06 10            ld b,16
128+  8DC3 D1           1 pop de
129+  8DC4 7A           	ld a,d
130+  8DC5 AE           	xor (hl)
131+  8DC6 77           	ld (hl),a
132+  8DC7 24           	inc h
133+  8DC8 7C               ld a,h
134+  8DC9 E6 07            and 7
135+  8DCB 20 0C            jr nz,2F
136+  8DCD 7D               ld a,l
137+  8DCE C6 20            add a,$20
138+  8DD0 6F               ld l,a
139+  8DD1 38 06            jr c,2F
140+  8DD3 7C               ld a,h
141+  8DD4 D6 08            sub 8
142+  8DD6 67               ld h,a
143+  8DD7 18 00            jr 2F
144+  8DD9 7C           2 ld a,h
145+  8DDA FE 58            cp $58
146+  8DDC 28 02            jr z,3F
147+  8DDE 10 E3            djnz 1B
148+  8DE0 ED 7B 91 85  3 ld sp,(Stack)
149+  8DE4 C9           	ret
150+  8DE5
151+  8DE5 ED 73 91 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8DE9 FD F9        	ld sp,iy
153+  8DEB
154+  8DEB              ; >>>
155+  8DEB
156+  8DEB 06 10            ld b,16
157+  8DED D1           1 pop de
158+  8DEE 7B           	ld a,e
159+  8DEF AE           	xor (hl)
160+  8DF0 77           	ld (hl),a
161+  8DF1 24           	inc h
162+  8DF2 7C               ld a,h
163+  8DF3 E6 07            and 7
164+  8DF5 20 0C            jr nz,2F
165+  8DF7 7D               ld a,l
166+  8DF8 C6 20            add a,$20
167+  8DFA 6F               ld l,a
168+  8DFB 38 06            jr c,2F
169+  8DFD 7C               ld a,h
170+  8DFE D6 08            sub 8
171+  8E00 67               ld h,a
172+  8E01 18 00            jr 2F
173+  8E03 7C           2 ld a,h
174+  8E04 FE 58            cp $58
175+  8E06 28 02            jr z,3F
176+  8E08 10 E3            djnz 1B
177+  8E0A ED 7B 91 85  3 ld sp,(Stack)
178+  8E0E C9           	ret
179+  8E0F
180+  8E0F              ; ---------------------------------------------------
181+  8E0F
182+  8E0F ED 73 91 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8E13 FD F9        	ld sp,iy
184+  8E15 06 08            ld b,8
185+  8E17 D1           1 pop de
186+  8E18 7A           	ld a,d
187+  8E19 AE           	xor (hl)
188+  8E1A 77           	ld (hl),a
189+  8E1B 23           	inc hl
190+  8E1C D1           	pop de
191+  8E1D 7B           	ld a,e
192+  8E1E AE           	xor (hl)
193+  8E1F 77           	ld (hl),a
194+  8E20 2B           	dec hl
195+  8E21 24            	inc h
196+  8E22 7C               ld a,h
197+  8E23 E6 07            and 7
198+  8E25 20 0A            jr nz,2F
199+  8E27 7D               ld a,l
200+  8E28 C6 20            add a,$20
201+  8E2A 6F               ld l,a
202+  8E2B 38 04            jr c,2F
203+  8E2D 7C               ld a,h
204+  8E2E D6 08            sub 8
205+  8E30 67               ld h,a
206+  8E31 7C           2 ld a,h
207+  8E32 FE 58            cp $58
208+  8E34 28 20            jr z,4F
209+  8E36 D1               pop de
210+  8E37 7B           	ld a,e
211+  8E38 AE           	xor (hl)
212+  8E39 77           	ld (hl),a
213+  8E3A 23           	inc hl
214+  8E3B 7A           	ld a,d
215+  8E3C AE           	xor (hl)
216+  8E3D 77           	ld (hl),a
217+  8E3E 2B           	dec hl
218+  8E3F 24           	inc h
219+  8E40 7C               ld a,h
220+  8E41 E6 07            and 7
221+  8E43 20 0A            jr nz,3F
222+  8E45 7D               ld a,l
223+  8E46 C6 20            add a,$20
224+  8E48 6F               ld l,a
225+  8E49 38 04            jr c,3F
226+  8E4B 7C               ld a,h
227+  8E4C D6 08            sub 8
228+  8E4E 67               ld h,a
229+  8E4F 7C           3 ld a,h
230+  8E50 FE 58            cp $58
231+  8E52 28 02            jr z,4F
232+  8E54 10 C1            djnz 1B
233+  8E56 ED 7B 91 85  4 ld sp,(Stack)
234+  8E5A C9           	ret
235+  8E5B
236+  8E5B ED 73 91 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8E5F FD F9        	ld sp,iy
238+  8E61 06 08            ld b,8
239+  8E63 D1           1 pop de
240+  8E64 D1           	pop de
241+  8E65 7B           	ld a,e
242+  8E66 AE           	xor (hl)
243+  8E67 77           	ld (hl),a
244+  8E68 24            	inc h
245+  8E69 7C               ld a,h
246+  8E6A E6 07            and 7
247+  8E6C 20 0A            jr nz,2F
248+  8E6E 7D               ld a,l
249+  8E6F C6 20            add a,$20
250+  8E71 6F               ld l,a
251+  8E72 38 04            jr c,2F
252+  8E74 7C               ld a,h
253+  8E75 D6 08            sub 8
254+  8E77 67               ld h,a
255+  8E78 7C           2 ld a,h
256+  8E79 FE 58            cp $58
257+  8E7B 28 1B            jr z,4F
258+  8E7D D1               pop de
259+  8E7E 7A           	ld a,d
260+  8E7F AE           	xor (hl)
261+  8E80 77           	ld (hl),a
262+  8E81 24           	inc h
263+  8E82 7C               ld a,h
264+  8E83 E6 07            and 7
265+  8E85 20 0A            jr nz,3F
266+  8E87 7D               ld a,l
267+  8E88 C6 20            add a,$20
268+  8E8A 6F               ld l,a
269+  8E8B 38 04            jr c,3F
270+  8E8D 7C               ld a,h
271+  8E8E D6 08            sub 8
272+  8E90 67               ld h,a
273+  8E91 7C           3 ld a,h
274+  8E92 FE 58            cp $58
275+  8E94 28 02            jr z,4F
276+  8E96 10 CB            djnz 1B
277+  8E98 ED 7B 91 85  4 ld sp,(Stack)
278+  8E9C C9           	ret
279+  8E9D
280+  8E9D ED 73 91 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8EA1 FD F9        	ld sp,iy
282+  8EA3 06 08            ld b,8
283+  8EA5 D1           1 pop de
284+  8EA6 7B           	ld a,e
285+  8EA7 AE           	xor (hl)
286+  8EA8 77           	ld (hl),a
287+  8EA9 23           	inc hl
288+  8EAA 7A           	ld a,d
289+  8EAB AE           	xor (hl)
290+  8EAC 77           	ld (hl),a
291+  8EAD 2B           	dec hl
292+  8EAE 24             	inc h
293+  8EAF 7C               ld a,h
294+  8EB0 E6 07            and 7
295+  8EB2 20 0A            jr nz,2F
296+  8EB4 7D               ld a,l
297+  8EB5 C6 20            add a,$20
298+  8EB7 6F               ld l,a
299+  8EB8 38 04            jr c,2F
300+  8EBA 7C               ld a,h
301+  8EBB D6 08            sub 8
302+  8EBD 67               ld h,a
303+  8EBE 7C           2 ld a,h
304+  8EBF FE 58            cp $58
305+  8EC1 28 21            jr z,4F
306+  8EC3 D1               pop de
307+  8EC4 7A           	ld a,d
308+  8EC5 AE           	xor (hl)
309+  8EC6 77           	ld (hl),a
310+  8EC7 23           	inc hl
311+  8EC8 D1               pop de
312+  8EC9 7B           	ld a,e
313+  8ECA AE           	xor (hl)
314+  8ECB 77           	ld (hl),a
315+  8ECC 2B           	dec hl
316+  8ECD 24           	inc h
317+  8ECE 7C               ld a,h
318+  8ECF E6 07            and 7
319+  8ED1 20 0A            jr nz,3F
320+  8ED3 7D               ld a,l
321+  8ED4 C6 20            add a,$20
322+  8ED6 6F               ld l,a
323+  8ED7 38 04            jr c,3F
324+  8ED9 7C               ld a,h
325+  8EDA D6 08            sub 8
326+  8EDC 67               ld h,a
327+  8EDD 7C           3 ld a,h
328+  8EDE FE 58            cp $58
329+  8EE0 28 02            jr z,4F
330+  8EE2 10 C1            djnz 1B
331+  8EE4 ED 7B 91 85  4 ld sp,(Stack)
332+  8EE8 C9           	ret
333+  8EE9
334+  8EE9 ED 73 91 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  8EED FD F9        	ld sp,iy
336+  8EEF 06 08            ld b,8
337+  8EF1 D1           1 pop de
338+  8EF2 7B           	ld a,e
339+  8EF3 AE           	xor (hl)
340+  8EF4 77           	ld (hl),a
341+  8EF5 24            	inc h
342+  8EF6 7C               ld a,h
343+  8EF7 E6 07            and 7
344+  8EF9 20 0A            jr nz,2F
345+  8EFB 7D               ld a,l
346+  8EFC C6 20            add a,$20
347+  8EFE 6F               ld l,a
348+  8EFF 38 04            jr c,2F
349+  8F01 7C               ld a,h
350+  8F02 D6 08            sub 8
351+  8F04 67               ld h,a
352+  8F05 7C           2 ld a,h
353+  8F06 FE 58            cp $58
354+  8F08 28 1C            jr z,4F
355+  8F0A D1               pop de
356+  8F0B 7A           	ld a,d
357+  8F0C AE           	xor (hl)
358+  8F0D 77           	ld (hl),a
359+  8F0E 24           	inc h
360+  8F0F 7C               ld a,h
361+  8F10 E6 07            and 7
362+  8F12 20 0A            jr nz,3F
363+  8F14 7D               ld a,l
364+  8F15 C6 20            add a,$20
365+  8F17 6F               ld l,a
366+  8F18 38 04            jr c,3F
367+  8F1A 7C               ld a,h
368+  8F1B D6 08            sub 8
369+  8F1D 67               ld h,a
370+  8F1E 7C           3 ld a,h
371+  8F1F FE 58            cp $58
372+  8F21 28 03            jr z,4F
373+  8F23 D1               pop de
374+  8F24 10 CB            djnz 1B
375+  8F26 ED 7B 91 85  4 ld sp,(Stack)
376+  8F2A C9           	ret
377+  8F2B
378+  8F2B              ; ---------------------------------------------------
379+  8F2B              ;
380+  8F2B              ;   27/02/23
381+  8F2B              ;
382+  8F2B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  8F2B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  8F2B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  8F2B
386+  8F2B ED 73 91 85  Pinta_Disparo ld (Stack),sp
387+  8F2F FD F9            ld sp,iy
388+  8F31 06 02            ld b,2
389+  8F33 D1           1 pop de
390+  8F34 7B               ld a,e
391+  8F35 AE               xor (hl)
392+  8F36 77               ld (hl),a
393+  8F37 23               inc hl
394+  8F38 7A               ld a,d
395+  8F39 AE               xor (hl)
396+  8F3A 77               ld (hl),a
397+  8F3B 2B               dec hl
398+  8F3C 24               inc h
399+  8F3D 7C               ld a,h
400+  8F3E E6 07            and 7
401+  8F40 20 0A            jr nz,2F
402+  8F42 7D               ld a,l
403+  8F43 C6 20            add a,$20
404+  8F45 6F               ld l,a
405+  8F46 38 04            jr c,2F
406+  8F48 7C               ld a,h
407+  8F49 D6 08            sub 8
408+  8F4B 67               ld h,a
409+  8F4C 7C           2 ld a,h
410+  8F4D FE 58            cp $58
411+  8F4F 28 02            jr z,3F
412+  8F51 10 E0            djnz 1B
413+  8F53 ED 7B 91 85  3 ld sp,(Stack)
414+  8F57 C9               ret
415+  8F58
# file closed: Rutinas_de_impresion_sprites.asm
836   8F58              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  8F58              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  8F58              ;
  3+  8F58              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  8F58              ;
  5+  8F58              ; *****************************************************************************************************************************************************************************************
  6+  8F58              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  8F58
  8+  8F58 7C           calcula_tercio ld a,h
  9+  8F59 E6 18        	and $18
 10+  8F5B CB 2F        	sra a
 11+  8F5D CB 2F        	sra a
 12+  8F5F CB 2F        	sra a
 13+  8F61 C9           	ret
 14+  8F62
# file closed: calcula_tercio.asm
837   8F62              	include "Cls.asm"
# file opened: Cls.asm
  1+  8F62              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  8F62              ;
  3+  8F62              ;
  4+  8F62              ;	CLS.
  5+  8F62              ;
  6+  8F62              ;	Limpia la pantalla y define sus atributos.
  7+  8F62              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  8F62              ;
  9+  8F62              ;	COLORES: 0 ..... NEGRO
 10+  8F62              ;    		 1 ..... AZUL
 11+  8F62              ; 			 2 ..... ROJO
 12+  8F62              ;			 3 ..... MAGENTA
 13+  8F62              ; 			 4 ..... VERDE
 14+  8F62              ; 			 5 ..... CIAN
 15+  8F62              ;			 6 ..... AMARILLO
 16+  8F62              ; 			 7 ..... BLANCO
 17+  8F62              ;
 18+  8F62              ;	INPUT: A contiene los atributos de pantalla.
 19+  8F62              ;
 20+  8F62              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  8F62
 22+  8F62
 23+  8F62 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  8F65 11 01 40     	LD DE,$4001
 25+  8F68 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  8F6B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  8F6D ED B0        	LDIR
 28+  8F6F 01 FF 02     	LD BC,767
 29+  8F72 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  8F73 ED B0        	LDIR
 31+  8F75 C9           	ret
 32+  8F76
# file closed: Cls.asm
838   8F76              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  8F76              ; ******************************************************************************************************************************************************************************************
  2+  8F76              ;
  3+  8F76              ;   22/01/23
  4+  8F76              ;
  5+  8F76              ;	Mov_down
  6+  8F76              ;
  7+  8F76              ; 	Mueve el Sprite X px hacia abajo.
  8+  8F76              ;
  9+  8F76              ;
 10+  8F76 21 7B 85     Mov_down ld hl,Ctrl_0
 11+  8F79 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  8F7B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  8F7B              ; 																	; _ en el caso de que no lo haya.
 14+  8F7B 3A 66 85     	ld a,(Vel_down)
 15+  8F7E 47           	ld b,a
 16+  8F7F 2A 50 85         ld hl,(Posicion_actual)
 17+  8F82 CD 58 8F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  8F85 E6 02        	and 2
 19+  8F87 28 0F        	jr z,1F
 20+  8F89
 21+  8F89              ; Nos encontramos en el último tercio de pantalla.
 22+  8F89              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  8F89
 24+  8F89 7C           	ld a,h
 25+  8F8A FE 57        	cp $57
 26+  8F8C 20 0A        	jr nz,1F
 27+  8F8E 7D           	ld a,l
 28+  8F8F C6 20        	add $20
 29+  8F91 30 05        	jr nc,1F
 30+  8F93
 31+  8F93              ; ------------------------------
 32+  8F93 CD 74 92     	call Reaparece_arriba
 33+  8F96              ;	call Reinicio
 34+  8F96              ; ------------------------------
 35+  8F96 18 08        	jr 3F
 36+  8F98 CD 98 8C     1 call NextScan
 37+  8F9B 22 50 85     	ld (Posicion_actual),hl
 38+  8F9E 10 E2            djnz 2B
 39+  8FA0 CD 8A 92     3 call Genera_coordenadas
 40+  8FA3 C9           	ret
 41+  8FA4
 42+  8FA4
 43+  8FA4              ; ******************************************************************************************************************************************************************************************
 44+  8FA4              ;
 45+  8FA4              ;   22/01/23
 46+  8FA4              ;
 47+  8FA4              ;	Mov_up
 48+  8FA4              ;
 49+  8FA4              ; 	Mueve el Sprite hacia arriba.
 50+  8FA4              ;
 51+  8FA4              ;
 52+  8FA4 21 7B 85     Mov_up ld hl,Ctrl_0
 53+  8FA7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  8FA9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  8FA9              ; 																		; _ en el caso de que no lo haya.
 56+  8FA9 3A 65 85     	ld a,(Vel_up)
 57+  8FAC 47           	ld b,a
 58+  8FAD 2A 50 85     	ld hl,(Posicion_actual)
 59+  8FB0 CD 58 8F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  8FB3 A7           	and a
 61+  8FB4 20 10        	jr nz,1F
 62+  8FB6
 63+  8FB6              ; Nos encontramos en el 1er tercio de pantalla.
 64+  8FB6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  8FB6
 66+  8FB6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  8FB7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  8FB9 20 0B            jr nz,1F
 69+  8FBB 7D               ld a,l
 70+  8FBC D6 20            sub $20
 71+  8FBE 30 06            jr nc,1F
 72+  8FC0 25               dec h
 73+  8FC1
 74+  8FC1              ; -----------------------------
 75+  8FC1 CD 64 92         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  8FC4              ;	call Reinicio
 77+  8FC4              ; -----------------------------
 78+  8FC4
 79+  8FC4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  8FC6 CD A7 8C     1 call PreviousScan
 81+  8FC9 22 50 85     	ld (Posicion_actual),hl
 82+  8FCC 10 E2            djnz 3B
 83+  8FCE CD 8A 92     2 call Genera_coordenadas
 84+  8FD1 C9           	ret
 85+  8FD2
 86+  8FD2              ; ******************************************************************************************************************************************************************************************
 87+  8FD2              ;
 88+  8FD2              ;	19/10/22
 89+  8FD2              ;
 90+  8FD2              ;	Mov_right.
 91+  8FD2              ;
 92+  8FD2              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  8FD2              ;
 94+  8FD2
 95+  8FD2 21 7B 85     Mov_right ld hl,Ctrl_0
 96+  8FD5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  8FD7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  8FD7              ; 																	; _ en el caso de que no lo haya.
 99+  8FD7 3A 7B 85     	ld a,(Ctrl_0)
100+  8FDA CB 77        	bit 6,a
101+  8FDC 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  8FDE
103+  8FDE CD 12 92     	call Stop_Amadeus_right
104+  8FE1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  8FE2 18 4D        	jr 8F
106+  8FE4
107+  8FE4 3A 54 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  8FE7 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  8FE9 20 46        	jr nz,8F
110+  8FEB
111+  8FEB 3A 56 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  8FEE A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  8FEF 28 40        	jr z,8F
114+  8FF1
115+  8FF1              ; ---------- ---------- ----------
116+  8FF1              ;
117+  8FF1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  8FF1
119+  8FF1 3A 64 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  8FF4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  8FF6 28 11        	jr z,1F
122+  8FF8 38 06        	jr c,6F
123+  8FFA FE 04        	cp 4
124+  8FFC 28 14        	jr z,7F
125+  8FFE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9000
127+  9000              ; ---------- ---------- ----------
128+  9000              ;
129+  9000              ; Perfiles de velocidad
130+  9000              ;
131+  9000
132+  9000 3A 56 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  9003 FE FE        	cp $fe
134+  9005 20 2A        	jr nz,8F
135+  9007 18 10        	jr 3F
136+  9009 3A 56 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  900C FE FD        	cp $fd
138+  900E 20 21        	jr nz,8F
139+  9010 18 07        	jr 3F
140+  9012 3A 56 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  9015 FE FB        	cp $fb
142+  9017 20 18        	jr nz,8F
143+  9019
144+  9019              ; ---------- ---------- ----------
145+  9019
146+  9019              3
147+  9019 CD 52 92     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  901C              ;	call Reinicio
149+  901C
150+  901C              ; ---------- ---------- ----------
151+  901C              ;
152+  901C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  901C
154+  901C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  901E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  901F CD 38 90     	call DESPLZ_DER
157+  9022 C1           	pop bc
158+  9023 10 F9        	djnz 5B
159+  9025 2A 50 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9028 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9029 22 50 85     	ld (Posicion_actual),hl
162+  902C CD 8A 92     	call Genera_coordenadas
163+  902F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9031
165+  9031              ; ---------- ---------- ----------
166+  9031
167+  9031 2A 50 85     8 ld hl,(Posicion_actual)
168+  9034 CD 38 90     	call DESPLZ_DER
169+  9037 C9           2 ret
170+  9038
171+  9038              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  9038              ;
173+  9038              ;	22/9/22
174+  9038              ;
175+  9038
176+  9038 CD 47 90     DESPLZ_DER call Desplaza_derecha
177+  903B CD 93 90         call modifica_parametros_1er_DESPLZ_2
178+  903E CD BC 90         call Ciclo_completo
179+  9041 21 7B 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  9044 CB FE        	set 7,(hl)
181+  9046 C9           	ret
182+  9047
183+  9047              ; ******************************************************************************************************************************************************************************************
184+  9047              ;	15/02/23
185+  9047              ;
186+  9047
187+  9047 3A 64 85     Desplaza_derecha ld a,(Vel_right)
188+  904A 47           	ld b,a
189+  904B 2A 5C 85     	ld hl,(Puntero_DESPLZ_der)
190+  904E 23           1 inc hl
191+  904F 23           	inc hl
192+  9050 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9052 22 5C 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9055 CD 3E 87     	call Extrae_address
195+  9058 22 52 85     	ld (Puntero_objeto),hl
196+  905B
197+  905B              ; Modifica (Puntero_DESPLZ_izq).
198+  905B
199+  905B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  905B              ; Cuántos movimientos hemos hecho ??
201+  905B              ; DE contiene (Puntero_DESPLZ_der).
202+  905B
203+  905B 2A 58 85     7 ld hl,(Indice_Sprite_der)
204+  905E EB           	ex de,hl
205+  905F A7           	and a
206+  9060 ED 52        	sbc hl,de
207+  9062 CB 3D        	srl l
208+  9064 3E 08        6 ld a,8
209+  9066 95           	sub l
210+  9067 30 1E        	jr nc,3F
211+  9069
212+  9069              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  9069              ; B="0".
214+  9069
215+  9069 04           4 inc b
216+  906A 3C           	inc a
217+  906B 20 FC        	jr nz,4B
218+  906D 78           	ld a,b
219+  906E 08           	ex af,af
220+  906F 2A 58 85     	ld hl,(Indice_Sprite_der)
221+  9072 23           5 inc hl
222+  9073 23           	inc hl
223+  9074 10 FC        	djnz 5B
224+  9076 22 5C 85     	ld (Puntero_DESPLZ_der),hl
225+  9079 CD 3E 87     	call Extrae_address
226+  907C 22 52 85     	ld (Puntero_objeto),hl
227+  907F
228+  907F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  907F              ; _(Posicion_actual).
230+  907F
231+  907F 21 50 85     	ld hl,Posicion_actual
232+  9082 34           	inc (hl)
233+  9083 08               ex af,af
234+  9084 6F           	ld l,a
235+  9085 18 DD        	jr 6B
236+  9087
237+  9087              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  9087
239+  9087 47           3 ld b,a
240+  9088 2A 5A 85     	ld hl,(Indice_Sprite_izq)
241+  908B 23           2 inc hl
242+  908C 23           	inc hl
243+  908D 10 FC        	djnz 2B
244+  908F 22 5E 85     	ld (Puntero_DESPLZ_izq),hl
245+  9092 C9           8 ret
246+  9093
247+  9093              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  9093              ;
249+  9093              ;	24/7/22
250+  9093              ;
251+  9093              ;	modifica_parametros_1er_DESPLZ_2
252+  9093              ;
253+  9093              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  9093              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  9093              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  9093
257+  9093 3A 56 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9096 A7           	and a
259+  9097 20 1F        	jr nz,1F
260+  9099 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  909B 32 56 85         ld (CTRL_DESPLZ),a
262+  909E
263+  909E 21 4F 85     	ld hl,Columns
264+  90A1 34           	inc (hl)
265+  90A2 3A 62 85     	ld a,(Cuad_objeto)
266+  90A5 E6 01        	and 1
267+  90A7 28 0F        	jr z,1F
268+  90A9 2A 50 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  90AC 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  90AD 22 50 85     	ld (Posicion_actual),hl
271+  90B0 CD 8A 92     	call Genera_coordenadas
272+  90B3 CD 1E 92     	call Inc_CTRL_DESPLZ
273+  90B6 18 03        	jr 2F
274+  90B8 CD 1E 92     1 call Inc_CTRL_DESPLZ
275+  90BB C9           2 ret
276+  90BC
277+  90BC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  90BC              ;
279+  90BC              ;	24/7/22
280+  90BC              ;
281+  90BC              ;	Ciclo_completo.
282+  90BC              ;
283+  90BC              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  90BC              ;
285+  90BC              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  90BC              ; 	Decrementamos (Columns).
287+  90BC              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  90BC              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  90BC
290+  90BC
291+  90BC 3A 56 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  90BF FE FF        	cp $ff
293+  90C1 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  90C3 E6 F0        	and $f0
295+  90C5 20 28        	jr nz,3F
296+  90C7
297+  90C7              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  90C7
299+  90C7 3A 56 85     	ld a,(CTRL_DESPLZ)
300+  90CA 47           	ld b,a
301+  90CB 3E F8        	ld a,$f8
302+  90CD 80           	add b
303+  90CE 32 56 85     	ld (CTRL_DESPLZ),a
304+  90D1 18 1C        	jr 3F
305+  90D3 21 4F 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  90D6 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  90D7 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  90D8 32 56 85     	ld (CTRL_DESPLZ),a
309+  90DB 3A 62 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  90DE E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  90E0 20 0A        	jr nz,2F
312+  90E2 2A 50 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  90E5 23           	inc hl
314+  90E6 22 50 85     	ld (Posicion_actual),hl
315+  90E9 CD 8A 92     	call Genera_coordenadas
316+  90EC
317+  90EC              ; Inicia el puntero de Sprite.
318+  90EC
319+  90EC CD 55 87     2 call Inicia_puntero_objeto_der
320+  90EF C9           3 ret
321+  90F0
322+  90F0              ; ******************************************************************************************************************************************************************************************
323+  90F0              ;
324+  90F0              ;	15/02/23
325+  90F0              ;
326+  90F0              ;	Mov_left.
327+  90F0              ;
328+  90F0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  90F0              ;
330+  90F0              Mov_left
331+  90F0
332+  90F0 21 7B 85     	ld hl,Ctrl_0
333+  90F3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  90F5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  90F5              ; 																	; _ en el caso de que no lo haya.
336+  90F5 3A 7B 85     	ld a,(Ctrl_0)
337+  90F8 CB 77        	bit 6,a
338+  90FA 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  90FC
340+  90FC CD 18 92     	call Stop_Amadeus_left
341+  90FF C8           	ret z
342+  9100 20 50        	jr nz,8F
343+  9102
344+  9102 3A 54 85     11 ld a,(Coordenada_X)
345+  9105 A7           	and a
346+  9106 20 4A        	jr nz,8F
347+  9108
348+  9108 3A 56 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  910B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  910C 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  910E
352+  910E              ; ---------- ---------- ----------
353+  910E
354+  910E 3A 63 85     	ld a,(Vel_left)
355+  9111 FE 02        	cp 2
356+  9113 28 0F        	jr z,1F
357+  9115 38 04        	jr c,6F
358+  9117 FE 04        	cp 4
359+  9119 28 12        	jr z,7F
360+  911B
361+  911B              ; ---------- ---------- ----------
362+  911B
363+  911B 3A 56 85     6 ld a,(CTRL_DESPLZ)
364+  911E FE F9        	cp $f9
365+  9120 20 30        	jr nz,8F
366+  9122 18 10        	jr 4F
367+  9124 3A 56 85     1 ld a,(CTRL_DESPLZ)
368+  9127 FE FA        	cp $fa
369+  9129 20 27        	jr nz,8F
370+  912B 18 07        	jr 4F
371+  912D 3A 56 85     7 ld a,(CTRL_DESPLZ)
372+  9130 FE FC        	cp $fc
373+  9132 20 1E        	jr nz,8F
374+  9134
375+  9134              ; ---------- ---------- ----------
376+  9134
377+  9134              4
378+  9134 CD 40 92     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9137              ;	call Reinicio
380+  9137
381+  9137              ; ---------- ---------- ----------
382+  9137
383+  9137 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  9139 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  913A
386+  913A 2A 5A 85     	ld hl,(Indice_Sprite_izq)
387+  913D 22 5E 85     	ld (Puntero_DESPLZ_izq),hl
388+  9140
389+  9140 CD 59 91     	call DESPLZ_IZQ
390+  9143 C1           	pop bc
391+  9144 10 F3        	djnz 5B
392+  9146 2A 50 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  9149 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  914A 22 50 85     	ld (Posicion_actual),hl
395+  914D CD 8A 92     	call Genera_coordenadas
396+  9150 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  9152
398+  9152              ; ---------- ---------- ----------
399+  9152              ; Movemos, no hay recolocación.
400+  9152
401+  9152 2A 50 85     8 ld hl,(Posicion_actual)
402+  9155 CD 59 91     	call DESPLZ_IZQ
403+  9158 C9           2 ret
404+  9159
405+  9159              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  9159              ;
407+  9159              ;	22/9/22
408+  9159
409+  9159              DESPLZ_IZQ
410+  9159
411+  9159 CD 68 91     	call Desplaza_izquierda
412+  915C CD B4 91         call modifica_parametros_1er_DESPLZ
413+  915F CD DC 91     	call Ciclo_completo_2
414+  9162 21 7B 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  9165 CB BE        	res 7,(hl)
416+  9167 C9           	ret
417+  9168
418+  9168              Desplaza_izquierda
419+  9168
420+  9168 3A 63 85     	ld a,(Vel_left)
421+  916B 47           	ld b,a
422+  916C 2A 5E 85     	ld hl,(Puntero_DESPLZ_izq)
423+  916F 23           1 inc hl
424+  9170 23           	inc hl
425+  9171 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  9173 22 5E 85     	ld (Puntero_DESPLZ_izq),hl
427+  9176 CD 3E 87     	call Extrae_address
428+  9179 22 52 85     	ld (Puntero_objeto),hl
429+  917C
430+  917C              ; Modifica (Puntero_DESPLZ_der).
431+  917C
432+  917C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  917C              ; Cuántos movimientos hemos hecho ??
434+  917C              ; DE contiene (Puntero_DESPLZ_izq).
435+  917C
436+  917C 2A 5A 85     7 ld hl,(Indice_Sprite_izq)
437+  917F EB           	ex de,hl
438+  9180 A7           	and a
439+  9181 ED 52        	sbc hl,de
440+  9183 CB 3D        	srl l
441+  9185 3E 08        6 ld a,8
442+  9187 95           	sub l
443+  9188 30 1E        	jr nc,3F
444+  918A
445+  918A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  918A              ; B="0".
447+  918A
448+  918A 04           4 inc b
449+  918B 3C           	inc a
450+  918C 20 FC        	jr nz,4B
451+  918E 78           	ld a,b
452+  918F 08           	ex af,af
453+  9190 2A 5A 85     	ld hl,(Indice_Sprite_izq)
454+  9193 23           5 inc hl
455+  9194 23           	inc hl
456+  9195 10 FC        	djnz 5B
457+  9197 22 5E 85     	ld (Puntero_DESPLZ_izq),hl
458+  919A CD 3E 87     	call Extrae_address
459+  919D 22 52 85     	ld (Puntero_objeto),hl
460+  91A0
461+  91A0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  91A0              ; _(Posicion_actual).
463+  91A0
464+  91A0 21 50 85     	ld hl,Posicion_actual
465+  91A3 35           	dec (hl)
466+  91A4 08           	ex af,af
467+  91A5 6F           	ld l,a
468+  91A6 18 DD        	jr 6B
469+  91A8
470+  91A8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  91A8
472+  91A8 47           3 ld b,a
473+  91A9 2A 58 85     	ld hl,(Indice_Sprite_der)
474+  91AC 23           2 inc hl
475+  91AD 23           	inc hl
476+  91AE 10 FC        	djnz 2B
477+  91B0 22 5C 85     	ld (Puntero_DESPLZ_der),hl
478+  91B3 C9           8 ret
479+  91B4
480+  91B4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  91B4              ;
482+  91B4              ;	modifica_parametros_1er_DESPLZ
483+  91B4              ;
484+  91B4              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  91B4              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  91B4              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  91B4
488+  91B4 3A 56 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  91B7 A7           	and a
490+  91B8 20 1E        	jr nz,1F
491+  91BA 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  91BB 32 56 85         ld (CTRL_DESPLZ),a
493+  91BE 21 4F 85     	ld hl,Columns
494+  91C1 34           	inc (hl)
495+  91C2 3A 62 85     	ld a,(Cuad_objeto)
496+  91C5 E6 01        	and 1
497+  91C7 20 0F        	jr nz,1F
498+  91C9 2A 50 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  91CC 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  91CD 22 50 85     	ld (Posicion_actual),hl
501+  91D0 CD 8A 92     	call Genera_coordenadas
502+  91D3 CD 2F 92     	call Dec_CTRL_DESPLZ
503+  91D6 18 03        	jr 2F
504+  91D8 CD 2F 92     1 call Dec_CTRL_DESPLZ
505+  91DB C9           2 ret
506+  91DC
507+  91DC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  91DC
509+  91DC 3A 56 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  91DF FE F7        	cp $f7
511+  91E1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  91E3 30 2C        	jr nc,3F
513+  91E5
514+  91E5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  91E5
516+  91E5 06 00        	ld b,0
517+  91E7 04           4 inc b
518+  91E8 3C           	inc a
519+  91E9 FE F7        	cp $f7
520+  91EB 20 FA        	jr nz,4B
521+  91ED 3E FF        	ld a,$ff
522+  91EF 90           	sub b
523+  91F0 32 56 85     	ld (CTRL_DESPLZ),a
524+  91F3 18 1C        	jr 3F
525+  91F5
526+  91F5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  91F5
528+  91F5 21 4F 85     1 ld hl,Columns
529+  91F8 35           	dec (hl)
530+  91F9 AF           	xor a
531+  91FA 32 56 85     	ld (CTRL_DESPLZ),a
532+  91FD 3A 62 85     	ld a,(Cuad_objeto)
533+  9200 E6 01        	and 1
534+  9202 28 0A        	jr z,2F
535+  9204 2A 50 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  9207 2B           	dec hl
537+  9208 22 50 85     	ld (Posicion_actual),hl
538+  920B CD 8A 92     	call Genera_coordenadas
539+  920E
540+  920E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  920E
542+  920E CD 68 87     2 call Inicia_puntero_objeto_izq
543+  9211 C9           3 ret
544+  9212
545+  9212              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  9212              ;
547+  9212              ;	19/10/22
548+  9212              ;
549+  9212              ;	(cp 29) para un Amadeus de 3 Columns.
550+  9212              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  9212
552+  9212 3A 54 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  9215 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  9217 C9           	ret
555+  9218
556+  9218              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  9218              ;
558+  9218              ;	19/10/22
559+  9218              ;
560+  9218              ;	(cp 2) para un Amadeus de 3 Columns.
561+  9218              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  9218
563+  9218 3A 54 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  921B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  921D C9           	ret
566+  921E
567+  921E              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  921E              ;
569+  921E              ;	24/7/22
570+  921E              ;
571+  921E              ;	Inc_CTRL_DESPLZ
572+  921E              ;
573+  921E              ;
574+  921E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  921E
576+  921E 21 56 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  9221 3A 64 85     	ld a,(Vel_right)
578+  9224 A7           	and a
579+  9225 28 06        	jr z,1F
580+  9227 47           	ld b,a
581+  9228 34           3 inc (hl)
582+  9229 10 FD        	djnz 3B
583+  922B 18 01        	jr 2F
584+  922D 34           1 inc (hl)
585+  922E C9           2 ret
586+  922F
587+  922F              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  922F              ;
589+  922F              ;	5/2/23
590+  922F              ;
591+  922F              ;	Dec_CTRL_DESPLZ
592+  922F              ;
593+  922F              ;
594+  922F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  922F
596+  922F 21 56 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  9232 3A 63 85     	ld a,(Vel_left)
598+  9235 A7           	and a
599+  9236 28 06        	jr z,1F
600+  9238 47           	ld b,a
601+  9239 35           3 dec (hl)
602+  923A 10 FD        	djnz 3B
603+  923C 18 01        	jr 2F
604+  923E 35           1 dec (hl)
605+  923F C9           2 ret
606+  9240
607+  9240              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9240
609+  9240 2A 50 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  9243 01 1F 00     	ld bc,31
611+  9246 A7           	and a
612+  9247 ED 4A        	adc hl,bc
613+  9249 22 50 85     	ld (Posicion_actual),hl
614+  924C 21 7B 85     	ld hl,Ctrl_0														; $xxx1
615+  924F CB C6        	set 0,(hl)
616+  9251 C9           	ret
617+  9252
618+  9252              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  9252
620+  9252 2A 50 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  9255 01 1F 00     	ld bc,31
622+  9258 A7           	and a
623+  9259 ED 42        	sbc hl,bc
624+  925B 22 50 85     	ld (Posicion_actual),hl 											; $xx1x
625+  925E 21 7B 85     	ld hl,Ctrl_0
626+  9261 CB CE        	set 1,(hl)
627+  9263 C9           	ret
628+  9264
629+  9264              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  9264
631+  9264 24           Reaparece_abajo inc h
632+  9265 01 E0 17     	ld bc,$17e0
633+  9268 A7           	and a
634+  9269 ED 4A        	adc hl,bc
635+  926B 22 50 85     	ld (Posicion_actual),hl
636+  926E 21 7B 85     	ld hl,Ctrl_0
637+  9271 CB D6        	set 2,(hl)
638+  9273 C9           	ret
639+  9274
640+  9274              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  9274
642+  9274 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  9277 A7           	and a
644+  9278 ED 42        	sbc hl,bc
645+  927A 22 50 85     	ld (Posicion_actual),hl
646+  927D 21 7B 85     	ld hl,Ctrl_0
647+  9280 CB DE        	set 3,(hl)
648+  9282 C9           	ret
649+  9283
650+  9283              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  9283
652+  9283 2A 60 85     Reinicio ld hl,(Posicion_inicio)
653+  9286 22 50 85     	ld (Posicion_actual),hl
654+  9289 C9           	ret
# file closed: Direcciones.asm
839   928A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  928A              ;	12/12/22
  2+  928A              ;
  3+  928A              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  928A              ;	Fila superior "0", Columna izquierda "0".
  5+  928A              ;
  6+  928A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  928A              ;
  8+  928A              ;	Modifica: A
  9+  928A
 10+  928A C5           Genera_coordenadas push bc
 11+  928B E5           	push hl
 12+  928C 2A 50 85     	ld hl,(Posicion_actual)
 13+  928F 7D           	ld a,l
 14+  9290 E6 1F        	and $1f
 15+  9292 32 54 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  9295 CD 58 8F     	call calcula_tercio
 17+  9298 47           	ld b,a
 18+  9299 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  929A 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  929C 7D           	ld a,l
 21+  929D E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  929F 28 05        	jr z,2F
 23+  92A1 0C           1 inc c
 24+  92A2 D6 20        	sub 32
 25+  92A4 20 FB        	jr nz,1B
 26+  92A6 0C           2 inc c
 27+  92A7 04           	inc b
 28+  92A8 05           	dec b
 29+  92A9 28 04        	jr z,3F
 30+  92AB 3E E0        	ld a,$e0
 31+  92AD 10 F2        	djnz 1B
 32+  92AF 79           3 ld a,c
 33+  92B0 3D           	dec a
 34+  92B1 32 55 85     	ld (Coordenada_y),a
 35+  92B4 E1           	pop hl
 36+  92B5 C1           	pop bc
 37+  92B6 C9           	ret
# file closed: Genera_coordenadas.asm
840   92B7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  92B7
  2+  92B7
  3+  92B7              ;   11/8/22
  4+  92B7              ;
  5+  92B7              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  92B7              ;
  7+  92B7              ;   Mov_obj.asm
  8+  92B7              ;
  9+  92B7              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  92B7              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  92B7              ;
 12+  92B7              ;   Codificación:
 13+  92B7              ;
 14+  92B7              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  92B7
 16+  92B7              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  92B7
 18+  92B7 02 40 00     Arriba db 2,%01000000,0
 19+  92BA 02 80 00     Abajo db 2,%10000000,0
 20+  92BD 02 20 00     Derecha db 2,%00100000,0
 21+  92C0 02 10 00     Izquierda db 2,%00010000,0
 22+  92C3 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  92C7 60 42 60 40
 22+  92CB 63
 23+  92CC 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  92D0 22 A3 80 A0
 24+  92D4 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  92D8 84 A0 83 A0
 25+  92DC 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  92E0 80 A3 22 A0
 26+  92E4 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  92E8 40 60 42 60
 27+  92EC 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  92F0 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  92F4 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  92F8 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  92FC 84
 31+  92FD 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  9301 84 00
 32+  9303 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  9307 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  930B 1F 1F 1F 1F
 34+  930F 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  9313 1F 1F 1F 1F
 34+  9317 1F
 35+  9318 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  931C 2F 2F 2F 2F
 35+  9320 2F 2F
 36+  9322 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  9326 2F 2F 00
 37+  9329
 38+  9329
 39+  9329              ; ----- ----- ----- ----- -----
 40+  9329
 41+  9329 07 93        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  932B 03 93        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  932D C0 92        Indice_mov_Izquierda defw Izquierda
 44+  932F BD 92        Indice_mov_Derecha defw Derecha
 45+  9331 BA 92        Indice_mov_Abajo defw Abajo
 46+  9333 B7 92        Indice_mov_Arriba defw Arriba
 47+  9335 F4 92        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  9337 F8 92        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9339 F0 92        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  933B FD 92        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  933D C3 92        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  933F              ; ----- ----- ----- ----- -----
 53+  933F
 54+  933F 3A 81 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9342 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9343 28 02            jr z,1F
 57+  9345 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  9347 3A 82 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  934A C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  934C 32 82 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  934F              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  934F 2A 7F 85         ld hl,(Puntero_mov)
 63+  9352 7E               ld a,(hl)
 64+  9353 32 81 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  9356 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  9357 22 7F 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  935A
 68+  935A 3A 83 85     Decoder ld a,(Repetimos_db)
 69+  935D A7               and a
 70+  935E 20 0C            jr nz,12F
 71+  9360 2A 7F 85         ld hl,(Puntero_mov)
 72+  9363 7E               ld a,(hl)
 73+  9364 A7               and a
 74+  9365 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  9367 E6 0F            and $0f
 76+  9369 32 83 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  936C              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  936C 2A 7F 85     12 ld hl,(Puntero_mov)
 79+  936F CB 7E            bit 7,(hl)
 80+  9371 28 03            jr z,2F
 81+  9373 CD 76 8F         call Mov_down
 82+  9376 2A 7F 85     2 ld hl, (Puntero_mov)
 83+  9379 CB 76            bit 6,(hl)
 84+  937B 28 03            jr z,3F
 85+  937D CD A4 8F         call Mov_up
 86+  9380 2A 7F 85     3 ld hl, (Puntero_mov)
 87+  9383 CB 6E            bit 5,(hl)
 88+  9385 28 03            jr z,4F
 89+  9387 CD D2 8F         call Mov_right
 90+  938A 2A 7F 85     4 ld hl, (Puntero_mov)
 91+  938D CB 66            bit 4,(hl)
 92+  938F 28 03            jr z,5F
 93+  9391 CD F0 90         call Mov_left
 94+  9394
 95+  9394              ; ---------- --------- --------- ---------- ----------
 96+  9394
 97+  9394 3A 83 85     5 ld a,(Repetimos_db)
 98+  9397 A7               and a
 99+  9398 28 07            jr z,6F
100+  939A 3D               dec a
101+  939B 32 83 85         ld (Repetimos_db),a
102+  939E 28 01            jr z,6f
103+  93A0 C9           11 ret
104+  93A1 21 81 85     6 ld hl,Contador_db_mov
105+  93A4 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  93A5 2A 7F 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  93A8 23               inc hl
108+  93A9 22 7F 85         ld (Puntero_mov),hl
109+  93AC 18 F2            jr 11B
110+  93AE 2A 7D 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  93B1 3A 82 85         ld a,(Incrementa_puntero)
112+  93B4 47               ld b,a
113+  93B5 23           8 inc hl
114+  93B6 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  93B8 5E               ld e,(hl)
116+  93B9 23               inc hl
117+  93BA 56               ld d,(hl)
118+  93BB EB               ex de,hl
119+  93BC 22 7F 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  93BF 18 DF            jr 11B
121+  93C1
122+  93C1              ; ---------- --------- --------- ---------- ----------
123+  93C1              ;
124+  93C1              ;   11/8/22
125+  93C1              ;
126+  93C1              ;   Prepara_Puntero_mov
127+  93C1
128+  93C1 E5           Prepara_Puntero_mov push hl
129+  93C2 D5               push de
130+  93C3 2A 7D 85         ld hl,(Puntero_indice_mov)
131+  93C6 5E               ld e,(hl)
132+  93C7 23               inc hl
133+  93C8 56               ld d,(hl)
134+  93C9 EB               ex de,hl
135+  93CA 22 7F 85         ld (Puntero_mov),hl
136+  93CD D1               pop de
137+  93CE E1               pop hl
138+  93CF C9               ret
139+  93D0
140+  93D0              ; ---------- --------- --------- ---------- ----------
141+  93D0              ;
142+  93D0              ;   11/8/22
143+  93D0              ;
144+  93D0              ;   Reinicia_el_movimiento
145+  93D0
146+  93D0 CD C1 93     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  93D3 AF               xor a
148+  93D4 32 81 85         ld (Contador_db_mov),a
149+  93D7 32 82 85         ld (Incrementa_puntero),a
150+  93DA
151+  93DA              ;    jr $
152+  93DA
153+  93DA C3 3F 93         jp Movimiento
154+  93DD C9               ret
155+  93DE              ; ---------- --------- --------- ---------- ----------
156+  93DE
157+  93DE
158+  93DE
159+  93DE
160+  93DE
161+  93DE
162+  93DE
163+  93DE
164+  93DE
165+  93DE
166+  93DE
167+  93DE
168+  93DE
169+  93DE
170+  93DE
171+  93DE
172+  93DE
173+  93DE
# file closed: Patrones_de_mov.asm
841   93DE              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  93DE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  93DE              ;
  3+  93DE              ;	3/1/23
  4+  93DE              ;
  5+  93DE              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  93DE
  7+  93DE              ;	ADC HL,SP	LD (addr),SP
  8+  93DE              ;	ADD HL,SP	LD SP,(addr)
  9+  93DE              ;	ADD IX,SP	LD SP,nn
 10+  93DE              ; 	ADD IY,SP	LD SP,HL
 11+  93DE              ;				LD SP,IX
 12+  93DE              ;	DEC SP		LD SP,IY
 13+  93DE
 14+  93DE              ;	EX (SP),HL
 15+  93DE              ;	EX (SP),IX
 16+  93DE              ;	EX (SP),IY
 17+  93DE
 18+  93DE              ;	INC SP
 19+  93DE
 20+  93DE
 21+  93DE                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 91 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A 88 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A 97 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A 95 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 97 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 95 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B 91 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
842   7FD4
843   7FD4              	SAVESNA "Pruebas.sna", START
844   7FD4
845   7FD4
846   7FD4
# file closed: Banco_de_pruebas.asm
