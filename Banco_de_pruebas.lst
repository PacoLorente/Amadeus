# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 2C 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD 8C 8E     	call Pinta_entidades
  44  AA1C CD 7E 8E     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD AE 8E     	call Guarda_parametros_DRAW
  49  AA26 CD CE 8D     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 3C 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD D1 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD F7 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD E0 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD BA 8E     	call Recupera_parametros_DRAW
  66  AA3F CD 9C 8E     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 36 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 2C 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	21/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C3 85        	defw Caja_1
 103+ 856E 08 86        	defw Caja_2
 104+ 8570 4D 86        	defw Caja_3
 105+ 8572 92 86        	defw Caja_4
 106+ 8574 D7 86        	defw Caja_5
 107+ 8576 1C 87        	defw Caja_6
 108+ 8578 61 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 											; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 148+ 85B0
 149+ 85B0 00           	db 0											; (Autoriza_movimiento).
 150+ 85B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 150+ 85B5 00 00
 151+ 85B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 152+ 85BA
 153+ 85BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 154+ 85BC 00           	db 0											; (Cola_de_desplazamiento).
 155+ 85BD
 156+ 85BD 00           	db 0 											; (Columnas).
 157+ 85BE 00 00        	defw 0											; (Limite_horizontal).
 158+ 85C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 159+ 85C3
 160+ 85C3              ; ---------- ---------- ---------- ---------- ----------
 161+ 85C3
 162+ 85C3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 163+ 85C5 00 00        	defw 0											; (Posicion_actual).
 164+ 85C7 00 00        	defw 0 											; (Puntero_objeto).
 165+ 85C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 166+ 85CC
 167+ 85CC 00           	db %00000000 									; (Attr).
 168+ 85CD
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_der).
 170+ 85CF 00 00        	defw 0											; (Indice_Sprite_izq).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 172+ 85D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 173+ 85D5
 174+ 85D5 00 00        	defw 0											; (Posicion_inicio).
 175+ 85D7 00           	db 0											; (Cuad_objeto).
 176+ 85D8
 177+ 85D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 178+ 85DC
 179+ 85DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 180+ 85DD
 181+ 85DD 00 00 00...  	ds 6											; Variables_de_borrado
 182+ 85E3
 183+ 85E3 00 00        	db 0,0											; Variables_de_pintado
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00        	defw 0											;	" " " " " " "
 186+ 85E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 187+ 85ED
 188+ 85ED 00 00        	defw 0 											; Puntero_de_impresion.
 189+ 85EF
 190+ 85EF D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 191+ 85F1 00 00        	defw 0 											; Contador_de_mov_masticados
 192+ 85F3
 193+ 85F3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 194+ 85F5
 195+ 85F5 00           	db 0											; (Autoriza_movimiento).
 196+ 85F6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 196+ 85FA 00 00
 197+ 85FC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 198+ 85FF
 199+ 85FF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 200+ 8601 00           	db 0											; (Cola_de_desplazamiento).
 201+ 8602
 202+ 8602 00           	db 0 											; (Columnas).
 203+ 8603 00 00        	defw 0											; (Limite_horizontal).
 204+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 205+ 8608
 206+ 8608              ; ---------- ---------- ---------- ---------- ----------
 207+ 8608
 208+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 209+ 860A 00 00        	defw 0											; (Posicion_actual).
 210+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 211+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 212+ 8611
 213+ 8611 00           	db %00000000 									; (Attr).
 214+ 8612
 215+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 216+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 217+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 218+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 219+ 861A
 220+ 861A 00 00        	defw 0											; (Posicion_inicio).
 221+ 861C 00           	db 0											; (Cuad_objeto).
 222+ 861D
 223+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 224+ 8621
 225+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 226+ 8622
 227+ 8622 00 00 00...  	ds 6											; Variables_de_borrado
 228+ 8628
 229+ 8628 00 00        	db 0,0											; Variables_de_pintado
 230+ 862A 00 00        	defw 0											;	" " " " " " "
 231+ 862C 00 00        	defw 0											;	" " " " " " "
 232+ 862E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 233+ 8632
 234+ 8632 00 00        	defw 0 											; Puntero_de_impresion.
 235+ 8634
 236+ 8634 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 237+ 8636 00 00        	defw 0 											; Contador_de_mov_masticados
 238+ 8638
 239+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 240+ 863A
 241+ 863A 00           	db 0											; (Autoriza_movimiento).
 242+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 242+ 863F 00 00
 243+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 244+ 8644
 245+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 246+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 247+ 8647
 248+ 8647 00           	db 0 											; (Columnas).
 249+ 8648 00 00        	defw 0											; (Limite_horizontal).
 250+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 251+ 864D
 252+ 864D              ; ---------- ---------- ---------- ---------- ----------
 253+ 864D
 254+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 255+ 864F 00 00        	defw 0											; (Posicion_actual).
 256+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 257+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 258+ 8656
 259+ 8656 00           	db %00000000 									; (Attr).
 260+ 8657
 261+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 262+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 263+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 264+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 265+ 865F
 266+ 865F 00 00        	defw 0											; (Posicion_inicio).
 267+ 8661 00           	db 0											; (Cuad_objeto).
 268+ 8662
 269+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 270+ 8666
 271+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 272+ 8667
 273+ 8667 00 00 00...  	ds 6											; Variables_de_borrado
 274+ 866D
 275+ 866D 00 00        	db 0,0											; Variables_de_pintado
 276+ 866F 00 00        	defw 0											;	" " " " " " "
 277+ 8671 00 00        	defw 0											;	" " " " " " "
 278+ 8673 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 279+ 8677
 280+ 8677 00 00        	defw 0 											; Puntero_de_impresion.
 281+ 8679
 282+ 8679 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 283+ 867B 00 00        	defw 0 											; Contador_de_mov_masticados
 284+ 867D
 285+ 867D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 286+ 867F
 287+ 867F 00           	db 0											; (Autoriza_movimiento).
 288+ 8680 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 288+ 8684 00 00
 289+ 8686 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 290+ 8689
 291+ 8689 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 292+ 868B 00           	db 0											; (Cola_de_desplazamiento).
 293+ 868C
 294+ 868C 00           	db 0 											; (Columnas).
 295+ 868D 00 00        	defw 0											; (Limite_horizontal).
 296+ 868F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 297+ 8692
 298+ 8692              ; ---------- ---------- ---------- ---------- ----------
 299+ 8692
 300+ 8692 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 301+ 8694 00 00        	defw 0											; (Posicion_actual).
 302+ 8696 00 00        	defw 0 											; (Puntero_objeto).
 303+ 8698 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 304+ 869B
 305+ 869B 00           	db %00000000 									; (Attr).
 306+ 869C
 307+ 869C 00 00        	defw 0											; (Indice_Sprite_der).
 308+ 869E 00 00        	defw 0											; (Indice_Sprite_izq).
 309+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 310+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 311+ 86A4
 312+ 86A4 00 00        	defw 0											; (Posicion_inicio).
 313+ 86A6 00           	db 0											; (Cuad_objeto).
 314+ 86A7
 315+ 86A7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 316+ 86AB
 317+ 86AB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 318+ 86AC
 319+ 86AC 00 00 00...  	ds 6											; Variables_de_borrado
 320+ 86B2
 321+ 86B2 00 00        	db 0,0											; Variables_de_pintado
 322+ 86B4 00 00        	defw 0											;	" " " " " " "
 323+ 86B6 00 00        	defw 0											;	" " " " " " "
 324+ 86B8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 325+ 86BC
 326+ 86BC 00 00        	defw 0 											; Puntero_de_impresion.
 327+ 86BE
 328+ 86BE D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 329+ 86C0 00 00        	defw 0 											; Contador_de_mov_masticados
 330+ 86C2
 331+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 332+ 86C4
 333+ 86C4 00           	db 0											; (Autoriza_movimiento).
 334+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 334+ 86C9 00 00
 335+ 86CB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 336+ 86CE
 337+ 86CE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 338+ 86D0 00           	db 0											; (Cola_de_desplazamiento).
 339+ 86D1
 340+ 86D1 00           	db 0 											; (Columnas).
 341+ 86D2 00 00        	defw 0											; (Limite_horizontal).
 342+ 86D4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 343+ 86D7
 344+ 86D7              ; ---------- ---------- ---------- ---------- ----------
 345+ 86D7
 346+ 86D7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 347+ 86D9 00 00        	defw 0											; (Posicion_actual).
 348+ 86DB 00 00        	defw 0 											; (Puntero_objeto).
 349+ 86DD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 350+ 86E0
 351+ 86E0 00           	db %00000000 									; (Attr).
 352+ 86E1
 353+ 86E1 00 00        	defw 0											; (Indice_Sprite_der).
 354+ 86E3 00 00        	defw 0											; (Indice_Sprite_izq).
 355+ 86E5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 356+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 357+ 86E9
 358+ 86E9 00 00        	defw 0											; (Posicion_inicio).
 359+ 86EB 00           	db 0											; (Cuad_objeto).
 360+ 86EC
 361+ 86EC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 362+ 86F0
 363+ 86F0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 364+ 86F1
 365+ 86F1 00 00 00...  	ds 6											; Variables_de_borrado
 366+ 86F7
 367+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 368+ 86F9 00 00        	defw 0											;	" " " " " " "
 369+ 86FB 00 00        	defw 0											;	" " " " " " "
 370+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 371+ 8701
 372+ 8701 00 00        	defw 0 											; Puntero_de_impresion.
 373+ 8703
 374+ 8703 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 375+ 8705 00 00        	defw 0 											; Contador_de_mov_masticados
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 378+ 8709
 379+ 8709 00           	db 0											; (Autoriza_movimiento).
 380+ 870A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 380+ 870E 00 00
 381+ 8710 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 382+ 8713
 383+ 8713 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 384+ 8715 00           	db 0											; (Cola_de_desplazamiento).
 385+ 8716
 386+ 8716 00           	db 0 											; (Columnas).
 387+ 8717 00 00        	defw 0											; (Limite_horizontal).
 388+ 8719 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 389+ 871C
 390+ 871C              ; ---------- ---------- ---------- ---------- ----------
 391+ 871C
 392+ 871C 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 393+ 871E 00 00        	defw 0											; (Posicion_actual).
 394+ 8720 00 00        	defw 0 											; (Puntero_objeto).
 395+ 8722 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 396+ 8725
 397+ 8725 00           	db %00000000 									; (Attr).
 398+ 8726
 399+ 8726 00 00        	defw 0											; (Indice_Sprite_der).
 400+ 8728 00 00        	defw 0											; (Indice_Sprite_izq).
 401+ 872A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 402+ 872C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 403+ 872E
 404+ 872E 00 00        	defw 0											; (Posicion_inicio).
 405+ 8730 00           	db 0											; (Cuad_objeto).
 406+ 8731
 407+ 8731 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 408+ 8735
 409+ 8735 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 410+ 8736
 411+ 8736 00 00 00...  	ds 6											; Variables_de_borrado
 412+ 873C
 413+ 873C 00 00        	db 0,0											; Variables_de_pintado
 414+ 873E 00 00        	defw 0											;	" " " " " " "
 415+ 8740 00 00        	defw 0											;	" " " " " " "
 416+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8746
 418+ 8746 00 00        	defw 0 											; Puntero_de_impresion.
 419+ 8748
 420+ 8748 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 421+ 874A 00 00        	defw 0 											; Contador_de_mov_masticados
 422+ 874C
 423+ 874C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 424+ 874E
 425+ 874E 00           	db 0											; (Autoriza_movimiento).
 426+ 874F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 426+ 8753 00 00
 427+ 8755 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 428+ 8758
 429+ 8758 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 430+ 875A 00           	db 0											; (Cola_de_desplazamiento).
 431+ 875B
 432+ 875B 00           	db 0 											; (Columnas).
 433+ 875C 00 00        	defw 0											; (Limite_horizontal).
 434+ 875E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 435+ 8761
 436+ 8761              ; ---------- ---------- ---------- ---------- ----------
 437+ 8761
 438+ 8761 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 439+ 8763 00 00        	defw 0											; (Posicion_actual).
 440+ 8765 00 00        	defw 0 											; (Puntero_objeto).
 441+ 8767 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 442+ 876A
 443+ 876A 00           	db %00000000 									; (Attr).
 444+ 876B
 445+ 876B 00 00        	defw 0											; (Indice_Sprite_der).
 446+ 876D 00 00        	defw 0											; (Indice_Sprite_izq).
 447+ 876F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 448+ 8771 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 449+ 8773
 450+ 8773 00 00        	defw 0											; (Posicion_inicio).
 451+ 8775 00           	db 0											; (Cuad_objeto).
 452+ 8776
 453+ 8776 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 454+ 877A
 455+ 877A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 456+ 877B
 457+ 877B 00 00 00...  	ds 6											; Variables_de_borrado
 458+ 8781
 459+ 8781 00 00        	db 0,0											; Variables_de_pintado
 460+ 8783 00 00        	defw 0											;	" " " " " " "
 461+ 8785 00 00        	defw 0											;	" " " " " " "
 462+ 8787 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 463+ 878B
 464+ 878B 00 00        	defw 0 											; Puntero_de_impresion.
 465+ 878D
 466+ 878D D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 467+ 878F 00 00        	defw 0 											; Contador_de_mov_masticados
 468+ 8791
 469+ 8791 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 470+ 8793
 471+ 8793 00           	db 0											; (Autoriza_movimiento).
 472+ 8794 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 472+ 8798 00 00
 473+ 879A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 474+ 879D
 475+ 879D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 476+ 879F 00           	db 0											; (Cola_de_desplazamiento).
 477+ 87A0
 478+ 87A0 00           	db 0 											; (Columnas).
 479+ 87A1 00 00        	defw 0											; (Limite_horizontal).
 480+ 87A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 481+ 87A6
 482+ 87A6              ; -------------------------------------------------------------------------------------
 483+ 87A6              ;
 484+ 87A6              ;	20/05/23
 485+ 87A6              ;
 486+ 87A6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 487+ 87A6              ;
 488+ 87A6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 489+ 87A6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 490+ 87A6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 491+ 87A6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 492+ 87A6
 493+ 87A6              Indice_de_entidades
 494+ 87A6
 495+ 87A6 AA 87        	defw Entidad_1
 496+ 87A8 BA 87        	defw Entidad_2
 497+ 87AA
 498+ 87AA              ;	BADSAT, (Satélite malvado).
 499+ 87AA
 500+ 87AA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 501+ 87AC 04           	db %00000100									; (Attr).
 502+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 503+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 504+ 87B1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 505+ 87B3 01           	db 1											; (Cuad_objeto).
 506+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 507+ 87B8 9E 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 508+ 87BA
 509+ 87BA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 510+ 87BC 02           	db %00000010									; (Attr).
 511+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 512+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 513+ 87C1 40 50        	defw $5040                                      ; (Posicion_inicio).
 514+ 87C3 01           	db 1											; (Cuad_objeto).
 515+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 516+ 87C8 9E 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 517+ 87CA
# file closed: Cajas_y_disparos.asm
  97  87CA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87CA              ; 13/05/23
   2+ 87CA
   3+ 87CA              Indice_de_niveles
   4+ 87CA
   5+ 87CA D8 87        	defw Nivel_1
   6+ 87CC DA 87        	defw Nivel_2
   7+ 87CE E7 87        	defw Nivel_3
   8+ 87D0 F7 87        	defw Nivel_4
   9+ 87D2 09 88        	defw Nivel_5
  10+ 87D4              ;	...
  11+ 87D4              ;	...
  12+ 87D4              ;	+ Niveles ...
  13+ 87D4
  14+ 87D4 00 00        	defw 0
  15+ 87D6 00 00        	defw 0
  16+ 87D8
  17+ 87D8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87D9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87DA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87DB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87DF 01 02
  21+ 87E1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87E5 01 02
  22+ 87E7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87E8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87EC 01
  24+ 87ED 03 01 01 01  	db 3,1,1,1,1
  24+ 87F1 01
  25+ 87F2 03 01 01 01  	db 3,1,1,1,1
  25+ 87F6 01
  26+ 87F7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87F8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87FC 01
  28+ 87FD 04 01 01 01  	db 4,1,1,1,1
  28+ 8801 01
  29+ 8802 04 01 01 01  	db 4,1,1,1,1
  29+ 8806 01
  30+ 8807 02 03        	db 2,3
  31+ 8809 14           Nivel_5 db 20									; Nº de entidades.
  32+ 880A 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 880E 01
  33+ 880F 05 01 01 01  	db 5,1,1,1,1
  33+ 8813 01
  34+ 8814 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8818 01
  35+ 8819 05 01 01 01  	db 5,1,1,1,1
  35+ 881D 01
  36+ 881E
  37+ 881E              ;---------------------------------------------------------------------------------------------------------------
  38+ 881E              ;
  39+ 881E              ;   3/9/23
  40+ 881E              ;
  41+ 881E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 881E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 881E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 881E              ;	_en la caja DRAW correspondiente.
  45+ 881E              ;
  46+ 881E              ;	MODIFICA: HL,DE y A.
  47+ 881E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 881E
  49+ 881E              Inicializa_Punteros_de_nivel
  50+ 881E
  51+ 881E 21 CA 87     	ld hl,Indice_de_niveles
  52+ 8821 22 54 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8824 CD 1E 8D     	call Extrae_address
  54+ 8827 7E           	ld a,(hl)
  55+ 8828 32 20 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 882B 23           	inc hl
  57+ 882C 22 56 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 882F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8830
  60+ 8830              ;---------------------------------------------------------------------------------------------------------------
  61+ 8830              ;
  62+ 8830              ;   13/5/23
  63+ 8830              ;
  64+ 8830              ;	Destruye A,BC,HL,DE
  65+ 8830
  66+ 8830              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8830              ;	_del juego.
  68+ 8830
  69+ 8830              Prepara_cajas
  70+ 8830
  71+ 8830              ; Preparamos los punteros de las cajas.
  72+ 8830
  73+ 8830 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8833 CD 1E 8D     	call Extrae_address
  75+ 8836 CD 73 88     	call Avanza_caja
  76+ 8839
  77+ 8839 CD B7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 883C
  79+ 883C 2A 56 89     	ld hl,(Datos_de_nivel)
  80+ 883F
  81+ 883F              ; HL está en los datos del nivel correspondiente.
  82+ 883F              ; B actuará como contador de cajas.
  83+ 883F
  84+ 883F C5           1 push bc
  85+ 8840
  86+ 8840 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8841 CD 64 88     	call PreparaBC
  88+ 8844
  89+ 8844 21 A6 87     	ld hl,Indice_de_entidades
  90+ 8847 CD 6C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 884A 22 26 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 884D
  93+ 884D CD 7D 88     	call Datos_de_entidad_a_caja
  94+ 8850
  95+ 8850 2A 1E 89     	ld hl,(Indice_restore_caja)
  96+ 8853 CD 1E 8D     	call Extrae_address
  97+ 8856 CD 73 88     	call Avanza_caja
  98+ 8859
  99+ 8859 2A 56 89     	ld hl,(Datos_de_nivel)
 100+ 885C 23           	inc hl
 101+ 885D 22 56 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8860
 103+ 8860 C1           	pop bc
 104+ 8861 10 DC        	djnz 1B
 105+ 8863 C9           	ret
 106+ 8864
 107+ 8864 CB 27        PreparaBC sla a
 108+ 8866 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8868 4F           	ld c,a
 110+ 8869 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 886B C9           	ret
 112+ 886C
 113+ 886C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 886D ED 4A        	adc hl,bc
 115+ 886F CD 1E 8D     	call Extrae_address
 116+ 8872 C9           	ret
 117+ 8873
 118+ 8873 22 1A 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8876 13           	inc de
 120+ 8877 13           	inc de
 121+ 8878 EB           	ex de,hl
 122+ 8879 22 1E 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 887C C9           	ret
 124+ 887D
 125+ 887D              Datos_de_entidad_a_caja
 126+ 887D
 127+ 887D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 887D
 129+ 887D
 130+ 887D ED 5B 1A 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8881
 132+ 8881 01 02 00     	ld bc,2
 133+ 8884 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8886
 135+ 8886 01 07 00     	ld bc,7
 136+ 8889 CD B1 88     	call Situa_DE
 137+ 888C
 138+ 888C 01 05 00     	ld bc,5
 139+ 888F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8891
 141+ 8891 01 04 00     	ld bc,4
 142+ 8894 CD B1 88     	call Situa_DE
 143+ 8897
 144+ 8897 01 07 00     	ld bc,7
 145+ 889A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 889C
 147+ 889C 01 18 00     	ld bc,24
 148+ 889F CD B1 88     	call Situa_DE
 149+ 88A2
 150+ 88A2 01 02 00     	ld bc,2
 151+ 88A5 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88A7
 153+ 88A7              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88A7              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88A7
 156+ 88A7 01 0F 00     	ld bc,15									; *****
 157+ 88AA CD B1 88     	call Situa_DE
 158+ 88AD
 159+ 88AD 3E 03        	ld a,3
 160+ 88AF 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88B0
 162+ 88B0 C9           	ret
 163+ 88B1
 164+ 88B1 EB           Situa_DE ex de,hl
 165+ 88B2 A7           	and a
 166+ 88B3 ED 4A        	adc hl,bc
 167+ 88B5 EB           	ex de,hl
 168+ 88B6 C9           	ret
 169+ 88B7
 170+ 88B7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88B7              ;
 172+ 88B7              ;	21/5/23
 173+ 88B7              ;
 174+ 88B7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88B7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88B7              ;
 177+ 88B7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88B7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88B7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88B7              ;
 181+ 88B7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88B7              ;	MODIFICA: A y B.
 183+ 88B7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88B7
 185+ 88B7              Admin_num_entidades
 186+ 88B7
 187+ 88B7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88B7
 189+ 88B7 3A 20 89     	ld a,(Numero_de_entidades)
 190+ 88BA A7           	and a
 191+ 88BB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88BB              ;	jr z,$
 193+ 88BB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88BB
 195+ 88BB 20 03        	jr nz,3F
 196+ 88BD
 197+ 88BD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88BD
 199+ 88BD CD 1E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88C0
 201+ 88C0 3A 20 89     3 ld a,(Numero_de_entidades)
 202+ 88C3 FE 07        	cp 7
 203+ 88C5 38 08        	jr c,1F
 204+ 88C7
 205+ 88C7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88C7              ; Actualizamos variables.
 207+ 88C7
 208+ 88C7 3E 07        	ld a,7
 209+ 88C9 32 21 89     	ld (Numero_parcial_de_entidades),a
 210+ 88CC 47           	ld b,a
 211+ 88CD 18 04        	jr 2F
 212+ 88CF
 213+ 88CF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88CF              ; (Numero_de_entidades)="0".
 215+ 88CF
 216+ 88CF 32 21 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88D2 47           	ld b,a
 218+ 88D3 C9           2 ret
# file closed: Niveles.asm
  98  88D4
  99  88D4              ; ******************************************************************************************************************************************************************************************
 100  88D4              ; Constantes.
 101  88D4              ; ******************************************************************************************************************************************************************************************
 102  88D4              ;
 103  88D4              ; 10/11/23
 104  88D4
 105  88D4              ;
 106  88D4              ; Constantes generales.
 107  88D4              ;
 108  88D4
 109  88D4              Sprite_vacio equ $f000
 110  88D4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88D4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88D4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88D4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88D4
 115  88D4              Almacen_de_movimientos_masticados equ $5cd0				; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88D4              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 117  88D4              ;														; 4799 bytes, 4,8Kb.
 118  88D4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 119  88D4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 120  88D4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 121  88D4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 122  88D4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 123  88D4
 124  88D4              ;														; 55 Bytes.
 125  88D4
 126  88D4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 127  88D4              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 65 bytes.
 128  88D4
 129  88D4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 130  88D4
 131  88D4              ; ******************************************************************************************************************************************************************************************
 132  88D4              ; Variables.
 133  88D4              ; ******************************************************************************************************************************************************************************************
 134  88D4              ;
 135  88D4              ; 21/12//23
 136  88D4              ;
 137  88D4              ; Variables de DRAW. (Motor principal).
 138  88D4              ;
 139  88D4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 140  88D4
 141  88D4 00           Filas db 0												; Filas. [DRAW]
 142  88D5 00           Columns db 0  											; Nº de columnas. [DRAW]
 143  88D6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 144  88D8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 145  88DA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 146  88DB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 147  88DC
 148  88DC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 149  88DC
 150  88DC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 151  88DD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 152  88DD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 153  88DD 00           Attr db 0												; Atributos de la entidad:
 154  88DE
 155  88DE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 156  88DE              ;
 157  88DE              ;	COLORES: 0 ..... NEGRO
 158  88DE              ;    		 1 ..... AZUL
 159  88DE              ; 			 2 ..... ROJO
 160  88DE              ;			 3 ..... MAGENTA
 161  88DE              ; 			 4 ..... VERDE
 162  88DE              ; 			 5 ..... CIAN
 163  88DE              ;			 6 ..... AMARILLO
 164  88DE              ; 			 7 ..... BLANCO
 165  88DE
 166  88DE 00 00        Indice_Sprite_der defw 0
 167  88E0 00 00        Indice_Sprite_izq defw 0
 168  88E2 00 00        Puntero_DESPLZ_der defw 0
 169  88E4 00 00        Puntero_DESPLZ_izq defw 0
 170  88E6
 171  88E6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 172  88E8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 173  88E9
 174  88E9              ; Variables de objeto. (Características).
 175  88E9
 176  88E9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 177  88EA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 178  88EB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 179  88EC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 180  88ED
 181  88ED 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 182  88EE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 183  88EE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 184  88EE 00 00 00...  Variables_de_borrado ds 6
 185  88F4
 186  88F4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 187  88F6 00 00        	defw 0
 188  88F8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 189  88FA 00 00 00 00  	db 0,0,0,0
 190  88FE
 191  88FE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 192  8900              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 193  8900
 194  8900 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados
 195  8902
 196  8902              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 197  8902              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 198  8902
 199  8902 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 200  8904              ;														; _palabras que componen el "movimiento_masticado".
 201  8904
 202  8904              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 203  8904
 204  8904 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 205  8905              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 206  8905              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 207  8905              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 208  8905              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 209  8905              ;
 210  8905              ; 														DESCRIPCIÖN:
 211  8905              ;
 212  8905              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 213  8905              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 214  8905              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 215  8905              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 216  8905              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 217  8905              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 218  8905              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 219  8905              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 220  8905              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 221  8905              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 222  8905              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 223  8905              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 224  8905              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 225  8905              ;
 226  8905              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 227  8905              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 228  8905              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 229  8905
 230  8905              ; Movimiento. ------------------------------------------------------------------------------------------------------
 231  8905
 232  8905 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 233  8907 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 234  8909 00 00        Puntero_indice_mov_bucle defw 0							;
 235  890B              ;
 236  890B              ;
 237  890B 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 238  890C              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 239  890C              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 240  890C 00           Incrementa_puntero_backup db 0
 241  890D 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 242  890E              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 243  890E 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 244  890F 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 245  8910 00           Cola_de_desplazamiento db 0								; Este byte indica:
 246  8911              ;
 247  8911              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 248  8911              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 249  8911              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 250  8911              ;
 251  8911              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 252  8911              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 253  8911              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 254  8911              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 255  8911              ;
 256  8911              ;														;	"$ff" ..... Bucle infinito de repetición.
 257  8911              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 258  8911              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 259  8911
 260  8911
 261  8911              ; Variables de funcionamiento. [DRAW].
 262  8911
 263  8911 00           Columnas db 0
 264  8912 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 265  8914              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 266  8914 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 267  8915
 268  8915              ; variables de control general.
 269  8915
 270  8915 00           Ctrl_2 db 0
 271  8916              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 272  8916              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 273  8916              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 274  8916              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 275  8916              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 276  8916              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 277  8916              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 278  8916              ;
 279  8916              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 280  8916              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 281  8916              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 282  8916              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 283  8916              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 284  8916              ;														BIT 4, ???
 285  8916              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 286  8916
 287  8916 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 288  8917
 289  8917              ;! 67 Bytes por entidad.
 290  8917
 291  8917              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 292  8917              ;					         		---------;      ;---------
 293  8917
 294  8917
 295  8917              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 296  8917
 297  8917 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 298  8918
 299  8918              ;														DESCRIPCIÓN:
 300  8918              ;
 301  8918              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 302  8918              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 303  8918              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 304  8918              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 305  8918              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 306  8918              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 307  8918
 308  8918              ;														BIT 3, Recarga de nueva oleada.
 309  8918              ;														BIT 4, Recarga de nueva oleada.
 310  8918              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 311  8918              ;														BIT 6, **** Frame completo.
 312  8918              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 313  8918
 314  8918 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 315  891A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 316  891A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 317  891A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 318  891A
 319  891A              ; Gestión de ENTIDADES y CAJAS.
 320  891A
 321  891A 00 00        Puntero_store_caja defw 0
 322  891C 00 00        Puntero_restore_caja defw 0
 323  891E 00 00        Indice_restore_caja defw 0
 324  8920 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 325  8921 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 326  8922 00           Entidades_en_curso db 0									; ..... ..... .....
 327  8923 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 328  8924              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 329  8924              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 330  8924              ;														; _ (Numero_de_malotes)="0".
 331  8924 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 332  8926 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 333  8928              ;														; _ puntero (Indice_entidades).
 334  8928
 335  8928
 336  8928              ;---------------------------------------------------------------------------------------------------------------
 337  8928              ;
 338  8928              ;	18/11/23
 339  8928              ;
 340  8928              ;	Álbumes.
 341  8928
 342  8928 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 343  892A              ;														; _variable para almacenar lo posición del puntero_
 344  892A              ; 														; _de pila, SP.
 345  892A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 346  892C              ;														; La utiliza la rutina [Extrae_foto_registros].
 347  892C 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 348  892E 00 70        Stack_snapshot defw Album_de_fotos
 349  8930 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 350  8932
 351  8932              ;End_Snapshot defw Album_de_fotos
 352  8932              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 353  8932 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 354  8934              ;														; _el snapshot de los registros del siguiente disparo.
 355  8934              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 356  8934 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 357  8936
 358  8936 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 359  8937              ;
 360  8937              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 361  8937              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 362  8937              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados} está completo. Cuando esto ocurre_
 363  8937              ;																_ no se inicia una nueva "Entidad_guía".
 364  8937              ; Gestión de Disparos.
 365  8937
 366  8937 00           Numero_de_disparotes db 0
 367  8938 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 368  893A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 369  893C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 370  893D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 371  893D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 372  893D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 373  893F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 374  893F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 375  893F              ;														; _produzca colisión.
 376  893F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 377  8941              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 378  8941 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 379  8944              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 380  8944 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 381  8947              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 382  8947 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 383  8948
 384  8948              ;---------------------------------------------------------------------------------------------------------------
 385  8948
 386  8948              ; Relojes y temporizaciones.
 387  8948
 388  8948 00           Contador_de_frames db 0
 389  8949 00           Contador_de_frames_2 db 0
 390  894A
 391  894A 04           Clock_explosion db 4
 392  894B 1E           Clock_Entidades_en_curso db 30
 393  894C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 394  894D              ;														; Repite la oleada de entidades.
 395  894D 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 396  894E 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 397  894F 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 398  8950
 399  8950 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 400  8951 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 401  8952 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 402  8953
 403  8953              ;---------------------------------------------------------------------------------------------------------------
 404  8953
 405  8953              ; Gestión de NIVELES.
 406  8953
 407  8953 00           Nivel db 0												; Nivel actual del juego.
 408  8954 00 00        Puntero_indice_NIVELES defw 0
 409  8956 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 410  8958              ; 														; _ que definen el NIVEL.
 411  8958              ; Y todo comienza aquí .....
 412  8958              ;
 413  8958              ; Rutina principal *************************************************************************************************************************************************************************
 414  8958              ;
 415  8958              ;	16/11/22
 416  8958
 417  8958              START
 418  8958
 419  8958 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 420  895B 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 421  895D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 422  895F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 423  8961 F3           	DI
 424  8962
 425  8962 3E 07        	ld a,%00000111
 426  8964 CD A7 99     	call Cls
 427  8967
 428  8967 CD F7 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 429  896A
 430  896A              ; INICIALIZACIÓN.
 431  896A
 432  896A CD 1E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 433  896D CD 30 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 434  8970 CD 86 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 435  8973              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 436  8973
 437  8973 CD A7 8D     	call Restore_entidad								 ; Vuelca en DRAW los parámetros de la 1º entidad, (Caja_1).
 438  8976
 439  8976 21 21 89     	ld hl,Numero_parcial_de_entidades
 440  8979 46           	ld b,(hl)
 441  897A 04           	inc b
 442  897B 05           	dec b
 443  897C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 444  897E
 445  897E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 446  897E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 447  897E              ;	Pintamos el resto de entidades:
 448  897E
 449  897E              ;	INICIA ENTIDADES !!!!!
 450  897E
 451  897E C5           1 push bc  												; Guardo el contador de entidades.
 452  897F CD 9D 8B     	call Inicia_entidad
 453  8982 C1           	pop bc
 454  8983 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 455  8985
 456  8985              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 457  8985              ; (Esto se dá cuando se inicia una nueva oleada).
 458  8985
 459  8985 3A 17 89     	ld a,(Ctrl_1)
 460  8988 CB 5F        	bit 3,a
 461  898A 20 1B        	jr nz,5F											; Loop
 462  898C
 463  898C              ; 	INICIA AMADEUS !!!!!
 464  898C
 465  898C CD CE 8D     3 call Restore_Amadeus
 466  898F CD 24 8D     	call Inicia_Puntero_objeto
 467  8992 CD 9A 93     	call Draw
 468  8995 CD A0 7F     	call Guarda_foto_registros
 469  8998 CD 4B 8E     	call Guarda_datos_de_borrado_Amadeus
 470  899B
 471  899B 11 7E 85     	ld de,Amadeus_db
 472  899E CD E0 8D     	call Store_Amadeus
 473  89A1
 474  89A1              ; 	INICIA DISPAROS !!!!!
 475  89A1
 476  89A1 CD 9C 8C     	call Inicia_Puntero_Disparo_Entidades
 477  89A4 CD A3 8C     	call Inicia_Puntero_Disparo_Amadeus
 478  89A7
 479  89A7              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 480  89A7
 481  89A7 CD 86 8C     5 call Inicia_punteros_de_cajas
 482  89AA CD A7 8D     	call Restore_entidad
 483  89AD
 484  89AD 3A 17 89     	ld a,(Ctrl_1)
 485  89B0 CB 5F        	bit 3,a
 486  89B2 28 07        	jr z,6F
 487  89B4
 488  89B4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 489  89B4
 490  89B4 21 17 89     	ld hl,Ctrl_1
 491  89B7 CB 9E        	res 3,(hl)
 492  89B9 18 07        	jr Main
 493  89BB
 494  89BB              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 495  89BB
 496  89BB 21 36 89     6 ld hl,Ctrl_3
 497  89BE CB C6        	set 0,(hl)											; Frame completo.
 498  89C0 FB           	ei
 499  89C1 76           	halt
 500  89C2
 501  89C2              ; ------------------------------------
 502  89C2
 503  89C2              Main
 504  89C2              ;
 505  89C2              ;	11/12/23
 506  89C2
 507  89C2              ; Aparece nueva entidad ???
 508  89C2
 509  89C2              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 510  89C2              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 511  89C2              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 512  89C2              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 513  89C2              ;														; _un 2º bloque.
 514  89C2
 515  89C2 3A 4B 89     	ld a,(Clock_Entidades_en_curso)
 516  89C5 47           	ld b,a
 517  89C6 3A 48 89     	ld a,(Contador_de_frames)
 518  89C9 B8           	cp b
 519  89CA 20 18        	jr nz,13F
 520  89CC
 521  89CC              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 522  89CC              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 523  89CC              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 524  89CC              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 525  89CC
 526  89CC              ;	inc a
 527  89CC              ;	cp b
 528  89CC              ;	jr nz,13F
 529  89CC
 530  89CC
 531  89CC              ;23 ld (Contador_de_frames),a
 532  89CC
 533  89CC              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 534  89CC              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 535  89CC
 536  89CC 3A 21 89     21 ld a,(Numero_parcial_de_entidades)
 537  89CF 47           	ld b,a
 538  89D0 3A 22 89     	ld a,(Entidades_en_curso)
 539  89D3 B8           	cp b
 540  89D4 28 0E        	jr z,13F
 541  89D6 30 0C        	jr nc,13F
 542  89D8
 543  89D8              ; --- --- --- --- ---
 544  89D8
 545  89D8 3C           	inc a
 546  89D9 32 22 89     	ld (Entidades_en_curso),a
 547  89DC
 548  89DC              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 549  89DC
 550  89DC 3A 4B 89     	ld a,(Clock_Entidades_en_curso)
 551  89DF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 552  89DF              ;! _ IMPREDECIBLE !!!!
 553  89DF C6 32        	add 50
 554  89E1 32 4B 89     	ld (Clock_Entidades_en_curso),a
 555  89E4
 556  89E4              ; -------------------------------------------------------------------------------------------------------------
 557  89E4
 558  89E4              ; Habilita disparos.
 559  89E4
 560  89E4 21 4D 89     13 ld hl,Disparo_Amadeus
 561  89E7 11 4F 89     	ld de,CLOCK_repone_disparo_Amadeus
 562  89EA CD 8F 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 563  89ED
 564  89ED 21 50 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 565  89F0 11 52 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 566  89F3 CD 8F 9D     	call Habilita_disparos
 567  89F6
 568  89F6              ; COLISIONES.
 569  89F6
 570  89F6 CD 9A 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 571  89F9
 572  89F9              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 573  89F9              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 574  89F9              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 575  89F9
 576  89F9 AF           	xor a
 577  89FA 32 3C 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 578  89FD
 579  89FD CD 86 8C     	call Inicia_punteros_de_cajas
 580  8A00 CD A7 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 581  8A03              ; 														; _ en DRAW.
 582  8A03 3A D4 88     	ld a,(Filas)
 583  8A06 A7           	and a
 584  8A07 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 585  8A09 CD B9 8D     	call Incrementa_punteros_de_cajas
 586  8A0C 18 F2        	jr 12B
 587  8A0E
 588  8A0E              ; ---------------------------------------------------------------------------------------
 589  8A0E
 590  8A0E 3A 21 89     10 ld a,(Numero_parcial_de_entidades)
 591  8A11 47               ld b,a
 592  8A12 A7           	and a
 593  8A13 20 14        	jr nz,11F
 594  8A15
 595  8A15 21 17 89     	ld hl,Ctrl_1
 596  8A18 CB 66        	bit 4,(hl)
 597  8A1A C2 C2 8A     	jp nz,16F
 598  8A1D
 599  8A1D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 600  8A1D
 601  8A1D 21 17 89     	ld hl,Ctrl_1
 602  8A20 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 603  8A22
 604  8A22 3A 48 89     	ld a,(Contador_de_frames)
 605  8A25 3C           	inc a
 606  8A26 32 4C 89     	ld (Activa_recarga_cajas),a
 607  8A29
 608  8A29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 609  8A29
 610  8A29 3A 22 89     11 ld a,(Entidades_en_curso)
 611  8A2C A7           	and a
 612  8A2D CA C2 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 613  8A30 47           	ld b,a												; No hay entidades que gestionar.
 614  8A31
 615  8A31              ; ( Código que ejecutamos con cada entidad: ).
 616  8A31
 617  8A31              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 618  8A31
 619  8A31 C5           15 push bc 												; Nº de entidades en curso.
 620  8A32
 621  8A32              ; Existe "Entidad_guía" ???.
 622  8A32              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 623  8A32
 624  8A32 3A 36 89     	ld a,(Ctrl_3)
 625  8A35 CB 4F        	bit 1,a
 626  8A37 20 11        	jr nz,22F
 627  8A39
 628  8A39              ; Almacén de "Movimientos_masticados" lleno ???
 629  8A39              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 630  8A39              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 631  8A39
 632  8A39 3A 36 89     	ld a,(Ctrl_3)
 633  8A3C CB 57        	bit 2,a
 634  8A3E 20 0A        	jr nz,22F
 635  8A40
 636  8A40              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 637  8A40
 638  8A40 21 15 89     	ld hl,Ctrl_2
 639  8A43 CB EE        	set 5,(hl)
 640  8A45 21 36 89     	ld hl,Ctrl_3
 641  8A48 CB CE        	set 1,(hl)
 642  8A4A
 643  8A4A              ; Impacto ???
 644  8A4A
 645  8A4A 3A ED 88     22 ld a,(Impacto)
 646  8A4D A7           	and a
 647  8A4E 28 31        	jr z,8F
 648  8A50
 649  8A50              ; Hay Impacto en esta entidad.
 650  8A50
 651  8A50 21 4A 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 652  8A53 35           	dec (hl)
 653  8A54 C2 B5 8A     	jp nz,17F
 654  8A57
 655  8A57              ;! Velocidad de la animación de la explosión.
 656  8A57
 657  8A57 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 658  8A59              ;														; _,(velocidad de la explosión).
 659  8A59
 660  8A59              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 661  8A59
 662  8A59 CD 6B 8E     	call Repone_datos_de_borrado
 663  8A5C CD C4 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 664  8A5F
 665  8A5F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 666  8A5F
 667  8A5F 3A 15 89     	ld a,(Ctrl_2)
 668  8A62 CB 4F        	bit 1,a
 669  8A64 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 670  8A66
 671  8A66              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 672  8A66
 673  8A66 3A DC 88     	ld a,(CTRL_DESPLZ)
 674  8A69 A7           	and a
 675  8A6A 20 08        	jr nz,18F
 676  8A6C
 677  8A6C 21 84 84     	ld hl,Indice_Explosion_2x2-2
 678  8A6F 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 679  8A72 18 06        	jr 19F
 680  8A74
 681  8A74 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 682  8A77 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 683  8A7A
 684  8A7A 21 15 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 685  8A7D CB CE        	set 1,(hl)
 686  8A7F 18 22        	jr 7F
 687  8A81
 688  8A81              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 689  8A81              ; _con las coordenadas de la entidad almacenada en DRAW.
 690  8A81
 691  8A81 3A 17 89     8 ld a,(Ctrl_1)
 692  8A84 CB 57        	bit 2,a
 693  8A86 28 1B        	jr z,7F
 694  8A88
 695  8A88 2A 3F 89     	ld hl,(Coordenadas_disparo_certero)
 696  8A8B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 697  8A8C              ;														; E contiene la coordenada_X del disparo.
 698  8A8C 2A DA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 699  8A8F              ;														; H FILA, (Coordenada_y de la entidad).
 700  8A8F A7           	and a
 701  8A90 ED 52        	sbc hl,de
 702  8A92
 703  8A92 CD B3 92     	call Determina_resultado_comparativa
 704  8A95
 705  8A95 78           	ld a,b
 706  8A96 A7           	and a
 707  8A97 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 708  8A99
 709  8A99              ; ----- ----- -----
 710  8A99
 711  8A99 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 712  8A9B 32 ED 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 713  8A9E
 714  8A9E 21 17 89     	ld hl,Ctrl_1
 715  8AA1 CB 96        	res 2,(hl)
 716  8AA3
 717  8AA3 CD 13 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 718  8AA6
 719  8AA6 3A 04 89     	ld a,(Ctrl_0)
 720  8AA9 CB 67        	bit 4,a
 721  8AAB 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 722  8AAD
 723  8AAD              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 724  8AAD              ; [[[
 725  8AAD              ;	call Detecta_disparo_entidad
 726  8AAD              ; ]]]
 727  8AAD
 728  8AAD CD 06 8C     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 729  8AB0
 730  8AB0 21 04 89     	ld hl,Ctrl_0
 731  8AB3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 732  8AB5
 733  8AB5 CD 6C 8D     17 call Store_Restore_cajas
 734  8AB8
 735  8AB8 C1           	pop bc
 736  8AB9
 737  8AB9 05           	dec b
 738  8ABA C2 31 8A     	jp nz,15B
 739  8ABD
 740  8ABD              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 741  8ABD              ; Hemos gestionado todas las unidades.
 742  8ABD              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 743  8ABD
 744  8ABD 21 17 89     	ld hl,Ctrl_1
 745  8AC0 CB 96        	res 2,(hl)
 746  8AC2
 747  8AC2 21 36 89     16 ld hl,Ctrl_3
 748  8AC5 CB C6        	set 0,(hl)											; Frame completo.
 749  8AC7 AF           	xor a
 750  8AC8 D3 FE        	out ($fe),a
 751  8ACA FB           	ei
 752  8ACB 76           	halt
 753  8ACC
 754  8ACC              ; ----------------------------------------
 755  8ACC
 756  8ACC 3A 17 89     	ld a,(Ctrl_1) 										; Existe Loop?
 757  8ACF CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 758  8AD1 CA C2 89     	jp z,Main
 759  8AD4
 760  8AD4              ; RECARGA DE NUEVA OLEADA.
 761  8AD4
 762  8AD4 3A 48 89     	ld a,(Contador_de_frames)
 763  8AD7 47           	ld b,a
 764  8AD8 3A 4C 89     	ld a,(Activa_recarga_cajas)
 765  8ADB B8           	cp b
 766  8ADC 28 08        	jr z,20F
 767  8ADE
 768  8ADE 21 17 89     	ld hl,Ctrl_1
 769  8AE1 CB E6        	set 4,(hl)
 770  8AE3 C3 C2 89     	jp Main
 771  8AE6
 772  8AE6 21 17 89     20 ld hl,Ctrl_1
 773  8AE9 CB A6        	res 4,(hl)
 774  8AEB
 775  8AEB 3A 48 89     	ld a,(Contador_de_frames)
 776  8AEE
 777  8AEE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 778  8AEE              ;! _ IMPREDECIBLE !!!!
 779  8AEE
 780  8AEE C6 0A        	add 10
 781  8AF0 32 4B 89     	ld (Clock_Entidades_en_curso),a
 782  8AF3
 783  8AF3 C3 6D 89     	jp 4B
 784  8AF6
 785  8AF6 C9           	ret
 786  8AF7
 787  8AF7              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 788  8AF7              ;
 789  8AF7              ;	16/11/23
 790  8AF7
 791  8AF7              Gestiona_Amadeus
 792  8AF7
 793  8AF7              ;! Activa/desactiva impacto con Amadeus.
 794  8AF7
 795  8AF7              ;	ld a,(Impacto)
 796  8AF7              ;	and a
 797  8AF7              ;	jr nz,2F
 798  8AF7
 799  8AF7 CD 8A 8B     	call Mov_Amadeus
 800  8AFA
 801  8AFA 3A 04 89     2 ld a,(Ctrl_0)
 802  8AFD CB 67        	bit 4,a
 803  8AFF 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 804  8B01
 805  8B01 CD 06 8C     	call Guarda_foto_entidad_a_pintar
 806  8B04 CD 4B 8E     	call Guarda_datos_de_borrado_Amadeus
 807  8B07
 808  8B07 21 04 89     1 ld hl,Ctrl_0
 809  8B0A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 810  8B0C
 811  8B0C CD 3E 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 812  8B0F
 813  8B0F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 814  8B0F
 815  8B0F CD 06 8D     	call Calcula_numero_de_disparotes
 816  8B12
 817  8B12 C9           	ret
 818  8B13
 819  8B13              ; --------------------------------------------------------------------------------------------------------------
 820  8B13              ;
 821  8B13              ;	15/12/23
 822  8B13
 823  8B13              Mov_obj
 824  8B13
 825  8B13 3A 15 89     	ld a,(Ctrl_2)
 826  8B16 CB 4F        	bit 1,a
 827  8B18 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 828  8B1A
 829  8B1A              ; Explosión:
 830  8B1A
 831  8B1A 3A 16 89     	ld a,(Frames_explosion)
 832  8B1D A7           	and a
 833  8B1E 20 1D        	jr nz,4F
 834  8B20
 835  8B20              ; Una alimaña menos!!!!!!!!!1
 836  8B20
 837  8B20              ; Se trataba de una Entidad_guía ???
 838  8B20
 839  8B20 3A 15 89     	ld a,(Ctrl_2)
 840  8B23 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 841  8B25 28 05        	jr z,5F
 842  8B27
 843  8B27 21 36 89     	ld hl,Ctrl_3
 844  8B2A CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 845  8B2C
 846  8B2C CD E9 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 847  8B2F 21 21 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 848  8B32 35           	dec (hl)
 849  8B33 21 22 89     	ld hl,Entidades_en_curso
 850  8B36 35           	dec (hl)
 851  8B37 21 20 89     	ld hl,Numero_de_entidades
 852  8B3A 35           	dec (hl)
 853  8B3B 18 4C        	jr 3F
 854  8B3D
 855  8B3D              ; -----
 856  8B3D
 857  8B3D              ;	`Movemos´ la explosión.
 858  8B3D
 859  8B3D 2A E2 88     4 ld hl,(Puntero_DESPLZ_der)
 860  8B40 23           	inc hl
 861  8B41 23           	inc hl
 862  8B42 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 863  8B45 CD 1E 8D     	call Extrae_address
 864  8B48 22 D8 88     	ld (Puntero_objeto),hl
 865  8B4B
 866  8B4B 21 16 89     	ld hl,Frames_explosion
 867  8B4E 35           	dec (hl)
 868  8B4F
 869  8B4F 21 04 89     	ld hl,Ctrl_0
 870  8B52 CB E6        	set 4,(hl)
 871  8B54
 872  8B54 18 33        	jr 3F
 873  8B56
 874  8B56              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 875  8B56
 876  8B56 AF           2 xor a
 877  8B57 32 04 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 878  8B5A
 879  8B5A              ; Movemos Entidades malignas.
 880  8B5A              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 881  8B5A
 882  8B5A 3A 15 89     	ld a,(Ctrl_2)
 883  8B5D CB 6F        	bit 5,a
 884  8B5F 20 07        	jr nz,8F
 885  8B61
 886  8B61 21 04 89     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 887  8B64 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 888  8B66 18 09        	jr 7F
 889  8B68
 890  8B68 CD 3A 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 891  8B6B
 892  8B6B 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 893  8B6E CB 67        	bit 4,a
 894  8B70 C8           	ret z
 895  8B71
 896  8B71              ; Ha habido desplazamiento de la entidad maligna.
 897  8B71              ; Ha llegado a zona de AMADEUS ???
 898  8B71
 899  8B71 3A DB 88     7 ld a,(Coordenada_y)
 900  8B74 FE 14        	cp $14
 901  8B76 38 08        	jr c,1F
 902  8B78
 903  8B78              ; ---------
 904  8B78
 905  8B78              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 906  8B78              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 907  8B78
 908  8B78 F3           	di
 909  8B79 CD 63 90     	call Genera_coordenadas_X
 910  8B7C CD 9F 90     	call Compara_coordenadas_X
 911  8B7F FB           	ei
 912  8B80
 913  8B80              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 914  8B80
 915  8B80              ; ---------
 916  8B80
 917  8B80 CD 6E 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 918  8B83 CD 6B 8E     	call Repone_datos_de_borrado 							; BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 919  8B86 CD C4 8C     	call Limpia_Variables_de_borrado
 920  8B89
 921  8B89 C9           3 ret
 922  8B8A
 923  8B8A              ; --------------------------------------------------------------------------------------------------------------
 924  8B8A              ;
 925  8B8A              ;	29/1/23
 926  8B8A
 927  8B8A              Mov_Amadeus
 928  8B8A
 929  8B8A CD 0B 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 930  8B8D
 931  8B8D 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 932  8B90 CB 67        	bit 4,a
 933  8B92 C8           	ret z
 934  8B93
 935  8B93              ; ---------
 936  8B93
 937  8B93 CD 6E 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 938  8B96 CD 5B 8E     	call Repone_datos_de_borrado_Amadeus
 939  8B99 CD C4 8C     	call Limpia_Variables_de_borrado
 940  8B9C
 941  8B9C C9           	ret
 942  8B9D
 943  8B9D              ; -----------------------------------------------------------------------------------
 944  8B9D              ;
 945  8B9D              ;	12/12/23
 946  8B9D              ;
 947  8B9D              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 948  8B9D
 949  8B9D              Inicia_entidad
 950  8B9D
 951  8B9D CD D8 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 952  8BA0 CD 24 8D     	call Inicia_Puntero_objeto
 953  8BA3 CD BB 99     	call Recompone_posicion_inicio
 954  8BA6 CD 9A 93     	call Draw
 955  8BA9 CD B4 8B     	call Guarda_movimiento_masticado
 956  8BAC CD A0 7F     	call Guarda_foto_registros
 957  8BAF F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 958  8BB0              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 959  8BB0              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 960  8BB0 CD 6C 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 961  8BB3 C9           	ret
 962  8BB4
 963  8BB4
 964  8BB4              ; -----------------------------------------------------------------------------------
 965  8BB4              ;
 966  8BB4              ;	21/12/23
 967  8BB4              ;
 968  8BB4              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} si se trata de una "entidad_guía".
 969  8BB4              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 970  8BB4
 971  8BB4 3A 15 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 972  8BB7 CB 6F        	bit 5,a
 973  8BB9 C8           	ret z 												; Salimos si NO se trata de una entidad guía.
 974  8BBA
 975  8BBA ED 73 28 89  	ld (Stack),sp
 976  8BBE ED 7B 00 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)		; Guardamos el movimiento masticado en el almacén.
 977  8BC2
 978  8BC2 E5           	push hl
 979  8BC3 DD E5            push ix
 980  8BC5 FD E5            push iy
 981  8BC7
 982  8BC7 ED 7B 28 89      ld sp,(Stack)
 983  8BCB
 984  8BCB E5               push hl
 985  8BCC
 986  8BCC 2A 02 89        	ld hl,(Contador_de_mov_masticados)					; Incrementa en una unidad el (Contador_de_mov_masticados).
 987  8BCF 23           	inc hl
 988  8BD0 22 02 89     	ld (Contador_de_mov_masticados),hl
 989  8BD3
 990  8BD3 E1           	pop hl
 991  8BD4
 992  8BD4 CD EF 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados ; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 993  8BD7              ;														; _ el (Contador_de_mov_masticados).
 994  8BD7 C9               ret
 995  8BD8
 996  8BD8              ; --------------------------------------------------------------------------------------------------------------
 997  8BD8              ;
 998  8BD8              ;	12/12/23
 999  8BD8              ;
1000  8BD8
1001  8BD8              Inicia_entidad_guia
1002  8BD8
1003  8BD8              ; Existe "Entidad_guía" ???
1004  8BD8
1005  8BD8 3A 36 89     	ld a,(Ctrl_3)
1006  8BDB CB 4F        	bit 1,a
1007  8BDD C0           	ret nz
1008  8BDE
1009  8BDE              ; Inicia Entidad_guía:
1010  8BDE
1011  8BDE 21 15 89     	ld hl,Ctrl_2
1012  8BE1 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1013  8BE3 21 36 89     	ld hl,Ctrl_3
1014  8BE6 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1015  8BE8
1016  8BE8 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados+6
1017  8BEB 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1018  8BEE
1019  8BEE C9           	ret
1020  8BEF
1021  8BEF              ; --------------------------------------------------------------------------------------------------------------
1022  8BEF              ;
1023  8BEF              ;	21/12/23
1024  8BEF              ;
1025  8BEF
1026  8BEF              Actualiza_Puntero_de_almacen_de_mov_masticados
1027  8BEF
1028  8BEF              ;	Entidad_guía ???
1029  8BEF
1030  8BEF 3A 15 89     	ld a,(Ctrl_2)
1031  8BF2 CB 6F        	bit 5,a
1032  8BF4 C8           	ret z												; Salimos si NO se trata de una entidad guía.
1033  8BF5
1034  8BF5 E5           	push hl
1035  8BF6 C5           	push bc
1036  8BF7
1037  8BF7 2A 00 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1038  8BFA 01 06 00     	ld bc,6
1039  8BFD A7           	and a
1040  8BFE ED 4A        	adc hl,bc
1041  8C00 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1042  8C03
1043  8C03 C1           	pop bc
1044  8C04 E1           	pop hl
1045  8C05
1046  8C05 C9           	ret
1047  8C06
1048  8C06              ; --------------------------------------------------------------------------------------------------------------
1049  8C06              ;
1050  8C06              ;	31/08/23
1051  8C06              ;
1052  8C06              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1053  8C06              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1054  8C06
1055  8C06              Guarda_foto_entidad_a_pintar
1056  8C06
1057  8C06              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1058  8C06
1059  8C06 3A 04 89     	ld a,(Ctrl_0)
1060  8C09 CB 77        	bit 6,a
1061  8C0B 28 07        	jr z,5F
1062  8C0D
1063  8C0D              ; Guarda la foto de Amadeus.
1064  8C0D
1065  8C0D CD 9A 93     	call Draw
1066  8C10 CD A0 7F     	call Guarda_foto_registros
1067  8C13
1068  8C13 C9           	ret
1069  8C14
1070  8C14              ; ENTIDADES!
1071  8C14              ; Está lleno el {Almacen_de_movimientos_masticados}. ?
1072  8C14
1073  8C14 3A 36 89     5 ld a,(Ctrl_3)
1074  8C17 CB 5F        	bit 3,a
1075  8C19 28 04        	jr z,1F
1076  8C1B
1077  8C1B              ; {Almacen_de_movimientos_masticados} lleno. Se trata de una "ENTIDAD_FANTASMA".
1078  8C1B
1079  8C1B CD 40 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1080  8C1E
1081  8C1E C9           	ret
1082  8C1F
1083  8C1F              ; Entidad_guía o fantasma ???
1084  8C1F
1085  8C1F 3A 15 89     1 ld a,(Ctrl_2)
1086  8C22 CB 6F        	bit 5,a
1087  8C24 20 02        	jr nz,2F
1088  8C26
1089  8C26              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1090  8C26
1091  8C26 18 F3        	jr 4B
1092  8C28
1093  8C28              ; ENTIDAD_GUÍA:
1094  8C28              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1095  8C28              ; _guardando "movimientos_masticados".
1096  8C28
1097  8C28 3A 36 89     2 ld a,(Ctrl_3)
1098  8C2B CB 57        	bit 2,a
1099  8C2D 28 07        	jr z,3F
1100  8C2F
1101  8C2F              ; Hemos completado todos los movimientos masticados.
1102  8C2F
1103  8C2F CB 97        	res 2,a
1104  8C31 CB DF        	set 3,a
1105  8C33 32 36 89     	ld (Ctrl_3),a
1106  8C36
1107  8C36 CD 9A 93     3 call Draw
1108  8C39 CD B4 8B     	call Guarda_movimiento_masticado
1109  8C3C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1110  8C3F
1111  8C3F C9           	ret
1112  8C40
1113  8C40              ; --------------------------------------------------------------------------------------------------------------
1114  8C40              ;
1115  8C40              ;	17/12/23
1116  8C40
1117  8C40 ED 73 28 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1118  8C44 ED 7B 00 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1119  8C48
1120  8C48 FD E1        	pop iy
1121  8C4A DD E1        	pop ix
1122  8C4C E1           	pop hl
1123  8C4D
1124  8C4D ED 73 00 89  	ld (Puntero_de_almacen_de_mov_masticados),sp
1125  8C51 ED 7B 28 89  	ld sp,(Stack)
1126  8C55
1127  8C55 CD A0 7F     	call Guarda_foto_registros
1128  8C58
1129  8C58 E5           	push hl
1130  8C59
1131  8C59 2A 02 89     	ld hl,(Contador_de_mov_masticados)
1132  8C5C 2B           	dec hl
1133  8C5D 22 02 89     	ld (Contador_de_mov_masticados),hl
1134  8C60
1135  8C60 24           	inc h
1136  8C61 25           	dec h
1137  8C62 20 08        	jr nz,1F
1138  8C64 2C           	inc l
1139  8C65 2D           	dec l
1140  8C66 20 04        	jr nz,1F
1141  8C68
1142  8C68 F3           	di
1143  8C69 18 FE        	jr $
1144  8C6B FB           	ei
1145  8C6C
1146  8C6C E1           1 pop hl
1147  8C6D
1148  8C6D C9           	ret
1149  8C6E
1150  8C6E              ; --------------------------------------------------------------------------------------------------------------
1151  8C6E              ;
1152  8C6E              ;	19/9/23
1153  8C6E
1154  8C6E 21 D4 88     Prepara_var_pintado ld hl,Filas
1155  8C71 11 F4 88     	ld de,Variables_de_pintado
1156  8C74 01 08 00     	ld bc,8
1157  8C77 ED B0        	ldir
1158  8C79 C9           	ret
1159  8C7A
1160  8C7A              ; --------------------------------------------------------------------------------------------------------------
1161  8C7A
1162  8C7A 21 F4 88     Repone_pintar ld hl,Variables_de_pintado
1163  8C7D 11 D4 88     	ld de,Filas
1164  8C80 01 08 00     	ld bc,8
1165  8C83 ED B0        	ldir
1166  8C85 C9           	ret
1167  8C86
1168  8C86              ; *************************************************************************************************************************************************************
1169  8C86              ;
1170  8C86              ; 8/1/23
1171  8C86              ;
1172  8C86              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1173  8C86              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1174  8C86              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1175  8C86
1176  8C86              ; Destruye HL y DE !!!!!
1177  8C86
1178  8C86              Inicia_punteros_de_cajas
1179  8C86
1180  8C86 21 6C 85     	ld hl,Indice_de_cajas
1181  8C89 CD 1E 8D         call Extrae_address
1182  8C8C 22 1A 89         ld (Puntero_store_caja),hl
1183  8C8F 21 6E 85     	ld hl,Indice_de_cajas+2
1184  8C92 22 1E 89     	ld (Indice_restore_caja),hl
1185  8C95 CD 1E 8D     	call Extrae_address
1186  8C98 22 1C 89     	ld (Puntero_restore_caja),hl
1187  8C9B C9               ret
1188  8C9C
1189  8C9C              ; *************************************************************************************************************************************************************
1190  8C9C              ;
1191  8C9C              ; 8/1/23
1192  8C9C              ;
1193  8C9C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1194  8C9C
1195  8C9C 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1196  8C9F 22 38 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1197  8CA2 C9           	ret
1198  8CA3 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1199  8CA6 22 3A 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1200  8CA9 C9           	ret
1201  8CAA
1202  8CAA              ; -------------------------------------------------------------------------------------------------------------
1203  8CAA              ;
1204  8CAA              ; 21/9/23
1205  8CAA              ;
1206  8CAA
1207  8CAA              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1208  8CAA
1209  8CAA              Limpia_album_Amadeus
1210  8CAA
1211  8CAA 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1212  8CAD 7E           	ld a,(hl)
1213  8CAE A7           	and a
1214  8CAF C8           	ret z
1215  8CB0
1216  8CB0 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1217  8CB3 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1218  8CB6 01 0B 00     	ld bc,11
1219  8CB9 AF           	xor a
1220  8CBA 77           	ld (hl),a
1221  8CBB ED B0        	ldir
1222  8CBD
1223  8CBD 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1224  8CC0 22 34 89     	ld (End_Snapshot_Amadeus),hl
1225  8CC3
1226  8CC3 C9           	ret
1227  8CC4
1228  8CC4 21 EE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1229  8CC7 11 EF 88     	ld de,Variables_de_borrado+1
1230  8CCA 01 05 00     	ld bc,5
1231  8CCD AF           	xor a
1232  8CCE 77           	ld (hl),a
1233  8CCF ED B0        	ldir
1234  8CD1 C9           	ret
1235  8CD2
1236  8CD2              ; -------------------------------------------------------------------------------------------------------------
1237  8CD2              ;
1238  8CD2              ; 8/9/23
1239  8CD2              ;
1240  8CD2
1241  8CD2              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1242  8CD2              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1243  8CD2
1244  8CD2              Calcula_numero_de_malotes
1245  8CD2
1246  8CD2 21 00 70     	ld hl,Album_de_fotos
1247  8CD5 EB           	ex de,hl
1248  8CD6 2A 2E 89     	ld hl,(Stack_snapshot)
1249  8CD9
1250  8CD9 06 00        	ld b,0
1251  8CDB 7D           	ld a,l
1252  8CDC 93           	sub e
1253  8CDD 28 07        	jr z,1F
1254  8CDF
1255  8CDF              ; Nº de malotes no es "0".
1256  8CDF
1257  8CDF D6 06        2 sub 6
1258  8CE1 04           	inc b
1259  8CE2 A7           	and a
1260  8CE3 20 FA        	jr nz,2B
1261  8CE5 78           	ld a,b
1262  8CE6
1263  8CE6 32 23 89     1 ld (Numero_de_malotes),a
1264  8CE9 C9           	ret
1265  8CEA
1266  8CEA              ; -------------------------------------------------------------------------------------------------------------
1267  8CEA              ;
1268  8CEA              ; 8/9/23
1269  8CEA              ;
1270  8CEA
1271  8CEA              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1272  8CEA              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1273  8CEA
1274  8CEA              Calcula_malotes_Amadeus
1275  8CEA
1276  8CEA 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1277  8CED EB           	ex de,hl
1278  8CEE 2A 34 89     	ld hl,(End_Snapshot_Amadeus)
1279  8CF1
1280  8CF1 7C           	ld a,h
1281  8CF2 A7           	and a
1282  8CF3 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1283  8CF5
1284  8CF5 06 00        	ld b,0
1285  8CF7 7D           	ld a,l
1286  8CF8 93           	sub e
1287  8CF9 28 07        	jr z,1F
1288  8CFB
1289  8CFB              ; Nº de malotes no es "0".
1290  8CFB
1291  8CFB D6 06        2 sub 6
1292  8CFD 04           	inc b
1293  8CFE A7           	and a
1294  8CFF 20 FA        	jr nz,2B
1295  8D01 78           	ld a,b
1296  8D02
1297  8D02 32 23 89     1 ld (Numero_de_malotes),a
1298  8D05 C9           	ret
1299  8D06
1300  8D06              ; -------------------------------------------------------------------------------------------------------------
1301  8D06              ;
1302  8D06              ; 28/2/23
1303  8D06              ;
1304  8D06
1305  8D06              Calcula_numero_de_disparotes
1306  8D06
1307  8D06 21 56 70     	ld hl,Album_de_fotos_disparos
1308  8D09 EB           	ex de,hl
1309  8D0A 2A 32 89     	ld hl,(End_Snapshot_disparos)
1310  8D0D
1311  8D0D 06 00        	ld b,0
1312  8D0F 7D           	ld a,l
1313  8D10 93           	sub e
1314  8D11 28 07        	jr z,1F
1315  8D13
1316  8D13              ; Nº de malotes no es "0".
1317  8D13
1318  8D13 D6 06        2 sub 6
1319  8D15 04           	inc b
1320  8D16 A7           	and a
1321  8D17 20 FA        	jr nz,2B
1322  8D19 78           	ld a,b
1323  8D1A
1324  8D1A 32 37 89     1 ld (Numero_de_disparotes),a
1325  8D1D C9           	ret
1326  8D1E
1327  8D1E              ; *************************************************************************************************************************************************************
1328  8D1E              ;
1329  8D1E              ; 20/10/22
1330  8D1E              ;
1331  8D1E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1332  8D1E              ;
1333  8D1E              ; Destruye el puntero y DE !!!!!
1334  8D1E
1335  8D1E 5E           Extrae_address ld e,(hl)
1336  8D1F 23           	inc hl
1337  8D20 56           	ld d,(hl)
1338  8D21 2B           	dec hl
1339  8D22 EB           	ex de,hl
1340  8D23 C9           	ret
1341  8D24
1342  8D24              ; *************************************************************************************************************************************************************
1343  8D24              ;
1344  8D24              ;	7/2/23
1345  8D24              ;
1346  8D24              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1347  8D24              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1348  8D24              ;
1349  8D24              ;   Destruye HL y BC !!!!!,
1350  8D24              ;
1351  8D24              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1352  8D24              ;					"0" ..... Izquierda.
1353  8D24
1354  8D24              Inicia_Puntero_objeto
1355  8D24
1356  8D24 3A E8 88     	ld a,(Cuad_objeto)
1357  8D27 E6 01        	and 1
1358  8D29 F5           	push af
1359  8D2A CC 48 8D     	call z,Inicia_puntero_objeto_izq
1360  8D2D F1           	pop af
1361  8D2E 28 2B        	jr z,1F
1362  8D30 CD 35 8D     	call Inicia_puntero_objeto_der
1363  8D33 18 26        	jr 1F
1364  8D35
1365  8D35              ; Arrancamos desde la parte izquierda de la pantalla.
1366  8D35              ; Iniciamos (Indice_Sprite_der).
1367  8D35
1368  8D35 2A DE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1369  8D38 22 E2 88     	ld (Puntero_DESPLZ_der),hl
1370  8D3B CD 1E 8D     	call Extrae_address
1371  8D3E 22 D8 88     	ld (Puntero_objeto),hl
1372  8D41
1373  8D41 2A E0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1374  8D44 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
1375  8D47 C9           	ret
1376  8D48
1377  8D48              ; Arrancamos desde la parte derecha de la pantalla.
1378  8D48              ; Iniciamos (Indice_Sprite_izq).
1379  8D48
1380  8D48 2A E0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1381  8D4B 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
1382  8D4E CD 1E 8D     	call Extrae_address
1383  8D51 22 D8 88     	ld (Puntero_objeto),hl
1384  8D54
1385  8D54 2A DE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1386  8D57 22 E2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1387  8D5A C9           	ret
1388  8D5B
1389  8D5B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1390  8D5B
1391  8D5B 21 40 83     1 ld hl,Amadeus
1392  8D5E ED 4B D8 88  	ld bc,(Puntero_objeto)
1393  8D62 B7 ED 42     	sub hl,bc
1394  8D65 C0           	ret nz
1395  8D66 21 04 89     	ld hl,Ctrl_0
1396  8D69 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1397  8D6B C9           	ret 												; _de nuestra nave en los extremos.
1398  8D6C
1399  8D6C              ; *************************************************************************************************************************************************************
1400  8D6C              ;
1401  8D6C              ;	21/12/23
1402  8D6C              ;
1403  8D6C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1404  8D6C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1405  8D6C
1406  8D6C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1407  8D6C              ;	_de la 2ª y 3ª entidad respectivamente.
1408  8D6C
1409  8D6C              Store_Restore_cajas
1410  8D6C
1411  8D6C E5           	push hl
1412  8D6D D5           	push de
1413  8D6E C5            	push bc
1414  8D6F
1415  8D6F              ;	STORE !!!!!
1416  8D6F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1417  8D6F
1418  8D6F 21 D4 88     	ld hl,Filas
1419  8D72 ED 5B 1A 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1420  8D76 01 43 00     	ld bc,67
1421  8D79 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1422  8D7B
1423  8D7B              ; 	Entidad_sospechosa. 20/4/23
1424  8D7B
1425  8D7B 3A ED 88     	ld a,(Impacto)
1426  8D7E A7           	and a
1427  8D7F 28 0C        	jr z,1F
1428  8D81
1429  8D81 2A 1A 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1430  8D84 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1431  8D87 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1432  8D88 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1433  8D8A 22 3D 89     	ld (Entidad_sospechosa_de_colision),hl
1434  8D8D
1435  8D8D              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1436  8D8D
1437  8D8D 2A 1C 89     1 ld hl,(Puntero_restore_caja)
1438  8D90 7E           	ld a,(hl)
1439  8D91 A7           	and a
1440  8D92 F5           	push af
1441  8D93 28 08        	jr z,2F
1442  8D95
1443  8D95 11 D4 88     	ld de,Filas
1444  8D98 01 43 00     	ld bc,67
1445  8D9B ED B0        	ldir
1446  8D9D
1447  8D9D CD B9 8D     2 call Incrementa_punteros_de_cajas
1448  8DA0
1449  8DA0 F1           	pop af
1450  8DA1 28 EA        	jr z,1B
1451  8DA3
1452  8DA3 C1           	pop bc
1453  8DA4 D1           	pop de
1454  8DA5 E1           	pop hl
1455  8DA6
1456  8DA6 C9           	ret
1457  8DA7
1458  8DA7              ; **************************************************************************************************
1459  8DA7              ;
1460  8DA7              ;	21/12/23
1461  8DA7              ;
1462  8DA7              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1463  8DA7
1464  8DA7 E5           Restore_entidad push hl
1465  8DA8 D5           	push de
1466  8DA9 C5            	push bc
1467  8DAA
1468  8DAA 2A 1A 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1469  8DAD 11 D4 88     	ld de,Filas
1470  8DB0 01 43 00     	ld bc,67
1471  8DB3 ED B0        	ldir
1472  8DB5
1473  8DB5 C1           	pop bc
1474  8DB6 D1           	pop de
1475  8DB7 E1           	pop hl
1476  8DB8 C9           	ret
1477  8DB9
1478  8DB9              ; **************************************************************************************************
1479  8DB9              ;
1480  8DB9              ;	08/05/23
1481  8DB9              ;
1482  8DB9              ;	Incrementamos los dos punteros de entidades. (+1).
1483  8DB9
1484  8DB9              Incrementa_punteros_de_cajas
1485  8DB9
1486  8DB9 2A 1C 89     	ld hl,(Puntero_restore_caja)
1487  8DBC 22 1A 89     	ld (Puntero_store_caja),hl
1488  8DBF 2A 1E 89     	ld hl,(Indice_restore_caja)
1489  8DC2 23           	inc hl
1490  8DC3 23           	inc hl
1491  8DC4 22 1E 89     	ld (Indice_restore_caja),hl
1492  8DC7 CD 1E 8D         call Extrae_address
1493  8DCA 22 1C 89         ld (Puntero_restore_caja),hl
1494  8DCD C9               ret
1495  8DCE
1496  8DCE              ; **************************************************************************************************
1497  8DCE              ;
1498  8DCE              ;	21/12/23
1499  8DCE              ;
1500  8DCE              ;	Restore_Amadeus
1501  8DCE              ;
1502  8DCE              ;	Cargamos en DRAW los parámetros de Amadeus.
1503  8DCE              ;
1504  8DCE
1505  8DCE E5           Restore_Amadeus	push hl
1506  8DCF D5           	push de
1507  8DD0 C5            	push bc
1508  8DD1 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1509  8DD4 11 D4 88     	ld de,Filas
1510  8DD7 01 43 00     	ld bc,67
1511  8DDA ED B0        	ldir
1512  8DDC C1           	pop bc
1513  8DDD D1           	pop de
1514  8DDE E1           	pop hl
1515  8DDF C9           	ret
1516  8DE0
1517  8DE0              ; *************************************************************************************************************************************************************
1518  8DE0              ;
1519  8DE0              ;	21/12/23
1520  8DE0              ;
1521  8DE0              ;	Store_Amadeus
1522  8DE0              ;
1523  8DE0              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1524  8DE0              ;
1525  8DE0              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1526  8DE0              ;
1527  8DE0              ;	DESTRUYE: HL y BC y DE.
1528  8DE0
1529  8DE0 21 D4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1530  8DE3 01 43 00     	ld bc,67
1531  8DE6 ED B0        	ldir
1532  8DE8 C9           	ret
1533  8DE9
1534  8DE9              ; -----------------------------------------------------------
1535  8DE9              ;
1536  8DE9              ;	21/12/23
1537  8DE9              ;
1538  8DE9              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1539  8DE9              ;
1540  8DE9              ;	Destruye: HL,BC,DE,A
1541  8DE9
1542  8DE9 21 D4 88     Borra_datos_entidad ld hl,Filas
1543  8DEC 01 42 00     	ld bc,66
1544  8DEF AF           	xor a
1545  8DF0 77           	ld (hl),a
1546  8DF1 11 D5 88     	ld de,Filas+1
1547  8DF4 ED B0        	ldir
1548  8DF6 C9           	ret
1549  8DF7
1550  8DF7              ; -----------------------------------------------------------
1551  8DF7
1552  8DF7              ; Teclado.
1553  8DF7
1554  8DF7 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1555  8DF9 DB FE        	in a,($fe)
1556  8DFB E6 01        	and $01
1557  8DFD 28 02        	jr z,1f
1558  8DFF 18 F6        	jr Pulsa_ENTER
1559  8E01 C9           1 ret
1560  8E02
1561  8E02              ; **************************************************************************************************
1562  8E02              ;
1563  8E02              ; Temporización.
1564  8E02
1565  8E02              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1566  8E02              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1567  8E02              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1568  8E02              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1569  8E02
1570  8E02              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1571  8E02              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1572  8E02              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1573  8E02
1574  8E02              ; A partir de $4f61 no hace falta DELAY.
1575  8E02
1576  8E02              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1577  8E02
1578  8E02 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1579  8E05 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1580  8E06 78           	LD A,B
1581  8E07 A7           	AND A
1582  8E08 20 FB        	JR NZ,wait
1583  8E0A C9           	RET
1584  8E0B
1585  8E0B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1586  8E0B              ;
1587  8E0B              ;	5/3/23
1588  8E0B              ;
1589  8E0B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1590  8E0B
1591  8E0B              Movimiento_Amadeus
1592  8E0B
1593  8E0B              ; Disparo.
1594  8E0B
1595  8E0B 3A 4D 89     	ld a,(Disparo_Amadeus)
1596  8E0E A7           	and a
1597  8E0F 20 02        	jr nz,1F
1598  8E11 18 15        	jr 2F
1599  8E13
1600  8E13 3E F7        1 ld a,$f7													; "5" para disparar.
1601  8E15 DB FE        	in a,($fe)
1602  8E17 E6 10        	and $10
1603  8E19
1604  8E19 F5           	push af
1605  8E1A CC C6 8E     	call z,Genera_disparo
1606  8E1D F1           	pop af
1607  8E1E 20 08        	jr nz,2F
1608  8E20
1609  8E20 3A 4D 89     	ld a,(Disparo_Amadeus)
1610  8E23 EE 01        	xor 1
1611  8E25 32 4D 89     	ld (Disparo_Amadeus),a
1612  8E28 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1613  8E2A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1614  8E2C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1615  8E2E CC 99 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1616  8E31
1617  8E31 3E F7        	ld a,$f7
1618  8E33 DB FE        	in a,($fe)
1619  8E35 E6 01        	and $01
1620  8E37 C8           	ret z
1621  8E38
1622  8E38 3E F7        	ld a,$f7
1623  8E3A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1624  8E3C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1625  8E3E CC 7B 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1626  8E41 C9           	ret
1627  8E42
1628  8E42              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1629  8E42              ;
1630  8E42              ;	Rutina provisional para que los malotes cagen balas.
1631  8E42
1632  8E42              Detecta_disparo_entidad
1633  8E42
1634  8E42 3A 50 89     	ld a,(Disparo_entidad)
1635  8E45 A7           	and a
1636  8E46 C8           	ret z
1637  8E47
1638  8E47              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1639  8E47
1640  8E47              ;	ld a,$7f				; Detecta SPACE.
1641  8E47              ;	in a,($fe)
1642  8E47              ;	and 1
1643  8E47              ;	ret nz
1644  8E47
1645  8E47 CD C6 8E     	call Genera_disparo
1646  8E4A C9           	ret
1647  8E4B
1648  8E4B              ; ----------------------------------------------------------------------
1649  8E4B              ;
1650  8E4B              ;	8/9/23
1651  8E4B
1652  8E4B 2A 34 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1653  8E4E 2B            	dec hl
1654  8E4F 7E           	ld a,(hl)
1655  8E50 A7           	and a
1656  8E51 C8           	ret z										; Salimos si es álbum está vacío.
1657  8E52
1658  8E52 11 F3 88     	ld de,Variables_de_borrado+5
1659  8E55 01 06 00     	ld bc,6
1660  8E58 ED B8        	lddr
1661  8E5A C9           	ret
1662  8E5B
1663  8E5B              ; ----------------------------------------------------------------------
1664  8E5B              ;
1665  8E5B              ;	9/9/23
1666  8E5B
1667  8E5B              Repone_datos_de_borrado_Amadeus
1668  8E5B
1669  8E5B 21 EE 88     	ld hl,Variables_de_borrado
1670  8E5E 11 AC 70     	ld de,Album_de_fotos_Amadeus
1671  8E61 01 06 00     	ld bc,6
1672  8E64 ED B0        	ldir
1673  8E66
1674  8E66 EB           	ex de,hl
1675  8E67 22 34 89     	ld (End_Snapshot_Amadeus),hl
1676  8E6A
1677  8E6A C9           	ret
1678  8E6B
1679  8E6B              ; ----------------------------------------------------------------------
1680  8E6B              ;
1681  8E6B              ;	27/10/23
1682  8E6B              ;
1683  8E6B
1684  8E6B              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1685  8E6B              ;	_ Album_de_fotos correspondiente.
1686  8E6B
1687  8E6B              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1688  8E6B              ;	_ durante el proceso de escritura.
1689  8E6B
1690  8E6B              Repone_datos_de_borrado
1691  8E6B
1692  8E6B F3           	di
1693  8E6C ED 5B 2E 89  	ld de,(Stack_snapshot)
1694  8E70 21 EE 88     	ld hl,Variables_de_borrado
1695  8E73 01 06 00     	ld bc,6
1696  8E76 ED B0        	ldir
1697  8E78 FB           	ei
1698  8E79
1699  8E79 EB           	ex de,hl
1700  8E7A 22 2E 89     	ld (Stack_snapshot),hl
1701  8E7D
1702  8E7D C9           	ret
1703  8E7E
1704  8E7E              ; --------------------------------------------------------------------------------------
1705  8E7E
1706  8E7E              Pinta_Amadeus
1707  8E7E
1708  8E7E 3E 06        	ld a,6
1709  8E80 D3 FE            out ($fe),a										; Amarillo
1710  8E82
1711  8E82 CD EA 8C        	call Calcula_malotes_Amadeus
1712  8E85 CD 2A 97     	call Extrae_foto_Amadeus
1713  8E88 CD AA 8C     	call Limpia_album_Amadeus
1714  8E8B
1715  8E8B C9           	ret
1716  8E8C
1717  8E8C              Pinta_entidades
1718  8E8C
1719  8E8C              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1720  8E8C
1721  8E8C 3A 36 89     	ld a,(Ctrl_3)
1722  8E8F CB 47        	bit 0,a
1723  8E91 C8           	ret z
1724  8E92
1725  8E92 CD D2 8C     	call Calcula_numero_de_malotes
1726  8E95 CD A8 96     	call Extrae_foto_entidades
1727  8E98 CD 01 80     	call Limpia_y_reinicia_Stack_Snapshot
1728  8E9B
1729  8E9B C9           	ret
1730  8E9C
1731  8E9C              ; -----------------------------------------------------------------------------------
1732  8E9C              ;
1733  8E9C              ;	10/12/23
1734  8E9C              ;
1735  8E9C              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1736  8E9C
1737  8E9C              Actualiza_relojes
1738  8E9C
1739  8E9C 3A 36 89     	ld a,(Ctrl_3)
1740  8E9F CB 47        	bit 0,a
1741  8EA1 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1742  8EA2
1743  8EA2 21 48 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1744  8EA5 34           	inc (hl)
1745  8EA6
1746  8EA6 34           	inc (hl)
1747  8EA7 35           	dec (hl)
1748  8EA8 C0           	ret nz
1749  8EA9
1750  8EA9 21 49 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1751  8EAC 34           	inc (hl)
1752  8EAD C9           	ret
1753  8EAE
1754  8EAE              ; ---------------------------------------------------------------
1755  8EAE              ;
1756  8EAE              ;	21/12/23
1757  8EAE
1758  8EAE              Guarda_parametros_DRAW
1759  8EAE
1760  8EAE 21 D4 88     	ld hl,Filas
1761  8EB1 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1762  8EB4 01 43 00     	ld bc,67
1763  8EB7 ED B0        	ldir
1764  8EB9 C9           	ret
1765  8EBA
1766  8EBA              Recupera_parametros_DRAW
1767  8EBA
1768  8EBA 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1769  8EBD 11 D4 88     	ld de,Filas
1770  8EC0 01 43 00     	ld bc,67
1771  8EC3 ED B0        	ldir
1772  8EC5 C9           	ret
1773  8EC6
1774  8EC6              ; ---------------------------------------------------------------
1775  8EC6
1776  8EC6              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EC6              ; ******************************************************************************************************************************************************************************************
   2+ 8EC6              ;
   3+ 8EC6              ;   21/07/23
   4+ 8EC6              ;
   5+ 8EC6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EC6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EC6              ;
   8+ 8EC6              ;
   9+ 8EC6              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EC6              ;
  11+ 8EC6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EC6              ;               _ hacen las entidades hacia abajo.
  13+ 8EC6              ;
  14+ 8EC6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EC6              ;
  16+ 8EC6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EC6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EC6              ;
  19+ 8EC6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EC6              ;           _ la bala.
  21+ 8EC6              ;
  22+ 8EC6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EC6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EC6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EC6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EC6              ;           _ en el momento de generarse la bala)).
  27+ 8EC6
  28+ 8EC6              Genera_disparo
  29+ 8EC6
  30+ 8EC6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EC6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EC6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EC6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EC6              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EC6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EC6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EC6
  38+ 8EC6              ; Exclusiones:
  39+ 8EC6
  40+ 8EC6 3A EC 88         ld a,(Vel_down)
  41+ 8EC9 47               ld b,a
  42+ 8ECA 3A 47 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8ECD B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8ECE D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8ECF 3A 11 89         ld a,(Columnas)
  46+ 8ED2 47               ld b,a
  47+ 8ED3 3A D5 88         ld a,(Columns)
  48+ 8ED6 B8               cp b
  49+ 8ED7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8ED8
  51+ 8ED8              ; ----- ----- -----
  52+ 8ED8
  53+ 8ED8 3A 04 89         ld a,(Ctrl_0)
  54+ 8EDB CB 77            bit 6,a
  55+ 8EDD 20 06            jr nz,14F
  56+ 8EDF
  57+ 8EDF 3A DB 88         ld a,(Coordenada_y)
  58+ 8EE2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EE4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EE5
  61+ 8EE5 21 00 80     14 ld hl,Indice_disparo
  62+ 8EE8 3A DC 88         ld a,(CTRL_DESPLZ)
  63+ 8EEB 4F               ld c,a
  64+ 8EEC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EEE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EEE              ;                                            ""        ""       "f9", B="1"
  67+ 8EEE              ;                                            ""        ""       "fb", B="2"
  68+ 8EEE              ;                                            ""        ""       "fb", B="3"
  69+ 8EEE A7               and a
  70+ 8EEF 28 10            jr z,1F
  71+ 8EF1 E6 01            and 1
  72+ 8EF3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EF4
  74+ 8EF4 79               ld a,c
  75+ 8EF5 16 F9            ld d,$f9
  76+ 8EF7 23           2 inc hl
  77+ 8EF8 23               inc hl
  78+ 8EF9 04               inc b
  79+ 8EFA BA               cp d
  80+ 8EFB 28 04            jr z,1F
  81+ 8EFD 14               inc d
  82+ 8EFE 14               inc d
  83+ 8EFF 18 F6            jr 2B
  84+ 8F01
  85+ 8F01 CD 1E 8D     1 call Extrae_address
  86+ 8F04 E5               push hl
  87+ 8F05 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F07 DD 21 70 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F0B
  90+ 8F0B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F0B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F0B
  93+ 8F0B 3A 04 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F0E CB 77            bit 6,a
  95+ 8F10 20 04            jr nz,19F
  96+ 8F12
  97+ 8F12 AF               xor a
  98+ 8F13 32 50 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F16
 100+ 8F16 3A E8 88     19 ld a,(Cuad_objeto)
 101+ 8F19 FE 02            cp 2
 102+ 8F1B 38 66            jr c,3F
 103+ 8F1D 28 64            jr z,3F
 104+ 8F1F
 105+ 8F1F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F1F
 107+ 8F1F E6 01            and 1
 108+ 8F21 28 30            jr z,4F
 109+ 8F23
 110+ 8F23              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F23              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F23              ;
 113+ 8F23              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F23              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F23              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F23
 117+ 8F23 2A D6 88     	ld hl,(Posicion_actual)
 118+ 8F26
 119+ 8F26              ;   Amadeus o entidad ???.
 120+ 8F26
 121+ 8F26 3A 04 89         ld a,(Ctrl_0)
 122+ 8F29 CB 77            bit 6,a
 123+ 8F2B 28 0A            jr z,8F
 124+ 8F2D
 125+ 8F2D              ; 	Dispara Amadeus.
 126+ 8F2D
 127+ 8F2D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F2F CD 99 96         call PreviousScan
 129+ 8F32 CD 99 96         call PreviousScan
 130+ 8F35
 131+ 8F35              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F35              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F35              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F35              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F35
 136+ 8F35 18 11            jr 10F
 137+ 8F37
 138+ 8F37              ; 	Dispara Entidad.
 139+ 8F37
 140+ 8F37 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F3A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F3A
 143+ 8F3A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F3A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F3A
 146+ 8F3A C5               push bc
 147+ 8F3B 06 10            ld b,16
 148+ 8F3D CD 8A 96     9 call NextScan
 149+ 8F40 10 FB            djnz 9B
 150+ 8F42 C1               pop bc
 151+ 8F43 CD AD 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F46 18 06            jr 17F
 153+ 8F48
 154+ 8F48              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F48              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F48              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F48              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F48
 159+ 8F48 CD AD 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F4B CD 22 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F4E              ;                                                      ; _al generar el disparo.
 162+ 8F4E
 163+ 8F4E              ; 	LLegados a este punto tendremos:
 164+ 8F4E              ;
 165+ 8F4E              ;       Puntero_objeto_disparo en IY.
 166+ 8F4E              ;       Rutinas_de_impresion en IX.
 167+ 8F4E              ;       Puntero_de_impresion en HL.
 168+ 8F4E              ;       Impacto/Dirección en BC.
 169+ 8F4E
 170+ 8F4E CD B5 8F     17 call Almacena_disparo
 171+ 8F51 18 52            jr 6F                                             ; RET.
 172+ 8F53
 173+ 8F53              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F53              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F53              ;
 176+ 8F53              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F53              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F53              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F53
 180+ 8F53 2A D6 88     4 ld hl,(Posicion_actual)
 181+ 8F56
 182+ 8F56              ;   Amadeus o entidad ???.
 183+ 8F56
 184+ 8F56 3A 04 89         ld a,(Ctrl_0)
 185+ 8F59 CB 77            bit 6,a
 186+ 8F5B 28 0A            jr z,11F
 187+ 8F5D
 188+ 8F5D              ; 	Dispara Amadeus.
 189+ 8F5D
 190+ 8F5D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F5F CD 99 96         call PreviousScan
 192+ 8F62 CD 99 96         call PreviousScan
 193+ 8F65
 194+ 8F65              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F65              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F65              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F65              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F65
 199+ 8F65 18 11            jr 13F
 200+ 8F67
 201+ 8F67              ; 	Dispara Entidad.
 202+ 8F67
 203+ 8F67 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F6A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F6A
 206+ 8F6A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F6A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F6A
 209+ 8F6A C5               push bc
 210+ 8F6B 06 10            ld b,16
 211+ 8F6D CD 8A 96     12 call NextScan
 212+ 8F70 10 FB            djnz 12B
 213+ 8F72 C1               pop bc
 214+ 8F73
 215+ 8F73 CD A6 8F         call Ajusta_disparo_parte_derecha
 216+ 8F76 18 06            jr 18F
 217+ 8F78
 218+ 8F78              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F78              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F78              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F78              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F78
 223+ 8F78 CD A6 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F7B CD 22 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F7E              ;                                                       ; _al generar el disparo.
 226+ 8F7E
 227+ 8F7E              ; LLegados a este punto tendremos:
 228+ 8F7E              ;
 229+ 8F7E              ;       Puntero_objeto_disparo en IY.
 230+ 8F7E              ;       Rutinas_de_impresion en IX.
 231+ 8F7E              ;       Puntero_de_impresion en HL.
 232+ 8F7E              ;       Impacto/Dirección en BC.
 233+ 8F7E
 234+ 8F7E CD B5 8F     18 call Almacena_disparo
 235+ 8F81 18 22            jr 6F                                               ; RET.
 236+ 8F83
 237+ 8F83              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F83
 239+ 8F83 28 11        3 jr z,5F
 240+ 8F85
 241+ 8F85              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F85              ;
 243+ 8F85              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F85              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F85              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F85              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F85
 248+ 8F85              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F85              ;	   ""        ""       "f9", B="1"
 250+ 8F85              ;	   ""        ""       "fb", B="2"
 251+ 8F85              ; 	   ""        ""       "fb", B="3"
 252+ 8F85
 253+ 8F85 2A D6 88     	ld hl,(Posicion_actual)
 254+ 8F88 CD 8A 96     	call NextScan
 255+ 8F8B
 256+ 8F8B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F8B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F8B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F8B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F8B
 261+ 8F8B CD AD 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F8E
 263+ 8F8E              ; 	No se produce impacto. B="$80"
 264+ 8F8E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F8E
 266+ 8F8E 01 80 80         ld bc,$8080
 267+ 8F91
 268+ 8F91              ; 	LLegados a este punto tendremos:
 269+ 8F91              ;
 270+ 8F91              ;       Puntero_objeto_disparo en IY.
 271+ 8F91              ;       Rutinas_de_impresion en IX.
 272+ 8F91              ;       Puntero_de_impresion en HL.
 273+ 8F91              ;       Impacto/Dirección en BC.
 274+ 8F91
 275+ 8F91 CD B5 8F         call Almacena_disparo
 276+ 8F94 18 0F            jr 6F                                           ; RET.
 277+ 8F96
 278+ 8F96              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F96              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F96              ;
 281+ 8F96              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F96              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F96              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F96              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F96
 286+ 8F96 2A D6 88     5 ld hl,(Posicion_actual)
 287+ 8F99 CD 8A 96     	call NextScan
 288+ 8F9C
 289+ 8F9C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F9C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F9C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F9C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F9C
 294+ 8F9C CD A6 8F         call Ajusta_disparo_parte_derecha
 295+ 8F9F
 296+ 8F9F              ; 	No se produce impacto. B="$80"
 297+ 8F9F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F9F
 299+ 8F9F 01 80 80     15 ld bc,$8080
 300+ 8FA2
 301+ 8FA2              ; 	LLegados a este punto tendremos:
 302+ 8FA2              ;
 303+ 8FA2              ;       Puntero_objeto_disparo en IY.
 304+ 8FA2              ;       Rutinas_de_impresion en IX.
 305+ 8FA2              ;       Puntero_de_impresion en HL.
 306+ 8FA2              ;       Impacto/Dirección en BC.
 307+ 8FA2
 308+ 8FA2 CD B5 8F         call Almacena_disparo
 309+ 8FA5
 310+ 8FA5 C9           6 ret
 311+ 8FA6
 312+ 8FA6              ; ----------------------------------------------------------------
 313+ 8FA6              ;
 314+ 8FA6              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FA6              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FA6              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FA6
 318+ 8FA6 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FA7 FE 02            cp 2
 320+ 8FA9 38 01            jr c,1F
 321+ 8FAB 23               inc hl
 322+ 8FAC C9           1 ret
 323+ 8FAD
 324+ 8FAD 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FAE FE 01        	cp 1
 326+ 8FB0 20 01        	jr nz,1F
 327+ 8FB2 2B           	dec hl
 328+ 8FB3 2B           1 dec hl
 329+ 8FB4 C9               ret
 330+ 8FB5
 331+ 8FB5              ; ----------------------------------------------------------------
 332+ 8FB5              ;
 333+ 8FB5              ;   25/02/23
 334+ 8FB5              ;
 335+ 8FB5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FB5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FB5              ;
 338+ 8FB5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FB5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FB5
 341+ 8FB5              Almacena_disparo
 342+ 8FB5
 343+ 8FB5 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FB6 F1               pop af
 345+ 8FB7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FB8
 347+ 8FB8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FB9 E6 01            and 1
 349+ 8FBB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FBD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FBD              ; 	Dispara AMADEUS.
 352+ 8FBD
 353+ 8FBD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FBD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FBD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FBD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FBD
 358+ 8FBD C5               push bc
 359+ 8FBE 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FC1 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FC4 A7               and a
 362+ 8FC5 ED 42            sbc hl,bc
 363+ 8FC7 CC A3 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FCA C1               pop bc
 365+ 8FCB 28 54            jr z,4F
 366+ 8FCD
 367+ 8FCD 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FD0 23               inc hl
 369+ 8FD1 23               inc hl
 370+ 8FD2 22 3A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FD5              ;                                                   ; _ Disparo_(+1).
 372+ 8FD5 18 18            jr 2F
 373+ 8FD7
 374+ 8FD7              ; Dispara una entidad.
 375+ 8FD7
 376+ 8FD7 C5           1 push bc
 377+ 8FD8 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FDB 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FDE A7               and a
 380+ 8FDF ED 42            sbc hl,bc
 381+ 8FE1 CC 9C 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FE4 C1               pop bc
 383+ 8FE5 28 3A            jr z,4F
 384+ 8FE7
 385+ 8FE7 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FEA 23               inc hl
 387+ 8FEB 23               inc hl
 388+ 8FEC 22 38 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FEF              ;                                                   ; _ Disparo_(+1).
 390+ 8FEF CD 1E 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FF2              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FF2              ;
 393+ 8FF2              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FF2              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FF2              ;                                                     Puntero_de_impresion en HL.
 396+ 8FF2              ;                                                     Impacto/Dirección en BC.
 397+ 8FF2
 398+ 8FF2 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FF3 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FF4 23               inc hl                                          ; _ al siguiente.
 401+ 8FF5 A7               and a
 402+ 8FF6 20 C0            jr nz,3B
 403+ 8FF8
 404+ 8FF8 08               ex af,af
 405+ 8FF9 ED 73 28 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FFD F9               ld sp,hl
 407+ 8FFE
 408+ 8FFE DD E5            push ix                                         ; Rutina de impresión.
 409+ 9000 F5               push af                                         ; Puntero de impresión.
 410+ 9001 FD E5            push iy                                         ; Puntero objeto.
 411+ 9003 C5               push bc                                         ; Control.
 412+ 9004
 413+ 9004 ED 7B 28 89      ld sp,(Stack)
 414+ 9008
 415+ 9008              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9008
 417+ 9008 21 17 89     	ld hl,Ctrl_1
 418+ 900B CB C6        	set 0,(hl)
 419+ 900D
 420+ 900D DD E5        	push ix
 421+ 900F E1               pop hl
 422+ 9010 F5               push af
 423+ 9011 DD E1            pop ix
 424+ 9013
 425+ 9013 CD A0 7F     	call Guarda_foto_registros
 426+ 9016
 427+ 9016 21 17 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9019 CB 86        	res 0,(hl)
 429+ 901B
 430+ 901B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 901B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 901B
 433+ 901B CD A3 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 901E CD 9C 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9021
 436+ 9021 C9           4 ret
 437+ 9022
 438+ 9022              ; ----------------------------------------------------------------
 439+ 9022              ;
 440+ 9022              ;   4/3/23
 441+ 9022              ;
 442+ 9022              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9022              ;   _ al generarse el disparo.
 444+ 9022              ;
 445+ 9022              ;       "$80" ..... No se produce colisión.
 446+ 9022              ;       "$81" ..... Se produce colisión.
 447+ 9022              ;
 448+ 9022              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9022              ;         _ que forman el disparo.
 450+ 9022
 451+ 9022
 452+ 9022              Comprueba_Colision
 453+ 9022
 454+ 9022              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9022
 456+ 9022 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9024 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9025
 459+ 9025 CD 5B 90         call Modifica_H_Velocidad_disparo
 460+ 9028
 461+ 9028 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9029 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 902B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 902D
 465+ 902D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 902F CD 4B 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9032
 468+ 9032 7B               ld a,e
 469+ 9033 E6 01            and 1
 470+ 9035 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9037              ;                                                  ; _ para activar IMPACTO.
 472+ 9037 E1               pop hl
 473+ 9038 E5               push hl
 474+ 9039 CD 8A 96         call NextScan
 475+ 903C
 476+ 903C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 903D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 903F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9041              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9041 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9043 CD 4B 90         call Bucle_2
 482+ 9046
 483+ 9046 43           1 ld b,e
 484+ 9047 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9048 FD E1            pop iy
 486+ 904A C9               ret
 487+ 904B
 488+ 904B              ; ---------- ----------
 489+ 904B
 490+ 904B 06 02        Bucle_2 ld b,2
 491+ 904D FD 7E 00     2 ld a,(iy)
 492+ 9050 A6               and (hl)
 493+ 9051 28 02            jr z,1F
 494+ 9053 1E 81            ld e,$81
 495+ 9055 23           1 inc hl
 496+ 9056 FD 23            inc iy
 497+ 9058 10 F3            djnz 2B
 498+ 905A C9               ret
 499+ 905B
 500+ 905B              ; ---------- ----------
 501+ 905B              ;
 502+ 905B              ;   21/7/23
 503+ 905B
 504+ 905B              Modifica_H_Velocidad_disparo
 505+ 905B
 506+ 905B 3A 47 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 905E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9060 D0               ret nc                                         ; _ incrementamos H.
 509+ 9061 24               inc h
 510+ 9062
 511+ 9062 C9               ret
 512+ 9063
 513+ 9063              ; -------------------------------------------------------------------------------------------------------------
 514+ 9063              ;
 515+ 9063              ;   04/12/23
 516+ 9063              ;
 517+ 9063              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9063              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9063              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9063              ;
 521+ 9063              ;   MODIFICA: HL,DE,B y A.
 522+ 9063
 523+ 9063              Genera_coordenadas_X
 524+ 9063
 525+ 9063              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9063              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9063
 528+ 9063              ;   Limpiamos almacenes.
 529+ 9063
 530+ 9063 CD 94 90         call Limpia_Coordenadas_X
 531+ 9066
 532+ 9066              ;   Almacenamos coordenadas X.
 533+ 9066
 534+ 9066              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9066
 536+ 9066 2A FE 88         ld hl,(Puntero_de_impresion)
 537+ 9069 11 44 89         ld de,Coordenadas_X_Entidad
 538+ 906C 06 02            ld b,2
 539+ 906E
 540+ 906E 3A DC 88         ld a,(CTRL_DESPLZ)
 541+ 9071 A7               and a
 542+ 9072 28 01            jr z,1F
 543+ 9074 04               inc b
 544+ 9075
 545+ 9075 CD 8B 90     1 call Guarda_coordenadas_X
 546+ 9078
 547+ 9078              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9078
 549+ 9078 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 907B 11 41 89         ld de,Coordenadas_X_Amadeus
 551+ 907E 06 02            ld b,2
 552+ 9080
 553+ 9080 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 9083 A7               and a
 555+ 9084 28 01            jr z,2F
 556+ 9086 04               inc b
 557+ 9087
 558+ 9087 CD 8B 90     2 call Guarda_coordenadas_X
 559+ 908A
 560+ 908A              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 908A
 562+ 908A C9               ret
 563+ 908B
 564+ 908B              ; ----- ----- ----- ----- -----
 565+ 908B
 566+ 908B 7D           Guarda_coordenadas_X  ld a,l
 567+ 908C E6 1F            and $1f
 568+ 908E 12           1 ld (de),a
 569+ 908F 3C               inc a
 570+ 9090 13               inc de
 571+ 9091 10 FB            djnz 1B
 572+ 9093 C9               ret
 573+ 9094
 574+ 9094 AF           Limpia_Coordenadas_X xor a
 575+ 9095 06 06            ld b,6
 576+ 9097 21 41 89         ld hl,Coordenadas_X_Amadeus
 577+ 909A 77           1 ld (hl),a
 578+ 909B 23               inc hl
 579+ 909C 10 FC            djnz 1B
 580+ 909E C9               ret
 581+ 909F
 582+ 909F              ; ----- ----- ----- ----- -----
 583+ 909F
 584+ 909F              Compara_coordenadas_X
 585+ 909F
 586+ 909F 06 03            ld b,3
 587+ 90A1 11 46 89         ld de,Coordenadas_X_Entidad+2
 588+ 90A4
 589+ 90A4 1A               ld a,(de)
 590+ 90A5 A7               and a
 591+ 90A6 20 01            jr nz,2F
 592+ 90A8 05               dec b
 593+ 90A9
 594+ 90A9 1B           2 dec de
 595+ 90AA 1B               dec de
 596+ 90AB 21 41 89         ld hl,Coordenadas_X_Amadeus
 597+ 90AE
 598+ 90AE D5           1 push de
 599+ 90AF E5               push hl
 600+ 90B0 C5               push bc
 601+ 90B1
 602+ 90B1 CD BB 90         call Comparando
 603+ 90B4
 604+ 90B4 C1               pop bc
 605+ 90B5 E1               pop hl
 606+ 90B6 D1               pop de
 607+ 90B7
 608+ 90B7 13               inc de
 609+ 90B8 10 F4            djnz 1B
 610+ 90BA
 611+ 90BA C9               ret
 612+ 90BB
 613+ 90BB              ; ----- ----- ----- ----- -----
 614+ 90BB              ;
 615+ 90BB              ;   4/12/23
 616+ 90BB              ;
 617+ 90BB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90BB
 619+ 90BB 06 03        Comparando ld b,3
 620+ 90BD 1A               ld a,(de)
 621+ 90BE 4E           2 ld c,(hl)
 622+ 90BF B9               cp c
 623+ 90C0 28 04            jr z,1F
 624+ 90C2 23               inc hl
 625+ 90C3 10 F9            djnz 2B
 626+ 90C5 C9               ret
 627+ 90C6
 628+ 90C6 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90C8 32 ED 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90CB 21 3C 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90CE CB D6            set 2,(hl)
 632+ 90D0 C9               ret
 633+ 90D1
 634+ 90D1              ; -----------------------------------------------------------------------
 635+ 90D1              ;
 636+ 90D1              ;   7/12/23
 637+ 90D1              ;
 638+ 90D1
 639+ 90D1              Detecta_colision_nave_entidad
 640+ 90D1
 641+ 90D1              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90D1
 643+ 90D1 FD 2A D8 88      ld iy,(Puntero_objeto)
 644+ 90D5 2A FE 88         ld hl,(Puntero_de_impresion)
 645+ 90D8
 646+ 90D8 E5               push hl
 647+ 90D9
 648+ 90D9              ; ----- ----- -----
 649+ 90D9 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90DB 06 0A            ld b,10
 651+ 90DD CD 0D 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90E0 7B               ld a,e
 653+ 90E1 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90E3 38 0E            jr c,3F
 655+ 90E5
 656+ 90E5              ; LLegados a este punto:
 657+ 90E5              ;
 658+ 90E5              ;   HAY COLISIÓN !!!!!.
 659+ 90E5              ;
 660+ 90E5              ;   .db (Impacto) de Amadeus a "1".
 661+ 90E5              ;   SET el bit3 de (Impacto2).
 662+ 90E5              ;
 663+ 90E5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90E5
 665+ 90E5 21 ED 88         ld hl,Impacto
 666+ 90E8 36 01            ld (hl),1
 667+ 90EA 21 3C 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 90ED CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 90EF CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90F1
 671+ 90F1 18 18            jr 1F
 672+ 90F3
 673+ 90F3              ; -----
 674+ 90F3
 675+ 90F3 E1           3 pop hl
 676+ 90F4 CD 8A 96         call NextScan
 677+ 90F7 E5               push hl
 678+ 90F8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 90F9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 90FB 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 90FD 30 0C            jr nc,1F
 682+ 90FF              ;                                                  ; _ 2º scanline si esto es así.
 683+ 90FF 10 DC            djnz 2B
 684+ 9101
 685+ 9101              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9101
 687+ 9101              ; LLegados a este punto:
 688+ 9101              ;
 689+ 9101              ;   NO HAY COLISIÓN !!!!!.
 690+ 9101              ;
 691+ 9101              ;   .db (Impacto) de Amadeus a "0".
 692+ 9101              ;   RES el bit2 de (Impacto2).
 693+ 9101              ;
 694+ 9101              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9101              ;   Lo colocamos a "0".
 696+ 9101
 697+ 9101 21 3C 89         ld hl,Impacto2
 698+ 9104 CB 96            res 2,(hl)
 699+ 9106 2A 3D 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9109 36 00            ld (hl),0
 701+ 910B
 702+ 910B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 910C C9               ret
 704+ 910D
 705+ 910D               ; ---------- ----------
 706+ 910D
 707+ 910D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 910E 3A D5 88         ld a,(Columns)
 709+ 9111 47               ld b,a
 710+ 9112 FD 7E 00     2 ld a,(iy)
 711+ 9115 BE               cp (hl)
 712+ 9116 28 01            jr z,1F
 713+ 9118
 714+ 9118 1C               inc e
 715+ 9119
 716+ 9119 23           1 inc hl
 717+ 911A FD 23            inc iy
 718+ 911C 10 F4            djnz 2B
 719+ 911E C1               pop bc
 720+ 911F C9               ret
 721+ 9120
 722+ 9120              ; -------------------------------------------------------------------------------------------------------------
 723+ 9120              ;
 724+ 9120              ;   13/03/23
 725+ 9120              ;
 726+ 9120              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9120              ;
 728+ 9120              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9120
 730+ 9120 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9123 7E               ld a,(hl)
 732+ 9124 A7               and a
 733+ 9125 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9126
 735+ 9126 44               ld b,h
 736+ 9127 4D               ld c,l
 737+ 9128 2A 30 89         ld hl,(Stack_snapshot_disparos)
 738+ 912B E5               push hl
 739+ 912C A7               and a
 740+ 912D ED 42            sbc hl,bc
 741+ 912F E5               push hl
 742+ 9130 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9131
 744+ 9131 E1               pop hl
 745+ 9132 54               ld d,h
 746+ 9133 5D               ld e,l
 747+ 9134 1B               dec de
 748+ 9135 ED B8            lddr                                                ; Limpiamos.
 749+ 9137
 750+ 9137 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 913A 22 30 89         ld (Stack_snapshot_disparos),hl
 752+ 913D
 753+ 913D C9               ret
 754+ 913E
 755+ 913E              ; -------------------------------------------------------------------------------------------------------------
 756+ 913E              ;
 757+ 913E              ;   18/07/23
 758+ 913E              ;
 759+ 913E
 760+ 913E              Motor_de_disparos
 761+ 913E
 762+ 913E              ; Gestiona DISPAROS DE AMADEUS.
 763+ 913E
 764+ 913E 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9141 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9144
 767+ 9144 CD 1E 8D     2 call Extrae_address
 768+ 9147 7E               ld a,(hl)
 769+ 9148 A7               and a
 770+ 9149 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 914B
 772+ 914B              ; ----- ----- ----- ----- ----- -----
 773+ 914B
 774+ 914B C5               push bc
 775+ 914C CD 10 92         call foto_disparo_a_borrar
 776+ 914F
 777+ 914F              ; Existe colisión con este disparo???
 778+ 914F
 779+ 914F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9150 7E               ld a,(hl)
 781+ 9151 2B               dec hl
 782+ 9152 E6 01            and 1
 783+ 9154 28 1D            jr z,9F
 784+ 9156
 785+ 9156              ;   En este punto:
 786+ 9156              ;
 787+ 9156              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9156              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9156              ;   _con la entidad).
 790+ 9156              ;
 791+ 9156              ;   Disparo_2A defw 0                                ; Control.
 792+ 9156              ;    defw 0                                          ; Puntero objeto.
 793+ 9156              ;    defw 0                                          ; Puntero de impresión.
 794+ 9156              ;    defw 0                                          ; Rutina de impresión.
 795+ 9156
 796+ 9156 E5               push hl
 797+ 9157
 798+ 9157 06 04            ld b,4
 799+ 9159 23           19 inc hl
 800+ 915A 10 FD            djnz 19B
 801+ 915C
 802+ 915C CD 1E 8D         call Extrae_address
 803+ 915F CD 77 9D         call Genera_coordenadas_disparo
 804+ 9162
 805+ 9162              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9162
 807+ 9162 21 3F 89         ld hl,Coordenadas_disparo_certero
 808+ 9165 72               ld (hl),d
 809+ 9166 23               inc hl
 810+ 9167 73               ld (hl),e
 811+ 9168
 812+ 9168              ; Elimino el disparo de la base de datos.
 813+ 9168
 814+ 9168 E1               pop hl
 815+ 9169 CD 8F 92         call Elimina_disparo_de_base_de_datos
 816+ 916C 21 3C 89         ld hl,Impacto2
 817+ 916F CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9171
 819+ 9171 18 06            jr 11F
 820+ 9173
 821+ 9173 CD 39 92     9 call Mueve_disparo
 822+ 9176 CD 10 92         call foto_disparo_a_borrar
 823+ 9179
 824+ 9179 C1           11 pop bc
 825+ 917A 18 04            jr 7F
 826+ 917C
 827+ 917C              ; ----- ----- ----- ----- ----- -----
 828+ 917C
 829+ 917C ED 42        1 sbc hl,bc
 830+ 917E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9180
 832+ 9180 2A 3A 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9183 23               inc hl
 834+ 9184 23               inc hl
 835+ 9185 22 3A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9188 18 BA            jr 2B
 837+ 918A
 838+ 918A CD A3 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 918D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 918D
 841+ 918D              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 918D
 843+ 918D 01 6A 85         ld bc,Disparo_11
 844+ 9190 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9193
 846+ 9193 CD 1E 8D     5 call Extrae_address
 847+ 9196 7E               ld a,(hl)
 848+ 9197 A7               and a
 849+ 9198 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 919A
 851+ 919A              ; ----- ----- ----- ----- ----- -----
 852+ 919A
 853+ 919A C5               push bc
 854+ 919B CD 10 92         call foto_disparo_a_borrar
 855+ 919E
 856+ 919E              ; Existe colisión con este disparo???
 857+ 919E
 858+ 919E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 919F 7E               ld a,(hl)
 860+ 91A0 2B               dec hl
 861+ 91A1 E6 01            and 1
 862+ 91A3 28 4D            jr z,10F
 863+ 91A5
 864+ 91A5              ;! La colisión se produce con Amadeus???
 865+ 91A5              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91A5
 867+ 91A5 E5               push hl
 868+ 91A6
 869+ 91A6 06 04            ld b,4
 870+ 91A8 23           16 inc hl
 871+ 91A9 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91AB
 873+ 91AB CD 1E 8D         call Extrae_address
 874+ 91AE CD 77 9D         call Genera_coordenadas_disparo
 875+ 91B1
 876+ 91B1 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91B2 FE 16            cp $16
 878+ 91B4 38 2A            jr c,15F
 879+ 91B6
 880+ 91B6
 881+ 91B6              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91B6
 883+ 91B6 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91B7
 885+ 91B7              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91B7
 887+ 91B7 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91BA
 889+ 91BA              ; Coordenada X de Amadeus en D.
 890+ 91BA
 891+ 91BA 7D               ld a,l
 892+ 91BB E6 1F            and $1F
 893+ 91BD 57               ld d,a
 894+ 91BE
 895+ 91BE 21 86 85         ld hl,Amadeus_db+8
 896+ 91C1 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91C2
 898+ 91C2 21 41 89         ld hl,Coordenadas_X_Amadeus
 899+ 91C5 CD 8B 90         call Guarda_coordenadas_X
 900+ 91C8
 901+ 91C8 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91C9
 903+ 91C9              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91C9
 905+ 91C9 06 02            ld b,2
 906+ 91CB C5           20 push bc
 907+ 91CC
 908+ 91CC 06 03            ld b,3
 909+ 91CE 21 41 89         ld hl,Coordenadas_X_Amadeus
 910+ 91D1 7E           18 ld a,(hl)
 911+ 91D2 BA               cp d
 912+ 91D3 20 04            jr nz,17F
 913+ 91D5
 914+ 91D5              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91D5
 916+ 91D5 C1               pop bc
 917+ 91D6 E1               pop hl
 918+ 91D7 18 0D            jr 14F
 919+ 91D9
 920+ 91D9 23           17 inc hl
 921+ 91DA 10 F5            djnz 18B
 922+ 91DC
 923+ 91DC 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91DD
 925+ 91DD C1               pop bc
 926+ 91DE 10 EB            djnz 20B
 927+ 91E0
 928+ 91E0
 929+ 91E0              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91E0              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91E0
 932+ 91E0 E1           15 pop hl
 933+ 91E1 23               inc hl
 934+ 91E2 35               dec (hl)
 935+ 91E3 2B               dec hl
 936+ 91E4 18 0C            jr 10F
 937+ 91E6
 938+ 91E6              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91E6              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91E6
 941+ 91E6 E5           14 push hl
 942+ 91E7 CD 8F 92         call Elimina_disparo_de_base_de_datos
 943+ 91EA 21 3C 89         ld hl,Impacto2
 944+ 91ED CB CE            set 1,(hl)
 945+ 91EF E1               pop hl
 946+ 91F0 18 06            jr 12F
 947+ 91F2
 948+ 91F2              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 91F2
 950+ 91F2 CD 39 92     10 call Mueve_disparo
 951+ 91F5 CD 10 92         call foto_disparo_a_borrar
 952+ 91F8 C1           12 pop bc
 953+ 91F9
 954+ 91F9 18 04            jr 8F
 955+ 91FB
 956+ 91FB              ; ----- ----- ----- ----- ----- -----
 957+ 91FB
 958+ 91FB ED 42        4 sbc hl,bc
 959+ 91FD 28 0A            jr z,6F
 960+ 91FF
 961+ 91FF 2A 38 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9202 23               inc hl
 963+ 9203 23               inc hl
 964+ 9204 22 38 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9207 18 8A            jr 5B
 966+ 9209
 967+ 9209 CD 9C 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 920C CD 94 90         call Limpia_Coordenadas_X
 969+ 920F C9               ret
 970+ 9210
 971+ 9210              ; ------------------------------------------------------------------
 972+ 9210
 973+ 9210              foto_disparo_a_borrar
 974+ 9210
 975+ 9210 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9211 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9212 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9213
 979+ 9213 E5               push hl
 980+ 9214 23               inc hl
 981+ 9215 23               inc hl
 982+ 9216 ED 73 28 89      ld (Stack),sp
 983+ 921A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 921B FD E1            pop iy
 985+ 921D DD E1            pop ix
 986+ 921F E1               pop hl
 987+ 9220 ED 7B 28 89      ld sp,(Stack)
 988+ 9224 3A 17 89         ld a,(Ctrl_1)
 989+ 9227 CB C7            set 0,a
 990+ 9229 32 17 89         ld (Ctrl_1),a
 991+ 922C CD A0 7F         call Guarda_foto_registros
 992+ 922F 3A 17 89         ld a,(Ctrl_1)
 993+ 9232 CB 87            res 0,a
 994+ 9234 32 17 89         ld (Ctrl_1),a
 995+ 9237 E1               pop hl
 996+ 9238 C9               ret
 997+ 9239
 998+ 9239              ;---------------------------------------------------
 999+ 9239              ;
1000+ 9239              ;   18/07/23
1001+ 9239              ;
1002+ 9239
1003+ 9239              Mueve_disparo
1004+ 9239
1005+ 9239              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9239              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9239              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9239
1009+ 9239 E5               push hl
1010+ 923A
1011+ 923A 7E               ld a,(hl)
1012+ 923B
1013+ 923B 06 04            ld b,4
1014+ 923D 23           1 inc hl
1015+ 923E 10 FD            djnz 1B
1016+ 9240
1017+ 9240              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9240
1019+ 9240 CD 1E 8D         call Extrae_address
1020+ 9243
1021+ 9243 E6 01            and 1
1022+ 9245 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9247
1024+ 9247              ; Disparo hacia arriba, (Amadeus).
1025+ 9247
1026+ 9247              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9247              ; _ de la dificultad.
1028+ 9247
1029+ 9247 CD 99 96         call PreviousScan
1030+ 924A CD 99 96         call PreviousScan
1031+ 924D CD 99 96         call PreviousScan
1032+ 9250 CD 99 96         call PreviousScan
1033+ 9253
1034+ 9253              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9253
1036+ 9253 7C               ld a,h
1037+ 9254 FE 40            cp $40
1038+ 9256 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9258
1040+ 9258              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9258
1042+ 9258 EB               ex de,hl
1043+ 9259 06 04            ld b,4
1044+ 925B 2B           6 dec hl
1045+ 925C 10 FD            djnz 6B
1046+ 925E
1047+ 925E CD 8F 92         call Elimina_disparo_de_base_de_datos
1048+ 9261 E1               pop hl
1049+ 9262 18 10            jr 7F
1050+ 9264
1051+ 9264              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9264              ; HL contiene el puntero de impresión del disparo.
1053+ 9264              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9264
1055+ 9264 D5           3 push de
1056+ 9265 C5               push bc
1057+ 9266
1058+ 9266 CD 22 90         call Comprueba_Colision
1059+ 9269
1060+ 9269              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9269
1062+ 9269 78               ld a,b
1063+ 926A
1064+ 926A C1               pop bc
1065+ 926B D1               pop de
1066+ 926C
1067+ 926C EB               ex de,hl
1068+ 926D
1069+ 926D 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 926E 23               inc hl                                      ; _ movimiento.
1071+ 926F 72               ld (hl),d
1072+ 9270
1073+ 9270 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9271
1075+ 9271 23               inc hl                                      ; _ en curso.
1076+ 9272 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9273 2B               dec hl
1078+ 9274
1079+ 9274 C9           7 ret
1080+ 9275
1081+ 9275              ; Disparo hacia abajo, (Entidad).
1082+ 9275
1083+ 9275 3A 47 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9278 47               ld b,a
1085+ 9279
1086+ 9279 CD 8A 96     4 call NextScan
1087+ 927C 10 FB            djnz 4B
1088+ 927E
1089+ 927E              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 927E
1091+ 927E 7C               ld a,h
1092+ 927F FE 58            cp $58
1093+ 9281 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9283
1095+ 9283 EB               ex de,hl
1096+ 9284 06 04            ld b,4
1097+ 9286 2B           5 dec hl
1098+ 9287 10 FD            djnz 5B
1099+ 9289
1100+ 9289 CD 8F 92         call Elimina_disparo_de_base_de_datos
1101+ 928C E1               pop hl
1102+ 928D 18 E5            jr 7B
1103+ 928F
1104+ 928F              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 928F
1106+ 928F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9292 AF               xor a
1108+ 9293 77               ld (hl),a
1109+ 9294 54               ld d,h
1110+ 9295 5D               ld e,l
1111+ 9296 13               inc de
1112+ 9297 ED B0            ldir
1113+ 9299 C9               ret
1114+ 929A
1115+ 929A              ; -----------------------------------------------------------------
1116+ 929A              ;
1117+ 929A              ;   7/12/23
1118+ 929A              ;
1119+ 929A
1120+ 929A 3A 3C 89     Selector_de_impactos ld a,(Impacto2)
1121+ 929D A7               and a
1122+ 929E C8               ret z
1123+ 929F
1124+ 929F              ; Analizamos si hay impacto por disparos.
1125+ 929F
1126+ 929F              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 929F
1128+ 929F CB 4F            bit 1,a
1129+ 92A1 28 07            jr z,1F
1130+ 92A3
1131+ 92A3 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92A6 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92A8 18 08            jr 2F
1134+ 92AA
1135+ 92AA CB 47        1 bit 0,a
1136+ 92AC C8               ret z
1137+ 92AD
1138+ 92AD              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92AD
1140+ 92AD 21 17 89         ld hl,Ctrl_1
1141+ 92B0 CB D6            set 2,(hl)
1142+ 92B2
1143+ 92B2 C9           2 ret
1144+ 92B3
1145+ 92B3              ; -----------------------------------------------------------------
1146+ 92B3              ;
1147+ 92B3              ;   25/04/23
1148+ 92B3              ;
1149+ 92B3
1150+ 92B3              Determina_resultado_comparativa
1151+ 92B3
1152+ 92B3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92B3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92B3              ;
1155+ 92B3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92B3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92B3              ;
1158+ 92B3              ;   SBC HL,DE
1159+ 92B3
1160+ 92B3              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92B3              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92B3
1163+ 92B3              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92B3              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92B3
1166+ 92B3
1167+ 92B3 3A E8 88         ld a,(Cuad_objeto)
1168+ 92B6 FE 02            cp 2
1169+ 92B8 28 26            jr z,2F
1170+ 92BA 38 24            jr c,2F
1171+ 92BC
1172+ 92BC              ; Cuadrantes 3º y 4º
1173+ 92BC
1174+ 92BC E6 01            and 1
1175+ 92BE 28 10            jr z,4F
1176+ 92C0
1177+ 92C0              ; Cuadrante 3º
1178+ 92C0
1179+ 92C0 7C               ld a,h
1180+ 92C1 06 00            ld b,0
1181+ 92C3
1182+ 92C3 CD 4E 93         call Compara_cositas_H3
1183+ 92C6
1184+ 92C6 04               inc b
1185+ 92C7 05               dec b
1186+ 92C8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92C9
1188+ 92C9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92CA 06 00            ld b,0
1190+ 92CC
1191+ 92CC CD 60 93         call Compara_cositas_L3
1192+ 92CF C9               ret
1193+ 92D0
1194+ 92D0              ; Cuadrante 4º
1195+ 92D0
1196+ 92D0 7C           4 ld a,h
1197+ 92D1 06 00            ld b,0
1198+ 92D3
1199+ 92D3 CD 72 93         call Compara_cositas_H4
1200+ 92D6
1201+ 92D6 04               inc b
1202+ 92D7 05               dec b
1203+ 92D8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92D9
1205+ 92D9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92DA 06 00            ld b,0
1207+ 92DC
1208+ 92DC CD 88 93         call Compara_cositas_L4
1209+ 92DF C9               ret
1210+ 92E0
1211+ 92E0              ; Cuadrantes 1º y 2º.
1212+ 92E0
1213+ 92E0 28 10        2 jr z,3F
1214+ 92E2
1215+ 92E2              ; 1er Cuadrante
1216+ 92E2
1217+ 92E2 7C               ld a,h
1218+ 92E3 06 00            ld b,0
1219+ 92E5
1220+ 92E5 CD 26 93         call Compara_cositas_H1
1221+ 92E8
1222+ 92E8 04               inc b
1223+ 92E9 05               dec b
1224+ 92EA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 92EB
1226+ 92EB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 92EC 06 00            ld b,0
1228+ 92EE
1229+ 92EE CD 3C 93         call Compara_cositas_L1
1230+ 92F1 C9               ret
1231+ 92F2
1232+ 92F2
1233+ 92F2              ; 2º Cuadrante
1234+ 92F2
1235+ 92F2 7C           3 ld a,h
1236+ 92F3 06 00            ld b,0
1237+ 92F5
1238+ 92F5 CD 02 93         call Compara_cositas_H2
1239+ 92F8
1240+ 92F8 04               inc b
1241+ 92F9 05               dec b
1242+ 92FA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 92FB
1244+ 92FB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 92FC 06 00            ld b,0
1246+ 92FE
1247+ 92FE CD 14 93         call Compara_cositas_L2
1248+ 9301 C9               ret
1249+ 9302
1250+ 9302 A7           Compara_cositas_H2 and a
1251+ 9303 28 0D            jr z,1F
1252+ 9305              ;    cp $fd
1253+ 9305              ;    jr z,1F
1254+ 9305              ;    cp $fe
1255+ 9305              ;    jr z,1F
1256+ 9305 FE FF            cp $ff
1257+ 9307 28 09            jr z,1F
1258+ 9309 FE 01            cp $01
1259+ 930B 28 05            jr z,1F
1260+ 930D FE 02            cp $02
1261+ 930F 28 01            jr z,1F
1262+ 9311 C0               ret nz
1263+ 9312 04           1 inc b
1264+ 9313 C9               ret
1265+ 9314
1266+ 9314 A7           Compara_cositas_L2 and a
1267+ 9315 28 0D            jr z,1F
1268+ 9317              ;    cp $fd
1269+ 9317              ;    jr z,1F
1270+ 9317 FE FE            cp $fe
1271+ 9319 28 09            jr z,1F
1272+ 931B FE FF            cp $ff
1273+ 931D 28 05            jr z,1F
1274+ 931F FE 01            cp $01
1275+ 9321 28 01            jr z,1F
1276+ 9323              ;    cp $02
1277+ 9323              ;    jr z,1F
1278+ 9323 C0               ret nz
1279+ 9324 04           1 inc b
1280+ 9325 C9               ret
1281+ 9326
1282+ 9326 A7           Compara_cositas_H1 and a
1283+ 9327 28 11            jr z,1F
1284+ 9329              ;    cp $fd
1285+ 9329              ;    jr z,1F
1286+ 9329              ;    cp $fe
1287+ 9329              ;    jr z,1F
1288+ 9329 FE FF            cp $ff
1289+ 932B 28 0D            jr z,1F
1290+ 932D FE 01            cp $01
1291+ 932F 28 09            jr z,1F
1292+ 9331 FE 02            cp $02
1293+ 9333 28 05            jr z,1F
1294+ 9335 FE 03            cp $03
1295+ 9337 28 01            jr z,1F
1296+ 9339 C0               ret nz
1297+ 933A 04           1 inc b
1298+ 933B C9               ret
1299+ 933C
1300+ 933C A7           Compara_cositas_L1 and a
1301+ 933D 28 0D            jr z,1F
1302+ 933F              ;    cp $fd
1303+ 933F              ;    jr z,1F
1304+ 933F              ;    cp $fe
1305+ 933F              ;    jr z,1F
1306+ 933F              ;    cp $ff
1307+ 933F              ;    jr z,1F
1308+ 933F FE 01            cp $01
1309+ 9341 28 09            jr z,1F
1310+ 9343 FE 02            cp $02
1311+ 9345 28 05            jr z,1F
1312+ 9347 FE 03            cp $03
1313+ 9349 28 01            jr z,1F
1314+ 934B C0               ret nz
1315+ 934C 04           1 inc b
1316+ 934D C9               ret
1317+ 934E
1318+ 934E A7           Compara_cositas_H3 and a
1319+ 934F 28 0D            jr z,1F
1320+ 9351              ;    cp $fd
1321+ 9351              ;    jr z,1F
1322+ 9351 FE FE            cp $fe
1323+ 9353 28 09            jr z,1F
1324+ 9355 FE FF            cp $ff
1325+ 9357 28 05            jr z,1F
1326+ 9359 FE 01            cp $01
1327+ 935B 28 01            jr z,1F
1328+ 935D              ;    cp $02
1329+ 935D              ;    jr z,1F
1330+ 935D              ;    cp $03
1331+ 935D              ;    jr z,1F
1332+ 935D C0               ret nz
1333+ 935E 04           1 inc b
1334+ 935F C9               ret
1335+ 9360
1336+ 9360 A7           Compara_cositas_L3 and a
1337+ 9361 28 0D            jr z,1F
1338+ 9363              ;    cp $fd
1339+ 9363              ;    jr z,1F
1340+ 9363              ;    cp $fe
1341+ 9363              ;    jr z,1F
1342+ 9363              ;    cp $ff
1343+ 9363              ;    jr z,1F
1344+ 9363 FE 01            cp $01
1345+ 9365 28 09            jr z,1F
1346+ 9367 FE 02            cp $02
1347+ 9369 28 05            jr z,1F
1348+ 936B FE 03            cp $03
1349+ 936D 28 01            jr z,1F
1350+ 936F C0               ret nz
1351+ 9370 04           1 inc b
1352+ 9371 C9               ret
1353+ 9372
1354+ 9372 A7           Compara_cositas_H4 and a
1355+ 9373 28 11            jr z,1F
1356+ 9375 FE FD            cp $fd
1357+ 9377 28 0D            jr z,1F
1358+ 9379 FE FE            cp $fe
1359+ 937B 28 09            jr z,1F
1360+ 937D FE FF            cp $ff
1361+ 937F 28 05            jr z,1F
1362+ 9381 FE 01            cp $01
1363+ 9383 28 01            jr z,1F
1364+ 9385              ;    cp $02
1365+ 9385              ;    jr z,1F
1366+ 9385              ;    cp $03
1367+ 9385              ;    jr z,1F
1368+ 9385 C0               ret nz
1369+ 9386 04           1 inc b
1370+ 9387 C9               ret
1371+ 9388
1372+ 9388 A7           Compara_cositas_L4 and a
1373+ 9389 28 0D            jr z,1F
1374+ 938B              ;    cp $fd
1375+ 938B              ;    jr z,1F
1376+ 938B FE FE            cp $fe
1377+ 938D 28 09            jr z,1F
1378+ 938F FE FF            cp $ff
1379+ 9391 28 05            jr z,1F
1380+ 9393 FE 01            cp $01
1381+ 9395 28 01            jr z,1F
1382+ 9397              ;    cp $02
1383+ 9397              ;    jr z,1F
1384+ 9397              ;    cp $03
1385+ 9397              ;    jr z,1F
1386+ 9397 C0               ret nz
1387+ 9398 04           1 inc b
1388+ 9399 C9               ret
# file closed: Disparo.asm
1777  939A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 939A              ; ******************************************************************************************************************************************************************************************
   2+ 939A              ;
   3+ 939A              ; 26/06/23
   4+ 939A              ;
   5+ 939A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 939A
   7+ 939A              Draw
   8+ 939A
   9+ 939A CD 7E 96     	call Prepara_draw
  10+ 939D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 939E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 939F 28 05        	jr z,2F
  13+ 93A1
  14+ 93A1 3A E8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93A4 18 0C        	jr 1F
  16+ 93A6
  17+ 93A6 2A E6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93A9 22 D6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93AC CD 3B 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93AF              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93AF CD 02 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93B2
  23+ 93B2 3A 04 89     1 ld a,(Ctrl_0)
  24+ 93B5 CB 6F        	bit 5,a
  25+ 93B7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93B9
  27+ 93B9 CD D1 93     	call Comprueba_limite_horizontal
  28+ 93BC CD 61 94     	call Comprueba_limite_vertical
  29+ 93BF
  30+ 93BF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93BF              ; -----------------------
  32+ 93BF              ; -----------------------
  33+ 93BF              ; -----------------------
  34+ 93BF
  35+ 93BF CD AE 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93C2 CD E5 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93C5 CD 44 96     	call Define_rutina_de_impresion
  38+ 93C8
  39+ 93C8 3A 04 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93CB CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93CD 32 04 89     	ld (Ctrl_0),a
  42+ 93D0
  43+ 93D0 C9           	ret
  44+ 93D1
  45+ 93D1              ; *******************************************************************************************************************************************************************************************
  46+ 93D1              ;	21/01/23
  47+ 93D1              ;
  48+ 93D1              ; 	Comprueba_limite_horizontal.
  49+ 93D1              ;
  50+ 93D1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93D1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93D1              ;
  53+ 93D1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93D1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93D1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93D1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93D1
  58+ 93D1
  59+ 93D1
  60+ 93D1 3A 04 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93D4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93D6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93D8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93DA 32 04 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93DD 18 09            jr 6F
  66+ 93DF CB 5F        1 bit 3,a
  67+ 93E1 28 0A            jr z,2F
  68+ 93E3 E6 F7            and $f7
  69+ 93E5 32 04 89         ld (Ctrl_0),a
  70+ 93E8 CD 3B 95     6 call Inicializacion
  71+ 93EB 18 5B            jr 5F
  72+ 93ED E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 93EE
  74+ 93EE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 93EE              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 93EE
  77+ 93EE EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 93EF 2A 12 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 93F2 CD 9D 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 93F5 67           	ld h,a
  81+ 93F6 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 93F7 CD 9D 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 93FA 67           	ld h,a
  84+ 93FB A7           	and a
  85+ 93FC ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 93FE 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 93FF 3A E8 88     	ld a,(Cuad_objeto)
  88+ 9402 FE 02        	cp 2
  89+ 9404 38 1E        	jr c,3F
  90+ 9406 28 1C        	jr z,3F
  91+ 9408 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9409 28 23            jr z,7F
  93+ 940B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 940D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 940F E1           	pop hl
  96+ 9410
  97+ 9410              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9410              ; _para indicar con E="2" en caso necesario.
  99+ 9410
 100+ 9410 E5               push hl
 101+ 9411 C5               push bc
 102+ 9412 CD 9D 99     	call calcula_tercio
 103+ 9415 FE 01        	cp 1
 104+ 9417 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9419 CD 49 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 941C 28 26            jr z,9F
 107+ 941E 38 24            jr c,9F
 108+ 9420 1E 00        11 ld e,0
 109+ 9422 18 22            jr 8F
 110+ 9424 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9425 28 07        	jr z, 7F
 112+ 9427 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9429 1E 00         	ld e,0
 114+ 942B E1           	pop hl
 115+ 942C 18 04        	jr 4F
 116+ 942E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9430 18 15            jr 10F
 118+ 9432
 119+ 9432              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9432              ; _para indicar con E="2" en caso necesario.
 121+ 9432
 122+ 9432 E5           4 push hl
 123+ 9433 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9434 CD 9D 99     	call calcula_tercio
 125+ 9437 FE 01        	cp 1
 126+ 9439 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 943B CD 49 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 943E 28 04            jr z,9F
 129+ 9440 30 02            jr nc,9F
 130+ 9442 18 02        	jr 8F
 131+ 9444 1E 02        9 ld e,2
 132+ 9446 C1           8 pop bc
 133+ 9447 E1           10 pop hl
 134+ 9448 C9           5 ret
 135+ 9449
 136+ 9449              ; --------------------
 137+ 9449              ;
 138+ 9449              ; 25/08/22
 139+ 9449
 140+ 9449 CD 9D 99     Comprueba_centro call calcula_tercio
 141+ 944C 67               ld h,a
 142+ 944D 08           	ex af,af
 143+ 944E FE 02        	cp 2
 144+ 9450 38 07        	jr c,1F
 145+ 9452 28 05        	jr z,1F
 146+ 9454 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9457 18 03        	jr 2F
 148+ 9459 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 945C 08           2 ex af,af
 150+ 945D A7               and a
 151+ 945E ED 42            sbc hl,bc
 152+ 9460 C9               ret
 153+ 9461
 154+ 9461              ; *********************************************************************************************************************************************************************************************
 155+ 9461              ;
 156+ 9461              ;   16/8/22
 157+ 9461              ;
 158+ 9461              ;	Comprueba_limite_vertical
 159+ 9461              ;
 160+ 9461              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9461              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9461              ;
 163+ 9461
 164+ 9461 2A D6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9464 7D           	ld a,l
 166+ 9465 E6 1F        	and $1F
 167+ 9467 57           	ld d,a
 168+ 9468 3A 14 89     	ld a,(Limite_vertical)
 169+ 946B BA           	cp d 											; Límite - Posición.
 170+ 946C 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 946D 3A E8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9470 CB 47        	bit 0,a
 173+ 9472 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9474
 175+ 9474              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9474
 177+ 9474 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9475 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9477
 180+ 9477              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9477              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9477
 183+ 9477 3A DA 88         ld a,(Coordenada_X)
 184+ 947A 16 0F            ld d,Centro_izquierda
 185+ 947C A7               and a
 186+ 947D 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 947E 28 1E            jr z,3F
 188+ 9480 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9482              ;                                                    ; _salimos sin modificar nada.
 190+ 9482 18 0E            jr 2F
 191+ 9484 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9485 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9487
 194+ 9487              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9487              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9487
 197+ 9487 3A DA 88         ld a,(Coordenada_X)
 198+ 948A 16 10            ld d,Centro_derecha
 199+ 948C A7               and a
 200+ 948D 92               sub d
 201+ 948E 28 0E            jr z,3F
 202+ 9490 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9492              ;                                                    ; _salimos sin modificar nada.
 204+ 9492 CB 43        2 bit 0,e
 205+ 9494 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9496 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9497 CD 2B 95         call Modificaccionne
 208+ 949A C1           	pop bc
 209+ 949B CD 3B 95         call Inicializacion
 210+ 949E C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 949F
 212+ 949F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 949F
 214+ 949F C5           4 push bc
 215+ 94A0 01 D5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94A3 0A           	ld a,(bc)
 217+ 94A4 3D           	dec a
 218+ 94A5 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94A6 7D           	ld a,l
 220+ 94A7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94A8 CB 47        	bit 0,a
 222+ 94AA 28 03        	jr z,5F
 223+ 94AC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94AD 18 2E        	jr 7F
 225+ 94AF
 226+ 94AF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94AF
 228+ 94AF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94B0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94B1 3A 04 89     	ld a,(Ctrl_0)
 231+ 94B4 CB 4F        	bit 1,a
 232+ 94B6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94B8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94B9
 235+ 94B9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94B9
 237+ 94B9 1C               inc e
 238+ 94BA 1D               dec e
 239+ 94BB 20 07            jr nz,12F
 240+ 94BD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94BE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94BF 22 D6 88     	ld (Posicion_actual),hl
 243+ 94C2 18 44        13 jr 9F
 244+ 94C4 CB 43        12 bit 0,e
 245+ 94C6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94C8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94C8 C1           	pop bc
 248+ 94C9 18 D3        	jr 3B
 249+ 94CB 80           14 add b
 250+ 94CC 6F               ld l,a
 251+ 94CD 22 D6 88     	ld (Posicion_actual),hl
 252+ 94D0 CD 2B 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94D3 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94D5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94D7 32 04 89         ld (Ctrl_0),a
 256+ 94DA F1           	pop af
 257+ 94DB 18 2B        	jr 9F
 258+ 94DD
 259+ 94DD              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94DD
 261+ 94DD F5           7 push af
 262+ 94DE 3A 04 89     	ld a,(Ctrl_0)
 263+ 94E1 CB 47        	bit 0,a
 264+ 94E3 20 1D        	jr nz,8F
 265+ 94E5 F1           	pop af
 266+ 94E6
 267+ 94E6              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 94E6
 269+ 94E6 1C           	inc e
 270+ 94E7 1D               dec e
 271+ 94E8 20 07            jr nz,10F
 272+ 94EA 90           	sub b
 273+ 94EB 6F               ld l,a
 274+ 94EC 22 D6 88     	ld (Posicion_actual),hl
 275+ 94EF 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 94F1              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 94F1 CB 43        10 bit 0,e
 278+ 94F3 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 94F5              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 94F5 C1           	pop bc
 281+ 94F6 18 A6        	jr 3B
 282+ 94F8 90           16 sub b
 283+ 94F9 6F               ld l,a
 284+ 94FA 22 D6 88     	ld (Posicion_actual),hl
 285+ 94FD CD 2B 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9500 18 06            jr 9F
 287+ 9502 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9504 32 04 89         ld (Ctrl_0),a
 289+ 9507 F1           	pop af
 290+ 9508 C1           9 pop bc
 291+ 9509 1E 00        	ld e,0
 292+ 950B CD 3B 95         call Inicializacion
 293+ 950E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 950F 08           	ex af,af
 295+ 9510 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9511 18 8B            jr 3B
 297+ 9513
 298+ 9513              ; --------------------
 299+ 9513
 300+ 9513 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9515 CD 99 96     1 call PreviousScan
 302+ 9518 10 FB            djnz 1B
 303+ 951A 22 D6 88     	ld (Posicion_actual),hl
 304+ 951D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 951E C9           	ret
 306+ 951F
 307+ 951F              ; --------------------
 308+ 951F
 309+ 951F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9521 CD 8A 96     1 call NextScan
 311+ 9524 10 FB            djnz 1B
 312+ 9526 22 D6 88     	ld (Posicion_actual),hl
 313+ 9529 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 952A C9           	ret
 315+ 952B
 316+ 952B              ; --------------------
 317+ 952B              ;
 318+ 952B              ;	22/01/23
 319+ 952B              ;
 320+ 952B              ;	E="1". Hemos cambiado de cuadrante.
 321+ 952B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 952B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 952B
 324+ 952B
 325+ 952B              Modificaccionne
 326+ 952B
 327+ 952B 3A E8 88     	ld a,(Cuad_objeto)
 328+ 952E FE 02        	cp 2
 329+ 9530 CC 13 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9533 DC 13 95         call c,Modifica_Pos_actual
 331+ 9536 C8           	ret z
 332+ 9537 CD 1F 95         call Modifica_Pos_actual2
 333+ 953A C9               ret
 334+ 953B
 335+ 953B              ; *************************************************************************************************************************************************************************************************
 336+ 953B              ;
 337+ 953B              ;	13/8/22
 338+ 953B              ;
 339+ 953B              ;	Inicializacion
 340+ 953B              ;
 341+ 953B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 953B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 953B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 953B              ;
 345+ 953B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 953B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 953B              ;	_ desaparece/aparece.
 348+ 953B
 349+ 953B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 953B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 953B              ;
 352+ 953B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 953B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 953B              ; 		   [E] ="0"
 355+ 953B
 356+ 953B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 953B
 358+ 953B CD 9D 99     Inicializacion call calcula_tercio
 359+ 953E 28 36        	jr z,primit
 360+ 9540 E6 02        	and 2
 361+ 9542 20 07        	jr nz,segmit
 362+ 9544 7D           	ld a,l
 363+ 9545 FE 7F        	cp $7f
 364+ 9547 38 2D        	jr c,primit
 365+ 9549 28 2B        	jr z,primit
 366+ 954B CD A8 95     segmit call column
 367+ 954E 38 13        	jr c,tercuad
 368+ 9550 3E 04        cuarcuad ld a,4
 369+ 9552 32 E8 88     	ld (Cuad_objeto),a
 370+ 9555 21 20 48     	ld hl,$4820
 371+ 9558 22 12 89     	ld (Limite_horizontal),hl
 372+ 955B 21 14 89     	ld hl,Limite_vertical
 373+ 955E 36 0D        	ld (hl),$0d
 374+ 9560 08           	ex af,af
 375+ 9561 18 3C        	jr 1F
 376+ 9563              tercuad
 377+ 9563 3E 03        	ld a,3
 378+ 9565 32 E8 88     	ld (Cuad_objeto),a
 379+ 9568 21 20 48     	ld hl,$4820
 380+ 956B 22 12 89     	ld (Limite_horizontal),hl
 381+ 956E 21 14 89     	ld hl,Limite_vertical
 382+ 9571 36 12        	ld (hl),$12
 383+ 9573 08           	ex af,af
 384+ 9574 18 29        	jr 1F
 385+ 9576 CD A8 95     primit call column
 386+ 9579 38 13        	jr c, primcuad
 387+ 957B              segcuad
 388+ 957B 3E 02        	ld a,2
 389+ 957D 32 E8 88     	ld (Cuad_objeto),a
 390+ 9580 21 C0 4F     	ld hl,$4fc0
 391+ 9583 22 12 89     	ld (Limite_horizontal),hl
 392+ 9586 21 14 89     	ld hl,Limite_vertical
 393+ 9589 36 0D        	ld (hl),$0d
 394+ 958B 08           	ex af,af
 395+ 958C 18 11        	jr 1F
 396+ 958E              primcuad
 397+ 958E 3E 01        	ld a,1
 398+ 9590 32 E8 88     	ld (Cuad_objeto),a
 399+ 9593 21 C0 4F     	ld hl,$4fc0
 400+ 9596 22 12 89     	ld (Limite_horizontal),hl
 401+ 9599 21 14 89     	ld hl,Limite_vertical
 402+ 959C 36 12        	ld (hl),$12
 403+ 959E 08           	ex af,af
 404+ 959F CD 4C 9D     1 call Genera_coordenadas
 405+ 95A2 21 04 89     	ld hl,Ctrl_0
 406+ 95A5 CB EE        	set 5,(hl)
 407+ 95A7 C9           	ret
 408+ 95A8
 409+ 95A8              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95A8
 411+ 95A8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95A8              ;
 413+ 95A8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95A8
 415+ 95A8 7D           column ld a,l
 416+ 95A9 E6 1F        	and $1f
 417+ 95AB FE 10         	cp $10
 418+ 95AD C9            	ret
 419+ 95AE
 420+ 95AE              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95AE              ;
 422+ 95AE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95AE              ;
 424+ 95AE              ; 14/12/22
 425+ 95AE              ;
 426+ 95AE              ;	Modifica: A y BC.
 427+ 95AE
 428+ 95AE 3A E8 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95B1 E6 01        	and 1
 430+ 95B3 28 17        	jr z,1F
 431+ 95B5
 432+ 95B5              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95B5
 434+ 95B5 3A DA 88     	ld a,(Coordenada_X)
 435+ 95B8 47           	ld b,a
 436+ 95B9 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95BA 79           	ld a,c
 438+ 95BB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95BC 38 08        	jr c,2F
 440+ 95BE 47           	ld b,a
 441+ 95BF 79           	ld a,c
 442+ 95C0 90           	sub b
 443+ 95C1 32 11 89     	ld (Columnas),a
 444+ 95C4 18 1B        	jr 4F
 445+ 95C6 79           2 ld a,c
 446+ 95C7 32 11 89     	ld (Columnas),a
 447+ 95CA 18 15        	jr 4F
 448+ 95CC
 449+ 95CC              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95CC
 451+ 95CC 3A DA 88     1 ld a,(Coordenada_X)
 452+ 95CF 81           	add c
 453+ 95D0 3D           	dec a
 454+ 95D1 D6 1F        	sub $1f
 455+ 95D3 38 08        	jr c,3F
 456+ 95D5 47           	ld b,a
 457+ 95D6 79           	ld a,c
 458+ 95D7 90           	sub b
 459+ 95D8 32 11 89     	ld (Columnas),a
 460+ 95DB 18 04        	jr 4F
 461+ 95DD 79           3 ld a,c
 462+ 95DE 32 11 89     	ld (Columnas),a
 463+ 95E1 D9           4 exx
 464+ 95E2 4F           	ld c,a
 465+ 95E3 D9           	exx
 466+ 95E4 C9            ret
 467+ 95E5
 468+ 95E5              ; --------------------------------------------------------------------------------------------------------------------
 469+ 95E5              ;
 470+ 95E5              ;   19/7/23
 471+ 95E5              ;
 472+ 95E5              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 95E5              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 95E5              ;
 475+ 95E5              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 95E5              ;			HL e IY Contienen (Puntero_objeto).
 477+ 95E5              ;
 478+ 95E5              ;	DESTRUYE: HL,B Y A.
 479+ 95E5
 480+ 95E5 3A E8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 95E8 FE 02        	cp 2
 482+ 95EA 38 18        	jr c,1F
 483+ 95EC 28 16        	jr z,1F
 484+ 95EE E6 01        	and 1
 485+ 95F0 28 0D        	jr z,3F
 486+ 95F2
 487+ 95F2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 95F2
 489+ 95F2 CD 38 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 95F5
 491+ 95F5 7D           9 ld a,l
 492+ 95F6 E6 1F        	and $1f
 493+ 95F8 28 2A        	jr z,7F
 494+ 95FA 2B           	dec hl
 495+ 95FB 10 F8        	djnz 9B
 496+ 95FD 18 25        	jr 7F
 497+ 95FF
 498+ 95FF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 95FF
 500+ 95FF 2A D6 88     3 ld hl,(Posicion_actual)
 501+ 9602 18 20        	jr 7F
 502+ 9604
 503+ 9604 28 14        1 jr z,2F
 504+ 9606
 505+ 9606              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9606
 507+ 9606 CD 38 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9609
 509+ 9609 7D           4 ld a,l
 510+ 960A E6 1F        	and $1f
 511+ 960C 28 03        	jr z,6F
 512+ 960E 2B           	dec hl
 513+ 960F 10 F8        	djnz 4B
 514+ 9611 06 0F        6 ld b,15
 515+ 9613 CD 99 96     5 call PreviousScan
 516+ 9616 10 FB        	djnz 5B
 517+ 9618 18 0A        	jr 7F
 518+ 961A
 519+ 961A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 961A
 521+ 961A CD 38 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 961D 06 0F        	ld b,15
 523+ 961F CD 99 96     8 call PreviousScan
 524+ 9622 10 FB        	djnz 8B
 525+ 9624
 526+ 9624 E5           7 push hl
 527+ 9625 DD E1        	pop ix
 528+ 9627
 529+ 9627 2A D8 88     	ld hl,(Puntero_objeto)
 530+ 962A E5           	push hl
 531+ 962B FD E1        	pop iy
 532+ 962D
 533+ 962D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 962D
 535+ 962D 3A 04 89     	ld a,(Ctrl_0)
 536+ 9630 CB 77        	bit 6,a
 537+ 9632 C8           	ret z
 538+ 9633
 539+ 9633              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9633              ; _ entidad / Amadeus´.
 541+ 9633
 542+ 9633 DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 9637
 544+ 9637 C9           	ret
 545+ 9638
 546+ 9638              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9638              ;
 548+ 9638              ;	2/1/23
 549+ 9638              ;
 550+ 9638              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9638              ;
 552+ 9638              ;	Tras esta rutina tenemos:
 553+ 9638              ;
 554+ 9638              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9638              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9638              ;
 557+ 9638              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9638
 559+ 9638 2A D6 88     Operandos ld hl,(Posicion_actual)
 560+ 963B 3A 11 89     	ld a,(Columnas)
 561+ 963E 3D           	dec a
 562+ 963F 20 01        	jr nz,1F
 563+ 9641 3C           	inc a
 564+ 9642 47           1 ld b,a
 565+ 9643 C9           	ret
 566+ 9644
 567+ 9644              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9644              ;
 569+ 9644              ;	3/1/23
 570+ 9644              ;
 571+ 9644              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9644              ;
 573+ 9644              ;	Destruye: A,B,HL y DE.
 574+ 9644
 575+ 9644              Define_rutina_de_impresion
 576+ 9644
 577+ 9644 3A D5 88     	ld a,(Columns)
 578+ 9647 47           	ld b,a
 579+ 9648 3A 11 89     	ld a,(Columnas)
 580+ 964B B8           	cp b
 581+ 964C 20 0D        	jr nz,2f
 582+ 964E
 583+ 964E              ;	La entidad se imprime entera.
 584+ 964E
 585+ 964E 21 6D 97     	ld hl, Indice_entidades_completas
 586+ 9651 E6 01        	and 1
 587+ 9653 28 02        	jr z,1F
 588+ 9655
 589+ 9655 23           	inc hl
 590+ 9656 23           	inc hl
 591+ 9657
 592+ 9657 CD 1E 8D     1 call Extrae_address
 593+ 965A C9           	ret		;	ret
 594+ 965B
 595+ 965B              ;	La entidad no se imprime entera en pantalla.
 596+ 965B
 597+ 965B 3A E8 88     2 ld a,(Cuad_objeto)
 598+ 965E E6 01        	and 1
 599+ 9660 28 17        	jr z,3F
 600+ 9662
 601+ 9662              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9662
 603+ 9662 21 71 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9665 3A D5 88     4 ld a,(Columns)
 605+ 9668 E6 01        	and 1
 606+ 966A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 966C
 608+ 966C 23           	inc hl
 609+ 966D 23           	inc hl
 610+ 966E
 611+ 966E 3A 11 89     	ld a,(Columnas)
 612+ 9671 E6 01        	and 1
 613+ 9673 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9675
 615+ 9675 23           	inc hl
 616+ 9676 23           	inc hl
 617+ 9677
 618+ 9677 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9679
 620+ 9679 21 77 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 967C 18 E7        	jr 4B
 622+ 967E
 623+ 967E              ; --------------------------------------------------------------------------------------------------------------------
 624+ 967E              ;
 625+ 967E              ;	Prepara_draw
 626+ 967E              ;
 627+ 967E              ;	Es una rutina de carga.
 628+ 967E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 967E              ;
 630+ 967E              ;	FUNCIONAMIENTO:
 631+ 967E              ;
 632+ 967E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 967E              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 967E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 967E              ;
 636+ 967E              ;	DESTRUYE:
 637+ 967E              ;
 638+ 967E              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 967E
 640+ 967E 21 D4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 9681 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 9682 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9683 4E           	ld c,(hl)
 644+ 9684 2A D6 88     	ld hl,(Posicion_actual)
 645+ 9687 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 9689 C9           	ret
 647+ 968A
 648+ 968A              ;----------------------------------------------------------------------------------------------------------------
 649+ 968A              ;
 650+ 968A              ;	5/08/22
 651+ 968A              ;
 652+ 968A              ;   NextScan.
 653+ 968A              ;
 654+ 968A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 968A              ;
 656+ 968A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 968A              ;
 658+ 968A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 968A              ;
 660+ 968A              ;       DESTRUIDOS: AF y HL !!!
 661+ 968A              ;
 662+ 968A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 968A              ;
 664+ 968A
 665+ 968A 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 968B 7C               ld a,h
 667+ 968C E6 07            and 7
 668+ 968E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 968F
 670+ 968F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 9690 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 9692 6F               ld l,a
 673+ 9693 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 9694
 675+ 9694 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 9695 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 9697 67               ld h,a
 678+ 9698 C9               ret
 679+ 9699
 680+ 9699              ;----------------------------------------------------------------------------------------------------------------
 681+ 9699              ;
 682+ 9699              ;	5/08/22
 683+ 9699              ;
 684+ 9699              ;   PreviousScan.
 685+ 9699              ;
 686+ 9699              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 9699              ;
 688+ 9699              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 9699              ;
 690+ 9699              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 9699              ;
 692+ 9699              ;       DESTRUIDOS: AF y HL !!!
 693+ 9699              ;
 694+ 9699              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 9699              ;
 696+ 9699
 697+ 9699 7C           PreviousScan ld a,h
 698+ 969A 25               dec h               ; Dec H.
 699+ 969B E6 07            and 7
 700+ 969D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 969E
 702+ 969E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 969F D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96A1 6F               ld l,a
 705+ 96A2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96A3
 707+ 96A3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96A4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96A6 67               ld h,a
 710+ 96A7 C9               ret
 711+ 96A8
 712+ 96A8              ; -----------------------------------------------------------------------------------
 713+ 96A8              ;
 714+ 96A8              ;	31/7/23
 715+ 96A8              ;
 716+ 96A8              ;	Rutina principal de pintado de entidades.
 717+ 96A8              ;	Extrae la foto del frame, (entidades).
 718+ 96A8
 719+ 96A8              Extrae_foto_entidades
 720+ 96A8
 721+ 96A8 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96AB 7E           	ld a,(hl)
 723+ 96AC A7           	and a
 724+ 96AD C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96AE
 726+ 96AE              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96AE
 728+ 96AE 3A 23 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96B1 A7           	and a
 730+ 96B2 C8           	ret z
 731+ 96B3
 732+ 96B3              ; -----------------------------------
 733+ 96B3
 734+ 96B3 ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96B7 31 00 70     	ld sp,Album_de_fotos
 736+ 96BA
 737+ 96BA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96BC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96BD D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96BE
 741+ 96BE ED 73 2A 89  	ld (Stack_2),sp
 742+ 96C2 ED 7B 28 89  	ld sp,(Stack)
 743+ 96C6
 744+ 96C6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96C6
 746+ 96C6 3E CD        	ld a,$cd
 747+ 96C8 32 D0 96     	ld (Imprime),a
 748+ 96CB EB           	ex de,hl
 749+ 96CC 22 D1 96     	ld (Imprime+1),hl
 750+ 96CF EB           	ex de,hl
 751+ 96D0
 752+ 96D0              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96D0
 754+ 96D0 00 00 00     Imprime db 0,0,0
 755+ 96D3
 756+ 96D3 ED 73 28 89  	ld (Stack),sp
 757+ 96D7
 758+ 96D7 3A 23 89     	ld a,(Numero_de_malotes)
 759+ 96DA 3D           	dec a
 760+ 96DB 28 09        	jr z,1F
 761+ 96DD 32 23 89      	ld (Numero_de_malotes),a
 762+ 96E0
 763+ 96E0 ED 7B 2A 89  	ld sp,(Stack_2)
 764+ 96E4 18 D4        	jr 2B
 765+ 96E6
 766+ 96E6 AF           1 xor a
 767+ 96E7 32 2A 89     	ld (Stack_2),a
 768+ 96EA
 769+ 96EA C9           	ret
 770+ 96EB
 771+ 96EB              ; -----------------------------------------------------------------------------------
 772+ 96EB              ;
 773+ 96EB              ;	28/2/23
 774+ 96EB              ;
 775+ 96EB              ;	Pinta los disparos generados.
 776+ 96EB
 777+ 96EB              Extrae_foto_disparos
 778+ 96EB
 779+ 96EB 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 96EE 7E               ld a,(hl)
 781+ 96EF A7               and a
 782+ 96F0 C8               ret z
 783+ 96F1
 784+ 96F1 3A 37 89     	ld a,(Numero_de_disparotes)
 785+ 96F4 A7           	and a
 786+ 96F5 C8           	ret z
 787+ 96F6 ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 96FA 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 96FD
 790+ 96FD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 96FF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9700 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9701
 794+ 9701 ED 73 2A 89  	ld (Stack_2),sp
 795+ 9705 ED 7B 28 89  	ld sp,(Stack)
 796+ 9709
 797+ 9709              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9709
 799+ 9709 3E CD        	ld a,$cd
 800+ 970B 32 13 97     	ld (Imprime2),a
 801+ 970E EB           	ex de,hl
 802+ 970F 22 14 97     	ld (Imprime2+1),hl
 803+ 9712 EB           	ex de,hl
 804+ 9713
 805+ 9713              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9713
 807+ 9713 00 00 00     Imprime2 db 0,0,0
 808+ 9716
 809+ 9716 3A 37 89     	ld a,(Numero_de_disparotes)
 810+ 9719 3D           	dec a
 811+ 971A 28 09        	jr z,1F
 812+ 971C 32 37 89      	ld (Numero_de_disparotes),a
 813+ 971F
 814+ 971F ED 7B 2A 89  	ld sp,(Stack_2)
 815+ 9723 18 D8        	jr 2B
 816+ 9725
 817+ 9725 AF           1 xor a
 818+ 9726 32 2A 89     	ld (Stack_2),a
 819+ 9729 C9           	ret
 820+ 972A
 821+ 972A              ; -----------------------------------------------------------------------------------
 822+ 972A              ;
 823+ 972A              ;	4/9/23
 824+ 972A              ;
 825+ 972A              ;	Rutina principal de pintado de Amadeus.
 826+ 972A              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 972A
 828+ 972A 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 972D 7E           	ld a,(hl)
 830+ 972E A7           	and a
 831+ 972F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9730
 833+ 9730 3A 23 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9733 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9734 C8           	ret z
 836+ 9735
 837+ 9735              ; -----------------------------------
 838+ 9735
 839+ 9735 ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9739 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 973C
 842+ 973C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 973E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 973F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 9740
 846+ 9740 ED 73 2A 89  	ld (Stack_2),sp
 847+ 9744 ED 7B 28 89  	ld sp,(Stack)
 848+ 9748
 849+ 9748              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9748
 851+ 9748 3E CD        	ld a,$cd
 852+ 974A 32 52 97     	ld (Imprime_Amadeus),a
 853+ 974D EB           	ex de,hl
 854+ 974E 22 53 97     	ld (Imprime_Amadeus+1),hl
 855+ 9751 EB           	ex de,hl
 856+ 9752
 857+ 9752              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9752
 859+ 9752 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9755
 861+ 9755 ED 73 28 89  	ld (Stack),sp
 862+ 9759
 863+ 9759 3A 23 89     	ld a,(Numero_de_malotes)
 864+ 975C 3D           	dec a
 865+ 975D 28 09        	jr z,1F
 866+ 975F 32 23 89      	ld (Numero_de_malotes),a
 867+ 9762
 868+ 9762 ED 7B 2A 89  	ld sp,(Stack_2)
 869+ 9766 18 D4        	jr 2B
 870+ 9768
 871+ 9768 AF           1 xor a
 872+ 9769 32 2A 89     	ld (Stack_2),a
 873+ 976C
 874+ 976C C9           	ret
# file closed: Draw_XOR.asm
1778  976D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 976D              ;   índices de Rutinas de impresión.
   2+ 976D
   3+ 976D 7D 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 976F AA 97            defw Pinta_Amadeus_3x2
   5+ 9771
   6+ 9771 00 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9773 A0 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9775 54 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9777
  10+ 9777 2A 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9779 2E 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 977B E2 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 977D
  14+ 977D
  15+ 977D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 977D              ;
  17+ 977D              ;   12/12/22
  18+ 977D              ;
  19+ 977D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 977D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 977D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 977D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 977D              ;
  24+ 977D              ;   Modifica: DE y HL.
  25+ 977D
  26+ 977D ED 73 28 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9781 FD F9        	ld sp,iy
  28+ 9783 06 10            ld b,16
  29+ 9785 D1           1 pop de
  30+ 9786 7B               ld a,e
  31+ 9787 AE               xor (hl)
  32+ 9788 77           	ld (hl),a
  33+ 9789 23           	inc hl
  34+ 978A 7A               ld a,d
  35+ 978B AE               xor (hl)
  36+ 978C 77           	ld (hl),a
  37+ 978D 2B           	dec hl
  38+ 978E 24           	inc h
  39+ 978F 7C               ld a,h
  40+ 9790 E6 07            and 7
  41+ 9792 20 0A            jr nz,2F
  42+ 9794 7D               ld a,l
  43+ 9795 C6 20            add a,$20
  44+ 9797 6F               ld l,a
  45+ 9798 38 04            jr c,2F
  46+ 979A 7C               ld a,h
  47+ 979B D6 08            sub 8
  48+ 979D 67               ld h,a
  49+ 979E 7C           2 ld a,h
  50+ 979F FE 58            cp $58
  51+ 97A1 28 02            jr z,3F
  52+ 97A3 10 E0            djnz 1B
  53+ 97A5 ED 7B 28 89  3 ld sp,(Stack)
  54+ 97A9 C9           	ret
  55+ 97AA
  56+ 97AA ED 73 28 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97AE FD F9        	ld sp,iy
  58+ 97B0 06 08            ld b,8
  59+ 97B2 D1           1 pop de
  60+ 97B3 7B               ld a,e
  61+ 97B4 AE               xor (hl)
  62+ 97B5 77           	ld (hl),a
  63+ 97B6 23           	inc hl
  64+ 97B7 7A               ld a,d
  65+ 97B8 AE               xor (hl)
  66+ 97B9 77           	ld (hl),a
  67+ 97BA 23           	inc hl
  68+ 97BB D1           	pop de
  69+ 97BC 7B               ld a,e
  70+ 97BD AE               xor (hl)
  71+ 97BE 77           	ld (hl),a
  72+ 97BF 2B           	dec hl
  73+ 97C0 2B           	dec hl
  74+ 97C1 24           	inc h
  75+ 97C2 7C               ld a,h
  76+ 97C3 E6 07            and 7
  77+ 97C5 20 0A            jr nz,2F
  78+ 97C7 7D               ld a,l
  79+ 97C8 C6 20            add a,$20
  80+ 97CA 6F               ld l,a
  81+ 97CB 38 04            jr c,2F
  82+ 97CD 7C               ld a,h
  83+ 97CE D6 08            sub 8
  84+ 97D0 67               ld h,a
  85+ 97D1 7C           2 ld a,h
  86+ 97D2 FE 58            cp $58
  87+ 97D4 28 25            jr z,4F
  88+ 97D6 7A               ld a,d
  89+ 97D7 AE               xor (hl)
  90+ 97D8 77               ld (hl),a
  91+ 97D9 D1           	pop de
  92+ 97DA 23           	inc hl
  93+ 97DB 7B               ld a,e
  94+ 97DC AE               xor (hl)
  95+ 97DD 77           	ld (hl),a
  96+ 97DE 23           	inc hl
  97+ 97DF 7A               ld a,d
  98+ 97E0 AE               xor (hl)
  99+ 97E1 77           	ld (hl),a
 100+ 97E2 2B           	dec hl
 101+ 97E3 2B           	dec hl
 102+ 97E4 24           	inc h
 103+ 97E5 7C               ld a,h
 104+ 97E6 E6 07            and 7
 105+ 97E8 20 0A            jr nz,3F
 106+ 97EA 7D               ld a,l
 107+ 97EB C6 20            add a,$20
 108+ 97ED 6F               ld l,a
 109+ 97EE 38 04            jr c,3F
 110+ 97F0 7C               ld a,h
 111+ 97F1 D6 08            sub 8
 112+ 97F3 67               ld h,a
 113+ 97F4 7C           3 ld a,h
 114+ 97F5 FE 58            cp $58
 115+ 97F7 28 02            jr z,4F
 116+ 97F9 10 B7            djnz 1B
 117+ 97FB ED 7B 28 89  4 ld sp,(Stack)
 118+ 97FF C9           	ret
 119+ 9800
 120+ 9800              ; ---------------------------------------------------
 121+ 9800
 122+ 9800 ED 73 28 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9804 FD F9        	ld sp,iy
 124+ 9806
 125+ 9806              ; >>>
 126+ 9806
 127+ 9806 06 10            ld b,16
 128+ 9808 D1           1 pop de
 129+ 9809 7A           	ld a,d
 130+ 980A AE           	xor (hl)
 131+ 980B 77           	ld (hl),a
 132+ 980C 24           	inc h
 133+ 980D 7C               ld a,h
 134+ 980E E6 07            and 7
 135+ 9810 20 0C            jr nz,2F
 136+ 9812 7D               ld a,l
 137+ 9813 C6 20            add a,$20
 138+ 9815 6F               ld l,a
 139+ 9816 38 06            jr c,2F
 140+ 9818 7C               ld a,h
 141+ 9819 D6 08            sub 8
 142+ 981B 67               ld h,a
 143+ 981C 18 00            jr 2F
 144+ 981E 7C           2 ld a,h
 145+ 981F FE 58            cp $58
 146+ 9821 28 02            jr z,3F
 147+ 9823 10 E3            djnz 1B
 148+ 9825 ED 7B 28 89  3 ld sp,(Stack)
 149+ 9829 C9           	ret
 150+ 982A
 151+ 982A ED 73 28 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 982E FD F9        	ld sp,iy
 153+ 9830
 154+ 9830              ; >>>
 155+ 9830
 156+ 9830 06 10            ld b,16
 157+ 9832 D1           1 pop de
 158+ 9833 7B           	ld a,e
 159+ 9834 AE           	xor (hl)
 160+ 9835 77           	ld (hl),a
 161+ 9836 24           	inc h
 162+ 9837 7C               ld a,h
 163+ 9838 E6 07            and 7
 164+ 983A 20 0C            jr nz,2F
 165+ 983C 7D               ld a,l
 166+ 983D C6 20            add a,$20
 167+ 983F 6F               ld l,a
 168+ 9840 38 06            jr c,2F
 169+ 9842 7C               ld a,h
 170+ 9843 D6 08            sub 8
 171+ 9845 67               ld h,a
 172+ 9846 18 00            jr 2F
 173+ 9848 7C           2 ld a,h
 174+ 9849 FE 58            cp $58
 175+ 984B 28 02            jr z,3F
 176+ 984D 10 E3            djnz 1B
 177+ 984F ED 7B 28 89  3 ld sp,(Stack)
 178+ 9853 C9           	ret
 179+ 9854
 180+ 9854              ; ---------------------------------------------------
 181+ 9854
 182+ 9854 ED 73 28 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9858 FD F9        	ld sp,iy
 184+ 985A 06 08            ld b,8
 185+ 985C D1           1 pop de
 186+ 985D 7A           	ld a,d
 187+ 985E AE           	xor (hl)
 188+ 985F 77           	ld (hl),a
 189+ 9860 23           	inc hl
 190+ 9861 D1           	pop de
 191+ 9862 7B           	ld a,e
 192+ 9863 AE           	xor (hl)
 193+ 9864 77           	ld (hl),a
 194+ 9865 2B           	dec hl
 195+ 9866 24            	inc h
 196+ 9867 7C               ld a,h
 197+ 9868 E6 07            and 7
 198+ 986A 20 0A            jr nz,2F
 199+ 986C 7D               ld a,l
 200+ 986D C6 20            add a,$20
 201+ 986F 6F               ld l,a
 202+ 9870 38 04            jr c,2F
 203+ 9872 7C               ld a,h
 204+ 9873 D6 08            sub 8
 205+ 9875 67               ld h,a
 206+ 9876 7C           2 ld a,h
 207+ 9877 FE 58            cp $58
 208+ 9879 28 20            jr z,4F
 209+ 987B D1               pop de
 210+ 987C 7B           	ld a,e
 211+ 987D AE           	xor (hl)
 212+ 987E 77           	ld (hl),a
 213+ 987F 23           	inc hl
 214+ 9880 7A           	ld a,d
 215+ 9881 AE           	xor (hl)
 216+ 9882 77           	ld (hl),a
 217+ 9883 2B           	dec hl
 218+ 9884 24           	inc h
 219+ 9885 7C               ld a,h
 220+ 9886 E6 07            and 7
 221+ 9888 20 0A            jr nz,3F
 222+ 988A 7D               ld a,l
 223+ 988B C6 20            add a,$20
 224+ 988D 6F               ld l,a
 225+ 988E 38 04            jr c,3F
 226+ 9890 7C               ld a,h
 227+ 9891 D6 08            sub 8
 228+ 9893 67               ld h,a
 229+ 9894 7C           3 ld a,h
 230+ 9895 FE 58            cp $58
 231+ 9897 28 02            jr z,4F
 232+ 9899 10 C1            djnz 1B
 233+ 989B ED 7B 28 89  4 ld sp,(Stack)
 234+ 989F C9           	ret
 235+ 98A0
 236+ 98A0 ED 73 28 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98A4 FD F9        	ld sp,iy
 238+ 98A6 06 08            ld b,8
 239+ 98A8 D1           1 pop de
 240+ 98A9 D1           	pop de
 241+ 98AA 7B           	ld a,e
 242+ 98AB AE           	xor (hl)
 243+ 98AC 77           	ld (hl),a
 244+ 98AD 24            	inc h
 245+ 98AE 7C               ld a,h
 246+ 98AF E6 07            and 7
 247+ 98B1 20 0A            jr nz,2F
 248+ 98B3 7D               ld a,l
 249+ 98B4 C6 20            add a,$20
 250+ 98B6 6F               ld l,a
 251+ 98B7 38 04            jr c,2F
 252+ 98B9 7C               ld a,h
 253+ 98BA D6 08            sub 8
 254+ 98BC 67               ld h,a
 255+ 98BD 7C           2 ld a,h
 256+ 98BE FE 58            cp $58
 257+ 98C0 28 1B            jr z,4F
 258+ 98C2 D1               pop de
 259+ 98C3 7A           	ld a,d
 260+ 98C4 AE           	xor (hl)
 261+ 98C5 77           	ld (hl),a
 262+ 98C6 24           	inc h
 263+ 98C7 7C               ld a,h
 264+ 98C8 E6 07            and 7
 265+ 98CA 20 0A            jr nz,3F
 266+ 98CC 7D               ld a,l
 267+ 98CD C6 20            add a,$20
 268+ 98CF 6F               ld l,a
 269+ 98D0 38 04            jr c,3F
 270+ 98D2 7C               ld a,h
 271+ 98D3 D6 08            sub 8
 272+ 98D5 67               ld h,a
 273+ 98D6 7C           3 ld a,h
 274+ 98D7 FE 58            cp $58
 275+ 98D9 28 02            jr z,4F
 276+ 98DB 10 CB            djnz 1B
 277+ 98DD ED 7B 28 89  4 ld sp,(Stack)
 278+ 98E1 C9           	ret
 279+ 98E2
 280+ 98E2 ED 73 28 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98E6 FD F9        	ld sp,iy
 282+ 98E8 06 08            ld b,8
 283+ 98EA D1           1 pop de
 284+ 98EB 7B           	ld a,e
 285+ 98EC AE           	xor (hl)
 286+ 98ED 77           	ld (hl),a
 287+ 98EE 23           	inc hl
 288+ 98EF 7A           	ld a,d
 289+ 98F0 AE           	xor (hl)
 290+ 98F1 77           	ld (hl),a
 291+ 98F2 2B           	dec hl
 292+ 98F3 24             	inc h
 293+ 98F4 7C               ld a,h
 294+ 98F5 E6 07            and 7
 295+ 98F7 20 0A            jr nz,2F
 296+ 98F9 7D               ld a,l
 297+ 98FA C6 20            add a,$20
 298+ 98FC 6F               ld l,a
 299+ 98FD 38 04            jr c,2F
 300+ 98FF 7C               ld a,h
 301+ 9900 D6 08            sub 8
 302+ 9902 67               ld h,a
 303+ 9903 7C           2 ld a,h
 304+ 9904 FE 58            cp $58
 305+ 9906 28 21            jr z,4F
 306+ 9908 D1               pop de
 307+ 9909 7A           	ld a,d
 308+ 990A AE           	xor (hl)
 309+ 990B 77           	ld (hl),a
 310+ 990C 23           	inc hl
 311+ 990D D1               pop de
 312+ 990E 7B           	ld a,e
 313+ 990F AE           	xor (hl)
 314+ 9910 77           	ld (hl),a
 315+ 9911 2B           	dec hl
 316+ 9912 24           	inc h
 317+ 9913 7C               ld a,h
 318+ 9914 E6 07            and 7
 319+ 9916 20 0A            jr nz,3F
 320+ 9918 7D               ld a,l
 321+ 9919 C6 20            add a,$20
 322+ 991B 6F               ld l,a
 323+ 991C 38 04            jr c,3F
 324+ 991E 7C               ld a,h
 325+ 991F D6 08            sub 8
 326+ 9921 67               ld h,a
 327+ 9922 7C           3 ld a,h
 328+ 9923 FE 58            cp $58
 329+ 9925 28 02            jr z,4F
 330+ 9927 10 C1            djnz 1B
 331+ 9929 ED 7B 28 89  4 ld sp,(Stack)
 332+ 992D C9           	ret
 333+ 992E
 334+ 992E ED 73 28 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9932 FD F9        	ld sp,iy
 336+ 9934 06 08            ld b,8
 337+ 9936 D1           1 pop de
 338+ 9937 7B           	ld a,e
 339+ 9938 AE           	xor (hl)
 340+ 9939 77           	ld (hl),a
 341+ 993A 24            	inc h
 342+ 993B 7C               ld a,h
 343+ 993C E6 07            and 7
 344+ 993E 20 0A            jr nz,2F
 345+ 9940 7D               ld a,l
 346+ 9941 C6 20            add a,$20
 347+ 9943 6F               ld l,a
 348+ 9944 38 04            jr c,2F
 349+ 9946 7C               ld a,h
 350+ 9947 D6 08            sub 8
 351+ 9949 67               ld h,a
 352+ 994A 7C           2 ld a,h
 353+ 994B FE 58            cp $58
 354+ 994D 28 1C            jr z,4F
 355+ 994F D1               pop de
 356+ 9950 7A           	ld a,d
 357+ 9951 AE           	xor (hl)
 358+ 9952 77           	ld (hl),a
 359+ 9953 24           	inc h
 360+ 9954 7C               ld a,h
 361+ 9955 E6 07            and 7
 362+ 9957 20 0A            jr nz,3F
 363+ 9959 7D               ld a,l
 364+ 995A C6 20            add a,$20
 365+ 995C 6F               ld l,a
 366+ 995D 38 04            jr c,3F
 367+ 995F 7C               ld a,h
 368+ 9960 D6 08            sub 8
 369+ 9962 67               ld h,a
 370+ 9963 7C           3 ld a,h
 371+ 9964 FE 58            cp $58
 372+ 9966 28 03            jr z,4F
 373+ 9968 D1               pop de
 374+ 9969 10 CB            djnz 1B
 375+ 996B ED 7B 28 89  4 ld sp,(Stack)
 376+ 996F C9           	ret
 377+ 9970
 378+ 9970              ; ---------------------------------------------------
 379+ 9970              ;
 380+ 9970              ;   27/02/23
 381+ 9970              ;
 382+ 9970              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9970              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9970              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9970
 386+ 9970 ED 73 28 89  Pinta_Disparo ld (Stack),sp
 387+ 9974 FD F9            ld sp,iy
 388+ 9976 06 03            ld b,3
 389+ 9978 D1           1 pop de
 390+ 9979 7B               ld a,e
 391+ 997A AE               xor (hl)
 392+ 997B 77               ld (hl),a
 393+ 997C 23               inc hl
 394+ 997D 7A               ld a,d
 395+ 997E AE               xor (hl)
 396+ 997F 77               ld (hl),a
 397+ 9980 2B               dec hl
 398+ 9981
 399+ 9981 24               inc h
 400+ 9982 7C               ld a,h
 401+ 9983 E6 07            and 7
 402+ 9985 20 0A            jr nz,2F
 403+ 9987 7D               ld a,l
 404+ 9988 C6 20            add a,$20
 405+ 998A 6F               ld l,a
 406+ 998B 38 04            jr c,2F
 407+ 998D 7C               ld a,h
 408+ 998E D6 08            sub 8
 409+ 9990 67               ld h,a
 410+ 9991 7C           2 ld a,h
 411+ 9992 FE 58            cp $58
 412+ 9994 28 02            jr z,3F
 413+ 9996
 414+ 9996 10 E0            djnz 1B
 415+ 9998 ED 7B 28 89  3 ld sp,(Stack)
 416+ 999C C9               ret
 417+ 999D
# file closed: Rutinas_de_impresion_sprites.asm
1779  999D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 999D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 999D              ;
   3+ 999D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 999D              ;
   5+ 999D              ; *****************************************************************************************************************************************************************************************
   6+ 999D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 999D
   8+ 999D 7C           calcula_tercio ld a,h
   9+ 999E E6 18        	and $18
  10+ 99A0 CB 2F        	sra a
  11+ 99A2 CB 2F        	sra a
  12+ 99A4 CB 2F        	sra a
  13+ 99A6 C9           	ret
  14+ 99A7
# file closed: calcula_tercio.asm
1780  99A7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99A7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99A7              ;
   3+ 99A7              ;
   4+ 99A7              ;	CLS.
   5+ 99A7              ;
   6+ 99A7              ;	Limpia la pantalla y define sus atributos.
   7+ 99A7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99A7              ;
   9+ 99A7              ;	COLORES: 0 ..... NEGRO
  10+ 99A7              ;    		 1 ..... AZUL
  11+ 99A7              ; 			 2 ..... ROJO
  12+ 99A7              ;			 3 ..... MAGENTA
  13+ 99A7              ; 			 4 ..... VERDE
  14+ 99A7              ; 			 5 ..... CIAN
  15+ 99A7              ;			 6 ..... AMARILLO
  16+ 99A7              ; 			 7 ..... BLANCO
  17+ 99A7              ;
  18+ 99A7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99A7              ;
  20+ 99A7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99A7
  22+ 99A7
  23+ 99A7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99AA 11 01 40     	LD DE,$4001
  25+ 99AD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99B0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99B2 ED B0        	LDIR
  28+ 99B4 01 FF 02     	LD BC,767
  29+ 99B7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99B8 ED B0        	LDIR
  31+ 99BA C9           	ret
  32+ 99BB
# file closed: Cls.asm
1781  99BB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99BB              ; ******************************************************************************************************************************************************************************************
   2+ 99BB              ;
   3+ 99BB              ;   20/05/23
   4+ 99BB              ;
   5+ 99BB              ;	Recompone_posicion_inicio
   6+ 99BB              ;
   7+ 99BB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99BB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99BB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99BB              ;	_ a una u otra rutina.
  11+ 99BB
  12+ 99BB              Recompone_posicion_inicio
  13+ 99BB
  14+ 99BB 2A E6 88     	ld hl,(Posicion_inicio)
  15+ 99BE 7D           	ld a,l
  16+ 99BF E6 1F        	and $1f
  17+ 99C1 28 16        	jr z,1F
  18+ 99C3
  19+ 99C3 FE 1F        	cp $1f
  20+ 99C5 28 0D        	jr z,3F
  21+ 99C7
  22+ 99C7 21 15 89     	ld hl,Ctrl_2
  23+ 99CA CB C6        	set 0,(hl)
  24+ 99CC 2A D8 88     	ld hl,(Puntero_objeto)
  25+ 99CF 22 18 89     	ld (Repone_puntero_objeto),hl
  26+ 99D2 18 08        	jr 2F
  27+ 99D4
  28+ 99D4 CD 99 9B     3 call Mov_left
  29+ 99D7 18 03        	jr 2F
  30+ 99D9
  31+ 99D9 CD 7B 9A     1 call Mov_right
  32+ 99DC 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99DF 22 D8 88     	ld (Puntero_objeto),hl
  34+ 99E2 C9           	ret
  35+ 99E3
  36+ 99E3              ; ******************************************************************************************************************************************************************************************
  37+ 99E3              ;
  38+ 99E3              ;   27/05/23
  39+ 99E3              ;
  40+ 99E3              ;	Mov_down
  41+ 99E3              ;
  42+ 99E3              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99E3              ;
  44+ 99E3              ;
  45+ 99E3              Mov_down
  46+ 99E3
  47+ 99E3 CD 69 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99E6              ;																	; _ repone (Puntero_objeto).
  49+ 99E6 21 04 89     	ld hl,Ctrl_0
  50+ 99E9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99EB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99EB              ; 																	; _ en el caso de que no lo haya.
  53+ 99EB 3A EC 88     	ld a,(Vel_down)
  54+ 99EE 47           	ld b,a
  55+ 99EF 2A D6 88         ld hl,(Posicion_actual)
  56+ 99F2 CD 9D 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99F5 E6 02        	and 2
  58+ 99F7 28 33        	jr z,1F
  59+ 99F9
  60+ 99F9              ; Nos encontramos en el último tercio de pantalla.
  61+ 99F9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99F9
  63+ 99F9 7C           	ld a,h
  64+ 99FA FE 57        	cp $57
  65+ 99FC 20 2E        	jr nz,1F
  66+ 99FE
  67+ 99FE 7D           	ld a,l
  68+ 99FF C6 20        	add $20
  69+ 9A01 30 29        	jr nc,1F
  70+ 9A03
  71+ 9A03              ; ------------------------------
  72+ 9A03              ;
  73+ 9A03              ;	17/12/15
  74+ 9A03
  75+ 9A03              ;	call Reaparece_arriba
  76+ 9A03 CD 26 9D     	call Reinicio
  77+ 9A06
  78+ 9A06              ;	Homos generado todos los movimientos posibles de esta entidad.
  79+ 9A06              ;	Si se trata de una Entidad_guía dejará de serlo.
  80+ 9A06
  81+ 9A06 3A 36 89     	ld a,(Ctrl_3)
  82+ 9A09 CB 5F        	bit 3,a
  83+ 9A0B 20 27        	jr nz,3F
  84+ 9A0D CB 57        	bit 2,a
  85+ 9A0F 20 23        	jr nz,3F
  86+ 9A11
  87+ 9A11 3A 15 89     	ld a,(Ctrl_2)
  88+ 9A14 CB 6F        	bit 5,a
  89+ 9A16 28 1C        	jr z,3F
  90+ 9A18
  91+ 9A18 CB AF        	res 5,a
  92+ 9A1A 32 15 89     	ld (Ctrl_2),a
  93+ 9A1D 21 36 89     	ld hl,Ctrl_3
  94+ 9A20 CB 8E        	res 1,(hl)
  95+ 9A22 CB D6        	set 2,(hl)												; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  96+ 9A24              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  97+ 9A24              ;															; _a la siguiente entidad como "Entidad_guía".
  98+ 9A24              ;	Reinicializa (Puntero_de_almacen_de_mov_masticados).
  99+ 9A24
 100+ 9A24 21 D0 5C     4 ld hl,Almacen_de_movimientos_masticados
 101+ 9A27 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl 			; Reinicializa (Puntero_de_almacen_de_mov_masticados). Sitúa el puntero_
 102+ 9A2A
 103+ 9A2A 18 08        	jr 3F
 104+ 9A2C              ;															; _ al principio del almacén, (a partir de ahora ejecutaremos "movimientos masticados").
 105+ 9A2C              ;															; Ya no somos "Entidad_guía".
 106+ 9A2C              ; ------------------------------
 107+ 9A2C
 108+ 9A2C
 109+ 9A2C CD 8A 96     1 call NextScan
 110+ 9A2F 22 D6 88     	ld (Posicion_actual),hl
 111+ 9A32 10 BE            djnz 2B
 112+ 9A34 CD 4C 9D     3 call Genera_coordenadas
 113+ 9A37 C9           	ret
 114+ 9A38
 115+ 9A38              ; ******************************************************************************************************************************************************************************************
 116+ 9A38              ;
 117+ 9A38              ;   27/05/23
 118+ 9A38              ;
 119+ 9A38              ;	Mov_up
 120+ 9A38              ;
 121+ 9A38              ; 	Mueve el Sprite hacia arriba.
 122+ 9A38              ;
 123+ 9A38              ;
 124+ 9A38              Mov_up
 125+ 9A38
 126+ 9A38 CD 69 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 127+ 9A3B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 128+ 9A3B 21 04 89     	ld hl,Ctrl_0
 129+ 9A3E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 130+ 9A40              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 131+ 9A40              ; 																		; _ en el caso de que no lo haya.
 132+ 9A40 3A EB 88     	ld a,(Vel_up)
 133+ 9A43 47           	ld b,a
 134+ 9A44 2A D6 88     	ld hl,(Posicion_actual)
 135+ 9A47 CD 9D 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 136+ 9A4A A7           	and a
 137+ 9A4B 20 10        	jr nz,1F
 138+ 9A4D
 139+ 9A4D              ; Nos encontramos en el 1er tercio de pantalla.
 140+ 9A4D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 141+ 9A4D
 142+ 9A4D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 143+ 9A4E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 144+ 9A50 20 0B            jr nz,1F
 145+ 9A52 7D               ld a,l
 146+ 9A53 D6 20            sub $20
 147+ 9A55 30 06            jr nc,1F
 148+ 9A57 25               dec h
 149+ 9A58
 150+ 9A58              ; -----------------------------
 151+ 9A58 CD 07 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 152+ 9A5B              ;	call Reinicio
 153+ 9A5B              ; -----------------------------
 154+ 9A5B
 155+ 9A5B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 156+ 9A5D CD 99 96     1 call PreviousScan
 157+ 9A60 22 D6 88     	ld (Posicion_actual),hl
 158+ 9A63 10 E2            djnz 3B
 159+ 9A65 CD 4C 9D     2 call Genera_coordenadas
 160+ 9A68 C9           	ret
 161+ 9A69
 162+ 9A69              ; -----------------------------
 163+ 9A69              ;
 164+ 9A69              ;	27/5/23
 165+ 9A69              ;
 166+ 9A69              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 167+ 9A69              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 168+ 9A69              ;
 169+ 9A69              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 170+ 9A69              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 171+ 9A69              ;
 172+ 9A69              ;	Modifica: A y (Puntero_objeto).
 173+ 9A69
 174+ 9A69 3A 15 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 175+ 9A6C CB 47        	bit 0,a
 176+ 9A6E C8           	ret z
 177+ 9A6F CB 87        	res 0,a
 178+ 9A71 32 15 89     	ld (Ctrl_2),a
 179+ 9A74 2A 18 89     	ld hl,(Repone_puntero_objeto)
 180+ 9A77 22 D8 88     	ld (Puntero_objeto),hl
 181+ 9A7A C9           	ret
 182+ 9A7B
 183+ 9A7B              ; ******************************************************************************************************************************************************************************************
 184+ 9A7B              ;
 185+ 9A7B              ;	19/10/22
 186+ 9A7B              ;
 187+ 9A7B              ;	Mov_right.
 188+ 9A7B              ;
 189+ 9A7B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 190+ 9A7B              ;
 191+ 9A7B
 192+ 9A7B 21 04 89     Mov_right ld hl,Ctrl_0
 193+ 9A7E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 194+ 9A80              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 195+ 9A80              ; 																	; _ en el caso de que no lo haya.
 196+ 9A80 3A 04 89     	ld a,(Ctrl_0)
 197+ 9A83 CB 77        	bit 6,a
 198+ 9A85 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 199+ 9A87
 200+ 9A87 CD B5 9C     	call Stop_Amadeus_right
 201+ 9A8A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 202+ 9A8B 18 4D        	jr 8F
 203+ 9A8D
 204+ 9A8D 3A DA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 205+ 9A90 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 206+ 9A92 20 46        	jr nz,8F
 207+ 9A94
 208+ 9A94 3A DC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 209+ 9A97 A7           	and a 															; _[3] para continuar con el DESPLZ.
 210+ 9A98 28 40        	jr z,8F
 211+ 9A9A
 212+ 9A9A              ; ---------- ---------- ----------
 213+ 9A9A              ;
 214+ 9A9A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 215+ 9A9A
 216+ 9A9A 3A EA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 217+ 9A9D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 218+ 9A9F 28 11        	jr z,1F
 219+ 9AA1 38 06        	jr c,6F
 220+ 9AA3 FE 04        	cp 4
 221+ 9AA5 28 14        	jr z,7F
 222+ 9AA7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 223+ 9AA9
 224+ 9AA9              ; ---------- ---------- ----------
 225+ 9AA9              ;
 226+ 9AA9              ; Perfiles de velocidad
 227+ 9AA9              ;
 228+ 9AA9
 229+ 9AA9 3A DC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 230+ 9AAC FE FE        	cp $fe
 231+ 9AAE 20 2A        	jr nz,8F
 232+ 9AB0 18 10        	jr 3F
 233+ 9AB2 3A DC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 234+ 9AB5 FE FD        	cp $fd
 235+ 9AB7 20 21        	jr nz,8F
 236+ 9AB9 18 07        	jr 3F
 237+ 9ABB 3A DC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 238+ 9ABE FE FB        	cp $fb
 239+ 9AC0 20 18        	jr nz,8F
 240+ 9AC2
 241+ 9AC2              ; ---------- ---------- ----------
 242+ 9AC2
 243+ 9AC2              3
 244+ 9AC2 CD F5 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 245+ 9AC5              ;	call Reinicio
 246+ 9AC5
 247+ 9AC5              ; ---------- ---------- ----------
 248+ 9AC5              ;
 249+ 9AC5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 250+ 9AC5
 251+ 9AC5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 252+ 9AC7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 253+ 9AC8 CD E1 9A     	call DESPLZ_DER
 254+ 9ACB C1           	pop bc
 255+ 9ACC 10 F9        	djnz 5B
 256+ 9ACE 2A D6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 257+ 9AD1 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 258+ 9AD2 22 D6 88     	ld (Posicion_actual),hl
 259+ 9AD5 CD 4C 9D     	call Genera_coordenadas
 260+ 9AD8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 261+ 9ADA
 262+ 9ADA              ; ---------- ---------- ----------
 263+ 9ADA
 264+ 9ADA 2A D6 88     8 ld hl,(Posicion_actual)
 265+ 9ADD CD E1 9A     	call DESPLZ_DER
 266+ 9AE0 C9           2 ret
 267+ 9AE1
 268+ 9AE1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 269+ 9AE1              ;
 270+ 9AE1              ;	22/9/22
 271+ 9AE1              ;
 272+ 9AE1
 273+ 9AE1 CD F0 9A     DESPLZ_DER call Desplaza_derecha
 274+ 9AE4 CD 3C 9B         call modifica_parametros_1er_DESPLZ_2
 275+ 9AE7 CD 65 9B         call Ciclo_completo
 276+ 9AEA 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 277+ 9AED CB FE        	set 7,(hl)
 278+ 9AEF C9           	ret
 279+ 9AF0
 280+ 9AF0              ; ******************************************************************************************************************************************************************************************
 281+ 9AF0              ;	15/02/23
 282+ 9AF0              ;
 283+ 9AF0
 284+ 9AF0 3A EA 88     Desplaza_derecha ld a,(Vel_right)
 285+ 9AF3 47           	ld b,a
 286+ 9AF4 2A E2 88     	ld hl,(Puntero_DESPLZ_der)
 287+ 9AF7 23           1 inc hl
 288+ 9AF8 23           	inc hl
 289+ 9AF9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 290+ 9AFB 22 E2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 291+ 9AFE CD 1E 8D     	call Extrae_address
 292+ 9B01 22 D8 88     	ld (Puntero_objeto),hl
 293+ 9B04
 294+ 9B04              ; Modifica (Puntero_DESPLZ_izq).
 295+ 9B04
 296+ 9B04              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 297+ 9B04              ; Cuántos movimientos hemos hecho ??
 298+ 9B04              ; DE contiene (Puntero_DESPLZ_der).
 299+ 9B04
 300+ 9B04 2A DE 88     7 ld hl,(Indice_Sprite_der)
 301+ 9B07 EB           	ex de,hl
 302+ 9B08 A7           	and a
 303+ 9B09 ED 52        	sbc hl,de
 304+ 9B0B CB 3D        	srl l
 305+ 9B0D 3E 08        6 ld a,8
 306+ 9B0F 95           	sub l
 307+ 9B10 30 1E        	jr nc,3F
 308+ 9B12
 309+ 9B12              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 310+ 9B12              ; B="0".
 311+ 9B12
 312+ 9B12 04           4 inc b
 313+ 9B13 3C           	inc a
 314+ 9B14 20 FC        	jr nz,4B
 315+ 9B16 78           	ld a,b
 316+ 9B17 08           	ex af,af
 317+ 9B18 2A DE 88     	ld hl,(Indice_Sprite_der)
 318+ 9B1B 23           5 inc hl
 319+ 9B1C 23           	inc hl
 320+ 9B1D 10 FC        	djnz 5B
 321+ 9B1F 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 322+ 9B22 CD 1E 8D     	call Extrae_address
 323+ 9B25 22 D8 88     	ld (Puntero_objeto),hl
 324+ 9B28
 325+ 9B28              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 326+ 9B28              ; _(Posicion_actual).
 327+ 9B28
 328+ 9B28 21 D6 88     	ld hl,Posicion_actual
 329+ 9B2B 34           	inc (hl)
 330+ 9B2C 08               ex af,af
 331+ 9B2D 6F           	ld l,a
 332+ 9B2E 18 DD        	jr 6B
 333+ 9B30
 334+ 9B30              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 335+ 9B30
 336+ 9B30 47           3 ld b,a
 337+ 9B31 2A E0 88     	ld hl,(Indice_Sprite_izq)
 338+ 9B34 23           2 inc hl
 339+ 9B35 23           	inc hl
 340+ 9B36 10 FC        	djnz 2B
 341+ 9B38 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 342+ 9B3B C9           8 ret
 343+ 9B3C
 344+ 9B3C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 345+ 9B3C              ;
 346+ 9B3C              ;	24/7/22
 347+ 9B3C              ;
 348+ 9B3C              ;	modifica_parametros_1er_DESPLZ_2
 349+ 9B3C              ;
 350+ 9B3C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 351+ 9B3C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 352+ 9B3C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 353+ 9B3C
 354+ 9B3C 3A DC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 355+ 9B3F A7           	and a
 356+ 9B40 20 1F        	jr nz,1F
 357+ 9B42 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 358+ 9B44 32 DC 88         ld (CTRL_DESPLZ),a
 359+ 9B47
 360+ 9B47 21 D5 88     	ld hl,Columns
 361+ 9B4A 34           	inc (hl)
 362+ 9B4B 3A E8 88     	ld a,(Cuad_objeto)
 363+ 9B4E E6 01        	and 1
 364+ 9B50 28 0F        	jr z,1F
 365+ 9B52 2A D6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 366+ 9B55 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 367+ 9B56 22 D6 88     	ld (Posicion_actual),hl
 368+ 9B59 CD 4C 9D     	call Genera_coordenadas
 369+ 9B5C CD C1 9C     	call Inc_CTRL_DESPLZ
 370+ 9B5F 18 03        	jr 2F
 371+ 9B61 CD C1 9C     1 call Inc_CTRL_DESPLZ
 372+ 9B64 C9           2 ret
 373+ 9B65
 374+ 9B65              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 375+ 9B65              ;
 376+ 9B65              ;	24/7/22
 377+ 9B65              ;
 378+ 9B65              ;	Ciclo_completo.
 379+ 9B65              ;
 380+ 9B65              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 381+ 9B65              ;
 382+ 9B65              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 383+ 9B65              ; 	Decrementamos (Columns).
 384+ 9B65              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 385+ 9B65              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 386+ 9B65
 387+ 9B65
 388+ 9B65 3A DC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 389+ 9B68 FE FF        	cp $ff
 390+ 9B6A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 391+ 9B6C E6 F0        	and $f0
 392+ 9B6E 20 28        	jr nz,3F
 393+ 9B70
 394+ 9B70              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 395+ 9B70
 396+ 9B70 3A DC 88     	ld a,(CTRL_DESPLZ)
 397+ 9B73 47           	ld b,a
 398+ 9B74 3E F8        	ld a,$f8
 399+ 9B76 80           	add b
 400+ 9B77 32 DC 88     	ld (CTRL_DESPLZ),a
 401+ 9B7A 18 1C        	jr 3F
 402+ 9B7C 21 D5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 403+ 9B7F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 404+ 9B80 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 405+ 9B81 32 DC 88     	ld (CTRL_DESPLZ),a
 406+ 9B84 3A E8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 407+ 9B87 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 408+ 9B89 20 0A        	jr nz,2F
 409+ 9B8B 2A D6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 410+ 9B8E 23           	inc hl
 411+ 9B8F 22 D6 88     	ld (Posicion_actual),hl
 412+ 9B92 CD 4C 9D     	call Genera_coordenadas
 413+ 9B95
 414+ 9B95              ; Inicia el puntero de Sprite.
 415+ 9B95
 416+ 9B95 CD 35 8D     2 call Inicia_puntero_objeto_der
 417+ 9B98 C9           3 ret
 418+ 9B99
 419+ 9B99              ; ******************************************************************************************************************************************************************************************
 420+ 9B99              ;
 421+ 9B99              ;	15/02/23
 422+ 9B99              ;
 423+ 9B99              ;	Mov_left.
 424+ 9B99              ;
 425+ 9B99              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 426+ 9B99              ;
 427+ 9B99              Mov_left
 428+ 9B99
 429+ 9B99 21 04 89     	ld hl,Ctrl_0
 430+ 9B9C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 431+ 9B9E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 432+ 9B9E              ; 																	; _ en el caso de que no lo haya.
 433+ 9B9E 3A 04 89     	ld a,(Ctrl_0)
 434+ 9BA1 CB 77        	bit 6,a
 435+ 9BA3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 436+ 9BA5
 437+ 9BA5 CD BB 9C     	call Stop_Amadeus_left
 438+ 9BA8 C8           	ret z
 439+ 9BA9 20 4A        	jr nz,8F
 440+ 9BAB
 441+ 9BAB 3A DA 88     11 ld a,(Coordenada_X)
 442+ 9BAE A7           	and a
 443+ 9BAF 20 44        	jr nz,8F
 444+ 9BB1
 445+ 9BB1 3A DC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 446+ 9BB4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 447+ 9BB5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 448+ 9BB7
 449+ 9BB7              ; ---------- ---------- ----------
 450+ 9BB7
 451+ 9BB7 3A E9 88     	ld a,(Vel_left)
 452+ 9BBA FE 02        	cp 2
 453+ 9BBC 28 0F        	jr z,1F
 454+ 9BBE 38 04        	jr c,6F
 455+ 9BC0 FE 04        	cp 4
 456+ 9BC2 28 12        	jr z,7F
 457+ 9BC4
 458+ 9BC4              ; ---------- ---------- ----------
 459+ 9BC4
 460+ 9BC4 3A DC 88     6 ld a,(CTRL_DESPLZ)
 461+ 9BC7 FE F8        	cp $f8
 462+ 9BC9 20 2A        	jr nz,8F
 463+ 9BCB 18 10        	jr 4F
 464+ 9BCD 3A DC 88     1 ld a,(CTRL_DESPLZ)
 465+ 9BD0 FE F9        	cp $f9
 466+ 9BD2 20 21        	jr nz,8F
 467+ 9BD4 18 07        	jr 4F
 468+ 9BD6 3A DC 88     7 ld a,(CTRL_DESPLZ)
 469+ 9BD9 FE FB        	cp $fb
 470+ 9BDB 20 18        	jr nz,8F
 471+ 9BDD
 472+ 9BDD              ; ---------- ---------- ----------
 473+ 9BDD
 474+ 9BDD              4
 475+ 9BDD CD E3 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 476+ 9BE0              ;	call Reinicio
 477+ 9BE0
 478+ 9BE0              ; ---------- ---------- ----------
 479+ 9BE0
 480+ 9BE0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 481+ 9BE2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 482+ 9BE3
 483+ 9BE3              ;	ld hl,(Indice_Sprite_izq)
 484+ 9BE3              ;	ld (Puntero_DESPLZ_izq),hl
 485+ 9BE3
 486+ 9BE3 CD FC 9B     	call DESPLZ_IZQ
 487+ 9BE6 C1           	pop bc
 488+ 9BE7 10 F9        	djnz 5B
 489+ 9BE9 2A D6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 490+ 9BEC 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 491+ 9BED 22 D6 88     	ld (Posicion_actual),hl
 492+ 9BF0 CD 4C 9D     	call Genera_coordenadas
 493+ 9BF3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 494+ 9BF5
 495+ 9BF5              ; ---------- ---------- ----------
 496+ 9BF5
 497+ 9BF5              ; Movemos, no hay recolocación.
 498+ 9BF5
 499+ 9BF5 2A D6 88     8 ld hl,(Posicion_actual)
 500+ 9BF8 CD FC 9B     	call DESPLZ_IZQ
 501+ 9BFB C9           2 ret
 502+ 9BFC
 503+ 9BFC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 504+ 9BFC              ;
 505+ 9BFC              ;	22/9/22
 506+ 9BFC
 507+ 9BFC              DESPLZ_IZQ
 508+ 9BFC
 509+ 9BFC CD 0B 9C     	call Desplaza_izquierda
 510+ 9BFF CD 57 9C         call modifica_parametros_1er_DESPLZ
 511+ 9C02 CD 7F 9C     	call Ciclo_completo_2
 512+ 9C05 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 513+ 9C08 CB BE        	res 7,(hl)
 514+ 9C0A C9           	ret
 515+ 9C0B
 516+ 9C0B              Desplaza_izquierda
 517+ 9C0B
 518+ 9C0B 3A E9 88     	ld a,(Vel_left)
 519+ 9C0E 47           	ld b,a
 520+ 9C0F 2A E4 88     	ld hl,(Puntero_DESPLZ_izq)
 521+ 9C12 23           1 inc hl
 522+ 9C13 23           	inc hl
 523+ 9C14 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 524+ 9C16 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 525+ 9C19 CD 1E 8D     	call Extrae_address
 526+ 9C1C 22 D8 88     	ld (Puntero_objeto),hl
 527+ 9C1F
 528+ 9C1F              ; Modifica (Puntero_DESPLZ_der).
 529+ 9C1F
 530+ 9C1F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 531+ 9C1F              ; Cuántos movimientos hemos hecho ??
 532+ 9C1F              ; DE contiene (Puntero_DESPLZ_izq).
 533+ 9C1F
 534+ 9C1F 2A E0 88     7 ld hl,(Indice_Sprite_izq)
 535+ 9C22 EB           	ex de,hl
 536+ 9C23 A7           	and a
 537+ 9C24 ED 52        	sbc hl,de
 538+ 9C26 CB 3D        	srl l
 539+ 9C28 3E 08        6 ld a,8
 540+ 9C2A 95           	sub l
 541+ 9C2B 30 1E        	jr nc,3F
 542+ 9C2D
 543+ 9C2D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 544+ 9C2D              ; B="0".
 545+ 9C2D
 546+ 9C2D 04           4 inc b
 547+ 9C2E 3C           	inc a
 548+ 9C2F 20 FC        	jr nz,4B
 549+ 9C31 78           	ld a,b
 550+ 9C32 08           	ex af,af
 551+ 9C33 2A E0 88     	ld hl,(Indice_Sprite_izq)
 552+ 9C36 23           5 inc hl
 553+ 9C37 23           	inc hl
 554+ 9C38 10 FC        	djnz 5B
 555+ 9C3A 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 556+ 9C3D CD 1E 8D     	call Extrae_address
 557+ 9C40 22 D8 88     	ld (Puntero_objeto),hl
 558+ 9C43
 559+ 9C43              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 560+ 9C43              ; _(Posicion_actual).
 561+ 9C43
 562+ 9C43 21 D6 88     	ld hl,Posicion_actual
 563+ 9C46 35           	dec (hl)
 564+ 9C47 08           	ex af,af
 565+ 9C48 6F           	ld l,a
 566+ 9C49 18 DD        	jr 6B
 567+ 9C4B
 568+ 9C4B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 569+ 9C4B
 570+ 9C4B 47           3 ld b,a
 571+ 9C4C 2A DE 88     	ld hl,(Indice_Sprite_der)
 572+ 9C4F 23           2 inc hl
 573+ 9C50 23           	inc hl
 574+ 9C51 10 FC        	djnz 2B
 575+ 9C53 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 576+ 9C56 C9           8 ret
 577+ 9C57
 578+ 9C57              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 579+ 9C57              ;
 580+ 9C57              ;	modifica_parametros_1er_DESPLZ
 581+ 9C57              ;
 582+ 9C57              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 583+ 9C57              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 584+ 9C57              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 585+ 9C57
 586+ 9C57 3A DC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 587+ 9C5A A7           	and a
 588+ 9C5B 20 1E        	jr nz,1F
 589+ 9C5D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 590+ 9C5E 32 DC 88         ld (CTRL_DESPLZ),a
 591+ 9C61 21 D5 88     	ld hl,Columns
 592+ 9C64 34           	inc (hl)
 593+ 9C65 3A E8 88     	ld a,(Cuad_objeto)
 594+ 9C68 E6 01        	and 1
 595+ 9C6A 20 0F        	jr nz,1F
 596+ 9C6C 2A D6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 597+ 9C6F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 598+ 9C70 22 D6 88     	ld (Posicion_actual),hl
 599+ 9C73 CD 4C 9D     	call Genera_coordenadas
 600+ 9C76 CD D2 9C     	call Dec_CTRL_DESPLZ
 601+ 9C79 18 03        	jr 2F
 602+ 9C7B CD D2 9C     1 call Dec_CTRL_DESPLZ
 603+ 9C7E C9           2 ret
 604+ 9C7F
 605+ 9C7F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 606+ 9C7F
 607+ 9C7F 3A DC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 608+ 9C82 FE F7        	cp $f7
 609+ 9C84 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 610+ 9C86 30 2C        	jr nc,3F
 611+ 9C88
 612+ 9C88              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 613+ 9C88
 614+ 9C88 06 00        	ld b,0
 615+ 9C8A 04           4 inc b
 616+ 9C8B 3C           	inc a
 617+ 9C8C FE F7        	cp $f7
 618+ 9C8E 20 FA        	jr nz,4B
 619+ 9C90 3E FF        	ld a,$ff
 620+ 9C92 90           	sub b
 621+ 9C93 32 DC 88     	ld (CTRL_DESPLZ),a
 622+ 9C96 18 1C        	jr 3F
 623+ 9C98
 624+ 9C98              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 625+ 9C98
 626+ 9C98 21 D5 88     1 ld hl,Columns
 627+ 9C9B 35           	dec (hl)
 628+ 9C9C AF           	xor a
 629+ 9C9D 32 DC 88     	ld (CTRL_DESPLZ),a
 630+ 9CA0 3A E8 88     	ld a,(Cuad_objeto)
 631+ 9CA3 E6 01        	and 1
 632+ 9CA5 28 0A        	jr z,2F
 633+ 9CA7 2A D6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 634+ 9CAA 2B           	dec hl
 635+ 9CAB 22 D6 88     	ld (Posicion_actual),hl
 636+ 9CAE CD 4C 9D     	call Genera_coordenadas
 637+ 9CB1
 638+ 9CB1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 639+ 9CB1
 640+ 9CB1 CD 48 8D     2 call Inicia_puntero_objeto_izq
 641+ 9CB4 C9           3 ret
 642+ 9CB5
 643+ 9CB5              ; ---------- ---------- ---------- ---------- ---------- ----------
 644+ 9CB5              ;
 645+ 9CB5              ;	19/10/22
 646+ 9CB5              ;
 647+ 9CB5              ;	(cp 29) para un Amadeus de 3 Columns.
 648+ 9CB5              ;	(cp 30)   ""  ""    ""     2 Columns.
 649+ 9CB5
 650+ 9CB5 3A DA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 651+ 9CB8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 652+ 9CBA C9           	ret
 653+ 9CBB
 654+ 9CBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 655+ 9CBB              ;
 656+ 9CBB              ;	19/10/22
 657+ 9CBB              ;
 658+ 9CBB              ;	(cp 2) para un Amadeus de 3 Columns.
 659+ 9CBB              ;	(cp 1)   ""  ""    ""     2 Columns.
 660+ 9CBB
 661+ 9CBB 3A DA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 662+ 9CBE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 663+ 9CC0 C9           	ret
 664+ 9CC1
 665+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 666+ 9CC1              ;
 667+ 9CC1              ;	24/7/22
 668+ 9CC1              ;
 669+ 9CC1              ;	Inc_CTRL_DESPLZ
 670+ 9CC1              ;
 671+ 9CC1              ;
 672+ 9CC1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 673+ 9CC1
 674+ 9CC1 21 DC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 675+ 9CC4 3A EA 88     	ld a,(Vel_right)
 676+ 9CC7 A7           	and a
 677+ 9CC8 28 06        	jr z,1F
 678+ 9CCA 47           	ld b,a
 679+ 9CCB 34           3 inc (hl)
 680+ 9CCC 10 FD        	djnz 3B
 681+ 9CCE 18 01        	jr 2F
 682+ 9CD0 34           1 inc (hl)
 683+ 9CD1 C9           2 ret
 684+ 9CD2
 685+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 686+ 9CD2              ;
 687+ 9CD2              ;	5/2/23
 688+ 9CD2              ;
 689+ 9CD2              ;	Dec_CTRL_DESPLZ
 690+ 9CD2              ;
 691+ 9CD2              ;
 692+ 9CD2              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 693+ 9CD2
 694+ 9CD2 21 DC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 695+ 9CD5 3A E9 88     	ld a,(Vel_left)
 696+ 9CD8 A7           	and a
 697+ 9CD9 28 06        	jr z,1F
 698+ 9CDB 47           	ld b,a
 699+ 9CDC 35           3 dec (hl)
 700+ 9CDD 10 FD        	djnz 3B
 701+ 9CDF 18 01        	jr 2F
 702+ 9CE1 35           1 dec (hl)
 703+ 9CE2 C9           2 ret
 704+ 9CE3
 705+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 706+ 9CE3
 707+ 9CE3 2A D6 88     Reaparece_derecha ld hl,(Posicion_actual)
 708+ 9CE6 01 1F 00     	ld bc,31
 709+ 9CE9 A7           	and a
 710+ 9CEA ED 4A        	adc hl,bc
 711+ 9CEC 22 D6 88     	ld (Posicion_actual),hl
 712+ 9CEF 21 04 89     	ld hl,Ctrl_0														; $xxx1
 713+ 9CF2 CB C6        	set 0,(hl)
 714+ 9CF4 C9           	ret
 715+ 9CF5
 716+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 717+ 9CF5
 718+ 9CF5 2A D6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 719+ 9CF8 01 1F 00     	ld bc,31
 720+ 9CFB A7           	and a
 721+ 9CFC ED 42        	sbc hl,bc
 722+ 9CFE 22 D6 88     	ld (Posicion_actual),hl 											; $xx1x
 723+ 9D01 21 04 89     	ld hl,Ctrl_0
 724+ 9D04 CB CE        	set 1,(hl)
 725+ 9D06 C9           	ret
 726+ 9D07
 727+ 9D07              ; ---------- ---------- ---------- ---------- ---------- ----------
 728+ 9D07
 729+ 9D07 24           Reaparece_abajo inc h
 730+ 9D08 01 E0 17     	ld bc,$17e0
 731+ 9D0B A7           	and a
 732+ 9D0C ED 4A        	adc hl,bc
 733+ 9D0E 22 D6 88     	ld (Posicion_actual),hl
 734+ 9D11 21 04 89     	ld hl,Ctrl_0
 735+ 9D14 CB D6        	set 2,(hl)
 736+ 9D16 C9           	ret
 737+ 9D17
 738+ 9D17              ; ---------- ---------- ---------- ---------- ---------- ----------
 739+ 9D17
 740+ 9D17 01 E0 17     Reaparece_arriba ld bc,$17e0
 741+ 9D1A A7           	and a
 742+ 9D1B ED 42        	sbc hl,bc
 743+ 9D1D 22 D6 88     	ld (Posicion_actual),hl
 744+ 9D20 21 04 89     	ld hl,Ctrl_0
 745+ 9D23 CB DE        	set 3,(hl)
 746+ 9D25 C9           	ret
 747+ 9D26
 748+ 9D26              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 749+ 9D26              ;
 750+ 9D26              ;	15/07/23
 751+ 9D26
 752+ 9D26              Reinicio
 753+ 9D26
 754+ 9D26              ; Vamos a reiniciar los punteros y variables de movimiento.
 755+ 9D26
 756+ 9D26 AF           	xor a
 757+ 9D27 21 09 89     	ld hl,Puntero_indice_mov_bucle
 758+ 9D2A CD 48 9D     	call Limpia_contenido_hl
 759+ 9D2D
 760+ 9D2D 21 D6 88     	ld hl,Posicion_actual
 761+ 9D30 CD 48 9D     	call Limpia_contenido_hl
 762+ 9D33
 763+ 9D33 CD 78 A0     	call Inicializa_Puntero_indice_mov
 764+ 9D36 CD 02 A0     	call Inicia_Puntero_mov
 765+ 9D39
 766+ 9D39 21 0B 89     	ld hl,Incrementa_puntero
 767+ 9D3C 06 05        	ld b,5
 768+ 9D3E 77           1 ld (hl),a
 769+ 9D3F 23           	inc hl
 770+ 9D40 10 FC        	djnz 1B
 771+ 9D42
 772+ 9D42 21 15 89     	ld hl,Ctrl_2
 773+ 9D45 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 774+ 9D47
 775+ 9D47 C9           	ret
 776+ 9D48
 777+ 9D48 77           Limpia_contenido_hl	ld (hl),a
 778+ 9D49 23           	inc hl
 779+ 9D4A 77           	ld (hl),a
 780+ 9D4B C9           	ret
 781+ 9D4C
 782+ 9D4C
# file closed: Direcciones.asm
1782  9D4C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D4C              ; ------------------------------------------------------------------------
   2+ 9D4C              ;
   3+ 9D4C              ;	02/04/23
   4+ 9D4C              ;
   5+ 9D4C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D4C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D4C              ;
   8+ 9D4C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D4C              ;
  10+ 9D4C              ;	Modifica: A,BC y DE.
  11+ 9D4C
  12+ 9D4C C5           Genera_coordenadas push bc
  13+ 9D4D E5           	push hl
  14+ 9D4E D5           	push de
  15+ 9D4F
  16+ 9D4F 2A D6 88     	ld hl,(Posicion_actual)
  17+ 9D52
  18+ 9D52 7D           	ld a,l
  19+ 9D53 E6 1F        	and $1f
  20+ 9D55 32 DA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D58
  22+ 9D58 CD 9D 99     	call calcula_tercio
  23+ 9D5B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D5C
  25+ 9D5C 1E 00        	ld e,0
  26+ 9D5E 7D           	ld a,l
  27+ 9D5F E6 E0        	and $e0
  28+ 9D61 28 01        	jr z,1F
  29+ 9D63 04           	inc b
  30+ 9D64
  31+ 9D64 04           1 inc b
  32+ 9D65 05           	dec b
  33+ 9D66 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D68              ;														; _ , salimos.
  35+ 9D68 1C           3 inc e
  36+ 9D69 D6 20        	sub 32
  37+ 9D6B 20 FB        	jr nz,3B
  38+ 9D6D 10 F5        	djnz 1B
  39+ 9D6F
  40+ 9D6F 7B           2 ld a,e
  41+ 9D70 32 DB 88     	ld (Coordenada_y),a
  42+ 9D73
  43+ 9D73 D1           	pop de
  44+ 9D74 E1           	pop hl
  45+ 9D75 C1           	pop bc
  46+ 9D76
  47+ 9D76 C9           	ret
  48+ 9D77
  49+ 9D77              ; ------------------------------------------------------------------------
  50+ 9D77              ;	28/05/23
  51+ 9D77              ;
  52+ 9D77              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D77              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D77              ;
  55+ 9D77              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D77              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D77              ;
  58+ 9D77              ;		DE="$120d"
  59+ 9D77              ;
  60+ 9D77              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D77              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D77              ;
  63+ 9D77              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D77
  65+ 9D77              ;	Modifica: A,BC y DE.
  66+ 9D77
  67+ 9D77
  68+ 9D77              Genera_coordenadas_disparo
  69+ 9D77
  70+ 9D77              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D77
  72+ 9D77 7D           	ld a,l
  73+ 9D78 E6 1F        	and $1f
  74+ 9D7A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D7B CD 9D 99     	call calcula_tercio
  76+ 9D7E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D7F 1E 00        	ld e,0
  78+ 9D81 7D           	ld a,l
  79+ 9D82 E6 E0        	and $e0
  80+ 9D84 28 01        	jr z,1F
  81+ 9D86 04           	inc b
  82+ 9D87 1C           1 inc e
  83+ 9D88 D6 20        	sub 32
  84+ 9D8A 20 FB        	jr nz,1B
  85+ 9D8C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D8E C9           	ret
  87+ 9D8F
# file closed: Genera_coordenadas.asm
1783  9D8F              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D8F              ; Relojes y temporizaciones.
   2+ 9D8F
   3+ 9D8F              ; ------------------------------------------------------
   4+ 9D8F              ;
   5+ 9D8F              ;	16/7/23
   6+ 9D8F              ;
   7+ 9D8F              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D8F              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D8F              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D8F              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D8F              ;
  12+ 9D8F              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D8F              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D8F
  15+ 9D8F              ; Disparo_entidad db 1
  16+ 9D8F              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D8F              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D8F
  19+ 9D8F              Habilita_disparos
  20+ 9D8F
  21+ 9D8F 7E           	ld a,(hl)
  22+ 9D90 A7           	and a
  23+ 9D91 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D92
  25+ 9D92 EB           	ex de,hl
  26+ 9D93
  27+ 9D93 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D94 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D95
  30+ 9D95              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D95
  32+ 9D95 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D96 7E           	ld a,(hl)
  34+ 9D97 23           	inc hl
  35+ 9D98 77           	ld (hl),a
  36+ 9D99
  37+ 9D99 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D9A 3E 01        	ld a,1
  39+ 9D9C 77           	ld (hl),a
  40+ 9D9D C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1784  9D9E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D9E
   2+ 9D9E
   3+ 9D9E              ;   07/07/23
   4+ 9D9E              ;
   5+ 9D9E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D9E              ;
   7+ 9D9E              ;   Codificación:
   8+ 9D9E              ;
   9+ 9D9E              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D9E              ;
  11+ 9D9E              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D9E              ;
  13+ 9D9E              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D9E              ;
  15+ 9D9E              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D9E              ;
  17+ 9D9E              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D9E              ;                               ..... %01000010 Vel_up 4
  19+ 9D9E              ;                                               Vel_down 2
  20+ 9D9E              ;                               ..... $42
  21+ 9D9E              ;
  22+ 9D9E              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D9E              ;
  24+ 9D9E              ;                               ..... %01000010 Vel_left 4
  25+ 9D9E              ;                                               Vel_right 2
  26+ 9D9E              ;                               ..... $42
  27+ 9D9E              ;
  28+ 9D9E              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D9E              ;
  30+ 9D9E              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D9E              ;
  32+ 9D9E              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D9E              ;
  34+ 9D9E              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D9E              ;                                     $53
  36+ 9D9E              ;
  37+ 9D9E              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D9E              ;
  39+ 9D9E              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D9E              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D9E              ;
  42+ 9D9E              ;                       Arriba ..... $81
  43+ 9D9E              ;                       Arriba - izquierda ..... $a1
  44+ 9D9E              ;                       Arriba - derecha ..... $91
  45+ 9D9E              ;
  46+ 9D9E              ;                       Abajo ..... $41
  47+ 9D9E              ;                       Abajo - izquierda ..... $61
  48+ 9D9E              ;                       Abajo - derecha ..... $51
  49+ 9D9E              ;
  50+ 9D9E              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D9E              ;
  52+ 9D9E              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D9E              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D9E              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D9E              ;
  56+ 9D9E              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D9E              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D9E              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D9E              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D9E              ;
  61+ 9D9E              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D9E              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D9E              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D9E              ;
  65+ 9D9E              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D9E              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D9E              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D9E              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D9E
  70+ 9D9E              ; ----- ----- ----- ----- -----
  71+ 9D9E
  72+ 9D9E CA 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DA0 D2 9D            defw F_1
  74+ 9DA2 DC 9D            defw F_2
  75+ 9DA4 E6 9D            defw Codo_abajo_derecha
  76+ 9DA6 1A 9E            defw Derecha_y_subiendo
  77+ 9DA8 24 9E            defw Derecha_y_subiendo_1
  78+ 9DAA 2E 9E            defw F_3
  79+ 9DAC 38 9E            defw F_4
  80+ 9DAE 42 9E            defw Derecha_y_bajando
  81+ 9DB0 4C 9E            defw Derecha_y_bajando_1
  82+ 9DB2 56 9E            defw Derecha_y_bajando_2
  83+ 9DB4 60 9E            defw Codo_derecha_abajo
  84+ 9DB6 90 9E            defw Codo_abajo_izq.
  85+ 9DB8 C4 9E            defw Izquierda_y_subiendo
  86+ 9DBA CE 9E            defw Izquierda_y_subiendo_1
  87+ 9DBC D8 9E            defw F_5
  88+ 9DBE E2 9E            defw F_6
  89+ 9DC0 EC 9E            defw Izquierda_y_bajando
  90+ 9DC2 F6 9E            defw Izquierda_y_bajando_1
  91+ 9DC4 00 9F            defw Izquierda_y_bajando_2
  92+ 9DC6 0A 9F            defw Codo_izquierda_abajo
  93+ 9DC8 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DCA
  95+ 9DCA 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DCE 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DD2
  98+ 9DD2 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DD6 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DDA 08 00
 100+ 9DDC 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DE0 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DE4 0F FE
 102+ 9DE6
 103+ 9DE6 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DEA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DF2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DFA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DFE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E02 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E06 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E0A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E0E 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E12 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E16 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E1A
 117+ 9E1A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E1E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E22 06 00
 119+ 9E24
 120+ 9E24 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E28 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E2C 02 00
 122+ 9E2E
 123+ 9E2E 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E32 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E36 04 00
 125+ 9E38 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E3C 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E40 08 00
 127+ 9E42
 128+ 9E42 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E46 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E4A 02 00
 130+ 9E4C
 131+ 9E4C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E50 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E54 06 00
 133+ 9E56
 134+ 9E56 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E5A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E5E 06 00
 136+ 9E60
 137+ 9E60              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E60
 139+ 9E60 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E64 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E68 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E6C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E74 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E78 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E7C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E80 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E84 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E88 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E8C 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E90
 152+ 9E90 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E94 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E98 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E9C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EA0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EA4 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EA8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EAC 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EB0 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EB4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EB8 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EBC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EC0 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EC4
 166+ 9EC4 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EC8 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9ECC 06 00
 168+ 9ECE
 169+ 9ECE 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9ED2 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ED6 02 00
 171+ 9ED8
 172+ 9ED8 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EDC 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EE0 04 00
 174+ 9EE2 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EE6 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EEA 08 00
 176+ 9EEC
 177+ 9EEC 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EF0 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EF4 02 00
 179+ 9EF6
 180+ 9EF6 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EFA 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EFE 06 00
 182+ 9F00
 183+ 9F00 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F04 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F08 06 00
 185+ 9F0A
 186+ 9F0A 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F0E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F12 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F16 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F1A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F1E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F22 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F26 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F2A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F2E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F32 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F36 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F3A
 199+ 9F3A              ; ----- ----- ----- ----- -----
 200+ 9F3A              ;
 201+ 9F3A              ;   27/06/23
 202+ 9F3A
 203+ 9F3A              Movimiento
 204+ 9F3A
 205+ 9F3A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F3A
 207+ 9F3A              ;    ld hl,(Posicion_actual)
 208+ 9F3A
 209+ 9F3A 3A 15 89         ld a,(Ctrl_2)
 210+ 9F3D CB 57            bit 2,a
 211+ 9F3F 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F41
 213+ 9F41 2A 07 89         ld hl,(Puntero_mov)
 214+ 9F44 7E               ld a,(hl)
 215+ 9F45
 216+ 9F45              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F45
 218+ 9F45              Inicia_desplazamiento.
 219+ 9F45
 220+ 9F45              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F45
 222+ 9F45 CD 39 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F48
 224+ 9F48              ; Iniciamos (Repetimos_mov).
 225+ 9F48
 226+ 9F48 7E               ld a,(hl)
 227+ 9F49 E6 0F            and $0f
 228+ 9F4B 32 0D 89         ld (Repetimos_desplazamiento),a
 229+ 9F4E 32 0E 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F51
 231+ 9F51              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F51
 233+ 9F51 23               inc hl
 234+ 9F52 7E               ld a,(hl)
 235+ 9F53 32 10 89         ld (Cola_de_desplazamiento),a
 236+ 9F56 2B               dec hl
 237+ 9F57
 238+ 9F57 21 15 89         ld hl,Ctrl_2
 239+ 9F5A CB D6            set 2,(hl)
 240+ 9F5C
 241+ 9F5C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F5C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F5C
 244+ 9F5C              Desplazamiento_iniciado
 245+ 9F5C
 246+ 9F5C CD 0D A0         call Aplica_desplazamiento
 247+ 9F5F
 248+ 9F5F 3A 15 89         ld a,(Ctrl_2)
 249+ 9F62 CB 67            bit 4,a
 250+ 9F64 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F65
 252+ 9F65 21 0D 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F68 35               dec (hl)
 254+ 9F69 C0               ret nz
 255+ 9F6A
 256+ 9F6A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F6A              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F6A              ; Analiza (Cola_de_desplazamiento).
 259+ 9F6A
 260+ 9F6A 3A 10 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F6D A7               and a
 262+ 9F6E CC 62 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F71 28 30            jr z,Reinicia_el_movimiento
 264+ 9F73
 265+ 9F73 FE FF            cp $ff
 266+ 9F75 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F77
 268+ 9F77 FE FE            cp $fe
 269+ 9F79 CC E6 9F         call z,Fijamos_bucle
 270+ 9F7C 28 25            jr z,Reinicia_el_movimiento
 271+ 9F7E
 272+ 9F7E FE FD            cp $fd
 273+ 9F80 20 11            jr nz,1F
 274+ 9F82
 275+ 9F82              ; ---
 276+ 9F82              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F82
 278+ 9F82 3A 15 89         ld a,(Ctrl_2)
 279+ 9F85 CB 5F            bit 3,a
 280+ 9F87 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F89
 282+ 9F89              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F89
 284+ 9F89 21 15 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F8C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F8E
 287+ 9F8E CD F7 9F         call Inicia_Repetimos_movimiento
 288+ 9F91 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F93              ; ---
 290+ 9F93
 291+ 9F93 FE 01        1 cp 1
 292+ 9F95 CA D0 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F98
 294+ 9F98 3D               dec a
 295+ 9F99 32 10 89         ld (Cola_de_desplazamiento),a
 296+ 9F9C
 297+ 9F9C 3A 0E 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F9F 32 0D 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FA2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FA2 C9               ret
 301+ 9FA3
 302+ 9FA3              Reinicia_el_movimiento
 303+ 9FA3
 304+ 9FA3 3A 15 89         ld a,(Ctrl_2)
 305+ 9FA6 CB 5F            bit 3,a
 306+ 9FA8 28 1B            jr z,2F
 307+ 9FAA
 308+ 9FAA              ; (Cola_de_desplazamiento)="254".
 309+ 9FAA
 310+ 9FAA 21 0F 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FAD 35               dec (hl)
 312+ 9FAE 20 15            jr nz,2F
 313+ 9FB0
 314+ 9FB0              ; Fin de las repeticiones del último movimiento.
 315+ 9FB0
 316+ 9FB0 21 15 89         ld hl,Ctrl_2
 317+ 9FB3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FB5
 319+ 9FB5 2A 07 89         ld hl,(Puntero_mov)
 320+ 9FB8 23               inc hl
 321+ 9FB9 23               inc hl
 322+ 9FBA 23               inc hl
 323+ 9FBB 22 07 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FBE              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FBE 7E               ld a,(hl)
 326+ 9FBF 32 10 89         ld (Cola_de_desplazamiento),a
 327+ 9FC2
 328+ 9FC2 C3 6A 9F         jp Cola
 329+ 9FC5
 330+ 9FC5 CD 02 A0     2 call Inicia_Puntero_mov
 331+ 9FC8
 332+ 9FC8 21 15 89         ld hl,Ctrl_2
 333+ 9FCB CB 96            res 2,(hl)
 334+ 9FCD
 335+ 9FCD C3 3A 9F         jp Movimiento
 336+ 9FD0
 337+ 9FD0              Siguiente_desplazamiento
 338+ 9FD0
 339+ 9FD0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9FD0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9FD0
 342+ 9FD0 21 15 89         ld hl,Ctrl_2
 343+ 9FD3 CB 96            res 2,(hl)
 344+ 9FD5
 345+ 9FD5 2A 07 89         ld hl,(Puntero_mov)
 346+ 9FD8 23               inc hl
 347+ 9FD9 23               inc hl
 348+ 9FDA 22 07 89         ld (Puntero_mov),hl
 349+ 9FDD
 350+ 9FDD 7E               ld a,(hl)
 351+ 9FDE A7               and a
 352+ 9FDF CC 62 A0         call z,Incrementa_Puntero_indice_mov
 353+ 9FE2 CA A3 9F         jp z,Reinicia_el_movimiento
 354+ 9FE5
 355+ 9FE5 C9               ret
 356+ 9FE6
 357+ 9FE6              ; Subrutinas -----------------------------------------
 358+ 9FE6              ; ---------- --------- --------- ---------- ----------
 359+ 9FE6              ;
 360+ 9FE6              ;   24/07/23
 361+ 9FE6              ;
 362+ 9FE6              ;   Fijamos_bucle
 363+ 9FE6              ;
 364+ 9FE6              ;
 365+ 9FE6
 366+ 9FE6              Fijamos_bucle
 367+ 9FE6
 368+ 9FE6 3A 0B 89         ld a,(Incrementa_puntero)
 369+ 9FE9 3C               inc a
 370+ 9FEA 32 0C 89         ld (Incrementa_puntero_backup),a
 371+ 9FED
 372+ 9FED CD 62 A0         call Incrementa_Puntero_indice_mov
 373+ 9FF0 2A 05 89         ld hl,(Puntero_indice_mov)
 374+ 9FF3 22 09 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FF6 C9               ret
 376+ 9FF7
 377+ 9FF7              ; ---------- --------- --------- ---------- ----------
 378+ 9FF7              ;
 379+ 9FF7              ;   07/7/23
 380+ 9FF7              ;
 381+ 9FF7              ;   Inicia_Repetimos_movimiento
 382+ 9FF7              ;
 383+ 9FF7              ;
 384+ 9FF7
 385+ 9FF7              Inicia_Repetimos_movimiento
 386+ 9FF7
 387+ 9FF7              ; Iniciamos (Repetimos_movimiento).
 388+ 9FF7
 389+ 9FF7 DD 2A 07 89      ld ix,(Puntero_mov)
 390+ 9FFB DD 7E 02         ld a,(ix+2)
 391+ 9FFE 32 0F 89         ld (Repetimos_movimiento),a
 392+ A001
 393+ A001 C9               ret
 394+ A002
 395+ A002              ; ---------- --------- --------- ---------- ----------
 396+ A002              ;
 397+ A002              ;   26/6/23
 398+ A002              ;
 399+ A002              ;   Inicia_Puntero_mov
 400+ A002              ;
 401+ A002              ;
 402+ A002
 403+ A002 2A 05 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A005 5E               ld e,(hl)
 405+ A006 23               inc hl
 406+ A007 56               ld d,(hl)
 407+ A008 EB               ex de,hl
 408+ A009 22 07 89         ld (Puntero_mov),hl
 409+ A00C C9               ret
 410+ A00D
 411+ A00D              ; ---------- --------- --------- ---------- ----------
 412+ A00D              ;
 413+ A00D              ;   27/06/23
 414+ A00D              ;
 415+ A00D              ;   Aplica_movimiento.
 416+ A00D
 417+ A00D              Aplica_desplazamiento
 418+ A00D
 419+ A00D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A00D
 421+ A00D 2A 07 89         ld hl, (Puntero_mov)
 422+ A010
 423+ A010 7E               ld a,(hl)
 424+ A011 E6 F0            and $f0
 425+ A013 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A014
 427+ A014 CB 7E            bit 7,(hl)
 428+ A016 28 03            jr z,1F
 429+ A018 CD 38 9A         call Mov_up
 430+ A01B 2A 07 89     1 ld hl, (Puntero_mov)
 431+ A01E CB 76            bit 6,(hl)
 432+ A020 28 03            jr z,2F
 433+ A022 CD E3 99         call Mov_down
 434+ A025 2A 07 89     2 ld hl, (Puntero_mov)
 435+ A028 CB 6E            bit 5,(hl)
 436+ A02A 28 03            jr z,3F
 437+ A02C CD 99 9B         call Mov_left
 438+ A02F 2A 07 89     3 ld hl, (Puntero_mov)
 439+ A032 CB 66            bit 4,(hl)
 440+ A034 C8               ret z
 441+ A035 CD 7B 9A         call Mov_right
 442+ A038 C9               ret
 443+ A039
 444+ A039              ; ---------- --------- --------- ---------- ----------
 445+ A039              ;
 446+ A039              ;   26/06/23
 447+ A039              ;
 448+ A039              ;   Ajusta_velocidad_desplazamiento.
 449+ A039
 450+ A039              Ajusta_velocidad_desplazamiento
 451+ A039
 452+ A039              ; 1er byte de la cadena de movimiento.
 453+ A039              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A039
 455+ A039 CD 57 A0         call Extrae_nibble_alto
 456+ A03C
 457+ A03C 32 EB 88         ld (Vel_up),a
 458+ A03F 79               ld a,c
 459+ A040 E6 0F            and $0f
 460+ A042 32 EC 88         ld (Vel_down),a
 461+ A045
 462+ A045              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A045              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A045
 465+ A045 23               inc hl
 466+ A046 CD 57 A0         call Extrae_nibble_alto
 467+ A049
 468+ A049 32 E9 88         ld (Vel_left),a
 469+ A04C 79               ld a,c
 470+ A04D E6 0F            and $0f
 471+ A04F 32 EA 88         ld (Vel_right),a
 472+ A052
 473+ A052              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A052
 475+ A052 23               inc hl
 476+ A053 22 07 89         ld (Puntero_mov),hl
 477+ A056 C9               ret
 478+ A057
 479+ A057 06 04        Extrae_nibble_alto ld b,4
 480+ A059 7E               ld a,(hl)
 481+ A05A 4F               ld c,a
 482+ A05B E6 F0            and $f0
 483+ A05D CB 3F        1 srl a
 484+ A05F 10 FC            djnz 1B
 485+ A061 C9               ret
 486+ A062
 487+ A062              ; ---------- --------- --------- ---------- ----------
 488+ A062              ;
 489+ A062              ;   5/7/23
 490+ A062              ;
 491+ A062              ;   Incrementa_Puntero_indice_mov
 492+ A062
 493+ A062              Incrementa_Puntero_indice_mov
 494+ A062
 495+ A062 21 0B 89         ld hl,Incrementa_puntero
 496+ A065 34               inc (hl)
 497+ A066
 498+ A066 2A 05 89         ld hl,(Puntero_indice_mov)
 499+ A069 01 02 00         ld bc,2
 500+ A06C A7               and a
 501+ A06D 09               add hl,bc
 502+ A06E 22 05 89         ld (Puntero_indice_mov),hl
 503+ A071
 504+ A071 7E               ld a,(hl)
 505+ A072 A7               and a
 506+ A073
 507+ A073              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A073
 509+ A073              ;    jr z,$
 510+ A073
 511+ A073              ;! Reinicia el Patrón de movimiento.
 512+ A073
 513+ A073 CC 78 A0         call z,Inicializa_Puntero_indice_mov
 514+ A076
 515+ A076 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A077
 517+ A077 C9               ret
 518+ A078
 519+ A078
 520+ A078              ; ---------- --------- --------- ---------- ----------
 521+ A078              ;
 522+ A078              ;   24/07/23
 523+ A078              ;
 524+ A078              ;   Inicializa_Puntero_indice_mov
 525+ A078
 526+ A078              Inicializa_Puntero_indice_mov
 527+ A078
 528+ A078              ; Existe etiqueta de bucle principal???
 529+ A078
 530+ A078 2A 09 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A07B 24               inc h
 532+ A07C 25               dec h
 533+ A07D 28 05            jr z,2F
 534+ A07F
 535+ A07F 22 05 89         ld (Puntero_indice_mov),hl
 536+ A082 18 14            jr 3F
 537+ A084
 538+ A084              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A084
 540+ A084 3A 0B 89     2 ld a,(Incrementa_puntero)
 541+ A087 47               ld b,a
 542+ A088
 543+ A088 2A 05 89         ld hl,(Puntero_indice_mov)
 544+ A08B 2B           1 dec hl
 545+ A08C 2B               dec hl
 546+ A08D 10 FC            djnz 1B
 547+ A08F 22 05 89         ld (Puntero_indice_mov),hl
 548+ A092
 549+ A092 AF               xor a
 550+ A093 32 0B 89         ld (Incrementa_puntero),a
 551+ A096 18 06            jr 4F
 552+ A098
 553+ A098 3A 0C 89     3 ld a,(Incrementa_puntero_backup)
 554+ A09B 32 0B 89         ld (Incrementa_puntero),a
 555+ A09E C9           4 ret
 556+ A09F
 557+ A09F
 558+ A09F
# file closed: Patrones_de_mov.asm
1785  A09F              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A09F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A09F              ;
   3+ A09F              ;	12/12/23
   4+ A09F              ;
   5+ A09F              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A09F
   7+ A09F              ;	ADC HL,SP	LD (addr),SP
   8+ A09F              ;	ADD HL,SP	LD SP,(addr)
   9+ A09F              ;	ADD IX,SP	LD SP,nn
  10+ A09F              ; 	ADD IY,SP	LD SP,HL
  11+ A09F              ;				LD SP,IX
  12+ A09F              ;	DEC SP		LD SP,IY
  13+ A09F
  14+ A09F              ;	EX (SP),HL
  15+ A09F              ;	EX (SP),IX
  16+ A09F              ;	EX (SP),IY
  17+ A09F
  18+ A09F              ;	INC SP
  19+ A09F
  20+ A09F                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 ED 73 28 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 7FA4
  36+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 7FA4
  38+ 7FA4 31 F4 88         ld sp,Variables_de_borrado+6
  39+ 7FA7
  40+ 7FA7 E5               push hl
  41+ 7FA8 DD E5            push ix
  42+ 7FAA FD E5            push iy
  43+ 7FAC
  44+ 7FAC 31 00 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 7FAF DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 7FB1              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 7FB1
  48+ 7FB1 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 7FB4
  50+ 7FB4 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 7FB5 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 7FB7 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 7FB9
  54+ 7FB9              ; Disparo o entidad?
  55+ 7FB9
  56+ 7FB9 3A 17 89         ld a,(Ctrl_1)
  57+ 7FBC CB 47            bit 0,a
  58+ 7FBE 28 05            jr z,2F
  59+ 7FC0
  60+ 7FC0 2A 30 89         ld hl,(Stack_snapshot_disparos)
  61+ 7FC3 18 0F            jr 4F
  62+ 7FC5
  63+ 7FC5              ; No es disparo. Entidad/Amadeus ????
  64+ 7FC5
  65+ 7FC5 3A 04 89     2 ld a,(Ctrl_0)
  66+ 7FC8 CB 77            bit 6,a
  67+ 7FCA 28 05            jr z,7F
  68+ 7FCC
  69+ 7FCC              ; Guardamos foto de Amadeus.
  70+ 7FCC
  71+ 7FCC 2A 34 89         ld hl,(End_Snapshot_Amadeus)
  72+ 7FCF 18 03            jr 4F
  73+ 7FD1
  74+ 7FD1 2A 2E 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 7FD4
  76+ 7FD4 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 7FD6
  78+ 7FD6 D1           1 pop de
  79+ 7FD7 73               ld (hl),e
  80+ 7FD8 23               inc hl
  81+ 7FD9 72               ld (hl),d
  82+ 7FDA 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 7FDB 10 F9            djnz 1B
  84+ 7FDD
  85+ 7FDD              ; Disparo o entidad ?
  86+ 7FDD
  87+ 7FDD 3A 17 89         ld a,(Ctrl_1)
  88+ 7FE0 CB 47            bit 0,a
  89+ 7FE2 28 05            jr z,5F
  90+ 7FE4
  91+ 7FE4 22 30 89         ld (Stack_snapshot_disparos),hl
  92+ 7FE7 18 13            jr 6F
  93+ 7FE9
  94+ 7FE9              ; Entidad o Amadeus ?
  95+ 7FE9
  96+ 7FE9 3A 04 89     5 ld a,(Ctrl_0)
  97+ 7FEC CB 77            bit 6,a
  98+ 7FEE 28 09            jr z,8F
  99+ 7FF0
 100+ 7FF0 22 34 89         ld (End_Snapshot_Amadeus),hl
 101+ 7FF3 ED 7B 28 89      ld sp,(Stack)
 102+ 7FF7 FB               ei
 103+ 7FF8 C9               ret
 104+ 7FF9
 105+ 7FF9 22 2E 89     8 ld (Stack_snapshot),hl
 106+ 7FFC ED 7B 28 89  6 ld sp,(Stack)
 107+ 8000
 108+ 8000 C9               ret
 109+ 8001
 110+ 8001              ; -----------------------------------------------------------------------------
 111+ 8001              ;
 112+ 8001              ;   21/11/23
 113+ 8001
 114+ 8001              Limpia_y_reinicia_Stack_Snapshot
 115+ 8001
 116+ 8001              ;   Limpia Album_de_fotos.
 117+ 8001
 118+ 8001 2A 2E 89         ld hl,(Stack_snapshot)
 119+ 8004 7D               ld a,l
 120+ 8005 A7               and a
 121+ 8006 C8               ret z   ;   Salimos si el álbum está vacío.
 122+ 8007
 123+ 8007 47               ld b,a
 124+ 8008 04               inc b
 125+ 8009
 126+ 8009 36 00        1 ld (hl),0
 127+ 800B 2D               dec l
 128+ 800C 10 FB            djnz 1B
 129+ 800E
 130+ 800E              ;   Reinicializa (Stack_snapshot).
 131+ 800E
 132+ 800E AF               xor a
 133+ 800F 32 2E 89         ld (Stack_snapshot),a
 134+ 8012
 135+ 8012 C9               ret
# file closed: Guarda_foto_registros.asm
1786  8013
1787  8013              	SAVESNA "Pruebas.sna", START
1788  8013
1789  8013
1790  8013
1791  8013
# file closed: Banco_de_pruebas.asm
