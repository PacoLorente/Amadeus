# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 24 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 14 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 04           Vel_left db 4 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 08           Vel_down db 8 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 22 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_izquierda_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7
 172  85D7              ; Gestión de ENTIDADES.
 173  85D7
 174  85D7 00 00        Puntero_store_entidades defw 0
 175  85D9 00 00        Puntero_restore_entidades defw 0
 176  85DB 00 00        Indice_restore defw 0
 177  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 178  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  85DF              ;														; _ (Numero_de_malotes)="0".
 182  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  85E1              ;														; _variable para almacenar lo posición del puntero_
 184  85E1              ; 														; _de pila, SP.
 185  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 189  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 192  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 203  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 204  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 206  85F3
 207  85F3
 208  85F3              ; Gestión de FRAMES.
 209  85F3
 210  85F3 00           Switch db 0
 211  85F4
 212  85F4              ; Variables de Raster y localización en pantalla.
 213  85F4
 214  85F4 00 FF        Temp_Raster defw $ff00
 215  85F6
 216  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 217  85F6              ;
 218  85F6              ;	14/11/22
 219  85F6
 220  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 221  85F9
 222  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 223  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 224  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 225  85FF F3           	DI
 226  8600
 227  8600 3E 07        	ld a,%00000111
 228  8602 CD 38 92     	call Cls
 229  8605
 230  8605              ;	call Pinta_FILAS
 231  8605
 232  8605 CD 73 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 233  8608
 234  8608 21 DD 85     	ld hl,Numero_de_entidades
 235  860B 46           	ld b,(hl)
 236  860C 04           	inc b
 237  860D 05           	dec b
 238  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 239  8610
 240  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 241  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 242  8610              ;	Pintamos el resto de entidades:
 243  8610
 244  8610 CD 6C 87     	call Inicia_punteros_de_entidades
 245  8613
 246  8613              ;	INICIA ENTIDADES!!!!!
 247  8613
 248  8613 C5           1 push bc  												; Guardo el contador de entidades.
 249  8614 CD C6 87      	call Inicia_Puntero_objeto
 250  8617 CD 88 8C     	call Draw
 251  861A CD A0 7F     	call Guarda_foto_registros
 252  861D CD 0E 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 253  8620 C1           	pop bc
 254  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 255  8623
 256  8623              ; 	INICIA AMADEUS!!!!!
 257  8623
 258  8623 CD 4F 88     3 call Restore_Amadeus
 259  8626 CD C6 87     	call Inicia_Puntero_objeto
 260  8629 CD 88 8C     	call Draw
 261  862C CD A0 7F     	call Guarda_foto_registros
 262  862F CD 61 88     	call Store_Amadeus
 263  8632
 264  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 265  8632
 266  8632 CD 82 87     	call Inicia_Puntero_Disparo_Entidades
 267  8635 CD 89 87     	call Inicia_Puntero_Disparo_Amadeus
 268  8638
 269  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 270  8638
 271  8638 CD 6C 87     	call Inicia_punteros_de_entidades
 272  863B CD 3D 88     	call Restore_Primera_entidad
 273  863E
 274  863E 3A DD 85     	ld a,(Numero_de_entidades)
 275  8641 3C           	inc a
 276  8642 32 DE 85     	ld (Numero_de_malotes),a
 277  8645
 278  8645 FB           2 ei
 279  8646 18 FD        	jr 2B
 280  8648
 281  8648              ; -----------------------------------------------------------------------------------
 282  8648
 283  8648              Frame
 284  8648
 285  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 286  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 287  8648
 288  8648 3E 02            ld a,2
 289  864A D3 FE            out ($fe),a
 290  864C CD 8C 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
 291  864F CD C5 8F     	call Extrae_foto_disparos
 292  8652 3E 01            ld a,1
 293  8654 D3 FE            out ($fe),a
 294  8656
 295  8656              ; ----------------------------------------------------------------------
 296  8656
 297  8656              ;	Existe colisión?????
 298  8656
 299  8656 3A EC 85     	ld a,(Impacto2)
 300  8659 A7           	and a
 301  865A 28 02        	jr z,5F
 302  865C
 303  865C              ; Bit 0 a "1" Impacto en entidad por disparo.
 304  865C              ; Bit 1 a "1" Impacto en Amadeus por disparo.
 305  865C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo).
 306  865C
 307  865C 18 FE        	jr $
 308  865E
 309  865E AF           5 xor a
 310  865F 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 311  8662
 312  8662 CD 1A 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 313  8665 21 00 70     	ld hl,Album_de_fotos
 314  8668 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 315  866B              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 316  866B 3A DD 85         ld a,(Numero_de_entidades)
 317  866E 47               ld b,a
 318  866F A7           	and a
 319  8670 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 320  8672
 321  8672 C5           2 push bc
 322  8673 CD D7 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 323  8676
 324  8676 3A C9 85     	ld a,(Ctrl_0)
 325  8679 CB 67        	bit 4,a
 326  867B 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 327  867D
 328  867D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 329  867D              ; Las entidades sólo generan disparo cuando se mueven.
 330  867D              ; 16/02/23.
 331  867D              ; [[[
 332  867D CD AA 88     	call Detecta_disparo_entidad
 333  8680              ; ]]]
 334  8680 CD 33 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 335  8683
 336  8683 21 C9 85     1 ld hl,Ctrl_0
 337  8686 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 338  8688 AF           	xor a
 339  8689 32 CA 85     	ld (Obj_dibujado),a
 340  868C
 341  868C CD 0E 88     6 call Store_Restore_entidades
 342  868F C1           	pop bc
 343  8690 10 E0        	djnz 2B
 344  8692
 345  8692              ; Tras la gestión de las entidades, ... AMADEUS.
 346  8692
 347  8692 CD 4F 88     4 call Restore_Amadeus
 348  8695 CD 04 87     	call Mov_Amadeus
 349  8698
 350  8698 3A EC 85     	ld a,(Impacto2)
 351  869B CB 57        	bit 2,a
 352  869D 28 0E        	jr z,7F
 353  869F
 354  869F              ; Comprobamos posible colisión entre Amadeus y una entidad.
 355  869F
 356  869F CD C3 8A     	call Detecta_colision_nave_entidad
 357  86A2 7B           	ld a,e
 358  86A3 28 08        	jr z,7F
 359  86A5
 360  86A5 21 EC 85     	ld hl,Impacto2
 361  86A8 CB D6        	set 2,(hl)
 362  86AA 32 EC 85     	ld (Impacto2),a
 363  86AD
 364  86AD 3A C9 85     7 ld a,(Ctrl_0)
 365  86B0 CB 67        	bit 4,a
 366  86B2 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 367  86B4 CD 33 87     	call Guarda_foto_entidad_a_pintar
 368  86B7
 369  86B7 21 C9 85     3 ld hl,Ctrl_0
 370  86BA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 371  86BC AF           	xor a
 372  86BD 32 CA 85     	ld (Obj_dibujado),a
 373  86C0 CD 61 88     	call Store_Amadeus
 374  86C3
 375  86C3 CD 38 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 376  86C6
 377  86C6              ; -----
 378  86C6
 379  86C6 CD 6C 87     	call Inicia_punteros_de_entidades
 380  86C9 CD 3D 88     	call Restore_Primera_entidad
 381  86CC
 382  86CC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 383  86CC
 384  86CC CD 90 87     	call Calcula_numero_de_malotes
 385  86CF CD A8 87     	call Calcula_numero_de_disparotes
 386  86D2
 387  86D2 3E 04        	ld a,4
 388  86D4 D3 FE        	out ($fe),a
 389  86D6 C9           	ret
 390  86D7
 391  86D7              ; --------------------------------------------------------------------------------------------------------------
 392  86D7              ;
 393  86D7              ;	27/03/23
 394  86D7
 395  86D7              Mov_obj
 396  86D7
 397  86D7              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 398  86D7
 399  86D7 AF           	xor a
 400  86D8 32 CA 85     	ld (Obj_dibujado),a
 401  86DB CD 3D 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 402  86DE              ;														; Obj_dibujado="0".
 403  86DE              ; Movemos Entidades malignas.
 404  86DE
 405  86DE 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 406  86E1 24           	inc h                                               ; Salimos de la rutina.
 407  86E2 25           	dec h
 408  86E3 C8           	ret z
 409  86E4
 410  86E4 CD 26 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 411  86E7
 412  86E7 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 413  86EA CB 67        	bit 4,a
 414  86EC C8           	ret z
 415  86ED
 416  86ED              ; Ha habido desplazamiento de la entidad maligna.
 417  86ED              ; Ha llegado a zona de AMADEUS ???
 418  86ED
 419  86ED 3A A2 85     	ld a,(Coordenada_y)
 420  86F0 FE 14        	cp $14
 421  86F2 D4 66 8A     	call nc, Compara_coordenadas_X
 422  86F5
 423  86F5              ; ---------
 424  86F5
 425  86F5 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 426  86F7 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 427  86FA CD 3D 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 428  86FD CD 54 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 429  8700 CD 23 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 430  8703 C9           	ret													; _de la misma.
 431  8704
 432  8704              ; --------------------------------------------------------------------------------------------------------------
 433  8704              ;
 434  8704              ;	29/1/23
 435  8704
 436  8704              Mov_Amadeus
 437  8704
 438  8704 AF           	xor a
 439  8705 32 CA 85     	ld (Obj_dibujado),a
 440  8708 CD 3D 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 441  870B              ;														; Obj_dibujado="0".
 442  870B              ; Movemos Amadeus.
 443  870B
 444  870B CD 87 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 445  870E 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 446  8711 CB 67        	bit 4,a
 447  8713 C8           	ret z
 448  8714
 449  8714              ; ---------
 450  8714
 451  8714 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 452  8716 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 453  8719 CD 3D 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 454  871C CD 54 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 455  871F CD 23 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 456  8722 C9           	ret													; _de la nave.
 457  8723
 458  8723              ; --------------------------------------------------------------------------------------------------------------
 459  8723              ;
 460  8723              ;	31/01/23
 461  8723              ;
 462  8723              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 463  8723
 464  8723              Guarda_foto_entidad_a_borrar
 465  8723
 466  8723 CD 62 8F     	call Prepara_draw
 467  8726 CD 9C 8E     	call calcula_CColumnass
 468  8729 CD D3 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 469  872C CD 28 8F     	call Define_rutina_de_impresion
 470  872F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 471  8732 C9           	ret
 472  8733
 473  8733              ; --------------------------------------------------------------------------------------------------------------
 474  8733              ;
 475  8733              ;	31/01/23
 476  8733              ;
 477  8733              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 478  8733              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 479  8733
 480  8733              Guarda_foto_entidad_a_pintar
 481  8733
 482  8733 CD 60 87     	call Repone_pintar
 483  8736 CD 88 8C     	call Draw
 484  8739 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 485  873C C9           	ret
 486  873D
 487  873D              ; --------------------------------------------------------------------------------------------------------------
 488  873D              ;
 489  873D              ;
 490  873D
 491  873D 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 492  8740 3A CA 85     	ld a,(Obj_dibujado)
 493  8743 A7           	and a
 494  8744 28 05        	jr z,1F
 495  8746 11 BF 85     	ld de,Variables_de_pintado
 496  8749 18 03        	jr 2F
 497  874B 11 B5 85     1 ld de,Variables_de_borrado
 498  874E 01 08 00     2 ld bc,8
 499  8751 ED B0        	ldir
 500  8753 C9           	ret
 501  8754
 502  8754              ; --------------------------------------------------------------------------------------------------------------
 503  8754
 504  8754 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 505  8757 11 9B 85     	ld de,Filas
 506  875A 01 08 00     	ld bc,8
 507  875D ED B0        	ldir
 508  875F C9           	ret
 509  8760
 510  8760 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 511  8763 11 9B 85     	ld de,Filas
 512  8766 01 08 00     	ld bc,8
 513  8769 ED B0        	ldir
 514  876B C9           	ret
 515  876C
 516  876C              ; *************************************************************************************************************************************************************
 517  876C              ;
 518  876C              ; 8/1/23
 519  876C              ;
 520  876C              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 521  876C              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 522  876C              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 523  876C
 524  876C              ; Destruye HL y DE !!!!!
 525  876C
 526  876C              Inicia_punteros_de_entidades
 527  876C
 528  876C 21 68 84     	ld hl,Indice_de_entidades
 529  876F CD C0 87         call Extrae_address
 530  8772 22 D7 85         ld (Puntero_store_entidades),hl
 531  8775 21 6A 84     	ld hl,Indice_de_entidades+2
 532  8778 22 DB 85     	ld (Indice_restore),hl
 533  877B CD C0 87     	call Extrae_address
 534  877E 22 D9 85     	ld (Puntero_restore_entidades),hl
 535  8781 C9               ret
 536  8782
 537  8782              ; *************************************************************************************************************************************************************
 538  8782              ;
 539  8782              ; 8/1/23
 540  8782              ;
 541  8782              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 542  8782
 543  8782 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 544  8785 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 545  8788 C9           	ret
 546  8789 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 547  878C 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 548  878F C9           	ret
 549  8790
 550  8790              ; -------------------------------------------------------------------------------------------------------------
 551  8790              ;
 552  8790              ; 28/2/23
 553  8790              ;
 554  8790
 555  8790              Calcula_numero_de_malotes
 556  8790
 557  8790 21 00 70     	ld hl,Album_de_fotos
 558  8793 EB           	ex de,hl
 559  8794 2A E3 85     	ld hl,(Stack_snapshot)
 560  8797
 561  8797 06 00        	ld b,0
 562  8799 7D           	ld a,l
 563  879A 93           	sub e
 564  879B 28 07        	jr z,1F
 565  879D
 566  879D              ; Nº de malotes no es "0".
 567  879D
 568  879D D6 06        2 sub 6
 569  879F 04           	inc b
 570  87A0 A7           	and a
 571  87A1 20 FA        	jr nz,2B
 572  87A3 78           	ld a,b
 573  87A4
 574  87A4 32 DE 85     1 ld (Numero_de_malotes),a
 575  87A7 C9           	ret
 576  87A8
 577  87A8              ; -------------------------------------------------------------------------------------------------------------
 578  87A8              ;
 579  87A8              ; 28/2/23
 580  87A8              ;
 581  87A8
 582  87A8              Calcula_numero_de_disparotes
 583  87A8
 584  87A8 21 60 70     	ld hl,Album_de_fotos_disparos
 585  87AB EB           	ex de,hl
 586  87AC 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 587  87AF
 588  87AF 06 00        	ld b,0
 589  87B1 7D           	ld a,l
 590  87B2 93           	sub e
 591  87B3 28 07        	jr z,1F
 592  87B5
 593  87B5              ; Nº de malotes no es "0".
 594  87B5
 595  87B5 D6 06        2 sub 6
 596  87B7 04           	inc b
 597  87B8 A7           	and a
 598  87B9 20 FA        	jr nz,2B
 599  87BB 78           	ld a,b
 600  87BC
 601  87BC 32 E7 85     1 ld (Numero_de_disparotes),a
 602  87BF C9           	ret
 603  87C0              ; *************************************************************************************************************************************************************
 604  87C0              ;
 605  87C0              ; 20/10/22
 606  87C0              ;
 607  87C0              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 608  87C0              ;
 609  87C0              ; Destruye el puntero y DE !!!!!
 610  87C0
 611  87C0 5E           Extrae_address ld e,(hl)
 612  87C1 23           	inc hl
 613  87C2 56           	ld d,(hl)
 614  87C3 2B           	dec hl
 615  87C4 EB           	ex de,hl
 616  87C5 C9           	ret
 617  87C6
 618  87C6              ; *************************************************************************************************************************************************************
 619  87C6              ;
 620  87C6              ;	7/2/23
 621  87C6              ;
 622  87C6              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 623  87C6              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 624  87C6              ;
 625  87C6              ;   Destruye HL y BC !!!!!,
 626  87C6              ;
 627  87C6              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 628  87C6              ;					"0" ..... Izquierda.
 629  87C6
 630  87C6              Inicia_Puntero_objeto
 631  87C6
 632  87C6 3A AF 85     	ld a,(Cuad_objeto)
 633  87C9 E6 01        	and 1
 634  87CB F5           	push af
 635  87CC CC EA 87     	call z,Inicia_puntero_objeto_izq
 636  87CF F1           	pop af
 637  87D0 28 2B        	jr z,1F
 638  87D2 CD D7 87     	call Inicia_puntero_objeto_der
 639  87D5 18 26        	jr 1F
 640  87D7
 641  87D7              ; Arrancamos desde la parte izquierda de la pantalla.
 642  87D7              ; Iniciamos (Indice_Sprite_der).
 643  87D7
 644  87D7 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 645  87DA 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 646  87DD CD C0 87     	call Extrae_address
 647  87E0 22 9F 85     	ld (Puntero_objeto),hl
 648  87E3
 649  87E3 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 650  87E6              ;	call Extrae_address
 651  87E6 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 652  87E9 C9           	ret
 653  87EA
 654  87EA              ; Arrancamos desde la parte derecha de la pantalla.
 655  87EA              ; Iniciamos (Indice_Sprite_izq).
 656  87EA
 657  87EA 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 658  87ED 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 659  87F0 CD C0 87     	call Extrae_address
 660  87F3 22 9F 85     	ld (Puntero_objeto),hl
 661  87F6
 662  87F6 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 663  87F9              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 664  87F9 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 665  87FC C9           	ret
 666  87FD
 667  87FD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 668  87FD
 669  87FD 21 38 83     1 ld hl,Amadeus
 670  8800 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 671  8804 B7 ED 42     	sub hl,bc
 672  8807 C0           	ret nz
 673  8808 21 C9 85     	ld hl,Ctrl_0
 674  880B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 675  880D C9           	ret 												; _de nuestra nave en los extremos.
 676  880E
 677  880E              ; *************************************************************************************************************************************************************
 678  880E              ;
 679  880E              ;	8/1/23
 680  880E              ;
 681  880E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 682  880E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 683  880E
 684  880E              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 685  880E              ;	_de la 2ª y 3ª entidad respectivamente.
 686  880E
 687  880E              Store_Restore_entidades
 688  880E
 689  880E E5           	push hl
 690  880F D5           	push de
 691  8810 C5            	push bc
 692  8811
 693  8811              ;	STORE !!!!!
 694  8811              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 695  8811
 696  8811 21 9B 85     	ld hl,Filas
 697  8814 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 698  8818 01 3B 00     	ld bc,59
 699  881B ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 700  881D
 701  881D              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 702  881D
 703  881D 2A D9 85     	ld hl,(Puntero_restore_entidades)
 704  8820 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 705  8823 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 706  8826 01 3B 00     	ld bc,59
 707  8829 ED B0        	ldir
 708  882B
 709  882B              ;	Incrementa RESTORE !!!!!
 710  882B
 711  882B 2A DB 85         ld hl,(Indice_restore)
 712  882E 23           	inc hl
 713  882F 23           	inc hl
 714  8830 22 DB 85     	ld (Indice_restore),hl
 715  8833 CD C0 87         call Extrae_address
 716  8836 22 D9 85         ld (Puntero_restore_entidades),hl
 717  8839 C1           	pop bc
 718  883A D1           	pop de
 719  883B E1           	pop hl
 720  883C C9           	ret
 721  883D
 722  883D              ; **************************************************************************************************
 723  883D              ;
 724  883D              ;	29/10/22
 725  883D              ;
 726  883D              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 727  883D
 728  883D E5           Restore_Primera_entidad push hl
 729  883E D5           	push de
 730  883F C5            	push bc
 731  8840 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 732  8843 11 9B 85     	ld de,Filas
 733  8846 01 3B 00     	ld bc,59
 734  8849 ED B0        	ldir
 735  884B C1           	pop bc
 736  884C D1           	pop de
 737  884D E1           	pop hl
 738  884E C9           	ret
 739  884F
 740  884F              ; **************************************************************************************************
 741  884F              ;
 742  884F              ;	25/01/23
 743  884F              ;
 744  884F              ;	Restore_Amadeus
 745  884F              ;
 746  884F              ;	Cargamos en DRAW los parámetros de Amadeus.
 747  884F              ;
 748  884F
 749  884F E5           Restore_Amadeus	push hl
 750  8850 D5           	push de
 751  8851 C5            	push bc
 752  8852 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 753  8855 11 9B 85     	ld de,Filas
 754  8858 01 3B 00     	ld bc,59
 755  885B ED B0        	ldir
 756  885D C1           	pop bc
 757  885E D1           	pop de
 758  885F E1           	pop hl
 759  8860 C9           	ret
 760  8861
 761  8861              ; *************************************************************************************************************************************************************
 762  8861              ;
 763  8861              ;	29/01/23
 764  8861              ;
 765  8861              ;	Store_Amadeus
 766  8861              ;
 767  8861              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 768  8861              ;
 769  8861
 770  8861 E5           Store_Amadeus push hl
 771  8862 D5           	push de
 772  8863 C5            	push bc
 773  8864 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 774  8867 11 74 84     	ld de,Amadeus_db
 775  886A 01 3B 00     	ld bc,59
 776  886D ED B0        	ldir
 777  886F C1           	pop bc
 778  8870 D1           	pop de
 779  8871 E1           	pop hl
 780  8872 C9           	ret
 781  8873
 782  8873              ; **************************************************************************************************
 783  8873
 784  8873              ; Teclado.
 785  8873
 786  8873 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 787  8875 DB FE        	in a,($fe)
 788  8877 E6 01        	and $01
 789  8879 28 02        	jr z,1f
 790  887B 18 F6        	jr Pulsa_ENTER
 791  887D C9           1 ret
 792  887E
 793  887E              ; **************************************************************************************************
 794  887E              ;
 795  887E              ; Temporización.
 796  887E
 797  887E              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 798  887E              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 799  887E              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 800  887E              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 801  887E
 802  887E              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 803  887E              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 804  887E              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 805  887E
 806  887E              ; A partir de $4f61 no hace falta DELAY.
 807  887E
 808  887E              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 809  887E
 810  887E 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 811  8881 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 812  8882 78           	LD A,B
 813  8883 A7           	AND A
 814  8884 20 FB        	JR NZ,wait
 815  8886 C9           	RET
 816  8887
 817  8887              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 818  8887              ;
 819  8887              ;	5/3/23
 820  8887              ;
 821  8887              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 822  8887
 823  8887              Movimiento_Amadeus
 824  8887
 825  8887              ; Disparo.
 826  8887
 827  8887 3E F7        	ld a,$f7												; "5" para disparar.
 828  8889 DB FE        	in a,($fe)
 829  888B E6 10        	and $10
 830  888D CC E7 88     	call z,Genera_disparo
 831  8890
 832  8890 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 833  8892 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 834  8894 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 835  8896 CC C6 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 836  8899 3E F7        	ld a,$f7
 837  889B DB FE        	in a,($fe)
 838  889D E6 01        	and $01
 839  889F C8           	ret z
 840  88A0
 841  88A0 3E F7        	ld a,$f7
 842  88A2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 843  88A4 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 844  88A6 CC A8 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 845  88A9 C9           	ret
 846  88AA
 847  88AA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 848  88AA              ;
 849  88AA              ;	Rutina provisional para que los malotes cagen balas.
 850  88AA
 851  88AA 3E 7F        Detecta_disparo_entidad ld a,$7f
 852  88AC DB FE        	in a,($fe)
 853  88AE E6 01        	and 1
 854  88B0 C0           	ret nz
 855  88B1 CD E7 88     	call Genera_disparo
 856  88B4 C9           	ret
 857  88B5
 858  88B5              ; Pinta indicadores de FILAS. ------------------------------------------------------
 859  88B5
 860  88B5 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 861  88B8
 862  88B8              ; ----------
 863  88B8 06 20        	ld b,32
 864  88BA E5           2 push hl
 865  88BB C5           	push bc
 866  88BC              ; ----------
 867  88BC
 868  88BC 06 BF        	ld b,$bf
 869  88BE 36 80        1 ld (hl),%10000000
 870  88C0 CD 6E 8F     	call NextScan
 871  88C3 10 F9        	djnz 1B
 872  88C5
 873  88C5              ; ----------
 874  88C5 C1           	pop bc
 875  88C6 E1           	pop hl
 876  88C7 2C           	inc l
 877  88C8 10 F0        	djnz 2B
 878  88CA              ; ----------
 879  88CA
 880  88CA 06 03        	ld b,3
 881  88CC 21 00 47         ld hl,$4700
 882  88CF CD D5 88     3 call Bucle_1
 883  88D2 10 FB            djnz 3B
 884  88D4 C9               ret
 885  88D5
 886  88D5 C5           Bucle_1 push bc
 887  88D6 E5                   push hl
 888  88D7 D1                   pop de
 889  88D8 13                   inc de
 890  88D9 01 FF 00             ld bc,255
 891  88DC 36 FF                ld (hl),255
 892  88DE ED B0                ldir
 893  88E0 23                   inc hl
 894  88E1 3E 07                ld a,7
 895  88E3 84                   add a,h
 896  88E4 67                   ld h,a
 897  88E5 C1                   pop bc
 898  88E6 C9                   ret
 899  88E7
 900  88E7              ; ---------------------------------------------------------------
 901  88E7
 902  88E7              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88E7              ; ******************************************************************************************************************************************************************************************
   2+ 88E7              ;
   3+ 88E7              ;   27/03/23
   4+ 88E7              ;
   5+ 88E7              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88E7              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88E7              ;
   8+ 88E7              ;
   9+ 88E7              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88E7              ;
  11+ 88E7              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88E7              ;               _ hacen las entidades hacia abajo.
  13+ 88E7              ;
  14+ 88E7              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88E7              ;
  16+ 88E7              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88E7              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88E7              ;
  19+ 88E7              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88E7              ;           _ la bala.
  21+ 88E7              ;
  22+ 88E7              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88E7              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88E7              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88E7              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88E7              ;           _ en el momento de generarse la bala)).
  27+ 88E7
  28+ 88E7              Genera_disparo
  29+ 88E7
  30+ 88E7              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88E7              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88E7              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88E7              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88E7              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
  35+ 88E7              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
  36+ 88E7              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88E7
  38+ 88E7              ; Exclusiones:
  39+ 88E7
  40+ 88E7 3A D2 85         ld a,(Columnas)
  41+ 88EA 47               ld b,a
  42+ 88EB 3A 9C 85         ld a,(Columns)
  43+ 88EE B8               cp b
  44+ 88EF C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88F0
  46+ 88F0              ; ----- ----- -----
  47+ 88F0
  48+ 88F0 3A C9 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
  49+ 88F3 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
  50+ 88F5 20 06            jr nz,16F
  51+ 88F7
  52+ 88F7 3A A2 85         ld a,(Coordenada_y)
  53+ 88FA FE 14            cp $14
  54+ 88FC D0               ret nc
  55+ 88FD
  56+ 88FD              ; ----- ----- -----
  57+ 88FD
  58+ 88FD              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  59+ 88FD
  60+ 88FD 21 F2 83     16 ld hl,ON_Disparo_2A
  61+ 8900 CD C0 87         call Extrae_address
  62+ 8903 24               inc h
  63+ 8904 25               dec h
  64+ 8905 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  65+ 8907
  66+ 8907 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
  67+ 890A A7               and a
  68+ 890B ED 52            sbc hl,de
  69+ 890D D0               ret nc
  70+ 890E
  71+ 890E              ; ----- ----- -----
  72+ 890E
  73+ 890E 21 00 80     14 ld hl,Indice_disparo
  74+ 8911 3A A3 85         ld a,(CTRL_DESPLZ)
  75+ 8914 4F               ld c,a
  76+ 8915 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  77+ 8917              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  78+ 8917              ;                                            ""        ""       "f9", B="1"
  79+ 8917              ;                                            ""        ""       "fb", B="2"
  80+ 8917              ;                                            ""        ""       "fb", B="3"
  81+ 8917 A7               and a
  82+ 8918 28 10            jr z,1F
  83+ 891A E6 01            and 1
  84+ 891C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  85+ 891D
  86+ 891D 79               ld a,c
  87+ 891E 16 F9            ld d,$f9
  88+ 8920 23           2 inc hl
  89+ 8921 23               inc hl
  90+ 8922 04               inc b
  91+ 8923 BA               cp d
  92+ 8924 28 04            jr z,1F
  93+ 8926 14               inc d
  94+ 8927 14               inc d
  95+ 8928 18 F6            jr 2B
  96+ 892A
  97+ 892A CD C0 87     1 call Extrae_address
  98+ 892D E5               push hl
  99+ 892E FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 100+ 8930 DD 21 01 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 101+ 8934
 102+ 8934              ;	Se cumplen las condiciones necesarias para generar un disparo.
 103+ 8934              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 104+ 8934
 105+ 8934 3A AF 85     	ld a,(Cuad_objeto)
 106+ 8937 FE 02            cp 2
 107+ 8939 38 60            jr c,3F
 108+ 893B 28 5E            jr z,3F
 109+ 893D
 110+ 893D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 111+ 893D
 112+ 893D E6 01            and 1
 113+ 893F 28 2D            jr z,4F
 114+ 8941
 115+ 8941              ; 	Estamos en el 3er cuadrante de pantalla.
 116+ 8941              ; 	3er CUAD. ----- ----- ----- ----- -----
 117+ 8941              ;
 118+ 8941              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 119+ 8941              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 120+ 8941              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 121+ 8941
 122+ 8941 2A 9D 85     	ld hl,(Posicion_actual)
 123+ 8944
 124+ 8944              ;   Amadeus o entidad ???.
 125+ 8944
 126+ 8944 3A C9 85         ld a,(Ctrl_0)
 127+ 8947 CB 77            bit 6,a
 128+ 8949 28 0D            jr z,8F
 129+ 894B
 130+ 894B              ; 	Dispara Amadeus.
 131+ 894B
 132+ 894B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 133+ 894D CD 7D 8F         call PreviousScan
 134+ 8950 CD 7D 8F         call PreviousScan
 135+ 8953
 136+ 8953              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 137+ 8953              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 138+ 8953              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 139+ 8953              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 140+ 8953
 141+ 8953 CD C5 89         call Ajusta_disparo_parte_izquierda
 142+ 8956 18 0E            jr 10F
 143+ 8958
 144+ 8958              ; 	Dispara Entidad.
 145+ 8958
 146+ 8958 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
 147+ 895A
 148+ 895A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 149+ 895A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 150+ 895A
 151+ 895A C5               push bc
 152+ 895B 06 10            ld b,16
 153+ 895D CD 6E 8F     9 call NextScan
 154+ 8960 10 FB            djnz 9B
 155+ 8962 C1               pop bc
 156+ 8963
 157+ 8963              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 158+ 8963              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 159+ 8963              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 160+ 8963              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 161+ 8963
 162+ 8963 CD C5 89         call Ajusta_disparo_parte_izquierda
 163+ 8966
 164+ 8966 CD 3A 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 165+ 8969              ;                                                   ; _al generar el disparo.
 166+ 8969
 167+ 8969              ; 	LLegados a este punto tendremos:
 168+ 8969              ;
 169+ 8969              ;       Puntero_objeto_disparo en IY.
 170+ 8969              ;       Rutinas_de_impresion en IX.
 171+ 8969              ;       Puntero_de_impresion en HL.
 172+ 8969              ;       Impacto/Dirección en BC.
 173+ 8969
 174+ 8969 CD CD 89         call Almacena_disparo
 175+ 896C 18 4F            jr 6F                                           ; RET.
 176+ 896E
 177+ 896E
 178+ 896E              ; 	Estamos en el 4º cuadrante de pantalla.
 179+ 896E              ; 	4º CUAD. ----- ----- ----- ----- -----
 180+ 896E              ;
 181+ 896E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 182+ 896E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 183+ 896E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 184+ 896E
 185+ 896E 2A 9D 85     4 ld hl,(Posicion_actual)
 186+ 8971
 187+ 8971              ;   Amadeus o entidad ???.
 188+ 8971
 189+ 8971 3A C9 85         ld a,(Ctrl_0)
 190+ 8974 CB 77            bit 6,a
 191+ 8976 28 0D            jr z,11F
 192+ 8978
 193+ 8978              ; 	Dispara Amadeus.
 194+ 8978
 195+ 8978 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 196+ 897A CD 7D 8F         call PreviousScan
 197+ 897D CD 7D 8F         call PreviousScan
 198+ 8980
 199+ 8980              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 200+ 8980              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 201+ 8980              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 202+ 8980              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 203+ 8980
 204+ 8980 CD BE 89         call Ajusta_disparo_parte_derecha
 205+ 8983 18 0E            jr 13F
 206+ 8985
 207+ 8985              ; 	Dispara Entidad.
 208+ 8985
 209+ 8985 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
 210+ 8987
 211+ 8987              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 212+ 8987              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 213+ 8987
 214+ 8987 C5               push bc
 215+ 8988
 216+ 8988 06 10            ld b,16
 217+ 898A CD 6E 8F     12 call NextScan
 218+ 898D 10 FB            djnz 12B
 219+ 898F
 220+ 898F C1               pop bc
 221+ 8990
 222+ 8990              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 223+ 8990              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 224+ 8990              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 225+ 8990              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 226+ 8990
 227+ 8990 CD BE 89         call Ajusta_disparo_parte_derecha
 228+ 8993
 229+ 8993 CD 3A 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 230+ 8996              ;                                                     ; _al generar el disparo.
 231+ 8996
 232+ 8996              ; LLegados a este punto tendremos:
 233+ 8996              ;
 234+ 8996              ;       Puntero_objeto_disparo en IY.
 235+ 8996              ;       Rutinas_de_impresion en IX.
 236+ 8996              ;       Puntero_de_impresion en HL.
 237+ 8996              ;       Impacto/Dirección en BC.
 238+ 8996
 239+ 8996 CD CD 89         call Almacena_disparo
 240+ 8999 18 22            jr 6F                                           ; RET.
 241+ 899B
 242+ 899B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 243+ 899B
 244+ 899B 28 11        3 jr z,5F
 245+ 899D
 246+ 899D              ; 	1er CUAD. ----- ----- ----- ----- -----
 247+ 899D              ;
 248+ 899D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 249+ 899D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 250+ 899D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 251+ 899D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 252+ 899D
 253+ 899D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 254+ 899D              ;	   ""        ""       "f9", B="1"
 255+ 899D              ;	   ""        ""       "fb", B="2"
 256+ 899D              ; 	   ""        ""       "fb", B="3"
 257+ 899D
 258+ 899D 2A 9D 85     	ld hl,(Posicion_actual)
 259+ 89A0 CD 6E 8F     	call NextScan
 260+ 89A3
 261+ 89A3              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 262+ 89A3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 263+ 89A3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 264+ 89A3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 265+ 89A3
 266+ 89A3 CD C5 89         call Ajusta_disparo_parte_izquierda
 267+ 89A6
 268+ 89A6              ; 	No se produce impacto. B="$80"
 269+ 89A6              ; 	Dirección del proyectil hacia abajo. C="$80"
 270+ 89A6
 271+ 89A6 01 80 80         ld bc,$8080
 272+ 89A9
 273+ 89A9              ; 	LLegados a este punto tendremos:
 274+ 89A9              ;
 275+ 89A9              ;       Puntero_objeto_disparo en IY.
 276+ 89A9              ;       Rutinas_de_impresion en IX.
 277+ 89A9              ;       Puntero_de_impresion en HL.
 278+ 89A9              ;       Impacto/Dirección en BC.
 279+ 89A9
 280+ 89A9 CD CD 89         call Almacena_disparo
 281+ 89AC 18 0F            jr 6F                                           ; RET.
 282+ 89AE
 283+ 89AE              ; 	Estamos en el 2º cuadrante de pantalla.
 284+ 89AE              ; 	2º CUAD. ----- ----- ----- ----- -----
 285+ 89AE              ;
 286+ 89AE              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 287+ 89AE              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 288+ 89AE              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 289+ 89AE              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 290+ 89AE
 291+ 89AE 2A 9D 85     5 ld hl,(Posicion_actual)
 292+ 89B1 CD 6E 8F     	call NextScan
 293+ 89B4
 294+ 89B4              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 295+ 89B4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 296+ 89B4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 297+ 89B4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 298+ 89B4
 299+ 89B4 CD BE 89         call Ajusta_disparo_parte_derecha
 300+ 89B7
 301+ 89B7              ; 	No se produce impacto. B="$80"
 302+ 89B7              ; 	Dirección del proyectil hacia abajo. C="80"
 303+ 89B7
 304+ 89B7 01 80 80     15 ld bc,$8080
 305+ 89BA
 306+ 89BA              ; 	LLegados a este punto tendremos:
 307+ 89BA              ;
 308+ 89BA              ;       Puntero_objeto_disparo en IY.
 309+ 89BA              ;       Rutinas_de_impresion en IX.
 310+ 89BA              ;       Puntero_de_impresion en HL.
 311+ 89BA              ;       Impacto/Dirección en BC.
 312+ 89BA
 313+ 89BA CD CD 89         call Almacena_disparo
 314+ 89BD
 315+ 89BD C9           6 ret
 316+ 89BE
 317+ 89BE              ; ----------------------------------------------------------------
 318+ 89BE              ;
 319+ 89BE              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 320+ 89BE              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 321+ 89BE              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 322+ 89BE
 323+ 89BE 78           Ajusta_disparo_parte_derecha ld a,b
 324+ 89BF FE 02            cp 2
 325+ 89C1 38 01            jr c,1F
 326+ 89C3 23               inc hl
 327+ 89C4 C9           1 ret
 328+ 89C5
 329+ 89C5 78           Ajusta_disparo_parte_izquierda ld a,b
 330+ 89C6 FE 01        	cp 1
 331+ 89C8 20 01        	jr nz,1F
 332+ 89CA 2B           	dec hl
 333+ 89CB 2B           1 dec hl
 334+ 89CC C9               ret
 335+ 89CD
 336+ 89CD              ; ----------------------------------------------------------------
 337+ 89CD              ;
 338+ 89CD              ;   25/02/23
 339+ 89CD              ;
 340+ 89CD              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 341+ 89CD              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 342+ 89CD
 343+ 89CD              Almacena_disparo
 344+ 89CD
 345+ 89CD E5               push hl  										; HL contiene el puntero de impresión.
 346+ 89CE F1               pop af
 347+ 89CF 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 348+ 89D0
 349+ 89D0 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 350+ 89D1 E6 01            and 1
 351+ 89D3 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 352+ 89D5              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 353+ 89D5              ; 	Dispara AMADEUS.
 354+ 89D5
 355+ 89D5              ;	Comprobamos que a Amadeus aún le quedan disparos.
 356+ 89D5              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 357+ 89D5              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 358+ 89D5              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 359+ 89D5
 360+ 89D5 C5               push bc
 361+ 89D6 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 362+ 89D9 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 89DC A7               and a
 364+ 89DD ED 42            sbc hl,bc
 365+ 89DF CC 89 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 366+ 89E2 C1               pop bc
 367+ 89E3 28 54            jr z,4F
 368+ 89E5
 369+ 89E5 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 370+ 89E8 23               inc hl
 371+ 89E9 23               inc hl
 372+ 89EA 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 373+ 89ED              ;                                                   ; _ Disparo_(+1).
 374+ 89ED 18 18            jr 2F
 375+ 89EF
 376+ 89EF              ; Dispara una entidad.
 377+ 89EF
 378+ 89EF C5           1 push bc
 379+ 89F0 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 380+ 89F3 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 89F6 A7               and a
 382+ 89F7 ED 42            sbc hl,bc
 383+ 89F9 CC 82 87         call z,Inicia_Puntero_Disparo_Entidades
 384+ 89FC C1               pop bc
 385+ 89FD 28 3A            jr z,4F
 386+ 89FF
 387+ 89FF 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 388+ 8A02 23               inc hl
 389+ 8A03 23               inc hl
 390+ 8A04 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 391+ 8A07              ;                                                   ; _ Disparo_(+1).
 392+ 8A07 CD C0 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 393+ 8A0A              ;                                                   ; _ los 8 bytes que definen el disparo:
 394+ 8A0A              ;
 395+ 8A0A              ;                                                     Puntero_objeto_disparo en IY.
 396+ 8A0A              ;                                                     Rutinas_de_impresion en IX.
 397+ 8A0A              ;                                                     Puntero_de_impresion en HL.
 398+ 8A0A              ;                                                     Impacto/Dirección en BC.
 399+ 8A0A
 400+ 8A0A 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 401+ 8A0B 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 402+ 8A0C 23               inc hl                                          ; _ al siguiente.
 403+ 8A0D A7               and a
 404+ 8A0E 20 C0            jr nz,3B
 405+ 8A10
 406+ 8A10 08               ex af,af
 407+ 8A11 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 408+ 8A15 F9               ld sp,hl
 409+ 8A16
 410+ 8A16 DD E5            push ix                                         ; Rutina de impresión.
 411+ 8A18 F5               push af                                         ; Puntero de impresión.
 412+ 8A19 FD E5            push iy                                         ; Puntero objeto.
 413+ 8A1B C5               push bc                                         ; Control.
 414+ 8A1C
 415+ 8A1C ED 7B DF 85      ld sp,(Stack)
 416+ 8A20
 417+ 8A20              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 418+ 8A20
 419+ 8A20 21 D6 85     	ld hl,Ctrl_1
 420+ 8A23 CB C6        	set 0,(hl)
 421+ 8A25
 422+ 8A25 DD E5        	push ix
 423+ 8A27 E1               pop hl
 424+ 8A28 F5               push af
 425+ 8A29 DD E1            pop ix
 426+ 8A2B
 427+ 8A2B CD A0 7F     	call Guarda_foto_registros
 428+ 8A2E
 429+ 8A2E 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 430+ 8A31 CB 86        	res 0,(hl)
 431+ 8A33
 432+ 8A33              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 433+ 8A33              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 434+ 8A33
 435+ 8A33 CD 89 87         call Inicia_Puntero_Disparo_Amadeus
 436+ 8A36 CD 82 87         call Inicia_Puntero_Disparo_Entidades
 437+ 8A39
 438+ 8A39 C9           4 ret
 439+ 8A3A
 440+ 8A3A              ; ----------------------------------------------------------------
 441+ 8A3A              ;
 442+ 8A3A              ;   4/3/23
 443+ 8A3A              ;
 444+ 8A3A              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 445+ 8A3A              ;   _ al generarse el disparo.
 446+ 8A3A              ;
 447+ 8A3A              ;       "$80" ..... No se produce colisión.
 448+ 8A3A              ;       "$81" ..... Se produce colisión.
 449+ 8A3A
 450+ 8A3A              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 451+ 8A3A              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 452+ 8A3A
 453+ 8A3A
 454+ 8A3A FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 455+ 8A3C E5               push hl                                        ; Puntero de impresión.
 456+ 8A3D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 457+ 8A3F CD 56 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 458+ 8A42 E1               pop hl
 459+ 8A43 E5               push hl
 460+ 8A44 CD 6E 8F         call NextScan
 461+ 8A47
 462+ 8A47 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 463+ 8A48 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 464+ 8A4A 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 465+ 8A4C              ;                                                  ; _ 2º scanline si esto es así.
 466+ 8A4C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 467+ 8A4E CD 56 8A         call Bucle_2
 468+ 8A51
 469+ 8A51 43           2 ld b,e
 470+ 8A52 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 471+ 8A53 FD E1            pop iy
 472+ 8A55 C9               ret
 473+ 8A56
 474+ 8A56               ; ---------- ----------
 475+ 8A56
 476+ 8A56 06 02        Bucle_2 ld b,2
 477+ 8A58 FD 7E 00     2 ld a,(iy)
 478+ 8A5B A6               and (hl)
 479+ 8A5C 28 02            jr z,1F
 480+ 8A5E 1E 81            ld e,$81
 481+ 8A60 23           1 inc hl
 482+ 8A61 FD 23            inc iy
 483+ 8A63 10 F3            djnz 2B
 484+ 8A65 C9               ret
 485+ 8A66
 486+ 8A66              ; -------------------------------------------------------------------------------------------------------------
 487+ 8A66              ;
 488+ 8A66              ;   11/04/23
 489+ 8A66              ;
 490+ 8A66              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 491+ 8A66              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 492+ 8A66              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 493+ 8A66              ;
 494+ 8A66              ;   MODIFICA: HL,DE,BC,A y AF´.
 495+ 8A66
 496+ 8A66              Compara_coordenadas_X
 497+ 8A66
 498+ 8A66              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 499+ 8A66
 500+ 8A66              ; Preparamos registros:
 501+ 8A66
 502+ 8A66 21 A1 85         ld hl,Filas+6
 503+ 8A69 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8A6A 23               inc hl
 505+ 8A6B 23               inc hl
 506+ 8A6C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8A6D 43               ld b,e
 508+ 8A6E 21 AF 85         ld hl,Filas+20
 509+ 8A71 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8A72 21 F0 85         ld hl,Coordenadas_X_Entidad
 511+ 8A75 CD 75 8C         call Guarda_coordenadas_X
 512+ 8A78
 513+ 8A78              ; Preparamos registros:
 514+ 8A78
 515+ 8A78 21 7A 84         ld hl,Amadeus_db+6
 516+ 8A7B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8A7C 23               inc hl
 518+ 8A7D 23               inc hl
 519+ 8A7E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8A7F 7B               ld a,e
 521+ 8A80 08               ex af,af'
 522+ 8A81 21 88 84         ld hl,Amadeus_db+20
 523+ 8A84 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8A85 21 ED 85         ld hl,Coordenadas_X_Amadeus
 525+ 8A88 CD 75 8C         call Guarda_coordenadas_X
 526+ 8A8B
 527+ 8A8B              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8A8B              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8A8B
 530+ 8A8B 04               inc b
 531+ 8A8C 05               dec b
 532+ 8A8D 28 04            jr z,1F
 533+ 8A8F 06 03            ld b,3
 534+ 8A91 18 02            jr 2F
 535+ 8A93 06 02        1 ld b,2
 536+ 8A95 08           2 ex af,af'
 537+ 8A96 3C               inc a
 538+ 8A97 3D               dec a
 539+ 8A98 28 04            jr z,5F
 540+ 8A9A 0E 03            ld c,3
 541+ 8A9C 18 02            jr 6F
 542+ 8A9E 0E 02        5 ld c,2
 543+ 8AA0 79           6 ld a,c
 544+ 8AA1 08               ex af,af'
 545+ 8AA2 11 F0 85         ld de,Coordenadas_X_Entidad
 546+ 8AA5 1A           4 ld a,(de)
 547+ 8AA6 21 ED 85         ld hl,Coordenadas_X_Amadeus
 548+ 8AA9 BE           3 cp (hl)
 549+ 8AAA 28 0B            jr z,7F
 550+ 8AAC 23               inc hl
 551+ 8AAD 0D               dec c
 552+ 8AAE 20 F9            jr nz,3B
 553+ 8AB0 13               inc de
 554+ 8AB1 08               ex af,af'
 555+ 8AB2 4F               ld c,a
 556+ 8AB3 08               ex af,af'
 557+ 8AB4 10 EF            djnz 4B
 558+ 8AB6 C9           8 ret
 559+ 8AB7 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 560+ 8AB9 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 561+ 8ABC              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 562+ 8ABC 21 EC 85         ld hl,Impacto2
 563+ 8ABF CB D6            set 2,(hl)
 564+ 8AC1 18 F3            jr 8B
 565+ 8AC3
 566+ 8AC3              ; -----------------------------------------------------------------------
 567+ 8AC3              ;
 568+ 8AC3              ;   11/04/23
 569+ 8AC3              ;
 570+ 8AC3
 571+ 8AC3              Detecta_colision_nave_entidad
 572+ 8AC3
 573+ 8AC3 2A 9D 85         ld hl,(Posicion_actual)
 574+ 8AC6 CD D3 8E         call Calcula_puntero_de_impresion
 575+ 8AC9
 576+ 8AC9              ; Ahora, IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
 577+ 8AC9              ;        IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
 578+ 8AC9
 579+ 8AC9              ; Con estos datos podremos situar HL en el penúltimo scanline del puntero_de_impresión de la entidad y_
 580+ 8AC9              ; _ el registro IY en el 1er dato del penúltimo scanline que forma la entidad, (Puntero_objeto).
 581+ 8AC9
 582+ 8AC9 06 0E            ld b,14
 583+ 8ACB DD E5            push ix
 584+ 8ACD E1               pop hl
 585+ 8ACE CD 6E 8F     1 call NextScan
 586+ 8AD1 10 FB            djnz 1B
 587+ 8AD3 E5               push hl
 588+ 8AD4 DD E1            pop ix                                         ; Puntero_de_impresion de la entidad implicada en el penúltimo scanline.
 589+ 8AD6 FD E5            push iy
 590+ 8AD8 E1               pop hl
 591+ 8AD9
 592+ 8AD9              ; Sumaremos 28/42 bytes en función de las (Columns) que formen la entidad.
 593+ 8AD9
 594+ 8AD9 3A 9C 85         ld a,(Columns)
 595+ 8ADC E6 01            and 1
 596+ 8ADE 20 05            jr nz,2F
 597+ 8AE0 01 1C 00         ld bc,28
 598+ 8AE3 18 03            jr 3F
 599+ 8AE5 01 2A 00     2 ld bc,42
 600+ 8AE8 A7           3 and a
 601+ 8AE9 ED 4A            adc hl,bc
 602+ 8AEB E5               push hl
 603+ 8AEC FD E1            pop iy                                          ; Puntero_objeto de la entidad implicada apuntando al 1er dato del penúltimo_
 604+ 8AEE              ;                                                   ; _ scanline.
 605+ 8AEE DD E5            push ix
 606+ 8AF0 E1               pop hl
 607+ 8AF1 E5               push hl
 608+ 8AF2
 609+ 8AF2              ; Llegados a este punto, HL apunta al puntero de impresión del penúltimo scanline de pantalla de la entidad.
 610+ 8AF2              ; IY apunta a los "datos" del penúltimo scanline que forman la entidad.
 611+ 8AF2
 612+ 8AF2 1E 00            ld e,0                                         ; E,(Impacto)="0".
 613+ 8AF4 CD 08 8B         call Bucle_3                                   ; Comprobamos el 1er scanline.
 614+ 8AF7 E1               pop hl
 615+ 8AF8 E5               push hl
 616+ 8AF9 CD 6E 8F         call NextScan
 617+ 8AFC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 618+ 8AFD FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 619+ 8AFF 28 05            jr z,4F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 620+ 8B01 30 03            jr nc,4F
 621+ 8B03              ;                                                  ; _ 2º scanline si esto es así.
 622+ 8B03 CD 08 8B         call Bucle_3
 623+ 8B06 E1           4 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 624+ 8B07 C9               ret
 625+ 8B08
 626+ 8B08               ; ---------- ----------
 627+ 8B08
 628+ 8B08 3A D2 85     Bucle_3 ld a,(Columnas)
 629+ 8B0B 47               ld b,a
 630+ 8B0C FD 7E 00     2 ld a,(iy)
 631+ 8B0F A6               and (hl)
 632+ 8B10 28 02            jr z,1F
 633+ 8B12 1E 01            ld e,1
 634+ 8B14 23           1 inc hl
 635+ 8B15 FD 23            inc iy
 636+ 8B17 10 F3            djnz 2B
 637+ 8B19 C9               ret
 638+ 8B1A
 639+ 8B1A              ; -------------------------------------------------------------------------------------------------------------
 640+ 8B1A              ;
 641+ 8B1A              ;   13/03/23
 642+ 8B1A              ;
 643+ 8B1A              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 644+ 8B1A              ;
 645+ 8B1A              ;   DESTRUYE: HL,BC,DE y A.
 646+ 8B1A
 647+ 8B1A 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 648+ 8B1D 7E               ld a,(hl)
 649+ 8B1E A7               and a
 650+ 8B1F C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 651+ 8B20
 652+ 8B20 44               ld b,h
 653+ 8B21 4D               ld c,l
 654+ 8B22 2A E5 85         ld hl,(Stack_snapshot_disparos)
 655+ 8B25 E5               push hl
 656+ 8B26 A7               and a
 657+ 8B27 ED 42            sbc hl,bc
 658+ 8B29 E5               push hl
 659+ 8B2A C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 660+ 8B2B
 661+ 8B2B E1               pop hl
 662+ 8B2C 54               ld d,h
 663+ 8B2D 5D               ld e,l
 664+ 8B2E 1B               dec de
 665+ 8B2F ED B8            lddr                                                ; Limpiamos.
 666+ 8B31
 667+ 8B31 21 60 70         ld hl,Album_de_fotos_disparos
 668+ 8B34 22 E5 85         ld (Stack_snapshot_disparos),hl
 669+ 8B37
 670+ 8B37 C9               ret
 671+ 8B38
 672+ 8B38              ; -------------------------------------------------------------------------------------------------------------
 673+ 8B38              ;
 674+ 8B38              ;   28/03/23
 675+ 8B38              ;
 676+ 8B38
 677+ 8B38 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 678+ 8B3B 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 679+ 8B3E
 680+ 8B3E CD C0 87     2 call Extrae_address
 681+ 8B41 7E               ld a,(hl)
 682+ 8B42 A7               and a
 683+ 8B43 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 684+ 8B45
 685+ 8B45              ; ----- ----- ----- ----- ----- -----
 686+ 8B45
 687+ 8B45 C5               push bc
 688+ 8B46 CD F0 8B         call foto_disparo_a_borrar
 689+ 8B49
 690+ 8B49              ; Existe colisión con este disparo???
 691+ 8B49
 692+ 8B49 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 693+ 8B4A 7E               ld a,(hl)
 694+ 8B4B 2B               dec hl
 695+ 8B4C E6 01            and 1
 696+ 8B4E 28 0C            jr z,9F
 697+ 8B50
 698+ 8B50              ; Elimino el disparo de la base de datos.
 699+ 8B50
 700+ 8B50 E5               push hl
 701+ 8B51 CD 6A 8C         call Elimina_disparo_de_base_de_datos
 702+ 8B54 21 EC 85         ld hl,Impacto2
 703+ 8B57 CB C6            set 0,(hl)
 704+ 8B59 E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
 705+ 8B5A 18 06            jr 11F
 706+ 8B5C
 707+ 8B5C CD 19 8C     9 call Mueve_disparo
 708+ 8B5F CD F0 8B         call foto_disparo_a_borrar
 709+ 8B62
 710+ 8B62 C1           11 pop bc
 711+ 8B63
 712+ 8B63 18 04            jr 7F
 713+ 8B65
 714+ 8B65              ; ----- ----- ----- ----- ----- -----
 715+ 8B65
 716+ 8B65 ED 42        1 sbc hl,bc
 717+ 8B67 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 718+ 8B69
 719+ 8B69 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 720+ 8B6C 23               inc hl
 721+ 8B6D 23               inc hl
 722+ 8B6E 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 723+ 8B71 18 CB            jr 2B
 724+ 8B73
 725+ 8B73 CD 89 87     3 call Inicia_Puntero_Disparo_Amadeus
 726+ 8B76
 727+ 8B76 01 66 84         ld bc,Disparo_11
 728+ 8B79 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 729+ 8B7C
 730+ 8B7C CD C0 87     5 call Extrae_address
 731+ 8B7F 7E               ld a,(hl)
 732+ 8B80 A7               and a
 733+ 8B81 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 734+ 8B83
 735+ 8B83              ; ----- ----- ----- ----- ----- -----
 736+ 8B83
 737+ 8B83 C5               push bc
 738+ 8B84 CD F0 8B         call foto_disparo_a_borrar
 739+ 8B87
 740+ 8B87              ; Existe colisión con este disparo???
 741+ 8B87
 742+ 8B87 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 743+ 8B88 7E               ld a,(hl)
 744+ 8B89 2B               dec hl
 745+ 8B8A E6 01            and 1
 746+ 8B8C 28 47            jr z,10F
 747+ 8B8E
 748+ 8B8E              ; La colisión se produce con Amadeus???
 749+ 8B8E              ; Amadeus siempre tiene (Coordenada_y)="$16".
 750+ 8B8E
 751+ 8B8E E5               push hl
 752+ 8B8F
 753+ 8B8F 06 04            ld b,4
 754+ 8B91 23           16 inc hl
 755+ 8B92 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 756+ 8B94
 757+ 8B94 CD C0 87         call Extrae_address
 758+ 8B97 CD 85 95         call Genera_coordenadas_disparo
 759+ 8B9A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 760+ 8B9B FE 16            cp $16
 761+ 8B9D 38 24            jr c,15F
 762+ 8B9F
 763+ 8B9F              ; (Colisiones en filas 16 y 17).
 764+ 8B9F
 765+ 8B9F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 766+ 8BA0
 767+ 8BA0              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 768+ 8BA0
 769+ 8BA0 21 7A 84         ld hl,Amadeus_db+6
 770+ 8BA3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 771+ 8BA4 23               inc hl
 772+ 8BA5 23               inc hl
 773+ 8BA6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 774+ 8BA7 21 88 84         ld hl,Amadeus_db+20
 775+ 8BAA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 776+ 8BAB 21 ED 85         ld hl,Coordenadas_X_Amadeus
 777+ 8BAE
 778+ 8BAE CD 75 8C         call Guarda_coordenadas_X
 779+ 8BB1
 780+ 8BB1 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 781+ 8BB2
 782+ 8BB2              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 783+ 8BB2
 784+ 8BB2 21 ED 85         ld hl,Coordenadas_X_Amadeus
 785+ 8BB5 7E               ld a,(hl)
 786+ 8BB6 BA           18 cp d
 787+ 8BB7 20 03            jr nz,17F
 788+ 8BB9
 789+ 8BB9              ; Colisión Amadeus !!!!!!!!!!
 790+ 8BB9
 791+ 8BB9 E1               pop hl
 792+ 8BBA 18 0D            jr 14F
 793+ 8BBC
 794+ 8BBC 23           17 inc hl
 795+ 8BBD 7E               ld a,(hl)
 796+ 8BBE
 797+ 8BBE A7               and a
 798+ 8BBF 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
 799+ 8BC1 18 F3            jr 18B
 800+ 8BC3
 801+ 8BC3              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 802+ 8BC3              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 803+ 8BC3
 804+ 8BC3 E1           15  pop hl
 805+ 8BC4 23               inc hl
 806+ 8BC5 35               dec (hl)
 807+ 8BC6 2B               dec hl
 808+ 8BC7 18 0C            jr 10F
 809+ 8BC9
 810+ 8BC9              ; -----------------------debug
 811+ 8BC9
 812+ 8BC9              ; Elimino el disparo de la base de datos.
 813+ 8BC9
 814+ 8BC9 E5           14 push hl
 815+ 8BCA CD 6A 8C         call Elimina_disparo_de_base_de_datos
 816+ 8BCD 21 EC 85         ld hl,Impacto2
 817+ 8BD0 CB CE            set 1,(hl)
 818+ 8BD2 E1               pop hl
 819+ 8BD3 18 06            jr 12F
 820+ 8BD5
 821+ 8BD5 CD 19 8C     10 call Mueve_disparo
 822+ 8BD8 CD F0 8B         call foto_disparo_a_borrar
 823+ 8BDB C1           12 pop bc
 824+ 8BDC
 825+ 8BDC 18 04            jr 8F
 826+ 8BDE
 827+ 8BDE              ; ----- ----- ----- ----- ----- -----
 828+ 8BDE
 829+ 8BDE ED 42        4 sbc hl,bc
 830+ 8BE0 28 0A            jr z,6F
 831+ 8BE2
 832+ 8BE2 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 833+ 8BE5 23               inc hl
 834+ 8BE6 23               inc hl
 835+ 8BE7 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 836+ 8BEA 18 90            jr 5B
 837+ 8BEC
 838+ 8BEC CD 82 87     6 call Inicia_Puntero_Disparo_Entidades
 839+ 8BEF C9               ret
 840+ 8BF0
 841+ 8BF0              ; ------------------------------------------------------------------
 842+ 8BF0
 843+ 8BF0              foto_disparo_a_borrar
 844+ 8BF0
 845+ 8BF0 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 846+ 8BF1 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 847+ 8BF2 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 848+ 8BF3
 849+ 8BF3 E5               push hl
 850+ 8BF4 23               inc hl
 851+ 8BF5 23               inc hl
 852+ 8BF6 ED 73 DF 85      ld (Stack),sp
 853+ 8BFA F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 854+ 8BFB FD E1            pop iy
 855+ 8BFD DD E1            pop ix
 856+ 8BFF E1               pop hl
 857+ 8C00 ED 7B DF 85      ld sp,(Stack)
 858+ 8C04 3A D6 85         ld a,(Ctrl_1)
 859+ 8C07 CB C7            set 0,a
 860+ 8C09 32 D6 85         ld (Ctrl_1),a
 861+ 8C0C CD A0 7F         call Guarda_foto_registros
 862+ 8C0F 3A D6 85         ld a,(Ctrl_1)
 863+ 8C12 CB 87            res 0,a
 864+ 8C14 32 D6 85         ld (Ctrl_1),a
 865+ 8C17 E1               pop hl
 866+ 8C18 C9               ret
 867+ 8C19
 868+ 8C19 E5           Mueve_disparo push hl
 869+ 8C1A 7E               ld a,(hl)
 870+ 8C1B 06 04            ld b,4
 871+ 8C1D 23           1 inc hl
 872+ 8C1E 10 FD            djnz 1B
 873+ 8C20
 874+ 8C20              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 875+ 8C20
 876+ 8C20 CD C0 87         call Extrae_address
 877+ 8C23
 878+ 8C23 E6 01            and 1
 879+ 8C25 28 2A            jr z,2F
 880+ 8C27
 881+ 8C27              ; Disparo hacia arriba, (Amadeus).
 882+ 8C27
 883+ 8C27              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 884+ 8C27              ; _ de la dificultad.
 885+ 8C27
 886+ 8C27 CD 7D 8F         call PreviousScan
 887+ 8C2A CD 7D 8F         call PreviousScan
 888+ 8C2D CD 7D 8F         call PreviousScan
 889+ 8C30
 890+ 8C30              ; Detecta si el disparo de Amadeus sale de pantalla:
 891+ 8C30
 892+ 8C30 7C               ld a,h
 893+ 8C31 FE 40            cp $40
 894+ 8C33 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 895+ 8C35
 896+ 8C35              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 897+ 8C35
 898+ 8C35 EB               ex de,hl
 899+ 8C36 06 04            ld b,4
 900+ 8C38 2B           6 dec hl
 901+ 8C39 10 FD            djnz 6B
 902+ 8C3B
 903+ 8C3B CD 6A 8C         call Elimina_disparo_de_base_de_datos
 904+ 8C3E
 905+ 8C3E 18 0C            jr 4F
 906+ 8C40
 907+ 8C40              ; Se ha desplazado la bala, compruebo colisión.
 908+ 8C40
 909+ 8C40 D5           3 push de
 910+ 8C41 C5               push bc
 911+ 8C42 CD 3A 8A         call Comprueba_Colision
 912+ 8C45 78               ld a,b
 913+ 8C46 C1               pop bc
 914+ 8C47 D1               pop de
 915+ 8C48
 916+ 8C48 EB               ex de,hl
 917+ 8C49
 918+ 8C49 73               ld (hl),e
 919+ 8C4A 23               inc hl
 920+ 8C4B 72               ld (hl),d
 921+ 8C4C
 922+ 8C4C E1           4 pop hl
 923+ 8C4D 23               inc hl
 924+ 8C4E 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 925+ 8C4F 2B               dec hl
 926+ 8C50 C9               ret
 927+ 8C51
 928+ 8C51              ; Disparo hacia abajo, (Entidad).
 929+ 8C51
 930+ 8C51              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8C51              ; _ de la dificultad.
 932+ 8C51
 933+ 8C51 CD 6E 8F     2 call NextScan
 934+ 8C54 CD 6E 8F         call NextScan
 935+ 8C57 CD 6E 8F         call NextScan
 936+ 8C5A
 937+ 8C5A              ; Detecta si el disparo de la entidad sale de la pantalla.
 938+ 8C5A
 939+ 8C5A 7C               ld a,h
 940+ 8C5B FE 58            cp $58
 941+ 8C5D 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8C5F
 943+ 8C5F EB               ex de,hl
 944+ 8C60 06 04            ld b,4
 945+ 8C62 2B           5 dec hl
 946+ 8C63 10 FD            djnz 5B
 947+ 8C65
 948+ 8C65 CD 6A 8C         call Elimina_disparo_de_base_de_datos
 949+ 8C68
 950+ 8C68 18 E2            jr 4B
 951+ 8C6A
 952+ 8C6A              ; HL apunta al primer byte de la base de datos del disparo.
 953+ 8C6A 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 954+ 8C6D AF               xor a
 955+ 8C6E 77               ld (hl),a
 956+ 8C6F 54               ld d,h
 957+ 8C70 5D               ld e,l
 958+ 8C71 13               inc de
 959+ 8C72 ED B0            ldir
 960+ 8C74 C9               ret
 961+ 8C75
 962+ 8C75              ; -----------------------------------------------------------------
 963+ 8C75              ;
 964+ 8C75              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 965+ 8C75              ;
 966+ 8C75              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 967+ 8C75              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 968+ 8C75              ;
 969+ 8C75              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 970+ 8C75              ;
 971+ 8C75              ;   INPUTS:
 972+ 8C75              ;
 973+ 8C75              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 974+ 8C75              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 975+ 8C75              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 976+ 8C75
 977+ 8C75              ;   MODIFICA: A, HL, DE y C
 978+ 8C75
 979+ 8C75 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
 980+ 8C76 79               ld a,c
 981+ 8C77 E6 01            and 1
 982+ 8C79 20 03            jr nz,1F
 983+ 8C7B 14               inc d
 984+ 8C7C 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
 985+ 8C7E
 986+ 8C7E              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 987+ 8C7E              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 988+ 8C7E
 989+ 8C7E 15           1 dec d
 990+ 8C7F 23           2 inc hl
 991+ 8C80 72               ld (hl),d
 992+ 8C81
 993+ 8C81 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
 994+ 8C82 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
 995+ 8C83 C8               ret z
 996+ 8C84
 997+ 8C84 AF               xor a
 998+ 8C85 5F               ld e,a
 999+ 8C86 18 ED            jr Guarda_coordenadas_X
1000+ 8C88
# file closed: Disparo.asm
 903  8C88              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C88              ; ******************************************************************************************************************************************************************************************
   2+ 8C88              ;
   3+ 8C88              ; 01/23
   4+ 8C88              ;
   5+ 8C88              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C88
   7+ 8C88 CD 62 8F     Draw call Prepara_draw
   8+ 8C8B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C8C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C8D 28 05        	jr z,2F
  11+ 8C8F
  12+ 8C8F 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C92 18 0C        	jr 1F
  14+ 8C94 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C97 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C9A CD 29 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8C9D              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8C9D CD A8 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8CA0 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8CA3 CB 6F        	bit 5,a
  21+ 8CA5 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8CA7
  23+ 8CA7 CD BF 8C     	call Comprueba_limite_horizontal
  24+ 8CAA CD 4F 8D     	call Comprueba_limite_vertical
  25+ 8CAD
  26+ 8CAD              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8CAD
  28+ 8CAD CD 9C 8E     3 call calcula_CColumnass
  29+ 8CB0 CD D3 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8CB3 CD 28 8F     	call Define_rutina_de_impresion
  31+ 8CB6
  32+ 8CB6 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8CB9 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CBB 32 C9 85     	ld (Ctrl_0),a
  35+ 8CBE
  36+ 8CBE C9           	ret
  37+ 8CBF
  38+ 8CBF              ; *******************************************************************************************************************************************************************************************
  39+ 8CBF              ;	21/01/23
  40+ 8CBF              ;
  41+ 8CBF              ; 	Comprueba_limite_horizontal.
  42+ 8CBF              ;
  43+ 8CBF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CBF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CBF              ;
  46+ 8CBF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CBF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CBF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CBF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CBF
  51+ 8CBF
  52+ 8CBF
  53+ 8CBF 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CC2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CC4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CC6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CC8 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CCB 18 09            jr 6F
  59+ 8CCD CB 5F        1 bit 3,a
  60+ 8CCF 28 0A            jr z,2F
  61+ 8CD1 E6 F7            and $f7
  62+ 8CD3 32 C9 85         ld (Ctrl_0),a
  63+ 8CD6 CD 29 8E     6 call Inicializacion
  64+ 8CD9 18 5B            jr 5F
  65+ 8CDB E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CDC
  67+ 8CDC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CDC              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CDC
  70+ 8CDC EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CDD 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CE0 CD 2E 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CE3 67           	ld h,a
  74+ 8CE4 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CE5 CD 2E 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CE8 67           	ld h,a
  77+ 8CE9 A7           	and a
  78+ 8CEA ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CEC 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CED 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CF0 FE 02        	cp 2
  82+ 8CF2 38 1E        	jr c,3F
  83+ 8CF4 28 1C        	jr z,3F
  84+ 8CF6 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CF7 28 23            jr z,7F
  86+ 8CF9 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8CFB 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8CFD E1           	pop hl
  89+ 8CFE
  90+ 8CFE              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8CFE              ; _para indicar con E="2" en caso necesario.
  92+ 8CFE
  93+ 8CFE E5               push hl
  94+ 8CFF C5               push bc
  95+ 8D00 CD 2E 92     	call calcula_tercio
  96+ 8D03 FE 01        	cp 1
  97+ 8D05 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8D07 CD 37 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8D0A 28 26            jr z,9F
 100+ 8D0C 38 24            jr c,9F
 101+ 8D0E 1E 00        11 ld e,0
 102+ 8D10 18 22            jr 8F
 103+ 8D12 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D13 28 07        	jr z, 7F
 105+ 8D15 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D17 1E 00         	ld e,0
 107+ 8D19 E1           	pop hl
 108+ 8D1A 18 04        	jr 4F
 109+ 8D1C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D1E 18 15            jr 10F
 111+ 8D20
 112+ 8D20              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D20              ; _para indicar con E="2" en caso necesario.
 114+ 8D20
 115+ 8D20 E5           4 push hl
 116+ 8D21 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D22 CD 2E 92     	call calcula_tercio
 118+ 8D25 FE 01        	cp 1
 119+ 8D27 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D29 CD 37 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D2C 28 04            jr z,9F
 122+ 8D2E 30 02            jr nc,9F
 123+ 8D30 18 02        	jr 8F
 124+ 8D32 1E 02        9 ld e,2
 125+ 8D34 C1           8 pop bc
 126+ 8D35 E1           10 pop hl
 127+ 8D36 C9           5 ret
 128+ 8D37
 129+ 8D37              ; --------------------
 130+ 8D37              ;
 131+ 8D37              ; 25/08/22
 132+ 8D37
 133+ 8D37 CD 2E 92     Comprueba_centro call calcula_tercio
 134+ 8D3A 67               ld h,a
 135+ 8D3B 08           	ex af,af
 136+ 8D3C FE 02        	cp 2
 137+ 8D3E 38 07        	jr c,1F
 138+ 8D40 28 05        	jr z,1F
 139+ 8D42 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D45 18 03        	jr 2F
 141+ 8D47 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D4A 08           2 ex af,af
 143+ 8D4B A7               and a
 144+ 8D4C ED 42            sbc hl,bc
 145+ 8D4E C9               ret
 146+ 8D4F
 147+ 8D4F              ; *********************************************************************************************************************************************************************************************
 148+ 8D4F              ;
 149+ 8D4F              ;   16/8/22
 150+ 8D4F              ;
 151+ 8D4F              ;	Comprueba_limite_vertical
 152+ 8D4F              ;
 153+ 8D4F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D4F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D4F              ;
 156+ 8D4F
 157+ 8D4F 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D52 7D           	ld a,l
 159+ 8D53 E6 1F        	and $1F
 160+ 8D55 57           	ld d,a
 161+ 8D56 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D59 BA           	cp d 											; Límite - Posición.
 163+ 8D5A 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D5B 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D5E CB 47        	bit 0,a
 166+ 8D60 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D62
 168+ 8D62              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D62
 170+ 8D62 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D63 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D65
 173+ 8D65              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D65              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D65
 176+ 8D65 3A A1 85         ld a,(Coordenada_X)
 177+ 8D68 16 0F            ld d,Centro_izquierda
 178+ 8D6A A7               and a
 179+ 8D6B 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D6C 28 1E            jr z,3F
 181+ 8D6E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D70              ;                                                    ; _salimos sin modificar nada.
 183+ 8D70 18 0E            jr 2F
 184+ 8D72 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D73 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D75
 187+ 8D75              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D75              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D75
 190+ 8D75 3A A1 85         ld a,(Coordenada_X)
 191+ 8D78 16 10            ld d,Centro_derecha
 192+ 8D7A A7               and a
 193+ 8D7B 92               sub d
 194+ 8D7C 28 0E            jr z,3F
 195+ 8D7E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D80              ;                                                    ; _salimos sin modificar nada.
 197+ 8D80 CB 43        2 bit 0,e
 198+ 8D82 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D84 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D85 CD 19 8E         call Modificaccionne
 201+ 8D88 C1           	pop bc
 202+ 8D89 CD 29 8E         call Inicializacion
 203+ 8D8C C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D8D
 205+ 8D8D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D8D
 207+ 8D8D C5           4 push bc
 208+ 8D8E 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D91 0A           	ld a,(bc)
 210+ 8D92 3D           	dec a
 211+ 8D93 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D94 7D           	ld a,l
 213+ 8D95 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D96 CB 47        	bit 0,a
 215+ 8D98 28 03        	jr z,5F
 216+ 8D9A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8D9B 18 2E        	jr 7F
 218+ 8D9D
 219+ 8D9D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8D9D
 221+ 8D9D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8D9E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8D9F 3A C9 85     	ld a,(Ctrl_0)
 224+ 8DA2 CB 4F        	bit 1,a
 225+ 8DA4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8DA6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8DA7
 228+ 8DA7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8DA7
 230+ 8DA7 1C               inc e
 231+ 8DA8 1D               dec e
 232+ 8DA9 20 07            jr nz,12F
 233+ 8DAB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8DAC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8DAD 22 9D 85     	ld (Posicion_actual),hl
 236+ 8DB0 18 44        13 jr 9F
 237+ 8DB2 CB 43        12 bit 0,e
 238+ 8DB4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DB6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DB6 C1           	pop bc
 241+ 8DB7 18 D3        	jr 3B
 242+ 8DB9 80           14 add b
 243+ 8DBA 6F               ld l,a
 244+ 8DBB 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DBE CD 19 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DC1 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DC3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DC5 32 C9 85         ld (Ctrl_0),a
 249+ 8DC8 F1           	pop af
 250+ 8DC9 18 2B        	jr 9F
 251+ 8DCB
 252+ 8DCB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DCB
 254+ 8DCB F5           7 push af
 255+ 8DCC 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DCF CB 47        	bit 0,a
 257+ 8DD1 20 1D        	jr nz,8F
 258+ 8DD3 F1           	pop af
 259+ 8DD4
 260+ 8DD4              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DD4
 262+ 8DD4 1C           	inc e
 263+ 8DD5 1D               dec e
 264+ 8DD6 20 07            jr nz,10F
 265+ 8DD8 90           	sub b
 266+ 8DD9 6F               ld l,a
 267+ 8DDA 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DDD 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DDF              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DDF CB 43        10 bit 0,e
 271+ 8DE1 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DE3              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DE3 C1           	pop bc
 274+ 8DE4 18 A6        	jr 3B
 275+ 8DE6 90           16 sub b
 276+ 8DE7 6F               ld l,a
 277+ 8DE8 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DEB CD 19 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DEE 18 06            jr 9F
 280+ 8DF0 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DF2 32 C9 85         ld (Ctrl_0),a
 282+ 8DF5 F1           	pop af
 283+ 8DF6 C1           9 pop bc
 284+ 8DF7 1E 00        	ld e,0
 285+ 8DF9 CD 29 8E         call Inicializacion
 286+ 8DFC F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8DFD 08           	ex af,af
 288+ 8DFE F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8DFF 18 8B            jr 3B
 290+ 8E01
 291+ 8E01              ; --------------------
 292+ 8E01
 293+ 8E01 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8E03 CD 7D 8F     1 call PreviousScan
 295+ 8E06 10 FB            djnz 1B
 296+ 8E08 22 9D 85     	ld (Posicion_actual),hl
 297+ 8E0B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8E0C C9           	ret
 299+ 8E0D
 300+ 8E0D              ; --------------------
 301+ 8E0D
 302+ 8E0D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8E0F CD 6E 8F     1 call NextScan
 304+ 8E12 10 FB            djnz 1B
 305+ 8E14 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E17 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E18 C9           	ret
 308+ 8E19
 309+ 8E19              ; --------------------
 310+ 8E19              ;
 311+ 8E19              ;	22/01/23
 312+ 8E19              ;
 313+ 8E19              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E19              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E19              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E19
 317+ 8E19
 318+ 8E19              Modificaccionne
 319+ 8E19
 320+ 8E19 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E1C FE 02        	cp 2
 322+ 8E1E CC 01 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E21 DC 01 8E         call c,Modifica_Pos_actual
 324+ 8E24 C8           	ret z
 325+ 8E25 CD 0D 8E         call Modifica_Pos_actual2
 326+ 8E28 C9               ret
 327+ 8E29
 328+ 8E29              ; *************************************************************************************************************************************************************************************************
 329+ 8E29              ;
 330+ 8E29              ;	13/8/22
 331+ 8E29              ;
 332+ 8E29              ;	Inicializacion
 333+ 8E29              ;
 334+ 8E29              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E29              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E29              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E29              ;
 338+ 8E29              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E29              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E29              ;	_ desaparece/aparece.
 341+ 8E29
 342+ 8E29              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E29              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E29              ;
 345+ 8E29              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E29              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E29              ; 		   [E] ="0"
 348+ 8E29
 349+ 8E29              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E29
 351+ 8E29 CD 2E 92     Inicializacion call calcula_tercio
 352+ 8E2C 28 36        	jr z,primit
 353+ 8E2E E6 02        	and 2
 354+ 8E30 20 07        	jr nz,segmit
 355+ 8E32 7D           	ld a,l
 356+ 8E33 FE 7F        	cp $7f
 357+ 8E35 38 2D        	jr c,primit
 358+ 8E37 28 2B        	jr z,primit
 359+ 8E39 CD 96 8E     segmit call column
 360+ 8E3C 38 13        	jr c,tercuad
 361+ 8E3E 3E 04        cuarcuad ld a,4
 362+ 8E40 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E43 21 20 48     	ld hl,$4820
 364+ 8E46 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E49 21 D5 85     	ld hl,Limite_vertical
 366+ 8E4C 36 0D        	ld (hl),$0d
 367+ 8E4E 08           	ex af,af
 368+ 8E4F 18 3C        	jr 1F
 369+ 8E51              tercuad
 370+ 8E51 3E 03        	ld a,3
 371+ 8E53 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E56 21 20 48     	ld hl,$4820
 373+ 8E59 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E5C 21 D5 85     	ld hl,Limite_vertical
 375+ 8E5F 36 12        	ld (hl),$12
 376+ 8E61 08           	ex af,af
 377+ 8E62 18 29        	jr 1F
 378+ 8E64 CD 96 8E     primit call column
 379+ 8E67 38 13        	jr c, primcuad
 380+ 8E69              segcuad
 381+ 8E69 3E 02        	ld a,2
 382+ 8E6B 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E6E 21 C0 4F     	ld hl,$4fc0
 384+ 8E71 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E74 21 D5 85     	ld hl,Limite_vertical
 386+ 8E77 36 0D        	ld (hl),$0d
 387+ 8E79 08           	ex af,af
 388+ 8E7A 18 11        	jr 1F
 389+ 8E7C              primcuad
 390+ 8E7C 3E 01        	ld a,1
 391+ 8E7E 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E81 21 C0 4F     	ld hl,$4fc0
 393+ 8E84 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E87 21 D5 85     	ld hl,Limite_vertical
 395+ 8E8A 36 12        	ld (hl),$12
 396+ 8E8C 08           	ex af,af
 397+ 8E8D CD 5A 95     1 call Genera_coordenadas
 398+ 8E90 21 C9 85     	ld hl,Ctrl_0
 399+ 8E93 CB EE        	set 5,(hl)
 400+ 8E95 C9           	ret
 401+ 8E96
 402+ 8E96              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E96
 404+ 8E96              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E96              ;
 406+ 8E96              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E96
 408+ 8E96 7D           column ld a,l
 409+ 8E97 E6 1F        	and $1f
 410+ 8E99 FE 10         	cp $10
 411+ 8E9B C9            	ret
 412+ 8E9C
 413+ 8E9C              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8E9C              ;
 415+ 8E9C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8E9C              ;
 417+ 8E9C              ; 14/12/22
 418+ 8E9C              ;
 419+ 8E9C              ;	Modifica: A y BC.
 420+ 8E9C
 421+ 8E9C 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8E9F E6 01        	and 1
 423+ 8EA1 28 17        	jr z,1F
 424+ 8EA3
 425+ 8EA3              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8EA3
 427+ 8EA3 3A A1 85     	ld a,(Coordenada_X)
 428+ 8EA6 47           	ld b,a
 429+ 8EA7 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8EA8 79           	ld a,c
 431+ 8EA9 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8EAA 38 08        	jr c,2F
 433+ 8EAC 47           	ld b,a
 434+ 8EAD 79           	ld a,c
 435+ 8EAE 90           	sub b
 436+ 8EAF 32 D2 85     	ld (Columnas),a
 437+ 8EB2 18 1B        	jr 4F
 438+ 8EB4 79           2 ld a,c
 439+ 8EB5 32 D2 85     	ld (Columnas),a
 440+ 8EB8 18 15        	jr 4F
 441+ 8EBA
 442+ 8EBA              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8EBA
 444+ 8EBA 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EBD 81           	add c
 446+ 8EBE 3D           	dec a
 447+ 8EBF D6 1F        	sub $1f
 448+ 8EC1 38 08        	jr c,3F
 449+ 8EC3 47           	ld b,a
 450+ 8EC4 79           	ld a,c
 451+ 8EC5 90           	sub b
 452+ 8EC6 32 D2 85     	ld (Columnas),a
 453+ 8EC9 18 04        	jr 4F
 454+ 8ECB 79           3 ld a,c
 455+ 8ECC 32 D2 85     	ld (Columnas),a
 456+ 8ECF D9           4 exx
 457+ 8ED0 4F           	ld c,a
 458+ 8ED1 D9           	exx
 459+ 8ED2 C9            ret
 460+ 8ED3
 461+ 8ED3              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8ED3              ;
 463+ 8ED3              ; 7/1/23
 464+ 8ED3              ;
 465+ 8ED3              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8ED3              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8ED3              ;
 468+ 8ED3              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8ED3              ;	DESTRUYE: HL,B Y A.
 470+ 8ED3
 471+ 8ED3 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8ED6 FE 02        	cp 2
 473+ 8ED8 38 18        	jr c,1F
 474+ 8EDA 28 16        	jr z,1F
 475+ 8EDC E6 01        	and 1
 476+ 8EDE 28 0D        	jr z,3F
 477+ 8EE0
 478+ 8EE0              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8EE0
 480+ 8EE0 CD 1C 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8EE3
 482+ 8EE3 7D           9 ld a,l
 483+ 8EE4 E6 1F        	and $1f
 484+ 8EE6 28 2A        	jr z,7F
 485+ 8EE8 2B           	dec hl
 486+ 8EE9 10 F8        	djnz 9B
 487+ 8EEB 18 25        	jr 7F
 488+ 8EED
 489+ 8EED              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8EED
 491+ 8EED 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8EF0 18 20        	jr 7F
 493+ 8EF2
 494+ 8EF2 28 14        1 jr z,2F
 495+ 8EF4
 496+ 8EF4              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8EF4
 498+ 8EF4 CD 1C 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EF7 7D           4 ld a,l
 500+ 8EF8 E6 1F        	and $1f
 501+ 8EFA 28 03        	jr z,6F
 502+ 8EFC 2B           	dec hl
 503+ 8EFD 10 F8        	djnz 4B
 504+ 8EFF 06 0F        6 ld b,15
 505+ 8F01 CD 7D 8F     5 call PreviousScan
 506+ 8F04 10 FB        	djnz 5B
 507+ 8F06 18 0A        	jr 7F
 508+ 8F08
 509+ 8F08              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8F08
 511+ 8F08 CD 1C 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8F0B 06 0F        	ld b,15
 513+ 8F0D CD 7D 8F     8 call PreviousScan
 514+ 8F10 10 FB        	djnz 8B
 515+ 8F12
 516+ 8F12 E5           7 push hl
 517+ 8F13 DD E1        	pop ix
 518+ 8F15
 519+ 8F15 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F18 E5           	push hl
 521+ 8F19 FD E1        	pop iy
 522+ 8F1B
 523+ 8F1B C9           	ret
 524+ 8F1C
 525+ 8F1C              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F1C              ;
 527+ 8F1C              ;	2/1/23
 528+ 8F1C              ;
 529+ 8F1C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F1C              ;
 531+ 8F1C              ;	Tras esta rutina tenemos:
 532+ 8F1C              ;
 533+ 8F1C              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F1C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F1C              ;
 536+ 8F1C              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F1C
 538+ 8F1C 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F1F 3A D2 85     	ld a,(Columnas)
 540+ 8F22 3D           	dec a
 541+ 8F23 20 01        	jr nz,1F
 542+ 8F25 3C           	inc a
 543+ 8F26 47           1 ld b,a
 544+ 8F27 C9           	ret
 545+ 8F28
 546+ 8F28              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F28              ;
 548+ 8F28              ;	3/1/23
 549+ 8F28              ;
 550+ 8F28              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F28              ;
 552+ 8F28              ;	Destruye: A,B,HL y DE.
 553+ 8F28
 554+ 8F28              Define_rutina_de_impresion
 555+ 8F28
 556+ 8F28 3A 9C 85     	ld a,(Columns)
 557+ 8F2B 47           	ld b,a
 558+ 8F2C 3A D2 85     	ld a,(Columnas)
 559+ 8F2F B8           	cp b
 560+ 8F30 20 0D        	jr nz,2f
 561+ 8F32
 562+ 8F32              ;	La entidad se imprime entera.
 563+ 8F32
 564+ 8F32 21 FE 8F     	ld hl, Indice_entidades_completas
 565+ 8F35 E6 01        	and 1
 566+ 8F37 28 02        	jr z,1F
 567+ 8F39
 568+ 8F39 23           	inc hl
 569+ 8F3A 23           	inc hl
 570+ 8F3B
 571+ 8F3B CD C0 87     1 call Extrae_address
 572+ 8F3E C9           	ret		;	ret
 573+ 8F3F
 574+ 8F3F              ;	La entidad no se imprime entera en pantalla.
 575+ 8F3F
 576+ 8F3F 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F42 E6 01        	and 1
 578+ 8F44 28 17        	jr z,3F
 579+ 8F46
 580+ 8F46              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F46
 582+ 8F46 21 02 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F49 3A 9C 85     4 ld a,(Columns)
 584+ 8F4C E6 01        	and 1
 585+ 8F4E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F50
 587+ 8F50 23           	inc hl
 588+ 8F51 23           	inc hl
 589+ 8F52
 590+ 8F52 3A D2 85     	ld a,(Columnas)
 591+ 8F55 E6 01        	and 1
 592+ 8F57 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F59
 594+ 8F59 23           	inc hl
 595+ 8F5A 23           	inc hl
 596+ 8F5B
 597+ 8F5B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F5D
 599+ 8F5D 21 08 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F60 18 E7        	jr 4B
 601+ 8F62
 602+ 8F62              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F62              ;
 604+ 8F62              ;	Prepara_draw
 605+ 8F62              ;
 606+ 8F62              ;	Es una rutina de carga.
 607+ 8F62              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F62              ;
 609+ 8F62              ;	FUNCIONAMIENTO:
 610+ 8F62              ;
 611+ 8F62              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F62              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F62              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F62              ;
 615+ 8F62              ;	DESTRUYE:
 616+ 8F62              ;
 617+ 8F62              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F62
 619+ 8F62 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F65 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F66 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F67 4E           	ld c,(hl)
 623+ 8F68 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F6B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F6D C9           	ret
 626+ 8F6E
 627+ 8F6E              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F6E              ;
 629+ 8F6E              ;	5/08/22
 630+ 8F6E              ;
 631+ 8F6E              ;   NextScan.
 632+ 8F6E              ;
 633+ 8F6E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F6E              ;
 635+ 8F6E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F6E              ;
 637+ 8F6E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F6E              ;
 639+ 8F6E              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F6E              ;
 641+ 8F6E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F6E              ;
 643+ 8F6E
 644+ 8F6E 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F6F 7C               ld a,h
 646+ 8F70 E6 07            and 7
 647+ 8F72 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F73
 649+ 8F73 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F74 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F76 6F               ld l,a
 652+ 8F77 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F78
 654+ 8F78 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F79 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F7B 67               ld h,a
 657+ 8F7C C9               ret
 658+ 8F7D
 659+ 8F7D              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F7D              ;
 661+ 8F7D              ;	5/08/22
 662+ 8F7D              ;
 663+ 8F7D              ;   PreviousScan.
 664+ 8F7D              ;
 665+ 8F7D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F7D              ;
 667+ 8F7D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F7D              ;
 669+ 8F7D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F7D              ;
 671+ 8F7D              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F7D              ;
 673+ 8F7D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F7D              ;
 675+ 8F7D
 676+ 8F7D 7C           PreviousScan ld a,h
 677+ 8F7E 25               dec h               ; Dec H.
 678+ 8F7F E6 07            and 7
 679+ 8F81 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F82
 681+ 8F82 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F83 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F85 6F               ld l,a
 684+ 8F86 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F87
 686+ 8F87 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F88 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F8A 67               ld h,a
 689+ 8F8B C9               ret
 690+ 8F8C
 691+ 8F8C              ; -----------------------------------------------------------------------------------
 692+ 8F8C              ;
 693+ 8F8C              ;	28/2/23
 694+ 8F8C              ;
 695+ 8F8C              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F8C              ;	Extrae fotos de Album_de_fotos.
 697+ 8F8C
 698+ 8F8C 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
 699+ 8F8F A7           	and a
 700+ 8F90 C8           	ret z
 701+ 8F91 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F95 31 00 70     	ld sp,Album_de_fotos
 703+ 8F98
 704+ 8F98 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F9A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8F9B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8F9C
 708+ 8F9C ED 73 E1 85  	ld (Stack_2),sp
 709+ 8FA0 ED 7B DF 85  	ld sp,(Stack)
 710+ 8FA4
 711+ 8FA4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8FA4
 713+ 8FA4 3E CD        	ld a,$cd
 714+ 8FA6 32 AE 8F     	ld (Imprime),a
 715+ 8FA9 EB           	ex de,hl
 716+ 8FAA 22 AF 8F     	ld (Imprime+1),hl
 717+ 8FAD EB           	ex de,hl
 718+ 8FAE
 719+ 8FAE              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8FAE
 721+ 8FAE 00 00 00     Imprime db 0,0,0
 722+ 8FB1
 723+ 8FB1 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8FB4 3D           	dec a
 725+ 8FB5 28 09        	jr z,1F
 726+ 8FB7 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8FBA
 728+ 8FBA ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FBE 18 D8        	jr 2B
 730+ 8FC0
 731+ 8FC0 AF           1 xor a
 732+ 8FC1 32 E1 85     	ld (Stack_2),a
 733+ 8FC4 C9           	ret
 734+ 8FC5
 735+ 8FC5              ; -----------------------------------------------------------------------------------
 736+ 8FC5              ;
 737+ 8FC5              ;	28/2/23
 738+ 8FC5              ;
 739+ 8FC5              ;	Pinta los disparos generados.
 740+ 8FC5
 741+ 8FC5              Extrae_foto_disparos
 742+ 8FC5
 743+ 8FC5 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FC8 A7           	and a
 745+ 8FC9 C8           	ret z
 746+ 8FCA ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FCE 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FD1
 749+ 8FD1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FD3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FD4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FD5
 753+ 8FD5 ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FD9 ED 7B DF 85  	ld sp,(Stack)
 755+ 8FDD
 756+ 8FDD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FDD
 758+ 8FDD 3E CD        	ld a,$cd
 759+ 8FDF 32 E7 8F     	ld (Imprime2),a
 760+ 8FE2 EB           	ex de,hl
 761+ 8FE3 22 E8 8F     	ld (Imprime2+1),hl
 762+ 8FE6 EB           	ex de,hl
 763+ 8FE7
 764+ 8FE7              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FE7
 766+ 8FE7 00 00 00     Imprime2 db 0,0,0
 767+ 8FEA
 768+ 8FEA 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FED 3D           	dec a
 770+ 8FEE 28 09        	jr z,1F
 771+ 8FF0 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FF3
 773+ 8FF3 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FF7 18 D8        	jr 2B
 775+ 8FF9
 776+ 8FF9 AF           1 xor a
 777+ 8FFA 32 E1 85     	ld (Stack_2),a
 778+ 8FFD C9           	ret
 779+ 8FFE
# file closed: Draw_XOR.asm
 904  8FFE              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 8FFE              ;   índices de Rutinas de impresión.
   2+ 8FFE
   3+ 8FFE 0E 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9000 3B 90            defw Pinta_Amadeus_3x2
   5+ 9002
   6+ 9002 91 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9004 31 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9006 E5 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9008
  10+ 9008 BB 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 900A BF 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 900C 73 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 900E
  14+ 900E
  15+ 900E              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 900E              ;
  17+ 900E              ;   12/12/22
  18+ 900E              ;
  19+ 900E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 900E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 900E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 900E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 900E              ;
  24+ 900E              ;   Modifica: DE y HL.
  25+ 900E
  26+ 900E ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9012 FD F9        	ld sp,iy
  28+ 9014 06 10            ld b,16
  29+ 9016 D1           1 pop de
  30+ 9017 7B               ld a,e
  31+ 9018 AE               xor (hl)
  32+ 9019 77           	ld (hl),a
  33+ 901A 23           	inc hl
  34+ 901B 7A               ld a,d
  35+ 901C AE               xor (hl)
  36+ 901D 77           	ld (hl),a
  37+ 901E 2B           	dec hl
  38+ 901F 24           	inc h
  39+ 9020 7C               ld a,h
  40+ 9021 E6 07            and 7
  41+ 9023 20 0A            jr nz,2F
  42+ 9025 7D               ld a,l
  43+ 9026 C6 20            add a,$20
  44+ 9028 6F               ld l,a
  45+ 9029 38 04            jr c,2F
  46+ 902B 7C               ld a,h
  47+ 902C D6 08            sub 8
  48+ 902E 67               ld h,a
  49+ 902F 7C           2 ld a,h
  50+ 9030 FE 58            cp $58
  51+ 9032 28 02            jr z,3F
  52+ 9034 10 E0            djnz 1B
  53+ 9036 ED 7B DF 85  3 ld sp,(Stack)
  54+ 903A C9           	ret
  55+ 903B
  56+ 903B ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 903F FD F9        	ld sp,iy
  58+ 9041 06 08            ld b,8
  59+ 9043 D1           1 pop de
  60+ 9044 7B               ld a,e
  61+ 9045 AE               xor (hl)
  62+ 9046 77           	ld (hl),a
  63+ 9047 23           	inc hl
  64+ 9048 7A               ld a,d
  65+ 9049 AE               xor (hl)
  66+ 904A 77           	ld (hl),a
  67+ 904B 23           	inc hl
  68+ 904C D1           	pop de
  69+ 904D 7B               ld a,e
  70+ 904E AE               xor (hl)
  71+ 904F 77           	ld (hl),a
  72+ 9050 2B           	dec hl
  73+ 9051 2B           	dec hl
  74+ 9052 24           	inc h
  75+ 9053 7C               ld a,h
  76+ 9054 E6 07            and 7
  77+ 9056 20 0A            jr nz,2F
  78+ 9058 7D               ld a,l
  79+ 9059 C6 20            add a,$20
  80+ 905B 6F               ld l,a
  81+ 905C 38 04            jr c,2F
  82+ 905E 7C               ld a,h
  83+ 905F D6 08            sub 8
  84+ 9061 67               ld h,a
  85+ 9062 7C           2 ld a,h
  86+ 9063 FE 58            cp $58
  87+ 9065 28 25            jr z,4F
  88+ 9067 7A               ld a,d
  89+ 9068 AE               xor (hl)
  90+ 9069 77               ld (hl),a
  91+ 906A D1           	pop de
  92+ 906B 23           	inc hl
  93+ 906C 7B               ld a,e
  94+ 906D AE               xor (hl)
  95+ 906E 77           	ld (hl),a
  96+ 906F 23           	inc hl
  97+ 9070 7A               ld a,d
  98+ 9071 AE               xor (hl)
  99+ 9072 77           	ld (hl),a
 100+ 9073 2B           	dec hl
 101+ 9074 2B           	dec hl
 102+ 9075 24           	inc h
 103+ 9076 7C               ld a,h
 104+ 9077 E6 07            and 7
 105+ 9079 20 0A            jr nz,3F
 106+ 907B 7D               ld a,l
 107+ 907C C6 20            add a,$20
 108+ 907E 6F               ld l,a
 109+ 907F 38 04            jr c,3F
 110+ 9081 7C               ld a,h
 111+ 9082 D6 08            sub 8
 112+ 9084 67               ld h,a
 113+ 9085 7C           3 ld a,h
 114+ 9086 FE 58            cp $58
 115+ 9088 28 02            jr z,4F
 116+ 908A 10 B7            djnz 1B
 117+ 908C ED 7B DF 85  4 ld sp,(Stack)
 118+ 9090 C9           	ret
 119+ 9091
 120+ 9091              ; ---------------------------------------------------
 121+ 9091
 122+ 9091 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9095 FD F9        	ld sp,iy
 124+ 9097
 125+ 9097              ; >>>
 126+ 9097
 127+ 9097 06 10            ld b,16
 128+ 9099 D1           1 pop de
 129+ 909A 7A           	ld a,d
 130+ 909B AE           	xor (hl)
 131+ 909C 77           	ld (hl),a
 132+ 909D 24           	inc h
 133+ 909E 7C               ld a,h
 134+ 909F E6 07            and 7
 135+ 90A1 20 0C            jr nz,2F
 136+ 90A3 7D               ld a,l
 137+ 90A4 C6 20            add a,$20
 138+ 90A6 6F               ld l,a
 139+ 90A7 38 06            jr c,2F
 140+ 90A9 7C               ld a,h
 141+ 90AA D6 08            sub 8
 142+ 90AC 67               ld h,a
 143+ 90AD 18 00            jr 2F
 144+ 90AF 7C           2 ld a,h
 145+ 90B0 FE 58            cp $58
 146+ 90B2 28 02            jr z,3F
 147+ 90B4 10 E3            djnz 1B
 148+ 90B6 ED 7B DF 85  3 ld sp,(Stack)
 149+ 90BA C9           	ret
 150+ 90BB
 151+ 90BB ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90BF FD F9        	ld sp,iy
 153+ 90C1
 154+ 90C1              ; >>>
 155+ 90C1
 156+ 90C1 06 10            ld b,16
 157+ 90C3 D1           1 pop de
 158+ 90C4 7B           	ld a,e
 159+ 90C5 AE           	xor (hl)
 160+ 90C6 77           	ld (hl),a
 161+ 90C7 24           	inc h
 162+ 90C8 7C               ld a,h
 163+ 90C9 E6 07            and 7
 164+ 90CB 20 0C            jr nz,2F
 165+ 90CD 7D               ld a,l
 166+ 90CE C6 20            add a,$20
 167+ 90D0 6F               ld l,a
 168+ 90D1 38 06            jr c,2F
 169+ 90D3 7C               ld a,h
 170+ 90D4 D6 08            sub 8
 171+ 90D6 67               ld h,a
 172+ 90D7 18 00            jr 2F
 173+ 90D9 7C           2 ld a,h
 174+ 90DA FE 58            cp $58
 175+ 90DC 28 02            jr z,3F
 176+ 90DE 10 E3            djnz 1B
 177+ 90E0 ED 7B DF 85  3 ld sp,(Stack)
 178+ 90E4 C9           	ret
 179+ 90E5
 180+ 90E5              ; ---------------------------------------------------
 181+ 90E5
 182+ 90E5 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90E9 FD F9        	ld sp,iy
 184+ 90EB 06 08            ld b,8
 185+ 90ED D1           1 pop de
 186+ 90EE 7A           	ld a,d
 187+ 90EF AE           	xor (hl)
 188+ 90F0 77           	ld (hl),a
 189+ 90F1 23           	inc hl
 190+ 90F2 D1           	pop de
 191+ 90F3 7B           	ld a,e
 192+ 90F4 AE           	xor (hl)
 193+ 90F5 77           	ld (hl),a
 194+ 90F6 2B           	dec hl
 195+ 90F7 24            	inc h
 196+ 90F8 7C               ld a,h
 197+ 90F9 E6 07            and 7
 198+ 90FB 20 0A            jr nz,2F
 199+ 90FD 7D               ld a,l
 200+ 90FE C6 20            add a,$20
 201+ 9100 6F               ld l,a
 202+ 9101 38 04            jr c,2F
 203+ 9103 7C               ld a,h
 204+ 9104 D6 08            sub 8
 205+ 9106 67               ld h,a
 206+ 9107 7C           2 ld a,h
 207+ 9108 FE 58            cp $58
 208+ 910A 28 20            jr z,4F
 209+ 910C D1               pop de
 210+ 910D 7B           	ld a,e
 211+ 910E AE           	xor (hl)
 212+ 910F 77           	ld (hl),a
 213+ 9110 23           	inc hl
 214+ 9111 7A           	ld a,d
 215+ 9112 AE           	xor (hl)
 216+ 9113 77           	ld (hl),a
 217+ 9114 2B           	dec hl
 218+ 9115 24           	inc h
 219+ 9116 7C               ld a,h
 220+ 9117 E6 07            and 7
 221+ 9119 20 0A            jr nz,3F
 222+ 911B 7D               ld a,l
 223+ 911C C6 20            add a,$20
 224+ 911E 6F               ld l,a
 225+ 911F 38 04            jr c,3F
 226+ 9121 7C               ld a,h
 227+ 9122 D6 08            sub 8
 228+ 9124 67               ld h,a
 229+ 9125 7C           3 ld a,h
 230+ 9126 FE 58            cp $58
 231+ 9128 28 02            jr z,4F
 232+ 912A 10 C1            djnz 1B
 233+ 912C ED 7B DF 85  4 ld sp,(Stack)
 234+ 9130 C9           	ret
 235+ 9131
 236+ 9131 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9135 FD F9        	ld sp,iy
 238+ 9137 06 08            ld b,8
 239+ 9139 D1           1 pop de
 240+ 913A D1           	pop de
 241+ 913B 7B           	ld a,e
 242+ 913C AE           	xor (hl)
 243+ 913D 77           	ld (hl),a
 244+ 913E 24            	inc h
 245+ 913F 7C               ld a,h
 246+ 9140 E6 07            and 7
 247+ 9142 20 0A            jr nz,2F
 248+ 9144 7D               ld a,l
 249+ 9145 C6 20            add a,$20
 250+ 9147 6F               ld l,a
 251+ 9148 38 04            jr c,2F
 252+ 914A 7C               ld a,h
 253+ 914B D6 08            sub 8
 254+ 914D 67               ld h,a
 255+ 914E 7C           2 ld a,h
 256+ 914F FE 58            cp $58
 257+ 9151 28 1B            jr z,4F
 258+ 9153 D1               pop de
 259+ 9154 7A           	ld a,d
 260+ 9155 AE           	xor (hl)
 261+ 9156 77           	ld (hl),a
 262+ 9157 24           	inc h
 263+ 9158 7C               ld a,h
 264+ 9159 E6 07            and 7
 265+ 915B 20 0A            jr nz,3F
 266+ 915D 7D               ld a,l
 267+ 915E C6 20            add a,$20
 268+ 9160 6F               ld l,a
 269+ 9161 38 04            jr c,3F
 270+ 9163 7C               ld a,h
 271+ 9164 D6 08            sub 8
 272+ 9166 67               ld h,a
 273+ 9167 7C           3 ld a,h
 274+ 9168 FE 58            cp $58
 275+ 916A 28 02            jr z,4F
 276+ 916C 10 CB            djnz 1B
 277+ 916E ED 7B DF 85  4 ld sp,(Stack)
 278+ 9172 C9           	ret
 279+ 9173
 280+ 9173 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9177 FD F9        	ld sp,iy
 282+ 9179 06 08            ld b,8
 283+ 917B D1           1 pop de
 284+ 917C 7B           	ld a,e
 285+ 917D AE           	xor (hl)
 286+ 917E 77           	ld (hl),a
 287+ 917F 23           	inc hl
 288+ 9180 7A           	ld a,d
 289+ 9181 AE           	xor (hl)
 290+ 9182 77           	ld (hl),a
 291+ 9183 2B           	dec hl
 292+ 9184 24             	inc h
 293+ 9185 7C               ld a,h
 294+ 9186 E6 07            and 7
 295+ 9188 20 0A            jr nz,2F
 296+ 918A 7D               ld a,l
 297+ 918B C6 20            add a,$20
 298+ 918D 6F               ld l,a
 299+ 918E 38 04            jr c,2F
 300+ 9190 7C               ld a,h
 301+ 9191 D6 08            sub 8
 302+ 9193 67               ld h,a
 303+ 9194 7C           2 ld a,h
 304+ 9195 FE 58            cp $58
 305+ 9197 28 21            jr z,4F
 306+ 9199 D1               pop de
 307+ 919A 7A           	ld a,d
 308+ 919B AE           	xor (hl)
 309+ 919C 77           	ld (hl),a
 310+ 919D 23           	inc hl
 311+ 919E D1               pop de
 312+ 919F 7B           	ld a,e
 313+ 91A0 AE           	xor (hl)
 314+ 91A1 77           	ld (hl),a
 315+ 91A2 2B           	dec hl
 316+ 91A3 24           	inc h
 317+ 91A4 7C               ld a,h
 318+ 91A5 E6 07            and 7
 319+ 91A7 20 0A            jr nz,3F
 320+ 91A9 7D               ld a,l
 321+ 91AA C6 20            add a,$20
 322+ 91AC 6F               ld l,a
 323+ 91AD 38 04            jr c,3F
 324+ 91AF 7C               ld a,h
 325+ 91B0 D6 08            sub 8
 326+ 91B2 67               ld h,a
 327+ 91B3 7C           3 ld a,h
 328+ 91B4 FE 58            cp $58
 329+ 91B6 28 02            jr z,4F
 330+ 91B8 10 C1            djnz 1B
 331+ 91BA ED 7B DF 85  4 ld sp,(Stack)
 332+ 91BE C9           	ret
 333+ 91BF
 334+ 91BF ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91C3 FD F9        	ld sp,iy
 336+ 91C5 06 08            ld b,8
 337+ 91C7 D1           1 pop de
 338+ 91C8 7B           	ld a,e
 339+ 91C9 AE           	xor (hl)
 340+ 91CA 77           	ld (hl),a
 341+ 91CB 24            	inc h
 342+ 91CC 7C               ld a,h
 343+ 91CD E6 07            and 7
 344+ 91CF 20 0A            jr nz,2F
 345+ 91D1 7D               ld a,l
 346+ 91D2 C6 20            add a,$20
 347+ 91D4 6F               ld l,a
 348+ 91D5 38 04            jr c,2F
 349+ 91D7 7C               ld a,h
 350+ 91D8 D6 08            sub 8
 351+ 91DA 67               ld h,a
 352+ 91DB 7C           2 ld a,h
 353+ 91DC FE 58            cp $58
 354+ 91DE 28 1C            jr z,4F
 355+ 91E0 D1               pop de
 356+ 91E1 7A           	ld a,d
 357+ 91E2 AE           	xor (hl)
 358+ 91E3 77           	ld (hl),a
 359+ 91E4 24           	inc h
 360+ 91E5 7C               ld a,h
 361+ 91E6 E6 07            and 7
 362+ 91E8 20 0A            jr nz,3F
 363+ 91EA 7D               ld a,l
 364+ 91EB C6 20            add a,$20
 365+ 91ED 6F               ld l,a
 366+ 91EE 38 04            jr c,3F
 367+ 91F0 7C               ld a,h
 368+ 91F1 D6 08            sub 8
 369+ 91F3 67               ld h,a
 370+ 91F4 7C           3 ld a,h
 371+ 91F5 FE 58            cp $58
 372+ 91F7 28 03            jr z,4F
 373+ 91F9 D1               pop de
 374+ 91FA 10 CB            djnz 1B
 375+ 91FC ED 7B DF 85  4 ld sp,(Stack)
 376+ 9200 C9           	ret
 377+ 9201
 378+ 9201              ; ---------------------------------------------------
 379+ 9201              ;
 380+ 9201              ;   27/02/23
 381+ 9201              ;
 382+ 9201              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9201              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9201              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9201
 386+ 9201 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 9205 FD F9            ld sp,iy
 388+ 9207 06 02            ld b,2
 389+ 9209 D1           1 pop de
 390+ 920A 7B               ld a,e
 391+ 920B AE               xor (hl)
 392+ 920C 77               ld (hl),a
 393+ 920D 23               inc hl
 394+ 920E 7A               ld a,d
 395+ 920F AE               xor (hl)
 396+ 9210 77               ld (hl),a
 397+ 9211 2B               dec hl
 398+ 9212
 399+ 9212 24               inc h
 400+ 9213 7C               ld a,h
 401+ 9214 E6 07            and 7
 402+ 9216 20 0A            jr nz,2F
 403+ 9218 7D               ld a,l
 404+ 9219 C6 20            add a,$20
 405+ 921B 6F               ld l,a
 406+ 921C 38 04            jr c,2F
 407+ 921E 7C               ld a,h
 408+ 921F D6 08            sub 8
 409+ 9221 67               ld h,a
 410+ 9222 7C           2 ld a,h
 411+ 9223 FE 58            cp $58
 412+ 9225 28 02            jr z,3F
 413+ 9227
 414+ 9227 10 E0            djnz 1B
 415+ 9229 ED 7B DF 85  3 ld sp,(Stack)
 416+ 922D C9               ret
 417+ 922E
# file closed: Rutinas_de_impresion_sprites.asm
 905  922E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 922E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 922E              ;
   3+ 922E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 922E              ;
   5+ 922E              ; *****************************************************************************************************************************************************************************************
   6+ 922E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 922E
   8+ 922E 7C           calcula_tercio ld a,h
   9+ 922F E6 18        	and $18
  10+ 9231 CB 2F        	sra a
  11+ 9233 CB 2F        	sra a
  12+ 9235 CB 2F        	sra a
  13+ 9237 C9           	ret
  14+ 9238
# file closed: calcula_tercio.asm
 906  9238              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9238              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9238              ;
   3+ 9238              ;
   4+ 9238              ;	CLS.
   5+ 9238              ;
   6+ 9238              ;	Limpia la pantalla y define sus atributos.
   7+ 9238              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9238              ;
   9+ 9238              ;	COLORES: 0 ..... NEGRO
  10+ 9238              ;    		 1 ..... AZUL
  11+ 9238              ; 			 2 ..... ROJO
  12+ 9238              ;			 3 ..... MAGENTA
  13+ 9238              ; 			 4 ..... VERDE
  14+ 9238              ; 			 5 ..... CIAN
  15+ 9238              ;			 6 ..... AMARILLO
  16+ 9238              ; 			 7 ..... BLANCO
  17+ 9238              ;
  18+ 9238              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9238              ;
  20+ 9238              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9238
  22+ 9238
  23+ 9238 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 923B 11 01 40     	LD DE,$4001
  25+ 923E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9241 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9243 ED B0        	LDIR
  28+ 9245 01 FF 02     	LD BC,767
  29+ 9248 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9249 ED B0        	LDIR
  31+ 924B C9           	ret
  32+ 924C
# file closed: Cls.asm
 907  924C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 924C              ; ******************************************************************************************************************************************************************************************
   2+ 924C              ;
   3+ 924C              ;   22/01/23
   4+ 924C              ;
   5+ 924C              ;	Mov_down
   6+ 924C              ;
   7+ 924C              ; 	Mueve el Sprite X px hacia abajo.
   8+ 924C              ;
   9+ 924C              ;
  10+ 924C 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 924F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9251              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9251              ; 																	; _ en el caso de que no lo haya.
  14+ 9251 3A B3 85     	ld a,(Vel_down)
  15+ 9254 47           	ld b,a
  16+ 9255 2A 9D 85         ld hl,(Posicion_actual)
  17+ 9258 CD 2E 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 925B E6 02        	and 2
  19+ 925D 28 0F        	jr z,1F
  20+ 925F
  21+ 925F              ; Nos encontramos en el último tercio de pantalla.
  22+ 925F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 925F
  24+ 925F 7C           	ld a,h
  25+ 9260 FE 57        	cp $57
  26+ 9262 20 0A        	jr nz,1F
  27+ 9264 7D           	ld a,l
  28+ 9265 C6 20        	add $20
  29+ 9267 30 05        	jr nc,1F
  30+ 9269
  31+ 9269              ; ------------------------------
  32+ 9269 CD 44 95     	call Reaparece_arriba
  33+ 926C              ;	call Reinicio
  34+ 926C              ; ------------------------------
  35+ 926C
  36+ 926C 18 08        	jr 3F
  37+ 926E CD 6E 8F     1 call NextScan
  38+ 9271 22 9D 85     	ld (Posicion_actual),hl
  39+ 9274 10 E2            djnz 2B
  40+ 9276 CD 5A 95     3 call Genera_coordenadas
  41+ 9279 C9           	ret
  42+ 927A
  43+ 927A              ; ******************************************************************************************************************************************************************************************
  44+ 927A              ;
  45+ 927A              ;   22/01/23
  46+ 927A              ;
  47+ 927A              ;	Mov_up
  48+ 927A              ;
  49+ 927A              ; 	Mueve el Sprite hacia arriba.
  50+ 927A              ;
  51+ 927A              ;
  52+ 927A 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 927D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 927F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 927F              ; 																		; _ en el caso de que no lo haya.
  56+ 927F 3A B2 85     	ld a,(Vel_up)
  57+ 9282 47           	ld b,a
  58+ 9283 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9286 CD 2E 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9289 A7           	and a
  61+ 928A 20 10        	jr nz,1F
  62+ 928C
  63+ 928C              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 928C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 928C
  66+ 928C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 928D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 928F 20 0B            jr nz,1F
  69+ 9291 7D               ld a,l
  70+ 9292 D6 20            sub $20
  71+ 9294 30 06            jr nc,1F
  72+ 9296 25               dec h
  73+ 9297
  74+ 9297              ; -----------------------------
  75+ 9297 CD 34 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 929A              ;	call Reinicio
  77+ 929A              ; -----------------------------
  78+ 929A
  79+ 929A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 929C CD 7D 8F     1 call PreviousScan
  81+ 929F 22 9D 85     	ld (Posicion_actual),hl
  82+ 92A2 10 E2            djnz 3B
  83+ 92A4 CD 5A 95     2 call Genera_coordenadas
  84+ 92A7 C9           	ret
  85+ 92A8
  86+ 92A8              ; ******************************************************************************************************************************************************************************************
  87+ 92A8              ;
  88+ 92A8              ;	19/10/22
  89+ 92A8              ;
  90+ 92A8              ;	Mov_right.
  91+ 92A8              ;
  92+ 92A8              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 92A8              ;
  94+ 92A8
  95+ 92A8 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 92AB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 92AD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 92AD              ; 																	; _ en el caso de que no lo haya.
  99+ 92AD 3A C9 85     	ld a,(Ctrl_0)
 100+ 92B0 CB 77        	bit 6,a
 101+ 92B2 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 92B4
 103+ 92B4 CD E2 94     	call Stop_Amadeus_right
 104+ 92B7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 92B8 18 4D        	jr 8F
 106+ 92BA
 107+ 92BA 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92BD FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92BF 20 46        	jr nz,8F
 110+ 92C1
 111+ 92C1 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92C4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92C5 28 40        	jr z,8F
 114+ 92C7
 115+ 92C7              ; ---------- ---------- ----------
 116+ 92C7              ;
 117+ 92C7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92C7
 119+ 92C7 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92CA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92CC 28 11        	jr z,1F
 122+ 92CE 38 06        	jr c,6F
 123+ 92D0 FE 04        	cp 4
 124+ 92D2 28 14        	jr z,7F
 125+ 92D4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92D6
 127+ 92D6              ; ---------- ---------- ----------
 128+ 92D6              ;
 129+ 92D6              ; Perfiles de velocidad
 130+ 92D6              ;
 131+ 92D6
 132+ 92D6 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92D9 FE FE        	cp $fe
 134+ 92DB 20 2A        	jr nz,8F
 135+ 92DD 18 10        	jr 3F
 136+ 92DF 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92E2 FE FD        	cp $fd
 138+ 92E4 20 21        	jr nz,8F
 139+ 92E6 18 07        	jr 3F
 140+ 92E8 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92EB FE FB        	cp $fb
 142+ 92ED 20 18        	jr nz,8F
 143+ 92EF
 144+ 92EF              ; ---------- ---------- ----------
 145+ 92EF
 146+ 92EF              3
 147+ 92EF CD 22 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92F2              ;	call Reinicio
 149+ 92F2
 150+ 92F2              ; ---------- ---------- ----------
 151+ 92F2              ;
 152+ 92F2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92F2
 154+ 92F2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92F4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92F5 CD 0E 93     	call DESPLZ_DER
 157+ 92F8 C1           	pop bc
 158+ 92F9 10 F9        	djnz 5B
 159+ 92FB 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 92FE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 92FF 22 9D 85     	ld (Posicion_actual),hl
 162+ 9302 CD 5A 95     	call Genera_coordenadas
 163+ 9305 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9307
 165+ 9307              ; ---------- ---------- ----------
 166+ 9307
 167+ 9307 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 930A CD 0E 93     	call DESPLZ_DER
 169+ 930D C9           2 ret
 170+ 930E
 171+ 930E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 930E              ;
 173+ 930E              ;	22/9/22
 174+ 930E              ;
 175+ 930E
 176+ 930E CD 1D 93     DESPLZ_DER call Desplaza_derecha
 177+ 9311 CD 69 93         call modifica_parametros_1er_DESPLZ_2
 178+ 9314 CD 92 93         call Ciclo_completo
 179+ 9317 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 931A CB FE        	set 7,(hl)
 181+ 931C C9           	ret
 182+ 931D
 183+ 931D              ; ******************************************************************************************************************************************************************************************
 184+ 931D              ;	15/02/23
 185+ 931D              ;
 186+ 931D
 187+ 931D 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9320 47           	ld b,a
 189+ 9321 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9324 23           1 inc hl
 191+ 9325 23           	inc hl
 192+ 9326 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9328 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 932B CD C0 87     	call Extrae_address
 195+ 932E 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9331
 197+ 9331              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9331
 199+ 9331              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9331              ; Cuántos movimientos hemos hecho ??
 201+ 9331              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9331
 203+ 9331 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9334 EB           	ex de,hl
 205+ 9335 A7           	and a
 206+ 9336 ED 52        	sbc hl,de
 207+ 9338 CB 3D        	srl l
 208+ 933A 3E 08        6 ld a,8
 209+ 933C 95           	sub l
 210+ 933D 30 1E        	jr nc,3F
 211+ 933F
 212+ 933F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 933F              ; B="0".
 214+ 933F
 215+ 933F 04           4 inc b
 216+ 9340 3C           	inc a
 217+ 9341 20 FC        	jr nz,4B
 218+ 9343 78           	ld a,b
 219+ 9344 08           	ex af,af
 220+ 9345 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9348 23           5 inc hl
 222+ 9349 23           	inc hl
 223+ 934A 10 FC        	djnz 5B
 224+ 934C 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 934F CD C0 87     	call Extrae_address
 226+ 9352 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9355
 228+ 9355              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9355              ; _(Posicion_actual).
 230+ 9355
 231+ 9355 21 9D 85     	ld hl,Posicion_actual
 232+ 9358 34           	inc (hl)
 233+ 9359 08               ex af,af
 234+ 935A 6F           	ld l,a
 235+ 935B 18 DD        	jr 6B
 236+ 935D
 237+ 935D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 935D
 239+ 935D 47           3 ld b,a
 240+ 935E 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9361 23           2 inc hl
 242+ 9362 23           	inc hl
 243+ 9363 10 FC        	djnz 2B
 244+ 9365 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 9368 C9           8 ret
 246+ 9369
 247+ 9369              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9369              ;
 249+ 9369              ;	24/7/22
 250+ 9369              ;
 251+ 9369              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9369              ;
 253+ 9369              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9369              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9369              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9369
 257+ 9369 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 936C A7           	and a
 259+ 936D 20 1F        	jr nz,1F
 260+ 936F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9371 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9374
 263+ 9374 21 9C 85     	ld hl,Columns
 264+ 9377 34           	inc (hl)
 265+ 9378 3A AF 85     	ld a,(Cuad_objeto)
 266+ 937B E6 01        	and 1
 267+ 937D 28 0F        	jr z,1F
 268+ 937F 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9382 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9383 22 9D 85     	ld (Posicion_actual),hl
 271+ 9386 CD 5A 95     	call Genera_coordenadas
 272+ 9389 CD EE 94     	call Inc_CTRL_DESPLZ
 273+ 938C 18 03        	jr 2F
 274+ 938E CD EE 94     1 call Inc_CTRL_DESPLZ
 275+ 9391 C9           2 ret
 276+ 9392
 277+ 9392              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9392              ;
 279+ 9392              ;	24/7/22
 280+ 9392              ;
 281+ 9392              ;	Ciclo_completo.
 282+ 9392              ;
 283+ 9392              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9392              ;
 285+ 9392              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9392              ; 	Decrementamos (Columns).
 287+ 9392              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9392              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9392
 290+ 9392
 291+ 9392 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9395 FE FF        	cp $ff
 293+ 9397 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9399 E6 F0        	and $f0
 295+ 939B 20 28        	jr nz,3F
 296+ 939D
 297+ 939D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 939D
 299+ 939D 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 93A0 47           	ld b,a
 301+ 93A1 3E F8        	ld a,$f8
 302+ 93A3 80           	add b
 303+ 93A4 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 93A7 18 1C        	jr 3F
 305+ 93A9 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 93AC 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 93AD AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 93AE 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 93B1 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 93B4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93B6 20 0A        	jr nz,2F
 312+ 93B8 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93BB 23           	inc hl
 314+ 93BC 22 9D 85     	ld (Posicion_actual),hl
 315+ 93BF CD 5A 95     	call Genera_coordenadas
 316+ 93C2
 317+ 93C2              ; Inicia el puntero de Sprite.
 318+ 93C2
 319+ 93C2 CD D7 87     2 call Inicia_puntero_objeto_der
 320+ 93C5 C9           3 ret
 321+ 93C6
 322+ 93C6              ; ******************************************************************************************************************************************************************************************
 323+ 93C6              ;
 324+ 93C6              ;	15/02/23
 325+ 93C6              ;
 326+ 93C6              ;	Mov_left.
 327+ 93C6              ;
 328+ 93C6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93C6              ;
 330+ 93C6              Mov_left
 331+ 93C6
 332+ 93C6 21 C9 85     	ld hl,Ctrl_0
 333+ 93C9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93CB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93CB              ; 																	; _ en el caso de que no lo haya.
 336+ 93CB 3A C9 85     	ld a,(Ctrl_0)
 337+ 93CE CB 77        	bit 6,a
 338+ 93D0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93D2
 340+ 93D2 CD E8 94     	call Stop_Amadeus_left
 341+ 93D5 C8           	ret z
 342+ 93D6 20 4A        	jr nz,8F
 343+ 93D8
 344+ 93D8 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93DB A7           	and a
 346+ 93DC 20 44        	jr nz,8F
 347+ 93DE
 348+ 93DE 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93E1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93E2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93E4
 352+ 93E4              ; ---------- ---------- ----------
 353+ 93E4
 354+ 93E4 3A B0 85     	ld a,(Vel_left)
 355+ 93E7 FE 02        	cp 2
 356+ 93E9 28 0F        	jr z,1F
 357+ 93EB 38 04        	jr c,6F
 358+ 93ED FE 04        	cp 4
 359+ 93EF 28 12        	jr z,7F
 360+ 93F1
 361+ 93F1              ; ---------- ---------- ----------
 362+ 93F1
 363+ 93F1 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93F4 FE F9        	cp $f9
 365+ 93F6 20 2A        	jr nz,8F
 366+ 93F8 18 10        	jr 4F
 367+ 93FA 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 93FD FE FA        	cp $fa
 369+ 93FF 20 21        	jr nz,8F
 370+ 9401 18 07        	jr 4F
 371+ 9403 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 9406 FE FC        	cp $fc
 373+ 9408 20 18        	jr nz,8F
 374+ 940A
 375+ 940A              ; ---------- ---------- ----------
 376+ 940A
 377+ 940A              4
 378+ 940A CD 10 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 940D              ;	call Reinicio
 380+ 940D
 381+ 940D              ; ---------- ---------- ----------
 382+ 940D
 383+ 940D 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 940F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9410
 386+ 9410              ;	ld hl,(Indice_Sprite_izq)
 387+ 9410              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9410
 389+ 9410 CD 29 94     	call DESPLZ_IZQ
 390+ 9413 C1           	pop bc
 391+ 9414 10 F9        	djnz 5B
 392+ 9416 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9419 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 941A 22 9D 85     	ld (Posicion_actual),hl
 395+ 941D CD 5A 95     	call Genera_coordenadas
 396+ 9420 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9422
 398+ 9422              ; ---------- ---------- ----------
 399+ 9422
 400+ 9422              ; Movemos, no hay recolocación.
 401+ 9422
 402+ 9422 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9425 CD 29 94     	call DESPLZ_IZQ
 404+ 9428 C9           2 ret
 405+ 9429
 406+ 9429              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9429              ;
 408+ 9429              ;	22/9/22
 409+ 9429
 410+ 9429              DESPLZ_IZQ
 411+ 9429
 412+ 9429 CD 38 94     	call Desplaza_izquierda
 413+ 942C CD 84 94         call modifica_parametros_1er_DESPLZ
 414+ 942F CD AC 94     	call Ciclo_completo_2
 415+ 9432 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9435 CB BE        	res 7,(hl)
 417+ 9437 C9           	ret
 418+ 9438
 419+ 9438              Desplaza_izquierda
 420+ 9438
 421+ 9438 3A B0 85     	ld a,(Vel_left)
 422+ 943B 47           	ld b,a
 423+ 943C 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 943F 23           1 inc hl
 425+ 9440 23           	inc hl
 426+ 9441 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9443 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9446 CD C0 87     	call Extrae_address
 429+ 9449 22 9F 85     	ld (Puntero_objeto),hl
 430+ 944C
 431+ 944C              ; Modifica (Puntero_DESPLZ_der).
 432+ 944C
 433+ 944C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 944C              ; Cuántos movimientos hemos hecho ??
 435+ 944C              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 944C
 437+ 944C 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 944F EB           	ex de,hl
 439+ 9450 A7           	and a
 440+ 9451 ED 52        	sbc hl,de
 441+ 9453 CB 3D        	srl l
 442+ 9455 3E 08        6 ld a,8
 443+ 9457 95           	sub l
 444+ 9458 30 1E        	jr nc,3F
 445+ 945A
 446+ 945A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 945A              ; B="0".
 448+ 945A
 449+ 945A 04           4 inc b
 450+ 945B 3C           	inc a
 451+ 945C 20 FC        	jr nz,4B
 452+ 945E 78           	ld a,b
 453+ 945F 08           	ex af,af
 454+ 9460 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9463 23           5 inc hl
 456+ 9464 23           	inc hl
 457+ 9465 10 FC        	djnz 5B
 458+ 9467 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 946A CD C0 87     	call Extrae_address
 460+ 946D 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9470
 462+ 9470              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9470              ; _(Posicion_actual).
 464+ 9470
 465+ 9470 21 9D 85     	ld hl,Posicion_actual
 466+ 9473 35           	dec (hl)
 467+ 9474 08           	ex af,af
 468+ 9475 6F           	ld l,a
 469+ 9476 18 DD        	jr 6B
 470+ 9478
 471+ 9478              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9478
 473+ 9478 47           3 ld b,a
 474+ 9479 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 947C 23           2 inc hl
 476+ 947D 23           	inc hl
 477+ 947E 10 FC        	djnz 2B
 478+ 9480 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9483 C9           8 ret
 480+ 9484
 481+ 9484              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9484              ;
 483+ 9484              ;	modifica_parametros_1er_DESPLZ
 484+ 9484              ;
 485+ 9484              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9484              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9484              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9484
 489+ 9484 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9487 A7           	and a
 491+ 9488 20 1E        	jr nz,1F
 492+ 948A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 948B 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 948E 21 9C 85     	ld hl,Columns
 495+ 9491 34           	inc (hl)
 496+ 9492 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9495 E6 01        	and 1
 498+ 9497 20 0F        	jr nz,1F
 499+ 9499 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 949C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 949D 22 9D 85     	ld (Posicion_actual),hl
 502+ 94A0 CD 5A 95     	call Genera_coordenadas
 503+ 94A3 CD FF 94     	call Dec_CTRL_DESPLZ
 504+ 94A6 18 03        	jr 2F
 505+ 94A8 CD FF 94     1 call Dec_CTRL_DESPLZ
 506+ 94AB C9           2 ret
 507+ 94AC
 508+ 94AC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 94AC
 510+ 94AC 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 94AF FE F7        	cp $f7
 512+ 94B1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 94B3 30 2C        	jr nc,3F
 514+ 94B5
 515+ 94B5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 94B5
 517+ 94B5 06 00        	ld b,0
 518+ 94B7 04           4 inc b
 519+ 94B8 3C           	inc a
 520+ 94B9 FE F7        	cp $f7
 521+ 94BB 20 FA        	jr nz,4B
 522+ 94BD 3E FF        	ld a,$ff
 523+ 94BF 90           	sub b
 524+ 94C0 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94C3 18 1C        	jr 3F
 526+ 94C5
 527+ 94C5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94C5
 529+ 94C5 21 9C 85     1 ld hl,Columns
 530+ 94C8 35           	dec (hl)
 531+ 94C9 AF           	xor a
 532+ 94CA 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94CD 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94D0 E6 01        	and 1
 535+ 94D2 28 0A        	jr z,2F
 536+ 94D4 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94D7 2B           	dec hl
 538+ 94D8 22 9D 85     	ld (Posicion_actual),hl
 539+ 94DB CD 5A 95     	call Genera_coordenadas
 540+ 94DE
 541+ 94DE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94DE
 543+ 94DE CD EA 87     2 call Inicia_puntero_objeto_izq
 544+ 94E1 C9           3 ret
 545+ 94E2
 546+ 94E2              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94E2              ;
 548+ 94E2              ;	19/10/22
 549+ 94E2              ;
 550+ 94E2              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94E2              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94E2
 553+ 94E2 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94E5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94E7 C9           	ret
 556+ 94E8
 557+ 94E8              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94E8              ;
 559+ 94E8              ;	19/10/22
 560+ 94E8              ;
 561+ 94E8              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94E8              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94E8
 564+ 94E8 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94EB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94ED C9           	ret
 567+ 94EE
 568+ 94EE              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94EE              ;
 570+ 94EE              ;	24/7/22
 571+ 94EE              ;
 572+ 94EE              ;	Inc_CTRL_DESPLZ
 573+ 94EE              ;
 574+ 94EE              ;
 575+ 94EE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94EE
 577+ 94EE 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94F1 3A B1 85     	ld a,(Vel_right)
 579+ 94F4 A7           	and a
 580+ 94F5 28 06        	jr z,1F
 581+ 94F7 47           	ld b,a
 582+ 94F8 34           3 inc (hl)
 583+ 94F9 10 FD        	djnz 3B
 584+ 94FB 18 01        	jr 2F
 585+ 94FD 34           1 inc (hl)
 586+ 94FE C9           2 ret
 587+ 94FF
 588+ 94FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 94FF              ;
 590+ 94FF              ;	5/2/23
 591+ 94FF              ;
 592+ 94FF              ;	Dec_CTRL_DESPLZ
 593+ 94FF              ;
 594+ 94FF              ;
 595+ 94FF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 94FF
 597+ 94FF 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9502 3A B0 85     	ld a,(Vel_left)
 599+ 9505 A7           	and a
 600+ 9506 28 06        	jr z,1F
 601+ 9508 47           	ld b,a
 602+ 9509 35           3 dec (hl)
 603+ 950A 10 FD        	djnz 3B
 604+ 950C 18 01        	jr 2F
 605+ 950E 35           1 dec (hl)
 606+ 950F C9           2 ret
 607+ 9510
 608+ 9510              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9510
 610+ 9510 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9513 01 1F 00     	ld bc,31
 612+ 9516 A7           	and a
 613+ 9517 ED 4A        	adc hl,bc
 614+ 9519 22 9D 85     	ld (Posicion_actual),hl
 615+ 951C 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 951F CB C6        	set 0,(hl)
 617+ 9521 C9           	ret
 618+ 9522
 619+ 9522              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9522
 621+ 9522 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9525 01 1F 00     	ld bc,31
 623+ 9528 A7           	and a
 624+ 9529 ED 42        	sbc hl,bc
 625+ 952B 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 952E 21 C9 85     	ld hl,Ctrl_0
 627+ 9531 CB CE        	set 1,(hl)
 628+ 9533 C9           	ret
 629+ 9534
 630+ 9534              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9534
 632+ 9534 24           Reaparece_abajo inc h
 633+ 9535 01 E0 17     	ld bc,$17e0
 634+ 9538 A7           	and a
 635+ 9539 ED 4A        	adc hl,bc
 636+ 953B 22 9D 85     	ld (Posicion_actual),hl
 637+ 953E 21 C9 85     	ld hl,Ctrl_0
 638+ 9541 CB D6        	set 2,(hl)
 639+ 9543 C9           	ret
 640+ 9544
 641+ 9544              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9544
 643+ 9544 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9547 A7           	and a
 645+ 9548 ED 42        	sbc hl,bc
 646+ 954A 22 9D 85     	ld (Posicion_actual),hl
 647+ 954D 21 C9 85     	ld hl,Ctrl_0
 648+ 9550 CB DE        	set 3,(hl)
 649+ 9552 C9           	ret
 650+ 9553
 651+ 9553              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9553
 653+ 9553 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9556 22 9D 85     	ld (Posicion_actual),hl
 655+ 9559 C9           	ret
# file closed: Direcciones.asm
 908  955A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 955A              ; ------------------------------------------------------------------------
   2+ 955A              ;
   3+ 955A              ;	02/04/23
   4+ 955A              ;
   5+ 955A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 955A              ;	Fila superior "0", Columna izquierda "0".
   7+ 955A              ;
   8+ 955A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 955A              ;
  10+ 955A              ;	Modifica: A,BC y DE.
  11+ 955A
  12+ 955A C5           Genera_coordenadas push bc
  13+ 955B E5           	push hl
  14+ 955C D5           	push de
  15+ 955D
  16+ 955D 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9560
  18+ 9560 7D           	ld a,l
  19+ 9561 E6 1F        	and $1f
  20+ 9563 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9566
  22+ 9566 CD 2E 92     	call calcula_tercio
  23+ 9569 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 956A
  25+ 956A 1E 00        	ld e,0
  26+ 956C 7D           	ld a,l
  27+ 956D E6 E0        	and $e0
  28+ 956F 28 01        	jr z,1F
  29+ 9571 04           	inc b
  30+ 9572
  31+ 9572 04           1 inc b
  32+ 9573 05           	dec b
  33+ 9574 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9576              ;														; _ , salimos.
  35+ 9576 1C           3 inc e
  36+ 9577 D6 20        	sub 32
  37+ 9579 20 FB        	jr nz,3B
  38+ 957B 10 F5        	djnz 1B
  39+ 957D
  40+ 957D 7B           2 ld a,e
  41+ 957E 32 A2 85     	ld (Coordenada_y),a
  42+ 9581
  43+ 9581 D1           	pop de
  44+ 9582 E1           	pop hl
  45+ 9583 C1           	pop bc
  46+ 9584
  47+ 9584 C9           	ret
  48+ 9585
  49+ 9585              ; ------------------------------------------------------------------------
  50+ 9585              ;	28/03/23
  51+ 9585              ;
  52+ 9585              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9585              ;	Fila superior "0", Columna izquierda "0".
  54+ 9585              ;
  55+ 9585              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9585              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9585              ;
  58+ 9585              ;		DE="$120d"
  59+ 9585              ;
  60+ 9585              ;		D, (Coordenada_X), Columnas, $12
  61+ 9585              ;		E, (Coordenada_y), Filas, $0d
  62+ 9585              ;
  63+ 9585              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9585
  65+ 9585              ;	Modifica: A,BC y DE.
  66+ 9585
  67+ 9585
  68+ 9585              Genera_coordenadas_disparo
  69+ 9585
  70+ 9585              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9585
  72+ 9585 7D           	ld a,l
  73+ 9586 E6 1F        	and $1f
  74+ 9588 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9589 CD 2E 92     	call calcula_tercio
  76+ 958C 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 958D 1E 00        	ld e,0
  78+ 958F 7D           	ld a,l
  79+ 9590 E6 E0        	and $e0
  80+ 9592 28 01        	jr z,1F
  81+ 9594 04           	inc b
  82+ 9595 1C           1 inc e
  83+ 9596 D6 20        	sub 32
  84+ 9598 20 FB        	jr nz,1B
  85+ 959A 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 959C C9           	ret
  87+ 959D
# file closed: Genera_coordenadas.asm
 909  959D              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 959D
   2+ 959D
   3+ 959D              ;   11/8/22
   4+ 959D              ;
   5+ 959D              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 959D              ;
   7+ 959D              ;   Mov_obj.asm
   8+ 959D              ;
   9+ 959D              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 959D              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 959D              ;
  12+ 959D              ;   Codificación:
  13+ 959D              ;
  14+ 959D              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 959D
  16+ 959D              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 959D
  18+ 959D 02 40 00     Arriba db 2,%01000000,0
  19+ 95A0 02 80 00     Abajo db 2,%10000000,0
  20+ 95A3 02 20 00     Derecha db 2,%00100000,0
  21+ 95A6 02 10 00     Izquierda db 2,%00010000,0
  22+ 95A9 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 95AD 60 42 60 40
  22+ 95B1 63
  23+ 95B2 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95B6 22 A3 80 A0
  24+ 95BA 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95BE 84 A0 83 A0
  25+ 95C2 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95C6 80 A3 22 A0
  26+ 95CA 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95CE 40 60 42 60
  27+ 95D2 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95D6
  29+ 95D6 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95DA 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95DE 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95E2 84 00
  32+ 95E4 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95E8 84 00
  33+ 95EA 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95EE 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95F2 1F 1F 1F 1F
  35+ 95F6 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95FA 1F 1F 1F 1F
  35+ 95FE 1F
  36+ 95FF 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9603 2F 2F 2F 2F
  36+ 9607 2F 2F
  37+ 9609 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 960D 2F 2F 00
  38+ 9610
  39+ 9610              ; ----- ----- ----- ----- -----
  40+ 9610
  41+ 9610 EE 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9612 EA 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9614 A6 95        Indice_mov_Izquierda defw Izquierda
  44+ 9616 A3 95        Indice_mov_Derecha defw Derecha
  45+ 9618 A0 95        Indice_mov_Abajo defw Abajo
  46+ 961A 9D 95        Indice_mov_Arriba defw Arriba
  47+ 961C DA 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 961E DE 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9620 D6 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9622 E4 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9624 A9 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9626              ; ----- ----- ----- ----- -----
  53+ 9626
  54+ 9626 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9629 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 962A 28 02            jr z,1F
  57+ 962C 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 962E 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9631 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9633 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9636              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9636 2A CD 85         ld hl,(Puntero_mov)
  63+ 9639 7E               ld a,(hl)
  64+ 963A 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 963D 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 963E 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9641
  68+ 9641 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9644 A7               and a
  70+ 9645 20 0C            jr nz,12F
  71+ 9647 2A CD 85         ld hl,(Puntero_mov)
  72+ 964A 7E               ld a,(hl)
  73+ 964B A7               and a
  74+ 964C 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 964E E6 0F            and $0f
  76+ 9650 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9653              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9653 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9656 CB 7E            bit 7,(hl)
  80+ 9658 28 03            jr z,2F
  81+ 965A CD 4C 92         call Mov_down
  82+ 965D 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9660 CB 76            bit 6,(hl)
  84+ 9662 28 03            jr z,3F
  85+ 9664 CD 7A 92         call Mov_up
  86+ 9667 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 966A CB 6E            bit 5,(hl)
  88+ 966C 28 03            jr z,4F
  89+ 966E CD A8 92         call Mov_right
  90+ 9671 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9674 CB 66            bit 4,(hl)
  92+ 9676 28 03            jr z,5F
  93+ 9678 CD C6 93         call Mov_left
  94+ 967B
  95+ 967B              ; ---------- --------- --------- ---------- ----------
  96+ 967B
  97+ 967B 3A D1 85     5 ld a,(Repetimos_db)
  98+ 967E A7               and a
  99+ 967F 28 07            jr z,6F
 100+ 9681 3D               dec a
 101+ 9682 32 D1 85         ld (Repetimos_db),a
 102+ 9685 28 01            jr z,6f
 103+ 9687 C9           11 ret
 104+ 9688 21 CF 85     6 ld hl,Contador_db_mov
 105+ 968B 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 968C 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 968F 23               inc hl
 108+ 9690 22 CD 85         ld (Puntero_mov),hl
 109+ 9693 18 F2            jr 11B
 110+ 9695 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9698 3A D0 85         ld a,(Incrementa_puntero)
 112+ 969B 47               ld b,a
 113+ 969C 23           8 inc hl
 114+ 969D 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 969F 5E               ld e,(hl)
 116+ 96A0 23               inc hl
 117+ 96A1 56               ld d,(hl)
 118+ 96A2 EB               ex de,hl
 119+ 96A3 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 96A6 18 DF            jr 11B
 121+ 96A8
 122+ 96A8              ; ---------- --------- --------- ---------- ----------
 123+ 96A8              ;
 124+ 96A8              ;   11/8/22
 125+ 96A8              ;
 126+ 96A8              ;   Prepara_Puntero_mov
 127+ 96A8
 128+ 96A8 E5           Prepara_Puntero_mov push hl
 129+ 96A9 D5               push de
 130+ 96AA 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 96AD 5E               ld e,(hl)
 132+ 96AE 23               inc hl
 133+ 96AF 56               ld d,(hl)
 134+ 96B0 EB               ex de,hl
 135+ 96B1 22 CD 85         ld (Puntero_mov),hl
 136+ 96B4 D1               pop de
 137+ 96B5 E1               pop hl
 138+ 96B6 C9               ret
 139+ 96B7
 140+ 96B7              ; ---------- --------- --------- ---------- ----------
 141+ 96B7              ;
 142+ 96B7              ;   11/8/22
 143+ 96B7              ;
 144+ 96B7              ;   Reinicia_el_movimiento
 145+ 96B7
 146+ 96B7 CD A8 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 96BA AF               xor a
 148+ 96BB 32 CF 85         ld (Contador_db_mov),a
 149+ 96BE 32 D0 85         ld (Incrementa_puntero),a
 150+ 96C1 C3 26 96         jp Movimiento
 151+ 96C4 C9               ret
 152+ 96C5              ; ---------- --------- --------- ---------- ----------
 153+ 96C5
 154+ 96C5
 155+ 96C5
 156+ 96C5
 157+ 96C5
 158+ 96C5
 159+ 96C5
 160+ 96C5
 161+ 96C5
 162+ 96C5
 163+ 96C5
 164+ 96C5
 165+ 96C5
 166+ 96C5
 167+ 96C5
 168+ 96C5
 169+ 96C5
 170+ 96C5
# file closed: Patrones_de_mov.asm
 910  96C5              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96C5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96C5              ;
   3+ 96C5              ;	3/1/23
   4+ 96C5              ;
   5+ 96C5              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96C5
   7+ 96C5              ;	ADC HL,SP	LD (addr),SP
   8+ 96C5              ;	ADD HL,SP	LD SP,(addr)
   9+ 96C5              ;	ADD IX,SP	LD SP,nn
  10+ 96C5              ; 	ADD IY,SP	LD SP,HL
  11+ 96C5              ;				LD SP,IX
  12+ 96C5              ;	DEC SP		LD SP,IY
  13+ 96C5
  14+ 96C5              ;	EX (SP),HL
  15+ 96C5              ;	EX (SP),IX
  16+ 96C5              ;	EX (SP),IY
  17+ 96C5
  18+ 96C5              ;	INC SP
  19+ 96C5
  20+ 96C5
  21+ 96C5                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 911  7FD4
 912  7FD4              	SAVESNA "Pruebas.sna", START
 913  7FD4
 914  7FD4
 915  7FD4
# file closed: Banco_de_pruebas.asm
