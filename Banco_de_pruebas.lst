# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 87 89     	call Frame
  15  A104
  16  A104 3A BA 88     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 BD 84        	defw Caja_1
  98+ 846A FA 84        	defw Caja_2
  99+ 846C 37 85        	defw Caja_3
 100+ 846E 74 85        	defw Caja_4
 101+ 8470 B1 85        	defw Caja_5
 102+ 8472 EE 85        	defw Caja_6
 103+ 8474 2B 86        	defw Caja_7
 104+ 8476 68 86        	defw Caja_8
 105+ 8478 A5 86        	defw Caja_9
 106+ 847A E2 86        	defw Caja_10
 107+ 847C              ;	...
 108+ 847C              ;	...
 109+ 847C              ;	+ entidades ...
 110+ 847C 00 00        	defw 0
 111+ 847E 00 00        	defw 0
 112+ 8480
 113+ 8480              ; ---------- ---------- ---------- ---------- ----------
 114+ 8480
 115+ 8480 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8482 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8484 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8486 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8489
 120+ 8489 05           	db %00000101									; (Attr).
 121+ 848A 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 848C 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 848E
 124+ 848E 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8490 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8492
 127+ 8492 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8494 04           	db 4 											; (Cuad_objeto).
 129+ 8495 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8499
 131+ 8499 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 849A
 133+ 849A 00 00        	db 0,0											; Variables_de_borrado
 134+ 849C 00 00        	defw 0											;	" " " " " " "
 135+ 849E 00 00        	defw 0											;	" " " " " " "
 136+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 84A4
 138+ 84A4 00 00        	db 0,0											; Variables_de_pintado
 139+ 84A6 00 00        	defw 0											;	" " " " " " "
 140+ 84A8 00 00        	defw 0											;	" " " " " " "
 141+ 84AA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 84AE
 143+ 84AE 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 84B1
 145+ 84B1 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 84B5 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 84B8
 148+ 84B8 00           	db 0 											; (Columnas).
 149+ 84B9 00 00        	defw 0											; (Limite_horizontal).
 150+ 84BB 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 151+ 84BD
 152+ 84BD              ; ---------- ---------- ---------- ---------- ----------
 153+ 84BD
 154+ 84BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 84BF 00 00        	defw 0											; (Posicion_actual).
 156+ 84C1 00 00        	defw 0 											; (Puntero_objeto).
 157+ 84C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 84C6
 159+ 84C6 00           	db %00000000 									; (Attr).
 160+ 84C7
 161+ 84C7 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 84C9 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 84CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 84CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 84CF
 166+ 84CF 00 00        	defw 0											; (Posicion_inicio).
 167+ 84D1 00           	db 0											; (Cuad_objeto).
 168+ 84D2
 169+ 84D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 84D6
 171+ 84D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 84D7
 173+ 84D7 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 84D9 00 00        	defw 0											;	" " " " " " "
 175+ 84DB 00 00        	defw 0											;	" " " " " " "
 176+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 84E1
 178+ 84E1 00 00        	db 0,0											; Variables_de_pintado
 179+ 84E3 00 00        	defw 0											;	" " " " " " "
 180+ 84E5 00 00        	defw 0											;	" " " " " " "
 181+ 84E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 84EB
 183+ 84EB 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 84EE
 185+ 84EE 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 84F2 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 84F5
 188+ 84F5 00           	db 0 											; (Columnas).
 189+ 84F6 00 00        	defw 0											; (Limite_horizontal).
 190+ 84F8 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 191+ 84FA
 192+ 84FA              ; ---------- ---------- ---------- ---------- ----------
 193+ 84FA
 194+ 84FA 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 84FC 00 00        	defw 0											; (Posicion_actual).
 196+ 84FE 00 00        	defw 0 											; (Puntero_objeto).
 197+ 8500 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8503
 199+ 8503 00           	db %00000000 									; (Attr).
 200+ 8504
 201+ 8504 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8506 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8508 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 850A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 850C
 206+ 850C 00 00        	defw 0											; (Posicion_inicio).
 207+ 850E 00           	db 0											; (Cuad_objeto).
 208+ 850F
 209+ 850F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8513
 211+ 8513 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8514
 213+ 8514 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8516 00 00        	defw 0											;	" " " " " " "
 215+ 8518 00 00        	defw 0											;	" " " " " " "
 216+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 851E
 218+ 851E 00 00        	db 0,0											; Variables_de_pintado
 219+ 8520 00 00        	defw 0											;	" " " " " " "
 220+ 8522 00 00        	defw 0											;	" " " " " " "
 221+ 8524 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8528
 223+ 8528 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 852B
 225+ 852B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 852F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8532
 228+ 8532 00           	db 0 											; (Columnas).
 229+ 8533 00 00        	defw 0											; (Limite_horizontal).
 230+ 8535 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 231+ 8537
 232+ 8537              ; ---------- ---------- ---------- ---------- ----------
 233+ 8537
 234+ 8537 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8539 00 00        	defw 0											; (Posicion_actual).
 236+ 853B 00 00        	defw 0 											; (Puntero_objeto).
 237+ 853D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8540
 239+ 8540 00           	db %00000000 									; (Attr).
 240+ 8541
 241+ 8541 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8543 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8545 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8547 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8549
 246+ 8549 00 00        	defw 0											; (Posicion_inicio).
 247+ 854B 00           	db 0											; (Cuad_objeto).
 248+ 854C
 249+ 854C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8550
 251+ 8550 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8551
 253+ 8551 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8553 00 00        	defw 0											;	" " " " " " "
 255+ 8555 00 00        	defw 0											;	" " " " " " "
 256+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 855B
 258+ 855B 00 00        	db 0,0											; Variables_de_pintado
 259+ 855D 00 00        	defw 0											;	" " " " " " "
 260+ 855F 00 00        	defw 0											;	" " " " " " "
 261+ 8561 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8565
 263+ 8565 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8568
 265+ 8568 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 856C 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 856F
 268+ 856F 00           	db 0 											; (Columnas).
 269+ 8570 00 00        	defw 0											; (Limite_horizontal).
 270+ 8572 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 271+ 8574
 272+ 8574              ; ---------- ---------- ---------- ---------- ----------
 273+ 8574
 274+ 8574 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8576 00 00        	defw 0											; (Posicion_actual).
 276+ 8578 00 00        	defw 0 											; (Puntero_objeto).
 277+ 857A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 857D
 279+ 857D 00           	db %00000000 									; (Attr).
 280+ 857E
 281+ 857E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8580 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8582 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8584 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8586
 286+ 8586 00 00        	defw 0											; (Posicion_inicio).
 287+ 8588 00           	db 0											; (Cuad_objeto).
 288+ 8589
 289+ 8589 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 858D
 291+ 858D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 858E
 293+ 858E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8590 00 00        	defw 0											;	" " " " " " "
 295+ 8592 00 00        	defw 0											;	" " " " " " "
 296+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8598
 298+ 8598 00 00        	db 0,0											; Variables_de_pintado
 299+ 859A 00 00        	defw 0											;	" " " " " " "
 300+ 859C 00 00        	defw 0											;	" " " " " " "
 301+ 859E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 85A2
 303+ 85A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 85A5
 305+ 85A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 85A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 85AC
 308+ 85AC 00           	db 0 											; (Columnas).
 309+ 85AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 85AF 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 311+ 85B1
 312+ 85B1              ; ---------- ---------- ---------- ---------- ----------
 313+ 85B1
 314+ 85B1 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 85B3 00 00        	defw 0											; (Posicion_actual).
 316+ 85B5 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85B7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85BA
 319+ 85BA 00           	db %00000000 									; (Attr).
 320+ 85BB
 321+ 85BB 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 85BD 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 85BF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 85C1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 85C3
 326+ 85C3 00 00        	defw 0											; (Posicion_inicio).
 327+ 85C5 00           	db 0											; (Cuad_objeto).
 328+ 85C6
 329+ 85C6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 85CA
 331+ 85CA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 85CB
 333+ 85CB 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 85CD 00 00        	defw 0											;	" " " " " " "
 335+ 85CF 00 00        	defw 0											;	" " " " " " "
 336+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 85D5
 338+ 85D5 00 00        	db 0,0											; Variables_de_pintado
 339+ 85D7 00 00        	defw 0											;	" " " " " " "
 340+ 85D9 00 00        	defw 0											;	" " " " " " "
 341+ 85DB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 85DF
 343+ 85DF 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 85E2
 345+ 85E2 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 85E6 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 85E9
 348+ 85E9 00           	db 0 											; (Columnas).
 349+ 85EA 00 00        	defw 0											; (Limite_horizontal).
 350+ 85EC 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 351+ 85EE
 352+ 85EE              ; ---------- ---------- ---------- ---------- ----------
 353+ 85EE
 354+ 85EE 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 85F0 00 00        	defw 0											; (Posicion_actual).
 356+ 85F2 00 00        	defw 0 											; (Puntero_objeto).
 357+ 85F4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 85F7
 359+ 85F7 00           	db %00000000 									; (Attr).
 360+ 85F8
 361+ 85F8 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 85FA 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 85FC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 85FE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8600
 366+ 8600 00 00        	defw 0											; (Posicion_inicio).
 367+ 8602 00           	db 0											; (Cuad_objeto).
 368+ 8603
 369+ 8603 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8607
 371+ 8607 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 8608
 373+ 8608 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 860A 00 00        	defw 0											;	" " " " " " "
 375+ 860C 00 00        	defw 0											;	" " " " " " "
 376+ 860E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8612
 378+ 8612 00 00        	db 0,0											; Variables_de_pintado
 379+ 8614 00 00        	defw 0											;	" " " " " " "
 380+ 8616 00 00        	defw 0											;	" " " " " " "
 381+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 861C
 383+ 861C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 861F
 385+ 861F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8623 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8626
 388+ 8626 00           	db 0 											; (Columnas).
 389+ 8627 00 00        	defw 0											; (Limite_horizontal).
 390+ 8629 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 391+ 862B
 392+ 862B              ; ---------- ---------- ---------- ---------- ----------
 393+ 862B
 394+ 862B 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 862D 00 00        	defw 0											; (Posicion_actual).
 396+ 862F 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8631 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8634
 399+ 8634 00           	db %00000000 									; (Attr).
 400+ 8635
 401+ 8635 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 8637 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 8639 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 863B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 863D
 406+ 863D 00 00        	defw 0											; (Posicion_inicio).
 407+ 863F 00           	db 0											; (Cuad_objeto).
 408+ 8640
 409+ 8640 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8644
 411+ 8644 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8645
 413+ 8645 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 8647 00 00        	defw 0											;	" " " " " " "
 415+ 8649 00 00        	defw 0											;	" " " " " " "
 416+ 864B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 864F
 418+ 864F 00 00        	db 0,0											; Variables_de_pintado
 419+ 8651 00 00        	defw 0											;	" " " " " " "
 420+ 8653 00 00        	defw 0											;	" " " " " " "
 421+ 8655 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 8659
 423+ 8659 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 865C
 425+ 865C 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8660 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8663
 428+ 8663 00           	db 0 											; (Columnas).
 429+ 8664 00 00        	defw 0											; (Limite_horizontal).
 430+ 8666 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 431+ 8668
 432+ 8668              ; ---------- ---------- ---------- ---------- ----------
 433+ 8668
 434+ 8668 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 866A 00 00        	defw 0											; (Posicion_actual).
 436+ 866C 00 00        	defw 0 											; (Puntero_objeto).
 437+ 866E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8671
 439+ 8671 00           	db %00000000 									; (Attr).
 440+ 8672
 441+ 8672 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8674 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 8676 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 8678 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 867A
 446+ 867A 00 00        	defw 0											; (Posicion_inicio).
 447+ 867C 00           	db 0											; (Cuad_objeto).
 448+ 867D
 449+ 867D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8681
 451+ 8681 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8682
 453+ 8682 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8684 00 00        	defw 0											;	" " " " " " "
 455+ 8686 00 00        	defw 0											;	" " " " " " "
 456+ 8688 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 868C
 458+ 868C 00 00        	db 0,0											; Variables_de_pintado
 459+ 868E 00 00        	defw 0											;	" " " " " " "
 460+ 8690 00 00        	defw 0											;	" " " " " " "
 461+ 8692 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 8696
 463+ 8696 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 8699
 465+ 8699 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 869D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 86A0
 468+ 86A0 00           	db 0 											; (Columnas).
 469+ 86A1 00 00        	defw 0											; (Limite_horizontal).
 470+ 86A3 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 471+ 86A5
 472+ 86A5              ; ---------- ---------- ---------- ---------- ----------
 473+ 86A5
 474+ 86A5 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 86A7 00 00        	defw 0											; (Posicion_actual).
 476+ 86A9 00 00        	defw 0 											; (Puntero_objeto).
 477+ 86AB 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 86AE
 479+ 86AE 00           	db %00000000 									; (Attr).
 480+ 86AF
 481+ 86AF 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 86B1 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 86B3 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 86B5 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 86B7
 486+ 86B7 00 00        	defw 0											; (Posicion_inicio).
 487+ 86B9 00           	db 0											; (Cuad_objeto).
 488+ 86BA
 489+ 86BA 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 86BE
 491+ 86BE 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 86BF
 493+ 86BF 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 86C1 00 00        	defw 0											;	" " " " " " "
 495+ 86C3 00 00        	defw 0											;	" " " " " " "
 496+ 86C5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 86C9
 498+ 86C9 00 00        	db 0,0											; Variables_de_pintado
 499+ 86CB 00 00        	defw 0											;	" " " " " " "
 500+ 86CD 00 00        	defw 0											;	" " " " " " "
 501+ 86CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 86D3
 503+ 86D3 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 86D6
 505+ 86D6 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 86DA 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 86DD
 508+ 86DD 00           	db 0 											; (Columnas).
 509+ 86DE 00 00        	defw 0											; (Limite_horizontal).
 510+ 86E0 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 511+ 86E2
 512+ 86E2              ; ---------- ---------- ---------- ---------- ----------
 513+ 86E2
 514+ 86E2 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 86E4 00 00        	defw 0											; (Posicion_actual).
 516+ 86E6 00 00        	defw 0 											; (Puntero_objeto).
 517+ 86E8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 86EB
 519+ 86EB 00           	db %00000000 									; (Attr).
 520+ 86EC
 521+ 86EC 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 86EE 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 86F0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 86F2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 86F4
 526+ 86F4 00 00        	defw 0											; (Posicion_inicio).
 527+ 86F6 00           	db 0											; (Cuad_objeto).
 528+ 86F7
 529+ 86F7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 86FB
 531+ 86FB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 86FC
 533+ 86FC 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 86FE 00 00        	defw 0											;	" " " " " " "
 535+ 8700 00 00        	defw 0											;	" " " " " " "
 536+ 8702 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 8706
 538+ 8706 00 00        	db 0,0											; Variables_de_pintado
 539+ 8708 00 00        	defw 0											;	" " " " " " "
 540+ 870A 00 00        	defw 0											;	" " " " " " "
 541+ 870C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8710
 543+ 8710 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8713
 545+ 8713 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 8717 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 871A
 548+ 871A 00           	db 0 											; (Columnas).
 549+ 871B 00 00        	defw 0											; (Limite_horizontal).
 550+ 871D 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 551+ 871F
 552+ 871F              ; -------------------------------------------------------------------------------------
 553+ 871F              ;
 554+ 871F              ;	20/05/23
 555+ 871F              ;
 556+ 871F              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 871F              ;
 558+ 871F              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 871F              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 871F              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 871F              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 871F
 563+ 871F              Indice_de_entidades
 564+ 871F
 565+ 871F 29 87        	defw Entidad_1
 566+ 8721 39 87        	defw Entidad_2
 567+ 8723 49 87        	defw Entidad_3
 568+ 8725 59 87        	defw Entidad_4
 569+ 8727 69 87        	defw Entidad_5
 570+ 8729
 571+ 8729              ;	BADSAT, (Satélite malvado).
 572+ 8729
 573+ 8729 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 872B 04           	db %00000100									; (Attr).
 575+ 872C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 872E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8730 9F 47        	defw $479f	                             	    ; (Posicion_inicio).
 578+ 8732 01           	db 1											; (Cuad_objeto).
 579+ 8733 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 8737 BF 9A        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 581+ 8739
 582+ 8739 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 873B 02           	db %00000010									; (Attr).
 584+ 873C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 873E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8740 5F 48        	defw $485f                                      ; (Posicion_inicio).
 587+ 8742 01           	db 1											; (Cuad_objeto).
 588+ 8743 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 8747 BF 9A        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 590+ 8749
 591+ 8749 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 874B 04           	db %00000100									; (Attr).
 593+ 874C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 874E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8750 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8752 01           	db 1											; (Cuad_objeto).
 597+ 8753 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 8757 B3 9A        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 8759
 600+ 8759 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 875B 01           	db %00000001									; (Attr).
 602+ 875C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 875E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8760 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8762 01           	db 1											; (Cuad_objeto).
 606+ 8763 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 8767 BF 9A        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8769
 609+ 8769 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 876B 01           	db %00000001									; (Attr).
 611+ 876C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 876E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8770 0A 40        	defw $400a                                      ; (Posicion_inicio).
 614+ 8772 01           	db 1											; (Cuad_objeto).
 615+ 8773 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 8777 B5 9A        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  8779              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8779              ; 13/05/23
   2+ 8779
   3+ 8779              Indice_de_niveles
   4+ 8779
   5+ 8779 87 87        	defw Nivel_1
   6+ 877B 92 87        	defw Nivel_2
   7+ 877D 9F 87        	defw Nivel_3
   8+ 877F AF 87        	defw Nivel_4
   9+ 8781 C1 87        	defw Nivel_5
  10+ 8783
  11+ 8783              ;	...
  12+ 8783              ;	...
  13+ 8783              ;	+ Niveles ...
  14+ 8783
  15+ 8783 00 00        	defw 0
  16+ 8785 00 00        	defw 0
  17+ 8787
  18+ 8787 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 8788 01 02 03 04  	db 1,2,3,4,5,1,2,3,4,5						; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 878C 05 01 02 03
  19+ 8790 04 05
  20+ 8792 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 8793 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 8797 01 02
  22+ 8799 02 01 01 01  	db 2,1,1,1,1,2
  22+ 879D 01 02
  23+ 879F 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 87A0 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 87A4 01
  25+ 87A5 03 01 01 01  	db 3,1,1,1,1
  25+ 87A9 01
  26+ 87AA 03 01 01 01  	db 3,1,1,1,1
  26+ 87AE 01
  27+ 87AF 11           Nivel_4 db 17									; Nº de entidades.
  28+ 87B0 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 87B4 01
  29+ 87B5 04 01 01 01  	db 4,1,1,1,1
  29+ 87B9 01
  30+ 87BA 04 01 01 01  	db 4,1,1,1,1
  30+ 87BE 01
  31+ 87BF 02 03        	db 2,3
  32+ 87C1 14           Nivel_5 db 20									; Nº de entidades.
  33+ 87C2 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 87C6 01
  34+ 87C7 05 01 01 01  	db 5,1,1,1,1
  34+ 87CB 01
  35+ 87CC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 87D0 01
  36+ 87D1 05 01 01 01  	db 5,1,1,1,1
  36+ 87D5 01
  37+ 87D6
  38+ 87D6              ;---------------------------------------------------------------------------------------------------------------
  39+ 87D6              ;
  40+ 87D6              ;   21/5/23
  41+ 87D6              ;
  42+ 87D6              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 87D6              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 87D6              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 87D6              ;	_en la caja DRAW correspondiente.
  46+ 87D6              ;
  47+ 87D6              ;	MODIFICA: HL,DE y A.
  48+ 87D6              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 87D6
  50+ 87D6              Inicializa_Punteros_de_nivel
  51+ 87D6
  52+ 87D6 21 79 87     	ld hl,Indice_de_niveles
  53+ 87D9 22 EE 88     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 87DC CD 92 8B     	call Extrae_address
  55+ 87DF 7E           	ld a,(hl)
  56+ 87E0 32 C1 88     	ld (Numero_de_entidades),a
  57+ 87E3 23           	inc hl
  58+ 87E4 22 F0 88     	ld (Datos_de_nivel),hl
  59+ 87E7 C9           	ret
  60+ 87E8
  61+ 87E8              ;---------------------------------------------------------------------------------------------------------------
  62+ 87E8              ;
  63+ 87E8              ;   13/5/23
  64+ 87E8              ;
  65+ 87E8              ;	Destruye A,BC,HL,DE
  66+ 87E8
  67+ 87E8              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 87E8              ;	_del juego.
  69+ 87E8
  70+ 87E8              Prepara_cajas
  71+ 87E8
  72+ 87E8              ; Preparamos los punteros de las cajas.
  73+ 87E8
  74+ 87E8 21 68 84     	ld hl,Indice_de_cajas
  75+ 87EB CD 92 8B     	call Extrae_address
  76+ 87EE CD 2B 88     	call Avanza_caja
  77+ 87F1
  78+ 87F1 CD 66 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 87F4
  80+ 87F4 2A F0 88     	ld hl,(Datos_de_nivel)
  81+ 87F7
  82+ 87F7              ; HL está en los datos del nivel correspondiente.
  83+ 87F7              ; B actuará como contador de cajas.
  84+ 87F7
  85+ 87F7 C5           1 push bc
  86+ 87F8
  87+ 87F8 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 87F9 CD 1C 88     	call PreparaBC
  89+ 87FC
  90+ 87FC 21 1F 87     	ld hl,Indice_de_entidades
  91+ 87FF CD 24 88     	call SBC_HL_con_BC_y_Extrae
  92+ 8802 22 C7 88         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8805
  94+ 8805 CD 35 88     	call Datos_de_entidad_a_caja
  95+ 8808
  96+ 8808 2A BF 88     	ld hl,(Indice_restore_caja)
  97+ 880B CD 92 8B     	call Extrae_address
  98+ 880E CD 2B 88     	call Avanza_caja
  99+ 8811
 100+ 8811 2A F0 88     	ld hl,(Datos_de_nivel)
 101+ 8814 23           	inc hl
 102+ 8815 22 F0 88     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8818
 104+ 8818 C1           	pop bc
 105+ 8819 10 DC        	djnz 1B
 106+ 881B C9           	ret
 107+ 881C
 108+ 881C CB 27        PreparaBC sla a
 109+ 881E D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8820 4F           	ld c,a
 111+ 8821 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8823 C9           	ret
 113+ 8824
 114+ 8824 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8825 ED 4A        	adc hl,bc
 116+ 8827 CD 92 8B     	call Extrae_address
 117+ 882A C9           	ret
 118+ 882B
 119+ 882B 22 BB 88     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 882E 13           	inc de
 121+ 882F 13           	inc de
 122+ 8830 EB           	ex de,hl
 123+ 8831 22 BF 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8834 C9           	ret
 125+ 8835
 126+ 8835              Datos_de_entidad_a_caja
 127+ 8835
 128+ 8835              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8835
 130+ 8835 ED 5B BB 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8839
 132+ 8839 01 02 00     	ld bc,2
 133+ 883C ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 883E
 135+ 883E 01 07 00     	ld bc,7
 136+ 8841 CD 60 88     	call Situa_DE
 137+ 8844
 138+ 8844 01 05 00     	ld bc,5
 139+ 8847 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8849
 141+ 8849 01 04 00     	ld bc,4
 142+ 884C CD 60 88     	call Situa_DE
 143+ 884F
 144+ 884F 01 07 00     	ld bc,7
 145+ 8852 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8854
 147+ 8854 01 18 00     	ld bc,24
 148+ 8857 CD 60 88     	call Situa_DE
 149+ 885A
 150+ 885A 01 02 00     	ld bc,2
 151+ 885D ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 885F
 153+ 885F C9           	ret
 154+ 8860
 155+ 8860 EB           Situa_DE ex de,hl
 156+ 8861 A7           	and a
 157+ 8862 ED 4A        	adc hl,bc
 158+ 8864 EB           	ex de,hl
 159+ 8865 C9           	ret
 160+ 8866
 161+ 8866              ;---------------------------------------------------------------------------------------------------------------
 162+ 8866              ;
 163+ 8866              ;	21/5/23
 164+ 8866              ;
 165+ 8866              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 166+ 8866              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 167+ 8866              ;
 168+ 8866              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 169+ 8866              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 170+ 8866              ;	_ total de entidades que contiene (Numero_de_entidades).
 171+ 8866              ;
 172+ 8866              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 173+ 8866              ;	MODIFICA: A y B.
 174+ 8866              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 175+ 8866
 176+ 8866              Admin_num_entidades
 177+ 8866
 178+ 8866              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 179+ 8866
 180+ 8866 3A C1 88     	ld a,(Numero_de_entidades)
 181+ 8869 A7           	and a
 182+ 886A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 183+ 886A 28 FE        	jr z,$
 184+ 886C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 185+ 886C FE 0A        	cp 10
 186+ 886E 38 08        	jr c,1F
 187+ 8870
 188+ 8870              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 189+ 8870              ; Actualizamos variables.
 190+ 8870
 191+ 8870 3E 0A        	ld a,10
 192+ 8872 32 C2 88     	ld (Numero_parcial_de_entidades),a
 193+ 8875 47           	ld b,a
 194+ 8876 18 04        	jr 2F
 195+ 8878
 196+ 8878              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 197+ 8878              ; (Numero_de_entidades)="0".
 198+ 8878
 199+ 8878 32 C2 88     1 ld (Numero_parcial_de_entidades),a
 200+ 887B 47           	ld b,a
 201+ 887C C9           2 ret
# file closed: Niveles.asm
  25  887D
  26  887D              ; ******************************************************************************************************************************************************************************************
  27  887D              ; Constantes.
  28  887D              ; ******************************************************************************************************************************************************************************************
  29  887D              ;
  30  887D              ; 25/05/23
  31  887D              ;
  32  887D              ; Constantes generales.
  33  887D              ;
  34  887D
  35  887D              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  36  887D              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  37  887D              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  38  887D              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  39  887D
  40  887D              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  41  887D              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  42  887D              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  43  887D              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  44  887D              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  45  887D              ;                               				        ; De momento situamos este almacén en $7060.
  46  887D
  47  887D              ; ******************************************************************************************************************************************************************************************
  48  887D              ; Variables.
  49  887D              ; ******************************************************************************************************************************************************************************************
  50  887D              ;
  51  887D              ; 10/11/22
  52  887D              ;
  53  887D              ; Variables de DRAW. (Motor principal).
  54  887D              ;
  55  887D              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  56  887D
  57  887D 00           Filas db 0												; Filas. [DRAW]
  58  887E 00           Columns db 0  											; Nº de columnas. [DRAW]
  59  887F 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  60  8881 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  61  8883 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  62  8884 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  63  8885
  64  8885              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  65  8885
  66  8885 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  67  8886              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  68  8886              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  69  8886 00           Attr db 0												; Atributos de la entidad:
  70  8887
  71  8887              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  72  8887              ;
  73  8887              ;	COLORES: 0 ..... NEGRO
  74  8887              ;    		 1 ..... AZUL
  75  8887              ; 			 2 ..... ROJO
  76  8887              ;			 3 ..... MAGENTA
  77  8887              ; 			 4 ..... VERDE
  78  8887              ; 			 5 ..... CIAN
  79  8887              ;			 6 ..... AMARILLO
  80  8887              ; 			 7 ..... BLANCO
  81  8887
  82  8887 00 00        Indice_Sprite_der defw 0
  83  8889 00 00        Indice_Sprite_izq defw 0
  84  888B 00 00        Puntero_DESPLZ_der defw 0
  85  888D 00 00        Puntero_DESPLZ_izq defw 0
  86  888F
  87  888F 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  88  8891 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  89  8892
  90  8892              ; Variables de objeto. (Características).
  91  8892
  92  8892 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  93  8893 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  94  8894 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  95  8895 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  96  8896
  97  8896 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  98  8897              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  99  8897              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 100  8897 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  8899 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 102  889B 00 00        	defw 0
 103  889D 00 00 00 00  	db 0,0,0,0
 104  88A1
 105  88A1 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 106  88A3 00 00        	defw 0
 107  88A5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  88A7 00 00 00 00  	db 0,0,0,0
 109  88AB
 110  88AB              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 111  88AB
 112  88AB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 113  88AC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 114  88AC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 115  88AC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 116  88AC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 117  88AC              ;
 118  88AC              ; 														DESCRIPCIÖN:
 119  88AC              ;
 120  88AC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 121  88AC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 122  88AC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 123  88AC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 124  88AC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 125  88AC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 126  88AC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 127  88AC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 128  88AC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 129  88AC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 130  88AC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 131  88AC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 132  88AC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 133  88AC              ;
 134  88AC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 135  88AC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 136  88AC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 137  88AC
 138  88AC 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 139  88AD
 140  88AD              ; Movimiento.
 141  88AD
 142  88AD 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 143  88AE 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 144  88B0 00 00        Puntero_mov defw 0
 145  88B2 00           Contador_db_mov db 0
 146  88B3 00           Incrementa_puntero db 0
 147  88B4 00           Repetimos_db db 0
 148  88B5
 149  88B5              ; Variables de funcionamiento. [DRAW].
 150  88B5
 151  88B5 00           Columnas db 0
 152  88B6 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 153  88B8              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 154  88B8 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  88B9
 156  88B9              ; variables de control general.
 157  88B9
 158  88B9 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 159  88BA
 160  88BA              ; 61 Bytes por entidad.
 161  88BA              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 162  88BA              ;					         		---------;      ;---------
 163  88BA
 164  88BA
 165  88BA              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 166  88BA
 167  88BA 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 168  88BB
 169  88BB              ;														DESCRIPCIÓN:
 170  88BB              ;
 171  88BB              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 172  88BB              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 173  88BB              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 174  88BB              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 175  88BB              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 176  88BB              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 177  88BB              ;														BIT 3, .............
 178  88BB              ;														BIT 4, .............
 179  88BB
 180  88BB              ; Gestión de ENTIDADES y CAJAS.
 181  88BB
 182  88BB              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  88BB 00 00        Puntero_store_caja defw 0
 184  88BD 00 00        Puntero_restore_caja defw 0
 185  88BF 00 00        Indice_restore_caja defw 0
 186  88C1 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 187  88C2 00           Numero_parcial_de_entidades db 0
 188  88C3 00           Entidades_en_curso db 0									; ..... ..... .....
 189  88C4 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 190  88C5              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 191  88C5              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 192  88C5              ;														; _ (Numero_de_malotes)="0".
 193  88C5 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 194  88C7 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 195  88C9              ;														; _ puntero (Indice_entidades).
 196  88C9
 197  88C9
 198  88C9              ;---------------------------------------------------------------------------------------------------------------
 199  88C9              ;
 200  88C9              ; Sirven para PINTAR.
 201  88C9
 202  88C9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 203  88CB              ;														; _variable para almacenar lo posición del puntero_
 204  88CB              ; 														; _de pila, SP.
 205  88CB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 206  88CD              ;														; La utiliza la rutina [Extrae_foto_registros].
 207  88CD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 208  88CF              ;														; _el snapshot de los registros de la siguiente entidad.
 209  88CF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 210  88CF 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 211  88D1              ;														; _el snapshot de los registros del siguiente disparo.
 212  88D1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 213  88D1
 214  88D1              ;---------------------------------------------------------------------------------------------------------------
 215  88D1
 216  88D1              ; Gestión de Disparos.
 217  88D1
 218  88D1 00           Numero_de_disparotes db 0
 219  88D2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 220  88D4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 221  88D6 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 222  88D7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 223  88D7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 224  88D7 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 225  88D9              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 226  88D9              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 227  88D9              ;														; _produzca colisión.
 228  88D9 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 229  88DB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 230  88DB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 231  88DE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 232  88DE 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 233  88E1              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 234  88E1
 235  88E1              ;---------------------------------------------------------------------------------------------------------------
 236  88E1
 237  88E1              ; Relojes y temporizaciones.
 238  88E1
 239  88E1 00           Contador_de_frames db 0
 240  88E2 00           Secundero db 0
 241  88E3 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 242  88E4              ;														; Repite la oleada de entidades.
 243  88E4 01           Habilita_disparo_Amadeus db 1
 244  88E5 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 245  88E6 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 246  88E7
 247  88E7 01           Habilita_disparo_entidad db 1
 248  88E8 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 249  88E9 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 250  88EA
 251  88EA              ;---------------------------------------------------------------------------------------------------------------
 252  88EA
 253  88EA              ; Gestión de FRAMES.
 254  88EA
 255  88EA 00           Switch db 0
 256  88EB
 257  88EB              ; Variables de Raster y localización en pantalla.
 258  88EB
 259  88EB 00 FF        Temp_Raster defw $ff00
 260  88ED
 261  88ED              ;---------------------------------------------------------------------------------------------------------------
 262  88ED
 263  88ED              ; Gestión de NIVELES.
 264  88ED
 265  88ED 00           Nivel db 0												 ; Nivel actual del juego.
 266  88EE 00 00        Puntero_indice_NIVELES defw 0
 267  88F0 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 268  88F2              ; 														 ; _ que definen el NIVEL.
 269  88F2
 270  88F2
 271  88F2              ; Y todo comienza aquí .....
 272  88F2              ;
 273  88F2              ; Rutina principal *************************************************************************************************************************************************************************
 274  88F2              ;
 275  88F2              ;	14/11/22
 276  88F2
 277  88F2              START
 278  88F2
 279  88F2 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 280  88F5 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 281  88F7 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 282  88F9 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 283  88FB F3           	DI
 284  88FC
 285  88FC 3E 07        	ld a,%00000111
 286  88FE CD C1 96     	call Cls
 287  8901
 288  8901              ;	call Pinta_marco
 289  8901
 290  8901 CD D6 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 291  8904 CD 6B 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 292  8907
 293  8907 CD E8 87     4 call Prepara_cajas
 294  890A
 295  890A CD 3E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 296  890D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 297  890D CD 1B 8C     	call Restore_entidad
 298  8910
 299  8910 21 C2 88     	ld hl,Numero_parcial_de_entidades
 300  8913 46           	ld b,(hl)
 301  8914 04           	inc b
 302  8915 05           	dec b
 303  8916 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 304  8918
 305  8918              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 306  8918              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 307  8918              ;	Pintamos el resto de entidades:
 308  8918
 309  8918              ;	INICIA ENTIDADES !!!!!
 310  8918 C5           1 push bc  												; Guardo el contador de entidades.
 311  8919 CD 98 8B      	call Inicia_Puntero_objeto
 312  891C CD D5 96     	call Recompone_posicion_inicio
 313  891F CD 11 91     	call Draw
 314  8922 CD A0 7F     	call Guarda_foto_registros
 315  8925 CD E0 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 316  8928 C1           	pop bc
 317  8929 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 318  892B
 319  892B              ;	call Pinta_marco
 320  892B
 321  892B              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 322  892B
 323  892B 3A BA 88     	ld a,(Ctrl_1)
 324  892E CB 5F        	bit 3,a
 325  8930 20 18        	jr nz,5F											; Loop
 326  8932
 327  8932              ; 	INICIA AMADEUS !!!!!
 328  8932
 329  8932 CD 42 8C     3 call Restore_Amadeus
 330  8935 CD 98 8B     	call Inicia_Puntero_objeto
 331  8938 CD 11 91     	call Draw
 332  893B CD A0 7F     	call Guarda_foto_registros
 333  893E 11 80 84     	ld de,Amadeus_db
 334  8941 CD 54 8C     	call Store_Amadeus
 335  8944
 336  8944              ; 	INICIA DISPAROS !!!!!
 337  8944
 338  8944 CD 54 8B     	call Inicia_Puntero_Disparo_Entidades
 339  8947 CD 5B 8B     	call Inicia_Puntero_Disparo_Amadeus
 340  894A
 341  894A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 342  894A
 343  894A CD 3E 8B     5 call Inicia_punteros_de_cajas
 344  894D CD 1B 8C     	call Restore_entidad
 345  8950
 346  8950 3A BA 88     	ld a,(Ctrl_1)
 347  8953 CB 5F        	bit 3,a
 348  8955 28 0A        	jr z,6F
 349  8957
 350  8957              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 351  8957
 352  8957 21 BA 88     	ld hl,Ctrl_1
 353  895A CB 9E        	res 3,(hl)
 354  895C CD 62 8B     	call Calcula_numero_de_malotes
 355  895F 18 07        	jr 7F
 356  8961
 357  8961              ; ----------
 358  8961
 359  8961 3A C2 88     6 ld a,(Numero_parcial_de_entidades)
 360  8964 3C           	inc a
 361  8965 32 C4 88     	ld (Numero_de_malotes),a
 362  8968
 363  8968 AF           7 xor a
 364  8969 FB           2 ei
 365  896A 28 FD        	jr z,2B
 366  896C
 367  896C 3A E2 88     	ld a,(Secundero)
 368  896F 47           	ld b,a
 369  8970 3A E3 88     	ld a,(Activa_recarga_cajas)
 370  8973 B8           	cp b
 371  8974 28 08        	jr z,8F
 372  8976
 373  8976 21 BA 88     	ld hl,Ctrl_1
 374  8979 CB E6        	set 4,(hl)
 375  897B AF           	xor a
 376  897C 18 EB        	jr 2B
 377  897E
 378  897E 21 BA 88     8 ld hl,Ctrl_1
 379  8981 CB A6        	res 4,(hl)
 380  8983 F3           	di
 381  8984
 382  8984 C3 07 89     	jp 4B
 383  8987
 384  8987              ; -----------------------------------------------------------------------------------
 385  8987
 386  8987              Frame
 387  8987
 388  8987              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 389  8987              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 390  8987
 391  8987              ; PINTAMOS.
 392  8987
 393  8987 3E 02            ld a,2
 394  8989 D3 FE            out ($fe),a
 395  898B CD 15 94     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 396  898E CD 4E 94     	call Extrae_foto_disparos
 397  8991 3E 01            ld a,1
 398  8993 D3 FE            out ($fe),a
 399  8995
 400  8995              ;	jr $
 401  8995
 402  8995              ; ----------------------------------------------------------------------
 403  8995
 404  8995              ; RELOJES.
 405  8995
 406  8995 21 E1 88     	ld hl,Contador_de_frames
 407  8998 34           	inc (hl)											; 0 - 255
 408  8999
 409  8999 3E 3C        	ld a,60
 410  899B BE           	cp (hl)
 411  899C 20 1D        	jr nz,13F
 412  899E
 413  899E 36 00        	ld (hl),0
 414  89A0
 415  89A0 21 E2 88     	ld hl,Secundero
 416  89A3 34           	inc (hl)
 417  89A4
 418  89A4              ;	ld a,(hl)
 419  89A4              ;	and %00000001
 420  89A4              ;	jr nz,20F
 421  89A4
 422  89A4 3A C2 88     	ld a,(Numero_parcial_de_entidades)
 423  89A7 47           	ld b,a
 424  89A8 3A C3 88     	ld a,(Entidades_en_curso)
 425  89AB B8           	cp b
 426  89AC 28 06        	jr z,20F
 427  89AE 30 04        	jr nc,20F
 428  89B0
 429  89B0 3C           	inc a
 430  89B1 32 C3 88     	ld (Entidades_en_curso),a
 431  89B4
 432  89B4 3E 3C        20 ld a,60
 433  89B6 BE           	cp (hl)
 434  89B7 20 02        	jr nz,13F
 435  89B9
 436  89B9 36 00        	ld (hl),0
 437  89BB
 438  89BB 21 E4 88     13 ld hl,Habilita_disparo_Amadeus
 439  89BE 11 E6 88     	ld de,Temporiza_disparo_Amadeus
 440  89C1 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 441  89C4
 442  89C4 21 E7 88     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 443  89C7 11 E9 88     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 444  89CA CD D5 7F     	call Habilita_disparos
 445  89CD
 446  89CD              ; COLISIONES.
 447  89CD
 448  89CD CD AB 90     	call Selector_de_impactos
 449  89D0
 450  89D0              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 451  89D0              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 452  89D0              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 453  89D0
 454  89D0 AF           	xor a
 455  89D1 32 D6 88     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 456  89D4
 457  89D4 CD 3E 8B     	call Inicia_punteros_de_cajas
 458  89D7 CD 1B 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 459  89DA              ; 														; _ en DRAW.
 460  89DA 3A 7D 88     	ld a,(Filas)
 461  89DD A7           	and a
 462  89DE 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 463  89E0 CD 2D 8C     	call Incrementa_punteros_de_cajas
 464  89E3 18 F2        	jr 12B
 465  89E5
 466  89E5              ; ---------------------------------------------------------------------------------------
 467  89E5
 468  89E5 CD 29 8F     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 469  89E8 21 00 70     	ld hl,Album_de_fotos
 470  89EB 22 CD 88         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 471  89EE              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 472  89EE 3A C2 88     	ld a,(Numero_parcial_de_entidades)
 473  89F1 47               ld b,a
 474  89F2 A7           	and a
 475  89F3 20 16        	jr nz,2F
 476  89F5
 477  89F5 21 BA 88     	ld hl,Ctrl_1
 478  89F8 CB 66        	bit 4,(hl)
 479  89FA C2 73 8A     	jp nz,4F
 480  89FD
 481  89FD 21 BA 88     	ld hl,Ctrl_1
 482  8A00 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 483  8A02 3A E2 88     	ld a,(Secundero)
 484  8A05 3C           	inc a
 485  8A06 32 E3 88     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 486  8A09
 487  8A09 18 68        	jr 4F
 488  8A0B
 489  8A0B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 490  8A0B
 491  8A0B              ; Código que ejecutamos con cada entidad:
 492  8A0B
 493  8A0B              ; Impacto ???
 494  8A0B
 495  8A0B 3A C3 88     2 ld a,(Entidades_en_curso)
 496  8A0E A7           	and a
 497  8A0F 28 62        	jr z,4F
 498  8A11 47           	ld b,a
 499  8A12
 500  8A12 C5           15 push bc 												; Nº de entidades en curso.
 501  8A13
 502  8A13 3A 96 88     	ld a,(Impacto)
 503  8A16 A7           	and a
 504  8A17 28 14        	jr z,8F
 505  8A19
 506  8A19              ; Hay Impacto en esta entidad.
 507  8A19
 508  8A19 CD F5 8A     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 509  8A1C CD 5D 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 510  8A1F
 511  8A1F              ; -----
 512  8A1F
 513  8A1F 21 C2 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 514  8A22 35           	dec (hl)
 515  8A23 21 C3 88     	ld hl,Entidades_en_curso
 516  8A26 35           	dec (hl)
 517  8A27 21 C1 88     	ld hl,Numero_de_entidades
 518  8A2A 35           	dec (hl)
 519  8A2B 18 27        	jr 7F
 520  8A2D
 521  8A2D              ; -----
 522  8A2D
 523  8A2D              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 524  8A2D              ; _con las coordenadas de la entidad almacenada en DRAW.
 525  8A2D
 526  8A2D 3A BA 88     8 ld a,(Ctrl_1)
 527  8A30 CB 57        	bit 2,a
 528  8A32 28 20        	jr z,7F
 529  8A34
 530  8A34 2A D9 88     	ld hl,(Coordenadas_disparo_certero)
 531  8A37 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 532  8A38              ;														; E contiene la coordenada_X del disparo.
 533  8A38 2A 83 88     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 534  8A3B              ;														; H Coordenado_y de la entidad.
 535  8A3B A7           	and a
 536  8A3C ED 52        	sbc hl,de
 537  8A3E
 538  8A3E CD E2 90     	call Determina_resultado_comparativa
 539  8A41 04           	inc b
 540  8A42 05           	dec b
 541  8A43
 542  8A43              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 543  8A43              ;	jr z,$
 544  8A43              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 545  8A43
 546  8A43 28 0F        	jr z,7F
 547  8A45
 548  8A45              ; ----- ----- -----
 549  8A45
 550  8A45 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 551  8A47 32 96 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 552  8A4A 21 BA 88     	ld hl,Ctrl_1
 553  8A4D CB 96        	res 2,(hl)
 554  8A4F 21 D9 88     	ld hl,Coordenadas_disparo_certero
 555  8A52 36 00        	ld (hl),0
 556  8A54
 557  8A54
 558  8A54 CD A6 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 559  8A57
 560  8A57 3A AB 88     	ld a,(Ctrl_0)
 561  8A5A CB 67        	bit 4,a
 562  8A5C 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 563  8A5E
 564  8A5E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 565  8A5E              ; [[[
 566  8A5E CD B6 8C     	call Detecta_disparo_entidad
 567  8A61              ; ]]]
 568  8A61 CD 05 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 569  8A64
 570  8A64 21 AB 88     	ld hl,Ctrl_0
 571  8A67 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 572  8A69 AF           	xor a
 573  8A6A 32 AC 88     	ld (Obj_dibujado),a
 574  8A6D
 575  8A6D CD E0 8B     6 call Store_Restore_cajas
 576  8A70
 577  8A70 C1           	pop bc
 578  8A71 10 9F        	djnz 15B
 579  8A73
 580  8A73              ; Tras la gestión de las entidades, ... AMADEUS.
 581  8A73
 582  8A73 CD 42 8C     4 call Restore_Amadeus
 583  8A76
 584  8A76 3A 96 88     	ld a,(Impacto)
 585  8A79 A7           	and a
 586  8A7A 20 FE        	jr nz,$
 587  8A7C
 588  8A7C              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 589  8A7C
 590  8A7C CD D6 8A     	call Mov_Amadeus
 591  8A7F
 592  8A7F 3A AB 88     	ld a,(Ctrl_0)
 593  8A82 CB 67        	bit 4,a
 594  8A84 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 595  8A86
 596  8A86 CD 05 8B     	call Guarda_foto_entidad_a_pintar
 597  8A89
 598  8A89 21 AB 88     3 ld hl,Ctrl_0
 599  8A8C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 600  8A8E AF           	xor a
 601  8A8F 32 AC 88     	ld (Obj_dibujado),a
 602  8A92
 603  8A92 11 80 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 604  8A95 CD 54 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 605  8A98
 606  8A98 CD 47 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 607  8A9B
 608  8A9B              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 609  8A9B
 610  8A9B CD 7A 8B     	call Calcula_numero_de_disparotes
 611  8A9E CD 62 8B     9 call Calcula_numero_de_malotes
 612  8AA1
 613  8AA1 3E 04        	ld a,4
 614  8AA3 D3 FE        	out ($fe),a
 615  8AA5
 616  8AA5 C9           	ret
 617  8AA6
 618  8AA6              ; --------------------------------------------------------------------------------------------------------------
 619  8AA6              ;
 620  8AA6              ;	27/03/23
 621  8AA6
 622  8AA6              Mov_obj
 623  8AA6
 624  8AA6              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 625  8AA6
 626  8AA6 AF           	xor a
 627  8AA7 32 AC 88     	ld (Obj_dibujado),a
 628  8AAA 32 AB 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 629  8AAD              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 630  8AAD              ; 														; _de la entidad.
 631  8AAD CD 0F 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 632  8AB0              ;														; Obj_dibujado="0".
 633  8AB0              ; Movemos Entidades malignas.
 634  8AB0
 635  8AB0 21 AE 88     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 636  8AB3 34           	inc (hl)
 637  8AB4 35           	dec (hl)                                            ; Salimos de la rutina.
 638  8AB5 C8           	ret z
 639  8AB6
 640  8AB6 CD C3 9A     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 641  8AB9
 642  8AB9 3A AB 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 643  8ABC CB 67        	bit 4,a
 644  8ABE C8           	ret z
 645  8ABF
 646  8ABF              ; Ha habido desplazamiento de la entidad maligna.
 647  8ABF              ; Ha llegado a zona de AMADEUS ???
 648  8ABF
 649  8ABF 3A 84 88     	ld a,(Coordenada_y)
 650  8AC2 FE 14        	cp $14
 651  8AC4 D4 78 8E     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 652  8AC7              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 653  8AC7              ; ---------
 654  8AC7
 655  8AC7 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 656  8AC9 32 AC 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 657  8ACC CD 0F 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 658  8ACF CD 26 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 659  8AD2 CD F5 8A     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 660  8AD5 C9           	ret													; _de la misma.
 661  8AD6
 662  8AD6              ; --------------------------------------------------------------------------------------------------------------
 663  8AD6              ;
 664  8AD6              ;	29/1/23
 665  8AD6
 666  8AD6              Mov_Amadeus
 667  8AD6
 668  8AD6 AF           	xor a
 669  8AD7 32 AC 88     	ld (Obj_dibujado),a
 670  8ADA CD 0F 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 671  8ADD              ;														; Obj_dibujado="0".
 672  8ADD              ; Movemos Amadeus.
 673  8ADD
 674  8ADD CD 7F 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 675  8AE0 3A AB 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 676  8AE3 CB 67        	bit 4,a
 677  8AE5 C8           	ret z
 678  8AE6
 679  8AE6              ; ---------
 680  8AE6
 681  8AE6 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 682  8AE8 32 AC 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 683  8AEB CD 0F 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 684  8AEE CD 26 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 685  8AF1 CD F5 8A     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 686  8AF4 C9           	ret													; _de la nave.
 687  8AF5
 688  8AF5              ; --------------------------------------------------------------------------------------------------------------
 689  8AF5              ;
 690  8AF5              ;	31/01/23
 691  8AF5              ;
 692  8AF5              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 693  8AF5
 694  8AF5              Guarda_foto_entidad_a_borrar
 695  8AF5
 696  8AF5 CD EB 93     	call Prepara_draw
 697  8AF8 CD 25 93     	call calcula_CColumnass
 698  8AFB CD 5C 93     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 699  8AFE CD B1 93     	call Define_rutina_de_impresion
 700  8B01 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 701  8B04 C9           	ret
 702  8B05
 703  8B05              ; --------------------------------------------------------------------------------------------------------------
 704  8B05              ;
 705  8B05              ;	31/01/23
 706  8B05              ;
 707  8B05              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 708  8B05              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 709  8B05
 710  8B05              Guarda_foto_entidad_a_pintar
 711  8B05
 712  8B05 CD 32 8B     	call Repone_pintar
 713  8B08 CD 11 91     	call Draw
 714  8B0B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 715  8B0E C9           	ret
 716  8B0F
 717  8B0F              ; --------------------------------------------------------------------------------------------------------------
 718  8B0F              ;
 719  8B0F              ;
 720  8B0F
 721  8B0F 21 7D 88     Prepara_var_pintado_borrado	ld hl,Filas
 722  8B12 3A AC 88     	ld a,(Obj_dibujado)
 723  8B15 A7           	and a
 724  8B16 28 05        	jr z,1F
 725  8B18 11 A1 88     	ld de,Variables_de_pintado
 726  8B1B 18 03        	jr 2F
 727  8B1D 11 97 88     1 ld de,Variables_de_borrado
 728  8B20 01 08 00     2 ld bc,8
 729  8B23 ED B0        	ldir
 730  8B25 C9           	ret
 731  8B26
 732  8B26              ; --------------------------------------------------------------------------------------------------------------
 733  8B26
 734  8B26 21 97 88     Repone_borrar ld hl,Variables_de_borrado
 735  8B29 11 7D 88     	ld de,Filas
 736  8B2C 01 08 00     	ld bc,8
 737  8B2F ED B0        	ldir
 738  8B31 C9           	ret
 739  8B32
 740  8B32 21 A1 88     Repone_pintar ld hl,Variables_de_pintado
 741  8B35 11 7D 88     	ld de,Filas
 742  8B38 01 08 00     	ld bc,8
 743  8B3B ED B0        	ldir
 744  8B3D C9           	ret
 745  8B3E
 746  8B3E              ; *************************************************************************************************************************************************************
 747  8B3E              ;
 748  8B3E              ; 8/1/23
 749  8B3E              ;
 750  8B3E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 751  8B3E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 752  8B3E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 753  8B3E
 754  8B3E              ; Destruye HL y DE !!!!!
 755  8B3E
 756  8B3E              Inicia_punteros_de_cajas
 757  8B3E
 758  8B3E 21 68 84     	ld hl,Indice_de_cajas
 759  8B41 CD 92 8B         call Extrae_address
 760  8B44 22 BB 88         ld (Puntero_store_caja),hl
 761  8B47 21 6A 84     	ld hl,Indice_de_cajas+2
 762  8B4A 22 BF 88     	ld (Indice_restore_caja),hl
 763  8B4D CD 92 8B     	call Extrae_address
 764  8B50 22 BD 88     	ld (Puntero_restore_caja),hl
 765  8B53 C9               ret
 766  8B54
 767  8B54              ; *************************************************************************************************************************************************************
 768  8B54              ;
 769  8B54              ; 8/1/23
 770  8B54              ;
 771  8B54              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 772  8B54
 773  8B54 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 774  8B57 22 D2 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 775  8B5A C9           	ret
 776  8B5B 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 777  8B5E 22 D4 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 778  8B61 C9           	ret
 779  8B62
 780  8B62              ; -------------------------------------------------------------------------------------------------------------
 781  8B62              ;
 782  8B62              ; 28/2/23
 783  8B62              ;
 784  8B62
 785  8B62              Calcula_numero_de_malotes
 786  8B62
 787  8B62 21 00 70     	ld hl,Album_de_fotos
 788  8B65 EB           	ex de,hl
 789  8B66 2A CD 88     	ld hl,(Stack_snapshot)
 790  8B69
 791  8B69 06 00        	ld b,0
 792  8B6B 7D           	ld a,l
 793  8B6C 93           	sub e
 794  8B6D 28 07        	jr z,1F
 795  8B6F
 796  8B6F              ; Nº de malotes no es "0".
 797  8B6F
 798  8B6F D6 06        2 sub 6
 799  8B71 04           	inc b
 800  8B72 A7           	and a
 801  8B73 20 FA        	jr nz,2B
 802  8B75 78           	ld a,b
 803  8B76
 804  8B76 32 C4 88     1 ld (Numero_de_malotes),a
 805  8B79 C9           	ret
 806  8B7A
 807  8B7A              ; -------------------------------------------------------------------------------------------------------------
 808  8B7A              ;
 809  8B7A              ; 28/2/23
 810  8B7A              ;
 811  8B7A
 812  8B7A              Calcula_numero_de_disparotes
 813  8B7A
 814  8B7A 21 85 70     	ld hl,Album_de_fotos_disparos
 815  8B7D EB           	ex de,hl
 816  8B7E 2A CF 88     	ld hl,(Stack_snapshot_disparos)
 817  8B81
 818  8B81 06 00        	ld b,0
 819  8B83 7D           	ld a,l
 820  8B84 93           	sub e
 821  8B85 28 07        	jr z,1F
 822  8B87
 823  8B87              ; Nº de malotes no es "0".
 824  8B87
 825  8B87 D6 06        2 sub 6
 826  8B89 04           	inc b
 827  8B8A A7           	and a
 828  8B8B 20 FA        	jr nz,2B
 829  8B8D 78           	ld a,b
 830  8B8E
 831  8B8E 32 D1 88     1 ld (Numero_de_disparotes),a
 832  8B91 C9           	ret
 833  8B92              ; *************************************************************************************************************************************************************
 834  8B92              ;
 835  8B92              ; 20/10/22
 836  8B92              ;
 837  8B92              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 838  8B92              ;
 839  8B92              ; Destruye el puntero y DE !!!!!
 840  8B92
 841  8B92 5E           Extrae_address ld e,(hl)
 842  8B93 23           	inc hl
 843  8B94 56           	ld d,(hl)
 844  8B95 2B           	dec hl
 845  8B96 EB           	ex de,hl
 846  8B97 C9           	ret
 847  8B98
 848  8B98              ; *************************************************************************************************************************************************************
 849  8B98              ;
 850  8B98              ;	7/2/23
 851  8B98              ;
 852  8B98              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 853  8B98              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 854  8B98              ;
 855  8B98              ;   Destruye HL y BC !!!!!,
 856  8B98              ;
 857  8B98              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 858  8B98              ;					"0" ..... Izquierda.
 859  8B98
 860  8B98              Inicia_Puntero_objeto
 861  8B98
 862  8B98 3A 91 88     	ld a,(Cuad_objeto)
 863  8B9B E6 01        	and 1
 864  8B9D F5           	push af
 865  8B9E CC BC 8B     	call z,Inicia_puntero_objeto_izq
 866  8BA1 F1           	pop af
 867  8BA2 28 2B        	jr z,1F
 868  8BA4 CD A9 8B     	call Inicia_puntero_objeto_der
 869  8BA7 18 26        	jr 1F
 870  8BA9
 871  8BA9              ; Arrancamos desde la parte izquierda de la pantalla.
 872  8BA9              ; Iniciamos (Indice_Sprite_der).
 873  8BA9
 874  8BA9 2A 87 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 875  8BAC 22 8B 88     	ld (Puntero_DESPLZ_der),hl
 876  8BAF CD 92 8B     	call Extrae_address
 877  8BB2 22 81 88     	ld (Puntero_objeto),hl
 878  8BB5
 879  8BB5 2A 89 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 880  8BB8 22 8D 88     	ld (Puntero_DESPLZ_izq),hl
 881  8BBB C9           	ret
 882  8BBC
 883  8BBC              ; Arrancamos desde la parte derecha de la pantalla.
 884  8BBC              ; Iniciamos (Indice_Sprite_izq).
 885  8BBC
 886  8BBC 2A 89 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 887  8BBF 22 8D 88     	ld (Puntero_DESPLZ_izq),hl
 888  8BC2 CD 92 8B     	call Extrae_address
 889  8BC5 22 81 88     	ld (Puntero_objeto),hl
 890  8BC8
 891  8BC8 2A 87 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 892  8BCB 22 8B 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 893  8BCE C9           	ret
 894  8BCF
 895  8BCF              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 896  8BCF
 897  8BCF 21 38 83     1 ld hl,Amadeus
 898  8BD2 ED 4B 81 88  	ld bc,(Puntero_objeto)
 899  8BD6 B7 ED 42     	sub hl,bc
 900  8BD9 C0           	ret nz
 901  8BDA 21 AB 88     	ld hl,Ctrl_0
 902  8BDD CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 903  8BDF C9           	ret 												; _de nuestra nave en los extremos.
 904  8BE0
 905  8BE0              ; *************************************************************************************************************************************************************
 906  8BE0              ;
 907  8BE0              ;	14/5/23
 908  8BE0              ;
 909  8BE0              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 910  8BE0              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 911  8BE0
 912  8BE0              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 913  8BE0              ;	_de la 2ª y 3ª entidad respectivamente.
 914  8BE0
 915  8BE0              Store_Restore_cajas
 916  8BE0
 917  8BE0 E5           	push hl
 918  8BE1 D5           	push de
 919  8BE2 C5            	push bc
 920  8BE3
 921  8BE3              ;	STORE !!!!!
 922  8BE3              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 923  8BE3
 924  8BE3 21 7D 88     	ld hl,Filas
 925  8BE6 ED 5B BB 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 926  8BEA 01 3D 00     	ld bc,61
 927  8BED ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 928  8BEF
 929  8BEF              ; 	Entidad_sospechosa. 20/4/23
 930  8BEF
 931  8BEF 3A 96 88     	ld a,(Impacto)
 932  8BF2 A7           	and a
 933  8BF3 28 0C        	jr z,1F
 934  8BF5
 935  8BF5 2A BB 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 936  8BF8 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 937  8BFB A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 938  8BFC ED 4A        	adc hl,bc 											; _ "0" más adelante.
 939  8BFE 22 D7 88     	ld (Entidad_sospechosa_de_colision),hl
 940  8C01
 941  8C01              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 942  8C01
 943  8C01 2A BD 88     1 ld hl,(Puntero_restore_caja)
 944  8C04 7E           	ld a,(hl)
 945  8C05 A7           	and a
 946  8C06 F5           	push af
 947  8C07 28 08        	jr z,2F
 948  8C09
 949  8C09 11 7D 88     	ld de,Filas
 950  8C0C 01 3D 00     	ld bc,61
 951  8C0F ED B0        	ldir
 952  8C11
 953  8C11 CD 2D 8C     2 call Incrementa_punteros_de_cajas
 954  8C14 F1           	pop af
 955  8C15 28 EA        	jr z,1B
 956  8C17
 957  8C17 C1           	pop bc
 958  8C18 D1           	pop de
 959  8C19 E1           	pop hl
 960  8C1A
 961  8C1A C9           	ret
 962  8C1B
 963  8C1B              ; **************************************************************************************************
 964  8C1B              ;
 965  8C1B              ;	12/05/23
 966  8C1B              ;
 967  8C1B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 968  8C1B
 969  8C1B E5           Restore_entidad push hl
 970  8C1C D5           	push de
 971  8C1D C5            	push bc
 972  8C1E
 973  8C1E 2A BB 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 974  8C21 11 7D 88     	ld de,Filas
 975  8C24 01 3D 00     	ld bc,61
 976  8C27 ED B0        	ldir
 977  8C29
 978  8C29 C1           	pop bc
 979  8C2A D1           	pop de
 980  8C2B E1           	pop hl
 981  8C2C C9           	ret
 982  8C2D
 983  8C2D
 984  8C2D              ; **************************************************************************************************
 985  8C2D              ;
 986  8C2D              ;	08/05/23
 987  8C2D              ;
 988  8C2D              ;	Incrementamos los dos punteros de entidades. (+1).
 989  8C2D
 990  8C2D 2A BD 88     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 991  8C30 22 BB 88     	ld (Puntero_store_caja),hl
 992  8C33 2A BF 88     	ld hl,(Indice_restore_caja)
 993  8C36 23           	inc hl
 994  8C37 23           	inc hl
 995  8C38 22 BF 88     	ld (Indice_restore_caja),hl
 996  8C3B CD 92 8B         call Extrae_address
 997  8C3E 22 BD 88         ld (Puntero_restore_caja),hl
 998  8C41 C9               ret
 999  8C42
1000  8C42              ; **************************************************************************************************
1001  8C42              ;
1002  8C42              ;	25/01/23
1003  8C42              ;
1004  8C42              ;	Restore_Amadeus
1005  8C42              ;
1006  8C42              ;	Cargamos en DRAW los parámetros de Amadeus.
1007  8C42              ;
1008  8C42
1009  8C42 E5           Restore_Amadeus	push hl
1010  8C43 D5           	push de
1011  8C44 C5            	push bc
1012  8C45 21 80 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1013  8C48 11 7D 88     	ld de,Filas
1014  8C4B 01 3D 00     	ld bc,61
1015  8C4E ED B0        	ldir
1016  8C50 C1           	pop bc
1017  8C51 D1           	pop de
1018  8C52 E1           	pop hl
1019  8C53 C9           	ret
1020  8C54
1021  8C54              ; *************************************************************************************************************************************************************
1022  8C54              ;
1023  8C54              ;	29/04/23
1024  8C54              ;
1025  8C54              ;	Store_Amadeus
1026  8C54              ;
1027  8C54              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1028  8C54              ;
1029  8C54              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1030  8C54              ;
1031  8C54              ;	DESTRUYE: HL y BC y DE.
1032  8C54
1033  8C54 21 7D 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1034  8C57 01 3D 00     	ld bc,61
1035  8C5A ED B0        	ldir
1036  8C5C C9           	ret
1037  8C5D
1038  8C5D              ; -----------------------------------------------------------
1039  8C5D              ;
1040  8C5D              ;	27/04/23
1041  8C5D              ;
1042  8C5D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1043  8C5D              ;
1044  8C5D              ;	Destruye: HL,BC,DE,A
1045  8C5D
1046  8C5D 21 7D 88     Borra_datos_entidad ld hl,Filas
1047  8C60 01 3C 00     	ld bc,60
1048  8C63 AF           	xor a
1049  8C64 77           	ld (hl),a
1050  8C65 11 7E 88     	ld de,Filas+1
1051  8C68 ED B0        	ldir
1052  8C6A C9           	ret
1053  8C6B
1054  8C6B              ; -----------------------------------------------------------
1055  8C6B
1056  8C6B              ; Teclado.
1057  8C6B
1058  8C6B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1059  8C6D DB FE        	in a,($fe)
1060  8C6F E6 01        	and $01
1061  8C71 28 02        	jr z,1f
1062  8C73 18 F6        	jr Pulsa_ENTER
1063  8C75 C9           1 ret
1064  8C76
1065  8C76              ; **************************************************************************************************
1066  8C76              ;
1067  8C76              ; Temporización.
1068  8C76
1069  8C76              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1070  8C76              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1071  8C76              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1072  8C76              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1073  8C76
1074  8C76              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1075  8C76              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1076  8C76              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1077  8C76
1078  8C76              ; A partir de $4f61 no hace falta DELAY.
1079  8C76
1080  8C76              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1081  8C76
1082  8C76 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1083  8C79 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1084  8C7A 78           	LD A,B
1085  8C7B A7           	AND A
1086  8C7C 20 FB        	JR NZ,wait
1087  8C7E C9           	RET
1088  8C7F
1089  8C7F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1090  8C7F              ;
1091  8C7F              ;	5/3/23
1092  8C7F              ;
1093  8C7F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1094  8C7F
1095  8C7F              Movimiento_Amadeus
1096  8C7F
1097  8C7F              ; Disparo.
1098  8C7F
1099  8C7F 3A E4 88     	ld a,(Habilita_disparo_Amadeus)
1100  8C82 A7           	and a
1101  8C83 20 02        	jr nz,1F
1102  8C85 18 15        	jr 2F
1103  8C87
1104  8C87 3E F7        1 ld a,$f7													; "5" para disparar.
1105  8C89 DB FE        	in a,($fe)
1106  8C8B E6 10        	and $10
1107  8C8D
1108  8C8D F5           	push af
1109  8C8E CC F4 8C     	call z,Genera_disparo
1110  8C91 F1           	pop af
1111  8C92 20 08        	jr nz,2F
1112  8C94
1113  8C94 3A E4 88     	ld a,(Habilita_disparo_Amadeus)
1114  8C97 EE 01        	xor 1
1115  8C99 32 E4 88     	ld (Habilita_disparo_Amadeus),a
1116  8C9C
1117  8C9C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1118  8C9E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1119  8CA0 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1120  8CA2 CC 63 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1121  8CA5 3E F7        	ld a,$f7
1122  8CA7 DB FE        	in a,($fe)
1123  8CA9 E6 01        	and $01
1124  8CAB C8           	ret z
1125  8CAC
1126  8CAC 3E F7        	ld a,$f7
1127  8CAE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1128  8CB0 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1129  8CB2 CC 45 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1130  8CB5 C9           	ret
1131  8CB6
1132  8CB6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1133  8CB6              ;
1134  8CB6              ;	Rutina provisional para que los malotes cagen balas.
1135  8CB6
1136  8CB6              Detecta_disparo_entidad
1137  8CB6
1138  8CB6 3A E7 88     	ld a,(Habilita_disparo_entidad)
1139  8CB9 A7           	and a
1140  8CBA C8           	ret z
1141  8CBB 3E 7F        	ld a,$7f
1142  8CBD DB FE        	in a,($fe)
1143  8CBF E6 01        	and 1
1144  8CC1 C0           	ret nz
1145  8CC2 CD F4 8C     	call Genera_disparo
1146  8CC5 C9           	ret
1147  8CC6
1148  8CC6              ; Pinta indicadores de FILAS. ------------------------------------------------------
1149  8CC6
1150  8CC6 21 00 40     Pinta_marco ld hl,$4000
1151  8CC9 E5           	push hl
1152  8CCA
1153  8CCA CD E9 8C     	call Pinta_linea
1154  8CCD E1           	pop hl
1155  8CCE 3E 80        	ld a,$80
1156  8CD0 CD DC 8C     	call Pinta_columna
1157  8CD3
1158  8CD3 21 1F 40     	ld hl,$401f
1159  8CD6 3E 01        	ld a,1
1160  8CD8 CD DC 8C     	call Pinta_columna
1161  8CDB C9           	ret
1162  8CDC
1163  8CDC 06 BF        Pinta_columna ld b,191
1164  8CDE F5           	push af
1165  8CDF CD F7 93     1 call NextScan
1166  8CE2 F1           	pop af
1167  8CE3 77           	ld (hl),a
1168  8CE4 F5           	push af
1169  8CE5 10 F8        	djnz 1B
1170  8CE7 F1           	pop af
1171  8CE8 C9           	ret
1172  8CE9 36 FF        Pinta_linea ld (hl),$ff
1173  8CEB 54           	ld d,h
1174  8CEC 5D           	ld e,l
1175  8CED 13           	inc de
1176  8CEE 01 1F 00     	ld bc,31
1177  8CF1 ED B0        	ldir
1178  8CF3 C9           	ret
1179  8CF4
1180  8CF4              ; ---------------------------------------------------------------
1181  8CF4
1182  8CF4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8CF4              ; ******************************************************************************************************************************************************************************************
   2+ 8CF4              ;
   3+ 8CF4              ;   17/04/23
   4+ 8CF4              ;
   5+ 8CF4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8CF4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8CF4              ;
   8+ 8CF4              ;
   9+ 8CF4              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8CF4              ;
  11+ 8CF4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8CF4              ;               _ hacen las entidades hacia abajo.
  13+ 8CF4              ;
  14+ 8CF4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8CF4              ;
  16+ 8CF4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8CF4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8CF4              ;
  19+ 8CF4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8CF4              ;           _ la bala.
  21+ 8CF4              ;
  22+ 8CF4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8CF4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8CF4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8CF4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8CF4              ;           _ en el momento de generarse la bala)).
  27+ 8CF4
  28+ 8CF4              Genera_disparo
  29+ 8CF4
  30+ 8CF4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8CF4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8CF4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8CF4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8CF4              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8CF4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8CF4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8CF4
  38+ 8CF4              ; Exclusiones:
  39+ 8CF4
  40+ 8CF4 3A B5 88         ld a,(Columnas)
  41+ 8CF7 47               ld b,a
  42+ 8CF8 3A 7E 88         ld a,(Columns)
  43+ 8CFB B8               cp b
  44+ 8CFC C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8CFD
  46+ 8CFD              ; ----- ----- -----
  47+ 8CFD
  48+ 8CFD 3A AB 88         ld a,(Ctrl_0)
  49+ 8D00 CB 77            bit 6,a
  50+ 8D02 20 06            jr nz,14F
  51+ 8D04
  52+ 8D04 3A 84 88         ld a,(Coordenada_y)
  53+ 8D07 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8D09 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8D0A
  56+ 8D0A 21 00 80     14 ld hl,Indice_disparo
  57+ 8D0D 3A 85 88         ld a,(CTRL_DESPLZ)
  58+ 8D10 4F               ld c,a
  59+ 8D11 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8D13              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8D13              ;                                            ""        ""       "f9", B="1"
  62+ 8D13              ;                                            ""        ""       "fb", B="2"
  63+ 8D13              ;                                            ""        ""       "fb", B="3"
  64+ 8D13 A7               and a
  65+ 8D14 28 10            jr z,1F
  66+ 8D16 E6 01            and 1
  67+ 8D18 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8D19
  69+ 8D19 79               ld a,c
  70+ 8D1A 16 F9            ld d,$f9
  71+ 8D1C 23           2 inc hl
  72+ 8D1D 23               inc hl
  73+ 8D1E 04               inc b
  74+ 8D1F BA               cp d
  75+ 8D20 28 04            jr z,1F
  76+ 8D22 14               inc d
  77+ 8D23 14               inc d
  78+ 8D24 18 F6            jr 2B
  79+ 8D26
  80+ 8D26 CD 92 8B     1 call Extrae_address
  81+ 8D29 E5               push hl
  82+ 8D2A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8D2C DD 21 8A 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8D30
  85+ 8D30              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8D30              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8D30
  88+ 8D30 3A AB 88         ld a,(Ctrl_0)
  89+ 8D33 CB 77            bit 6,a
  90+ 8D35 20 04            jr nz,19F
  91+ 8D37
  92+ 8D37 AF               xor a
  93+ 8D38 32 E7 88         ld (Habilita_disparo_entidad),a
  94+ 8D3B
  95+ 8D3B 3A 91 88     19 ld a,(Cuad_objeto)
  96+ 8D3E FE 02            cp 2
  97+ 8D40 38 66            jr c,3F
  98+ 8D42 28 64            jr z,3F
  99+ 8D44
 100+ 8D44              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8D44
 102+ 8D44 E6 01            and 1
 103+ 8D46 28 30            jr z,4F
 104+ 8D48
 105+ 8D48              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8D48              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8D48              ;
 108+ 8D48              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8D48              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8D48              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8D48
 112+ 8D48 2A 7F 88     	ld hl,(Posicion_actual)
 113+ 8D4B
 114+ 8D4B              ;   Amadeus o entidad ???.
 115+ 8D4B
 116+ 8D4B 3A AB 88         ld a,(Ctrl_0)
 117+ 8D4E CB 77            bit 6,a
 118+ 8D50 28 0A            jr z,8F
 119+ 8D52
 120+ 8D52              ; 	Dispara Amadeus.
 121+ 8D52
 122+ 8D52 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8D54 CD 06 94         call PreviousScan
 124+ 8D57 CD 06 94         call PreviousScan
 125+ 8D5A
 126+ 8D5A              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8D5A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8D5A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8D5A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8D5A
 131+ 8D5A 18 11            jr 10F
 132+ 8D5C
 133+ 8D5C              ; 	Dispara Entidad.
 134+ 8D5C
 135+ 8D5C 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8D5F              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8D5F
 138+ 8D5F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8D5F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8D5F
 141+ 8D5F C5               push bc
 142+ 8D60 06 10            ld b,16
 143+ 8D62 CD F7 93     9 call NextScan
 144+ 8D65 10 FB            djnz 9B
 145+ 8D67 C1               pop bc
 146+ 8D68 CD D2 8D         call Ajusta_disparo_parte_izquierda
 147+ 8D6B 18 06            jr 17F
 148+ 8D6D
 149+ 8D6D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8D6D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8D6D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8D6D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8D6D
 154+ 8D6D CD D2 8D     10 call Ajusta_disparo_parte_izquierda
 155+ 8D70 CD 47 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8D73              ;                                                      ; _al generar el disparo.
 157+ 8D73
 158+ 8D73              ; 	LLegados a este punto tendremos:
 159+ 8D73              ;
 160+ 8D73              ;       Puntero_objeto_disparo en IY.
 161+ 8D73              ;       Rutinas_de_impresion en IX.
 162+ 8D73              ;       Puntero_de_impresion en HL.
 163+ 8D73              ;       Impacto/Dirección en BC.
 164+ 8D73
 165+ 8D73 CD DA 8D     17 call Almacena_disparo
 166+ 8D76 18 52            jr 6F                                             ; RET.
 167+ 8D78
 168+ 8D78              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8D78              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8D78              ;
 171+ 8D78              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8D78              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8D78              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8D78
 175+ 8D78 2A 7F 88     4 ld hl,(Posicion_actual)
 176+ 8D7B
 177+ 8D7B              ;   Amadeus o entidad ???.
 178+ 8D7B
 179+ 8D7B 3A AB 88         ld a,(Ctrl_0)
 180+ 8D7E CB 77            bit 6,a
 181+ 8D80 28 0A            jr z,11F
 182+ 8D82
 183+ 8D82              ; 	Dispara Amadeus.
 184+ 8D82
 185+ 8D82 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8D84 CD 06 94         call PreviousScan
 187+ 8D87 CD 06 94         call PreviousScan
 188+ 8D8A
 189+ 8D8A              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8D8A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8D8A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8D8A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8D8A
 194+ 8D8A 18 11            jr 13F
 195+ 8D8C
 196+ 8D8C              ; 	Dispara Entidad.
 197+ 8D8C
 198+ 8D8C 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8D8F              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8D8F
 201+ 8D8F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8D8F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8D8F
 204+ 8D8F C5               push bc
 205+ 8D90 06 10            ld b,16
 206+ 8D92 CD F7 93     12 call NextScan
 207+ 8D95 10 FB            djnz 12B
 208+ 8D97 C1               pop bc
 209+ 8D98
 210+ 8D98 CD CB 8D         call Ajusta_disparo_parte_derecha
 211+ 8D9B 18 06            jr 18F
 212+ 8D9D
 213+ 8D9D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8D9D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8D9D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8D9D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8D9D
 218+ 8D9D CD CB 8D     13 call Ajusta_disparo_parte_derecha
 219+ 8DA0 CD 47 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8DA3              ;                                                       ; _al generar el disparo.
 221+ 8DA3
 222+ 8DA3              ; LLegados a este punto tendremos:
 223+ 8DA3              ;
 224+ 8DA3              ;       Puntero_objeto_disparo en IY.
 225+ 8DA3              ;       Rutinas_de_impresion en IX.
 226+ 8DA3              ;       Puntero_de_impresion en HL.
 227+ 8DA3              ;       Impacto/Dirección en BC.
 228+ 8DA3
 229+ 8DA3 CD DA 8D     18 call Almacena_disparo
 230+ 8DA6 18 22            jr 6F                                               ; RET.
 231+ 8DA8
 232+ 8DA8              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8DA8
 234+ 8DA8 28 11        3 jr z,5F
 235+ 8DAA
 236+ 8DAA              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8DAA              ;
 238+ 8DAA              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8DAA              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8DAA              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8DAA              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8DAA
 243+ 8DAA              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8DAA              ;	   ""        ""       "f9", B="1"
 245+ 8DAA              ;	   ""        ""       "fb", B="2"
 246+ 8DAA              ; 	   ""        ""       "fb", B="3"
 247+ 8DAA
 248+ 8DAA 2A 7F 88     	ld hl,(Posicion_actual)
 249+ 8DAD CD F7 93     	call NextScan
 250+ 8DB0
 251+ 8DB0              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8DB0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8DB0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8DB0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8DB0
 256+ 8DB0 CD D2 8D         call Ajusta_disparo_parte_izquierda
 257+ 8DB3
 258+ 8DB3              ; 	No se produce impacto. B="$80"
 259+ 8DB3              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8DB3
 261+ 8DB3 01 80 80         ld bc,$8080
 262+ 8DB6
 263+ 8DB6              ; 	LLegados a este punto tendremos:
 264+ 8DB6              ;
 265+ 8DB6              ;       Puntero_objeto_disparo en IY.
 266+ 8DB6              ;       Rutinas_de_impresion en IX.
 267+ 8DB6              ;       Puntero_de_impresion en HL.
 268+ 8DB6              ;       Impacto/Dirección en BC.
 269+ 8DB6
 270+ 8DB6 CD DA 8D         call Almacena_disparo
 271+ 8DB9 18 0F            jr 6F                                           ; RET.
 272+ 8DBB
 273+ 8DBB              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8DBB              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8DBB              ;
 276+ 8DBB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8DBB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8DBB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8DBB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8DBB
 281+ 8DBB 2A 7F 88     5 ld hl,(Posicion_actual)
 282+ 8DBE CD F7 93     	call NextScan
 283+ 8DC1
 284+ 8DC1              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8DC1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8DC1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8DC1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8DC1
 289+ 8DC1 CD CB 8D         call Ajusta_disparo_parte_derecha
 290+ 8DC4
 291+ 8DC4              ; 	No se produce impacto. B="$80"
 292+ 8DC4              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8DC4
 294+ 8DC4 01 80 80     15 ld bc,$8080
 295+ 8DC7
 296+ 8DC7              ; 	LLegados a este punto tendremos:
 297+ 8DC7              ;
 298+ 8DC7              ;       Puntero_objeto_disparo en IY.
 299+ 8DC7              ;       Rutinas_de_impresion en IX.
 300+ 8DC7              ;       Puntero_de_impresion en HL.
 301+ 8DC7              ;       Impacto/Dirección en BC.
 302+ 8DC7
 303+ 8DC7 CD DA 8D         call Almacena_disparo
 304+ 8DCA
 305+ 8DCA C9           6 ret
 306+ 8DCB
 307+ 8DCB              ; ----------------------------------------------------------------
 308+ 8DCB              ;
 309+ 8DCB              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8DCB              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8DCB              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8DCB
 313+ 8DCB 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8DCC FE 02            cp 2
 315+ 8DCE 38 01            jr c,1F
 316+ 8DD0 23               inc hl
 317+ 8DD1 C9           1 ret
 318+ 8DD2
 319+ 8DD2 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8DD3 FE 01        	cp 1
 321+ 8DD5 20 01        	jr nz,1F
 322+ 8DD7 2B           	dec hl
 323+ 8DD8 2B           1 dec hl
 324+ 8DD9 C9               ret
 325+ 8DDA
 326+ 8DDA              ; ----------------------------------------------------------------
 327+ 8DDA              ;
 328+ 8DDA              ;   25/02/23
 329+ 8DDA              ;
 330+ 8DDA              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8DDA              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8DDA              ;
 333+ 8DDA              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8DDA              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8DDA
 336+ 8DDA              Almacena_disparo
 337+ 8DDA
 338+ 8DDA E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8DDB F1               pop af
 340+ 8DDC 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8DDD
 342+ 8DDD 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8DDE E6 01            and 1
 344+ 8DE0 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8DE2              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8DE2              ; 	Dispara AMADEUS.
 347+ 8DE2
 348+ 8DE2              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8DE2              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8DE2              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8DE2              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8DE2
 353+ 8DE2 C5               push bc
 354+ 8DE3 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8DE6 2A D4 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8DE9 A7               and a
 357+ 8DEA ED 42            sbc hl,bc
 358+ 8DEC CC 5B 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8DEF C1               pop bc
 360+ 8DF0 28 54            jr z,4F
 361+ 8DF2
 362+ 8DF2 2A D4 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8DF5 23               inc hl
 364+ 8DF6 23               inc hl
 365+ 8DF7 22 D4 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8DFA              ;                                                   ; _ Disparo_(+1).
 367+ 8DFA 18 18            jr 2F
 368+ 8DFC
 369+ 8DFC              ; Dispara una entidad.
 370+ 8DFC
 371+ 8DFC C5           1 push bc
 372+ 8DFD 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8E00 2A D2 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8E03 A7               and a
 375+ 8E04 ED 42            sbc hl,bc
 376+ 8E06 CC 54 8B         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8E09 C1               pop bc
 378+ 8E0A 28 3A            jr z,4F
 379+ 8E0C
 380+ 8E0C 2A D2 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8E0F 23               inc hl
 382+ 8E10 23               inc hl
 383+ 8E11 22 D2 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8E14              ;                                                   ; _ Disparo_(+1).
 385+ 8E14 CD 92 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8E17              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8E17              ;
 388+ 8E17              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8E17              ;                                                     Rutinas_de_impresion en IX.
 390+ 8E17              ;                                                     Puntero_de_impresion en HL.
 391+ 8E17              ;                                                     Impacto/Dirección en BC.
 392+ 8E17
 393+ 8E17 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8E18 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8E19 23               inc hl                                          ; _ al siguiente.
 396+ 8E1A A7               and a
 397+ 8E1B 20 C0            jr nz,3B
 398+ 8E1D
 399+ 8E1D 08               ex af,af
 400+ 8E1E ED 73 C9 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8E22 F9               ld sp,hl
 402+ 8E23
 403+ 8E23 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8E25 F5               push af                                         ; Puntero de impresión.
 405+ 8E26 FD E5            push iy                                         ; Puntero objeto.
 406+ 8E28 C5               push bc                                         ; Control.
 407+ 8E29
 408+ 8E29 ED 7B C9 88      ld sp,(Stack)
 409+ 8E2D
 410+ 8E2D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8E2D
 412+ 8E2D 21 BA 88     	ld hl,Ctrl_1
 413+ 8E30 CB C6        	set 0,(hl)
 414+ 8E32
 415+ 8E32 DD E5        	push ix
 416+ 8E34 E1               pop hl
 417+ 8E35 F5               push af
 418+ 8E36 DD E1            pop ix
 419+ 8E38
 420+ 8E38 CD A0 7F     	call Guarda_foto_registros
 421+ 8E3B
 422+ 8E3B 21 BA 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8E3E CB 86        	res 0,(hl)
 424+ 8E40
 425+ 8E40              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8E40              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8E40
 428+ 8E40 CD 5B 8B         call Inicia_Puntero_Disparo_Amadeus
 429+ 8E43 CD 54 8B         call Inicia_Puntero_Disparo_Entidades
 430+ 8E46
 431+ 8E46 C9           4 ret
 432+ 8E47
 433+ 8E47              ; ----------------------------------------------------------------
 434+ 8E47              ;
 435+ 8E47              ;   4/3/23
 436+ 8E47              ;
 437+ 8E47              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8E47              ;   _ al generarse el disparo.
 439+ 8E47              ;
 440+ 8E47              ;       "$80" ..... No se produce colisión.
 441+ 8E47              ;       "$81" ..... Se produce colisión.
 442+ 8E47
 443+ 8E47              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8E47              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8E47
 446+ 8E47
 447+ 8E47 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8E49 E5               push hl                                        ; Puntero de impresión.
 449+ 8E4A
 450+ 8E4A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8E4C CD 68 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8E4F
 453+ 8E4F 7B               ld a,e
 454+ 8E50 E6 01            and 1
 455+ 8E52 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8E54
 457+ 8E54 E1               pop hl
 458+ 8E55 E5               push hl
 459+ 8E56 CD F7 93         call NextScan
 460+ 8E59
 461+ 8E59 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8E5A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8E5C 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8E5E              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8E5E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8E60 CD 68 8E         call Bucle_2
 467+ 8E63
 468+ 8E63 43           2 ld b,e
 469+ 8E64 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8E65 FD E1            pop iy
 471+ 8E67 C9               ret
 472+ 8E68
 473+ 8E68               ; ---------- ----------
 474+ 8E68
 475+ 8E68 06 02        Bucle_2 ld b,2
 476+ 8E6A FD 7E 00     2 ld a,(iy)
 477+ 8E6D A6               and (hl)
 478+ 8E6E 28 02            jr z,1F
 479+ 8E70 1E 81            ld e,$81
 480+ 8E72 23           1 inc hl
 481+ 8E73 FD 23            inc iy
 482+ 8E75 10 F3            djnz 2B
 483+ 8E77 C9               ret
 484+ 8E78
 485+ 8E78              ; -------------------------------------------------------------------------------------------------------------
 486+ 8E78              ;
 487+ 8E78              ;   11/04/23
 488+ 8E78              ;
 489+ 8E78              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8E78              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8E78              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8E78              ;
 493+ 8E78              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8E78
 495+ 8E78              Compara_coordenadas_X
 496+ 8E78
 497+ 8E78              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8E78              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8E78
 500+ 8E78              ; Preparamos registros:
 501+ 8E78
 502+ 8E78 21 83 88         ld hl,Filas+6
 503+ 8E7B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8E7C 23               inc hl
 505+ 8E7D 23               inc hl
 506+ 8E7E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8E7F 43               ld b,e
 508+ 8E80 21 91 88         ld hl,Filas+20
 509+ 8E83 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8E84 21 DE 88         ld hl,Coordenadas_X_Entidad
 511+ 8E87 CD 98 90         call Guarda_coordenadas_X
 512+ 8E8A
 513+ 8E8A              ; Preparamos registros:
 514+ 8E8A
 515+ 8E8A 21 86 84         ld hl,Amadeus_db+6
 516+ 8E8D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8E8E 23               inc hl
 518+ 8E8F 23               inc hl
 519+ 8E90 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8E91 7B               ld a,e
 521+ 8E92 08               ex af,af'
 522+ 8E93 21 94 84         ld hl,Amadeus_db+20
 523+ 8E96 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8E97 21 DB 88         ld hl,Coordenadas_X_Amadeus
 525+ 8E9A CD 98 90         call Guarda_coordenadas_X
 526+ 8E9D
 527+ 8E9D              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8E9D              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8E9D
 530+ 8E9D 04               inc b
 531+ 8E9E 05               dec b
 532+ 8E9F 28 04            jr z,1F
 533+ 8EA1 06 03            ld b,3
 534+ 8EA3 18 02            jr 2F
 535+ 8EA5 06 02        1 ld b,2
 536+ 8EA7 08           2 ex af,af'
 537+ 8EA8 3C               inc a
 538+ 8EA9 3D               dec a
 539+ 8EAA 28 04            jr z,5F
 540+ 8EAC 0E 03            ld c,3
 541+ 8EAE 18 02            jr 6F
 542+ 8EB0 0E 02        5 ld c,2
 543+ 8EB2 79           6 ld a,c
 544+ 8EB3 08               ex af,af'
 545+ 8EB4 11 DE 88         ld de,Coordenadas_X_Entidad
 546+ 8EB7 1A           4 ld a,(de)
 547+ 8EB8 21 DB 88         ld hl,Coordenadas_X_Amadeus
 548+ 8EBB BE           3 cp (hl)
 549+ 8EBC 28 0E            jr z,7F
 550+ 8EBE 23               inc hl
 551+ 8EBF 0D               dec c
 552+ 8EC0 20 F9            jr nz,3B
 553+ 8EC2 13               inc de
 554+ 8EC3 08               ex af,af'
 555+ 8EC4 4F               ld c,a
 556+ 8EC5 08               ex af,af'
 557+ 8EC6 10 EF            djnz 4B
 558+ 8EC8
 559+ 8EC8              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8EC8
 561+ 8EC8 CD D7 90     8 call Limpia_Coordenadas_X
 562+ 8ECB C9               ret
 563+ 8ECC
 564+ 8ECC              7
 565+ 8ECC 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8ECE 32 96 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8ED1 21 D6 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8ED4 CB D6            set 2,(hl)
 569+ 8ED6 18 F0            jr 8B
 570+ 8ED8
 571+ 8ED8              ; -----------------------------------------------------------------------
 572+ 8ED8              ;
 573+ 8ED8              ;   17/04/23
 574+ 8ED8              ;
 575+ 8ED8
 576+ 8ED8              Detecta_colision_nave_entidad
 577+ 8ED8
 578+ 8ED8              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8ED8
 580+ 8ED8 2A 7F 88         ld hl,(Posicion_actual)
 581+ 8EDB CD 5C 93         call Calcula_puntero_de_impresion
 582+ 8EDE
 583+ 8EDE              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8EDE              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8EDE
 586+ 8EDE DD E5            push ix
 587+ 8EE0 E1               pop hl
 588+ 8EE1 E5               push hl
 589+ 8EE2
 590+ 8EE2              ; ----- ----- -----
 591+ 8EE2 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8EE4 06 0A            ld b,10
 593+ 8EE6 CD 16 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8EE9 7B               ld a,e
 595+ 8EEA FE 05            cp 5
 596+ 8EEC 38 0E            jr c,3F
 597+ 8EEE
 598+ 8EEE              ; LLegados a este punto:
 599+ 8EEE              ;
 600+ 8EEE              ;   HAY COLISIÓN !!!!!.
 601+ 8EEE              ;
 602+ 8EEE              ;   .db (Impacto) de Amadeus a "1".
 603+ 8EEE              ;   SET el bit3 de (Impacto2).
 604+ 8EEE              ;
 605+ 8EEE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8EEE
 607+ 8EEE 21 99 84         ld hl,Amadeus_db+25
 608+ 8EF1 36 01            ld (hl),1
 609+ 8EF3 21 D6 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8EF6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8EF8 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8EFA 18 18            jr 1F
 613+ 8EFC
 614+ 8EFC              ; -----
 615+ 8EFC
 616+ 8EFC E1           3 pop hl
 617+ 8EFD CD F7 93         call NextScan
 618+ 8F00 E5               push hl
 619+ 8F01 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8F02 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8F04 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8F06 30 0C            jr nc,1F
 623+ 8F08              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8F08 10 DC            djnz 2B
 625+ 8F0A
 626+ 8F0A              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8F0A
 628+ 8F0A              ; LLegados a este punto:
 629+ 8F0A              ;
 630+ 8F0A              ;   NO HAY COLISIÓN !!!!!.
 631+ 8F0A              ;
 632+ 8F0A              ;   .db (Impacto) de Amadeus a "0".
 633+ 8F0A              ;   RES el bit2 de (Impacto2).
 634+ 8F0A              ;
 635+ 8F0A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8F0A              ;   Lo colocamos a "0".
 637+ 8F0A
 638+ 8F0A 21 D6 88         ld hl,Impacto2
 639+ 8F0D CB 96            res 2,(hl)
 640+ 8F0F 2A D7 88         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8F12 36 00            ld (hl),0
 642+ 8F14
 643+ 8F14 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8F15 C9               ret
 645+ 8F16
 646+ 8F16               ; ---------- ----------
 647+ 8F16
 648+ 8F16 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8F17 3A 7E 88         ld a,(Columns)
 650+ 8F1A 47               ld b,a
 651+ 8F1B FD 7E 00     2 ld a,(iy)
 652+ 8F1E BE               cp (hl)
 653+ 8F1F 28 01            jr z,1F
 654+ 8F21
 655+ 8F21 1C               inc e
 656+ 8F22
 657+ 8F22 23           1 inc hl
 658+ 8F23 FD 23            inc iy
 659+ 8F25 10 F4            djnz 2B
 660+ 8F27 C1               pop bc
 661+ 8F28 C9               ret
 662+ 8F29
 663+ 8F29              ; -------------------------------------------------------------------------------------------------------------
 664+ 8F29              ;
 665+ 8F29              ;   13/03/23
 666+ 8F29              ;
 667+ 8F29              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8F29              ;
 669+ 8F29              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8F29
 671+ 8F29 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8F2C 7E               ld a,(hl)
 673+ 8F2D A7               and a
 674+ 8F2E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8F2F
 676+ 8F2F 44               ld b,h
 677+ 8F30 4D               ld c,l
 678+ 8F31 2A CF 88         ld hl,(Stack_snapshot_disparos)
 679+ 8F34 E5               push hl
 680+ 8F35 A7               and a
 681+ 8F36 ED 42            sbc hl,bc
 682+ 8F38 E5               push hl
 683+ 8F39 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8F3A
 685+ 8F3A E1               pop hl
 686+ 8F3B 54               ld d,h
 687+ 8F3C 5D               ld e,l
 688+ 8F3D 1B               dec de
 689+ 8F3E ED B8            lddr                                                ; Limpiamos.
 690+ 8F40
 691+ 8F40 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 8F43 22 CF 88         ld (Stack_snapshot_disparos),hl
 693+ 8F46
 694+ 8F46 C9               ret
 695+ 8F47
 696+ 8F47              ; -------------------------------------------------------------------------------------------------------------
 697+ 8F47              ;
 698+ 8F47              ;   28/03/23
 699+ 8F47              ;
 700+ 8F47
 701+ 8F47 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8F4A 2A D4 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8F4D
 704+ 8F4D CD 92 8B     2 call Extrae_address
 705+ 8F50 7E               ld a,(hl)
 706+ 8F51 A7               and a
 707+ 8F52 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8F54
 709+ 8F54              ; ----- ----- ----- ----- ----- -----
 710+ 8F54
 711+ 8F54 C5               push bc
 712+ 8F55 CD 11 90         call foto_disparo_a_borrar
 713+ 8F58
 714+ 8F58              ; Existe colisión con este disparo???
 715+ 8F58
 716+ 8F58 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8F59 7E               ld a,(hl)
 718+ 8F5A 2B               dec hl
 719+ 8F5B E6 01            and 1
 720+ 8F5D 28 1D            jr z,9F
 721+ 8F5F
 722+ 8F5F              ;   En este punto:
 723+ 8F5F              ;
 724+ 8F5F              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8F5F              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8F5F              ;   _con la entidad).
 727+ 8F5F              ;
 728+ 8F5F              ;   Disparo_2A defw 0                                ; Control.
 729+ 8F5F              ;    defw 0                                          ; Puntero objeto.
 730+ 8F5F              ;    defw 0                                          ; Puntero de impresión.
 731+ 8F5F              ;    defw 0                                          ; Rutina de impresión.
 732+ 8F5F
 733+ 8F5F E5               push hl
 734+ 8F60
 735+ 8F60 06 04            ld b,4
 736+ 8F62 23           19 inc hl
 737+ 8F63 10 FD            djnz 19B
 738+ 8F65
 739+ 8F65 CD 92 8B         call Extrae_address
 740+ 8F68 CD 22 9A         call Genera_coordenadas_disparo
 741+ 8F6B
 742+ 8F6B              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8F6B
 744+ 8F6B 21 D9 88         ld hl,Coordenadas_disparo_certero
 745+ 8F6E 72               ld (hl),d
 746+ 8F6F 23               inc hl
 747+ 8F70 73               ld (hl),e
 748+ 8F71
 749+ 8F71              ; Elimino el disparo de la base de datos.
 750+ 8F71
 751+ 8F71 E1               pop hl
 752+ 8F72 CD 8D 90         call Elimina_disparo_de_base_de_datos
 753+ 8F75 21 D6 88         ld hl,Impacto2
 754+ 8F78 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8F7A
 756+ 8F7A 18 06            jr 11F
 757+ 8F7C
 758+ 8F7C CD 3A 90     9 call Mueve_disparo
 759+ 8F7F CD 11 90         call foto_disparo_a_borrar
 760+ 8F82
 761+ 8F82 C1           11 pop bc
 762+ 8F83 18 04            jr 7F
 763+ 8F85
 764+ 8F85              ; ----- ----- ----- ----- ----- -----
 765+ 8F85
 766+ 8F85 ED 42        1 sbc hl,bc
 767+ 8F87 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8F89 2A D4 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8F8C 23               inc hl
 770+ 8F8D 23               inc hl
 771+ 8F8E 22 D4 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8F91 18 BA            jr 2B
 773+ 8F93 CD 5B 8B     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8F96
 775+ 8F96 01 66 84         ld bc,Disparo_11
 776+ 8F99 2A D2 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8F9C
 778+ 8F9C CD 92 8B     5 call Extrae_address
 779+ 8F9F 7E               ld a,(hl)
 780+ 8FA0 A7               and a
 781+ 8FA1 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8FA3
 783+ 8FA3              ; ----- ----- ----- ----- ----- -----
 784+ 8FA3
 785+ 8FA3 C5               push bc
 786+ 8FA4 CD 11 90         call foto_disparo_a_borrar
 787+ 8FA7
 788+ 8FA7              ; Existe colisión con este disparo???
 789+ 8FA7
 790+ 8FA7 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8FA8 7E               ld a,(hl)
 792+ 8FA9 2B               dec hl
 793+ 8FAA E6 01            and 1
 794+ 8FAC 28 48            jr z,10F
 795+ 8FAE
 796+ 8FAE              ; La colisión se produce con Amadeus???
 797+ 8FAE              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8FAE
 799+ 8FAE E5               push hl
 800+ 8FAF
 801+ 8FAF 06 04            ld b,4
 802+ 8FB1 23           16 inc hl
 803+ 8FB2 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8FB4 CD 92 8B         call Extrae_address
 805+ 8FB7 CD 22 9A         call Genera_coordenadas_disparo
 806+ 8FBA
 807+ 8FBA 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8FBB FE 16            cp $16
 809+ 8FBD 38 22            jr c,15F
 810+ 8FBF
 811+ 8FBF              ; (Colisiones en filas 16 y 17).
 812+ 8FBF
 813+ 8FBF D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8FC0
 815+ 8FC0              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8FC0
 817+ 8FC0 21 86 84         ld hl,Amadeus_db+6
 818+ 8FC3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8FC4 23               inc hl
 820+ 8FC5 23               inc hl
 821+ 8FC6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8FC7 21 94 84         ld hl,Amadeus_db+20
 823+ 8FCA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8FCB 21 DB 88         ld hl,Coordenadas_X_Amadeus
 825+ 8FCE CD 98 90         call Guarda_coordenadas_X
 826+ 8FD1
 827+ 8FD1 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8FD2
 829+ 8FD2              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8FD2
 831+ 8FD2 06 03            ld b,3
 832+ 8FD4 21 DB 88         ld hl,Coordenadas_X_Amadeus
 833+ 8FD7 7E           18 ld a,(hl)
 834+ 8FD8 BA               cp d
 835+ 8FD9 20 03            jr nz,17F
 836+ 8FDB
 837+ 8FDB              ; Colisión Amadeus !!!!!!!!!!
 838+ 8FDB
 839+ 8FDB E1               pop hl
 840+ 8FDC 18 09            jr 14F
 841+ 8FDE
 842+ 8FDE 23           17 inc hl
 843+ 8FDF 10 F6            djnz 18B
 844+ 8FE1
 845+ 8FE1              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8FE1              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8FE1
 848+ 8FE1 E1           15 pop hl
 849+ 8FE2 23               inc hl
 850+ 8FE3 35               dec (hl)
 851+ 8FE4 2B               dec hl
 852+ 8FE5 18 0F            jr 10F
 853+ 8FE7
 854+ 8FE7              ; -----------------------debug
 855+ 8FE7
 856+ 8FE7              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8FE7              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8FE7
 859+ 8FE7 E5           14 push hl
 860+ 8FE8 CD 8D 90         call Elimina_disparo_de_base_de_datos
 861+ 8FEB 21 D6 88         ld hl,Impacto2
 862+ 8FEE CB CE            set 1,(hl)
 863+ 8FF0 CD D7 90         call Limpia_Coordenadas_X
 864+ 8FF3
 865+ 8FF3 E1               pop hl
 866+ 8FF4 18 06            jr 12F
 867+ 8FF6
 868+ 8FF6 CD 3A 90     10 call Mueve_disparo
 869+ 8FF9 CD 11 90         call foto_disparo_a_borrar
 870+ 8FFC C1           12 pop bc
 871+ 8FFD
 872+ 8FFD 18 04            jr 8F
 873+ 8FFF
 874+ 8FFF              ; ----- ----- ----- ----- ----- -----
 875+ 8FFF
 876+ 8FFF ED 42        4 sbc hl,bc
 877+ 9001 28 0A            jr z,6F
 878+ 9003
 879+ 9003 2A D2 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9006 23               inc hl
 881+ 9007 23               inc hl
 882+ 9008 22 D2 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 900B 18 8F            jr 5B
 884+ 900D
 885+ 900D CD 54 8B     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9010 C9               ret
 887+ 9011
 888+ 9011              ; ------------------------------------------------------------------
 889+ 9011
 890+ 9011              foto_disparo_a_borrar
 891+ 9011
 892+ 9011 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9012 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9013 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9014
 896+ 9014 E5               push hl
 897+ 9015 23               inc hl
 898+ 9016 23               inc hl
 899+ 9017 ED 73 C9 88      ld (Stack),sp
 900+ 901B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 901C FD E1            pop iy
 902+ 901E DD E1            pop ix
 903+ 9020 E1               pop hl
 904+ 9021 ED 7B C9 88      ld sp,(Stack)
 905+ 9025 3A BA 88         ld a,(Ctrl_1)
 906+ 9028 CB C7            set 0,a
 907+ 902A 32 BA 88         ld (Ctrl_1),a
 908+ 902D CD A0 7F         call Guarda_foto_registros
 909+ 9030 3A BA 88         ld a,(Ctrl_1)
 910+ 9033 CB 87            res 0,a
 911+ 9035 32 BA 88         ld (Ctrl_1),a
 912+ 9038 E1               pop hl
 913+ 9039 C9               ret
 914+ 903A
 915+ 903A E5           Mueve_disparo push hl
 916+ 903B 7E               ld a,(hl)
 917+ 903C 06 04            ld b,4
 918+ 903E 23           1 inc hl
 919+ 903F 10 FD            djnz 1B
 920+ 9041
 921+ 9041              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9041
 923+ 9041 CD 92 8B         call Extrae_address
 924+ 9044
 925+ 9044 E6 01            and 1
 926+ 9046 28 2B            jr z,2F
 927+ 9048
 928+ 9048              ; Disparo hacia arriba, (Amadeus).
 929+ 9048
 930+ 9048              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9048              ; _ de la dificultad.
 932+ 9048
 933+ 9048 CD 06 94         call PreviousScan
 934+ 904B CD 06 94         call PreviousScan
 935+ 904E CD 06 94         call PreviousScan
 936+ 9051
 937+ 9051              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9051
 939+ 9051 7C               ld a,h
 940+ 9052 FE 40            cp $40
 941+ 9054 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 9056
 943+ 9056              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 9056
 945+ 9056 EB               ex de,hl
 946+ 9057 06 04            ld b,4
 947+ 9059 2B           6 dec hl
 948+ 905A 10 FD            djnz 6B
 949+ 905C
 950+ 905C CD 8D 90         call Elimina_disparo_de_base_de_datos
 951+ 905F E1               pop hl
 952+ 9060 18 10            jr 7F
 953+ 9062
 954+ 9062              ; Se ha desplazado la bala, compruebo colisión.
 955+ 9062
 956+ 9062 D5           3 push de
 957+ 9063 C5               push bc
 958+ 9064
 959+ 9064 CD 47 8E         call Comprueba_Colision
 960+ 9067
 961+ 9067              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 9067
 963+ 9067 78               ld a,b
 964+ 9068
 965+ 9068 C1               pop bc
 966+ 9069 D1               pop de
 967+ 906A
 968+ 906A EB               ex de,hl
 969+ 906B
 970+ 906B 73               ld (hl),e
 971+ 906C 23               inc hl
 972+ 906D 72               ld (hl),d
 973+ 906E
 974+ 906E E1           4 pop hl
 975+ 906F 23               inc hl
 976+ 9070 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 9071 2B               dec hl
 978+ 9072 C9           7 ret
 979+ 9073
 980+ 9073              ; Disparo hacia abajo, (Entidad).
 981+ 9073
 982+ 9073              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 9073              ; _ de la dificultad.
 984+ 9073
 985+ 9073 CD F7 93     2 call NextScan
 986+ 9076 CD F7 93         call NextScan
 987+ 9079 CD F7 93         call NextScan
 988+ 907C
 989+ 907C              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 907C
 991+ 907C 7C               ld a,h
 992+ 907D FE 58            cp $58
 993+ 907F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 9081
 995+ 9081 EB               ex de,hl
 996+ 9082 06 04            ld b,4
 997+ 9084 2B           5 dec hl
 998+ 9085 10 FD            djnz 5B
 999+ 9087
1000+ 9087 CD 8D 90         call Elimina_disparo_de_base_de_datos
1001+ 908A E1               pop hl
1002+ 908B 18 E5            jr 7B
1003+ 908D
1004+ 908D              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 908D
1006+ 908D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 9090 AF               xor a
1008+ 9091 77               ld (hl),a
1009+ 9092 54               ld d,h
1010+ 9093 5D               ld e,l
1011+ 9094 13               inc de
1012+ 9095 ED B0            ldir
1013+ 9097 C9               ret
1014+ 9098
1015+ 9098              ; -----------------------------------------------------------------
1016+ 9098              ;
1017+ 9098              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 9098              ;
1019+ 9098              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 9098              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 9098              ;
1022+ 9098              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 9098              ;
1024+ 9098              ;   INPUTS:
1025+ 9098              ;
1026+ 9098              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 9098              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 9098              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 9098
1030+ 9098              ;   MODIFICA: A, HL, DE y C
1031+ 9098
1032+ 9098 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 9099 79               ld a,c
1034+ 909A E6 01            and 1
1035+ 909C 20 03            jr nz,1F
1036+ 909E 14               inc d
1037+ 909F 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 90A1
1039+ 90A1              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 90A1              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 90A1
1042+ 90A1 15           1 dec d
1043+ 90A2 23           2 inc hl
1044+ 90A3 72               ld (hl),d
1045+ 90A4
1046+ 90A4 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 90A5 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 90A6 C8               ret z
1049+ 90A7
1050+ 90A7 AF               xor a
1051+ 90A8 5F               ld e,a
1052+ 90A9 18 ED            jr Guarda_coordenadas_X
1053+ 90AB
1054+ 90AB              ; -----------------------------------------------------------------
1055+ 90AB              ;
1056+ 90AB              ;   12/04/23
1057+ 90AB              ;
1058+ 90AB
1059+ 90AB 3A D6 88     Selector_de_impactos ld a,(Impacto2)
1060+ 90AE A7               and a
1061+ 90AF C8               ret z
1062+ 90B0
1063+ 90B0 FE 04            cp 4
1064+ 90B2 20 09            jr nz,1F
1065+ 90B4
1066+ 90B4
1067+ 90B4              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 90B4
1069+ 90B4 CD D8 8E         call Detecta_colision_nave_entidad
1070+ 90B7
1071+ 90B7 21 D6 88         ld hl,Impacto2
1072+ 90BA CB 5E            bit 3,(hl)
1073+ 90BC C0               ret nz                                               ; Existe colisión, RET.
1074+ 90BD
1075+ 90BD              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 90BD              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 90BD
1078+ 90BD 21 D6 88     1 ld hl,Impacto2
1079+ 90C0 CB 4E            bit 1,(hl)
1080+ 90C2 28 07            jr z,2F
1081+ 90C4
1082+ 90C4 21 99 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 90C7 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 90C9 18 0B            jr 3F
1085+ 90CB
1086+ 90CB 21 D6 88     2 ld hl,Impacto2
1087+ 90CE CB 46            bit 0,(hl)
1088+ 90D0 C8               ret z
1089+ 90D1
1090+ 90D1              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 90D1
1092+ 90D1 21 BA 88         ld hl,Ctrl_1
1093+ 90D4 CB D6            set 2,(hl)
1094+ 90D6
1095+ 90D6 C9           3 ret
1096+ 90D7
1097+ 90D7              ; -----------------------------------------------------------------
1098+ 90D7              ;
1099+ 90D7              ;   16/04/23
1100+ 90D7              ;
1101+ 90D7
1102+ 90D7 AF           Limpia_Coordenadas_X xor a
1103+ 90D8 06 06            ld b,6
1104+ 90DA 21 DB 88         ld hl,Coordenadas_X_Amadeus
1105+ 90DD 77           1 ld (hl),a
1106+ 90DE 23               inc hl
1107+ 90DF 10 FC            djnz 1B
1108+ 90E1 C9               ret
1109+ 90E2
1110+ 90E2              ; -----------------------------------------------------------------
1111+ 90E2              ;
1112+ 90E2              ;   25/04/23
1113+ 90E2              ;
1114+ 90E2
1115+ 90E2              Determina_resultado_comparativa
1116+ 90E2
1117+ 90E2              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 90E2              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 90E2              ;
1120+ 90E2              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 90E2              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 90E2              ;
1123+ 90E2              ;   SBC HL,DE
1124+ 90E2
1125+ 90E2 7C               ld a,h
1126+ 90E3 06 00            ld b,0
1127+ 90E5
1128+ 90E5 CD F5 90         call Compara_cositas
1129+ 90E8
1130+ 90E8 04               inc b
1131+ 90E9 05               dec b
1132+ 90EA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 90EB
1134+ 90EB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 90EC 06 00            ld b,0
1136+ 90EE
1137+ 90EE CD F5 90         call Compara_cositas
1138+ 90F1 18 01            jr 2F
1139+ 90F3
1140+ 90F3 04           1 inc b
1141+ 90F4 C9           2 ret
1142+ 90F5
1143+ 90F5 A7           Compara_cositas and a
1144+ 90F6 28 17            jr z,1F
1145+ 90F8
1146+ 90F8 FE FD            cp $fd
1147+ 90FA 28 13            jr z,1F
1148+ 90FC FE FE            cp $fe
1149+ 90FE 28 0F            jr z,1F
1150+ 9100 FE FF            cp $ff
1151+ 9102 28 0B            jr z,1F
1152+ 9104 FE 01            cp $01
1153+ 9106 28 07            jr z,1F
1154+ 9108 FE 02            cp $02
1155+ 910A 28 03            jr z,1F
1156+ 910C FE 03            cp $03
1157+ 910E C0               ret nz
1158+ 910F
1159+ 910F 04           1 inc b
1160+ 9110 C9               ret
1161+ 9111
# file closed: Disparo.asm
1183  9111              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9111              ; ******************************************************************************************************************************************************************************************
   2+ 9111              ;
   3+ 9111              ; 01/23
   4+ 9111              ;
   5+ 9111              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9111
   7+ 9111 CD EB 93     Draw call Prepara_draw
   8+ 9114 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9115 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9116 28 05        	jr z,2F
  11+ 9118
  12+ 9118 3A 91 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 911B 18 0C        	jr 1F
  14+ 911D 2A 8F 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9120 22 7F 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9123 CD B2 92     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9126              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9126 CD 45 9B     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9129 3A AB 88     1 ld a,(Ctrl_0)
  20+ 912C CB 6F        	bit 5,a
  21+ 912E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9130
  23+ 9130 CD 48 91     	call Comprueba_limite_horizontal
  24+ 9133 CD D8 91     	call Comprueba_limite_vertical
  25+ 9136
  26+ 9136              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9136
  28+ 9136 CD 25 93     3 call calcula_CColumnass
  29+ 9139 CD 5C 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 913C CD B1 93     	call Define_rutina_de_impresion
  31+ 913F
  32+ 913F 3A AB 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9142 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9144 32 AB 88     	ld (Ctrl_0),a
  35+ 9147
  36+ 9147 C9           	ret
  37+ 9148
  38+ 9148              ; *******************************************************************************************************************************************************************************************
  39+ 9148              ;	21/01/23
  40+ 9148              ;
  41+ 9148              ; 	Comprueba_limite_horizontal.
  42+ 9148              ;
  43+ 9148              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9148              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9148              ;
  46+ 9148              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9148              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9148              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9148              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9148
  51+ 9148
  52+ 9148
  53+ 9148 3A AB 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 914B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 914D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 914F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9151 32 AB 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9154 18 09            jr 6F
  59+ 9156 CB 5F        1 bit 3,a
  60+ 9158 28 0A            jr z,2F
  61+ 915A E6 F7            and $f7
  62+ 915C 32 AB 88         ld (Ctrl_0),a
  63+ 915F CD B2 92     6 call Inicializacion
  64+ 9162 18 5B            jr 5F
  65+ 9164 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9165
  67+ 9165              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9165              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9165
  70+ 9165 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9166 2A B6 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9169 CD B7 96     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 916C 67           	ld h,a
  74+ 916D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 916E CD B7 96     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9171 67           	ld h,a
  77+ 9172 A7           	and a
  78+ 9173 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9175 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9176 3A 91 88     	ld a,(Cuad_objeto)
  81+ 9179 FE 02        	cp 2
  82+ 917B 38 1E        	jr c,3F
  83+ 917D 28 1C        	jr z,3F
  84+ 917F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9180 28 23            jr z,7F
  86+ 9182 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9184 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9186 E1           	pop hl
  89+ 9187
  90+ 9187              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9187              ; _para indicar con E="2" en caso necesario.
  92+ 9187
  93+ 9187 E5               push hl
  94+ 9188 C5               push bc
  95+ 9189 CD B7 96     	call calcula_tercio
  96+ 918C FE 01        	cp 1
  97+ 918E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9190 CD C0 91         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9193 28 26            jr z,9F
 100+ 9195 38 24            jr c,9F
 101+ 9197 1E 00        11 ld e,0
 102+ 9199 18 22            jr 8F
 103+ 919B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 919C 28 07        	jr z, 7F
 105+ 919E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 91A0 1E 00         	ld e,0
 107+ 91A2 E1           	pop hl
 108+ 91A3 18 04        	jr 4F
 109+ 91A5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 91A7 18 15            jr 10F
 111+ 91A9
 112+ 91A9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 91A9              ; _para indicar con E="2" en caso necesario.
 114+ 91A9
 115+ 91A9 E5           4 push hl
 116+ 91AA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 91AB CD B7 96     	call calcula_tercio
 118+ 91AE FE 01        	cp 1
 119+ 91B0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 91B2 CD C0 91         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 91B5 28 04            jr z,9F
 122+ 91B7 30 02            jr nc,9F
 123+ 91B9 18 02        	jr 8F
 124+ 91BB 1E 02        9 ld e,2
 125+ 91BD C1           8 pop bc
 126+ 91BE E1           10 pop hl
 127+ 91BF C9           5 ret
 128+ 91C0
 129+ 91C0              ; --------------------
 130+ 91C0              ;
 131+ 91C0              ; 25/08/22
 132+ 91C0
 133+ 91C0 CD B7 96     Comprueba_centro call calcula_tercio
 134+ 91C3 67               ld h,a
 135+ 91C4 08           	ex af,af
 136+ 91C5 FE 02        	cp 2
 137+ 91C7 38 07        	jr c,1F
 138+ 91C9 28 05        	jr z,1F
 139+ 91CB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 91CE 18 03        	jr 2F
 141+ 91D0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 91D3 08           2 ex af,af
 143+ 91D4 A7               and a
 144+ 91D5 ED 42            sbc hl,bc
 145+ 91D7 C9               ret
 146+ 91D8
 147+ 91D8              ; *********************************************************************************************************************************************************************************************
 148+ 91D8              ;
 149+ 91D8              ;   16/8/22
 150+ 91D8              ;
 151+ 91D8              ;	Comprueba_limite_vertical
 152+ 91D8              ;
 153+ 91D8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 91D8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 91D8              ;
 156+ 91D8
 157+ 91D8 2A 7F 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 91DB 7D           	ld a,l
 159+ 91DC E6 1F        	and $1F
 160+ 91DE 57           	ld d,a
 161+ 91DF 3A B8 88     	ld a,(Limite_vertical)
 162+ 91E2 BA           	cp d 											; Límite - Posición.
 163+ 91E3 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 91E4 3A 91 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 91E7 CB 47        	bit 0,a
 166+ 91E9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 91EB
 168+ 91EB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 91EB
 170+ 91EB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 91EC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 91EE
 173+ 91EE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 91EE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 91EE
 176+ 91EE 3A 83 88         ld a,(Coordenada_X)
 177+ 91F1 16 0F            ld d,Centro_izquierda
 178+ 91F3 A7               and a
 179+ 91F4 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 91F5 28 1E            jr z,3F
 181+ 91F7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 91F9              ;                                                    ; _salimos sin modificar nada.
 183+ 91F9 18 0E            jr 2F
 184+ 91FB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 91FC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 91FE
 187+ 91FE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 91FE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 91FE
 190+ 91FE 3A 83 88         ld a,(Coordenada_X)
 191+ 9201 16 10            ld d,Centro_derecha
 192+ 9203 A7               and a
 193+ 9204 92               sub d
 194+ 9205 28 0E            jr z,3F
 195+ 9207 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9209              ;                                                    ; _salimos sin modificar nada.
 197+ 9209 CB 43        2 bit 0,e
 198+ 920B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 920D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 920E CD A2 92         call Modificaccionne
 201+ 9211 C1           	pop bc
 202+ 9212 CD B2 92         call Inicializacion
 203+ 9215 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9216
 205+ 9216              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9216
 207+ 9216 C5           4 push bc
 208+ 9217 01 7E 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 921A 0A           	ld a,(bc)
 210+ 921B 3D           	dec a
 211+ 921C 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 921D 7D           	ld a,l
 213+ 921E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 921F CB 47        	bit 0,a
 215+ 9221 28 03        	jr z,5F
 216+ 9223 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9224 18 2E        	jr 7F
 218+ 9226
 219+ 9226              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9226
 221+ 9226 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9227 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9228 3A AB 88     	ld a,(Ctrl_0)
 224+ 922B CB 4F        	bit 1,a
 225+ 922D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 922F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9230
 228+ 9230              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9230
 230+ 9230 1C               inc e
 231+ 9231 1D               dec e
 232+ 9232 20 07            jr nz,12F
 233+ 9234 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9235 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9236 22 7F 88     	ld (Posicion_actual),hl
 236+ 9239 18 44        13 jr 9F
 237+ 923B CB 43        12 bit 0,e
 238+ 923D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 923F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 923F C1           	pop bc
 241+ 9240 18 D3        	jr 3B
 242+ 9242 80           14 add b
 243+ 9243 6F               ld l,a
 244+ 9244 22 7F 88     	ld (Posicion_actual),hl
 245+ 9247 CD A2 92         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 924A 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 924C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 924E 32 AB 88         ld (Ctrl_0),a
 249+ 9251 F1           	pop af
 250+ 9252 18 2B        	jr 9F
 251+ 9254
 252+ 9254              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9254
 254+ 9254 F5           7 push af
 255+ 9255 3A AB 88     	ld a,(Ctrl_0)
 256+ 9258 CB 47        	bit 0,a
 257+ 925A 20 1D        	jr nz,8F
 258+ 925C F1           	pop af
 259+ 925D
 260+ 925D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 925D
 262+ 925D 1C           	inc e
 263+ 925E 1D               dec e
 264+ 925F 20 07            jr nz,10F
 265+ 9261 90           	sub b
 266+ 9262 6F               ld l,a
 267+ 9263 22 7F 88     	ld (Posicion_actual),hl
 268+ 9266 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9268              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9268 CB 43        10 bit 0,e
 271+ 926A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 926C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 926C C1           	pop bc
 274+ 926D 18 A6        	jr 3B
 275+ 926F 90           16 sub b
 276+ 9270 6F               ld l,a
 277+ 9271 22 7F 88     	ld (Posicion_actual),hl
 278+ 9274 CD A2 92         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9277 18 06            jr 9F
 280+ 9279 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 927B 32 AB 88         ld (Ctrl_0),a
 282+ 927E F1           	pop af
 283+ 927F C1           9 pop bc
 284+ 9280 1E 00        	ld e,0
 285+ 9282 CD B2 92         call Inicializacion
 286+ 9285 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9286 08           	ex af,af
 288+ 9287 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9288 18 8B            jr 3B
 290+ 928A
 291+ 928A              ; --------------------
 292+ 928A
 293+ 928A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 928C CD 06 94     1 call PreviousScan
 295+ 928F 10 FB            djnz 1B
 296+ 9291 22 7F 88     	ld (Posicion_actual),hl
 297+ 9294 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9295 C9           	ret
 299+ 9296
 300+ 9296              ; --------------------
 301+ 9296
 302+ 9296 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9298 CD F7 93     1 call NextScan
 304+ 929B 10 FB            djnz 1B
 305+ 929D 22 7F 88     	ld (Posicion_actual),hl
 306+ 92A0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 92A1 C9           	ret
 308+ 92A2
 309+ 92A2              ; --------------------
 310+ 92A2              ;
 311+ 92A2              ;	22/01/23
 312+ 92A2              ;
 313+ 92A2              ;	E="1". Hemos cambiado de cuadrante.
 314+ 92A2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 92A2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 92A2
 317+ 92A2
 318+ 92A2              Modificaccionne
 319+ 92A2
 320+ 92A2 3A 91 88     	ld a,(Cuad_objeto)
 321+ 92A5 FE 02        	cp 2
 322+ 92A7 CC 8A 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 92AA DC 8A 92         call c,Modifica_Pos_actual
 324+ 92AD C8           	ret z
 325+ 92AE CD 96 92         call Modifica_Pos_actual2
 326+ 92B1 C9               ret
 327+ 92B2
 328+ 92B2              ; *************************************************************************************************************************************************************************************************
 329+ 92B2              ;
 330+ 92B2              ;	13/8/22
 331+ 92B2              ;
 332+ 92B2              ;	Inicializacion
 333+ 92B2              ;
 334+ 92B2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 92B2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 92B2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 92B2              ;
 338+ 92B2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 92B2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 92B2              ;	_ desaparece/aparece.
 341+ 92B2
 342+ 92B2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 92B2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 92B2              ;
 345+ 92B2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 92B2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 92B2              ; 		   [E] ="0"
 348+ 92B2
 349+ 92B2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 92B2
 351+ 92B2 CD B7 96     Inicializacion call calcula_tercio
 352+ 92B5 28 36        	jr z,primit
 353+ 92B7 E6 02        	and 2
 354+ 92B9 20 07        	jr nz,segmit
 355+ 92BB 7D           	ld a,l
 356+ 92BC FE 7F        	cp $7f
 357+ 92BE 38 2D        	jr c,primit
 358+ 92C0 28 2B        	jr z,primit
 359+ 92C2 CD 1F 93     segmit call column
 360+ 92C5 38 13        	jr c,tercuad
 361+ 92C7 3E 04        cuarcuad ld a,4
 362+ 92C9 32 91 88     	ld (Cuad_objeto),a
 363+ 92CC 21 20 48     	ld hl,$4820
 364+ 92CF 22 B6 88     	ld (Limite_horizontal),hl
 365+ 92D2 21 B8 88     	ld hl,Limite_vertical
 366+ 92D5 36 0D        	ld (hl),$0d
 367+ 92D7 08           	ex af,af
 368+ 92D8 18 3C        	jr 1F
 369+ 92DA              tercuad
 370+ 92DA 3E 03        	ld a,3
 371+ 92DC 32 91 88     	ld (Cuad_objeto),a
 372+ 92DF 21 20 48     	ld hl,$4820
 373+ 92E2 22 B6 88     	ld (Limite_horizontal),hl
 374+ 92E5 21 B8 88     	ld hl,Limite_vertical
 375+ 92E8 36 12        	ld (hl),$12
 376+ 92EA 08           	ex af,af
 377+ 92EB 18 29        	jr 1F
 378+ 92ED CD 1F 93     primit call column
 379+ 92F0 38 13        	jr c, primcuad
 380+ 92F2              segcuad
 381+ 92F2 3E 02        	ld a,2
 382+ 92F4 32 91 88     	ld (Cuad_objeto),a
 383+ 92F7 21 C0 4F     	ld hl,$4fc0
 384+ 92FA 22 B6 88     	ld (Limite_horizontal),hl
 385+ 92FD 21 B8 88     	ld hl,Limite_vertical
 386+ 9300 36 0D        	ld (hl),$0d
 387+ 9302 08           	ex af,af
 388+ 9303 18 11        	jr 1F
 389+ 9305              primcuad
 390+ 9305 3E 01        	ld a,1
 391+ 9307 32 91 88     	ld (Cuad_objeto),a
 392+ 930A 21 C0 4F     	ld hl,$4fc0
 393+ 930D 22 B6 88     	ld (Limite_horizontal),hl
 394+ 9310 21 B8 88     	ld hl,Limite_vertical
 395+ 9313 36 12        	ld (hl),$12
 396+ 9315 08           	ex af,af
 397+ 9316 CD F7 99     1 call Genera_coordenadas
 398+ 9319 21 AB 88     	ld hl,Ctrl_0
 399+ 931C CB EE        	set 5,(hl)
 400+ 931E C9           	ret
 401+ 931F
 402+ 931F              ; ------------------------------------------------------------------------------------------------------------------
 403+ 931F
 404+ 931F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 931F              ;
 406+ 931F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 931F
 408+ 931F 7D           column ld a,l
 409+ 9320 E6 1F        	and $1f
 410+ 9322 FE 10         	cp $10
 411+ 9324 C9            	ret
 412+ 9325
 413+ 9325              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9325              ;
 415+ 9325              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9325              ;
 417+ 9325              ; 14/12/22
 418+ 9325              ;
 419+ 9325              ;	Modifica: A y BC.
 420+ 9325
 421+ 9325 3A 91 88     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9328 E6 01        	and 1
 423+ 932A 28 17        	jr z,1F
 424+ 932C
 425+ 932C              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 932C
 427+ 932C 3A 83 88     	ld a,(Coordenada_X)
 428+ 932F 47           	ld b,a
 429+ 9330 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9331 79           	ld a,c
 431+ 9332 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9333 38 08        	jr c,2F
 433+ 9335 47           	ld b,a
 434+ 9336 79           	ld a,c
 435+ 9337 90           	sub b
 436+ 9338 32 B5 88     	ld (Columnas),a
 437+ 933B 18 1B        	jr 4F
 438+ 933D 79           2 ld a,c
 439+ 933E 32 B5 88     	ld (Columnas),a
 440+ 9341 18 15        	jr 4F
 441+ 9343
 442+ 9343              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9343
 444+ 9343 3A 83 88     1 ld a,(Coordenada_X)
 445+ 9346 81           	add c
 446+ 9347 3D           	dec a
 447+ 9348 D6 1F        	sub $1f
 448+ 934A 38 08        	jr c,3F
 449+ 934C 47           	ld b,a
 450+ 934D 79           	ld a,c
 451+ 934E 90           	sub b
 452+ 934F 32 B5 88     	ld (Columnas),a
 453+ 9352 18 04        	jr 4F
 454+ 9354 79           3 ld a,c
 455+ 9355 32 B5 88     	ld (Columnas),a
 456+ 9358 D9           4 exx
 457+ 9359 4F           	ld c,a
 458+ 935A D9           	exx
 459+ 935B C9            ret
 460+ 935C
 461+ 935C              ; --------------------------------------------------------------------------------------------------------------------
 462+ 935C              ;
 463+ 935C              ; 7/1/23
 464+ 935C              ;
 465+ 935C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 935C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 935C              ;
 468+ 935C              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 935C              ;	DESTRUYE: HL,B Y A.
 470+ 935C
 471+ 935C 3A 91 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 935F FE 02        	cp 2
 473+ 9361 38 18        	jr c,1F
 474+ 9363 28 16        	jr z,1F
 475+ 9365 E6 01        	and 1
 476+ 9367 28 0D        	jr z,3F
 477+ 9369
 478+ 9369              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9369
 480+ 9369 CD A5 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 936C
 482+ 936C 7D           9 ld a,l
 483+ 936D E6 1F        	and $1f
 484+ 936F 28 2A        	jr z,7F
 485+ 9371 2B           	dec hl
 486+ 9372 10 F8        	djnz 9B
 487+ 9374 18 25        	jr 7F
 488+ 9376
 489+ 9376              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9376
 491+ 9376 2A 7F 88     3 ld hl,(Posicion_actual)
 492+ 9379 18 20        	jr 7F
 493+ 937B
 494+ 937B 28 14        1 jr z,2F
 495+ 937D
 496+ 937D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 937D
 498+ 937D CD A5 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9380 7D           4 ld a,l
 500+ 9381 E6 1F        	and $1f
 501+ 9383 28 03        	jr z,6F
 502+ 9385 2B           	dec hl
 503+ 9386 10 F8        	djnz 4B
 504+ 9388 06 0F        6 ld b,15
 505+ 938A CD 06 94     5 call PreviousScan
 506+ 938D 10 FB        	djnz 5B
 507+ 938F 18 0A        	jr 7F
 508+ 9391
 509+ 9391              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9391
 511+ 9391 CD A5 93     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9394 06 0F        	ld b,15
 513+ 9396 CD 06 94     8 call PreviousScan
 514+ 9399 10 FB        	djnz 8B
 515+ 939B
 516+ 939B E5           7 push hl
 517+ 939C DD E1        	pop ix
 518+ 939E
 519+ 939E 2A 81 88     	ld hl,(Puntero_objeto)
 520+ 93A1 E5           	push hl
 521+ 93A2 FD E1        	pop iy
 522+ 93A4
 523+ 93A4 C9           	ret
 524+ 93A5
 525+ 93A5              ; --------------------------------------------------------------------------------------------------------------------
 526+ 93A5              ;
 527+ 93A5              ;	2/1/23
 528+ 93A5              ;
 529+ 93A5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 93A5              ;
 531+ 93A5              ;	Tras esta rutina tenemos:
 532+ 93A5              ;
 533+ 93A5              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 93A5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 93A5              ;
 536+ 93A5              ;	DESTRUYE!!!!! HL,B y A.
 537+ 93A5
 538+ 93A5 2A 7F 88     Operandos ld hl,(Posicion_actual)
 539+ 93A8 3A B5 88     	ld a,(Columnas)
 540+ 93AB 3D           	dec a
 541+ 93AC 20 01        	jr nz,1F
 542+ 93AE 3C           	inc a
 543+ 93AF 47           1 ld b,a
 544+ 93B0 C9           	ret
 545+ 93B1
 546+ 93B1              ; --------------------------------------------------------------------------------------------------------------------
 547+ 93B1              ;
 548+ 93B1              ;	3/1/23
 549+ 93B1              ;
 550+ 93B1              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 93B1              ;
 552+ 93B1              ;	Destruye: A,B,HL y DE.
 553+ 93B1
 554+ 93B1              Define_rutina_de_impresion
 555+ 93B1
 556+ 93B1 3A 7E 88     	ld a,(Columns)
 557+ 93B4 47           	ld b,a
 558+ 93B5 3A B5 88     	ld a,(Columnas)
 559+ 93B8 B8           	cp b
 560+ 93B9 20 0D        	jr nz,2f
 561+ 93BB
 562+ 93BB              ;	La entidad se imprime entera.
 563+ 93BB
 564+ 93BB 21 87 94     	ld hl, Indice_entidades_completas
 565+ 93BE E6 01        	and 1
 566+ 93C0 28 02        	jr z,1F
 567+ 93C2
 568+ 93C2 23           	inc hl
 569+ 93C3 23           	inc hl
 570+ 93C4
 571+ 93C4 CD 92 8B     1 call Extrae_address
 572+ 93C7 C9           	ret		;	ret
 573+ 93C8
 574+ 93C8              ;	La entidad no se imprime entera en pantalla.
 575+ 93C8
 576+ 93C8 3A 91 88     2 ld a,(Cuad_objeto)
 577+ 93CB E6 01        	and 1
 578+ 93CD 28 17        	jr z,3F
 579+ 93CF
 580+ 93CF              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 93CF
 582+ 93CF 21 8B 94     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 93D2 3A 7E 88     4 ld a,(Columns)
 584+ 93D5 E6 01        	and 1
 585+ 93D7 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 93D9
 587+ 93D9 23           	inc hl
 588+ 93DA 23           	inc hl
 589+ 93DB
 590+ 93DB 3A B5 88     	ld a,(Columnas)
 591+ 93DE E6 01        	and 1
 592+ 93E0 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 93E2
 594+ 93E2 23           	inc hl
 595+ 93E3 23           	inc hl
 596+ 93E4
 597+ 93E4 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 93E6
 599+ 93E6 21 91 94     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 93E9 18 E7        	jr 4B
 601+ 93EB
 602+ 93EB              ; --------------------------------------------------------------------------------------------------------------------
 603+ 93EB              ;
 604+ 93EB              ;	Prepara_draw
 605+ 93EB              ;
 606+ 93EB              ;	Es una rutina de carga.
 607+ 93EB              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 93EB              ;
 609+ 93EB              ;	FUNCIONAMIENTO:
 610+ 93EB              ;
 611+ 93EB              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 93EB              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 93EB              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 93EB              ;
 615+ 93EB              ;	DESTRUYE:
 616+ 93EB              ;
 617+ 93EB              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 93EB
 619+ 93EB 21 7D 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 93EE 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 93EF 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 93F0 4E           	ld c,(hl)
 623+ 93F1 2A 7F 88     	ld hl,(Posicion_actual)
 624+ 93F4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 93F6 C9           	ret
 626+ 93F7
 627+ 93F7              ;----------------------------------------------------------------------------------------------------------------
 628+ 93F7              ;
 629+ 93F7              ;	5/08/22
 630+ 93F7              ;
 631+ 93F7              ;   NextScan.
 632+ 93F7              ;
 633+ 93F7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 93F7              ;
 635+ 93F7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 93F7              ;
 637+ 93F7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 93F7              ;
 639+ 93F7              ;       DESTRUIDOS: AF y HL !!!
 640+ 93F7              ;
 641+ 93F7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 93F7              ;
 643+ 93F7
 644+ 93F7 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 93F8 7C               ld a,h
 646+ 93F9 E6 07            and 7
 647+ 93FB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 93FC
 649+ 93FC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 93FD C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 93FF 6F               ld l,a
 652+ 9400 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9401
 654+ 9401 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9402 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9404 67               ld h,a
 657+ 9405 C9               ret
 658+ 9406
 659+ 9406              ;----------------------------------------------------------------------------------------------------------------
 660+ 9406              ;
 661+ 9406              ;	5/08/22
 662+ 9406              ;
 663+ 9406              ;   PreviousScan.
 664+ 9406              ;
 665+ 9406              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9406              ;
 667+ 9406              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9406              ;
 669+ 9406              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9406              ;
 671+ 9406              ;       DESTRUIDOS: AF y HL !!!
 672+ 9406              ;
 673+ 9406              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9406              ;
 675+ 9406
 676+ 9406 7C           PreviousScan ld a,h
 677+ 9407 25               dec h               ; Dec H.
 678+ 9408 E6 07            and 7
 679+ 940A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 940B
 681+ 940B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 940C D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 940E 6F               ld l,a
 684+ 940F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9410
 686+ 9410 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9411 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9413 67               ld h,a
 689+ 9414 C9               ret
 690+ 9415
 691+ 9415              ; -----------------------------------------------------------------------------------
 692+ 9415              ;
 693+ 9415              ;	28/2/23
 694+ 9415              ;
 695+ 9415              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9415              ;	Extrae fotos de Album_de_fotos.
 697+ 9415
 698+ 9415              Extrae_foto_entidades
 699+ 9415
 700+ 9415 3A C4 88     	ld a,(Numero_de_malotes)
 701+ 9418 A7           	and a
 702+ 9419 C8           	ret z
 703+ 941A ED 73 C9 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 941E 31 00 70     	ld sp,Album_de_fotos
 705+ 9421
 706+ 9421 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 9423 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 9424 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 9425
 710+ 9425 ED 73 CB 88  	ld (Stack_2),sp
 711+ 9429 ED 7B C9 88  	ld sp,(Stack)
 712+ 942D
 713+ 942D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 942D
 715+ 942D 3E CD        	ld a,$cd
 716+ 942F 32 37 94     	ld (Imprime),a
 717+ 9432 EB           	ex de,hl
 718+ 9433 22 38 94     	ld (Imprime+1),hl
 719+ 9436 EB           	ex de,hl
 720+ 9437
 721+ 9437              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 9437
 723+ 9437 00 00 00     Imprime db 0,0,0
 724+ 943A
 725+ 943A 3A C4 88     	ld a,(Numero_de_malotes)
 726+ 943D 3D           	dec a
 727+ 943E 28 09        	jr z,1F
 728+ 9440 32 C4 88      	ld (Numero_de_malotes),a
 729+ 9443
 730+ 9443 ED 7B CB 88   	ld sp,(Stack_2)
 731+ 9447 18 D8        	jr 2B
 732+ 9449
 733+ 9449 AF           1 xor a
 734+ 944A 32 CB 88     	ld (Stack_2),a
 735+ 944D C9           	ret
 736+ 944E
 737+ 944E              ; -----------------------------------------------------------------------------------
 738+ 944E              ;
 739+ 944E              ;	28/2/23
 740+ 944E              ;
 741+ 944E              ;	Pinta los disparos generados.
 742+ 944E
 743+ 944E              Extrae_foto_disparos
 744+ 944E
 745+ 944E 3A D1 88     	ld a,(Numero_de_disparotes)
 746+ 9451 A7           	and a
 747+ 9452 C8           	ret z
 748+ 9453 ED 73 C9 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 9457 31 85 70     	ld sp,Album_de_fotos_disparos
 750+ 945A
 751+ 945A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 945C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 945D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 945E
 755+ 945E ED 73 CB 88  	ld (Stack_2),sp
 756+ 9462 ED 7B C9 88  	ld sp,(Stack)
 757+ 9466
 758+ 9466              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 9466
 760+ 9466 3E CD        	ld a,$cd
 761+ 9468 32 70 94     	ld (Imprime2),a
 762+ 946B EB           	ex de,hl
 763+ 946C 22 71 94     	ld (Imprime2+1),hl
 764+ 946F EB           	ex de,hl
 765+ 9470
 766+ 9470              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9470
 768+ 9470 00 00 00     Imprime2 db 0,0,0
 769+ 9473
 770+ 9473 3A D1 88     	ld a,(Numero_de_disparotes)
 771+ 9476 3D           	dec a
 772+ 9477 28 09        	jr z,1F
 773+ 9479 32 D1 88      	ld (Numero_de_disparotes),a
 774+ 947C
 775+ 947C ED 7B CB 88  	ld sp,(Stack_2)
 776+ 9480 18 D8        	jr 2B
 777+ 9482
 778+ 9482 AF           1 xor a
 779+ 9483 32 CB 88     	ld (Stack_2),a
 780+ 9486 C9           	ret
 781+ 9487
# file closed: Draw_XOR.asm
1184  9487              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9487              ;   índices de Rutinas de impresión.
   2+ 9487
   3+ 9487 97 94        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9489 C4 94            defw Pinta_Amadeus_3x2
   5+ 948B
   6+ 948B 1A 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 948D BA 95            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 948F 6E 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9491
  10+ 9491 44 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9493 48 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9495 FC 95            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9497
  14+ 9497
  15+ 9497              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9497              ;
  17+ 9497              ;   12/12/22
  18+ 9497              ;
  19+ 9497              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9497              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9497              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9497              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9497              ;
  24+ 9497              ;   Modifica: DE y HL.
  25+ 9497
  26+ 9497 ED 73 C9 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 949B FD F9        	ld sp,iy
  28+ 949D 06 10            ld b,16
  29+ 949F D1           1 pop de
  30+ 94A0 7B               ld a,e
  31+ 94A1 AE               xor (hl)
  32+ 94A2 77           	ld (hl),a
  33+ 94A3 23           	inc hl
  34+ 94A4 7A               ld a,d
  35+ 94A5 AE               xor (hl)
  36+ 94A6 77           	ld (hl),a
  37+ 94A7 2B           	dec hl
  38+ 94A8 24           	inc h
  39+ 94A9 7C               ld a,h
  40+ 94AA E6 07            and 7
  41+ 94AC 20 0A            jr nz,2F
  42+ 94AE 7D               ld a,l
  43+ 94AF C6 20            add a,$20
  44+ 94B1 6F               ld l,a
  45+ 94B2 38 04            jr c,2F
  46+ 94B4 7C               ld a,h
  47+ 94B5 D6 08            sub 8
  48+ 94B7 67               ld h,a
  49+ 94B8 7C           2 ld a,h
  50+ 94B9 FE 58            cp $58
  51+ 94BB 28 02            jr z,3F
  52+ 94BD 10 E0            djnz 1B
  53+ 94BF ED 7B C9 88  3 ld sp,(Stack)
  54+ 94C3 C9           	ret
  55+ 94C4
  56+ 94C4 ED 73 C9 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 94C8 FD F9        	ld sp,iy
  58+ 94CA 06 08            ld b,8
  59+ 94CC D1           1 pop de
  60+ 94CD 7B               ld a,e
  61+ 94CE AE               xor (hl)
  62+ 94CF 77           	ld (hl),a
  63+ 94D0 23           	inc hl
  64+ 94D1 7A               ld a,d
  65+ 94D2 AE               xor (hl)
  66+ 94D3 77           	ld (hl),a
  67+ 94D4 23           	inc hl
  68+ 94D5 D1           	pop de
  69+ 94D6 7B               ld a,e
  70+ 94D7 AE               xor (hl)
  71+ 94D8 77           	ld (hl),a
  72+ 94D9 2B           	dec hl
  73+ 94DA 2B           	dec hl
  74+ 94DB 24           	inc h
  75+ 94DC 7C               ld a,h
  76+ 94DD E6 07            and 7
  77+ 94DF 20 0A            jr nz,2F
  78+ 94E1 7D               ld a,l
  79+ 94E2 C6 20            add a,$20
  80+ 94E4 6F               ld l,a
  81+ 94E5 38 04            jr c,2F
  82+ 94E7 7C               ld a,h
  83+ 94E8 D6 08            sub 8
  84+ 94EA 67               ld h,a
  85+ 94EB 7C           2 ld a,h
  86+ 94EC FE 58            cp $58
  87+ 94EE 28 25            jr z,4F
  88+ 94F0 7A               ld a,d
  89+ 94F1 AE               xor (hl)
  90+ 94F2 77               ld (hl),a
  91+ 94F3 D1           	pop de
  92+ 94F4 23           	inc hl
  93+ 94F5 7B               ld a,e
  94+ 94F6 AE               xor (hl)
  95+ 94F7 77           	ld (hl),a
  96+ 94F8 23           	inc hl
  97+ 94F9 7A               ld a,d
  98+ 94FA AE               xor (hl)
  99+ 94FB 77           	ld (hl),a
 100+ 94FC 2B           	dec hl
 101+ 94FD 2B           	dec hl
 102+ 94FE 24           	inc h
 103+ 94FF 7C               ld a,h
 104+ 9500 E6 07            and 7
 105+ 9502 20 0A            jr nz,3F
 106+ 9504 7D               ld a,l
 107+ 9505 C6 20            add a,$20
 108+ 9507 6F               ld l,a
 109+ 9508 38 04            jr c,3F
 110+ 950A 7C               ld a,h
 111+ 950B D6 08            sub 8
 112+ 950D 67               ld h,a
 113+ 950E 7C           3 ld a,h
 114+ 950F FE 58            cp $58
 115+ 9511 28 02            jr z,4F
 116+ 9513 10 B7            djnz 1B
 117+ 9515 ED 7B C9 88  4 ld sp,(Stack)
 118+ 9519 C9           	ret
 119+ 951A
 120+ 951A              ; ---------------------------------------------------
 121+ 951A
 122+ 951A ED 73 C9 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 951E FD F9        	ld sp,iy
 124+ 9520
 125+ 9520              ; >>>
 126+ 9520
 127+ 9520 06 10            ld b,16
 128+ 9522 D1           1 pop de
 129+ 9523 7A           	ld a,d
 130+ 9524 AE           	xor (hl)
 131+ 9525 77           	ld (hl),a
 132+ 9526 24           	inc h
 133+ 9527 7C               ld a,h
 134+ 9528 E6 07            and 7
 135+ 952A 20 0C            jr nz,2F
 136+ 952C 7D               ld a,l
 137+ 952D C6 20            add a,$20
 138+ 952F 6F               ld l,a
 139+ 9530 38 06            jr c,2F
 140+ 9532 7C               ld a,h
 141+ 9533 D6 08            sub 8
 142+ 9535 67               ld h,a
 143+ 9536 18 00            jr 2F
 144+ 9538 7C           2 ld a,h
 145+ 9539 FE 58            cp $58
 146+ 953B 28 02            jr z,3F
 147+ 953D 10 E3            djnz 1B
 148+ 953F ED 7B C9 88  3 ld sp,(Stack)
 149+ 9543 C9           	ret
 150+ 9544
 151+ 9544 ED 73 C9 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9548 FD F9        	ld sp,iy
 153+ 954A
 154+ 954A              ; >>>
 155+ 954A
 156+ 954A 06 10            ld b,16
 157+ 954C D1           1 pop de
 158+ 954D 7B           	ld a,e
 159+ 954E AE           	xor (hl)
 160+ 954F 77           	ld (hl),a
 161+ 9550 24           	inc h
 162+ 9551 7C               ld a,h
 163+ 9552 E6 07            and 7
 164+ 9554 20 0C            jr nz,2F
 165+ 9556 7D               ld a,l
 166+ 9557 C6 20            add a,$20
 167+ 9559 6F               ld l,a
 168+ 955A 38 06            jr c,2F
 169+ 955C 7C               ld a,h
 170+ 955D D6 08            sub 8
 171+ 955F 67               ld h,a
 172+ 9560 18 00            jr 2F
 173+ 9562 7C           2 ld a,h
 174+ 9563 FE 58            cp $58
 175+ 9565 28 02            jr z,3F
 176+ 9567 10 E3            djnz 1B
 177+ 9569 ED 7B C9 88  3 ld sp,(Stack)
 178+ 956D C9           	ret
 179+ 956E
 180+ 956E              ; ---------------------------------------------------
 181+ 956E
 182+ 956E ED 73 C9 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9572 FD F9        	ld sp,iy
 184+ 9574 06 08            ld b,8
 185+ 9576 D1           1 pop de
 186+ 9577 7A           	ld a,d
 187+ 9578 AE           	xor (hl)
 188+ 9579 77           	ld (hl),a
 189+ 957A 23           	inc hl
 190+ 957B D1           	pop de
 191+ 957C 7B           	ld a,e
 192+ 957D AE           	xor (hl)
 193+ 957E 77           	ld (hl),a
 194+ 957F 2B           	dec hl
 195+ 9580 24            	inc h
 196+ 9581 7C               ld a,h
 197+ 9582 E6 07            and 7
 198+ 9584 20 0A            jr nz,2F
 199+ 9586 7D               ld a,l
 200+ 9587 C6 20            add a,$20
 201+ 9589 6F               ld l,a
 202+ 958A 38 04            jr c,2F
 203+ 958C 7C               ld a,h
 204+ 958D D6 08            sub 8
 205+ 958F 67               ld h,a
 206+ 9590 7C           2 ld a,h
 207+ 9591 FE 58            cp $58
 208+ 9593 28 20            jr z,4F
 209+ 9595 D1               pop de
 210+ 9596 7B           	ld a,e
 211+ 9597 AE           	xor (hl)
 212+ 9598 77           	ld (hl),a
 213+ 9599 23           	inc hl
 214+ 959A 7A           	ld a,d
 215+ 959B AE           	xor (hl)
 216+ 959C 77           	ld (hl),a
 217+ 959D 2B           	dec hl
 218+ 959E 24           	inc h
 219+ 959F 7C               ld a,h
 220+ 95A0 E6 07            and 7
 221+ 95A2 20 0A            jr nz,3F
 222+ 95A4 7D               ld a,l
 223+ 95A5 C6 20            add a,$20
 224+ 95A7 6F               ld l,a
 225+ 95A8 38 04            jr c,3F
 226+ 95AA 7C               ld a,h
 227+ 95AB D6 08            sub 8
 228+ 95AD 67               ld h,a
 229+ 95AE 7C           3 ld a,h
 230+ 95AF FE 58            cp $58
 231+ 95B1 28 02            jr z,4F
 232+ 95B3 10 C1            djnz 1B
 233+ 95B5 ED 7B C9 88  4 ld sp,(Stack)
 234+ 95B9 C9           	ret
 235+ 95BA
 236+ 95BA ED 73 C9 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 95BE FD F9        	ld sp,iy
 238+ 95C0 06 08            ld b,8
 239+ 95C2 D1           1 pop de
 240+ 95C3 D1           	pop de
 241+ 95C4 7B           	ld a,e
 242+ 95C5 AE           	xor (hl)
 243+ 95C6 77           	ld (hl),a
 244+ 95C7 24            	inc h
 245+ 95C8 7C               ld a,h
 246+ 95C9 E6 07            and 7
 247+ 95CB 20 0A            jr nz,2F
 248+ 95CD 7D               ld a,l
 249+ 95CE C6 20            add a,$20
 250+ 95D0 6F               ld l,a
 251+ 95D1 38 04            jr c,2F
 252+ 95D3 7C               ld a,h
 253+ 95D4 D6 08            sub 8
 254+ 95D6 67               ld h,a
 255+ 95D7 7C           2 ld a,h
 256+ 95D8 FE 58            cp $58
 257+ 95DA 28 1B            jr z,4F
 258+ 95DC D1               pop de
 259+ 95DD 7A           	ld a,d
 260+ 95DE AE           	xor (hl)
 261+ 95DF 77           	ld (hl),a
 262+ 95E0 24           	inc h
 263+ 95E1 7C               ld a,h
 264+ 95E2 E6 07            and 7
 265+ 95E4 20 0A            jr nz,3F
 266+ 95E6 7D               ld a,l
 267+ 95E7 C6 20            add a,$20
 268+ 95E9 6F               ld l,a
 269+ 95EA 38 04            jr c,3F
 270+ 95EC 7C               ld a,h
 271+ 95ED D6 08            sub 8
 272+ 95EF 67               ld h,a
 273+ 95F0 7C           3 ld a,h
 274+ 95F1 FE 58            cp $58
 275+ 95F3 28 02            jr z,4F
 276+ 95F5 10 CB            djnz 1B
 277+ 95F7 ED 7B C9 88  4 ld sp,(Stack)
 278+ 95FB C9           	ret
 279+ 95FC
 280+ 95FC ED 73 C9 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9600 FD F9        	ld sp,iy
 282+ 9602 06 08            ld b,8
 283+ 9604 D1           1 pop de
 284+ 9605 7B           	ld a,e
 285+ 9606 AE           	xor (hl)
 286+ 9607 77           	ld (hl),a
 287+ 9608 23           	inc hl
 288+ 9609 7A           	ld a,d
 289+ 960A AE           	xor (hl)
 290+ 960B 77           	ld (hl),a
 291+ 960C 2B           	dec hl
 292+ 960D 24             	inc h
 293+ 960E 7C               ld a,h
 294+ 960F E6 07            and 7
 295+ 9611 20 0A            jr nz,2F
 296+ 9613 7D               ld a,l
 297+ 9614 C6 20            add a,$20
 298+ 9616 6F               ld l,a
 299+ 9617 38 04            jr c,2F
 300+ 9619 7C               ld a,h
 301+ 961A D6 08            sub 8
 302+ 961C 67               ld h,a
 303+ 961D 7C           2 ld a,h
 304+ 961E FE 58            cp $58
 305+ 9620 28 21            jr z,4F
 306+ 9622 D1               pop de
 307+ 9623 7A           	ld a,d
 308+ 9624 AE           	xor (hl)
 309+ 9625 77           	ld (hl),a
 310+ 9626 23           	inc hl
 311+ 9627 D1               pop de
 312+ 9628 7B           	ld a,e
 313+ 9629 AE           	xor (hl)
 314+ 962A 77           	ld (hl),a
 315+ 962B 2B           	dec hl
 316+ 962C 24           	inc h
 317+ 962D 7C               ld a,h
 318+ 962E E6 07            and 7
 319+ 9630 20 0A            jr nz,3F
 320+ 9632 7D               ld a,l
 321+ 9633 C6 20            add a,$20
 322+ 9635 6F               ld l,a
 323+ 9636 38 04            jr c,3F
 324+ 9638 7C               ld a,h
 325+ 9639 D6 08            sub 8
 326+ 963B 67               ld h,a
 327+ 963C 7C           3 ld a,h
 328+ 963D FE 58            cp $58
 329+ 963F 28 02            jr z,4F
 330+ 9641 10 C1            djnz 1B
 331+ 9643 ED 7B C9 88  4 ld sp,(Stack)
 332+ 9647 C9           	ret
 333+ 9648
 334+ 9648 ED 73 C9 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 964C FD F9        	ld sp,iy
 336+ 964E 06 08            ld b,8
 337+ 9650 D1           1 pop de
 338+ 9651 7B           	ld a,e
 339+ 9652 AE           	xor (hl)
 340+ 9653 77           	ld (hl),a
 341+ 9654 24            	inc h
 342+ 9655 7C               ld a,h
 343+ 9656 E6 07            and 7
 344+ 9658 20 0A            jr nz,2F
 345+ 965A 7D               ld a,l
 346+ 965B C6 20            add a,$20
 347+ 965D 6F               ld l,a
 348+ 965E 38 04            jr c,2F
 349+ 9660 7C               ld a,h
 350+ 9661 D6 08            sub 8
 351+ 9663 67               ld h,a
 352+ 9664 7C           2 ld a,h
 353+ 9665 FE 58            cp $58
 354+ 9667 28 1C            jr z,4F
 355+ 9669 D1               pop de
 356+ 966A 7A           	ld a,d
 357+ 966B AE           	xor (hl)
 358+ 966C 77           	ld (hl),a
 359+ 966D 24           	inc h
 360+ 966E 7C               ld a,h
 361+ 966F E6 07            and 7
 362+ 9671 20 0A            jr nz,3F
 363+ 9673 7D               ld a,l
 364+ 9674 C6 20            add a,$20
 365+ 9676 6F               ld l,a
 366+ 9677 38 04            jr c,3F
 367+ 9679 7C               ld a,h
 368+ 967A D6 08            sub 8
 369+ 967C 67               ld h,a
 370+ 967D 7C           3 ld a,h
 371+ 967E FE 58            cp $58
 372+ 9680 28 03            jr z,4F
 373+ 9682 D1               pop de
 374+ 9683 10 CB            djnz 1B
 375+ 9685 ED 7B C9 88  4 ld sp,(Stack)
 376+ 9689 C9           	ret
 377+ 968A
 378+ 968A              ; ---------------------------------------------------
 379+ 968A              ;
 380+ 968A              ;   27/02/23
 381+ 968A              ;
 382+ 968A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 968A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 968A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 968A
 386+ 968A ED 73 C9 88  Pinta_Disparo ld (Stack),sp
 387+ 968E FD F9            ld sp,iy
 388+ 9690 06 02            ld b,2
 389+ 9692 D1           1 pop de
 390+ 9693 7B               ld a,e
 391+ 9694 AE               xor (hl)
 392+ 9695 77               ld (hl),a
 393+ 9696 23               inc hl
 394+ 9697 7A               ld a,d
 395+ 9698 AE               xor (hl)
 396+ 9699 77               ld (hl),a
 397+ 969A 2B               dec hl
 398+ 969B
 399+ 969B 24               inc h
 400+ 969C 7C               ld a,h
 401+ 969D E6 07            and 7
 402+ 969F 20 0A            jr nz,2F
 403+ 96A1 7D               ld a,l
 404+ 96A2 C6 20            add a,$20
 405+ 96A4 6F               ld l,a
 406+ 96A5 38 04            jr c,2F
 407+ 96A7 7C               ld a,h
 408+ 96A8 D6 08            sub 8
 409+ 96AA 67               ld h,a
 410+ 96AB 7C           2 ld a,h
 411+ 96AC FE 58            cp $58
 412+ 96AE 28 02            jr z,3F
 413+ 96B0
 414+ 96B0 10 E0            djnz 1B
 415+ 96B2 ED 7B C9 88  3 ld sp,(Stack)
 416+ 96B6 C9               ret
 417+ 96B7
# file closed: Rutinas_de_impresion_sprites.asm
1185  96B7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 96B7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 96B7              ;
   3+ 96B7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 96B7              ;
   5+ 96B7              ; *****************************************************************************************************************************************************************************************
   6+ 96B7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 96B7
   8+ 96B7 7C           calcula_tercio ld a,h
   9+ 96B8 E6 18        	and $18
  10+ 96BA CB 2F        	sra a
  11+ 96BC CB 2F        	sra a
  12+ 96BE CB 2F        	sra a
  13+ 96C0 C9           	ret
  14+ 96C1
# file closed: calcula_tercio.asm
1186  96C1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 96C1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 96C1              ;
   3+ 96C1              ;
   4+ 96C1              ;	CLS.
   5+ 96C1              ;
   6+ 96C1              ;	Limpia la pantalla y define sus atributos.
   7+ 96C1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 96C1              ;
   9+ 96C1              ;	COLORES: 0 ..... NEGRO
  10+ 96C1              ;    		 1 ..... AZUL
  11+ 96C1              ; 			 2 ..... ROJO
  12+ 96C1              ;			 3 ..... MAGENTA
  13+ 96C1              ; 			 4 ..... VERDE
  14+ 96C1              ; 			 5 ..... CIAN
  15+ 96C1              ;			 6 ..... AMARILLO
  16+ 96C1              ; 			 7 ..... BLANCO
  17+ 96C1              ;
  18+ 96C1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 96C1              ;
  20+ 96C1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 96C1
  22+ 96C1
  23+ 96C1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 96C4 11 01 40     	LD DE,$4001
  25+ 96C7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 96CA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 96CC ED B0        	LDIR
  28+ 96CE 01 FF 02     	LD BC,767
  29+ 96D1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 96D2 ED B0        	LDIR
  31+ 96D4 C9           	ret
  32+ 96D5
# file closed: Cls.asm
1187  96D5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 96D5              ; ******************************************************************************************************************************************************************************************
   2+ 96D5              ;
   3+ 96D5              ;   20/05/23
   4+ 96D5              ;
   5+ 96D5              ;	Recompone_posicion_inicio
   6+ 96D5              ;
   7+ 96D5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 96D5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 96D5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 96D5              ;	_ a una u otra rutina.
  11+ 96D5
  12+ 96D5              Recompone_posicion_inicio
  13+ 96D5
  14+ 96D5 2A 8F 88     	ld hl,(Posicion_inicio)
  15+ 96D8 7D           	ld a,l
  16+ 96D9 E6 1F        	and $1f
  17+ 96DB 28 08        	jr z,1F
  18+ 96DD
  19+ 96DD FE 1F        	cp $1f
  20+ 96DF C0           	ret nz
  21+ 96E0
  22+ 96E0 CD 63 98     	call Mov_left
  23+ 96E3 18 03        	jr 2F
  24+ 96E5
  25+ 96E5 CD 45 97     1 call Mov_right
  26+ 96E8
  27+ 96E8 C9           2 ret
  28+ 96E9
  29+ 96E9              ; ******************************************************************************************************************************************************************************************
  30+ 96E9              ;
  31+ 96E9              ;   22/01/23
  32+ 96E9              ;
  33+ 96E9              ;	Mov_down
  34+ 96E9              ;
  35+ 96E9              ; 	Mueve el Sprite X px hacia abajo.
  36+ 96E9              ;
  37+ 96E9              ;
  38+ 96E9 21 AB 88     Mov_down ld hl,Ctrl_0
  39+ 96EC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  40+ 96EE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  41+ 96EE              ; 																	; _ en el caso de que no lo haya.
  42+ 96EE 3A 95 88     	ld a,(Vel_down)
  43+ 96F1 47           	ld b,a
  44+ 96F2 2A 7F 88         ld hl,(Posicion_actual)
  45+ 96F5 CD B7 96     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  46+ 96F8 E6 02        	and 2
  47+ 96FA 28 0F        	jr z,1F
  48+ 96FC
  49+ 96FC              ; Nos encontramos en el último tercio de pantalla.
  50+ 96FC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  51+ 96FC
  52+ 96FC 7C           	ld a,h
  53+ 96FD FE 57        	cp $57
  54+ 96FF 20 0A        	jr nz,1F
  55+ 9701 7D           	ld a,l
  56+ 9702 C6 20        	add $20
  57+ 9704 30 05        	jr nc,1F
  58+ 9706
  59+ 9706              ; ------------------------------
  60+ 9706 CD E1 99     	call Reaparece_arriba
  61+ 9709              ;	call Reinicio
  62+ 9709              ; ------------------------------
  63+ 9709
  64+ 9709 18 08        	jr 3F
  65+ 970B CD F7 93     1 call NextScan
  66+ 970E 22 7F 88     	ld (Posicion_actual),hl
  67+ 9711 10 E2            djnz 2B
  68+ 9713 CD F7 99     3 call Genera_coordenadas
  69+ 9716 C9           	ret
  70+ 9717
  71+ 9717              ; ******************************************************************************************************************************************************************************************
  72+ 9717              ;
  73+ 9717              ;   22/01/23
  74+ 9717              ;
  75+ 9717              ;	Mov_up
  76+ 9717              ;
  77+ 9717              ; 	Mueve el Sprite hacia arriba.
  78+ 9717              ;
  79+ 9717              ;
  80+ 9717 21 AB 88     Mov_up ld hl,Ctrl_0
  81+ 971A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  82+ 971C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  83+ 971C              ; 																		; _ en el caso de que no lo haya.
  84+ 971C 3A 94 88     	ld a,(Vel_up)
  85+ 971F 47           	ld b,a
  86+ 9720 2A 7F 88     	ld hl,(Posicion_actual)
  87+ 9723 CD B7 96     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  88+ 9726 A7           	and a
  89+ 9727 20 10        	jr nz,1F
  90+ 9729
  91+ 9729              ; Nos encontramos en el 1er tercio de pantalla.
  92+ 9729              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  93+ 9729
  94+ 9729 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  95+ 972A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  96+ 972C 20 0B            jr nz,1F
  97+ 972E 7D               ld a,l
  98+ 972F D6 20            sub $20
  99+ 9731 30 06            jr nc,1F
 100+ 9733 25               dec h
 101+ 9734
 102+ 9734              ; -----------------------------
 103+ 9734 CD D1 99         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 104+ 9737              ;	call Reinicio
 105+ 9737              ; -----------------------------
 106+ 9737
 107+ 9737 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 108+ 9739 CD 06 94     1 call PreviousScan
 109+ 973C 22 7F 88     	ld (Posicion_actual),hl
 110+ 973F 10 E2            djnz 3B
 111+ 9741 CD F7 99     2 call Genera_coordenadas
 112+ 9744 C9           	ret
 113+ 9745
 114+ 9745              ; ******************************************************************************************************************************************************************************************
 115+ 9745              ;
 116+ 9745              ;	19/10/22
 117+ 9745              ;
 118+ 9745              ;	Mov_right.
 119+ 9745              ;
 120+ 9745              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 121+ 9745              ;
 122+ 9745
 123+ 9745 21 AB 88     Mov_right ld hl,Ctrl_0
 124+ 9748 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 125+ 974A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 126+ 974A              ; 																	; _ en el caso de que no lo haya.
 127+ 974A 3A AB 88     	ld a,(Ctrl_0)
 128+ 974D CB 77        	bit 6,a
 129+ 974F 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 130+ 9751
 131+ 9751 CD 7F 99     	call Stop_Amadeus_right
 132+ 9754 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 133+ 9755 18 4D        	jr 8F
 134+ 9757
 135+ 9757 3A 83 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 136+ 975A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 137+ 975C 20 46        	jr nz,8F
 138+ 975E
 139+ 975E 3A 85 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 140+ 9761 A7           	and a 															; _[3] para continuar con el DESPLZ.
 141+ 9762 28 40        	jr z,8F
 142+ 9764
 143+ 9764              ; ---------- ---------- ----------
 144+ 9764              ;
 145+ 9764              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 146+ 9764
 147+ 9764 3A 93 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 148+ 9767 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 149+ 9769 28 11        	jr z,1F
 150+ 976B 38 06        	jr c,6F
 151+ 976D FE 04        	cp 4
 152+ 976F 28 14        	jr z,7F
 153+ 9771 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 154+ 9773
 155+ 9773              ; ---------- ---------- ----------
 156+ 9773              ;
 157+ 9773              ; Perfiles de velocidad
 158+ 9773              ;
 159+ 9773
 160+ 9773 3A 85 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 161+ 9776 FE FE        	cp $fe
 162+ 9778 20 2A        	jr nz,8F
 163+ 977A 18 10        	jr 3F
 164+ 977C 3A 85 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 165+ 977F FE FD        	cp $fd
 166+ 9781 20 21        	jr nz,8F
 167+ 9783 18 07        	jr 3F
 168+ 9785 3A 85 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 169+ 9788 FE FB        	cp $fb
 170+ 978A 20 18        	jr nz,8F
 171+ 978C
 172+ 978C              ; ---------- ---------- ----------
 173+ 978C
 174+ 978C              3
 175+ 978C CD BF 99     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 176+ 978F              ;	call Reinicio
 177+ 978F
 178+ 978F              ; ---------- ---------- ----------
 179+ 978F              ;
 180+ 978F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 181+ 978F
 182+ 978F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 183+ 9791 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 184+ 9792 CD AB 97     	call DESPLZ_DER
 185+ 9795 C1           	pop bc
 186+ 9796 10 F9        	djnz 5B
 187+ 9798 2A 7F 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 188+ 979B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 189+ 979C 22 7F 88     	ld (Posicion_actual),hl
 190+ 979F CD F7 99     	call Genera_coordenadas
 191+ 97A2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 192+ 97A4
 193+ 97A4              ; ---------- ---------- ----------
 194+ 97A4
 195+ 97A4 2A 7F 88     8 ld hl,(Posicion_actual)
 196+ 97A7 CD AB 97     	call DESPLZ_DER
 197+ 97AA C9           2 ret
 198+ 97AB
 199+ 97AB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 200+ 97AB              ;
 201+ 97AB              ;	22/9/22
 202+ 97AB              ;
 203+ 97AB
 204+ 97AB CD BA 97     DESPLZ_DER call Desplaza_derecha
 205+ 97AE CD 06 98         call modifica_parametros_1er_DESPLZ_2
 206+ 97B1 CD 2F 98         call Ciclo_completo
 207+ 97B4 21 AB 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 208+ 97B7 CB FE        	set 7,(hl)
 209+ 97B9 C9           	ret
 210+ 97BA
 211+ 97BA              ; ******************************************************************************************************************************************************************************************
 212+ 97BA              ;	15/02/23
 213+ 97BA              ;
 214+ 97BA
 215+ 97BA 3A 93 88     Desplaza_derecha ld a,(Vel_right)
 216+ 97BD 47           	ld b,a
 217+ 97BE 2A 8B 88     	ld hl,(Puntero_DESPLZ_der)
 218+ 97C1 23           1 inc hl
 219+ 97C2 23           	inc hl
 220+ 97C3 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 221+ 97C5 22 8B 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 222+ 97C8 CD 92 8B     	call Extrae_address
 223+ 97CB 22 81 88     	ld (Puntero_objeto),hl
 224+ 97CE
 225+ 97CE              ; Modifica (Puntero_DESPLZ_izq).
 226+ 97CE
 227+ 97CE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 228+ 97CE              ; Cuántos movimientos hemos hecho ??
 229+ 97CE              ; DE contiene (Puntero_DESPLZ_der).
 230+ 97CE
 231+ 97CE 2A 87 88     7 ld hl,(Indice_Sprite_der)
 232+ 97D1 EB           	ex de,hl
 233+ 97D2 A7           	and a
 234+ 97D3 ED 52        	sbc hl,de
 235+ 97D5 CB 3D        	srl l
 236+ 97D7 3E 08        6 ld a,8
 237+ 97D9 95           	sub l
 238+ 97DA 30 1E        	jr nc,3F
 239+ 97DC
 240+ 97DC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 241+ 97DC              ; B="0".
 242+ 97DC
 243+ 97DC 04           4 inc b
 244+ 97DD 3C           	inc a
 245+ 97DE 20 FC        	jr nz,4B
 246+ 97E0 78           	ld a,b
 247+ 97E1 08           	ex af,af
 248+ 97E2 2A 87 88     	ld hl,(Indice_Sprite_der)
 249+ 97E5 23           5 inc hl
 250+ 97E6 23           	inc hl
 251+ 97E7 10 FC        	djnz 5B
 252+ 97E9 22 8B 88     	ld (Puntero_DESPLZ_der),hl
 253+ 97EC CD 92 8B     	call Extrae_address
 254+ 97EF 22 81 88     	ld (Puntero_objeto),hl
 255+ 97F2
 256+ 97F2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 257+ 97F2              ; _(Posicion_actual).
 258+ 97F2
 259+ 97F2 21 7F 88     	ld hl,Posicion_actual
 260+ 97F5 34           	inc (hl)
 261+ 97F6 08               ex af,af
 262+ 97F7 6F           	ld l,a
 263+ 97F8 18 DD        	jr 6B
 264+ 97FA
 265+ 97FA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 266+ 97FA
 267+ 97FA 47           3 ld b,a
 268+ 97FB 2A 89 88     	ld hl,(Indice_Sprite_izq)
 269+ 97FE 23           2 inc hl
 270+ 97FF 23           	inc hl
 271+ 9800 10 FC        	djnz 2B
 272+ 9802 22 8D 88     	ld (Puntero_DESPLZ_izq),hl
 273+ 9805 C9           8 ret
 274+ 9806
 275+ 9806              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 276+ 9806              ;
 277+ 9806              ;	24/7/22
 278+ 9806              ;
 279+ 9806              ;	modifica_parametros_1er_DESPLZ_2
 280+ 9806              ;
 281+ 9806              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 282+ 9806              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 283+ 9806              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 284+ 9806
 285+ 9806 3A 85 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 286+ 9809 A7           	and a
 287+ 980A 20 1F        	jr nz,1F
 288+ 980C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 289+ 980E 32 85 88         ld (CTRL_DESPLZ),a
 290+ 9811
 291+ 9811 21 7E 88     	ld hl,Columns
 292+ 9814 34           	inc (hl)
 293+ 9815 3A 91 88     	ld a,(Cuad_objeto)
 294+ 9818 E6 01        	and 1
 295+ 981A 28 0F        	jr z,1F
 296+ 981C 2A 7F 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 297+ 981F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 298+ 9820 22 7F 88     	ld (Posicion_actual),hl
 299+ 9823 CD F7 99     	call Genera_coordenadas
 300+ 9826 CD 8B 99     	call Inc_CTRL_DESPLZ
 301+ 9829 18 03        	jr 2F
 302+ 982B CD 8B 99     1 call Inc_CTRL_DESPLZ
 303+ 982E C9           2 ret
 304+ 982F
 305+ 982F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 306+ 982F              ;
 307+ 982F              ;	24/7/22
 308+ 982F              ;
 309+ 982F              ;	Ciclo_completo.
 310+ 982F              ;
 311+ 982F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 312+ 982F              ;
 313+ 982F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 314+ 982F              ; 	Decrementamos (Columns).
 315+ 982F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 316+ 982F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 317+ 982F
 318+ 982F
 319+ 982F 3A 85 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 320+ 9832 FE FF        	cp $ff
 321+ 9834 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 322+ 9836 E6 F0        	and $f0
 323+ 9838 20 28        	jr nz,3F
 324+ 983A
 325+ 983A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 326+ 983A
 327+ 983A 3A 85 88     	ld a,(CTRL_DESPLZ)
 328+ 983D 47           	ld b,a
 329+ 983E 3E F8        	ld a,$f8
 330+ 9840 80           	add b
 331+ 9841 32 85 88     	ld (CTRL_DESPLZ),a
 332+ 9844 18 1C        	jr 3F
 333+ 9846 21 7E 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 334+ 9849 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 335+ 984A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 336+ 984B 32 85 88     	ld (CTRL_DESPLZ),a
 337+ 984E 3A 91 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 338+ 9851 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 339+ 9853 20 0A        	jr nz,2F
 340+ 9855 2A 7F 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 341+ 9858 23           	inc hl
 342+ 9859 22 7F 88     	ld (Posicion_actual),hl
 343+ 985C CD F7 99     	call Genera_coordenadas
 344+ 985F
 345+ 985F              ; Inicia el puntero de Sprite.
 346+ 985F
 347+ 985F CD A9 8B     2 call Inicia_puntero_objeto_der
 348+ 9862 C9           3 ret
 349+ 9863
 350+ 9863              ; ******************************************************************************************************************************************************************************************
 351+ 9863              ;
 352+ 9863              ;	15/02/23
 353+ 9863              ;
 354+ 9863              ;	Mov_left.
 355+ 9863              ;
 356+ 9863              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 357+ 9863              ;
 358+ 9863 21 AB 88     Mov_left ld hl,Ctrl_0
 359+ 9866 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 360+ 9868              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 361+ 9868              ; 																	; _ en el caso de que no lo haya.
 362+ 9868 3A AB 88     	ld a,(Ctrl_0)
 363+ 986B CB 77        	bit 6,a
 364+ 986D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 365+ 986F
 366+ 986F CD 85 99     	call Stop_Amadeus_left
 367+ 9872 C8           	ret z
 368+ 9873 20 4A        	jr nz,8F
 369+ 9875
 370+ 9875 3A 83 88     11 ld a,(Coordenada_X)
 371+ 9878 A7           	and a
 372+ 9879 20 44        	jr nz,8F
 373+ 987B
 374+ 987B 3A 85 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 375+ 987E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 376+ 987F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 377+ 9881
 378+ 9881              ; ---------- ---------- ----------
 379+ 9881
 380+ 9881 3A 92 88     	ld a,(Vel_left)
 381+ 9884 FE 02        	cp 2
 382+ 9886 28 0F        	jr z,1F
 383+ 9888 38 04        	jr c,6F
 384+ 988A FE 04        	cp 4
 385+ 988C 28 12        	jr z,7F
 386+ 988E
 387+ 988E              ; ---------- ---------- ----------
 388+ 988E
 389+ 988E 3A 85 88     6 ld a,(CTRL_DESPLZ)
 390+ 9891 FE F8        	cp $f8
 391+ 9893 20 2A        	jr nz,8F
 392+ 9895 18 10        	jr 4F
 393+ 9897 3A 85 88     1 ld a,(CTRL_DESPLZ)
 394+ 989A FE F9        	cp $f9
 395+ 989C 20 21        	jr nz,8F
 396+ 989E 18 07        	jr 4F
 397+ 98A0 3A 85 88     7 ld a,(CTRL_DESPLZ)
 398+ 98A3 FE FB        	cp $fb
 399+ 98A5 20 18        	jr nz,8F
 400+ 98A7
 401+ 98A7              ; ---------- ---------- ----------
 402+ 98A7
 403+ 98A7              4
 404+ 98A7 CD AD 99     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 405+ 98AA              ;	call Reinicio
 406+ 98AA
 407+ 98AA              ; ---------- ---------- ----------
 408+ 98AA
 409+ 98AA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 410+ 98AC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 411+ 98AD
 412+ 98AD              ;	ld hl,(Indice_Sprite_izq)
 413+ 98AD              ;	ld (Puntero_DESPLZ_izq),hl
 414+ 98AD
 415+ 98AD CD C6 98     	call DESPLZ_IZQ
 416+ 98B0 C1           	pop bc
 417+ 98B1 10 F9        	djnz 5B
 418+ 98B3 2A 7F 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 419+ 98B6 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 420+ 98B7 22 7F 88     	ld (Posicion_actual),hl
 421+ 98BA CD F7 99     	call Genera_coordenadas
 422+ 98BD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 423+ 98BF
 424+ 98BF              ; ---------- ---------- ----------
 425+ 98BF
 426+ 98BF              ; Movemos, no hay recolocación.
 427+ 98BF
 428+ 98BF 2A 7F 88     8 ld hl,(Posicion_actual)
 429+ 98C2 CD C6 98     	call DESPLZ_IZQ
 430+ 98C5 C9           2 ret
 431+ 98C6
 432+ 98C6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 433+ 98C6              ;
 434+ 98C6              ;	22/9/22
 435+ 98C6
 436+ 98C6              DESPLZ_IZQ
 437+ 98C6
 438+ 98C6 CD D5 98     	call Desplaza_izquierda
 439+ 98C9 CD 21 99         call modifica_parametros_1er_DESPLZ
 440+ 98CC CD 49 99     	call Ciclo_completo_2
 441+ 98CF 21 AB 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 442+ 98D2 CB BE        	res 7,(hl)
 443+ 98D4 C9           	ret
 444+ 98D5
 445+ 98D5              Desplaza_izquierda
 446+ 98D5
 447+ 98D5 3A 92 88     	ld a,(Vel_left)
 448+ 98D8 47           	ld b,a
 449+ 98D9 2A 8D 88     	ld hl,(Puntero_DESPLZ_izq)
 450+ 98DC 23           1 inc hl
 451+ 98DD 23           	inc hl
 452+ 98DE 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 453+ 98E0 22 8D 88     	ld (Puntero_DESPLZ_izq),hl
 454+ 98E3 CD 92 8B     	call Extrae_address
 455+ 98E6 22 81 88     	ld (Puntero_objeto),hl
 456+ 98E9
 457+ 98E9              ; Modifica (Puntero_DESPLZ_der).
 458+ 98E9
 459+ 98E9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 460+ 98E9              ; Cuántos movimientos hemos hecho ??
 461+ 98E9              ; DE contiene (Puntero_DESPLZ_izq).
 462+ 98E9
 463+ 98E9 2A 89 88     7 ld hl,(Indice_Sprite_izq)
 464+ 98EC EB           	ex de,hl
 465+ 98ED A7           	and a
 466+ 98EE ED 52        	sbc hl,de
 467+ 98F0 CB 3D        	srl l
 468+ 98F2 3E 08        6 ld a,8
 469+ 98F4 95           	sub l
 470+ 98F5 30 1E        	jr nc,3F
 471+ 98F7
 472+ 98F7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 473+ 98F7              ; B="0".
 474+ 98F7
 475+ 98F7 04           4 inc b
 476+ 98F8 3C           	inc a
 477+ 98F9 20 FC        	jr nz,4B
 478+ 98FB 78           	ld a,b
 479+ 98FC 08           	ex af,af
 480+ 98FD 2A 89 88     	ld hl,(Indice_Sprite_izq)
 481+ 9900 23           5 inc hl
 482+ 9901 23           	inc hl
 483+ 9902 10 FC        	djnz 5B
 484+ 9904 22 8D 88     	ld (Puntero_DESPLZ_izq),hl
 485+ 9907 CD 92 8B     	call Extrae_address
 486+ 990A 22 81 88     	ld (Puntero_objeto),hl
 487+ 990D
 488+ 990D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 489+ 990D              ; _(Posicion_actual).
 490+ 990D
 491+ 990D 21 7F 88     	ld hl,Posicion_actual
 492+ 9910 35           	dec (hl)
 493+ 9911 08           	ex af,af
 494+ 9912 6F           	ld l,a
 495+ 9913 18 DD        	jr 6B
 496+ 9915
 497+ 9915              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 498+ 9915
 499+ 9915 47           3 ld b,a
 500+ 9916 2A 87 88     	ld hl,(Indice_Sprite_der)
 501+ 9919 23           2 inc hl
 502+ 991A 23           	inc hl
 503+ 991B 10 FC        	djnz 2B
 504+ 991D 22 8B 88     	ld (Puntero_DESPLZ_der),hl
 505+ 9920 C9           8 ret
 506+ 9921
 507+ 9921              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 508+ 9921              ;
 509+ 9921              ;	modifica_parametros_1er_DESPLZ
 510+ 9921              ;
 511+ 9921              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 512+ 9921              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 513+ 9921              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 514+ 9921
 515+ 9921 3A 85 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 516+ 9924 A7           	and a
 517+ 9925 20 1E        	jr nz,1F
 518+ 9927 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 519+ 9928 32 85 88         ld (CTRL_DESPLZ),a
 520+ 992B 21 7E 88     	ld hl,Columns
 521+ 992E 34           	inc (hl)
 522+ 992F 3A 91 88     	ld a,(Cuad_objeto)
 523+ 9932 E6 01        	and 1
 524+ 9934 20 0F        	jr nz,1F
 525+ 9936 2A 7F 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 526+ 9939 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 527+ 993A 22 7F 88     	ld (Posicion_actual),hl
 528+ 993D CD F7 99     	call Genera_coordenadas
 529+ 9940 CD 9C 99     	call Dec_CTRL_DESPLZ
 530+ 9943 18 03        	jr 2F
 531+ 9945 CD 9C 99     1 call Dec_CTRL_DESPLZ
 532+ 9948 C9           2 ret
 533+ 9949
 534+ 9949              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 535+ 9949
 536+ 9949 3A 85 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 537+ 994C FE F7        	cp $f7
 538+ 994E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 539+ 9950 30 2C        	jr nc,3F
 540+ 9952
 541+ 9952              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 542+ 9952
 543+ 9952 06 00        	ld b,0
 544+ 9954 04           4 inc b
 545+ 9955 3C           	inc a
 546+ 9956 FE F7        	cp $f7
 547+ 9958 20 FA        	jr nz,4B
 548+ 995A 3E FF        	ld a,$ff
 549+ 995C 90           	sub b
 550+ 995D 32 85 88     	ld (CTRL_DESPLZ),a
 551+ 9960 18 1C        	jr 3F
 552+ 9962
 553+ 9962              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 554+ 9962
 555+ 9962 21 7E 88     1 ld hl,Columns
 556+ 9965 35           	dec (hl)
 557+ 9966 AF           	xor a
 558+ 9967 32 85 88     	ld (CTRL_DESPLZ),a
 559+ 996A 3A 91 88     	ld a,(Cuad_objeto)
 560+ 996D E6 01        	and 1
 561+ 996F 28 0A        	jr z,2F
 562+ 9971 2A 7F 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 563+ 9974 2B           	dec hl
 564+ 9975 22 7F 88     	ld (Posicion_actual),hl
 565+ 9978 CD F7 99     	call Genera_coordenadas
 566+ 997B
 567+ 997B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 568+ 997B
 569+ 997B CD BC 8B     2 call Inicia_puntero_objeto_izq
 570+ 997E C9           3 ret
 571+ 997F
 572+ 997F              ; ---------- ---------- ---------- ---------- ---------- ----------
 573+ 997F              ;
 574+ 997F              ;	19/10/22
 575+ 997F              ;
 576+ 997F              ;	(cp 29) para un Amadeus de 3 Columns.
 577+ 997F              ;	(cp 30)   ""  ""    ""     2 Columns.
 578+ 997F
 579+ 997F 3A 83 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 580+ 9982 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 581+ 9984 C9           	ret
 582+ 9985
 583+ 9985              ; ---------- ---------- ---------- ---------- ---------- ----------
 584+ 9985              ;
 585+ 9985              ;	19/10/22
 586+ 9985              ;
 587+ 9985              ;	(cp 2) para un Amadeus de 3 Columns.
 588+ 9985              ;	(cp 1)   ""  ""    ""     2 Columns.
 589+ 9985
 590+ 9985 3A 83 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 591+ 9988 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 592+ 998A C9           	ret
 593+ 998B
 594+ 998B              ; ---------- ---------- ---------- ---------- ---------- ----------
 595+ 998B              ;
 596+ 998B              ;	24/7/22
 597+ 998B              ;
 598+ 998B              ;	Inc_CTRL_DESPLZ
 599+ 998B              ;
 600+ 998B              ;
 601+ 998B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 602+ 998B
 603+ 998B 21 85 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 604+ 998E 3A 93 88     	ld a,(Vel_right)
 605+ 9991 A7           	and a
 606+ 9992 28 06        	jr z,1F
 607+ 9994 47           	ld b,a
 608+ 9995 34           3 inc (hl)
 609+ 9996 10 FD        	djnz 3B
 610+ 9998 18 01        	jr 2F
 611+ 999A 34           1 inc (hl)
 612+ 999B C9           2 ret
 613+ 999C
 614+ 999C              ; ---------- ---------- ---------- ---------- ---------- ----------
 615+ 999C              ;
 616+ 999C              ;	5/2/23
 617+ 999C              ;
 618+ 999C              ;	Dec_CTRL_DESPLZ
 619+ 999C              ;
 620+ 999C              ;
 621+ 999C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 622+ 999C
 623+ 999C 21 85 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 624+ 999F 3A 92 88     	ld a,(Vel_left)
 625+ 99A2 A7           	and a
 626+ 99A3 28 06        	jr z,1F
 627+ 99A5 47           	ld b,a
 628+ 99A6 35           3 dec (hl)
 629+ 99A7 10 FD        	djnz 3B
 630+ 99A9 18 01        	jr 2F
 631+ 99AB 35           1 dec (hl)
 632+ 99AC C9           2 ret
 633+ 99AD
 634+ 99AD              ; ---------- ---------- ---------- ---------- ---------- ----------
 635+ 99AD
 636+ 99AD 2A 7F 88     Reaparece_derecha ld hl,(Posicion_actual)
 637+ 99B0 01 1F 00     	ld bc,31
 638+ 99B3 A7           	and a
 639+ 99B4 ED 4A        	adc hl,bc
 640+ 99B6 22 7F 88     	ld (Posicion_actual),hl
 641+ 99B9 21 AB 88     	ld hl,Ctrl_0														; $xxx1
 642+ 99BC CB C6        	set 0,(hl)
 643+ 99BE C9           	ret
 644+ 99BF
 645+ 99BF              ; ---------- ---------- ---------- ---------- ---------- ----------
 646+ 99BF
 647+ 99BF 2A 7F 88     Reaparece_izquierda ld hl,(Posicion_actual)
 648+ 99C2 01 1F 00     	ld bc,31
 649+ 99C5 A7           	and a
 650+ 99C6 ED 42        	sbc hl,bc
 651+ 99C8 22 7F 88     	ld (Posicion_actual),hl 											; $xx1x
 652+ 99CB 21 AB 88     	ld hl,Ctrl_0
 653+ 99CE CB CE        	set 1,(hl)
 654+ 99D0 C9           	ret
 655+ 99D1
 656+ 99D1              ; ---------- ---------- ---------- ---------- ---------- ----------
 657+ 99D1
 658+ 99D1 24           Reaparece_abajo inc h
 659+ 99D2 01 E0 17     	ld bc,$17e0
 660+ 99D5 A7           	and a
 661+ 99D6 ED 4A        	adc hl,bc
 662+ 99D8 22 7F 88     	ld (Posicion_actual),hl
 663+ 99DB 21 AB 88     	ld hl,Ctrl_0
 664+ 99DE CB D6        	set 2,(hl)
 665+ 99E0 C9           	ret
 666+ 99E1
 667+ 99E1              ; ---------- ---------- ---------- ---------- ---------- ----------
 668+ 99E1
 669+ 99E1 01 E0 17     Reaparece_arriba ld bc,$17e0
 670+ 99E4 A7           	and a
 671+ 99E5 ED 42        	sbc hl,bc
 672+ 99E7 22 7F 88     	ld (Posicion_actual),hl
 673+ 99EA 21 AB 88     	ld hl,Ctrl_0
 674+ 99ED CB DE        	set 3,(hl)
 675+ 99EF C9           	ret
 676+ 99F0
 677+ 99F0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 678+ 99F0
 679+ 99F0 2A 8F 88     Reinicio ld hl,(Posicion_inicio)
 680+ 99F3 22 7F 88     	ld (Posicion_actual),hl
 681+ 99F6 C9           	ret
# file closed: Direcciones.asm
1188  99F7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 99F7              ; ------------------------------------------------------------------------
   2+ 99F7              ;
   3+ 99F7              ;	02/04/23
   4+ 99F7              ;
   5+ 99F7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 99F7              ;	Fila superior "0", Columna izquierda "0".
   7+ 99F7              ;
   8+ 99F7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 99F7              ;
  10+ 99F7              ;	Modifica: A,BC y DE.
  11+ 99F7
  12+ 99F7 C5           Genera_coordenadas push bc
  13+ 99F8 E5           	push hl
  14+ 99F9 D5           	push de
  15+ 99FA
  16+ 99FA 2A 7F 88     	ld hl,(Posicion_actual)
  17+ 99FD
  18+ 99FD 7D           	ld a,l
  19+ 99FE E6 1F        	and $1f
  20+ 9A00 32 83 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9A03
  22+ 9A03 CD B7 96     	call calcula_tercio
  23+ 9A06 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9A07
  25+ 9A07 1E 00        	ld e,0
  26+ 9A09 7D           	ld a,l
  27+ 9A0A E6 E0        	and $e0
  28+ 9A0C 28 01        	jr z,1F
  29+ 9A0E 04           	inc b
  30+ 9A0F
  31+ 9A0F 04           1 inc b
  32+ 9A10 05           	dec b
  33+ 9A11 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9A13              ;														; _ , salimos.
  35+ 9A13 1C           3 inc e
  36+ 9A14 D6 20        	sub 32
  37+ 9A16 20 FB        	jr nz,3B
  38+ 9A18 10 F5        	djnz 1B
  39+ 9A1A
  40+ 9A1A 7B           2 ld a,e
  41+ 9A1B 32 84 88     	ld (Coordenada_y),a
  42+ 9A1E
  43+ 9A1E D1           	pop de
  44+ 9A1F E1           	pop hl
  45+ 9A20 C1           	pop bc
  46+ 9A21
  47+ 9A21 C9           	ret
  48+ 9A22
  49+ 9A22              ; ------------------------------------------------------------------------
  50+ 9A22              ;	28/03/23
  51+ 9A22              ;
  52+ 9A22              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9A22              ;	Fila superior "0", Columna izquierda "0".
  54+ 9A22              ;
  55+ 9A22              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9A22              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9A22              ;
  58+ 9A22              ;		DE="$120d"
  59+ 9A22              ;
  60+ 9A22              ;		D, (Coordenada_X), Columnas, $12
  61+ 9A22              ;		E, (Coordenada_y), Filas, $0d
  62+ 9A22              ;
  63+ 9A22              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9A22
  65+ 9A22              ;	Modifica: A,BC y DE.
  66+ 9A22
  67+ 9A22
  68+ 9A22              Genera_coordenadas_disparo
  69+ 9A22
  70+ 9A22              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9A22
  72+ 9A22 7D           	ld a,l
  73+ 9A23 E6 1F        	and $1f
  74+ 9A25 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9A26 CD B7 96     	call calcula_tercio
  76+ 9A29 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9A2A 1E 00        	ld e,0
  78+ 9A2C 7D           	ld a,l
  79+ 9A2D E6 E0        	and $e0
  80+ 9A2F 28 01        	jr z,1F
  81+ 9A31 04           	inc b
  82+ 9A32 1C           1 inc e
  83+ 9A33 D6 20        	sub 32
  84+ 9A35 20 FB        	jr nz,1B
  85+ 9A37 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9A39 C9           	ret
  87+ 9A3A
# file closed: Genera_coordenadas.asm
1189  9A3A              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9A3A
   2+ 9A3A
   3+ 9A3A              ;   11/8/22
   4+ 9A3A              ;
   5+ 9A3A              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9A3A              ;
   7+ 9A3A              ;   Mov_obj.asm
   8+ 9A3A              ;
   9+ 9A3A              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9A3A              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9A3A              ;
  12+ 9A3A              ;   Codificación:
  13+ 9A3A              ;
  14+ 9A3A              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9A3A
  16+ 9A3A              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9A3A
  18+ 9A3A 02 40 00     Arriba db 2,%01000000,0
  19+ 9A3D 02 80 00     Abajo db 2,%10000000,0
  20+ 9A40 02 20 00     Derecha db 2,%00100000,0
  21+ 9A43 02 10 00     Izquierda db 2,%00010000,0
  22+ 9A46 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9A4A 60 42 60 40
  22+ 9A4E 63
  23+ 9A4F 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9A53 22 A3 80 A0
  24+ 9A57 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9A5B 84 A0 83 A0
  25+ 9A5F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9A63 80 A3 22 A0
  26+ 9A67 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9A6B 40 60 42 60
  27+ 9A6F 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9A73
  29+ 9A73 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9A77 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9A7B 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9A7F 84 00
  32+ 9A81 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9A85 84 00
  33+ 9A87 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9A8B 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9A8F 1F 1F 1F 1F
  35+ 9A93 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9A97 1F 1F 1F 1F
  35+ 9A9B 1F
  36+ 9A9C 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9AA0 2F 2F 2F 2F
  36+ 9AA4 2F 2F
  37+ 9AA6 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9AAA 2F 2F 00
  38+ 9AAD
  39+ 9AAD              ; ----- ----- ----- ----- -----
  40+ 9AAD
  41+ 9AAD 8B 9A        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9AAF 87 9A        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9AB1 43 9A        Indice_mov_Izquierda defw Izquierda
  44+ 9AB3 40 9A        Indice_mov_Derecha defw Derecha
  45+ 9AB5 3D 9A        Indice_mov_Abajo defw Abajo
  46+ 9AB7 3A 9A        Indice_mov_Arriba defw Arriba
  47+ 9AB9 77 9A        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9ABB 7B 9A        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9ABD 73 9A        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9ABF 81 9A        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9AC1 46 9A        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9AC3              ; ----- ----- ----- ----- -----
  53+ 9AC3
  54+ 9AC3 3A B2 88     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9AC6 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9AC7 28 02            jr z,1F
  57+ 9AC9 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9ACB 3A B3 88     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9ACE C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9AD0 32 B3 88         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9AD3              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9AD3 2A B0 88         ld hl,(Puntero_mov)
  63+ 9AD6 7E               ld a,(hl)
  64+ 9AD7 32 B2 88         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9ADA 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9ADB 22 B0 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9ADE
  68+ 9ADE 3A B4 88     Decoder ld a,(Repetimos_db)
  69+ 9AE1 A7               and a
  70+ 9AE2 20 0C            jr nz,12F
  71+ 9AE4 2A B0 88         ld hl,(Puntero_mov)
  72+ 9AE7 7E               ld a,(hl)
  73+ 9AE8 A7               and a
  74+ 9AE9 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9AEB E6 0F            and $0f
  76+ 9AED 32 B4 88         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9AF0              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9AF0 2A B0 88     12 ld hl,(Puntero_mov)
  79+ 9AF3 CB 7E            bit 7,(hl)
  80+ 9AF5 28 03            jr z,2F
  81+ 9AF7 CD E9 96         call Mov_down
  82+ 9AFA 2A B0 88     2 ld hl, (Puntero_mov)
  83+ 9AFD CB 76            bit 6,(hl)
  84+ 9AFF 28 03            jr z,3F
  85+ 9B01 CD 17 97         call Mov_up
  86+ 9B04 2A B0 88     3 ld hl, (Puntero_mov)
  87+ 9B07 CB 6E            bit 5,(hl)
  88+ 9B09 28 03            jr z,4F
  89+ 9B0B CD 45 97         call Mov_right
  90+ 9B0E 2A B0 88     4 ld hl, (Puntero_mov)
  91+ 9B11 CB 66            bit 4,(hl)
  92+ 9B13 28 03            jr z,5F
  93+ 9B15 CD 63 98         call Mov_left
  94+ 9B18
  95+ 9B18              ; ---------- --------- --------- ---------- ----------
  96+ 9B18
  97+ 9B18 3A B4 88     5 ld a,(Repetimos_db)
  98+ 9B1B A7               and a
  99+ 9B1C 28 07            jr z,6F
 100+ 9B1E 3D               dec a
 101+ 9B1F 32 B4 88         ld (Repetimos_db),a
 102+ 9B22 28 01            jr z,6f
 103+ 9B24 C9           11 ret
 104+ 9B25 21 B2 88     6 ld hl,Contador_db_mov
 105+ 9B28 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9B29 2A B0 88         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9B2C 23               inc hl
 108+ 9B2D 22 B0 88         ld (Puntero_mov),hl
 109+ 9B30 18 F2            jr 11B
 110+ 9B32 2A AE 88     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9B35 3A B3 88         ld a,(Incrementa_puntero)
 112+ 9B38 47               ld b,a
 113+ 9B39 23           8 inc hl
 114+ 9B3A 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9B3C 5E               ld e,(hl)
 116+ 9B3D 23               inc hl
 117+ 9B3E 56               ld d,(hl)
 118+ 9B3F EB               ex de,hl
 119+ 9B40 22 B0 88         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9B43 18 DF            jr 11B
 121+ 9B45
 122+ 9B45              ; ---------- --------- --------- ---------- ----------
 123+ 9B45              ;
 124+ 9B45              ;   11/8/22
 125+ 9B45              ;
 126+ 9B45              ;   Prepara_Puntero_mov
 127+ 9B45
 128+ 9B45 E5           Prepara_Puntero_mov push hl
 129+ 9B46 D5               push de
 130+ 9B47 2A AE 88         ld hl,(Puntero_indice_mov)
 131+ 9B4A 5E               ld e,(hl)
 132+ 9B4B 23               inc hl
 133+ 9B4C 56               ld d,(hl)
 134+ 9B4D EB               ex de,hl
 135+ 9B4E 22 B0 88         ld (Puntero_mov),hl
 136+ 9B51 D1               pop de
 137+ 9B52 E1               pop hl
 138+ 9B53 C9               ret
 139+ 9B54
 140+ 9B54              ; ---------- --------- --------- ---------- ----------
 141+ 9B54              ;
 142+ 9B54              ;   11/8/22
 143+ 9B54              ;
 144+ 9B54              ;   Reinicia_el_movimiento
 145+ 9B54
 146+ 9B54 CD 45 9B     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9B57 AF               xor a
 148+ 9B58 32 B2 88         ld (Contador_db_mov),a
 149+ 9B5B 32 B3 88         ld (Incrementa_puntero),a
 150+ 9B5E C3 C3 9A         jp Movimiento
 151+ 9B61 C9               ret
 152+ 9B62              ; ---------- --------- --------- ---------- ----------
 153+ 9B62
 154+ 9B62
 155+ 9B62
 156+ 9B62
 157+ 9B62
 158+ 9B62
 159+ 9B62
 160+ 9B62
 161+ 9B62
 162+ 9B62
 163+ 9B62
 164+ 9B62
 165+ 9B62
 166+ 9B62
 167+ 9B62
 168+ 9B62
 169+ 9B62
 170+ 9B62
# file closed: Patrones_de_mov.asm
1190  9B62              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9B62              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9B62              ;
   3+ 9B62              ;	3/1/23
   4+ 9B62              ;
   5+ 9B62              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9B62
   7+ 9B62              ;	ADC HL,SP	LD (addr),SP
   8+ 9B62              ;	ADD HL,SP	LD SP,(addr)
   9+ 9B62              ;	ADD IX,SP	LD SP,nn
  10+ 9B62              ; 	ADD IY,SP	LD SP,HL
  11+ 9B62              ;				LD SP,IX
  12+ 9B62              ;	DEC SP		LD SP,IY
  13+ 9B62
  14+ 9B62              ;	EX (SP),HL
  15+ 9B62              ;	EX (SP),IX
  16+ 9B62              ;	EX (SP),IY
  17+ 9B62
  18+ 9B62              ;	INC SP
  19+ 9B62
  20+ 9B62
  21+ 9B62                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 C9 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A BA 88         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A CF 88         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A CD 88     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 CF 88         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 CD 88     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B C9 88  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1191  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1192  7FE6
1193  7FE6              	SAVESNA "Pruebas.sna", START
1194  7FE6
1195  7FE6
1196  7FE6
1197  7FE6
# file closed: Banco_de_pruebas.asm
