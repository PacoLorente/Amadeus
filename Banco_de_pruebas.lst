# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 61 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 65 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 36 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8B 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 8A 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 89 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 89 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8C 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 9A 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	10/11/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas).
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6B
  98+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A73 08 00
 100+ 8A75
 101+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7D 0F FE
 103+ 8A7F
 104+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB3
 118+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABB 06 00
 120+ 8ABD
 121+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC5 02 00
 123+ 8AC7
 124+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACF 04 00
 126+ 8AD1
 127+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD9 08 00
 129+ 8ADB
 130+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE3 02 00
 132+ 8AE5
 133+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AED 06 00
 135+ 8AEF
 136+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF7 06 00
 138+ 8AF9
 139+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF9
 141+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B29
 154+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5D
 168+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B65 06 00
 170+ 8B67
 171+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6F 02 00
 173+ 8B71
 174+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B79 04 00
 176+ 8B7B
 177+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B83 08 00
 179+ 8B85
 180+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8D 02 00
 182+ 8B8F
 183+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B97 06 00
 185+ 8B99
 186+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA1 06 00
 188+ 8BA3
 189+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD3
 202+ 8BD3
 203+ 8BD3
 204+ 8BD3
 205+ 8BD3
 206+ 8BD3
 207+ 8BD3
 208+ 8BD3
 209+ 8BD3
 210+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DD 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BDC 01           	db 1			 							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BDD
  18+ 8BDD 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE2 01 02
  20+ 8BE4 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE8 01 02
  21+ 8BEA
# file closed: Niveles.asm
 150  8BEA
 151  8BEA              ; --------------------------------------------------------------------------------
 152  8BEA              ;
 153  8BEA              ; 12/05/24
 154  8BEA              ;
 155  8BEA              ; Parámetros DRAW.
 156  8BEA              ;
 157  8BEA
 158  8BEA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEA
 160  8BEA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEB              ;															- Patrón de movimiento.
 162  8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BEC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BED
 165  8BED 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEE
 168  8BEE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEE              ; Ejemplos.
 171  8BEE
 172  8BEE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEE
 178  8BEE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BEF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BEF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BEF
 182  8BEF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF1
 185  8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF3
 187  8BF3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF3
 189  8BF3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF5              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF5
 192  8BF5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF5
 194  8BF5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF6
 200  8BF6 00           Ctrl_2 db 0
 201  8BF7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF7              ;
 209  8BF7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF7              ;														BIT 4, ???
 215  8BF7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF7
 217  8BF7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF8              ;
 223  8BF8              ; 														DESCRIPCIÖN:
 224  8BF8              ;
 225  8BF8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF8              ;
 239  8BF8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF8
 243  8BF8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF8
 245  8BF8 00           Filas db 0												; Filas. [DRAW]
 246  8BF9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFE
 250  8BFE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFE
 252  8BFE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BFF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BFF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BFF
 256  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BFF
 258  8BFF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BFF              ;
 260  8BFF              ;	COLORES: 0 ..... NEGRO
 261  8BFF              ;    		 1 ..... AZUL
 262  8BFF              ; 			 2 ..... ROJO
 263  8BFF              ;			 3 ..... MAGENTA
 264  8BFF              ; 			 4 ..... VERDE
 265  8BFF              ; 			 5 ..... CIAN
 266  8BFF              ;			 6 ..... AMARILLO
 267  8BFF              ; 			 7 ..... BLANCO
 268  8BFF
 269  8BFF 00 00        Indice_Sprite_der defw 0
 270  8C01 00 00        Indice_Sprite_izq defw 0
 271  8C03 00 00        Puntero_DESPLZ_der defw 0
 272  8C05 00 00        Puntero_DESPLZ_izq defw 0
 273  8C07
 274  8C07 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C09 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0A 00           Columnas db 0
 277  8C0B 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C0D              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C0D 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C0E
 281  8C0E              ; variables de control general.
 282  8C0E
 283  8C0E 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C0F
 285  8C0F              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C0F
 287  8C0F              Perfiles_de_velocidad
 288  8C0F
 289  8C0F 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C10 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C11 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C12 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C13
 294  8C13              ; Contadores de 16 bits.
 295  8C13
 296  8C13 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C15 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C17 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C19 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1B
 301  8C1B              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1B
 303  8C1B 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C1D 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C1F 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C21              ;
 307  8C21              ;
 308  8C21 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C22              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C22              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C22 00           Incrementa_puntero_backup db 0
 312  8C23 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C24              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C24 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C25 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C26 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C27              ;
 318  8C27              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C27              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C27              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C27              ;
 322  8C27              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C27              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C27              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C27              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C27              ;
 327  8C27              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C27              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C27              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C27
 331  8C27 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C28
 333  8C28              ;														DESCRIPCIÓN:
 334  8C28              ;
 335  8C28              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C28              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C28              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C28              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C28              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C28              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C28
 342  8C28              ;														BIT 3, Recarga de nueva oleada.
 343  8C28              ;														BIT 4, Recarga de nueva oleada.
 344  8C28              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C28              ;														BIT 6, **** Frame completo.
 346  8C28              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C28
 348  8C28 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2A
 353  8C2A              ; Gestión de ENTIDADES y CAJAS.
 354  8C2A
 355  8C2A 00 00        Puntero_store_caja defw 0
 356  8C2C 00 00        Puntero_restore_caja defw 0
 357  8C2E 00 00        Indice_restore_caja defw 0
 358  8C30 00 00        Puntero_indice_master defw 0
 359  8C32
 360  8C32 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C33 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C34 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C35
 364  8C35 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C37 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C39              ;														; _ puntero (Indice_entidades).
 367  8C39
 368  8C39              ;---------------------------------------------------------------------------------------------------------------
 369  8C39              ;
 370  8C39              ;	13/10/24
 371  8C39              ;
 372  8C39              ;	Álbumes.
 373  8C39
 374  8C39 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3B              ;														; _variable para almacenar lo posición del puntero_
 376  8C3B              ; 														; _de pila, SP.
 377  8C3B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C3D              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C3D
 380  8C3D              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C3D
 382  8C3D 00 00        Album_de_pintado defw 0
 383  8C3F 00 00        Album_de_borrado defw 0
 384  8C41 00 00        Album_de_pintado_Amadeus defw 0
 385  8C43 00 00        Album_de_borrado_Amadeus defw 0
 386  8C45
 387  8C45 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C47 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C49
 390  8C49 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4B 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C4D
 393  8C4D
 394  8C4D 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C4F
 396  8C4F 00           Num_de_bytes_album_de_disparos db 0
 397  8C50 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C51
 399  8C51 07           Numero_de_disparos_de_entidades db 7
 400  8C52
 401  8C52 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C53 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C54
 404  8C54 00 00        Techo_Scanlines_album defw 0
 405  8C56 00 00        Techo_Scanlines_album_2 defw 0
 406  8C58 00           Switch db 0
 407  8C59 00 00        Techo defw 0
 408  8C5B 00 00        Scanlines_album_SP defw 0
 409  8C5D 00 89        India_SP defw Tabla_de_pintado
 410  8C5F 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C61
 412  8C61 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C62              ;
 414  8C62              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C62              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C62              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C62              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C62              ;																Habilita el borrado/pintado de sprites.
 419  8C62              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C62              ;																_ a la baja.
 421  8C62              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C62              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C62              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C62              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C62              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C62              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C62
 428  8C62 00           Ctrl_4 db 0
 429  8C63 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C64              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C64              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C64
 433  8C64              ; Gestión de Disparos.
 434  8C64
 435  8C64 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C66 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C68 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C69
 439  8C69              ;
 440  8C69              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C69              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C69              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C69              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C69
 445  8C69
 446  8C69
 447  8C69
 448  8C69
 449  8C69
 450  8C69
 451  8C69 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6B
 455  8C6B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C6D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C6D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C70              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C70 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C73              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C73
 462  8C73              ;---------------------------------------------------------------------------------------------------------------
 463  8C73
 464  8C73              ; Relojes y temporizaciones.
 465  8C73
 466  8C73 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C74 05           Clock_explosion_Amadeus db 5
 468  8C75 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C76
 470  8C76 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C78 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7A 00           Numero_rnd_disparos db 0
 473  8C7B
 474  8C7B 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C7D 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C7E              ;																		; Repite la oleada de entidades.
 477  8C7E A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C7F A0           CLOCK_disparos_de_entidades db $a0
 479  8C80
 480  8C80              ;---------------------------------------------------------------------------------------------------------------
 481  8C80
 482  8C80              ; Gestión de NIVELES.
 483  8C80
 484  8C80 00           Nivel db 0												; Nivel actual del juego.
 485  8C81 00 00        Puntero_indice_NIVELES defw 0
 486  8C83 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C85              ; 														; _ que definen el NIVEL.
 488  8C85
 489  8C85              ; ---------------------------------------------------------------------------------------------------------------
 490  8C85
 491  8C85              ; Temporizaciones Shield.
 492  8C85
 493  8C85 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C89 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8B 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C8C 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C8D 00           Shield_3 db 0
 498  8C8E
 499  8C8E 07           Lives db 7
 500  8C8F
 501  8C8F              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C8F              ;
 503  8C8F              ;	13/11/24
 504  8C8F
 505  8C8F              START
 506  8C8F
 507  8C8F 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C92 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C94 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C96 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C98 F3           	DI
 512  8C99
 513  8C99              ; Limpiamos pantalla.
 514  8C99
 515  8C99 3E 07        	ld a,%00000111
 516  8C9B CD E7 94     	call Cls
 517  8C9E CD 7F 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA1
 519  8CA1              INICIALIZACION
 520  8CA1
 521  8CA1 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA3 CD E0 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CA6 CD FE 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CA9 6F           	ld l,a
 525  8CAA 26 00        	ld h,0
 526  8CAC 22 7B 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CAF
 528  8CAF              ;	Inicia los álbumes de líneas.
 529  8CAF
 530  8CAF CD D1 90     	call Inicia_albumes_de_lineas
 531  8CB2 CD E1 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CB5 CD EE 90     	call Inicia_albumes_de_disparos
 533  8CB8
 534  8CB8              ;	Inicia 1er Nivel.
 535  8CB8
 536  8CB8 CD 42 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CBB CD 10 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CBE              ;														   _reponiendo entidades eliminadas.
 539  8CBE CD 76 93     	call Prepara_Cajas_de_Entidades
 540  8CC1
 541  8CC1              4
 542  8CC1
 543  8CC1              ;	call Inicia_Entidades
 544  8CC1 CD C7 93     	call Inicia_Amadeus
 545  8CC4
 546  8CC4              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC4              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC4              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC4
 550  8CC4 11 AE 89     	ld de,Amadeus_BOX
 551  8CC7 CD B6 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCA CD 0A 94     	call Limpiamos_bandeja_DRAW
 553  8CCD
 554  8CCD              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CCD
 556  8CCD 06 3C        	ld b,60
 557  8CCF CD 88 9D     2 call Amadeus_a_izquierda
 558  8CD2 10 FB        	djnz 2B
 559  8CD4
 560  8CD4 CD AF 90     	call Genera_datos_de_impresion_Amadeus
 561  8CD7
 562  8CD7              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CD7
 564  8CD7 CD 0A 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDA
 566  8CDA CD 8A 91     	call Inicia_Shield
 567  8CDD
 568  8CDD 2A 5B 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE0 22 54 8C     	ld (Techo_Scanlines_album),hl
 570  8CE3
 571  8CE3 2A 3F 8C     	ld hl,(Album_de_borrado)
 572  8CE6 22 5B 8C     	ld (Scanlines_album_SP),hl
 573  8CE9
 574  8CE9 21 00 89     	ld hl,Tabla_de_pintado
 575  8CEC 22 5D 8C     	ld (India_SP),hl
 576  8CEF
 577  8CEF 21 61 8C     	ld hl,Ctrl_3
 578  8CF2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF4 CB D6        	set 2,(hl)
 580  8CF6 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CF8
 582  8CF8 FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CF9
 584  8CF9 76           	halt
 585  8CFA
 586  8CFA              ; ------------------------------------
 587  8CFA
 588  8CFA              Main
 589  8CFA              ;
 590  8CFA              ; 07/11/24.
 591  8CFA
 592  8CFA              ; Gestión de disparos.
 593  8CFA
 594  8CFA CD D3 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8CFD CD 7C 9F     	call Motor_de_disparos_entidades
 596  8D00 CD 11 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D03
 598  8D03              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D03              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D03              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D03
 602  8D03 CD B2 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D06
 604  8D06              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D06
 606  8D06 21 7F 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D09 35           	dec (hl)
 608  8D0A CC 14 8E     	call z,Autoriza_disparo_de_entidades
 609  8D0D
 610  8D0D 2A 7B 8C     	ld hl,(Clock_next_entity)
 611  8D10 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D14 A7           	and a
 613  8D15 ED 42        	sbc hl,bc
 614  8D17 20 16        	jr nz,1F
 615  8D19
 616  8D19              ; GESTIÓN DE ENTIDADES.
 617  8D19
 618  8D19              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D19              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D19
 621  8D19              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D19              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D19              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D19
 625  8D19 21 33 8C     	ld hl,Numero_parcial_de_entidades
 626  8D1C 46           	ld b,(hl)
 627  8D1D 3A 34 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D20 B8           	cp b
 629  8D21 28 0C        	jr z,1F
 630  8D23 30 0A        	jr nc,1F
 631  8D25
 632  8D25              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D25
 634  8D25 3C           	inc a
 635  8D26 32 34 8C     	ld (Entidades_en_curso),a
 636  8D29
 637  8D29              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D29
 639  8D29 CD FE 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D2C CD 1A 8F     	call Define_Clock_next_entity
 641  8D2F
 642  8D2F 3A 34 8C     1 ld a,(Entidades_en_curso)
 643  8D32 A7           	and a
 644  8D33 CA BF 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D36 47           	ld b,a												; No hay entidades que gestionar.
 646  8D37
 647  8D37              ; ( Código que ejecutamos con cada entidad: ).
 648  8D37
 649  8D37              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D37              ;
 651  8D37              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D37
 653  8D37 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3A 22 5D 8C     	ld (India_SP),hl
 655  8D3D
 656  8D3D 21 61 8C     	ld hl,Ctrl_3
 657  8D40 CB D6        	set 2,(hl)
 658  8D42 CD A8 8E     	call Change
 659  8D45
 660  8D45 C5           2 push bc 												; Nº de entidades en curso.
 661  8D46
 662  8D46 DD 2A 2A 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 663  8D4A CD 5B 91     	call Salta_caja_de_entidades_vacia
 664  8D4D
 665  8D4D              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 666  8D4D              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 667  8D4D
 668  8D4D 3A 68 8C     	ld a,(Impacto2)
 669  8D50 CB 5F        	bit 3,a
 670  8D52 C4 A8 A1     	call nz,Compara_con_coordenadas_de_disparo
 671  8D55
 672  8D55              ; Existe colisión entre esta entidad y Amadeus ???
 673  8D55
 674  8D55 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 675  8D58 CB 4F        	bit 1,a
 676  8D5A C4 67 92     	call nz,Genera_explosion
 677  8D5D 20 43        	jr nz,Gestiona_siguiente_entidad
 678  8D5F
 679  8D5F DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 680  8D62 A7           	and a
 681  8D63 28 0C        	jr z,3F
 682  8D65
 683  8D65              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D65
 685  8D65              ; 5/7/24
 686  8D65              ; Nota importante:
 687  8D65              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D65              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D65              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D65
 691  8D65 3A B2 89     	ld a,(Impacto_Amadeus)
 692  8D68 A7           	and a
 693  8D69 C4 67 92     	call nz,Genera_explosion
 694  8D6C 20 34        	jr nz,Gestiona_siguiente_entidad
 695  8D6E
 696  8D6E              ; Falsa colisión !!!
 697  8D6E
 698  8D6E 32 EE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D71
 700  8D71              ; -------------------------------------------
 701  8D71
 702  8D71 CD 5E 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D74 CD 80 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D77 CD 4E 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 705  8D7A
 706  8D7A DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 707  8D7C DD 2A EF 8B  	ld ix,(Puntero_de_impresion)
 708  8D80 CD 27 95     	call Genera_datos_de_impresion
 709  8D83 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 710  8D85
 711  8D85 CD 2D 94     	call Decrementa_Contador_de_mov_masticados
 712  8D88
 713  8D88              ; -------------------------------------------
 714  8D88
 715  8D88              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 716  8D88
 717  8D88 2A EF 8B     	ld hl,(Puntero_de_impresion)
 718  8D8B CD FB 94     	call Genera_coordenadas
 719  8D8E
 720  8D8E ED 4B EB 8B  	ld bc,(Coordenada_X)
 721  8D92
 722  8D92 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 723  8D95 DD 70 02     	ld (ix+2),b
 724  8D98
 725  8D98              ; TODO: Generamos disparo ???
 726  8D98
 727  8D98 3A 53 8C     	ld a,(Permiso_de_disparo_Entidades)
 728  8D9B A7           	and a
 729  8D9C C4 29 8E     	call nz,Entidad_genera_disparo_si_procede
 730  8D9F
 731  8D9F CD 2C A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 732  8DA2
 733  8DA2              Gestiona_siguiente_entidad
 734  8DA2
 735  8DA2 CD 6A 91     	call Incrementa_punteros_de_cajas
 736  8DA5
 737  8DA5 C1           	pop bc
 738  8DA6 10 9D        	djnz 2B
 739  8DA8
 740  8DA8              ; Hemos gestionado todas las entidades.
 741  8DA8              ; ----- ----- -----
 742  8DA8
 743  8DA8 CD 72 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 744  8DAB CD 89 8F     	call Ordena_tabla_de_impresion
 745  8DAE CD 0A 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 746  8DB1
 747  8DB1 CD 2F 8F     	call Borra_diferencia
 748  8DB4
 749  8DB4 3A 61 8C     	ld a,(Ctrl_3)
 750  8DB7 CB 5F        	bit 3,a
 751  8DB9 20 04        	jr nz,Gestion_de_Amadeus
 752  8DBB
 753  8DBB EB           	ex de,hl
 754  8DBC 71           	ld (hl),c
 755  8DBD 2C           	inc l
 756  8DBE 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 757  8DBF
 758  8DBF              ;! GESTIONA AMADEUS !!!!!!!!!!
 759  8DBF
 760  8DBF              Gestion_de_Amadeus
 761  8DBF
 762  8DBF 21 61 8C     	ld hl,Ctrl_3
 763  8DC2 CB 76        	bit 6,(hl)
 764  8DC4 28 13        	jr z,Amadeus_vivo
 765  8DC6
 766  8DC6              ; Amadeus ha sido destruido.
 767  8DC6              ; Decrementa (Temp_new_live).
 768  8DC6
 769  8DC6 21 75 8C     	ld hl,Temp_new_live
 770  8DC9 35           	dec (hl)
 771  8DCA 20 26        	jr nz,End_frame
 772  8DCC
 773  8DCC              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 774  8DCC
 775  8DCC 21 8E 8C     	ld hl,Lives
 776  8DCF 35           	dec (hl)
 777  8DD0
 778  8DD0              ;! Fin del juego
 779  8DD0
 780  8DD0 F3           	di
 781  8DD1 28 FE        	jr z,$
 782  8DD3 FB           	ei
 783  8DD4
 784  8DD4              ; Nueva nave.
 785  8DD4
 786  8DD4 CD 46 8E     	call Reinicia_Amadeus
 787  8DD7 18 19        	jr End_frame
 788  8DD9
 789  8DD9              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 790  8DD9
 791  8DD9              Amadeus_vivo
 792  8DD9
 793  8DD9 3A B2 89     	ld a,(Impacto_Amadeus)
 794  8DDC A7           	and a
 795  8DDD C4 AB 92     	call nz, Genera_explosion_Amadeus
 796  8DE0 20 10        	jr nz, End_frame
 797  8DE2
 798  8DE2 CD 44 92     	call Teclado
 799  8DE5 21 61 8C     	ld hl,Ctrl_3
 800  8DE8
 801  8DE8 CB 6E        	bit 5,(hl)
 802  8DEA 28 06        	jr z,End_frame
 803  8DEC
 804  8DEC              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 805  8DEC
 806  8DEC CD C3 8E     	call Change_Amadeus
 807  8DEF CD AF 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 808  8DF2
 809  8DF2              End_frame
 810  8DF2
 811  8DF2              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 812  8DF2              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 813  8DF2
 814  8DF2 CD D3 A0     	call Genera_datos_de_impresion_disparos_Entidades
 815  8DF5 CD 97 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 816  8DF8 CD ED A1     	call Calcula_bytes_pintado_disparos
 817  8DFB CD FA A1     	call Limpia_album_de_pintado_disparos_entidades
 818  8DFE
 819  8DFE              ; ------------ ------------- --------------
 820  8DFE
 821  8DFE 2A 3F 8C     	ld hl,(Album_de_borrado)
 822  8E01 22 5B 8C     	ld (Scanlines_album_SP),hl
 823  8E04
 824  8E04 21 61 8C     	ld hl,Ctrl_3
 825  8E07 CB C6        	set 0,(hl) 											; Indica Frame completo.
 826  8E09 CB 9E        	res 3,(hl)
 827  8E0B CB A6        	res 4,(hl)
 828  8E0D
 829  8E0D AF           	xor a
 830  8E0E D3 FE        	out ($fe),a
 831  8E10
 832  8E10 76           	halt
 833  8E11
 834  8E11              ; ----------------------------------------
 835  8E11
 836  8E11              ;	ld a,(Ctrl_1) 										; Existe Loop?
 837  8E11              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 838  8E11 CA FA 8C     	jp z,Main
 839  8E14
 840  8E14              ;------------------------------------------
 841  8E14              ;
 842  8E14              ;	07/11/24
 843  8E14
 844  8E14              Autoriza_disparo_de_entidades
 845  8E14
 846  8E14 3E 01        	ld a,1
 847  8E16 32 53 8C     	ld (Permiso_de_disparo_Entidades),a
 848  8E19
 849  8E19 3A 7E 8C     	ld a,(Repone_CLOCK_disparos)
 850  8E1C FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 851  8E1E 38 02        	jr c,1F
 852  8E20
 853  8E20              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 854  8E20              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 855  8E20              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 856  8E20
 857  8E20 D6 03        	sub 3
 858  8E22
 859  8E22 32 7E 8C     1 ld (Repone_CLOCK_disparos),a
 860  8E25 32 7F 8C     	ld (CLOCK_disparos_de_entidades),a
 861  8E28
 862  8E28 C9           	ret
 863  8E29
 864  8E29              ;------------------------------------------
 865  8E29              ;
 866  8E29              ;	14/09/24
 867  8E29              ;
 868  8E29              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 869  8E29
 870  8E29              Entidad_genera_disparo_si_procede
 871  8E29
 872  8E29 2A 78 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 873  8E2C CB 06        	rlc (hl)
 874  8E2E
 875  8E2E DC 23 A1     	call c,Genera_disparo_de_entidad_maldosa
 876  8E31
 877  8E31 C9           	ret
 878  8E32
 879  8E32              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 880  8E32              ;
 881  8E32              ;	30/09/24
 882  8E32
 883  8E32              Actuaiza_sp_de_disparos_de_entidades
 884  8E32
 885  8E32 2A 78 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 886  8E35 23           	inc hl
 887  8E36 22 78 8C     	ld (Puntero_num_aleatorios_disparos),hl
 888  8E39
 889  8E39 11 FD 88     	ld de,Numeros_aleatorios+7
 890  8E3C 7B           	ld a,e
 891  8E3D 95           	sub l
 892  8E3E C0           	ret nz
 893  8E3F
 894  8E3F 21 F6 88     1 ld hl,Numeros_aleatorios
 895  8E42 22 78 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 896  8E45 C9           	ret
 897  8E46
 898  8E46              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 899  8E46              ;
 900  8E46              ;	24/07/24
 901  8E46
 902  8E46              Reinicia_Amadeus
 903  8E46
 904  8E46              ;	Reinicia posición y estado.
 905  8E46
 906  8E46 21 CF 50     	ld hl,$50cf
 907  8E49 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 908  8E4C 21 CC DC     	ld hl,$dccc
 909  8E4F 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 910  8E52 21 3D 00     	ld hl,$003d
 911  8E55 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 912  8E58
 913  8E58              ;	limpiamos el álbum de borrado.
 914  8E58
 915  8E58 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
 916  8E5B
 917  8E5B AF           	xor a
 918  8E5C 77           	ld (hl),a
 919  8E5D
 920  8E5D E5           	push hl
 921  8E5E D1           	pop de
 922  8E5F 13           	inc de
 923  8E60
 924  8E60 01 23 00     	ld bc,35
 925  8E63 ED B0        	ldir
 926  8E65
 927  8E65 CD AF 90     	call Genera_datos_de_impresion_Amadeus
 928  8E68
 929  8E68              ;	Reinicia temporizaciones.
 930  8E68
 931  8E68 CD 8A 91     	call Inicia_Shield
 932  8E6B
 933  8E6B 3E 5A        	ld a,90
 934  8E6D 32 8B 8C     	ld (Shield),a
 935  8E70
 936  8E70 3E 64        	ld a,100
 937  8E72 32 75 8C     	ld (Temp_new_live),a
 938  8E75
 939  8E75              ; 	Restauramos el FLAG: Amadeus vivo.
 940  8E75
 941  8E75 21 61 8C     	ld hl,Ctrl_3
 942  8E78 CB B6        	res 6,(hl)
 943  8E7A
 944  8E7A              ;	Fuerza la impresión de la nave en el siguiente frame.
 945  8E7A
 946  8E7A 21 61 8C      	ld hl,Ctrl_3
 947  8E7D CB EE        	set 5,(hl)
 948  8E7F
 949  8E7F C9           	ret
 950  8E80
 951  8E80              ; --------------------------------------------------------------------------------------------------------------
 952  8E80              ;
 953  8E80              ;	23/11/24
 954  8E80
 955  8E80              Ajusta_velocidad_entidad
 956  8E80
 957  8E80 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 958  8E83 A7           	and a
 959  8E84 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 960  8E85              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 961  8E85              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 962  8E85
 963  8E85
 964  8E85              ; Incrementa (Contador_de_vueltas)x2.
 965  8E85              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 966  8E85
 967  8E85              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 968  8E85              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 969  8E85              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 970  8E85              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 971  8E85              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 972  8E85
 973  8E85
 974  8E85 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 975  8E87 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 976  8E8A E6 10        	and $10
 977  8E8C C8           	ret z
 978  8E8D
 979  8E8D              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 980  8E8D
 981  8E8D DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 982  8E90 CB 2F        	sra a
 983  8E92 CB 2F        	sra a
 984  8E94 DD 77 0B     	ld (ix+11),a
 985  8E97
 986  8E97 DD 6E 07     	ld l,(ix+7)
 987  8E9A DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 988  8E9D
 989  8E9D              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 990  8E9D 23           	inc hl
 991  8E9E 23           	inc hl
 992  8E9F 23           	inc hl
 993  8EA0 23           	inc hl
 994  8EA1              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 995  8EA1
 996  8EA1 DD 75 07     	ld (ix+7),l
 997  8EA4 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
 998  8EA7
 999  8EA7 C9           	ret
1000  8EA8
1001  8EA8              ; --------------------------------------------------------------------------------------------------------------
1002  8EA8              ;
1003  8EA8              ;	25/08/24
1004  8EA8
1005  8EA8              Change
1006  8EA8
1007  8EA8 3A 58 8C     	ld a,(Switch)
1008  8EAB EE 01        	xor 1
1009  8EAD 32 58 8C     	ld (Switch),a
1010  8EB0 2A 3D 8C     	ld hl,(Album_de_pintado)
1011  8EB3 ED 5B 3F 8C  	ld de,(Album_de_borrado)
1012  8EB7 EB           	ex de,hl
1013  8EB8 22 3D 8C     	ld (Album_de_pintado),hl
1014  8EBB 22 5B 8C     	ld (Scanlines_album_SP),hl
1015  8EBE ED 53 3F 8C  	ld (Album_de_borrado),de
1016  8EC2 C9           	ret
1017  8EC3
1018  8EC3              Change_Amadeus
1019  8EC3
1020  8EC3 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1021  8EC6 ED 5B 43 8C  	ld de,(Album_de_borrado_Amadeus)
1022  8ECA EB           	ex de,hl
1023  8ECB 22 41 8C     	ld (Album_de_pintado_Amadeus),hl
1024  8ECE ED 53 43 8C  	ld (Album_de_borrado_Amadeus),de
1025  8ED2 C9           	ret
1026  8ED3
1027  8ED3              Change_Disparos
1028  8ED3
1029  8ED3              ; Álbumes de Amadeus.
1030  8ED3
1031  8ED3 2A 45 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1032  8ED6 ED 5B 47 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1033  8EDA EB           	ex de,hl
1034  8EDB 22 45 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1035  8EDE ED 53 47 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1036  8EE2 CD E2 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1037  8EE5
1038  8EE5              ; Álbumes de entidades.
1039  8EE5
1040  8EE5 2A 49 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1041  8EE8 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1042  8EEC EB           	ex de,hl
1043  8EED 22 49 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1044  8EF0 ED 53 4B 8C  	ld (Album_de_borrado_disparos_Entidades),de
1045  8EF4 22 4D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1046  8EF7
1047  8EF7 3A 4F 8C     	ld a,(Num_de_bytes_album_de_disparos)
1048  8EFA 32 50 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1049  8EFD
1050  8EFD C9           	ret
1051  8EFE
1052  8EFE              ; ------------------------------------
1053  8EFE              ;
1054  8EFE              ; 1/05/24
1055  8EFE
1056  8EFE              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1057  8EFE              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1058  8EFE
1059  8EFE              ;	DESTRUYE: HL,DE,A
1060  8EFE              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1061  8EFE
1062  8EFE              ;	Variables implicadas: (RND_SP).
1063  8EFE
1064  8EFE              Extrae_numero_aleatorio_y_avanza
1065  8EFE
1066  8EFE 21 00 89     	ld hl,Tabla_de_pintado
1067  8F01 EB           	ex de,hl
1068  8F02 2A 76 8C     	ld hl,(RND_SP)
1069  8F05 EB           	ex de,hl
1070  8F06 A7           	and a
1071  8F07 ED 52        	sbc hl,de
1072  8F09
1073  8F09 2A 76 8C     	ld hl,(RND_SP)
1074  8F0C 20 06        	jr nz,1F
1075  8F0E
1076  8F0E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1077  8F0E
1078  8F0E 21 F6 88     	ld hl,Numeros_aleatorios
1079  8F11 22 76 8C     	ld (RND_SP),HL
1080  8F14
1081  8F14              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1082  8F14
1083  8F14 7E           1 ld a,(hl)
1084  8F15 23           	inc hl
1085  8F16 22 76 8C     	ld (RND_SP),hl
1086  8F19 C9           	ret
1087  8F1A
1088  8F1A              ; ------------------------------------
1089  8F1A              ;
1090  8F1A              ; 1/05/24
1091  8F1A
1092  8F1A              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1093  8F1A              ; (1 a 4 segundos).
1094  8F1A              ; Actualizamos (Clock_next_entity) con A.
1095  8F1A
1096  8F1A              ;	DESTRUYE: A y B.
1097  8F1A              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1098  8F1A              ;			 Actualiza (Clock_next_entity) con A.
1099  8F1A
1100  8F1A              ;	Variables implicadas: (Clock_next_entity).
1101  8F1A
1102  8F1A              ; Notas:
1103  8F1A
1104  8F1A              ; 	$32 1 seg.
1105  8F1A              ; 	$64 2 seg.
1106  8F1A              ; 	$96 3 seg.
1107  8F1A              ; 	$c8 4 seg.
1108  8F1A              ; 	$fa 5 seg.
1109  8F1A
1110  8F1A              ; $ffff 1310,7 seg, 22 minutos.
1111  8F1A
1112  8F1A              ;	$0100  5 seg. aproximadamente.
1113  8F1A              ;	$0200 10 seg. aproximadamente.
1114  8F1A              ;	$0300 15 seg. aproximadamente.
1115  8F1A              ;	$0400 20 seg. aproximadamente.
1116  8F1A              ;	$0500 25 seg. aproximadamente.
1117  8F1A              ;	$0600 30 seg. aproximadamente.
1118  8F1A
1119  8F1A              Define_Clock_next_entity
1120  8F1A
1121  8F1A FE 34        	cp $34
1122  8F1C 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1123  8F1E
1124  8F1E              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1125  8F1E
1126  8F1E 4F           3 ld c,a
1127  8F1F 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1128  8F21 2A 78 5C     	ld hl,(FRAMES)
1129  8F24 A7           	and a
1130  8F25 ED 4A        	adc hl,bc
1131  8F27 22 7B 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1132  8F2A C9           	ret
1133  8F2B
1134  8F2B 3E 34        1 ld a,$34
1135  8F2D 18 EF        	jr 3B
1136  8F2F
1137  8F2F              ; ------------------------------------
1138  8F2F              ;
1139  8F2F              ; 18/03/24
1140  8F2F
1141  8F2F              Borra_diferencia
1142  8F2F
1143  8F2F ED 4B 5B 8C  	ld bc,(Scanlines_album_SP)
1144  8F33
1145  8F33 3A 58 8C     	ld a,(Switch)
1146  8F36 A7           	and a
1147  8F37 28 08        	jr z,2F
1148  8F39
1149  8F39 2A 56 8C     	ld hl,(Techo_Scanlines_album_2)
1150  8F3C 11 56 8C     	ld de,Techo_Scanlines_album_2
1151  8F3F 18 06        	jr 3F
1152  8F41
1153  8F41 2A 54 8C     2 ld hl,(Techo_Scanlines_album)
1154  8F44 11 54 8C     	ld de,Techo_Scanlines_album
1155  8F47
1156  8F47              ; Diferencia.
1157  8F47
1158  8F47 ED 42        3 sbc hl,bc
1159  8F49
1160  8F49 C8           	ret z
1161  8F4A D8           	ret c
1162  8F4B
1163  8F4B              ; Nuevo techo, (más bajo que el anterior).
1164  8F4B              ; Fijamos nuevo techo y borramos bytes sobrantes.
1165  8F4B
1166  8F4B EB           	ex de,hl
1167  8F4C
1168  8F4C 71           	ld (hl),c
1169  8F4D 2C           	inc l
1170  8F4E 70           	ld (hl),b
1171  8F4F
1172  8F4F AF           	xor a
1173  8F50 43           	ld b,e
1174  8F51
1175  8F51 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1176  8F54
1177  8F54 77           1 ld (hl),a
1178  8F55 23           	inc hl
1179  8F56 10 FC        	djnz 1B
1180  8F58
1181  8F58              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1182  8F58
1183  8F58 21 61 8C     	ld hl,Ctrl_3
1184  8F5B CB DE        	set 3,(hl)
1185  8F5D
1186  8F5D C9           	ret
1187  8F5E
1188  8F5E              ; --------------------------------------------------------------------------------------------------------------
1189  8F5E              ;
1190  8F5E              ;	23/11/24
1191  8F5E              ;
1192  8F5E              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1193  8F5E
1194  8F5E              Entidad_a_Tabla_de_pintado
1195  8F5E
1196  8F5E              ; Almacena la Coordenada Y de la entidad en curso.
1197  8F5E
1198  8F5E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1199  8F5E
1200  8F5E DD 7E 02     	ld a,(ix+2)
1201  8F61 2A 5D 8C     	ld hl,(India_SP)
1202  8F64 77           	ld (hl),a
1203  8F65 2C           	inc l
1204  8F66
1205  8F66              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1206  8F66
1207  8F66 ED 5B 5B 8C  	ld de,(Scanlines_album_SP)
1208  8F6A
1209  8F6A 73           	ld (hl),e
1210  8F6B 2C           	inc l
1211  8F6C 72           	ld (hl),d
1212  8F6D 2C           	inc l
1213  8F6E
1214  8F6E 22 5D 8C     	ld (India_SP),hl
1215  8F71
1216  8F71 C9           	ret
1217  8F72
1218  8F72              ; --------------------------------------------------------------------------------------------------------------
1219  8F72              ;
1220  8F72              ;	27/03/24
1221  8F72              ;
1222  8F72
1223  8F72              Inicializa_India_y_limpia_Tabla_de_impresion
1224  8F72
1225  8F72 2A 5D 8C     	ld hl,(India_SP)
1226  8F75 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1227  8F78
1228  8F78 79           	ld a,c
1229  8F79 95           	sub l
1230  8F7A 28 06        	jr z,2F
1231  8F7C 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1232  8F7D              ;														; _ y pasamos a inicializar (India_SP).
1233  8F7D AF           	xor a
1234  8F7E
1235  8F7E 77           1 ld (hl),a
1236  8F7F 2C           	inc l
1237  8F80 10 FC        	djnz 1B												; Limpia Tabla.
1238  8F82
1239  8F82 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1240  8F85 22 5D 8C     	ld (India_SP),hl
1241  8F88
1242  8F88 C9           	ret
1243  8F89
1244  8F89              ; --------------------------------------------------------------------------------------------------------------
1245  8F89              ;
1246  8F89              ;	31/3/24
1247  8F89
1248  8F89              Ordena_tabla_de_impresion
1249  8F89
1250  8F89              ; 5794 T/states.
1251  8F89              ; 6278 T/states.
1252  8F89              ; 5310 T/states.
1253  8F89
1254  8F89              ; Inicializamos punteros (India_SP) e (India_2_SP).
1255  8F89              ; Inicializamos contador de comparaciones, [C].
1256  8F89              ; Cargamos los registros A y B para efectuar comparación.
1257  8F89
1258  8F89 FD 2E 00     	ld iyl,0
1259  8F8C
1260  8F8C 3A 34 8C     	ld a,(Entidades_en_curso)
1261  8F8F FE 04        	cp 4 	;	4
1262  8F91 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1263  8F92
1264  8F92 3D           	dec a
1265  8F93 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1266  8F94 51           	ld d,c 										; Copia de respaldo.
1267  8F95
1268  8F95 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1269  8F96
1270  8F96 21 03 89     	ld hl,Tabla_de_pintado+3
1271  8F99 46           	ld b,(hl)
1272  8F9A 22 5F 8C     	ld (India_2_SP),hl
1273  8F9D
1274  8F9D B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1275  8F9E DC C6 8F     	call c, Avanza_India_2_SP
1276  8FA1 CC C6 8F     	call z, Avanza_India_2_SP
1277  8FA4
1278  8FA4 FD 2D        	dec iyl
1279  8FA6 28 18        	jr z,2F
1280  8FA8
1281  8FA8
1282  8FA8              ; --------------------------------------------------------------------------------------------------------------
1283  8FA8              ;
1284  8FA8              ;	7/4/24
1285  8FA8
1286  8FA8              Trueque
1287  8FA8
1288  8FA8              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1289  8FA8              ;  			A contiene en nº de fila de (India_SP).
1290  8FA8              ;			HL contiene (India_2_SP).
1291  8FA8
1292  8FA8 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1293  8FA9 E5           	push hl										; Preservo (India_2_SP).
1294  8FAA
1295  8FAA ED 5B 5D 8C  	ld de,(India_SP)
1296  8FAE EB           	ex de,hl
1297  8FAF 70           	ld (hl),b
1298  8FB0 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1299  8FB1
1300  8FB1 CD F2 8F     	call Intercambia_1_byte
1301  8FB4 CD F2 8F     	call Intercambia_1_byte
1302  8FB7
1303  8FB7
1304  8FB7              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1305  8FB7              ; Recuperamos (India_2_SP) en HL.
1306  8FB7
1307  8FB7 2A 5D 8C     	ld hl,(India_SP)
1308  8FBA 7E           	ld a,(hl)
1309  8FBB
1310  8FBB E1           	pop hl
1311  8FBC D1           	pop de
1312  8FBD
1313  8FBD              ; --------------------------------------------------------------------------------------------------------------
1314  8FBD
1315  8FBD CD C6 8F     	call Avanza_India_2_SP
1316  8FC0
1317  8FC0 14           2 inc d
1318  8FC1 15           	dec d
1319  8FC2 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1320  8FC3 18 D8        	jr 1B
1321  8FC5
1322  8FC5 C9           	ret
1323  8FC6
1324  8FC6              ; ----- ----- ----- ----- -----
1325  8FC6
1326  8FC6              Avanza_India_2_SP
1327  8FC6
1328  8FC6 0D           	dec c
1329  8FC7 28 0A        	jr z,Avanza_punteros_indios
1330  8FC9
1331  8FC9 FD 2C        	inc iyl
1332  8FCB
1333  8FCB 2C           	inc l
1334  8FCC 2C           	inc l
1335  8FCD 2C           	inc l
1336  8FCE
1337  8FCE 46           	ld b,(hl)
1338  8FCF 22 5F 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1339  8FD2
1340  8FD2 C9           	ret
1341  8FD3
1342  8FD3              ; ----- ----- ----- ----- -----
1343  8FD3
1344  8FD3              Avanza_punteros_indios
1345  8FD3
1346  8FD3 15           	dec d
1347  8FD4 28 15        	jr z,Prepara_salida
1348  8FD6
1349  8FD6 4A           	ld c,d
1350  8FD7
1351  8FD7 2A 5D 8C     	ld hl,(India_SP)
1352  8FDA 2C           	inc l
1353  8FDB 2C           	inc l
1354  8FDC 2C           	inc l
1355  8FDD 7E           	ld a,(hl)
1356  8FDE 22 5D 8C     	ld (India_SP),hl
1357  8FE1
1358  8FE1 2C           	inc l
1359  8FE2 2C           	inc l
1360  8FE3 2C           	inc l
1361  8FE4 46           	ld b,(hl)
1362  8FE5 22 5F 8C     	ld (India_2_SP),hl
1363  8FE8
1364  8FE8 FD 2C        	inc iyl
1365  8FEA
1366  8FEA C9           	ret
1367  8FEB
1368  8FEB              Prepara_salida
1369  8FEB
1370  8FEB 21 00 89     	ld hl,Tabla_de_pintado
1371  8FEE 22 5D 8C     	ld (India_SP),hl
1372  8FF1 C9           	ret
1373  8FF2
1374  8FF2
1375  8FF2 2C           Intercambia_1_byte inc l
1376  8FF3 1C           	inc e
1377  8FF4 46           	ld b,(hl)
1378  8FF5 1A           	ld a,(de)
1379  8FF6 EB           	ex de,hl
1380  8FF7 70           	ld (hl),b
1381  8FF8 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1382  8FF9 C9           	ret
1383  8FFA
1384  8FFA              ; -----------------------------------------------------------------------------------
1385  8FFA              ;
1386  8FFA              ;	20/01/24
1387  8FFA              ;
1388  8FFA              ;
1389  8FFA
1390  8FFA              Construye_movimientos_masticados_entidad
1391  8FFA
1392  8FFA 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1393  8FFD E5           	push hl
1394  8FFE CD 41 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1395  9001              ;															; _ el (Contador_de_mov_masticados).
1396  9001 CD 26 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1397  9004              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1398  9004 CD 0E 9A     	call Recompone_posicion_inicio
1399  9007
1400  9007 CD 3E 97     1 call Draw
1401  900A CD 26 90     	call Guarda_movimiento_masticado
1402  900D
1403  900D CD BB 9D     	call Movimiento
1404  9010
1405  9010 3A 61 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1406  9013 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1407  9015 28 F0        	jr z,1B
1408  9017
1409  9017              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1410  9017              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1411  9017
1412  9017 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1413  9018 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1414  901B
1415  901B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1416  901B
1417  901B CD 1F 9F     	call Situa_en_contador_general_de_mov_masticados
1418  901E
1419  901E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1420  901E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1421  901E
1422  901E ED 4B F3 8B  	ld bc,(Contador_de_mov_masticados)
1423  9022
1424  9022 71           	ld (hl),c
1425  9023 23           	inc hl
1426  9024 70           	ld (hl),b
1427  9025
1428  9025 C9           	ret
1429  9026
1430  9026              ; -----------------------------------------------------------------------------------
1431  9026              ;
1432  9026              ;	28/12/23
1433  9026              ;
1434  9026              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1435  9026              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1436  9026
1437  9026              Guarda_movimiento_masticado
1438  9026
1439  9026 ED 73 39 8C  	ld (Stack),sp
1440  902A ED 7B F1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1441  902E
1442  902E DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1443  9030 FD E5            push iy 												; Pushea Puntero_objeto.
1444  9032
1445  9032 ED 7B 39 8C      ld sp,(Stack)
1446  9036
1447  9036 2A F3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1448  9039 23           	inc hl
1449  903A 22 F3 8B     	ld (Contador_de_mov_masticados),hl
1450  903D
1451  903D CD 41 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1452  9040              ;															; _ el (Contador_de_mov_masticados).
1453  9040 C9               ret
1454  9041
1455  9041              ; --------------------------------------------------------------------------------------------------------------
1456  9041              ;
1457  9041              ;	12/1/24
1458  9041              ;
1459  9041              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1460  9041
1461  9041              Actualiza_Puntero_de_almacen_de_mov_masticados
1462  9041
1463  9041 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1464  9044 01 04 00     	ld bc,4
1465  9047 A7           	and a
1466  9048 ED 4A        	adc hl,bc
1467  904A 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1468  904D C9           	ret
1469  904E
1470  904E              ; ------------------------------------------
1471  904E              ;
1472  904E              ;	23/11/24
1473  904E              ;
1474  904E              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1475  904E
1476  904E
1477  904E              Obtenemos_puntero_de_impresion
1478  904E
1479  904E DD 6E 07     	ld l,(ix+7)
1480  9051 DD 66 08     	ld h,(ix+8)
1481  9054
1482  9054              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1483  9054
1484  9054 ED 73 39 8C  	ld (Stack),sp
1485  9058 F9           	ld sp,hl
1486  9059
1487  9059 AF           	xor a
1488  905A 67           	ld h,a
1489  905B 6C           	ld l,h															; ld hl,"0"
1490  905C
1491  905C D1           	pop de															; (Puntero_objeto) en DE.
1492  905D C1           	pop bc
1493  905E
1494  905E              ; 	Almacena (Puntero_de_impresion) en caja.
1495  905E
1496  905E DD 71 05     	ld (ix+5),c
1497  9061 DD 70 06     	ld (ix+6),b
1498  9064
1499  9064 ED 43 EF 8B  	ld (Puntero_de_impresion),bc
1500  9068
1501  9068              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1502  9068
1503  9068 39           	add hl,sp
1504  9069 DD 75 07     	ld (ix+7),l
1505  906C DD 74 08     	ld (ix+8),h
1506  906F
1507  906F C1           	pop bc
1508  9070
1509  9070 79           	ld a,c
1510  9071 80           	add b															; Comprueba si ya no hay datos en el almacén.
1511  9072
1512  9072 ED 7B 39 8C  	ld sp,(Stack)
1513  9076
1514  9076 CC 3B 94     	call z,Reinicia_entidad_maliciosa
1515  9079
1516  9079 C9           	ret
1517  907A
1518  907A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1519  907A              ;
1520  907A              ;	25/11/24
1521  907A
1522  907A              Cargamos_registros_con_explosion
1523  907A
1524  907A DD 6E 07     	ld l,(ix+7)
1525  907D DD 66 08     	ld h,(ix+8)
1526  9080 CD 20 91     	call Extrae_address
1527  9083 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1528  9084
1529  9084 DD 6E 05     	ld l,(ix+5)
1530  9087 DD 66 06     	ld h,(ix+6)
1531  908A
1532  908A E5           	push hl
1533  908B DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1534  908D
1535  908D C9           	ret
1536  908E
1537  908E
1538  908E              Cargamos_registros_con_explosion_Amadeus
1539  908E
1540  908E 2A B5 89     	ld hl,(Pamm_Amadeus)
1541  9091 CD 20 91     	call Extrae_address
1542  9094
1543  9094 5D           	ld e,l
1544  9095 54           	ld d,h
1545  9096
1546  9096 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1547  909A
1548  909A C9           	ret
1549  909B
1550  909B              ; --------------------------------------------------------------------------------------------------------------
1551  909B              ;
1552  909B              ;	17/06/24
1553  909B              ;
1554  909B              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1555  909B              ;
1556  909B              ;	IX contiene el puntero de impresión.
1557  909B              ;	DE contiene (Puntero_objeto).
1558  909B
1559  909B
1560  909B              Cargamos_registros_con_mov_masticado_Amadeus
1561  909B
1562  909B ED 73 39 8C  	ld (Stack),sp
1563  909F ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1564  90A3 D1           	pop de 															; DE contiene Puntero_objeto
1565  90A4 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1566  90A6 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1567  90AA ED 7B 39 8C  	ld sp,(Stack)
1568  90AE C9           	ret
1569  90AF
1570  90AF              ; ---------------------------------------------------------------------------------------------------------------------
1571  90AF              ;
1572  90AF              ;	18/6/24
1573  90AF              ;
1574  90AF              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1575  90AF
1576  90AF              Genera_datos_de_impresion_Amadeus
1577  90AF
1578  90AF 3A B2 89     	ld a,(Impacto_Amadeus)
1579  90B2 A7           	and a
1580  90B3 20 03        	jr nz,1F
1581  90B5
1582  90B5              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1583  90B5              ; _apuntando a la correspondiente explosión.
1584  90B5
1585  90B5 CD 9B 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1586  90B8
1587  90B8 DD 7D        1 ld a,ixl
1588  90BA E6 1F        	and $1f
1589  90BC 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1590  90BF
1591  90BF 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1592  90C2 E5           	push hl
1593  90C3
1594  90C3 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1595  90C6 22 5B 8C     	ld (Scanlines_album_SP),hl
1596  90C9
1597  90C9 CD 27 95     	call Genera_datos_de_impresion
1598  90CC
1599  90CC E1           	pop hl
1600  90CD 22 5B 8C     	ld (Scanlines_album_SP),hl
1601  90D0
1602  90D0 C9           	ret
1603  90D1
1604  90D1              ; ---------------------------------------------------------------------------------------------------------------------
1605  90D1              ;
1606  90D1              ;	13/03/24
1607  90D1              ;
1608  90D1              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1609  90D1
1610  90D1              Inicia_albumes_de_lineas
1611  90D1
1612  90D1 21 00 80     	ld hl,Scanlines_album
1613  90D4 22 3D 8C     	ld (Album_de_pintado),hl
1614  90D7 22 5B 8C     	ld (Scanlines_album_SP),hl
1615  90DA
1616  90DA 21 1A 81     	ld hl,Scanlines_album_2
1617  90DD 22 3F 8C     	ld (Album_de_borrado),hl
1618  90E0
1619  90E0 C9           	ret
1620  90E1
1621  90E1              Inicia_albumes_de_lineas_Amadeus
1622  90E1
1623  90E1 21 34 82     	ld hl,Amadeus_scanlines_album
1624  90E4 22 41 8C     	ld (Album_de_pintado_Amadeus),hl
1625  90E7 21 58 82     	ld hl,Amadeus_scanlines_album_2
1626  90EA 22 43 8C     	ld (Album_de_borrado_Amadeus),hl
1627  90ED
1628  90ED C9           	ret
1629  90EE
1630  90EE              Inicia_albumes_de_disparos
1631  90EE
1632  90EE 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1633  90F1 22 45 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1634  90F4 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1635  90F7 22 47 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1636  90FA
1637  90FA 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1638  90FD 22 49 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1639  9100 22 4D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1640  9103
1641  9103 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1642  9106 22 4B 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1643  9109
1644  9109 C9           	ret
1645  910A
1646  910A              ; ---------------------------------------------------------------------------------------------------------------------
1647  910A              ;
1648  910A              ; 8/1/23
1649  910A              ;
1650  910A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1651  910A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1652  910A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1653  910A
1654  910A              ; Destruye HL y DE !!!!!
1655  910A
1656  910A              Inicia_punteros_de_cajas
1657  910A
1658  910A 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1659  910D CD 20 91         call Extrae_address
1660  9110 22 2A 8C         ld (Puntero_store_caja),hl
1661  9113 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1662  9116 22 2E 8C     	ld (Indice_restore_caja),hl
1663  9119 CD 20 91     	call Extrae_address
1664  911C 22 2C 8C     	ld (Puntero_restore_caja),hl
1665  911F C9               ret
1666  9120
1667  9120              ; *************************************************************************************************************************************************************
1668  9120
1669  9120              ;
1670  9120              ; 20/10/22
1671  9120              ;
1672  9120              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1673  9120              ;
1674  9120              ; Destruye el puntero y DE !!!!!
1675  9120
1676  9120 5E           Extrae_address ld e,(hl)
1677  9121 23           	inc hl
1678  9122 56           	ld d,(hl)
1679  9123 2B           	dec hl
1680  9124 EB           	ex de,hl
1681  9125 C9           	ret
1682  9126
1683  9126              ; *************************************************************************************************************************************************************
1684  9126              ;
1685  9126              ;	20/1/24
1686  9126              ;
1687  9126              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1688  9126              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1689  9126              ;
1690  9126              ;   Destruye HL y BC !!!!!,
1691  9126              ;
1692  9126              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1693  9126              ;					"0" ..... Izquierda.
1694  9126
1695  9126              Inicia_Puntero_objeto
1696  9126
1697  9126 3A 09 8C     	ld a,(Cuad_objeto)
1698  9129 E6 01        	and 1
1699  912B F5           	push af
1700  912C CC 48 91     	call z,Inicia_puntero_objeto_izq
1701  912F F1           	pop af
1702  9130 C8           	ret z
1703  9131 CD 35 91     	call Inicia_puntero_objeto_der
1704  9134 C9           	ret
1705  9135
1706  9135              ; Arrancamos desde la parte izquierda de la pantalla.
1707  9135              ; Iniciamos (Indice_Sprite_der).
1708  9135
1709  9135 2A FF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1710  9138 22 03 8C     	ld (Puntero_DESPLZ_der),hl
1711  913B CD 20 91     	call Extrae_address
1712  913E 22 FC 8B     	ld (Puntero_objeto),hl
1713  9141
1714  9141 2A 01 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1715  9144 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1716  9147 C9           	ret
1717  9148
1718  9148              ; Arrancamos desde la parte derecha de la pantalla.
1719  9148              ; Iniciamos (Indice_Sprite_izq).
1720  9148
1721  9148 2A 01 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1722  914B 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1723  914E CD 20 91     	call Extrae_address
1724  9151 22 FC 8B     	ld (Puntero_objeto),hl
1725  9154
1726  9154 2A FF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1727  9157 22 03 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1728  915A C9           	ret
1729  915B
1730  915B              ; **************************************************************************************************
1731  915B              ;
1732  915B              ;	27/11/24
1733  915B              ;
1734  915B              ;	INPUT: IX contiene (Puntero_store_caja).
1735  915B              ;
1736  915B              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1737  915B
1738  915B              Salta_caja_de_entidades_vacia
1739  915B
1740  915B DD 7E 00     	ld a,(ix+0)
1741  915E A7           	and a
1742  915F C0           	ret nz
1743  9160
1744  9160 CD 6A 91     	call Incrementa_punteros_de_cajas
1745  9163 DD 2A 2A 8C  	ld ix,(Puntero_store_caja)
1746  9167 18 F2        	jr Salta_caja_de_entidades_vacia
1747  9169
1748  9169 C9           	ret
1749  916A
1750  916A              ; **************************************************************************************************
1751  916A              ;
1752  916A              ;	08/05/23
1753  916A              ;
1754  916A              ;	Incrementamos los dos punteros de entidades. (+1).
1755  916A
1756  916A              Incrementa_punteros_de_cajas
1757  916A
1758  916A 2A 2C 8C     	ld hl,(Puntero_restore_caja)
1759  916D 22 2A 8C     	ld (Puntero_store_caja),hl
1760  9170 2A 2E 8C     	ld hl,(Indice_restore_caja)
1761  9173 23           	inc hl
1762  9174 23           	inc hl
1763  9175 22 2E 8C     	ld (Indice_restore_caja),hl
1764  9178 CD 20 91         call Extrae_address
1765  917B 22 2C 8C         ld (Puntero_restore_caja),hl
1766  917E C9               ret
1767  917F
1768  917F              ; -----------------------------------------------------------
1769  917F
1770  917F              ; Teclado.
1771  917F
1772  917F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1773  9181 DB FE        	in a,($fe)
1774  9183 E6 01        	and $01
1775  9185 28 02        	jr z,1f
1776  9187 18 F6        	jr Pulsa_ENTER
1777  9189 C9           1 ret
1778  918A
1779  918A              ; **************************************************************************************************
1780  918A              ;
1781  918A              ; Temporización.
1782  918A
1783  918A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1784  918A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1785  918A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1786  918A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1787  918A
1788  918A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1789  918A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1790  918A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1791  918A
1792  918A              ; A partir de $4f61 no hace falta DELAY.
1793  918A
1794  918A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1795  918A
1796  918A              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1797  918A              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1798  918A              ;	LD A,B
1799  918A              ;	AND A
1800  918A              ;	JR NZ,wait
1801  918A              ;	RET
1802  918A
1803  918A              ; ---------------------------------------------------------------------------------------------------------------
1804  918A              ;
1805  918A              ;	13/07/24
1806  918A              ;
1807  918A
1808  918A              Inicia_Shield
1809  918A
1810  918A 21 85 8C     	ld hl,Datos_Shield
1811  918D 22 89 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1812  9190
1813  9190 7E           	ld a,(hl)
1814  9191 32 8C 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1815  9194
1816  9194 3E 01        	ld a,1
1817  9196 32 8D 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1818  9199
1819  9199 C9           	ret
1820  919A
1821  919A              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1822  919A              ;
1823  919A              ;	4/6/24
1824  919A              ;
1825  919A              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1826  919A              ;
1827  919A              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1828  919A              ;
1829  919A
1830  919A              Actualiza_pantalla
1831  919A
1832  919A 3E 02        	ld a,2
1833  919C D3 FE        	out ($fe),a
1834  919E
1835  919E 3A 61 8C     	ld a,(Ctrl_3)
1836  91A1 CB 57        	bit 2,a
1837  91A3 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1838  91A5
1839  91A5              Borrando_entidades
1840  91A5
1841  91A5 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1842  91A8 CD 20 91     	call Extrae_address
1843  91AB 24           	inc h
1844  91AC 25           	dec h
1845  91AD 28 05        	jr z,Pintando_entidades
1846  91AF CD 1B 96     	call Pinta_Sprites
1847  91B2 18 F1        	jr Borrando_entidades
1848  91B4
1849  91B4              Pintando_entidades
1850  91B4
1851  91B4 2A 5D 8C     	ld hl,(India_SP)
1852  91B7 2C           	inc l
1853  91B8 CD 20 91     	call Extrae_address
1854  91BB 24           	inc h
1855  91BC 25           	dec h
1856  91BD 28 0E        	jr z,Ejecuta_escudo
1857  91BF 1C           	inc e
1858  91C0 1C           	inc e
1859  91C1 ED 53 5D 8C  	ld (India_SP),de
1860  91C5 CD 20 91     	call Extrae_address
1861  91C8 CD 1B 96     	call Pinta_Sprites
1862  91CB 18 E7        	jr Pintando_entidades
1863  91CD
1864  91CD              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1865  91CD
1866  91CD              Ejecuta_escudo
1867  91CD
1868  91CD 3A 8B 8C     	ld a,(Shield)
1869  91D0 A7           	and a
1870  91D1 20 2F        	jr nz,Aplica_Shield
1871  91D3
1872  91D3              Borrando_Amadeus
1873  91D3
1874  91D3 21 61 8C     	ld hl,Ctrl_3
1875  91D6 CB 6E        	bit 5,(hl)
1876  91D8 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1877  91DA
1878  91DA 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
1879  91DD CD 20 91     	call Extrae_address
1880  91E0 24           	inc h
1881  91E1 25           	dec h
1882  91E2 28 03        	jr z,Pintando_Amadeus
1883  91E4 CD 1B 96     	call Pinta_Sprites
1884  91E7
1885  91E7              Pintando_Amadeus
1886  91E7
1887  91E7 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1888  91EA CD 20 91     	call Extrae_address
1889  91ED 24           	inc h
1890  91EE 25           	dec h
1891  91EF 28 03        	jr z,1F
1892  91F1 CD 1B 96     	call Pinta_Sprites
1893  91F4
1894  91F4              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1895  91F4
1896  91F4 21 61 8C     1 ld hl,Ctrl_3
1897  91F7 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1898  91F9 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1899  91FB CB AE        	res 5,(hl)
1900  91FD
1901  91FD 3E 01        	ld a,1												; Borde azul.
1902  91FF D3 FE        	out ($fe),a
1903  9201
1904  9201 C9           	ret
1905  9202
1906  9202              Aplica_Shield
1907  9202
1908  9202              ;	Bit 1 "1" (Shield_3) Sólo borra.
1909  9202              ;		  "0"     ""     Borra/Pinta.
1910  9202              ;	Bit 2    ""  RET.	 No borra, no pinta.
1911  9202
1912  9202 21 8D 8C     	ld hl,Shield_3
1913  9205
1914  9205 CB 5E        	bit 3,(hl)
1915  9207 20 DE        	jr nz,Pintando_Amadeus
1916  9209
1917  9209 CB 56        	bit 2,(hl)
1918  920B 20 E7        	jr nz,1B
1919  920D
1920  920D CB 4E        	bit 1,(hl)
1921  920F C4 16 92     	call nz,Borra_Amadeus_shield
1922  9212
1923  9212 28 BF        	jr z,Borrando_Amadeus
1924  9214 18 DE        	jr 1B
1925  9216
1926  9216              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1927  9216
1928  9216              Borra_Amadeus_shield
1929  9216
1930  9216 3A 61 8C     	ld a,(Ctrl_3)
1931  9219 CB 6F        	bit 5,a
1932  921B 28 08        	jr z,1F
1933  921D
1934  921D 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
1935  9220 CD 20 91     	call Extrae_address
1936  9223 18 06        	jr 2F
1937  9225
1938  9225 2A 41 8C     1 ld hl,(Album_de_pintado_Amadeus)
1939  9228 CD 20 91     	call Extrae_address
1940  922B
1941  922B CD 1B 96     2 call Pinta_Sprites
1942  922E
1943  922E AF           	xor a
1944  922F 3C           	inc a											; Asegura NZ en la salida de la rutina.
1945  9230
1946  9230 C9           	ret
1947  9231
1948  9231              Pinta_Amadeus_shield
1949  9231
1950  9231 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1951  9234 CD 20 91     	call Extrae_address
1952  9237 CD 1B 96     	call Pinta_Sprites
1953  923A
1954  923A AF           	xor a
1955  923B 3C           	inc a											; Asegura NZ en la salida de la rutina.
1956  923C
1957  923C C9           	ret
1958  923D
1959  923D              Borra_Pinta_Amadeus_shield
1960  923D
1961  923D CD 16 92     	call Borra_Amadeus_shield
1962  9240 CD 31 92     	call Pinta_Amadeus_shield
1963  9243 C9           	ret
1964  9244
1965  9244              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1966  9244              ;
1967  9244              ;	19/6/24
1968  9244              ;
1969  9244
1970  9244              Teclado
1971  9244
1972  9244              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1973  9244
1974  9244 3E F7        	ld a,$f7												; "5" para disparar.
1975  9246 DB FE        	in a,($fe)
1976  9248 E6 10        	and $10
1977  924A
1978  924A CC B6 A2     	call z,Genera_disparo_Amadeus
1979  924D
1980  924D 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1981  924F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1982  9251 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1983  9253 CC 88 9D         call z,Amadeus_a_izquierda
1984  9256
1985  9256 3E F7        	ld a,$f7
1986  9258 DB FE        	in a,($fe)
1987  925A E6 01        	and $01
1988  925C C8           	ret z
1989  925D
1990  925D 3E F7        	ld a,$f7
1991  925F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1992  9261 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1993  9263 CC A0 9D     	call z,Amadeus_a_derecha
1994  9266
1995  9266 C9           	ret
1996  9267
1997  9267              ; ------------------------------------------------------------------------------------------------------------------------
1998  9267              ;
1999  9267              ;	06/07/24
2000  9267              ;
2001  9267
2002  9267              Genera_explosion
2003  9267
2004  9267 21 73 8C     	ld hl,Clock_explosion
2005  926A 35           	dec (hl)
2006  926B 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2007  926D
2008  926D              Borra_entidad_colisionada
2009  926D
2010  926D CD 5E 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2011  9270
2012  9270 DD E5        	push ix
2013  9272 CD 7A 90     	call Cargamos_registros_con_explosion
2014  9275 CD 27 95     	call Genera_datos_de_impresion
2015  9278 DD E1        	pop ix
2016  927A
2017  927A AF           	xor a
2018  927B 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2019  927C
2020  927C C9           	ret
2021  927D
2022  927D              Siguiente_frame_explosion
2023  927D
2024  927D 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2025  927F
2026  927F              ; Avanza Frame de explosión.
2027  927F
2028  927F DD 6E 07     	ld l,(ix+7)
2029  9282 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2030  9285
2031  9285 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2032  9288
2033  9288 79           	ld a,c
2034  9289 95           	sub l
2035  928A 20 15        	jr nz,1F
2036  928C
2037  928C              ; Fín de la entidad !!!!!!!!!!!!!
2038  928C
2039  928C 21 33 8C     	ld hl,Numero_parcial_de_entidades
2040  928F 35           	dec (hl)
2041  9290 23           	inc hl
2042  9291 35           	dec (hl)														; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso)
2043  9292
2044  9292              ; !! Provisional. Limpia la caja de entidades.
2045  9292
2046  9292 DD E5        	push ix
2047  9294 E1           	pop hl
2048  9295 AF           	xor a
2049  9296 77           	ld (hl),a
2050  9297 5D           	ld e,l
2051  9298 54           	ld d,h
2052  9299 1C           	inc e
2053  929A 01 0B 00     	ld bc,11
2054  929D ED B0        	ldir
2055  929F
2056  929F 18 CC        	jr Borra_entidad_colisionada
2057  92A1
2058  92A1 23           1 inc hl
2059  92A2 23           	inc hl
2060  92A3
2061  92A3 DD 75 07     	ld (ix+7),l
2062  92A6 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2063  92A9
2064  92A9 18 C2        	jr Borra_entidad_colisionada
2065  92AB
2066  92AB              ; ----- ----- ----- ----- -----
2067  92AB
2068  92AB              Genera_explosion_Amadeus
2069  92AB
2070  92AB 21 74 8C     	ld hl,Clock_explosion_Amadeus
2071  92AE 35           	dec (hl)
2072  92AF 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2073  92B1
2074  92B1              Borra_Amadeus_impactado
2075  92B1
2076  92B1 CD C3 8E     	call Change_Amadeus
2077  92B4 CD 8E 90     	call Cargamos_registros_con_explosion_Amadeus
2078  92B7 CD AF 90     	call Genera_datos_de_impresion_Amadeus
2079  92BA
2080  92BA 21 61 8C     	ld hl,Ctrl_3
2081  92BD CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2082  92BF
2083  92BF AF           	xor a
2084  92C0 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2085  92C1
2086  92C1 C9           	ret
2087  92C2
2088  92C2              Siguiente_frame_explosion_Amadeus
2089  92C2
2090  92C2 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2091  92C4
2092  92C4              ; Avanza Frame de explosión.
2093  92C4
2094  92C4 2A B5 89     	ld hl,(Pamm_Amadeus)
2095  92C7 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2096  92CA
2097  92CA 79           	ld a,c
2098  92CB 95           	sub l
2099  92CC 20 0B        	jr nz,1F
2100  92CE
2101  92CE              ; Fín de Amadeus !!!!!!!!!!!!!
2102  92CE              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2103  92CE
2104  92CE AF           	xor a
2105  92CF 32 B2 89     	ld (Impacto_Amadeus),a
2106  92D2 21 61 8C     	ld hl,Ctrl_3
2107  92D5 CB F6        	set 6,(hl)
2108  92D7
2109  92D7 18 D8        	jr Borra_Amadeus_impactado
2110  92D9
2111  92D9 23           1 inc hl
2112  92DA 23           	inc hl
2113  92DB 22 B5 89     	ld (Pamm_Amadeus),hl
2114  92DE 18 D1        	jr Borra_Amadeus_impactado
2115  92E0
2116  92E0              ; ---------------------------------------------------------------
2117  92E0
2118  92E0              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92E0              ; ******************************************************************************************************************************************************************************************
   2+ 92E0              ;
   3+ 92E0              ;   21/04/24
   4+ 92E0              ;
   5+ 92E0              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92E0              ;   (XOR) bit a bit.
   7+ 92E0              ;
   8+ 92E0              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92E0
  10+ 92E0              Derivando_RND
  11+ 92E0
  12+ 92E0 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92E3
  14+ 92E3 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92E5 C5               push bc
  16+ 92E6              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92E6 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92E9              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92E9
  20+ 92E9 A7           6 and a                                 ; Carry a "0".
  21+ 92EA CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92EC 30 02            jr nc,1F
  23+ 92EE
  24+ 92EE CB C1            set 0,c
  25+ 92F0
  26+ 92F0 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92F1 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92F3 5F               ld e,a
  29+ 92F4
  30+ 92F4 7A               ld a,d
  31+ 92F5 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92F7 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92F9
  34+ 92F9 CB 3F            srl a
  35+ 92FB
  36+ 92FB AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92FC
  38+ 92FC 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92FD 28 04            jr z,4F
  40+ 92FF
  41+ 92FF CB FF            set 7,a
  42+ 9301 18 02            jr 5F
  43+ 9303
  44+ 9303 CB BF        4 res 7,a
  45+ 9305
  46+ 9305 CB 21        5 sla c
  47+ 9307 10 E0            djnz 6B
  48+ 9309
  49+ 9309 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 930A
  51+ 930A 77               ld (hl),a
  52+ 930B 23               inc hl
  53+ 930C C1               pop bc
  54+ 930D 10 D4            djnz 3B
  55+ 930F
  56+ 930F C9               ret
  57+ 9310
  58+ 9310
  59+ 9310
# file closed: RND_Derivando.asm
2119  9310              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9310              ;---------------------------------------------------------------------------------------------------------------
   2+ 9310              ;
   3+ 9310              ;   13/11/24
   4+ 9310
   5+ 9310              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9310
   7+ 9310              Genera_movimientos_masticados_del_nivel
   8+ 9310
   9+ 9310              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9310
  11+ 9310              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9310              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9310              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9310
  15+ 9310 2D           	dec l
  16+ 9311 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9312 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9313 4E           	ld c,(hl)
  19+ 9314
  20+ 9314 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9315 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9316
  23+ 9316              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9316
  25+ 9316 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9317
  27+ 9317 CD 55 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 931A
  29+ 931A              ;	Caja Master inicializada ???
  30+ 931A
  31+ 931A 7E           	ld a,(hl)
  32+ 931B A7           	and a
  33+ 931C 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 931E
  35+ 931E              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 931E
  37+ 931E C1           	pop bc
  38+ 931F 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9320 C5           	push bc
  40+ 9321
  41+ 9321 CD F5 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9324 CD 89 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9327
  44+ 9327 3A EA 8B     	ld a,(Tipo)
  45+ 932A CD 65 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 932D
  47+ 932D              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 932D
  49+ 932D              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 932D              ;	ld a,(hl)
  51+ 932D              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 932D
  53+ 932D              ;	ld hl,Posicion_inicio
  54+ 932D              ;	ld (hl),a
  55+ 932D
  56+ 932D              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 932D              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 932D
  59+ 932D CD FA 8F     	call Construye_movimientos_masticados_entidad
  60+ 9330
  61+ 9330 2A 30 8C     	ld hl,(Puntero_indice_master)
  62+ 9333 CD 20 91     	call Extrae_address
  63+ 9336
  64+ 9336 5D           	ld e,l
  65+ 9337 54           	ld d,h
  66+ 9338
  67+ 9338 CD B6 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 933B
  69+ 933B              Movimientos_masticados_construidos
  70+ 933B
  71+ 933B C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 933C
  73+ 933C E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 933D 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 933E
  76+ 933E 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 933F 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9341
  79+ 9341 C9           	ret
  80+ 9342
  81+ 9342              ;---------------------------------------------------------------------------------------------------------------
  82+ 9342              ;
  83+ 9342              ;   9/11/24
  84+ 9342              ;
  85+ 9342              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9342              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9342              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9342              ;	_ de la 1ª entidad del Nivel.
  89+ 9342              ;
  90+ 9342              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9342
  92+ 9342              ;	MODIFICA: HL,DE y A.
  93+ 9342              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9342
  95+ 9342              Inicializa_1er_Nivel
  96+ 9342
  97+ 9342              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9342
  99+ 9342 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 9345 CD 20 91     	call Extrae_address
 101+ 9348 ED 53 81 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 934C
 103+ 934C 7E           	ld a,(hl)
 104+ 934D 32 32 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9350
 106+ 9350 2C           	inc l
 107+ 9351 22 83 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9354
 109+ 9354 C9           	ret
 110+ 9355
 111+ 9355              ; ----------------------
 112+ 9355              ;
 113+ 9355              ;	13/11/24
 114+ 9355              ;
 115+ 9355
 116+ 9355              Situa_en_Caja_Master
 117+ 9355
 118+ 9355 CD 74 94         call Calcula_salto_en_BC
 119+ 9358 21 58 89         ld hl,Indice_de_cajas_master
 120+ 935B A7               and a
 121+ 935C ED 4A            adc hl,bc
 122+ 935E 22 30 8C       	ld (Puntero_indice_master),hl
 123+ 9361 CD 20 91     	call Extrae_address
 124+ 9364 C9           	ret
 125+ 9365
 126+ 9365              ; ----------------------
 127+ 9365
 128+ 9365              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9365              ; 	ld bc,4
 130+ 9365              ; 	ldir
 131+ 9365              ; 	ret
 132+ 9365
 133+ 9365 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9366 CD 74 94         call Calcula_salto_en_BC
 135+ 9369 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 936C A7               and a
 137+ 936D ED 4A            adc hl,bc
 138+ 936F CD 20 91         call Extrae_address
 139+ 9372 22 1B 8C         ld (Puntero_indice_mov),hl
 140+ 9375 C9               ret
 141+ 9376
 142+ 9376              ;---------------------------------------------------------------------------------------------------------------
 143+ 9376              ;
 144+ 9376              ;   13/11/24
 145+ 9376              ;
 146+ 9376              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9376
 148+ 9376
 149+ 9376              Prepara_Cajas_de_Entidades
 150+ 9376
 151+ 9376              ; Preparamos los punteros de las cajas de entidades:
 152+ 9376
 153+ 9376 CD 0A 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9379              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9379 CD BF 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 937C
 157+ 937C 2A 83 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 937F
 159+ 937F              ; En este punto:
 160+ 937F              ;
 161+ 937F              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 937F              ; B contiene (Numero_parcial_de_entidades).
 163+ 937F
 164+ 937F C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 9380
 166+ 9380 7E           	ld a,(hl)
 167+ 9381
 168+ 9381 CD 55 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9384
 170+ 9384 ED 5B 2A 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9388
 172+ 9388 D5           	push de
 173+ 9389 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 938B
 175+ 938B 01 0C 00     	ld bc,12
 176+ 938E ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 9390              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 9390
 179+ 9390              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 9390              ;
 181+ 9390              ;
 182+ 9390              ; ------------------------------------------------------ IX
 183+ 9390              ; ------------------------------------------------------ IX
 184+ 9390              ; ------------------------------------------------------ IX
 185+ 9390              ; ------------------------------------------------------ IX
 186+ 9390
 187+ 9390 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 9392
 189+ 9392 CD 4E 90     	call Obtenemos_puntero_de_impresion
 190+ 9395
 191+ 9395 DD 6E 05     	ld l,(ix+5)
 192+ 9398 2C           	inc l
 193+ 9399 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 939C
 195+ 939C D5           	push de														; Push (Puntero_objeto).
 196+ 939D E5           	push hl														; Push (Puntero_de_impresion).
 197+ 939E
 198+ 939E CD FB 94     	call Genera_coordenadas
 199+ 93A1
 200+ 93A1 ED 4B EB 8B  	ld bc,(Coordenada_X)
 201+ 93A5
 202+ 93A5 DD 71 01     	ld (ix+1),c
 203+ 93A8 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 93AB
 205+ 93AB CD 5E 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 93AE
 207+ 93AE DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 93B0 D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 93B1
 210+ 93B1 CD 27 95     	call Genera_datos_de_impresion
 211+ 93B4
 212+ 93B4 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 93B6
 214+ 93B6              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 93B6
 216+ 93B6 CD 2D 94     	call Decrementa_Contador_de_mov_masticados
 217+ 93B9 CD 0A 94     	call Limpiamos_bandeja_DRAW
 218+ 93BC CD 6A 91     	call Incrementa_punteros_de_cajas
 219+ 93BF
 220+ 93BF              ; Siguiente entidad del Nivel.
 221+ 93BF
 222+ 93BF 2A 83 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 93C2 23           	inc hl 														; _ entidad del Nivel.
 224+ 93C3
 225+ 93C3 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 93C4
 227+ 93C4 10 B9        	djnz 1B
 228+ 93C6
 229+ 93C6 C9           	ret
 230+ 93C7
 231+ 93C7              ; -------------------------------------------------------------------------------------------------------------------
 232+ 93C7              ;
 233+ 93C7              ;	27/5/24
 234+ 93C7              ;
 235+ 93C7              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 93C7              ;
 237+ 93C7
 238+ 93C7              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 93C7              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 93C7
 241+ 93C7 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 93CA CD 89 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 93CD
 244+ 93CD
 245+ 93CD              Construye_movimientos_masticados_Amadeus
 246+ 93CD
 247+ 93CD 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 93D0 CD 41 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 93D3              ;															; _ el (Contador_de_mov_masticados).
 250+ 93D3 CD 26 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 93D6              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 93D6
 253+ 93D6              ; Generamos movimientos masticados de Amadeus.
 254+ 93D6
 255+ 93D6 06 79        	ld b,121												; $0079, 121d.
 256+ 93D8
 257+ 93D8 C5           1 push bc
 258+ 93D9 CD 3E 97     	call Draw
 259+ 93DC CD 26 90     	call Guarda_movimiento_masticado
 260+ 93DF
 261+ 93DF CD B2 9A     	call Mov_right
 262+ 93E2 CD B2 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 93E5
 264+ 93E5 C1           	pop bc
 265+ 93E6 10 F0        	djnz 1B
 266+ 93E8
 267+ 93E8              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 93E8
 269+ 93E8              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 93E8              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 93E8
 272+ 93E8 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 93EB 01 08 00     	ld bc,8
 274+ 93EE A7           	and a
 275+ 93EF ED 42        	sbc hl,bc
 276+ 93F1 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 93F4
 278+ 93F4 C9           	ret
 279+ 93F5
 280+ 93F5              ; ---------------------------------------------------------------------
 281+ 93F5              ;
 282+ 93F5              ;	10/02/24
 283+ 93F5              ;
 284+ 93F5              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 93F5              ;
 286+ 93F5              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 93F5
 288+ 93F5              Definicion_segun_tipo
 289+ 93F5
 290+ 93F5 CD 74 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 93F8 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 93FB CD 7F 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 93FE C9           	ret
 294+ 93FF
 295+ 93FF              ; ---------------------------------------------------------------------
 296+ 93FF              ;
 297+ 93FF              ;	6/7/24
 298+ 93FF
 299+ 93FF
 300+ 93FF              Store_Restore_cajas
 301+ 93FF
 302+ 93FF ED 5B 2A 8C  	ld de,(Puntero_store_caja)
 303+ 9403 CD B6 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 9406 CD 6A 91     	call Incrementa_punteros_de_cajas
 305+ 9409 C9           	ret
 306+ 940A
 307+ 940A              ; ---------------------------------------------------------------------
 308+ 940A              ;
 309+ 940A              ;	23/6/24
 310+ 940A              ;
 311+ 940A              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 940A              ;
 313+ 940A              ;	MODIFY: HL
 314+ 940A
 315+ 940A              Limpiamos_bandeja_DRAW
 316+ 940A
 317+ 940A ED 73 39 8C  	ld (Stack),sp
 318+ 940E 31 0F 8C     	ld sp,Vel_left
 319+ 9411
 320+ 9411 AF           	xor a
 321+ 9412 67           	ld h,a
 322+ 9413 6F           	ld l,a
 323+ 9414
 324+ 9414 E5           	push hl
 325+ 9415 E5           	push hl
 326+ 9416 E5           	push hl
 327+ 9417 E5           	push hl
 328+ 9418 E5           	push hl
 329+ 9419 E5           	push hl
 330+ 941A E5           	push hl
 331+ 941B E5           	push hl
 332+ 941C E5           	push hl
 333+ 941D E5           	push hl
 334+ 941E E5           	push hl
 335+ 941F E5           	push hl
 336+ 9420 E5           	push hl
 337+ 9421 E5           	push hl
 338+ 9422 E5           	push hl
 339+ 9423 E5           	push hl
 340+ 9424 E5           	push hl
 341+ 9425 E5           	push hl
 342+ 9426
 343+ 9426 33           	inc sp
 344+ 9427
 345+ 9427 E5           	push hl
 346+ 9428 ED 7B 39 8C  	ld sp,(Stack)
 347+ 942C
 348+ 942C C9           	ret
 349+ 942D
 350+ 942D              ; ---------------------------------------------------------------------
 351+ 942D              ;
 352+ 942D              ;	23/11/24
 353+ 942D              ;
 354+ 942D              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 942D
 356+ 942D              Decrementa_Contador_de_mov_masticados
 357+ 942D
 358+ 942D DD 6E 09     	ld l,(ix+9)
 359+ 9430 DD 66 0A     	ld h,(ix+10)
 360+ 9433
 361+ 9433 2B           	dec hl
 362+ 9434
 363+ 9434 DD 75 09     	ld (ix+9),l
 364+ 9437 DD 74 0A     	ld (ix+10),h
 365+ 943A
 366+ 943A C9           	ret
 367+ 943B
 368+ 943B              ; ---------------------------------------------------------------------
 369+ 943B              ;
 370+ 943B              ;	24/11/24
 371+ 943B
 372+ 943B              Reinicia_entidad_maliciosa
 373+ 943B
 374+ 943B              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 943B
 376+ 943B CD 1F 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 943E CD 2C 9F     	call Transfiere_datos_de_contadores
 378+ 9441
 379+ 9441              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 9441
 381+ 9441 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 9444 CD F5 93     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 9447
 384+ 9447 7D           	ld a,l
 385+ 9448 C6 0B        	add 11
 386+ 944A 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 944B
 388+ 944B CD 20 91     	call Extrae_address
 389+ 944E
 390+ 944E DD 75 07     	ld (ix+7),l
 391+ 9451 DD 74 08     	ld (ix+8),h
 392+ 9454
 393+ 9454 CD 4E 90     	call Obtenemos_puntero_de_impresion
 394+ 9457
 395+ 9457              ; Incrementa (Contador_de_vueltas)x2.
 396+ 9457              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 9457
 398+ 9457              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 9457              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 9457              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 9457              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 9457              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 9457
 404+ 9457 DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 945B
 406+ 945B DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 945E CB 2F        	sra a
 408+ 9460 CB 2F        	sra a
 409+ 9462
 410+ 9462 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 9465
 412+ 9465 3E 40        	ld a,$40
 413+ 9467 DD BE 03     	cp (ix+3)
 414+ 946A C0           	ret nz
 415+ 946B
 416+ 946B              ; Límitador.
 417+ 946B
 418+ 946B              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 946B
 420+ 946B DD CB 03 2E  	sra (ix+3)
 421+ 946F DD CB 0B 2E  	sra (ix+11)
 422+ 9473
 423+ 9473 C9           	ret
 424+ 9474
 425+ 9474              ;	------------------------------------------------------------------------------------
 426+ 9474              ;
 427+ 9474              ;	09/11/24
 428+ 9474              ;
 429+ 9474              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 9474              ;
 431+ 9474              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 9474              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 9474
 434+ 9474 A7           Calcula_salto_en_BC and a
 435+ 9475 28 04        	jr z,1F
 436+ 9477 CB 27        	sla a
 437+ 9479 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 947B 4F           1 ld c,a
 439+ 947C 06 00        	ld b,0
 440+ 947E C9           	ret
 441+ 947F
 442+ 947F              ; ------------------------------------------------------------------
 443+ 947F              ;
 444+ 947F              ;	19/1/24
 445+ 947F              ;
 446+ 947F              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 947F              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 947F
 449+ 947F A7           Situa_en_datos_de_definicion and a
 450+ 9480 ED 4A        	adc hl,bc
 451+ 9482 CD 20 91     	call Extrae_address
 452+ 9485 22 37 8C         ld (Datos_de_entidad),hl
 453+ 9488 C9           	ret
 454+ 9489
 455+ 9489              ; ----------------------------------------------------------------------------------------------------------
 456+ 9489              ;
 457+ 9489              ;	24/6/24
 458+ 9489              ;
 459+ 9489              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 9489              ;	_ de entidad.
 461+ 9489              ;
 462+ 9489              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 9489              ;
 464+ 9489              ;
 465+ 9489              ;	MODIFICA: HL,DE y BC
 466+ 9489
 467+ 9489
 468+ 9489              Definicion_de_entidad_a_bandeja_DRAW
 469+ 9489
 470+ 9489 11 EA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 948C 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 948D 12           	ld (de),a
 473+ 948E 23           	inc hl
 474+ 948F              ;
 475+ 948F 11 F8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 9492 01 02 00     	ld bc,2
 477+ 9495 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 9497              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 9497 11 ED 8B     	ld de,Contador_de_vueltas
 480+ 949A 7E           	ld a,(hl)
 481+ 949B 12           	ld (de),a
 482+ 949C 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 949D
 484+ 949D 11 FF 8B     	ld de,Indice_Sprite_der
 485+ 94A0 01 04 00     	ld bc,4
 486+ 94A3 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 94A5
 488+ 94A5 11 07 8C     	ld de,Posicion_inicio
 489+ 94A8 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 94AB ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 94AD
 492+ 94AD 11 F1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 94B0 01 02 00     	ld bc,2
 494+ 94B3 ED B0        	ldir
 495+ 94B5
 496+ 94B5 C9           	ret
 497+ 94B6
 498+ 94B6              ; ----------------------------------------------------------------------------------------------------------
 499+ 94B6              ;
 500+ 94B6              ;	1/8/24
 501+ 94B6              ;
 502+ 94B6
 503+ 94B6              Parametros_de_bandeja_DRAW_a_caja
 504+ 94B6
 505+ 94B6 21 EA 8B     	ld hl,Bandeja_DRAW
 506+ 94B9 01 0C 00     	ld bc,12
 507+ 94BC ED B0        	ldir
 508+ 94BE C9           	ret
 509+ 94BF
 510+ 94BF              ;---------------------------------------------------------------------------------------------------------------
 511+ 94BF              ;
 512+ 94BF              ;	13/11/24
 513+ 94BF              ;
 514+ 94BF              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 94BF              ;
 516+ 94BF              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 94BF              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 94BF
 519+ 94BF              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 94BF              ;			- Actualiza (Numero_de_entidades).
 521+ 94BF
 522+ 94BF              ;	MODIFICA: A y B.
 523+ 94BF
 524+ 94BF
 525+ 94BF              Inicializa_Numero_parcial_de_entidades
 526+ 94BF
 527+ 94BF 3A 32 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 94C2 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 94C4 38 0E        	jr c,1F
 530+ 94C6 28 0C        	jr z,1F
 531+ 94C8
 532+ 94C8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 94C8              ; Actualizamos variables.
 534+ 94C8
 535+ 94C8 D6 06        	sub 6
 536+ 94CA 32 32 8C     	ld (Numero_de_entidades),a
 537+ 94CD 3E 06        	ld a,6
 538+ 94CF 32 33 8C     	ld (Numero_parcial_de_entidades),a
 539+ 94D2 47           	ld b,a
 540+ 94D3 C9           	ret
 541+ 94D4
 542+ 94D4              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 94D4              ; (Numero_de_entidades)="0".
 544+ 94D4
 545+ 94D4 32 33 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 94D7 47           	ld b,a
 547+ 94D8 AF           	xor a
 548+ 94D9 32 32 8C     	ld (Numero_de_entidades),a
 549+ 94DC C9           	ret
 550+ 94DD
# file closed: Rutinas_de_inicio_y_niveles.asm
2120  94DD              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94DD              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94DD              ;
   3+ 94DD              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94DD              ;
   5+ 94DD              ; *****************************************************************************************************************************************************************************************
   6+ 94DD              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94DD
   8+ 94DD 7C           calcula_tercio ld a,h
   9+ 94DE E6 18        	and $18
  10+ 94E0 CB 2F        	sra a
  11+ 94E2 CB 2F        	sra a
  12+ 94E4 CB 2F        	sra a
  13+ 94E6 C9           	ret
  14+ 94E7
# file closed: calcula_tercio.asm
2121  94E7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94E7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94E7              ;
   3+ 94E7              ;
   4+ 94E7              ;	CLS.
   5+ 94E7              ;
   6+ 94E7              ;	Limpia la pantalla y define sus atributos.
   7+ 94E7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94E7              ;
   9+ 94E7              ;	COLORES: 0 ..... NEGRO
  10+ 94E7              ;    		 1 ..... AZUL
  11+ 94E7              ; 			 2 ..... ROJO
  12+ 94E7              ;			 3 ..... MAGENTA
  13+ 94E7              ; 			 4 ..... VERDE
  14+ 94E7              ; 			 5 ..... CIAN
  15+ 94E7              ;			 6 ..... AMARILLO
  16+ 94E7              ; 			 7 ..... BLANCO
  17+ 94E7              ;
  18+ 94E7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94E7              ;
  20+ 94E7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94E7
  22+ 94E7
  23+ 94E7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94EA 11 01 40     	LD DE,$4001
  25+ 94ED 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94F0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94F2 ED B0        	LDIR
  28+ 94F4 01 FF 02     	LD BC,767
  29+ 94F7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94F8 ED B0        	LDIR
  31+ 94FA C9           	ret
  32+ 94FB
# file closed: Cls.asm
2122  94FB              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94FB              ; ------------------------------------------------------------------------
   2+ 94FB              ;
   3+ 94FB              ;	30/1/24
   4+ 94FB              ;
   5+ 94FB              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94FB              ;	Fila superior "0", Columna izquierda "0".
   7+ 94FB              ;
   8+ 94FB              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94FB              ;
  10+ 94FB              ;	Modifica: A,BC y DE.
  11+ 94FB
  12+ 94FB              Genera_coordenadas
  13+ 94FB
  14+ 94FB 7D           	ld a,l
  15+ 94FC E6 1F        	and $1f
  16+ 94FE
  17+ 94FE 32 EB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9501
  19+ 9501 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9502 FE 40        	cp $40
  21+ 9504 38 1C        	jr c,4F
  22+ 9506
  23+ 9506 CD DD 94     	call calcula_tercio
  24+ 9509 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 950A
  26+ 950A 1E 00        	ld e,0
  27+ 950C 7D           	ld a,l
  28+ 950D E6 E0        	and $e0
  29+ 950F 28 01        	jr z,1F
  30+ 9511 04           	inc b
  31+ 9512
  32+ 9512 04           1 inc b
  33+ 9513 05           	dec b
  34+ 9514 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9516              ;														; _ , salimos.
  36+ 9516 1C           3 inc e
  37+ 9517 D6 20        	sub 32
  38+ 9519 20 FB        	jr nz,3B
  39+ 951B 10 F5        	djnz 1B
  40+ 951D
  41+ 951D 7B           2 ld a,e
  42+ 951E 32 EC 8B     	ld (Coordenada_y),a
  43+ 9521 C9           	ret
  44+ 9522
  45+ 9522 AF           4 xor a
  46+ 9523 32 EC 8B     	ld (Coordenada_y),a
  47+ 9526 C9           	ret
  48+ 9527
# file closed: Genera_coordenadas.asm
2123  9527              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9527              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9527              ;
   3+ 9527              ;	20/09/24
   4+ 9527              ;
   5+ 9527              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9527              ;   DE contiene Puntero_objeto.
   7+ 9527              ;   IX contiene el Puntero de impresión.
   8+ 9527
   9+ 9527              Genera_datos_de_impresion
  10+ 9527
  11+ 9527 ED 73 39 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 952B
  13+ 952B 2A 5B 8C         ld hl,(Scanlines_album_SP)
  14+ 952E
  15+ 952E 3E 05            ld a,5
  16+ 9530 85               add l
  17+ 9531 6F               ld l,a
  18+ 9532
  19+ 9532 F9               ld sp,hl
  20+ 9533 22 5B 8C         ld (Scanlines_album_SP),hl
  21+ 9536
  22+ 9536 21 00 00         ld hl,0
  23+ 9539
  24+ 9539 DD E5            push ix
  25+ 953B 3B               dec sp
  26+ 953C ED 7A            adc hl,sp
  27+ 953E D5               push de
  28+ 953F
  29+ 953F              ; Recuperamos SP.
  30+ 953F
  31+ 953F ED 7B 39 8C      ld sp,(Stack)
  32+ 9543
  33+ 9543 E5               push hl
  34+ 9544 F1               pop af
  35+ 9545 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9546
  37+ 9546              ; Tenemos el encabezado listo.
  38+ 9546              ; Preparamos registros para generar los scanlines.
  39+ 9546
  40+ 9546 DD E5            push ix
  41+ 9548 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9549
  43+ 9549 ED 5B 5B 8C      ld de,(Scanlines_album_SP)
  44+ 954D
  45+ 954D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 954D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 954D
  48+ 954D 7C               ld a,h
  49+ 954E FE 50            cp $50
  50+ 9550 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9552
  52+ 9552 20 05            jr nz,2F
  53+ 9554
  54+ 9554 7D               ld a,l
  55+ 9555 FE E0            cp $e0
  56+ 9557 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9559
  58+ 9559 7D           2 ld a,l
  59+ 955A FE C0            cp $c0
  60+ 955C D2 F2 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 955F
  62+ 955F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 955F
  64+ 955F CD F0 99         call NextScan
  65+ 9562 EB               ex de,hl
  66+ 9563
  67+ 9563 73               ld (hl),e
  68+ 9564 23               inc hl
  69+ 9565 72               ld (hl),d
  70+ 9566 23               inc hl
  71+ 9567
  72+ 9567 EB               ex de,hl
  73+ 9568
  74+ 9568 CD F0 99         call NextScan
  75+ 956B EB               ex de,hl
  76+ 956C
  77+ 956C 73               ld (hl),e
  78+ 956D 23               inc hl
  79+ 956E 72               ld (hl),d
  80+ 956F 23               inc hl
  81+ 9570
  82+ 9570 EB               ex de,hl
  83+ 9571
  84+ 9571 CD F0 99         call NextScan
  85+ 9574 EB               ex de,hl
  86+ 9575
  87+ 9575 73               ld (hl),e
  88+ 9576 23               inc hl
  89+ 9577 72               ld (hl),d
  90+ 9578 23               inc hl
  91+ 9579
  92+ 9579 EB               ex de,hl
  93+ 957A
  94+ 957A CD F0 99         call NextScan
  95+ 957D EB               ex de,hl
  96+ 957E
  97+ 957E 73               ld (hl),e
  98+ 957F 23               inc hl
  99+ 9580 72               ld (hl),d
 100+ 9581 23               inc hl
 101+ 9582
 102+ 9582 EB               ex de,hl
 103+ 9583
 104+ 9583 CD F0 99         call NextScan
 105+ 9586 EB               ex de,hl
 106+ 9587
 107+ 9587 73               ld (hl),e
 108+ 9588 23               inc hl
 109+ 9589 72               ld (hl),d
 110+ 958A 23               inc hl
 111+ 958B
 112+ 958B EB               ex de,hl
 113+ 958C
 114+ 958C CD F0 99         call NextScan
 115+ 958F EB               ex de,hl
 116+ 9590
 117+ 9590 73               ld (hl),e
 118+ 9591 23               inc hl
 119+ 9592 72               ld (hl),d
 120+ 9593 23               inc hl
 121+ 9594
 122+ 9594 EB               ex de,hl
 123+ 9595
 124+ 9595 CD F0 99         call NextScan
 125+ 9598 EB               ex de,hl
 126+ 9599
 127+ 9599 73               ld (hl),e
 128+ 959A 23               inc hl
 129+ 959B 72               ld (hl),d
 130+ 959C 23               inc hl
 131+ 959D
 132+ 959D EB               ex de,hl
 133+ 959E
 134+ 959E CD F0 99         call NextScan
 135+ 95A1 EB               ex de,hl
 136+ 95A2
 137+ 95A2 73               ld (hl),e
 138+ 95A3 23               inc hl
 139+ 95A4 72               ld (hl),d
 140+ 95A5 23               inc hl
 141+ 95A6
 142+ 95A6 EB               ex de,hl
 143+ 95A7
 144+ 95A7 CD F0 99         call NextScan
 145+ 95AA EB               ex de,hl
 146+ 95AB
 147+ 95AB 73               ld (hl),e
 148+ 95AC 23               inc hl
 149+ 95AD 72               ld (hl),d
 150+ 95AE 23               inc hl
 151+ 95AF
 152+ 95AF EB               ex de,hl
 153+ 95B0
 154+ 95B0 CD F0 99         call NextScan
 155+ 95B3 EB               ex de,hl
 156+ 95B4
 157+ 95B4 73               ld (hl),e
 158+ 95B5 23               inc hl
 159+ 95B6 72               ld (hl),d
 160+ 95B7 23               inc hl
 161+ 95B8
 162+ 95B8 EB               ex de,hl
 163+ 95B9
 164+ 95B9 CD F0 99         call NextScan
 165+ 95BC EB               ex de,hl
 166+ 95BD
 167+ 95BD 73               ld (hl),e
 168+ 95BE 23               inc hl
 169+ 95BF 72               ld (hl),d
 170+ 95C0 23               inc hl
 171+ 95C1
 172+ 95C1 EB               ex de,hl
 173+ 95C2
 174+ 95C2 CD F0 99         call NextScan
 175+ 95C5 EB               ex de,hl
 176+ 95C6
 177+ 95C6 73               ld (hl),e
 178+ 95C7 23               inc hl
 179+ 95C8 72               ld (hl),d
 180+ 95C9 23               inc hl
 181+ 95CA
 182+ 95CA EB               ex de,hl
 183+ 95CB
 184+ 95CB CD F0 99         call NextScan
 185+ 95CE EB               ex de,hl
 186+ 95CF
 187+ 95CF 73               ld (hl),e
 188+ 95D0 23               inc hl
 189+ 95D1 72               ld (hl),d
 190+ 95D2 23               inc hl
 191+ 95D3
 192+ 95D3 EB               ex de,hl
 193+ 95D4
 194+ 95D4 CD F0 99         call NextScan
 195+ 95D7 EB               ex de,hl
 196+ 95D8
 197+ 95D8 73               ld (hl),e
 198+ 95D9 23               inc hl
 199+ 95DA 72               ld (hl),d
 200+ 95DB 23               inc hl
 201+ 95DC
 202+ 95DC EB               ex de,hl
 203+ 95DD
 204+ 95DD CD F0 99         call NextScan
 205+ 95E0 EB               ex de,hl
 206+ 95E1
 207+ 95E1              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 95E1              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 95E1              ;   _ generar sus scanlines.
 210+ 95E1
 211+ 95E1              ;    ld (Puntero_de_impresion_disparo),de
 212+ 95E1
 213+ 95E1 73               ld (hl),e
 214+ 95E2 23               inc hl
 215+ 95E3 72               ld (hl),d
 216+ 95E4 23               inc hl
 217+ 95E5
 218+ 95E5              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 95E5
 220+ 95E5 22 5B 8C         ld (Scanlines_album_SP),hl
 221+ 95E8
 222+ 95E8 EB               ex de,hl
 223+ 95E9
 224+ 95E9              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 95E9
 226+ 95E9              ;    call NextScan
 227+ 95E9              ;    call NextScan
 228+ 95E9
 229+ 95E9 22 66 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 95EC
 231+ 95EC              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 95EC
 233+ 95EC 08               ex af,af
 234+ 95ED
 235+ 95ED F5               push af
 236+ 95EE E1               pop hl
 237+ 95EF
 238+ 95EF 36 10            ld (hl),16
 239+ 95F1
 240+ 95F1 C9               ret
 241+ 95F2
 242+ 95F2              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 95F2
 244+ 95F2              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 95F2
 246+ 95F2 3E 57            ld a,$57
 247+ 95F4 94               sub h
 248+ 95F5 47               ld b,a
 249+ 95F6
 250+ 95F6 3E DF            ld a,$df
 251+ 95F8 BD               cp l
 252+ 95F9 38 04            jr c,1F
 253+ 95FB
 254+ 95FB 3E 08            ld a,8
 255+ 95FD 80               add b
 256+ 95FE 47               ld b,a
 257+ 95FF
 258+ 95FF              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 95FF              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 95FF
 261+ 95FF 48           1 ld c,b
 262+ 9600 0C               inc c
 263+ 9601
 264+ 9601 04               inc b
 265+ 9602 05               dec b
 266+ 9603 20 02            jr nz,3F
 267+ 9605
 268+ 9605 18 0B            jr 6F
 269+ 9607
 270+ 9607 CD F0 99     3 call NextScan
 271+ 960A EB               ex de,hl
 272+ 960B
 273+ 960B 73               ld (hl),e
 274+ 960C 23               inc hl
 275+ 960D 72               ld (hl),d
 276+ 960E 23               inc hl
 277+ 960F
 278+ 960F EB               ex de,hl
 279+ 9610 10 F5            djnz 3B
 280+ 9612
 281+ 9612 ED 53 5B 8C  6 ld (Scanlines_album_SP),de
 282+ 9616
 283+ 9616 08           5 ex af,af
 284+ 9617 F5               push af
 285+ 9618 E1               pop hl
 286+ 9619
 287+ 9619 71               ld (hl),c
 288+ 961A
 289+ 961A C9               ret
 290+ 961B
# file closed: Genera_datos_de_impresion.asm
2124  961B              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 961B              ; -----------------------------------------------------------------------------
   2+ 961B              ;
   3+ 961B              ;   11/03/24
   4+ 961B              ;
   5+ 961B
   6+ 961B              Pinta_Sprites
   7+ 961B
   8+ 961B              ;    ld hl,(Scanlines_album_SP)
   9+ 961B              ;    call Extrae_address
  10+ 961B
  11+ 961B              ;    inc h
  12+ 961B              ;    dec h
  13+ 961B              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 961B
  15+ 961B ED 73 39 8C      ld (Stack),sp
  16+ 961F
  17+ 961F EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9620              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9620 2C               inc l
  20+ 9621 2C               inc l
  21+ 9622
  22+ 9622 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9623
  24+ 9623 2C               inc l
  25+ 9624 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9625
  27+ 9625              ;   Seleccionamos rutina de impresión:
  28+ 9625
  29+ 9625 3E 10            ld a,16
  30+ 9627 B8               cp b
  31+ 9628 C2 24 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 962B
  33+ 962B              ;   Rutinas:
  34+ 962B
  35+ 962B              Pinta_rapido    ;   1520 t/states.
  36+ 962B
  37+ 962B E1               pop hl
  38+ 962C
  39+ 962C 1A               ld a,(de)
  40+ 962D AE               xor (hl)
  41+ 962E 77               ld (hl),a
  42+ 962F 2C               inc l
  43+ 9630 1C               inc e
  44+ 9631 1A               ld a,(de)
  45+ 9632 AE               xor (hl)
  46+ 9633 77               ld (hl),a
  47+ 9634 2C               inc l
  48+ 9635 1C               inc e
  49+ 9636 1A               ld a,(de)
  50+ 9637 AE               xor (hl)
  51+ 9638 77               ld (hl),a
  52+ 9639 13               inc de
  53+ 963A
  54+ 963A E1               pop hl
  55+ 963B
  56+ 963B 1A               ld a,(de)
  57+ 963C AE               xor (hl)
  58+ 963D 77               ld (hl),a
  59+ 963E 2C               inc l
  60+ 963F 1C               inc e
  61+ 9640 1A               ld a,(de)
  62+ 9641 AE               xor (hl)
  63+ 9642 77               ld (hl),a
  64+ 9643 2C               inc l
  65+ 9644 1C               inc e
  66+ 9645 1A               ld a,(de)
  67+ 9646 AE               xor (hl)
  68+ 9647 77               ld (hl),a
  69+ 9648 13               inc de
  70+ 9649
  71+ 9649 E1               pop hl
  72+ 964A
  73+ 964A 1A               ld a,(de)
  74+ 964B AE               xor (hl)
  75+ 964C 77               ld (hl),a
  76+ 964D 2C               inc l
  77+ 964E 1C               inc e
  78+ 964F 1A               ld a,(de)
  79+ 9650 AE               xor (hl)
  80+ 9651 77               ld (hl),a
  81+ 9652 2C               inc l
  82+ 9653 1C               inc e
  83+ 9654 1A               ld a,(de)
  84+ 9655 AE               xor (hl)
  85+ 9656 77               ld (hl),a
  86+ 9657 13               inc de
  87+ 9658
  88+ 9658 E1               pop hl
  89+ 9659
  90+ 9659 1A               ld a,(de)
  91+ 965A AE               xor (hl)
  92+ 965B 77               ld (hl),a
  93+ 965C 2C               inc l
  94+ 965D 1C               inc e
  95+ 965E 1A               ld a,(de)
  96+ 965F AE               xor (hl)
  97+ 9660 77               ld (hl),a
  98+ 9661 2C               inc l
  99+ 9662 1C               inc e
 100+ 9663 1A               ld a,(de)
 101+ 9664 AE               xor (hl)
 102+ 9665 77               ld (hl),a
 103+ 9666 13               inc de
 104+ 9667
 105+ 9667 E1               pop hl
 106+ 9668
 107+ 9668 1A               ld a,(de)
 108+ 9669 AE               xor (hl)
 109+ 966A 77               ld (hl),a
 110+ 966B 2C               inc l
 111+ 966C 1C               inc e
 112+ 966D 1A               ld a,(de)
 113+ 966E AE               xor (hl)
 114+ 966F 77               ld (hl),a
 115+ 9670 2C               inc l
 116+ 9671 1C               inc e
 117+ 9672 1A               ld a,(de)
 118+ 9673 AE               xor (hl)
 119+ 9674 77               ld (hl),a
 120+ 9675 13               inc de
 121+ 9676
 122+ 9676 E1               pop hl
 123+ 9677
 124+ 9677 1A               ld a,(de)
 125+ 9678 AE               xor (hl)
 126+ 9679 77               ld (hl),a
 127+ 967A 2C               inc l
 128+ 967B 1C               inc e
 129+ 967C 1A               ld a,(de)
 130+ 967D AE               xor (hl)
 131+ 967E 77               ld (hl),a
 132+ 967F 2C               inc l
 133+ 9680 1C               inc e
 134+ 9681 1A               ld a,(de)
 135+ 9682 AE               xor (hl)
 136+ 9683 77               ld (hl),a
 137+ 9684 13               inc de
 138+ 9685
 139+ 9685 E1               pop hl
 140+ 9686
 141+ 9686 1A               ld a,(de)
 142+ 9687 AE               xor (hl)
 143+ 9688 77               ld (hl),a
 144+ 9689 2C               inc l
 145+ 968A 1C               inc e
 146+ 968B 1A               ld a,(de)
 147+ 968C AE               xor (hl)
 148+ 968D 77               ld (hl),a
 149+ 968E 2C               inc l
 150+ 968F 1C               inc e
 151+ 9690 1A               ld a,(de)
 152+ 9691 AE               xor (hl)
 153+ 9692 77               ld (hl),a
 154+ 9693 13               inc de
 155+ 9694
 156+ 9694 E1               pop hl
 157+ 9695
 158+ 9695 1A               ld a,(de)
 159+ 9696 AE               xor (hl)
 160+ 9697 77               ld (hl),a
 161+ 9698 2C               inc l
 162+ 9699 1C               inc e
 163+ 969A 1A               ld a,(de)
 164+ 969B AE               xor (hl)
 165+ 969C 77               ld (hl),a
 166+ 969D 2C               inc l
 167+ 969E 1C               inc e
 168+ 969F 1A               ld a,(de)
 169+ 96A0 AE               xor (hl)
 170+ 96A1 77               ld (hl),a
 171+ 96A2 13               inc de
 172+ 96A3
 173+ 96A3 E1               pop hl
 174+ 96A4
 175+ 96A4 1A               ld a,(de)
 176+ 96A5 AE               xor (hl)
 177+ 96A6 77               ld (hl),a
 178+ 96A7 2C               inc l
 179+ 96A8 1C               inc e
 180+ 96A9 1A               ld a,(de)
 181+ 96AA AE               xor (hl)
 182+ 96AB 77               ld (hl),a
 183+ 96AC 2C               inc l
 184+ 96AD 1C               inc e
 185+ 96AE 1A               ld a,(de)
 186+ 96AF AE               xor (hl)
 187+ 96B0 77               ld (hl),a
 188+ 96B1 13               inc de
 189+ 96B2
 190+ 96B2 E1               pop hl
 191+ 96B3
 192+ 96B3 1A               ld a,(de)
 193+ 96B4 AE               xor (hl)
 194+ 96B5 77               ld (hl),a
 195+ 96B6 2C               inc l
 196+ 96B7 1C               inc e
 197+ 96B8 1A               ld a,(de)
 198+ 96B9 AE               xor (hl)
 199+ 96BA 77               ld (hl),a
 200+ 96BB 2C               inc l
 201+ 96BC 1C               inc e
 202+ 96BD 1A               ld a,(de)
 203+ 96BE AE               xor (hl)
 204+ 96BF 77               ld (hl),a
 205+ 96C0 13               inc de
 206+ 96C1
 207+ 96C1 E1               pop hl
 208+ 96C2
 209+ 96C2 1A               ld a,(de)
 210+ 96C3 AE               xor (hl)
 211+ 96C4 77               ld (hl),a
 212+ 96C5 2C               inc l
 213+ 96C6 1C               inc e
 214+ 96C7 1A               ld a,(de)
 215+ 96C8 AE               xor (hl)
 216+ 96C9 77               ld (hl),a
 217+ 96CA 2C               inc l
 218+ 96CB 1C               inc e
 219+ 96CC 1A               ld a,(de)
 220+ 96CD AE               xor (hl)
 221+ 96CE 77               ld (hl),a
 222+ 96CF 13               inc de
 223+ 96D0
 224+ 96D0 E1               pop hl
 225+ 96D1
 226+ 96D1 1A               ld a,(de)
 227+ 96D2 AE               xor (hl)
 228+ 96D3 77               ld (hl),a
 229+ 96D4 2C               inc l
 230+ 96D5 1C               inc e
 231+ 96D6 1A               ld a,(de)
 232+ 96D7 AE               xor (hl)
 233+ 96D8 77               ld (hl),a
 234+ 96D9 2C               inc l
 235+ 96DA 1C               inc e
 236+ 96DB 1A               ld a,(de)
 237+ 96DC AE               xor (hl)
 238+ 96DD 77               ld (hl),a
 239+ 96DE 13               inc de
 240+ 96DF
 241+ 96DF E1               pop hl
 242+ 96E0
 243+ 96E0 1A               ld a,(de)
 244+ 96E1 AE               xor (hl)
 245+ 96E2 77               ld (hl),a
 246+ 96E3 2C               inc l
 247+ 96E4 1C               inc e
 248+ 96E5 1A               ld a,(de)
 249+ 96E6 AE               xor (hl)
 250+ 96E7 77               ld (hl),a
 251+ 96E8 2C               inc l
 252+ 96E9 1C               inc e
 253+ 96EA 1A               ld a,(de)
 254+ 96EB AE               xor (hl)
 255+ 96EC 77               ld (hl),a
 256+ 96ED 13               inc de
 257+ 96EE
 258+ 96EE E1               pop hl
 259+ 96EF
 260+ 96EF 1A               ld a,(de)
 261+ 96F0 AE               xor (hl)
 262+ 96F1 77               ld (hl),a
 263+ 96F2 2C               inc l
 264+ 96F3 1C               inc e
 265+ 96F4 1A               ld a,(de)
 266+ 96F5 AE               xor (hl)
 267+ 96F6 77               ld (hl),a
 268+ 96F7 2C               inc l
 269+ 96F8 1C               inc e
 270+ 96F9 1A               ld a,(de)
 271+ 96FA AE               xor (hl)
 272+ 96FB 77               ld (hl),a
 273+ 96FC 13               inc de
 274+ 96FD
 275+ 96FD E1               pop hl
 276+ 96FE
 277+ 96FE 1A               ld a,(de)
 278+ 96FF AE               xor (hl)
 279+ 9700 77               ld (hl),a
 280+ 9701 2C               inc l
 281+ 9702 1C               inc e
 282+ 9703 1A               ld a,(de)
 283+ 9704 AE               xor (hl)
 284+ 9705 77               ld (hl),a
 285+ 9706 2C               inc l
 286+ 9707 1C               inc e
 287+ 9708 1A               ld a,(de)
 288+ 9709 AE               xor (hl)
 289+ 970A 77               ld (hl),a
 290+ 970B 13               inc de
 291+ 970C
 292+ 970C E1               pop hl
 293+ 970D
 294+ 970D 1A               ld a,(de)
 295+ 970E AE               xor (hl)
 296+ 970F 77               ld (hl),a
 297+ 9710 2C               inc l
 298+ 9711 1C               inc e
 299+ 9712 1A               ld a,(de)
 300+ 9713 AE               xor (hl)
 301+ 9714 77               ld (hl),a
 302+ 9715 2C               inc l
 303+ 9716 1C               inc e
 304+ 9717 1A               ld a,(de)
 305+ 9718 AE               xor (hl)
 306+ 9719 77               ld (hl),a
 307+ 971A 13               inc de
 308+ 971B
 309+ 971B ED 73 5B 8C      ld (Scanlines_album_SP),sp
 310+ 971F ED 7B 39 8C      ld sp,(Stack)
 311+ 9723 C9               ret
 312+ 9724
 313+ 9724              Pinta_lento
 314+ 9724
 315+ 9724 E1           1 pop hl
 316+ 9725
 317+ 9725 1A               ld a,(de)
 318+ 9726 AE               xor (hl)
 319+ 9727 77               ld (hl),a
 320+ 9728 2C               inc l
 321+ 9729 1C               inc e
 322+ 972A 1A               ld a,(de)
 323+ 972B AE               xor (hl)
 324+ 972C 77               ld (hl),a
 325+ 972D 2C               inc l
 326+ 972E 1C               inc e
 327+ 972F 1A               ld a,(de)
 328+ 9730 AE               xor (hl)
 329+ 9731 77               ld (hl),a
 330+ 9732 13               inc de
 331+ 9733
 332+ 9733 10 EF            djnz 1B
 333+ 9735
 334+ 9735 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 335+ 9739 ED 7B 39 8C      ld sp,(Stack)
 336+ 973D C9               ret
# file closed: Pinta_Sprites.asm
2125  973E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 973E              ; ******************************************************************************************************************************************************************************************
   2+ 973E              ;
   3+ 973E              ; 26/06/23
   4+ 973E              ;
   5+ 973E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 973E
   7+ 973E              Draw
   8+ 973E
   9+ 973E CD E4 99     	call Prepara_draw
  10+ 9741 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9742 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9743 28 05        	jr z,2F
  13+ 9745
  14+ 9745 3A 09 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9748 18 0C        	jr 1F
  16+ 974A
  17+ 974A 2A 07 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 974D 22 FA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9750 CD DC 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9753              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9753
  22+ 9753 CD 83 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9756
  24+ 9756 3A F7 8B     1 ld a,(Ctrl_0)
  25+ 9759 CB 6F        	bit 5,a
  26+ 975B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 975D
  28+ 975D CD 72 97     	call Comprueba_limite_horizontal
  29+ 9760 CD 02 98     	call Comprueba_limite_vertical
  30+ 9763
  31+ 9763              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9763              ; -----------------------
  33+ 9763              ; -----------------------
  34+ 9763              ; -----------------------
  35+ 9763
  36+ 9763 CD 58 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9766 CD 8F 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9769
  39+ 9769 3A F7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 976C CB AF        	res 5,a											; _a ser de utilidad.
  41+ 976E 32 F7 8B     	ld (Ctrl_0),a
  42+ 9771
  43+ 9771 C9           	ret
  44+ 9772
  45+ 9772              ; *******************************************************************************************************************************************************************************************
  46+ 9772              ;	21/01/23
  47+ 9772              ;
  48+ 9772              ; 	Comprueba_limite_horizontal.
  49+ 9772              ;
  50+ 9772              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9772              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9772              ;
  53+ 9772              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9772              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9772              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9772              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9772
  58+ 9772
  59+ 9772
  60+ 9772 3A F7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9775 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9777 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9779 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 977B 32 F7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 977E 18 09            jr 6F
  66+ 9780 CB 5F        1 bit 3,a
  67+ 9782 28 0A            jr z,2F
  68+ 9784 E6 F7            and $f7
  69+ 9786 32 F7 8B         ld (Ctrl_0),a
  70+ 9789 CD DC 98     6 call Inicializacion
  71+ 978C 18 5B            jr 5F
  72+ 978E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 978F
  74+ 978F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 978F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 978F
  77+ 978F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9790 2A 0B 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9793 CD DD 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9796 67           	ld h,a
  81+ 9797 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9798 CD DD 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 979B 67           	ld h,a
  84+ 979C A7           	and a
  85+ 979D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 979F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 97A0 3A 09 8C     	ld a,(Cuad_objeto)
  88+ 97A3 FE 02        	cp 2
  89+ 97A5 38 1E        	jr c,3F
  90+ 97A7 28 1C        	jr z,3F
  91+ 97A9 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 97AA 28 23            jr z,7F
  93+ 97AC 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97AE 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97B0 E1           	pop hl
  96+ 97B1
  97+ 97B1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97B1              ; _para indicar con E="2" en caso necesario.
  99+ 97B1
 100+ 97B1 E5               push hl
 101+ 97B2 C5               push bc
 102+ 97B3 CD DD 94     	call calcula_tercio
 103+ 97B6 FE 01        	cp 1
 104+ 97B8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97BA CD EA 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97BD 28 26            jr z,9F
 107+ 97BF 38 24            jr c,9F
 108+ 97C1 1E 00        11 ld e,0
 109+ 97C3 18 22            jr 8F
 110+ 97C5 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97C6 28 07        	jr z, 7F
 112+ 97C8 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97CA 1E 00         	ld e,0
 114+ 97CC E1           	pop hl
 115+ 97CD 18 04        	jr 4F
 116+ 97CF 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97D1 18 15            jr 10F
 118+ 97D3
 119+ 97D3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97D3              ; _para indicar con E="2" en caso necesario.
 121+ 97D3
 122+ 97D3 E5           4 push hl
 123+ 97D4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97D5 CD DD 94     	call calcula_tercio
 125+ 97D8 FE 01        	cp 1
 126+ 97DA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97DC CD EA 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97DF 28 04            jr z,9F
 129+ 97E1 30 02            jr nc,9F
 130+ 97E3 18 02        	jr 8F
 131+ 97E5 1E 02        9 ld e,2
 132+ 97E7 C1           8 pop bc
 133+ 97E8 E1           10 pop hl
 134+ 97E9 C9           5 ret
 135+ 97EA
 136+ 97EA              ; --------------------
 137+ 97EA              ;
 138+ 97EA              ; 25/08/22
 139+ 97EA
 140+ 97EA CD DD 94     Comprueba_centro call calcula_tercio
 141+ 97ED 67               ld h,a
 142+ 97EE 08           	ex af,af
 143+ 97EF FE 02        	cp 2
 144+ 97F1 38 07        	jr c,1F
 145+ 97F3 28 05        	jr z,1F
 146+ 97F5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97F8 18 03        	jr 2F
 148+ 97FA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97FD 08           2 ex af,af
 150+ 97FE A7               and a
 151+ 97FF ED 42            sbc hl,bc
 152+ 9801 C9               ret
 153+ 9802
 154+ 9802              ; *********************************************************************************************************************************************************************************************
 155+ 9802              ;
 156+ 9802              ;   16/8/22
 157+ 9802              ;
 158+ 9802              ;	Comprueba_limite_vertical
 159+ 9802              ;
 160+ 9802              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9802              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9802              ;
 163+ 9802
 164+ 9802 2A FA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9805 7D           	ld a,l
 166+ 9806 E6 1F        	and $1F
 167+ 9808 57           	ld d,a
 168+ 9809 3A 0D 8C     	ld a,(Limite_vertical)
 169+ 980C BA           	cp d 											; Límite - Posición.
 170+ 980D 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 980E 3A 09 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9811 CB 47        	bit 0,a
 173+ 9813 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9815
 175+ 9815              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9815
 177+ 9815 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9816 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9818
 180+ 9818              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9818              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9818
 183+ 9818 3A EB 8B         ld a,(Coordenada_X)
 184+ 981B 16 0F            ld d,Centro_izquierda
 185+ 981D A7               and a
 186+ 981E 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 981F 28 1E            jr z,3F
 188+ 9821 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9823              ;                                                    ; _salimos sin modificar nada.
 190+ 9823 18 0E            jr 2F
 191+ 9825 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9826 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9828
 194+ 9828              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9828              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9828
 197+ 9828 3A EB 8B         ld a,(Coordenada_X)
 198+ 982B 16 10            ld d,Centro_derecha
 199+ 982D A7               and a
 200+ 982E 92               sub d
 201+ 982F 28 0E            jr z,3F
 202+ 9831 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9833              ;                                                    ; _salimos sin modificar nada.
 204+ 9833 CB 43        2 bit 0,e
 205+ 9835 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9837 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9838 CD CC 98         call Modificaccionne
 208+ 983B C1           	pop bc
 209+ 983C CD DC 98         call Inicializacion
 210+ 983F C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9840
 212+ 9840              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9840
 214+ 9840 C5           4 push bc
 215+ 9841 01 F9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9844 0A           	ld a,(bc)
 217+ 9845 3D           	dec a
 218+ 9846 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9847 7D           	ld a,l
 220+ 9848 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9849 CB 47        	bit 0,a
 222+ 984B 28 03        	jr z,5F
 223+ 984D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 984E 18 2E        	jr 7F
 225+ 9850
 226+ 9850              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9850
 228+ 9850 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9851 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9852 3A F7 8B     	ld a,(Ctrl_0)
 231+ 9855 CB 4F        	bit 1,a
 232+ 9857 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9859 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 985A
 235+ 985A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 985A
 237+ 985A 1C               inc e
 238+ 985B 1D               dec e
 239+ 985C 20 07            jr nz,12F
 240+ 985E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 985F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9860 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9863 18 44        13 jr 9F
 244+ 9865 CB 43        12 bit 0,e
 245+ 9867 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9869              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9869 C1           	pop bc
 248+ 986A 18 D3        	jr 3B
 249+ 986C 80           14 add b
 250+ 986D 6F               ld l,a
 251+ 986E 22 FA 8B     	ld (Posicion_actual),hl
 252+ 9871 CD CC 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9874 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9876 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9878 32 F7 8B         ld (Ctrl_0),a
 256+ 987B F1           	pop af
 257+ 987C 18 2B        	jr 9F
 258+ 987E
 259+ 987E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 987E
 261+ 987E F5           7 push af
 262+ 987F 3A F7 8B     	ld a,(Ctrl_0)
 263+ 9882 CB 47        	bit 0,a
 264+ 9884 20 1D        	jr nz,8F
 265+ 9886 F1           	pop af
 266+ 9887
 267+ 9887              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9887
 269+ 9887 1C           	inc e
 270+ 9888 1D               dec e
 271+ 9889 20 07            jr nz,10F
 272+ 988B 90           	sub b
 273+ 988C 6F               ld l,a
 274+ 988D 22 FA 8B     	ld (Posicion_actual),hl
 275+ 9890 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9892              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9892 CB 43        10 bit 0,e
 278+ 9894 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9896              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9896 C1           	pop bc
 281+ 9897 18 A6        	jr 3B
 282+ 9899 90           16 sub b
 283+ 989A 6F               ld l,a
 284+ 989B 22 FA 8B     	ld (Posicion_actual),hl
 285+ 989E CD CC 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 98A1 18 06            jr 9F
 287+ 98A3 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 98A5 32 F7 8B         ld (Ctrl_0),a
 289+ 98A8 F1           	pop af
 290+ 98A9 C1           9 pop bc
 291+ 98AA 1E 00        	ld e,0
 292+ 98AC CD DC 98         call Inicializacion
 293+ 98AF F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98B0 08           	ex af,af
 295+ 98B1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98B2 18 8B            jr 3B
 297+ 98B4
 298+ 98B4              ; --------------------
 299+ 98B4
 300+ 98B4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98B6 CD FF 99     1 call PreviousScan
 302+ 98B9 10 FB            djnz 1B
 303+ 98BB 22 FA 8B     	ld (Posicion_actual),hl
 304+ 98BE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98BF C9           	ret
 306+ 98C0
 307+ 98C0              ; --------------------
 308+ 98C0
 309+ 98C0 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98C2 CD F0 99     1 call NextScan
 311+ 98C5 10 FB            djnz 1B
 312+ 98C7 22 FA 8B     	ld (Posicion_actual),hl
 313+ 98CA AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98CB C9           	ret
 315+ 98CC
 316+ 98CC              ; --------------------
 317+ 98CC              ;
 318+ 98CC              ;	22/01/23
 319+ 98CC              ;
 320+ 98CC              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98CC              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98CC              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98CC
 324+ 98CC
 325+ 98CC              Modificaccionne
 326+ 98CC
 327+ 98CC 3A 09 8C     	ld a,(Cuad_objeto)
 328+ 98CF FE 02        	cp 2
 329+ 98D1 CC B4 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98D4 DC B4 98         call c,Modifica_Pos_actual
 331+ 98D7 C8           	ret z
 332+ 98D8 CD C0 98         call Modifica_Pos_actual2
 333+ 98DB C9               ret
 334+ 98DC
 335+ 98DC              ; *************************************************************************************************************************************************************************************************
 336+ 98DC              ;
 337+ 98DC              ;	13/8/22
 338+ 98DC              ;
 339+ 98DC              ;	Inicializacion
 340+ 98DC              ;
 341+ 98DC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98DC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98DC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98DC              ;
 345+ 98DC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98DC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98DC              ;	_ desaparece/aparece.
 348+ 98DC
 349+ 98DC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98DC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98DC              ;
 352+ 98DC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98DC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98DC              ; 		   [E] ="0"
 355+ 98DC
 356+ 98DC              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98DC
 358+ 98DC CD DD 94     Inicializacion call calcula_tercio
 359+ 98DF 28 36        	jr z,primit
 360+ 98E1 E6 02        	and 2
 361+ 98E3 20 07        	jr nz,segmit
 362+ 98E5 7D           	ld a,l
 363+ 98E6 FE 7F        	cp $7f
 364+ 98E8 38 2D        	jr c,primit
 365+ 98EA 28 2B        	jr z,primit
 366+ 98EC CD 52 99     segmit call column
 367+ 98EF 38 13        	jr c,tercuad
 368+ 98F1 3E 04        cuarcuad ld a,4
 369+ 98F3 32 09 8C     	ld (Cuad_objeto),a
 370+ 98F6 21 20 48     	ld hl,$4820
 371+ 98F9 22 0B 8C     	ld (Limite_horizontal),hl
 372+ 98FC 21 0D 8C     	ld hl,Limite_vertical
 373+ 98FF 36 0D        	ld (hl),$0d
 374+ 9901 08           	ex af,af
 375+ 9902 18 3C        	jr 1F
 376+ 9904              tercuad
 377+ 9904 3E 03        	ld a,3
 378+ 9906 32 09 8C     	ld (Cuad_objeto),a
 379+ 9909 21 20 48     	ld hl,$4820
 380+ 990C 22 0B 8C     	ld (Limite_horizontal),hl
 381+ 990F 21 0D 8C     	ld hl,Limite_vertical
 382+ 9912 36 12        	ld (hl),$12
 383+ 9914 08           	ex af,af
 384+ 9915 18 29        	jr 1F
 385+ 9917 CD 52 99     primit call column
 386+ 991A 38 13        	jr c, primcuad
 387+ 991C              segcuad
 388+ 991C 3E 02        	ld a,2
 389+ 991E 32 09 8C     	ld (Cuad_objeto),a
 390+ 9921 21 C0 4F     	ld hl,$4fc0
 391+ 9924 22 0B 8C     	ld (Limite_horizontal),hl
 392+ 9927 21 0D 8C     	ld hl,Limite_vertical
 393+ 992A 36 0D        	ld (hl),$0d
 394+ 992C 08           	ex af,af
 395+ 992D 18 11        	jr 1F
 396+ 992F              primcuad
 397+ 992F 3E 01        	ld a,1
 398+ 9931 32 09 8C     	ld (Cuad_objeto),a
 399+ 9934 21 C0 4F     	ld hl,$4fc0
 400+ 9937 22 0B 8C     	ld (Limite_horizontal),hl
 401+ 993A 21 0D 8C     	ld hl,Limite_vertical
 402+ 993D 36 12        	ld (hl),$12
 403+ 993F 08           	ex af,af
 404+ 9940
 405+ 9940 C5           1 push bc
 406+ 9941 E5           	push hl
 407+ 9942 D5           	push de
 408+ 9943
 409+ 9943 2A FA 8B     	ld hl,(Posicion_actual)
 410+ 9946 CD FB 94     	call Genera_coordenadas
 411+ 9949
 412+ 9949 D1           	pop de
 413+ 994A E1           	pop hl
 414+ 994B C1           	pop bc
 415+ 994C
 416+ 994C 21 F7 8B     	ld hl,Ctrl_0
 417+ 994F CB EE        	set 5,(hl)
 418+ 9951 C9           	ret
 419+ 9952
 420+ 9952              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9952
 422+ 9952              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9952              ;
 424+ 9952              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9952
 426+ 9952 7D           column ld a,l
 427+ 9953 E6 1F        	and $1f
 428+ 9955 FE 10         	cp $10
 429+ 9957 C9            	ret
 430+ 9958
 431+ 9958              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9958              ;
 433+ 9958              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9958              ;
 435+ 9958              ; 14/12/22
 436+ 9958              ;
 437+ 9958              ;	Modifica: A y BC.
 438+ 9958
 439+ 9958 3A 09 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 995B E6 01        	and 1
 441+ 995D 28 17        	jr z,1F
 442+ 995F
 443+ 995F              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 995F
 445+ 995F 3A EB 8B     	ld a,(Coordenada_X)
 446+ 9962 47           	ld b,a
 447+ 9963 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9964 79           	ld a,c
 449+ 9965 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9966 38 08        	jr c,2F
 451+ 9968 47           	ld b,a
 452+ 9969 79           	ld a,c
 453+ 996A 90           	sub b
 454+ 996B 32 0A 8C     	ld (Columnas),a
 455+ 996E 18 1B        	jr 4F
 456+ 9970 79           2 ld a,c
 457+ 9971 32 0A 8C     	ld (Columnas),a
 458+ 9974 18 15        	jr 4F
 459+ 9976
 460+ 9976              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9976
 462+ 9976 3A EB 8B     1 ld a,(Coordenada_X)
 463+ 9979 81           	add c
 464+ 997A 3D           	dec a
 465+ 997B D6 1F        	sub $1f
 466+ 997D 38 08        	jr c,3F
 467+ 997F 47           	ld b,a
 468+ 9980 79           	ld a,c
 469+ 9981 90           	sub b
 470+ 9982 32 0A 8C     	ld (Columnas),a
 471+ 9985 18 04        	jr 4F
 472+ 9987 79           3 ld a,c
 473+ 9988 32 0A 8C     	ld (Columnas),a
 474+ 998B D9           4 exx
 475+ 998C 4F           	ld c,a
 476+ 998D D9           	exx
 477+ 998E C9            ret
 478+ 998F
 479+ 998F              ; --------------------------------------------------------------------------------------------------------------------
 480+ 998F              ;
 481+ 998F              ;   19/7/23
 482+ 998F              ;
 483+ 998F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 998F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 998F              ;
 486+ 998F              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 998F              ;			HL e IY Contienen (Puntero_objeto).
 488+ 998F              ;
 489+ 998F              ;	DESTRUYE: HL,B Y A.
 490+ 998F
 491+ 998F 3A 09 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9992 FE 02        	cp 2
 493+ 9994 38 18        	jr c,1F
 494+ 9996 28 16        	jr z,1F
 495+ 9998 E6 01        	and 1
 496+ 999A 28 0D        	jr z,3F
 497+ 999C
 498+ 999C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 999C
 500+ 999C CD D8 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 999F
 502+ 999F 7D           9 ld a,l
 503+ 99A0 E6 1F        	and $1f
 504+ 99A2 28 2A        	jr z,7F
 505+ 99A4 2B           	dec hl
 506+ 99A5 10 F8        	djnz 9B
 507+ 99A7 18 25        	jr 7F
 508+ 99A9
 509+ 99A9              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 99A9
 511+ 99A9 2A FA 8B     3 ld hl,(Posicion_actual)
 512+ 99AC 18 20        	jr 7F
 513+ 99AE
 514+ 99AE 28 14        1 jr z,2F
 515+ 99B0
 516+ 99B0              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99B0
 518+ 99B0 CD D8 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99B3
 520+ 99B3 7D           4 ld a,l
 521+ 99B4 E6 1F        	and $1f
 522+ 99B6 28 03        	jr z,6F
 523+ 99B8 2B           	dec hl
 524+ 99B9 10 F8        	djnz 4B
 525+ 99BB 06 0F        6 ld b,15
 526+ 99BD CD FF 99     5 call PreviousScan
 527+ 99C0 10 FB        	djnz 5B
 528+ 99C2 18 0A        	jr 7F
 529+ 99C4
 530+ 99C4              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99C4
 532+ 99C4 CD D8 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99C7 06 0F        	ld b,15
 534+ 99C9 CD FF 99     8 call PreviousScan
 535+ 99CC 10 FB        	djnz 8B
 536+ 99CE
 537+ 99CE E5           7 push hl
 538+ 99CF DD E1        	pop ix
 539+ 99D1
 540+ 99D1 2A FC 8B     	ld hl,(Puntero_objeto)
 541+ 99D4 E5           	push hl
 542+ 99D5 FD E1        	pop iy
 543+ 99D7
 544+ 99D7 C9           	ret
 545+ 99D8
 546+ 99D8              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99D8              ;
 548+ 99D8              ;	2/1/23
 549+ 99D8              ;
 550+ 99D8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99D8              ;
 552+ 99D8              ;	Tras esta rutina tenemos:
 553+ 99D8              ;
 554+ 99D8              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99D8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99D8              ;
 557+ 99D8              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99D8
 559+ 99D8 2A FA 8B     Operandos ld hl,(Posicion_actual)
 560+ 99DB 3A 0A 8C     	ld a,(Columnas)
 561+ 99DE 3D           	dec a
 562+ 99DF 20 01        	jr nz,1F
 563+ 99E1 3C           	inc a
 564+ 99E2 47           1 ld b,a
 565+ 99E3 C9           	ret
 566+ 99E4
 567+ 99E4              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99E4              ;
 569+ 99E4              ;	Prepara_draw
 570+ 99E4              ;
 571+ 99E4              ;	Es una rutina de carga.
 572+ 99E4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99E4              ;
 574+ 99E4              ;	FUNCIONAMIENTO:
 575+ 99E4              ;
 576+ 99E4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99E4              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99E4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99E4              ;
 580+ 99E4              ;	DESTRUYE:
 581+ 99E4              ;
 582+ 99E4              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99E4
 584+ 99E4 21 F8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99E7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99E8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99E9 4E           	ld c,(hl)
 588+ 99EA 2A FA 8B     	ld hl,(Posicion_actual)
 589+ 99ED 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99EF C9           	ret
 591+ 99F0
 592+ 99F0              ;----------------------------------------------------------------------------------------------------------------
 593+ 99F0              ;
 594+ 99F0              ;	5/08/22
 595+ 99F0              ;
 596+ 99F0              ;   NextScan.
 597+ 99F0              ;
 598+ 99F0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99F0              ;
 600+ 99F0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99F0              ;
 602+ 99F0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99F0              ;
 604+ 99F0              ;       DESTRUIDOS: AF y HL !!!
 605+ 99F0              ;
 606+ 99F0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99F0              ;
 608+ 99F0
 609+ 99F0 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99F1 7C               ld a,h
 611+ 99F2 E6 07            and 7
 612+ 99F4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99F5
 614+ 99F5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99F6 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99F8 6F               ld l,a
 617+ 99F9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99FA
 619+ 99FA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99FB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99FD 67               ld h,a
 622+ 99FE C9               ret
 623+ 99FF
 624+ 99FF              ;----------------------------------------------------------------------------------------------------------------
 625+ 99FF              ;
 626+ 99FF              ;	5/08/22
 627+ 99FF              ;
 628+ 99FF              ;   PreviousScan.
 629+ 99FF              ;
 630+ 99FF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99FF              ;
 632+ 99FF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99FF              ;
 634+ 99FF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99FF              ;
 636+ 99FF              ;       DESTRUIDOS: AF y HL !!!
 637+ 99FF              ;
 638+ 99FF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99FF              ;
 640+ 99FF
 641+ 99FF 7C           PreviousScan ld a,h
 642+ 9A00 25               dec h               ; Dec H.
 643+ 9A01 E6 07            and 7
 644+ 9A03 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A04
 646+ 9A04 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A05 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A07 6F               ld l,a
 649+ 9A08 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A09
 651+ 9A09 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A0A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A0C 67               ld h,a
 654+ 9A0D C9               ret
 655+ 9A0E
 656+ 9A0E
 657+ 9A0E
 658+ 9A0E
 659+ 9A0E
 660+ 9A0E
 661+ 9A0E
 662+ 9A0E
 663+ 9A0E
 664+ 9A0E
 665+ 9A0E
 666+ 9A0E
# file closed: Draw_XOR.asm
2126  9A0E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A0E
   2+ 9A0E              ; ******************************************************************************************************************************************************************************************
   3+ 9A0E              ;
   4+ 9A0E              ;   20/05/23
   5+ 9A0E              ;
   6+ 9A0E              ;	Recompone_posicion_inicio
   7+ 9A0E              ;
   8+ 9A0E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A0E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A0E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A0E              ;	_ a una u otra rutina.
  12+ 9A0E
  13+ 9A0E              Recompone_posicion_inicio
  14+ 9A0E
  15+ 9A0E 2A 07 8C     	ld hl,(Posicion_inicio)
  16+ 9A11 7D           	ld a,l
  17+ 9A12 E6 1F        	and $1f
  18+ 9A14 28 16        	jr z,1F
  19+ 9A16
  20+ 9A16 FE 1F        	cp $1f
  21+ 9A18 28 0D        	jr z,3F
  22+ 9A1A
  23+ 9A1A 21 F6 8B     	ld hl,Ctrl_2
  24+ 9A1D CB C6        	set 0,(hl)
  25+ 9A1F 2A FC 8B     	ld hl,(Puntero_objeto)
  26+ 9A22 22 28 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A25 18 08        	jr 2F
  28+ 9A27
  29+ 9A27 CD D5 9B     3 call Mov_left
  30+ 9A2A 18 03        	jr 2F
  31+ 9A2C
  32+ 9A2C CD B2 9A     1 call Mov_right
  33+ 9A2F 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A32 22 FC 8B     	ld (Puntero_objeto),hl
  35+ 9A35 C9           	ret
  36+ 9A36
  37+ 9A36              ; ******************************************************************************************************************************************************************************************
  38+ 9A36              ;
  39+ 9A36              ;   27/05/23
  40+ 9A36              ;
  41+ 9A36              ;	Mov_down
  42+ 9A36              ;
  43+ 9A36              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A36              ;
  45+ 9A36              ;
  46+ 9A36              Mov_down
  47+ 9A36
  48+ 9A36 CD A0 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A39              ;																	; _ repone (Puntero_objeto).
  50+ 9A39 21 F7 8B     	ld hl,Ctrl_0
  51+ 9A3C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A3E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A3E              ; 																	; _ en el caso de que no lo haya.
  54+ 9A3E 3A 12 8C     	ld a,(Vel_down)
  55+ 9A41 47           	ld b,a
  56+ 9A42 2A FA 8B         ld hl,(Posicion_actual)
  57+ 9A45 CD DD 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A48 E6 02        	and 2
  59+ 9A4A 28 17        	jr z,1F
  60+ 9A4C
  61+ 9A4C              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A4C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A4C
  64+ 9A4C 7C           	ld a,h
  65+ 9A4D FE 57        	cp $57
  66+ 9A4F 20 12        	jr nz,1F
  67+ 9A51
  68+ 9A51 7D           	ld a,l
  69+ 9A52 C6 20        	add $20
  70+ 9A54 30 0D        	jr nc,1F
  71+ 9A56
  72+ 9A56              ; ------------------------------
  73+ 9A56              ;
  74+ 9A56              ;	12/01/24
  75+ 9A56
  76+ 9A56              ;	call Reaparece_arriba
  77+ 9A56 CD 62 9D     	call Reinicio
  78+ 9A59
  79+ 9A59              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A59
  81+ 9A59 3A 61 8C     	ld a,(Ctrl_3)
  82+ 9A5C CB CF        	set 1,a
  83+ 9A5E 32 61 8C     	ld (Ctrl_3),a
  84+ 9A61
  85+ 9A61 18 08        	jr 3F
  86+ 9A63              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A63              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A63              ; ------------------------------
  89+ 9A63
  90+ 9A63 CD F0 99     1 call NextScan
  91+ 9A66 22 FA 8B     	ld (Posicion_actual),hl
  92+ 9A69 10 DA            djnz 2B
  93+ 9A6B CD FB 94     3 call Genera_coordenadas
  94+ 9A6E C9           	ret
  95+ 9A6F
  96+ 9A6F              ; ******************************************************************************************************************************************************************************************
  97+ 9A6F              ;
  98+ 9A6F              ;   27/05/23
  99+ 9A6F              ;
 100+ 9A6F              ;	Mov_up
 101+ 9A6F              ;
 102+ 9A6F              ; 	Mueve el Sprite hacia arriba.
 103+ 9A6F              ;
 104+ 9A6F              ;
 105+ 9A6F              Mov_up
 106+ 9A6F
 107+ 9A6F CD A0 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A72              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A72 21 F7 8B     	ld hl,Ctrl_0
 110+ 9A75 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A77              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A77              ; 																		; _ en el caso de que no lo haya.
 113+ 9A77 3A 11 8C     	ld a,(Vel_up)
 114+ 9A7A 47           	ld b,a
 115+ 9A7B 2A FA 8B     	ld hl,(Posicion_actual)
 116+ 9A7E CD DD 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A81 A7           	and a
 118+ 9A82 20 10        	jr nz,1F
 119+ 9A84
 120+ 9A84              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A84              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A84
 123+ 9A84 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A85 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A87 20 0B            jr nz,1F
 126+ 9A89 7D               ld a,l
 127+ 9A8A D6 20            sub $20
 128+ 9A8C 30 06            jr nc,1F
 129+ 9A8E 25               dec h
 130+ 9A8F
 131+ 9A8F              ; -----------------------------
 132+ 9A8F CD 43 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A92              ;	call Reinicio
 134+ 9A92              ; -----------------------------
 135+ 9A92
 136+ 9A92 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A94 CD FF 99     1 call PreviousScan
 138+ 9A97 22 FA 8B     	ld (Posicion_actual),hl
 139+ 9A9A 10 E2            djnz 3B
 140+ 9A9C CD FB 94     2 call Genera_coordenadas
 141+ 9A9F C9           	ret
 142+ 9AA0
 143+ 9AA0              ; -----------------------------
 144+ 9AA0              ;
 145+ 9AA0              ;	27/5/23
 146+ 9AA0              ;
 147+ 9AA0              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9AA0              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9AA0              ;
 150+ 9AA0              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9AA0              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9AA0              ;
 153+ 9AA0              ;	Modifica: A y (Puntero_objeto).
 154+ 9AA0
 155+ 9AA0 3A F6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9AA3 CB 47        	bit 0,a
 157+ 9AA5 C8           	ret z
 158+ 9AA6 CB 87        	res 0,a
 159+ 9AA8 32 F6 8B     	ld (Ctrl_2),a
 160+ 9AAB 2A 28 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9AAE 22 FC 8B     	ld (Puntero_objeto),hl
 162+ 9AB1 C9           	ret
 163+ 9AB2
 164+ 9AB2              ; ******************************************************************************************************************************************************************************************
 165+ 9AB2              ;
 166+ 9AB2              ;	19/10/22
 167+ 9AB2              ;
 168+ 9AB2              ;	Mov_right.
 169+ 9AB2              ;
 170+ 9AB2              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AB2              ;
 172+ 9AB2
 173+ 9AB2 3A F7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AB5 CB 77        	bit 6,a
 175+ 9AB7 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AB9
 177+ 9AB9 CD F1 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9ABC C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9ABD
 180+ 9ABD 21 F7 8B     	ld hl,Ctrl_0
 181+ 9AC0 CB E6        	set 4,(hl)
 182+ 9AC2 18 52        	jr 8F
 183+ 9AC4
 184+ 9AC4 21 F7 8B     10 ld hl,Ctrl_0
 185+ 9AC7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AC9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AC9              ; 																	; _ en el caso de que no lo haya.
 188+ 9AC9 3A EB 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9ACC FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9ACE 20 46        	jr nz,8F
 191+ 9AD0
 192+ 9AD0 3A FE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AD3 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AD4 28 40        	jr z,8F
 195+ 9AD6
 196+ 9AD6              ; ---------- ---------- ----------
 197+ 9AD6              ;
 198+ 9AD6              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AD6
 200+ 9AD6 3A 10 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AD9 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9ADB 28 11        	jr z,1F
 203+ 9ADD 38 06        	jr c,6F
 204+ 9ADF FE 04        	cp 4
 205+ 9AE1 28 14        	jr z,7F
 206+ 9AE3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AE5
 208+ 9AE5              ; ---------- ---------- ----------
 209+ 9AE5              ;
 210+ 9AE5              ; Perfiles de velocidad
 211+ 9AE5              ;
 212+ 9AE5
 213+ 9AE5 3A FE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AE8 FE FE        	cp $fe
 215+ 9AEA 20 2A        	jr nz,8F
 216+ 9AEC 18 10        	jr 3F
 217+ 9AEE 3A FE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AF1 FE FD        	cp $fd
 219+ 9AF3 20 21        	jr nz,8F
 220+ 9AF5 18 07        	jr 3F
 221+ 9AF7 3A FE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AFA FE FB        	cp $fb
 223+ 9AFC 20 18        	jr nz,8F
 224+ 9AFE
 225+ 9AFE              ; ---------- ---------- ----------
 226+ 9AFE
 227+ 9AFE              3
 228+ 9AFE CD 31 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B01              ;	call Reinicio
 230+ 9B01
 231+ 9B01              ; ---------- ---------- ----------
 232+ 9B01              ;
 233+ 9B01              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B01
 235+ 9B01 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B03 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B04 CD 1D 9B     	call DESPLZ_DER
 238+ 9B07 C1           	pop bc
 239+ 9B08 10 F9        	djnz 5B
 240+ 9B0A 2A FA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B0D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B0E 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9B11 CD FB 94     	call Genera_coordenadas
 244+ 9B14 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B16
 246+ 9B16              ; ---------- ---------- ----------
 247+ 9B16
 248+ 9B16 2A FA 8B     8 ld hl,(Posicion_actual)
 249+ 9B19 CD 1D 9B     	call DESPLZ_DER
 250+ 9B1C C9           2 ret
 251+ 9B1D
 252+ 9B1D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B1D              ;
 254+ 9B1D              ;	22/9/22
 255+ 9B1D              ;
 256+ 9B1D
 257+ 9B1D CD 2C 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B20 CD 78 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B23 CD A1 9B         call Ciclo_completo
 260+ 9B26 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B29 CB FE        	set 7,(hl)
 262+ 9B2B C9           	ret
 263+ 9B2C
 264+ 9B2C              ; ******************************************************************************************************************************************************************************************
 265+ 9B2C              ;	15/02/23
 266+ 9B2C              ;
 267+ 9B2C
 268+ 9B2C 3A 10 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B2F 47           	ld b,a
 270+ 9B30 2A 03 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B33 23           1 inc hl
 272+ 9B34 23           	inc hl
 273+ 9B35 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B37 22 03 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B3A CD 20 91     	call Extrae_address
 276+ 9B3D 22 FC 8B     	ld (Puntero_objeto),hl
 277+ 9B40
 278+ 9B40              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B40
 280+ 9B40              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B40              ; Cuántos movimientos hemos hecho ??
 282+ 9B40              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B40
 284+ 9B40 2A FF 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B43 EB           	ex de,hl
 286+ 9B44 A7           	and a
 287+ 9B45 ED 52        	sbc hl,de
 288+ 9B47 CB 3D        	srl l
 289+ 9B49 3E 08        6 ld a,8
 290+ 9B4B 95           	sub l
 291+ 9B4C 30 1E        	jr nc,3F
 292+ 9B4E
 293+ 9B4E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B4E              ; B="0".
 295+ 9B4E
 296+ 9B4E 04           4 inc b
 297+ 9B4F 3C           	inc a
 298+ 9B50 20 FC        	jr nz,4B
 299+ 9B52 78           	ld a,b
 300+ 9B53 08           	ex af,af
 301+ 9B54 2A FF 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B57 23           5 inc hl
 303+ 9B58 23           	inc hl
 304+ 9B59 10 FC        	djnz 5B
 305+ 9B5B 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B5E CD 20 91     	call Extrae_address
 307+ 9B61 22 FC 8B     	ld (Puntero_objeto),hl
 308+ 9B64
 309+ 9B64              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B64              ; _(Posicion_actual).
 311+ 9B64
 312+ 9B64 21 FA 8B     	ld hl,Posicion_actual
 313+ 9B67 34           	inc (hl)
 314+ 9B68 08               ex af,af
 315+ 9B69 6F           	ld l,a
 316+ 9B6A 18 DD        	jr 6B
 317+ 9B6C
 318+ 9B6C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B6C
 320+ 9B6C 47           3 ld b,a
 321+ 9B6D 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B70 23           2 inc hl
 323+ 9B71 23           	inc hl
 324+ 9B72 10 FC        	djnz 2B
 325+ 9B74 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B77 C9           8 ret
 327+ 9B78
 328+ 9B78              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B78              ;
 330+ 9B78              ;	24/7/22
 331+ 9B78              ;
 332+ 9B78              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B78              ;
 334+ 9B78              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B78              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B78              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B78
 338+ 9B78 3A FE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B7B A7           	and a
 340+ 9B7C 20 1F        	jr nz,1F
 341+ 9B7E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B80 32 FE 8B         ld (CTRL_DESPLZ),a
 343+ 9B83
 344+ 9B83 21 F9 8B     	ld hl,Columns
 345+ 9B86 34           	inc (hl)
 346+ 9B87 3A 09 8C     	ld a,(Cuad_objeto)
 347+ 9B8A E6 01        	and 1
 348+ 9B8C 28 0F        	jr z,1F
 349+ 9B8E 2A FA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B91 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B92 22 FA 8B     	ld (Posicion_actual),hl
 352+ 9B95 CD FB 94     	call Genera_coordenadas
 353+ 9B98 CD FD 9C     	call Inc_CTRL_DESPLZ
 354+ 9B9B 18 03        	jr 2F
 355+ 9B9D CD FD 9C     1 call Inc_CTRL_DESPLZ
 356+ 9BA0 C9           2 ret
 357+ 9BA1
 358+ 9BA1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9BA1              ;
 360+ 9BA1              ;	24/7/22
 361+ 9BA1              ;
 362+ 9BA1              ;	Ciclo_completo.
 363+ 9BA1              ;
 364+ 9BA1              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9BA1              ;
 366+ 9BA1              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9BA1              ; 	Decrementamos (Columns).
 368+ 9BA1              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9BA1              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9BA1
 371+ 9BA1
 372+ 9BA1 3A FE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9BA4 FE FF        	cp $ff
 374+ 9BA6 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9BA8 E6 F0        	and $f0
 376+ 9BAA 20 28        	jr nz,3F
 377+ 9BAC
 378+ 9BAC              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9BAC
 380+ 9BAC 3A FE 8B     	ld a,(CTRL_DESPLZ)
 381+ 9BAF 47           	ld b,a
 382+ 9BB0 3E F8        	ld a,$f8
 383+ 9BB2 80           	add b
 384+ 9BB3 32 FE 8B     	ld (CTRL_DESPLZ),a
 385+ 9BB6 18 1C        	jr 3F
 386+ 9BB8 21 F9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BBB 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BBC AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BBD 32 FE 8B     	ld (CTRL_DESPLZ),a
 390+ 9BC0 3A 09 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BC3 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BC5 20 0A        	jr nz,2F
 393+ 9BC7 2A FA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BCA 23           	inc hl
 395+ 9BCB 22 FA 8B     	ld (Posicion_actual),hl
 396+ 9BCE CD FB 94     	call Genera_coordenadas
 397+ 9BD1
 398+ 9BD1              ; Inicia el puntero de Sprite.
 399+ 9BD1
 400+ 9BD1 CD 35 91     2 call Inicia_puntero_objeto_der
 401+ 9BD4 C9           3 ret
 402+ 9BD5
 403+ 9BD5              ; ******************************************************************************************************************************************************************************************
 404+ 9BD5              ;
 405+ 9BD5              ;	15/02/23
 406+ 9BD5              ;
 407+ 9BD5              ;	Mov_left.
 408+ 9BD5              ;
 409+ 9BD5              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BD5              ;
 411+ 9BD5              Mov_left
 412+ 9BD5
 413+ 9BD5 21 F7 8B     	ld hl,Ctrl_0
 414+ 9BD8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BDA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BDA              ; 																	; _ en el caso de que no lo haya.
 417+ 9BDA 3A F7 8B     	ld a,(Ctrl_0)
 418+ 9BDD CB 77        	bit 6,a
 419+ 9BDF 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BE1
 421+ 9BE1 CD F7 9C     	call Stop_Amadeus_left
 422+ 9BE4 C8           	ret z
 423+ 9BE5 20 4A        	jr nz,8F
 424+ 9BE7
 425+ 9BE7 3A EB 8B     11 ld a,(Coordenada_X)
 426+ 9BEA A7           	and a
 427+ 9BEB 20 44        	jr nz,8F
 428+ 9BED
 429+ 9BED 3A FE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BF0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BF1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BF3
 433+ 9BF3              ; ---------- ---------- ----------
 434+ 9BF3
 435+ 9BF3 3A 0F 8C     	ld a,(Vel_left)
 436+ 9BF6 FE 02        	cp 2
 437+ 9BF8 28 0F        	jr z,1F
 438+ 9BFA 38 04        	jr c,6F
 439+ 9BFC FE 04        	cp 4
 440+ 9BFE 28 12        	jr z,7F
 441+ 9C00
 442+ 9C00              ; ---------- ---------- ----------
 443+ 9C00
 444+ 9C00 3A FE 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9C03 FE F8        	cp $f8
 446+ 9C05 20 2A        	jr nz,8F
 447+ 9C07 18 10        	jr 4F
 448+ 9C09 3A FE 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9C0C FE F9        	cp $f9
 450+ 9C0E 20 21        	jr nz,8F
 451+ 9C10 18 07        	jr 4F
 452+ 9C12 3A FE 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9C15 FE FB        	cp $fb
 454+ 9C17 20 18        	jr nz,8F
 455+ 9C19
 456+ 9C19              ; ---------- ---------- ----------
 457+ 9C19
 458+ 9C19              4
 459+ 9C19 CD 1F 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C1C              ;	call Reinicio
 461+ 9C1C
 462+ 9C1C              ; ---------- ---------- ----------
 463+ 9C1C
 464+ 9C1C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C1E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C1F
 467+ 9C1F              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C1F              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C1F
 470+ 9C1F CD 38 9C     	call DESPLZ_IZQ
 471+ 9C22 C1           	pop bc
 472+ 9C23 10 F9        	djnz 5B
 473+ 9C25 2A FA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C28 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C29 22 FA 8B     	ld (Posicion_actual),hl
 476+ 9C2C CD FB 94     	call Genera_coordenadas
 477+ 9C2F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C31
 479+ 9C31              ; ---------- ---------- ----------
 480+ 9C31
 481+ 9C31              ; Movemos, no hay recolocación.
 482+ 9C31
 483+ 9C31 2A FA 8B     8 ld hl,(Posicion_actual)
 484+ 9C34 CD 38 9C     	call DESPLZ_IZQ
 485+ 9C37 C9           2 ret
 486+ 9C38
 487+ 9C38              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C38              ;
 489+ 9C38              ;	22/9/22
 490+ 9C38
 491+ 9C38              DESPLZ_IZQ
 492+ 9C38
 493+ 9C38 CD 47 9C     	call Desplaza_izquierda
 494+ 9C3B CD 93 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C3E CD BB 9C     	call Ciclo_completo_2
 496+ 9C41 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C44 CB BE        	res 7,(hl)
 498+ 9C46 C9           	ret
 499+ 9C47
 500+ 9C47              Desplaza_izquierda
 501+ 9C47
 502+ 9C47 3A 0F 8C     	ld a,(Vel_left)
 503+ 9C4A 47           	ld b,a
 504+ 9C4B 2A 05 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C4E 23           1 inc hl
 506+ 9C4F 23           	inc hl
 507+ 9C50 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C52 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C55 CD 20 91     	call Extrae_address
 510+ 9C58 22 FC 8B     	ld (Puntero_objeto),hl
 511+ 9C5B
 512+ 9C5B              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C5B
 514+ 9C5B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C5B              ; Cuántos movimientos hemos hecho ??
 516+ 9C5B              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C5B
 518+ 9C5B 2A 01 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C5E EB           	ex de,hl
 520+ 9C5F A7           	and a
 521+ 9C60 ED 52        	sbc hl,de
 522+ 9C62 CB 3D        	srl l
 523+ 9C64 3E 08        6 ld a,8
 524+ 9C66 95           	sub l
 525+ 9C67 30 1E        	jr nc,3F
 526+ 9C69
 527+ 9C69              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C69              ; B="0".
 529+ 9C69
 530+ 9C69 04           4 inc b
 531+ 9C6A 3C           	inc a
 532+ 9C6B 20 FC        	jr nz,4B
 533+ 9C6D 78           	ld a,b
 534+ 9C6E 08           	ex af,af
 535+ 9C6F 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C72 23           5 inc hl
 537+ 9C73 23           	inc hl
 538+ 9C74 10 FC        	djnz 5B
 539+ 9C76 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C79 CD 20 91     	call Extrae_address
 541+ 9C7C 22 FC 8B     	ld (Puntero_objeto),hl
 542+ 9C7F
 543+ 9C7F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C7F              ; _(Posicion_actual).
 545+ 9C7F
 546+ 9C7F 21 FA 8B     	ld hl,Posicion_actual
 547+ 9C82 35           	dec (hl)
 548+ 9C83 08           	ex af,af
 549+ 9C84 6F           	ld l,a
 550+ 9C85 18 DD        	jr 6B
 551+ 9C87
 552+ 9C87              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C87
 554+ 9C87 47           3 ld b,a
 555+ 9C88 2A FF 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C8B 23           2 inc hl
 557+ 9C8C 23           	inc hl
 558+ 9C8D 10 FC        	djnz 2B
 559+ 9C8F 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C92 C9           8 ret
 561+ 9C93
 562+ 9C93              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C93              ;
 564+ 9C93              ;	modifica_parametros_1er_DESPLZ
 565+ 9C93              ;
 566+ 9C93              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C93              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C93              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C93
 570+ 9C93 3A FE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C96 A7           	and a
 572+ 9C97 20 1E        	jr nz,1F
 573+ 9C99 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C9A 32 FE 8B         ld (CTRL_DESPLZ),a
 575+ 9C9D 21 F9 8B     	ld hl,Columns
 576+ 9CA0 34           	inc (hl)
 577+ 9CA1 3A 09 8C     	ld a,(Cuad_objeto)
 578+ 9CA4 E6 01        	and 1
 579+ 9CA6 20 0F        	jr nz,1F
 580+ 9CA8 2A FA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9CAB 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9CAC 22 FA 8B     	ld (Posicion_actual),hl
 583+ 9CAF CD FB 94     	call Genera_coordenadas
 584+ 9CB2 CD 0E 9D     	call Dec_CTRL_DESPLZ
 585+ 9CB5 18 03        	jr 2F
 586+ 9CB7 CD 0E 9D     1 call Dec_CTRL_DESPLZ
 587+ 9CBA C9           2 ret
 588+ 9CBB
 589+ 9CBB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CBB
 591+ 9CBB 3A FE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CBE FE F7        	cp $f7
 593+ 9CC0 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CC2 30 2C        	jr nc,3F
 595+ 9CC4
 596+ 9CC4              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CC4
 598+ 9CC4 06 00        	ld b,0
 599+ 9CC6 04           4 inc b
 600+ 9CC7 3C           	inc a
 601+ 9CC8 FE F7        	cp $f7
 602+ 9CCA 20 FA        	jr nz,4B
 603+ 9CCC 3E FF        	ld a,$ff
 604+ 9CCE 90           	sub b
 605+ 9CCF 32 FE 8B     	ld (CTRL_DESPLZ),a
 606+ 9CD2 18 1C        	jr 3F
 607+ 9CD4
 608+ 9CD4              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CD4
 610+ 9CD4 21 F9 8B     1 ld hl,Columns
 611+ 9CD7 35           	dec (hl)
 612+ 9CD8 AF           	xor a
 613+ 9CD9 32 FE 8B     	ld (CTRL_DESPLZ),a
 614+ 9CDC 3A 09 8C     	ld a,(Cuad_objeto)
 615+ 9CDF E6 01        	and 1
 616+ 9CE1 28 0A        	jr z,2F
 617+ 9CE3 2A FA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CE6 2B           	dec hl
 619+ 9CE7 22 FA 8B     	ld (Posicion_actual),hl
 620+ 9CEA CD FB 94     	call Genera_coordenadas
 621+ 9CED
 622+ 9CED              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CED
 624+ 9CED CD 48 91     2 call Inicia_puntero_objeto_izq
 625+ 9CF0 C9           3 ret
 626+ 9CF1
 627+ 9CF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CF1              ;
 629+ 9CF1              ;	19/10/22
 630+ 9CF1              ;
 631+ 9CF1              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CF1              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CF1
 634+ 9CF1 3A EB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CF4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CF6 C9           	ret
 637+ 9CF7
 638+ 9CF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CF7              ;
 640+ 9CF7              ;	19/10/22
 641+ 9CF7              ;
 642+ 9CF7              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CF7              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CF7
 645+ 9CF7 3A EB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CFA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CFC C9           	ret
 648+ 9CFD
 649+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CFD              ;
 651+ 9CFD              ;	24/7/22
 652+ 9CFD              ;
 653+ 9CFD              ;	Inc_CTRL_DESPLZ
 654+ 9CFD              ;
 655+ 9CFD              ;
 656+ 9CFD              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CFD
 658+ 9CFD 21 FE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D00 3A 10 8C     	ld a,(Vel_right)
 660+ 9D03 A7           	and a
 661+ 9D04 28 06        	jr z,1F
 662+ 9D06 47           	ld b,a
 663+ 9D07 34           3 inc (hl)
 664+ 9D08 10 FD        	djnz 3B
 665+ 9D0A 18 01        	jr 2F
 666+ 9D0C 34           1 inc (hl)
 667+ 9D0D C9           2 ret
 668+ 9D0E
 669+ 9D0E              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D0E              ;
 671+ 9D0E              ;	5/2/23
 672+ 9D0E              ;
 673+ 9D0E              ;	Dec_CTRL_DESPLZ
 674+ 9D0E              ;
 675+ 9D0E              ;
 676+ 9D0E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D0E
 678+ 9D0E 21 FE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D11 3A 0F 8C     	ld a,(Vel_left)
 680+ 9D14 A7           	and a
 681+ 9D15 28 06        	jr z,1F
 682+ 9D17 47           	ld b,a
 683+ 9D18 35           3 dec (hl)
 684+ 9D19 10 FD        	djnz 3B
 685+ 9D1B 18 01        	jr 2F
 686+ 9D1D 35           1 dec (hl)
 687+ 9D1E C9           2 ret
 688+ 9D1F
 689+ 9D1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D1F
 691+ 9D1F 2A FA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D22 01 1F 00     	ld bc,31
 693+ 9D25 A7           	and a
 694+ 9D26 ED 4A        	adc hl,bc
 695+ 9D28 22 FA 8B     	ld (Posicion_actual),hl
 696+ 9D2B 21 F7 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D2E CB C6        	set 0,(hl)
 698+ 9D30 C9           	ret
 699+ 9D31
 700+ 9D31              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D31
 702+ 9D31 2A FA 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D34 01 1F 00     	ld bc,31
 704+ 9D37 A7           	and a
 705+ 9D38 ED 42        	sbc hl,bc
 706+ 9D3A 22 FA 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D3D 21 F7 8B     	ld hl,Ctrl_0
 708+ 9D40 CB CE        	set 1,(hl)
 709+ 9D42 C9           	ret
 710+ 9D43
 711+ 9D43              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D43
 713+ 9D43 24           Reaparece_abajo inc h
 714+ 9D44 01 E0 17     	ld bc,$17e0
 715+ 9D47 A7           	and a
 716+ 9D48 ED 4A        	adc hl,bc
 717+ 9D4A 22 FA 8B     	ld (Posicion_actual),hl
 718+ 9D4D 21 F7 8B     	ld hl,Ctrl_0
 719+ 9D50 CB D6        	set 2,(hl)
 720+ 9D52 C9           	ret
 721+ 9D53
 722+ 9D53              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D53
 724+ 9D53 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D56 A7           	and a
 726+ 9D57 ED 42        	sbc hl,bc
 727+ 9D59 22 FA 8B     	ld (Posicion_actual),hl
 728+ 9D5C 21 F7 8B     	ld hl,Ctrl_0
 729+ 9D5F CB DE        	set 3,(hl)
 730+ 9D61 C9           	ret
 731+ 9D62
 732+ 9D62              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D62              ;
 734+ 9D62              ;	15/07/23
 735+ 9D62
 736+ 9D62              Reinicio
 737+ 9D62
 738+ 9D62              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D62
 740+ 9D62 AF           	xor a
 741+ 9D63 21 1F 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D66 CD 84 9D     	call Limpia_contenido_hl
 743+ 9D69
 744+ 9D69 21 FA 8B     	ld hl,Posicion_actual
 745+ 9D6C CD 84 9D     	call Limpia_contenido_hl
 746+ 9D6F
 747+ 9D6F CD 65 93     	call Situa_Puntero_indice_mov
 748+ 9D72 CD 83 9E     	call Inicia_Puntero_mov
 749+ 9D75
 750+ 9D75 21 21 8C     	ld hl,Incrementa_puntero
 751+ 9D78 06 05        	ld b,5
 752+ 9D7A 77           1 ld (hl),a
 753+ 9D7B 23           	inc hl
 754+ 9D7C 10 FC        	djnz 1B
 755+ 9D7E
 756+ 9D7E 21 F6 8B     	ld hl,Ctrl_2
 757+ 9D81 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D83
 759+ 9D83 C9           	ret
 760+ 9D84
 761+ 9D84 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D85 23           	inc hl
 763+ 9D86 77           	ld (hl),a
 764+ 9D87 C9           	ret
 765+ 9D88
 766+ 9D88              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D88              ;
 768+ 9D88              ;	18/6/24
 769+ 9D88              ;
 770+ 9D88
 771+ 9D88              Amadeus_a_izquierda
 772+ 9D88
 773+ 9D88              ;	Actualiza contador de movimientos.
 774+ 9D88
 775+ 9D88 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9D8B 35           	dec (hl)
 777+ 9D8C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D8E
 779+ 9D8E 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D91 2B           	dec hl
 781+ 9D92 2B           	dec hl
 782+ 9D93 2B           	dec hl
 783+ 9D94 2B           	dec hl
 784+ 9D95 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D98
 786+ 9D98 21 61 8C     	ld hl,Ctrl_3
 787+ 9D9B CB EE        	set 5,(hl)
 788+ 9D9D
 789+ 9D9D C9           	ret
 790+ 9D9E
 791+ 9D9E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D9F C9           	ret
 793+ 9DA0
 794+ 9DA0
 795+ 9DA0              Amadeus_a_derecha
 796+ 9DA0
 797+ 9DA0              ;	Actualiza contador de movimientos.
 798+ 9DA0
 799+ 9DA0 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9DA3 34           	inc (hl)
 801+ 9DA4 3E 7A        	ld a,$7a
 802+ 9DA6 BE           	cp (hl)
 803+ 9DA7 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9DA9
 805+ 9DA9 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9DAC 23           	inc hl
 807+ 9DAD 23           	inc hl
 808+ 9DAE 23           	inc hl
 809+ 9DAF 23           	inc hl
 810+ 9DB0 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DB3
 812+ 9DB3 21 61 8C     	ld hl,Ctrl_3
 813+ 9DB6 CB EE        	set 5,(hl)
 814+ 9DB8 C9           	ret
 815+ 9DB9
 816+ 9DB9 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DBA C9           	ret
# file closed: Direcciones.asm
2127  9DBB              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DBB              ; ----- ----- ----- ----- -----
   2+ 9DBB              ;
   3+ 9DBB              ;   28/12/23
   4+ 9DBB
   5+ 9DBB              Movimiento
   6+ 9DBB
   7+ 9DBB              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DBB
   9+ 9DBB 3A F6 8B         ld a,(Ctrl_2)
  10+ 9DBE CB 57            bit 2,a
  11+ 9DC0 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DC2
  13+ 9DC2 2A 1D 8C         ld hl,(Puntero_mov)
  14+ 9DC5 7E               ld a,(hl)
  15+ 9DC6
  16+ 9DC6              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DC6
  18+ 9DC6              Inicia_desplazamiento.
  19+ 9DC6
  20+ 9DC6              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DC6
  22+ 9DC6 CD B9 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DC9
  24+ 9DC9              ; Iniciamos (Repetimos_mov).
  25+ 9DC9
  26+ 9DC9 7E               ld a,(hl)
  27+ 9DCA E6 0F            and $0f
  28+ 9DCC 32 23 8C         ld (Repetimos_desplazamiento),a
  29+ 9DCF 32 24 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DD2
  31+ 9DD2              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DD2
  33+ 9DD2 23               inc hl
  34+ 9DD3 7E               ld a,(hl)
  35+ 9DD4 32 26 8C         ld (Cola_de_desplazamiento),a
  36+ 9DD7 2B               dec hl
  37+ 9DD8
  38+ 9DD8 21 F6 8B         ld hl,Ctrl_2
  39+ 9DDB CB D6            set 2,(hl)
  40+ 9DDD
  41+ 9DDD              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DDD              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DDD
  44+ 9DDD              Desplazamiento_iniciado
  45+ 9DDD
  46+ 9DDD CD 8D 9E         call Aplica_desplazamiento
  47+ 9DE0
  48+ 9DE0              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DE0
  50+ 9DE0 3A 61 8C         ld a,(Ctrl_3)
  51+ 9DE3 CB 4F            bit 1,a
  52+ 9DE5 C0               ret nz
  53+ 9DE6
  54+ 9DE6 21 23 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DE9 35               dec (hl)
  56+ 9DEA C0               ret nz
  57+ 9DEB
  58+ 9DEB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DEB              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DEB              ; Analiza (Cola_de_desplazamiento).
  61+ 9DEB
  62+ 9DEB 3A 26 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DEE A7               and a
  64+ 9DEF CC E2 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DF2 28 30            jr z,Reinicia_el_movimiento
  66+ 9DF4
  67+ 9DF4 FE FF            cp $ff
  68+ 9DF6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DF8
  70+ 9DF8 FE FE            cp $fe
  71+ 9DFA CC 67 9E         call z,Fijamos_bucle
  72+ 9DFD 28 25            jr z,Reinicia_el_movimiento
  73+ 9DFF
  74+ 9DFF FE FD            cp $fd
  75+ 9E01 20 11            jr nz,1F
  76+ 9E03
  77+ 9E03              ; ---
  78+ 9E03              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E03
  80+ 9E03 3A F6 8B         ld a,(Ctrl_2)
  81+ 9E06 CB 5F            bit 3,a
  82+ 9E08 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E0A
  84+ 9E0A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E0A
  86+ 9E0A 21 F6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E0D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E0F
  89+ 9E0F CD 78 9E         call Inicia_Repetimos_movimiento
  90+ 9E12 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E14              ; ---
  92+ 9E14
  93+ 9E14 FE 01        1 cp 1
  94+ 9E16 CA 51 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E19
  96+ 9E19 3D               dec a
  97+ 9E1A 32 26 8C         ld (Cola_de_desplazamiento),a
  98+ 9E1D
  99+ 9E1D 3A 24 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E20 32 23 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E23              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E23 C9               ret
 103+ 9E24
 104+ 9E24              Reinicia_el_movimiento
 105+ 9E24
 106+ 9E24 3A F6 8B         ld a,(Ctrl_2)
 107+ 9E27 CB 5F            bit 3,a
 108+ 9E29 28 1B            jr z,2F
 109+ 9E2B
 110+ 9E2B              ; (Cola_de_desplazamiento)="254".
 111+ 9E2B
 112+ 9E2B 21 25 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E2E 35               dec (hl)
 114+ 9E2F 20 15            jr nz,2F
 115+ 9E31
 116+ 9E31              ; Fin de las repeticiones del último movimiento.
 117+ 9E31
 118+ 9E31 21 F6 8B         ld hl,Ctrl_2
 119+ 9E34 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E36
 121+ 9E36 2A 1D 8C         ld hl,(Puntero_mov)
 122+ 9E39 23               inc hl
 123+ 9E3A 23               inc hl
 124+ 9E3B 23               inc hl
 125+ 9E3C 22 1D 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E3F              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E3F 7E               ld a,(hl)
 128+ 9E40 32 26 8C         ld (Cola_de_desplazamiento),a
 129+ 9E43
 130+ 9E43 C3 EB 9D         jp Cola
 131+ 9E46
 132+ 9E46 CD 83 9E     2 call Inicia_Puntero_mov
 133+ 9E49
 134+ 9E49 21 F6 8B         ld hl,Ctrl_2
 135+ 9E4C CB 96            res 2,(hl)
 136+ 9E4E
 137+ 9E4E C3 BB 9D         jp Movimiento
 138+ 9E51
 139+ 9E51              Siguiente_desplazamiento
 140+ 9E51
 141+ 9E51              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E51              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E51
 144+ 9E51 21 F6 8B         ld hl,Ctrl_2
 145+ 9E54 CB 96            res 2,(hl)
 146+ 9E56
 147+ 9E56 2A 1D 8C         ld hl,(Puntero_mov)
 148+ 9E59 23               inc hl
 149+ 9E5A 23               inc hl
 150+ 9E5B 22 1D 8C         ld (Puntero_mov),hl
 151+ 9E5E
 152+ 9E5E 7E               ld a,(hl)
 153+ 9E5F A7               and a
 154+ 9E60 CC E2 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E63 CA 24 9E         jp z,Reinicia_el_movimiento
 156+ 9E66
 157+ 9E66 C9               ret
 158+ 9E67
 159+ 9E67              ; Subrutinas -----------------------------------------
 160+ 9E67              ; ---------- --------- --------- ---------- ----------
 161+ 9E67              ;
 162+ 9E67              ;   24/07/23
 163+ 9E67              ;
 164+ 9E67              ;   Fijamos_bucle
 165+ 9E67              ;
 166+ 9E67              ;
 167+ 9E67
 168+ 9E67              Fijamos_bucle
 169+ 9E67
 170+ 9E67 3A 21 8C         ld a,(Incrementa_puntero)
 171+ 9E6A 3C               inc a
 172+ 9E6B 32 22 8C         ld (Incrementa_puntero_backup),a
 173+ 9E6E
 174+ 9E6E CD E2 9E         call Incrementa_Puntero_indice_mov
 175+ 9E71 2A 1B 8C         ld hl,(Puntero_indice_mov)
 176+ 9E74 22 1F 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E77 C9               ret
 178+ 9E78
 179+ 9E78              ; ---------- --------- --------- ---------- ----------
 180+ 9E78              ;
 181+ 9E78              ;   07/7/23
 182+ 9E78              ;
 183+ 9E78              ;   Inicia_Repetimos_movimiento
 184+ 9E78              ;
 185+ 9E78              ;
 186+ 9E78
 187+ 9E78              Inicia_Repetimos_movimiento
 188+ 9E78
 189+ 9E78              ; Iniciamos (Repetimos_movimiento).
 190+ 9E78
 191+ 9E78 DD 2A 1D 8C      ld ix,(Puntero_mov)
 192+ 9E7C DD 7E 02         ld a,(ix+2)
 193+ 9E7F 32 25 8C         ld (Repetimos_movimiento),a
 194+ 9E82
 195+ 9E82 C9               ret
 196+ 9E83
 197+ 9E83              ; ---------- --------- --------- ---------- ----------
 198+ 9E83              ;
 199+ 9E83              ;   26/6/23
 200+ 9E83              ;
 201+ 9E83              ;   Inicia_Puntero_mov
 202+ 9E83              ;
 203+ 9E83              ;
 204+ 9E83
 205+ 9E83 2A 1B 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E86 CD 20 91         call Extrae_address
 207+ 9E89 22 1D 8C         ld (Puntero_mov),hl
 208+ 9E8C C9               ret
 209+ 9E8D
 210+ 9E8D              ; ---------- --------- --------- ---------- ----------
 211+ 9E8D              ;
 212+ 9E8D              ;   27/06/23
 213+ 9E8D              ;
 214+ 9E8D              ;   Aplica_movimiento.
 215+ 9E8D
 216+ 9E8D              Aplica_desplazamiento
 217+ 9E8D
 218+ 9E8D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E8D
 220+ 9E8D 2A 1D 8C         ld hl, (Puntero_mov)
 221+ 9E90
 222+ 9E90 7E               ld a,(hl)
 223+ 9E91 E6 F0            and $f0
 224+ 9E93 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E94
 226+ 9E94 CB 7E            bit 7,(hl)
 227+ 9E96 28 03            jr z,1F
 228+ 9E98 CD 6F 9A         call Mov_up
 229+ 9E9B 2A 1D 8C     1 ld hl, (Puntero_mov)
 230+ 9E9E CB 76            bit 6,(hl)
 231+ 9EA0 28 03            jr z,2F
 232+ 9EA2 CD 36 9A         call Mov_down
 233+ 9EA5
 234+ 9EA5              ; Se ha aplicado reinicio ???
 235+ 9EA5              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9EA5
 237+ 9EA5              ;    ld a,(Ctrl_3)
 238+ 9EA5              ;    bit 1,a
 239+ 9EA5              ;    ret nz
 240+ 9EA5
 241+ 9EA5 2A 1D 8C     2 ld hl, (Puntero_mov)
 242+ 9EA8 CB 6E            bit 5,(hl)
 243+ 9EAA 28 03            jr z,3F
 244+ 9EAC CD D5 9B         call Mov_left
 245+ 9EAF 2A 1D 8C     3 ld hl, (Puntero_mov)
 246+ 9EB2 CB 66            bit 4,(hl)
 247+ 9EB4 C8               ret z
 248+ 9EB5 CD B2 9A         call Mov_right
 249+ 9EB8 C9               ret
 250+ 9EB9
 251+ 9EB9              ; ---------- --------- --------- ---------- ----------
 252+ 9EB9              ;
 253+ 9EB9              ;   26/06/23
 254+ 9EB9              ;
 255+ 9EB9              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EB9
 257+ 9EB9              Ajusta_velocidad_desplazamiento
 258+ 9EB9
 259+ 9EB9              ; 1er byte de la cadena de movimiento.
 260+ 9EB9              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EB9
 262+ 9EB9 CD D7 9E         call Extrae_nibble_alto
 263+ 9EBC
 264+ 9EBC 32 11 8C         ld (Vel_up),a
 265+ 9EBF 79               ld a,c
 266+ 9EC0 E6 0F            and $0f
 267+ 9EC2 32 12 8C         ld (Vel_down),a
 268+ 9EC5
 269+ 9EC5              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EC5              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EC5
 272+ 9EC5 23               inc hl
 273+ 9EC6 CD D7 9E         call Extrae_nibble_alto
 274+ 9EC9
 275+ 9EC9 32 0F 8C         ld (Vel_left),a
 276+ 9ECC 79               ld a,c
 277+ 9ECD E6 0F            and $0f
 278+ 9ECF 32 10 8C         ld (Vel_right),a
 279+ 9ED2
 280+ 9ED2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9ED2
 282+ 9ED2 23               inc hl
 283+ 9ED3 22 1D 8C         ld (Puntero_mov),hl
 284+ 9ED6 C9               ret
 285+ 9ED7
 286+ 9ED7 06 04        Extrae_nibble_alto ld b,4
 287+ 9ED9 7E               ld a,(hl)
 288+ 9EDA 4F               ld c,a
 289+ 9EDB E6 F0            and $f0
 290+ 9EDD CB 3F        1 srl a
 291+ 9EDF 10 FC            djnz 1B
 292+ 9EE1 C9               ret
 293+ 9EE2
 294+ 9EE2              ; ---------- --------- --------- ---------- ----------
 295+ 9EE2              ;
 296+ 9EE2              ;   5/7/23
 297+ 9EE2              ;
 298+ 9EE2              ;   Incrementa_Puntero_indice_mov
 299+ 9EE2
 300+ 9EE2              Incrementa_Puntero_indice_mov
 301+ 9EE2
 302+ 9EE2 21 21 8C         ld hl,Incrementa_puntero
 303+ 9EE5 34               inc (hl)
 304+ 9EE6
 305+ 9EE6 2A 1B 8C         ld hl,(Puntero_indice_mov)
 306+ 9EE9 01 02 00         ld bc,2
 307+ 9EEC A7               and a
 308+ 9EED 09               add hl,bc
 309+ 9EEE 22 1B 8C         ld (Puntero_indice_mov),hl
 310+ 9EF1
 311+ 9EF1 7E               ld a,(hl)
 312+ 9EF2 A7               and a
 313+ 9EF3
 314+ 9EF3              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EF3
 316+ 9EF3              ;    jr z,$
 317+ 9EF3
 318+ 9EF3              ;! Reinicia el Patrón de movimiento.
 319+ 9EF3
 320+ 9EF3 CC F8 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EF6
 322+ 9EF6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EF7
 324+ 9EF7 C9               ret
 325+ 9EF8
 326+ 9EF8              ; ---------- --------- --------- ---------- ----------
 327+ 9EF8              ;
 328+ 9EF8              ;   15/01/24
 329+ 9EF8              ;
 330+ 9EF8              ;   Inicializa_Puntero_indice_mov
 331+ 9EF8
 332+ 9EF8              Inicializa_Puntero_indice_mov_2
 333+ 9EF8
 334+ 9EF8              ; Existe etiqueta de bucle principal???
 335+ 9EF8
 336+ 9EF8 2A 1F 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EFB 24               inc h
 338+ 9EFC 25               dec h
 339+ 9EFD 28 05            jr z,2F
 340+ 9EFF
 341+ 9EFF 22 1B 8C         ld (Puntero_indice_mov),hl
 342+ 9F02 18 14            jr 3F
 343+ 9F04
 344+ 9F04              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F04
 346+ 9F04 3A 21 8C     2 ld a,(Incrementa_puntero)
 347+ 9F07 47               ld b,a
 348+ 9F08
 349+ 9F08 2A 1B 8C         ld hl,(Puntero_indice_mov)
 350+ 9F0B 2B           1 dec hl
 351+ 9F0C 2B               dec hl
 352+ 9F0D 10 FC            djnz 1B
 353+ 9F0F 22 1B 8C         ld (Puntero_indice_mov),hl
 354+ 9F12
 355+ 9F12 AF               xor a
 356+ 9F13 32 21 8C         ld (Incrementa_puntero),a
 357+ 9F16 18 06            jr 4F
 358+ 9F18
 359+ 9F18 3A 22 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F1B 32 21 8C         ld (Incrementa_puntero),a
 361+ 9F1E C9           4 ret
 362+ 9F1F
 363+ 9F1F              ; ----------------------------------------------------------------------
 364+ 9F1F              ;
 365+ 9F1F              ;   24/11/24
 366+ 9F1F              ;
 367+ 9F1F              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F1F
 369+ 9F1F DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F22 CD 74 94         call Calcula_salto_en_BC
 371+ 9F25 21 13 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F28 A7               and a
 373+ 9F29 ED 4A            adc hl,bc
 374+ 9F2B C9               ret
 375+ 9F2C
 376+ 9F2C              ; ----------------------------------------------------------------------
 377+ 9F2C              ;
 378+ 9F2C              ;   24/11/24
 379+ 9F2C              ;
 380+ 9F2C              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F2C              ;
 382+ 9F2C              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F2C
 384+ 9F2C 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F2D 23               inc hl
 386+ 9F2E 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F2F DD 71 09         ld (ix+9),c
 388+ 9F32 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F35 C9               ret
 390+ 9F36
# file closed: Movimiento.asm
2128  9F36              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F36              ; --------------------------------------------------------------------------------------
   2+ 9F36              ;
   3+ 9F36              ;   25/10/24
   4+ 9F36              ;
   5+ 9F36
   6+ 9F36              Pinta_disparos_Entidades
   7+ 9F36
   8+ 9F36 ED 73 39 8C      ld (Stack),sp
   9+ 9F3A ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F3E
  11+ 9F3E 3E 02            ld a,2
  12+ 9F40 08               ex af,af
  13+ 9F41
  14+ 9F41 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F43              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F43              ;                                     _ No encontraría "0".
  17+ 9F43 FD E1        4 pop iy
  18+ 9F45 D1               pop de                          ; 1er .db IYL
  19+ 9F46              ;                                   ; 2º  .db IYH
  20+ 9F46              ;                                   ; 3er .db E.
  21+ 9F46              ;   Album vacío ???
  22+ 9F46
  23+ 9F46 FD 7D            ld a,iyl
  24+ 9F48 FD 84            add iyh
  25+ 9F4A 83               add e
  26+ 9F4B 28 1F            jr z,1F
  27+ 9F4D
  28+ 9F4D              ;   Imprime album, (contiene datos).
  29+ 9F4D
  30+ 9F4D 3B               dec sp
  31+ 9F4E
  32+ 9F4E E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F4F
  34+ 9F4F              ; Imprime el 1er scanline del disparo.
  35+ 9F4F
  36+ 9F4F FD 7D            ld a,iyl
  37+ 9F51 AE               xor (hl)
  38+ 9F52 77               ld (hl),a
  39+ 9F53
  40+ 9F53 2C               inc l
  41+ 9F54
  42+ 9F54 FD 7C            ld a,iyh
  43+ 9F56 AE               xor (hl)
  44+ 9F57 77               ld (hl),a
  45+ 9F58
  46+ 9F58 2C               inc l
  47+ 9F59
  48+ 9F59 7B               ld a,e
  49+ 9F5A AE               xor (hl)
  50+ 9F5B 77               ld (hl),a
  51+ 9F5C
  52+ 9F5C              ; Imprime el 2º scanline del disparo.
  53+ 9F5C
  54+ 9F5C E1               pop hl
  55+ 9F5D
  56+ 9F5D FD 7D            ld a,iyl
  57+ 9F5F AE               xor (hl)
  58+ 9F60 77               ld (hl),a
  59+ 9F61
  60+ 9F61 2C               inc l
  61+ 9F62
  62+ 9F62 FD 7C            ld a,iyh
  63+ 9F64 AE               xor (hl)
  64+ 9F65 77               ld (hl),a
  65+ 9F66
  66+ 9F66 2C               inc l
  67+ 9F67
  68+ 9F67 7B               ld a,e
  69+ 9F68 AE               xor (hl)
  70+ 9F69 77               ld (hl),a
  71+ 9F6A
  72+ 9F6A 10 D7            djnz 4B
  73+ 9F6C
  74+ 9F6C 08           1 ex af,af
  75+ 9F6D 3D               dec a
  76+ 9F6E 20 05            jr nz,2F
  77+ 9F70
  78+ 9F70 ED 7B 39 8C      ld sp,(Stack)
  79+ 9F74 C9               ret
  80+ 9F75
  81+ 9F75 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F79 08               ex af,af
  83+ 9F7A 18 C5            jr 3B
  84+ 9F7C
  85+ 9F7C              ; --------------------------------------------------------------------------------------
  86+ 9F7C              ;
  87+ 9F7C              ;   30/10/24
  88+ 9F7C              ;
  89+ 9F7C
  90+ 9F7C              Motor_de_disparos_entidades
  91+ 9F7C
  92+ 9F7C 3A 51 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F7F FE 07            cp 7
  94+ 9F81 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F82
  96+ 9F82 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F84 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9F87
  99+ 9F87 CD 20 91     1 call Extrae_address
 100+ 9F8A 1C               inc e
 101+ 9F8B 1C               inc e
 102+ 9F8C ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F90
 104+ 9F90               ; Caja vacía ???
 105+ 9F90
 106+ 9F90 2D               dec l
 107+ 9F91 7E               ld a,(hl)
 108+ 9F92 A7               and a
 109+ 9F93 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F95
 111+ 9F95              ; --- Trabajamos con caja:
 112+ 9F95
 113+ 9F95 2C               inc l
 114+ 9F96
 115+ 9F96              ; --- Existe posibilidad de impacto ???
 116+ 9F96
 117+ 9F96 CB 46            bit 0,(hl)
 118+ 9F98 C4 D8 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F9B 20 37            jr nz,3F
 120+ 9F9D
 121+ 9F9D CD 5F A0         call Rota_disparo_si_procede
 122+ 9FA0
 123+ 9FA0              ; ------------------------------------------------------------
 124+ 9FA0
 125+ 9FA0 2D               dec l
 126+ 9FA1 2D               dec l
 127+ 9FA2
 128+ 9FA2 CD 20 91         call Extrae_address
 129+ 9FA5
 130+ 9FA5              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9FA5              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9FA5
 133+ 9FA5 3A 63 8C         ld a,(Ctrl_5)
 134+ 9FA8 CB 57            bit 2,a
 135+ 9FAA 28 09            jr z,4F
 136+ 9FAC
 137+ 9FAC CB 97            res 2,a
 138+ 9FAE 32 63 8C         ld (Ctrl_5),a
 139+ 9FB1 2C               inc l
 140+ 9FB2 2C               inc l
 141+ 9FB3 18 0C            jr 5F
 142+ 9FB5
 143+ 9FB5 CB 5F        4 bit 3,a
 144+ 9FB7 28 08            jr z,5F
 145+ 9FB9
 146+ 9FB9 CB 9F            res 3,a
 147+ 9FBB 32 63 8C         ld (Ctrl_5),a
 148+ 9FBE 2D               dec l
 149+ 9FBF 2D               dec l
 150+ 9FC0 2D               dec l
 151+ 9FC1
 152+ 9FC1              ; ---------------------------------------------------------------------
 153+ 9FC1
 154+ 9FC1              ;! Velocidad del disparo de entidades.
 155+ 9FC1
 156+ 9FC1 CD F0 99     5 call NextScan
 157+ 9FC4 CD F0 99         call NextScan
 158+ 9FC7
 159+ 9FC7              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FC7
 161+ 9FC7 CD 3C A0         call Fin_de_disparo_de_entidad
 162+ 9FCA
 163+ 9FCA EB               ex de,hl
 164+ 9FCB
 165+ 9FCB 73               ld (hl),e
 166+ 9FCC 23               inc hl
 167+ 9FCD 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FCE
 169+ 9FCE 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FD1 18 02            jr 2F
 171+ 9FD3
 172+ 9FD3 C9               ret
 173+ 9FD4
 174+ 9FD4 EB           3 ex de,hl
 175+ 9FD5 10 B0        2 djnz 1B
 176+ 9FD7
 177+ 9FD7 C9               ret
 178+ 9FD8
 179+ 9FD8              ; ------------- ------------- ------------
 180+ 9FD8              ;
 181+ 9FD8              ;   1/11/24
 182+ 9FD8
 183+ 9FD8              Comprueba_impacto_con_Amadeus
 184+ 9FD8
 185+ 9FD8              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FD8              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FD8
 188+ 9FD8              ;   Modificamos registros, así que guardamos ...
 189+ 9FD8
 190+ 9FD8 C5               push bc
 191+ 9FD9 E5               push hl
 192+ 9FDA D5               push de
 193+ 9FDB
 194+ 9FDB 2D               dec l
 195+ 9FDC 2D               dec l
 196+ 9FDD
 197+ 9FDD CD 20 91         call Extrae_address
 198+ 9FE0
 199+ 9FE0 3A AF 89         ld a,(CX_Amadeus)
 200+ 9FE3 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FE4
 202+ 9FE4 7D               ld a,l
 203+ 9FE5 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FE7
 205+ 9FE7 06 03            ld b,3
 206+ 9FE9
 207+ 9FE9 B9           1 cp c
 208+ 9FEA 28 15            jr z,Coincidencia
 209+ 9FEC 0C               inc c
 210+ 9FED 10 FA            djnz 1B
 211+ 9FEF
 212+ 9FEF 0D               dec c
 213+ 9FF0 0D               dec c
 214+ 9FF1 0D               dec c
 215+ 9FF2
 216+ 9FF2 3C               inc a
 217+ 9FF3 B9               cp c
 218+ 9FF4 28 0B            jr z,Coincidencia
 219+ 9FF6
 220+ 9FF6 3C               inc a
 221+ 9FF7 B9               cp c
 222+ 9FF8 28 07            jr z,Coincidencia
 223+ 9FFA
 224+ 9FFA D1           2 pop de
 225+ 9FFB E1               pop hl
 226+ 9FFC C1               pop bc
 227+ 9FFD
 228+ 9FFD              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FFD
 230+ 9FFD CB 86            res 0,(hl)
 231+ 9FFF AF               xor a                       ; Z before RET.
 232+ A000 C9               ret
 233+ A001
 234+ A001              Coincidencia
 235+ A001
 236+ A001              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ A001              ;   Existe posibilidad de impacto.
 238+ A001              ;   Vamos a averiguarlo ...
 239+ A001
 240+ A001 1D               dec e
 241+ A002 1D               dec e
 242+ A003 1D               dec e
 243+ A004
 244+ A004              ; DE en Puntero_objeto del disparo.
 245+ A004              ; HL en Puntero_de_impresión del disparo.
 246+ A004
 247+ A004              ; Comparador:
 248+ A004
 249+ A004 06 03            ld b,3
 250+ A006
 251+ A006 1A           3 ld a,(de)
 252+ A007 4F               ld c,a
 253+ A008 A6               and (hl)
 254+ A009 B9               cp c
 255+ A00A 20 06            jr nz,Amadeus_impactado
 256+ A00C
 257+ A00C 2C               inc l
 258+ A00D 1C               inc e
 259+ A00E
 260+ A00E 10 F6            djnz 3B
 261+ A010
 262+ A010 18 E8            jr 2B
 263+ A012
 264+ A012              Amadeus_impactado
 265+ A012
 266+ A012              ; Borramos disparo.
 267+ A012
 268+ A012 D1               pop de
 269+ A013 E1               pop hl
 270+ A014
 271+ A014 E5               push hl
 272+ A015 D5               push de
 273+ A016
 274+ A016 CD CA A0         call Borra_6_bytes
 275+ A019
 276+ A019 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A01C 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A01D
 279+ A01D              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A01D
 281+ A01D 21 B2 89         ld hl,Impacto_Amadeus
 282+ A020 36 01            ld (hl),1
 283+ A022
 284+ A022              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A022              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A022
 287+ A022 3A B3 89         ld a,(p.imp.amadeus)
 288+ A025 FE DE            cp $de
 289+ A027 20 04            jr nz,1F
 290+ A029
 291+ A029 3D               dec a
 292+ A02A 32 B3 89         ld (p.imp.amadeus),a
 293+ A02D
 294+ A02D              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A02D
 296+ A02D 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A030 21 B5 89         ld hl,Pamm_Amadeus
 298+ A033
 299+ A033 73               ld (hl),e
 300+ A034 23               inc hl
 301+ A035 72               ld (hl),d
 302+ A036
 303+ A036 D1               pop de
 304+ A037 E1               pop hl
 305+ A038 C1               pop bc
 306+ A039
 307+ A039 AF               xor a
 308+ A03A 3C               inc a               ; NZ before RET.
 309+ A03B C9               ret
 310+ A03C
 311+ A03C              ; ------------- ------------- ------------
 312+ A03C              ;
 313+ A03C              ;   31/10/24
 314+ A03C
 315+ A03C              Fin_de_disparo_de_entidad
 316+ A03C
 317+ A03C              ; Estamos en zona de Amadeus ??
 318+ A03C
 319+ A03C 7C               ld a,h
 320+ A03D FE 54            cp $54
 321+ A03F 38 0D            jr c,1F
 322+ A041
 323+ A041 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A042
 325+ A042 5D               ld e,l
 326+ A043 54               ld d,h
 327+ A044
 328+ A044 21 E0 57         ld hl,$57e0
 329+ A047 ED 52            sbc hl,de
 330+ A049
 331+ A049 38 6F            jr c,Elimina_disparo_entidad
 332+ A04B
 333+ A04B 6B               ld l,e
 334+ A04C 62               ld h,d
 335+ A04D
 336+ A04D D1               pop de
 337+ A04E
 338+ A04E 7C           1 ld a,h
 339+ A04F FE 50            cp $50
 340+ A051 D8               ret c
 341+ A052
 342+ A052 7D               ld a,l
 343+ A053 FE C0            cp $c0
 344+ A055 D8               ret c
 345+ A056
 346+ A056              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A056              ; Así podremos comprobar si hay colisión más adelante.
 348+ A056
 349+ A056 1C               inc e
 350+ A057 1C               inc e
 351+ A058
 352+ A058 EB               ex de,hl
 353+ A059 CB C6            set 0,(hl)
 354+ A05B EB               ex de,hl
 355+ A05C
 356+ A05C 1D               dec e
 357+ A05D 1D               dec e
 358+ A05E
 359+ A05E C9               ret
 360+ A05F
 361+ A05F              ; ----------------------------------------------------------
 362+ A05F              ;
 363+ A05F              ;   08/10/24
 364+ A05F
 365+ A05F              ;   Estructura de un disparo de entidades.
 366+ A05F
 367+ A05F              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A05F              ; 	defw 0											; Puntero de impresión.
 369+ A05F              ;	defw 0											; Control.
 370+ A05F
 371+ A05F              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A05F              ;   _de la entidad en el momento de disparar.
 373+ A05F
 374+ A05F              ;   El byte alto muestra la siguiente información:
 375+ A05F              ;
 376+ A05F              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A05F              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A05F              ;
 379+ A05F              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A05F              ;
 381+ A05F              ;                        10xx ..... Izquierda.
 382+ A05F              ;                        01xx ..... Derecha.
 383+ A05F              ;                        00xx ..... Recto.
 384+ A05F
 385+ A05F              Rota_disparo_si_procede
 386+ A05F
 387+ A05F              ;   Nos situamos en el byte alto de (Control).
 388+ A05F
 389+ A05F CB 76            bit 6,(hl)
 390+ A061 20 2D            jr nz,Rota_a_derecha
 391+ A063 CB 7E            bit 7,(hl)
 392+ A065 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A066
 394+ A066              Rota_a_izq
 395+ A066
 396+ A066 E5               push hl
 397+ A067
 398+ A067 7D               ld a,l
 399+ A068 D6 05            sub 5
 400+ A06A 6F               ld l,a
 401+ A06B
 402+ A06B E5               push hl
 403+ A06C FD E1            pop iy
 404+ A06E
 405+ A06E A7               and a
 406+ A06F
 407+ A06F FD CB 02 16      rl (iy+02)
 408+ A073 FD CB 01 16      rl (iy+01)
 409+ A077 FD CB 00 16      rl (iy+00)
 410+ A07B
 411+ A07B 30 3B            jr nc,Exit
 412+ A07D
 413+ A07D              ; Desplazamiento completo hasta Carry.
 414+ A07D              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A07D
 416+ A07D FD 36 02 03      ld (iy+02),$03
 417+ A081 FD 36 01 00      ld (iy+01),$00
 418+ A085 FD 36 00 00      ld (iy+00),$00
 419+ A089
 420+ A089 21 63 8C         ld hl,Ctrl_5
 421+ A08C CB DE            set 3,(hl)
 422+ A08E
 423+ A08E 18 28            jr Exit
 424+ A090
 425+ A090              Rota_a_derecha
 426+ A090
 427+ A090 E5               push hl
 428+ A091
 429+ A091 7D               ld a,l
 430+ A092 D6 05            sub 5
 431+ A094 6F               ld l,a
 432+ A095
 433+ A095 E5               push hl
 434+ A096 FD E1            pop iy
 435+ A098
 436+ A098 A7               and a
 437+ A099
 438+ A099 FD CB 00 1E      rr (iy+00)
 439+ A09D FD CB 01 1E      rr (iy+01)
 440+ A0A1 FD CB 02 1E      rr (iy+02)
 441+ A0A5
 442+ A0A5 30 11            jr nc,Exit
 443+ A0A7
 444+ A0A7              ; Desplazamiento completo hasta Carry.
 445+ A0A7              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A0A7
 447+ A0A7 FD 36 00 01      ld (iy+00),$01
 448+ A0AB FD 36 01 80      ld (iy+01),$80
 449+ A0AF FD 36 02 00      ld (iy+02),$00
 450+ A0B3
 451+ A0B3 21 63 8C         ld hl,Ctrl_5
 452+ A0B6 CB D6            set 2,(hl)
 453+ A0B8
 454+ A0B8 E1           Exit pop hl
 455+ A0B9 C9               ret
 456+ A0BA
 457+ A0BA              ; ------------ ----------- ------------
 458+ A0BA              ;
 459+ A0BA              ;   25/9/24
 460+ A0BA
 461+ A0BA              Elimina_disparo_entidad
 462+ A0BA
 463+ A0BA 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0BD 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0BE
 466+ A0BE E1               pop hl
 467+ A0BF E5               push hl
 468+ A0C0
 469+ A0C0 2C               inc l
 470+ A0C1 2C               inc l
 471+ A0C2
 472+ A0C2 CD CA A0         call Borra_6_bytes
 473+ A0C5
 474+ A0C5 D1               pop de
 475+ A0C6
 476+ A0C6 21 00 00         ld hl,0
 477+ A0C9
 478+ A0C9 C9               ret
 479+ A0CA
 480+ A0CA              ; ----- ----- ----- ----- -----
 481+ A0CA
 482+ A0CA              Borra_6_bytes
 483+ A0CA
 484+ A0CA 16 06            ld d,6                                                    ; Contador
 485+ A0CC AF               xor a                                                     ; Borrador
 486+ A0CD 77           1 ld (hl),a
 487+ A0CE 2D               dec l
 488+ A0CF 15               dec d
 489+ A0D0 20 FB            jr nz,1B
 490+ A0D2
 491+ A0D2 C9               ret
 492+ A0D3
 493+ A0D3              ; --------------------------------------------------------------------------------------
 494+ A0D3              ;
 495+ A0D3              ;   12/10/24
 496+ A0D3              ;
 497+ A0D3
 498+ A0D3              Genera_datos_de_impresion_disparos_Entidades
 499+ A0D3
 500+ A0D3 3E 07            ld a,7
 501+ A0D5 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0D6
 503+ A0D6              ; ---------------
 504+ A0D6
 505+ A0D6              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0D6
 507+ A0D6 21 20 89          ld hl,Indice_de_disparos_entidades
 508+ A0D9
 509+ A0D9 CD 20 91     1 call Extrae_address
 510+ A0DC
 511+ A0DC 13               inc de
 512+ A0DD 13               inc de
 513+ A0DE
 514+ A0DE ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0E2
 516+ A0E2 2D               dec l
 517+ A0E3 7E               ld a,(hl)
 518+ A0E4 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0E5 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0E7
 521+ A0E7              ; ----- ----- ----- -----
 522+ A0E7
 523+ A0E7 2D               dec l
 524+ A0E8 CD 20 91         call Extrae_address
 525+ A0EB E5               push hl
 526+ A0EC
 527+ A0EC 1D               dec e
 528+ A0ED
 529+ A0ED EB               ex de,hl
 530+ A0EE
 531+ A0EE 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0EF 2D               dec l
 533+ A0F0 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0F1 2D               dec l
 535+ A0F2 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0F3
 537+ A0F3 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0F4
 539+ A0F4              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0F4
 541+ A0F4 FD 2A 4D 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0F8 FD 73 00         ld (iy+0),e
 543+ A0FB FD 70 01         ld (iy+1),b
 544+ A0FE FD 71 02         ld (iy+2),c
 545+ A101
 546+ A101 FD 75 03         ld (iy+3),l
 547+ A104 FD 74 04         ld (iy+4),h
 548+ A107
 549+ A107 CD F0 99         call NextScan
 550+ A10A
 551+ A10A FD 75 05         ld (iy+5),l
 552+ A10D FD 74 06         ld (iy+6),h
 553+ A110
 554+ A110 FD E5            push iy
 555+ A112 E1               pop hl
 556+ A113
 557+ A113 3E 07            ld a,7
 558+ A115 85               add l
 559+ A116 6F               ld l,a
 560+ A117
 561+ A117 22 4D 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A11A
 563+ A11A              ; ----- ----- ----- -----
 564+ A11A
 565+ A11A              Situa_en_siguiente_caja
 566+ A11A
 567+ A11A 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A11B 3D               dec a
 569+ A11C C8               ret z
 570+ A11D
 571+ A11D 08               ex af,af
 572+ A11E 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A121 18 B6            jr 1B
 574+ A123
 575+ A123              ; --------------------------------------------------------------------------------------
 576+ A123              ;
 577+ A123              ;   12/10/24
 578+ A123              ;
 579+ A123
 580+ A123              Genera_disparo_de_entidad_maldosa
 581+ A123
 582+ A123              ;   Estructura de un disparo de entidades.
 583+ A123
 584+ A123              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A123              ; 	defw 0											; Puntero de impresión.
 586+ A123              ;	defw 0											; Control.
 587+ A123
 588+ A123              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A123              ;   _de la entidad en el momento de disparar.
 590+ A123
 591+ A123              ;   El byte de control muestra la siguiente información:
 592+ A123
 593+ A123              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A123              ;
 595+ A123              ;                        10xx ..... Izquierda.
 596+ A123              ;                        01xx ..... Derecha.
 597+ A123              ;                        00xx ..... Recto.
 598+ A123
 599+ A123              ;*  Exclusiones.
 600+ A123
 601+ A123              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A123              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A123
 604+ A123 3A 51 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A126 A7               and a
 606+ A127 C8               ret z
 607+ A128
 608+ A128 3A EC 8B         ld a,(Coordenada_y)
 609+ A12B A7               and a
 610+ A12C C8               ret z
 611+ A12D
 612+ A12D 3D               dec a
 613+ A12E C8               ret z
 614+ A12F
 615+ A12F FE 10            cp 16
 616+ A131 D0               ret nc
 617+ A132
 618+ A132              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A132              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A132              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A132
 622+ A132 21 53 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A135 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A136
 625+ A136              ;   Decrementa el numero de disparos de entidades.
 626+ A136
 627+ A136 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A139 35               dec (hl)
 629+ A13A
 630+ A13A 21 20 89         ld hl,Indice_de_disparos_entidades
 631+ A13D
 632+ A13D CD 20 91     1 call Extrae_address
 633+ A140
 634+ A140 13               inc de
 635+ A141 13               inc de
 636+ A142
 637+ A142 ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A146
 639+ A146              ;   Comprobamos si la caja está vacía.
 640+ A146
 641+ A146 2D               dec l
 642+ A147 7E               ld a,(hl)
 643+ A148 A7               and a
 644+ A149 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A14B 2C               inc l
 646+ A14C
 647+ A14C              ;   Caja vacía, vamos a generar un disparo.
 648+ A14C              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A14C
 650+ A14C CD 6D A1         call Genera_byte_inclinacion
 651+ A14F
 652+ A14F 7E               ld a,(hl)
 653+ A150 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A151
 655+ A151 2D               dec l
 656+ A152
 657+ A152 CD 89 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A155
 659+ A155 70               ld (hl),b
 660+ A156 2D               dec l
 661+ A157 71               ld (hl),c
 662+ A158
 663+ A158 2D               dec l
 664+ A159
 665+ A159              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A159
 667+ A159 FD 7E 02         ld a,(iy+02)
 668+ A15C 77               ld (hl),a
 669+ A15D 2D               dec l
 670+ A15E
 671+ A15E FD 7E 01         ld a,(iy+01)
 672+ A161 77               ld (hl),a
 673+ A162 2D               dec l
 674+ A163
 675+ A163 FD 7E 00         ld a,(iy+00)
 676+ A166 77               ld (hl),a
 677+ A167
 678+ A167 C9               ret
 679+ A168
 680+ A168              ;   --- --- ---
 681+ A168
 682+ A168              Situa_en_siguiente_disparo
 683+ A168
 684+ A168 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A16B 18 D0            jr 1B
 686+ A16D
 687+ A16D              ; --------------------------------------------------------------------------------------
 688+ A16D              ;
 689+ A16D              ;   09/10/24
 690+ A16D              ;
 691+ A16D
 692+ A16D              Genera_byte_inclinacion
 693+ A16D
 694+ A16D              ; Determina tendencia del disparo.
 695+ A16D
 696+ A16D 3A AF 89         ld a,(CX_Amadeus)
 697+ A170 47               ld b,a
 698+ A171 3A EB 8B         ld a,(Coordenada_X)
 699+ A174 90               sub b
 700+ A175 38 07            jr c,Disparo_a_derecha
 701+ A177
 702+ A177 FE 06        Disparo_a_izquierda cp 6
 703+ A179
 704+ A179 D8               ret c
 705+ A17A C8               ret z
 706+ A17B
 707+ A17B CB FE            set 7,(hl)
 708+ A17D C9               ret
 709+ A17E
 710+ A17E 47           Disparo_a_derecha ld b,a
 711+ A17F 3E FF            ld a,$ff
 712+ A181 90               sub b
 713+ A182
 714+ A182 FE 05            cp 5
 715+ A184
 716+ A184 D8               ret c
 717+ A185 C8               ret z
 718+ A186
 719+ A186 CB F6            set 6,(hl)
 720+ A188 C9               ret
 721+ A189
 722+ A189              ; --------------------------------------------------------------------------------------
 723+ A189              ;
 724+ A189              ;   09/10/24
 725+ A189              ;
 726+ A189
 727+ A189              Modifica_puntero_de_impresion
 728+ A189
 729+ A189              ;   Puntero de impresión del disparo en BC.
 730+ A189
 731+ A189 E5               push hl
 732+ A18A
 733+ A18A 2A 66 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A18D CD F0 99         call NextScan
 735+ A190
 736+ A190 4D               ld c,l
 737+ A191 44               ld b,h
 738+ A192
 739+ A192 E1               pop hl
 740+ A193
 741+ A193 08               ex af,af
 742+ A194 CB 77            bit 6,a
 743+ A196 28 06            jr z,1F
 744+ A198
 745+ A198 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A19C 0C               inc c
 747+ A19D C9               ret
 748+ A19E
 749+ A19E CB 7F        1 bit 7,a
 750+ A1A0 28 F6            jr z,2B
 751+ A1A2
 752+ A1A2 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A1A6 0D               dec c
 754+ A1A7
 755+ A1A7 C9               ret
 756+ A1A8
 757+ A1A8              ; --------------------------------------------------------------------------------------
 758+ A1A8              ;
 759+ A1A8              ;   31/08/24
 760+ A1A8              ;
 761+ A1A8
 762+ A1A8              Compara_con_coordenadas_de_disparo
 763+ A1A8
 764+ A1A8 3A EC 8B         ld a,(Coordenada_y)
 765+ A1AB 47               ld b,a
 766+ A1AC 3A 6B 8C         ld a,(Coordenadas_disparo_certero)
 767+ A1AF 90               sub b
 768+ A1B0
 769+ A1B0              ; A = "0" ok
 770+ A1B0              ; A = "1" ok
 771+ A1B0
 772+ A1B0 28 08            jr z,Comprueba_coordenada_X
 773+ A1B2 3D               dec a
 774+ A1B3 28 05            jr z,Comprueba_coordenada_X
 775+ A1B5
 776+ A1B5              ; A = "$ff" ok
 777+ A1B5
 778+ A1B5 FE FE            cp $fe
 779+ A1B7 28 01            jr z,Comprueba_coordenada_X
 780+ A1B9
 781+ A1B9 C9               ret
 782+ A1BA
 783+ A1BA              Comprueba_coordenada_X
 784+ A1BA
 785+ A1BA 3A EB 8B         ld a,(Coordenada_X)
 786+ A1BD 47               ld b,a
 787+ A1BE 21 6C 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1C1 7E               ld a,(hl)
 789+ A1C2 90               sub b
 790+ A1C3
 791+ A1C3              ; A = "0" ok
 792+ A1C3              ; A = "1" ok
 793+ A1C3
 794+ A1C3 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1C5 3D               dec a
 796+ A1C6 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1C8
 798+ A1C8              ; A = "2" ok
 799+ A1C8
 800+ A1C8 3D               dec a
 801+ A1C9 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1CB
 803+ A1CB              ; A = "$ff"
 804+ A1CB
 805+ A1CB FE FD            cp $fd
 806+ A1CD C0               ret nz
 807+ A1CE
 808+ A1CE              Activa_Impacto_en_entidad
 809+ A1CE
 810+ A1CE              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1CE
 812+ A1CE 3E 02            ld a,2
 813+ A1D0 32 EE 8B         ld (Impacto),a
 814+ A1D3
 815+ A1D3              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1D3
 817+ A1D3 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1D6 21 F1 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1D9
 820+ A1D9 73               ld (hl),e
 821+ A1DA 23               inc hl
 822+ A1DB 72               ld (hl),d
 823+ A1DC
 824+ A1DC              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1DC
 826+ A1DC 21 68 8C         ld hl,Impacto2
 827+ A1DF CB 9E            res 3,(hl)
 828+ A1E1
 829+ A1E1 C9               ret
 830+ A1E2
 831+ A1E2              ; --------------------------------------------------------------------------------------
 832+ A1E2              ;
 833+ A1E2              ;   13/10/24
 834+ A1E2              ;
 835+ A1E2
 836+ A1E2              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1E2
 838+ A1E2              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1E2
 840+ A1E2 2A 45 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1E5 06 06            ld b,6
 842+ A1E7 AF               xor a
 843+ A1E8 77           1 ld (hl),a
 844+ A1E9 2C               inc l
 845+ A1EA 10 FC            djnz 1B
 846+ A1EC
 847+ A1EC C9               ret
 848+ A1ED
 849+ A1ED              ; --------------------------------------------------------------------------------------
 850+ A1ED              ;
 851+ A1ED              ;   29/09/24
 852+ A1ED              ;
 853+ A1ED
 854+ A1ED              Calcula_bytes_pintado_disparos
 855+ A1ED
 856+ A1ED 2A 49 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1F0 45               ld b,l
 858+ A1F1 2A 4D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1F4 7D               ld a,l
 860+ A1F5
 861+ A1F5 90               sub b
 862+ A1F6 32 4F 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1F9
 864+ A1F9 C9               ret
 865+ A1FA
 866+ A1FA              ; --------------------------------------------------------------------------------------
 867+ A1FA              ;
 868+ A1FA              ;   26/10/24
 869+ A1FA              ;
 870+ A1FA              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1FA              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1FA              ;   _disparos que el álbum del FRAME actual).
 873+ A1FA
 874+ A1FA              Limpia_album_de_pintado_disparos_entidades
 875+ A1FA
 876+ A1FA 21 50 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1FD 7E               ld a,(hl)
 878+ A1FE 2D               dec l
 879+ A1FF 46               ld b,(hl)
 880+ A200 90               sub b
 881+ A201
 882+ A201 D8               ret c
 883+ A202 C8               ret z
 884+ A203
 885+ A203 F5               push af
 886+ A204 80               add b
 887+ A205 77               ld (hl),a
 888+ A206 F1               pop af
 889+ A207
 890+ A207              ; Clean.
 891+ A207
 892+ A207 47           2 ld b,a
 893+ A208 AF               xor a
 894+ A209 2A 4D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A20C 77           1 ld (hl),a
 896+ A20D 23               inc hl
 897+ A20E 10 FC            djnz 1B
 898+ A210
 899+ A210 C9               ret
 900+ A211
 901+ A211              ; --------------------------------------------------------------------------------------
 902+ A211              ;
 903+ A211              ;   29/09/24
 904+ A211              ;
 905+ A211
 906+ A211              Motor_Disparos_Amadeus
 907+ A211
 908+ A211 21 1D 89         ld hl,Disparo_Amad+1
 909+ A214
 910+ A214 34               inc (hl)
 911+ A215 35               dec (hl)
 912+ A216
 913+ A216 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A217
 915+ A217              ;   Esta caja contiene un disparo.
 916+ A217
 917+ A217 CD 1E A2         call Consulta_Impacto
 918+ A21A CC 37 A2         call z,Mueve_disparo_Amadeus
 919+ A21D
 920+ A21D C9               ret
 921+ A21E
 922+ A21E              ; ----------------------
 923+ A21E              ;
 924+ A21E              ;
 925+ A21E              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A21E              ;
 927+ A21E              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A21E
 929+ A21E
 930+ A21E              Consulta_Impacto
 931+ A21E
 932+ A21E              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A21E              ;   _sea lo más coherente posible.
 934+ A21E
 935+ A21E E5               push hl
 936+ A21F 2B               dec hl
 937+ A220 CD 13 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A223 E1               pop hl
 939+ A224 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A225
 941+ A225 C8               ret z
 942+ A226
 943+ A226 3A 68 8C         ld a,(Impacto2)
 944+ A229 CB DF            set 3,a
 945+ A22B 32 68 8C         ld (Impacto2),a
 946+ A22E
 947+ A22E E5               push hl
 948+ A22F CD 00 A3         call Genera_coordenadas_de_disparo_Amadeus
 949+ A232 E1               pop hl
 950+ A233 CD 50 A2         call Elimina_disparo_Amadeus
 951+ A236
 952+ A236 C9               ret
 953+ A237
 954+ A237              ; ----------------------
 955+ A237              ;
 956+ A237              ;
 957+ A237              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A237
 959+ A237              Mueve_disparo_Amadeus
 960+ A237
 961+ A237 CD 20 91         call Extrae_address
 962+ A23A
 963+ A23A CD FF 99         call PreviousScan
 964+ A23D CD FF 99         call PreviousScan
 965+ A240 CD FF 99         call PreviousScan
 966+ A243 CD FF 99         call PreviousScan
 967+ A246
 968+ A246              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A246
 970+ A246 7C               ld a,h
 971+ A247 D6 40            sub $40
 972+ A249 EB               ex de,hl
 973+ A24A 38 04            jr c,Elimina_disparo_Amadeus
 974+ A24C
 975+ A24C               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A24C
 977+ A24C 73               ld (hl),e
 978+ A24D 23               inc hl
 979+ A24E 72               ld (hl),d
 980+ A24F
 981+ A24F C9               ret
 982+ A250
 983+ A250              ; ----------------------
 984+ A250              ;
 985+ A250              ;   29/9/24
 986+ A250
 987+ A250              Elimina_disparo_Amadeus
 988+ A250
 989+ A250              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A250              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A250
 992+ A250              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A250              ;   	defw 0											; Puntero de impresión.
 994+ A250
 995+ A250 2B               dec hl
 996+ A251 2B               dec hl
 997+ A252
 998+ A252 AF               xor a
 999+ A253 77               ld (hl),a
1000+ A254 23               inc hl
1001+ A255 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A256
1003+ A256 23               inc hl
1004+ A257 77               ld (hl),a
1005+ A258 23               inc hl
1006+ A259 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A25A
1008+ A25A 3E 01            ld a,1
1009+ A25C 32 52 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A25F
1011+ A25F CD E2 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A262
1013+ A262 AF               xor a
1014+ A263 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A264
1016+ A264 C9               ret
1017+ A265
1018+ A265              ; --------------------------------------------------------------------------------------
1019+ A265              ;
1020+ A265              ;   13/10/24
1021+ A265              ;
1022+ A265
1023+ A265              Pinta_disparos_Amadeus
1024+ A265
1025+ A265 06 02            ld b,2
1026+ A267 ED 73 39 8C      ld (Stack),sp
1027+ A26B ED 7B 47 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A26F D1           3 pop de
1029+ A270 14               inc d
1030+ A271 15               dec d
1031+ A272 28 1C            jr z,1F
1032+ A274 E1               pop hl
1033+ A275
1034+ A275              Imprime_scanlines_en_pantalla
1035+ A275
1036+ A275              ; 1er scanline
1037+ A275
1038+ A275 1A               ld a,(de)
1039+ A276 AE               xor (hl)
1040+ A277 77               ld (hl),a
1041+ A278
1042+ A278 1C               inc e
1043+ A279 2C               inc l
1044+ A27A
1045+ A27A 1A               ld a,(de)
1046+ A27B AE               xor (hl)
1047+ A27C 77               ld (hl),a
1048+ A27D
1049+ A27D 1D               dec e
1050+ A27E E1               pop hl
1051+ A27F
1052+ A27F              ; 2º scanline
1053+ A27F
1054+ A27F 1A               ld a,(de)
1055+ A280 AE               xor (hl)
1056+ A281 77               ld (hl),a
1057+ A282
1058+ A282 1C               inc e
1059+ A283 2C               inc l
1060+ A284
1061+ A284 1A               ld a,(de)
1062+ A285 AE               xor (hl)
1063+ A286 77               ld (hl),a
1064+ A287
1065+ A287 1D               dec e
1066+ A288
1067+ A288 18 06            jr 1F
1068+ A28A
1069+ A28A ED 7B 45 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A28E 18 DF            jr 3B
1071+ A290 10 F8        1 djnz 2B
1072+ A292 ED 7B 39 8C      ld sp,(Stack)
1073+ A296 C9               ret
1074+ A297
1075+ A297              ; --------------------------------------------------------------------------------------
1076+ A297              ;
1077+ A297              ;   13/10/24
1078+ A297              ;
1079+ A297              ;   Modifica: HL,BC y DE.
1080+ A297
1081+ A297
1082+ A297              Genera_datos_de_impresion_disparos_Amadeus
1083+ A297
1084+ A297 ED 73 39 8C      ld (Stack),sp
1085+ A29B 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A29E D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A29F
1088+ A29F 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A2A0 15               dec d
1090+ A2A1
1091+ A2A1 28 0E            jr z,Salida
1092+ A2A3
1093+ A2A3              Genera_scanlines_de_disparo_Amadeus
1094+ A2A3
1095+ A2A3 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A2A4              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A2A4 ED 7B 45 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A2A8
1099+ A2A8 C1               pop bc
1100+ A2A9 C1               pop bc
1101+ A2AA C1               pop bc
1102+ A2AB
1103+ A2AB E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A2AC CD FF 99         call PreviousScan
1105+ A2AF E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A2B0 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A2B1
1108+ A2B1              Salida
1109+ A2B1
1110+ A2B1 ED 7B 39 8C      ld sp,(Stack)
1111+ A2B5
1112+ A2B5 C9               ret
1113+ A2B6
1114+ A2B6              ; --------------------------------------------------------------------------------------
1115+ A2B6              ;
1116+ A2B6              ;   12/09/24
1117+ A2B6              ;
1118+ A2B6
1119+ A2B6              Genera_disparo_Amadeus
1120+ A2B6
1121+ A2B6              ;*  Exclusiones.
1122+ A2B6
1123+ A2B6 3A 52 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2B9 A7               and a
1125+ A2BA C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2BB
1127+ A2BB 3D               dec a
1128+ A2BC 32 52 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2BF
1130+ A2BF              Define_puntero_objeto_disparo
1131+ A2BF
1132+ A2BF              ;   Inicializamos contador.
1133+ A2BF
1134+ A2BF 06 00            ld b,0
1135+ A2C1
1136+ A2C1 2A B3 89         ld hl,(p.imp.amadeus)
1137+ A2C4 2C               inc l
1138+ A2C5
1139+ A2C5 3E 80            ld a,$80
1140+ A2C7 BE               cp (hl)
1141+ A2C8 28 0D            jr z,1F
1142+ A2CA
1143+ A2CA 04               inc b
1144+ A2CB
1145+ A2CB 3E 60            ld a,$60
1146+ A2CD BE               cp (hl)
1147+ A2CE 28 07            jr z,1F
1148+ A2D0
1149+ A2D0
1150+ A2D0 04               inc b
1151+ A2D1
1152+ A2D1 3E 18            ld a,$18
1153+ A2D3 BE               cp (hl)
1154+ A2D4 28 01            jr z,1F
1155+ A2D6
1156+ A2D6 04               inc b
1157+ A2D7
1158+ A2D7              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2D7
1160+ A2D7              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2D7
1162+ A2D7 CD FF 99     1 call PreviousScan
1163+ A2DA
1164+ A2DA 78               ld a,b
1165+ A2DB CB 3F            srl a
1166+ A2DD 28 03            jr z,4F
1167+ A2DF
1168+ A2DF              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2DF E5               push hl
1170+ A2E0 18 02            jr 5F
1171+ A2E2 2D           4 dec l
1172+ A2E3 E5               push hl
1173+ A2E4              ; ---
1174+ A2E4
1175+ A2E4              ;   Calcula el Puntero_objeto del disparo.
1176+ A2E4
1177+ A2E4 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2E7 04               inc b
1179+ A2E8 05               dec b
1180+ A2E9 28 04            jr z,2F
1181+ A2EB
1182+ A2EB              ;   Nos desplazamos por el índice de disparos.
1183+ A2EB
1184+ A2EB 2C           3 inc l
1185+ A2EC 2C               inc l
1186+ A2ED 10 FC            djnz 3B
1187+ A2EF
1188+ A2EF              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2EF CD 20 91     2 call Extrae_address
1190+ A2F2 E5               push hl
1191+ A2F3              ; ---
1192+ A2F3
1193+ A2F3              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2F3              ; HL en el 1er .db de la caja.
1195+ A2F3
1196+ A2F3 21 1C 89         ld hl,Disparo_Amad
1197+ A2F6
1198+ A2F6 06 02            ld b,2
1199+ A2F8
1200+ A2F8 D1           6 pop de
1201+ A2F9 73               ld (hl),e
1202+ A2FA 23               inc hl
1203+ A2FB 72               ld (hl),d
1204+ A2FC 23               inc hl
1205+ A2FD
1206+ A2FD 10 F9            djnz 6B
1207+ A2FF
1208+ A2FF C9               ret
1209+ A300
1210+ A300              Genera_coordenadas_de_disparo_Amadeus
1211+ A300
1212+ A300              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A300              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A300              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A300
1216+ A300 CD 20 91         call Extrae_address
1217+ A303 CD FB 94         call Genera_coordenadas
1218+ A306
1219+ A306 3D               dec a
1220+ A307
1221+ A307 21 6B 8C         ld hl,Coordenadas_disparo_certero
1222+ A30A 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A30B 23               inc hl
1224+ A30C 3A EB 8B         ld a,(Coordenada_X)
1225+ A30F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A310
1227+ A310 AF               xor a
1228+ A311 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A312
1230+ A312 C9               ret
1231+ A313
1232+ A313              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A313              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A313              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A313
1236+ A313              ; ----------------------------------------------
1237+ A313              ;
1238+ A313              ;   27/08/24
1239+ A313              ;
1240+ A313              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A313              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A313
1243+ A313              Detecta_impacto_en_disparo_de_Amadeus
1244+ A313
1245+ A313              Extraccion_de_datos
1246+ A313
1247+ A313 13               inc de
1248+ A314 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A315
1250+ A315 5E               ld e,(hl)
1251+ A316 23               inc hl
1252+ A317 56               ld d,(hl)
1253+ A318
1254+ A318 23               inc hl
1255+ A319
1256+ A319 4E               ld c,(hl)
1257+ A31A 23               inc hl
1258+ A31B 46               ld b,(hl)
1259+ A31C
1260+ A31C C5               push bc
1261+ A31D E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A31E
1263+ A31E              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A31E
1265+ A31E CD FF 99         call PreviousScan
1266+ A321 CD FF 99         call PreviousScan
1267+ A324
1268+ A324              Detecta_impacto_
1269+ A324
1270+ A324 1A               ld a,(de)
1271+ A325 A6               and (hl)
1272+ A326 C0               ret nz
1273+ A327
1274+ A327 13               inc de
1275+ A328 23               inc hl
1276+ A329
1277+ A329 1A               ld a,(de)
1278+ A32A A6               and (hl)
1279+ A32B C9               ret
1280+ A32C
1281+ A32C              ; -------------------------------------------------------------------------------------------------------------
1282+ A32C              ;
1283+ A32C              ;   25/11//24
1284+ A32C              ;
1285+ A32C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A32C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A32C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A32C              ;
1289+ A32C              ;   MODIFICA: HL,DE,BC y A.
1290+ A32C              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A32C              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A32C
1293+ A32C              Colision_Entidad_Amadeus
1294+ A32C
1295+ A32C              ; Posible contacto de entidad con Amadeus. ?????
1296+ A32C
1297+ A32C              ; Exclusiones:
1298+ A32C
1299+ A32C 3A 8B 8C         ld a,(Shield)
1300+ A32F A7               and a
1301+ A330 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A331
1303+ A331 21 61 8C         ld hl,Ctrl_3
1304+ A334 CB 76            bit 6,(hl)
1305+ A336 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A337
1307+ A337 21 68 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A33A CB 56            bit 2,(hl)
1309+ A33C C0               ret nz
1310+ A33D
1311+ A33D DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1312+ A340 FE 14        	cp $14
1313+ A342 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A343
1315+ A343 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A346 A7               and a
1317+ A347 C0               ret nz
1318+ A348
1319+ A348              Genera_coordenadas_X
1320+ A348
1321+ A348              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A348              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A348
1324+ A348              ;   Limpiamos almacenes.
1325+ A348
1326+ A348              ;    call Limpia_Coordenadas_X
1327+ A348
1328+ A348              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A348
1330+ A348 21 6D 8C         ld hl,Coordenadas_X_Entidad
1331+ A34B DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1332+ A34E CD 74 A3         call Guarda_coordenadas_X
1333+ A351
1334+ A351              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A351
1336+ A351 3A AF 89         ld a,(CX_Amadeus)
1337+ A354 CD 74 A3         call Guarda_coordenadas_X
1338+ A357
1339+ A357 DD E5            push ix
1340+ A359 CD 88 A3         call Compara_coordenadas_X
1341+ A35C DD E1            pop ix
1342+ A35E
1343+ A35E C0               ret nz
1344+ A35F
1345+ A35F 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1346+ A361 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1347+ A364
1348+ A364 DD 7D            ld a,ixl
1349+ A366 C6 04            add 4
1350+ A368 DD 6F            ld ixl,a
1351+ A36A
1352+ A36A DD 22 69 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1353+ A36E
1354+ A36E 21 68 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1355+ A371 CB D6            set 2,(hl)
1356+ A373
1357+ A373 C9               ret
1358+ A374
1359+ A374               ; ----- ----- ----- ----- -----
1360+ A374
1361+ A374 77           Guarda_coordenadas_X ld (hl),a
1362+ A375 3C               inc a
1363+ A376 2C               inc l
1364+ A377 77               ld (hl),a
1365+ A378 3C               inc a
1366+ A379 2C               inc l
1367+ A37A 77               ld (hl),a
1368+ A37B 2C               inc l
1369+ A37C C9               ret
1370+ A37D
1371+ A37D AF           Limpia_Coordenadas_X xor a
1372+ A37E 06 06            ld b,6
1373+ A380 21 70 8C         ld hl,Coordenadas_X_Amadeus
1374+ A383 77           1 ld (hl),a
1375+ A384 23               inc hl
1376+ A385 10 FC            djnz 1B
1377+ A387 C9               ret
1378+ A388
1379+ A388              ; ----- ----- ----- ----- -----
1380+ A388
1381+ A388              Compara_coordenadas_X
1382+ A388
1383+ A388 DD 21 6D 8C      ld ix,Coordenadas_X_Entidad
1384+ A38C DD 7E 00         ld a,(ix+0)
1385+ A38F CD 9D A3         call Comparando
1386+ A392 C8               ret z
1387+ A393
1388+ A393 3C               inc a
1389+ A394 CD AC A3         call Comparando_1
1390+ A397 C8               ret z
1391+ A398
1392+ A398 3C               inc a
1393+ A399 CD AC A3         call Comparando_1
1394+ A39C C9               ret
1395+ A39D
1396+ A39D              ; ----- ----- ----- ----- -----
1397+ A39D              ;
1398+ A39D              ;   4/12/23
1399+ A39D              ;
1400+ A39D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1401+ A39D
1402+ A39D              Comparando
1403+ A39D
1404+ A39D DD 2C            inc ixl
1405+ A39F DD 2C            inc ixl
1406+ A3A1 DD 2C            inc ixl
1407+ A3A3
1408+ A3A3 DD 46 00         ld b,(ix+0)
1409+ A3A6 DD 4E 01         ld c,(ix+1)
1410+ A3A9 DD 56 02         ld d,(ix+2)
1411+ A3AC
1412+ A3AC B8           Comparando_1 cp b
1413+ A3AD C8               ret z
1414+ A3AE B9               cp c
1415+ A3AF C8               ret z
1416+ A3B0 BA               cp d
1417+ A3B1 C9               ret
1418+ A3B2
1419+ A3B2              ; -----------------------------------------------------------------------
1420+ A3B2              ;
1421+ A3B2              ;   04/7/24
1422+ A3B2              ;
1423+ A3B2
1424+ A3B2              Detecta_colision_nave_entidad
1425+ A3B2
1426+ A3B2              ; Exclusiones:
1427+ A3B2
1428+ A3B2              ; Salimos de la rutina si no hay advertencia de posible colisión.
1429+ A3B2
1430+ A3B2 21 68 8C     	ld hl,Impacto2
1431+ A3B5 CB 56        	bit 2,(hl)
1432+ A3B7 C8           	ret z
1433+ A3B8
1434+ A3B8              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1435+ A3B8
1436+ A3B8 2A B5 89         ld hl,(Pamm_Amadeus)
1437+ A3BB CD 20 91         call Extrae_address
1438+ A3BE 54               ld d,h
1439+ A3BF 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1440+ A3C0
1441+ A3C0 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1442+ A3C3 06 10            ld b,16                                        ; Contador de scanlines en B.
1443+ A3C5 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1444+ A3C8
1445+ A3C8 C5           1 push bc
1446+ A3C9 06 03            ld b,3
1447+ A3CB E5               push hl
1448+ A3CC
1449+ A3CC              ; .db
1450+ A3CC
1451+ A3CC 1A           3 ld a,(de)
1452+ A3CD A7               and a
1453+ A3CE 20 03            jr nz,4F
1454+ A3D0
1455+ A3D0 2C               inc l
1456+ A3D1 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1457+ A3D3
1458+ A3D3 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1459+ A3D5 28 04            jr z,2F
1460+ A3D7
1461+ A3D7              ; Impacto.
1462+ A3D7 FD 2D            dec iyl
1463+ A3D9 28 22            jr z,5F
1464+ A3DB
1465+ A3DB 1C           2 inc e
1466+ A3DC 10 EE            djnz 3B
1467+ A3DE
1468+ A3DE E1               pop hl
1469+ A3DF
1470+ A3DF              ; Hay salto de línea en el puntero de impresión ???
1471+ A3DF
1472+ A3DF 7C               ld a,h
1473+ A3E0 D6 57            sub $57
1474+ A3E2 20 0A            jr nz,6F
1475+ A3E4
1476+ A3E4              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1477+ A3E4
1478+ A3E4 2A B3 89         ld hl,(p.imp.amadeus)
1479+ A3E7 3E 20            ld a,$20
1480+ A3E9 A7               and a
1481+ A3EA 85               add l
1482+ A3EB 6F               ld l,a
1483+ A3EC 18 01            jr 7F
1484+ A3EE
1485+ A3EE 24           6 inc h
1486+ A3EF
1487+ A3EF C1           7 pop bc
1488+ A3F0 10 D6            djnz 1B
1489+ A3F2
1490+ A3F2              ;   Fin de la comparativa.
1491+ A3F2
1492+ A3F2              ;   NO HAY COLISIÓN !!!!!.
1493+ A3F2              ;
1494+ A3F2              ;   .db (Impacto) de Amadeus a "0".
1495+ A3F2              ;   RES el bit2 de (Impacto2).
1496+ A3F2              ;
1497+ A3F2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1498+ A3F2              ;   Lo colocamos a "0".
1499+ A3F2
1500+ A3F2 21 68 8C         ld hl,Impacto2
1501+ A3F5 CB 96            res 2,(hl)
1502+ A3F7 2A 69 8C         ld hl,(Entidad_sospechosa_de_colision)
1503+ A3FA 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1504+ A3FC C9               ret
1505+ A3FD
1506+ A3FD              ;   COLISIÓN !!!!!.
1507+ A3FD              ;
1508+ A3FD              ;   .db (Impacto) de Amadeus a "1".
1509+ A3FD              ;   SET el bit3 de (Impacto2).
1510+ A3FD              ;
1511+ A3FD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1512+ A3FD
1513+ A3FD E1           5 pop hl
1514+ A3FE C1               pop bc
1515+ A3FF
1516+ A3FF 21 B2 89         ld hl,Impacto_Amadeus
1517+ A402 36 01            ld (hl),1
1518+ A404 21 68 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1519+ A407 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1520+ A409
1521+ A409 11 C0 87         ld de,Indice_Explosion_entidades
1522+ A40C 2A 69 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1523+ A40F
1524+ A40F 23               inc hl
1525+ A410 23               inc hl
1526+ A411 23               inc hl
1527+ A412
1528+ A412 73               ld (hl),e
1529+ A413 23               inc hl
1530+ A414 72               ld (hl),d
1531+ A415
1532+ A415              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1533+ A415
1534+ A415 11 60 88         ld de,Indice_Explosion_Amadeus
1535+ A418 21 B5 89         ld hl,Pamm_Amadeus
1536+ A41B
1537+ A41B 73               ld (hl),e
1538+ A41C 23               inc hl
1539+ A41D 72               ld (hl),d
1540+ A41E
1541+ A41E C9               ret
1542+ A41F
1543+ A41F
1544+ A41F
# file closed: Disparo.asm
2129  A41F
2130  A41F              	SAVESNA "Pruebas.sna", START
2131  A41F
2132  A41F
2133  A41F
2134  A41F
# file closed: Banco_de_pruebas.asm
