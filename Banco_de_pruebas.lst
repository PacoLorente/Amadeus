# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 26 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 41 A0     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 4E 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD 16 91     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 4C 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD 26 91     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo_Amadeus defw Disparo_0
  12+ 8372 7C 83        	defw Disparo_f9
  13+ 8374 80 83        	defw Disparo_fb
  14+ 8376 84 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  19+ 837C              ; Disparo (CTRL_DESPLZ)="f9"
  20+ 837C 00 60        Disparo_f9 DEFB $00,$60
  21+ 837E 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  22+ 8380              ; Disparo (CTRL_DESPLZ)="fb"
  23+ 8380 18 00        Disparo_fb DEFB $18,$00
  24+ 8382 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  25+ 8384              ; Disparo (CTRL_DESPLZ)="fd"
  26+ 8384 06 00        Disparo_fd DEFB $06,$00
  27+ 8386 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  28+ 8388
  29+ 8388              ; ----------------------------------------------------------------------------------------
  30+ 8388
  31+ 8388              ; Badsat_izq. 2x2.
  32+ 8388
  33+ 8388 98 83        Indice_Badsat_izq defw Badsat_izquierda
  34+ 838A 00 85        	defw Badsat_izq_fe
  35+ 838C C0 84        	defw Badsat_izq_fd
  36+ 838E 90 84        	defw Badsat_izq_fc
  37+ 8390 60 84        	defw Badsat_izq_fb
  38+ 8392 30 84        	defw Badsat_izq_fa
  39+ 8394 00 84        	defw Badsat_izq_f9
  40+ 8396 C8 83        	defw Badsat_izq_f8
  41+ 8398
  42+ 8398 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  43+ 839B 02 14 00     	DEFB 	$02,$14,$00
  44+ 839E 02 2A 00     	DEFB 	$02,$2A,$00
  45+ 83A1 02 55 00     	DEFB 	$02,$55,$00
  46+ 83A4 02 AA 00     	DEFB	$02,$AA,$00
  47+ 83A7 02 54 00     	DEFB 	$02,$54,$00
  48+ 83AA 7F E8 00     	DEFB 	$7F,$E8,$00
  49+ 83AD 03 60 00     	DEFB 	$03,$60,$00
  50+ 83B0 0A E0 00     	DEFB	$0A,$E0,$00
  51+ 83B3 17 F8 00     	DEFB 	$17,$F8,$00
  52+ 83B6 2B E8 00     	DEFB 	$2B,$E8,$00
  53+ 83B9 54 40 00     	DEFB 	$54,$40,$00
  54+ 83BC AA 60 00     	DEFB	$AA,$60,$00
  55+ 83BF 54 00 00     	DEFB 	$54,$00,$00
  56+ 83C2 28 00 00     	DEFB 	$28,$00,$00
  57+ 83C5 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  58+ 83C8
  59+ 83C8 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  59+ 83CC 0A 00 01 15
  60+ 83D0 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  60+ 83D4 01 55 00 01
  61+ 83D8 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  61+ 83DC 00 01 B0 00
  62+ 83E0 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  62+ 83E4 FC 00 15 F4
  63+ 83E8 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  63+ 83EC 55 30 00 2A
  64+ 83F0 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  64+ 83F4 00 08 00 00
  65+ 83F8
  66+ 83F8              	org $8400
  67+ 8400
  68+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  68+ 8404 85 00 00 8A
  69+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  69+ 840C 00 AA 80 00
  70+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  70+ 8414 00 00 D8 00
  71+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  71+ 841C FE 00 0A FA
  72+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  72+ 8424 2A 98 00 15
  73+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  73+ 842C 00 04 00 00
  74+ 8430
  75+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  75+ 8434 42 80 00 45
  76+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  76+ 843C 00 55 40 00
  77+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  77+ 8444 00 00 6C 00
  78+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  78+ 844C FF 00 05 7D
  79+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  79+ 8454 15 4C 00 0A
  80+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  80+ 845C 00 02 00 00
  81+ 8460
  82+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  82+ 8464 21 40 00 22
  83+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  83+ 846C 00 2A A0 00
  84+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  84+ 8474 80 00 36 00
  85+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  85+ 847C 7F 80 02 BE
  86+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  86+ 8484 0A A6 00 05
  87+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  87+ 848C 00 01 00 00
  88+ 8490
  89+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  89+ 8494 10 A0 00 11
  90+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  90+ 849C 00 15 50 00
  91+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  91+ 84A4 40 00 1B 00
  92+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  92+ 84AC BF C0 01 5F
  93+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  93+ 84B4 05 53 00 02
  94+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  94+ 84BC 00 00 80 00
  95+ 84C0
  96+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  96+ 84C4 08 50 00 08
  97+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  97+ 84CC 00 0A A8 00
  98+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  98+ 84D4 A0 00 0D 80
  99+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  99+ 84DC 5F F8 00 AF
 100+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 100+ 84E4 02 A9 00 01
 101+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 101+ 84EC 00 00 40 00
 102+ 84F0
 103+ 84F0              	org $8500
 104+ 8500
 105+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 105+ 8504 04 28 00 04
 106+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 106+ 850C 00 05 54 00
 107+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 107+ 8514 D0 00 06 C0
 108+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 108+ 851C 2F FC 00 57
 109+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 109+ 8524 01 54 80 00
 110+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 110+ 852C 00 00 20 00
 111+ 8530
 112+ 8530
 113+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 114+ 8532 70 85        	defw Badsat_der_f8
 115+ 8534 A0 85        	defw Badsat_der_f9
 116+ 8536 D0 85        	defw Badsat_der_fa
 117+ 8538 00 86        	defw Badsat_der_fb
 118+ 853A 30 86        	defw Badsat_der_fc
 119+ 853C 60 86        	defw Badsat_der_fd
 120+ 853E 90 86        	defw Badsat_der_fe
 121+ 8540
 122+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 123+ 8543 28 40 00     	DEFB    $28,$40,$00
 124+ 8546 54 40 00     	DEFB	$54,$40,$00
 125+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 126+ 854C 55 40 00     	DEFB	$55,$40,$00
 127+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 128+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 129+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 130+ 8558 07 50 00     	DEFB	$07,$50,$00
 131+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 132+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 133+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 134+ 8564 06 55 00     	DEFB	$06,$55,$00
 135+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 136+ 856A 00 14 00     	DEFB	$00,$14,$00
 137+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 138+ 8570
 139+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 139+ 8574 20 00 2A 20
 140+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 140+ 857C 2A A0 00 15
 141+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 141+ 8584 00 03 60 00
 142+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 142+ 858C F4 00 0B EA
 143+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 143+ 8594 03 2A 80 00
 144+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 144+ 859C 00 00 04 00
 145+ 85A0
 146+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 146+ 85A4 10 00 15 10
 147+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 147+ 85AC 15 50 00 0A
 148+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 148+ 85B4 80 01 B0 00
 149+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 149+ 85BC FA 00 05 F5
 150+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 150+ 85C4 01 95 40 00
 151+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 151+ 85CC 00 00 02 00
 152+ 85D0
 153+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 153+ 85D4 08 00 0A 88
 154+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 154+ 85DC 0A A8 00 05
 155+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 155+ 85E4 C0 00 D8 00
 156+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 156+ 85EC FD 00 02 FA
 157+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 157+ 85F4 00 CA A0 00
 158+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 158+ 85FC 80 00 01 00
 159+ 8600
 160+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 160+ 8604 84 00 05 44
 161+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 161+ 860C 05 54 00 02
 162+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 162+ 8614 E0 00 6C 00
 163+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 163+ 861C FE 80 01 7D
 164+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 164+ 8624 00 65 50 00
 165+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 165+ 862C 40 00 00 80
 166+ 8630
 167+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 167+ 8634 42 00 02 A2
 168+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 168+ 863C 02 AA 00 01
 169+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 169+ 8644 F0 00 36 00
 170+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 170+ 864C FF 40 00 BE
 171+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 171+ 8654 00 32 A8 00
 172+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 172+ 865C A0 00 00 40
 173+ 8660
 174+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 174+ 8664 A1 00 01 51
 175+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 175+ 866C 01 55 00 00
 176+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 176+ 8674 F8 00 1B 00
 177+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 177+ 867C FF A0 00 1F
 178+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 178+ 8684 00 09 54 00
 179+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 179+ 868C 50 00 00 20
 180+ 8690
 181+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 181+ 8694 50 80 00 A8
 182+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 182+ 869C 00 AA 80 00
 183+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 183+ 86A4 FC 00 0D 80
 184+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 184+ 86AC FF D0 00 0F
 185+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 185+ 86B4 00 04 AA 00
 186+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 186+ 86BC 28 00 00 10
 187+ 86C0
 188+ 86C0              ; ----------------------------------------------------------------------------------------
 189+ 86C0
 190+ 86C0              ; Amadeus. 2x2.
 191+ 86C0
 192+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 193+ 86C2 00 00        	defw 0
 194+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 195+ 86C6 00 00        	defw 0
 196+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 197+ 86CA 00 00        	defw 0
 198+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 199+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 200+ 86D0
 201+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 202+ 86D2 00 00        	defw 0
 203+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 204+ 86D6 00 00        	defw 0
 205+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 206+ 86DA 00 00        	defw 0
 207+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 208+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 209+ 86E0
 210+ 86E0              	org $8700
 211+ 8700
 212+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 213+ 8703 23 C4 00     	DEFB	$23,$C4,0
 214+ 8706 26 64 00     	DEFB	$26,$64,0
 215+ 8709 24 24 00     	DEFB	$24,$24,0
 216+ 870C 2C 34 00     	DEFB	$2C,$34,0
 217+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 218+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 219+ 8715 67 E6 00     	DEFB	$67,$E6,0
 220+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 221+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 222+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 223+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 224+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 225+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 226+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 227+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 228+ 8730
 229+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 229+ 8734 F1 00 09 99
 230+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 230+ 873C 0B 0D 00 1B
 231+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 231+ 8744 80 19 F9 80
 232+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 232+ 874C F3 C0 3D FB
 233+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 233+ 8754 3E F7 C0 3E
 234+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 234+ 875C 40 1C 63 80
 235+ 8760
 236+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 236+ 8764 3C 40 02 66
 237+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 237+ 876C 02 C3 40 06
 238+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 238+ 8774 60 06 7E 60
 239+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 239+ 877C 3C F0 0F 7E
 240+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 240+ 8784 0F BD F0 0F
 241+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 241+ 878C 10 07 18 E0
 242+ 8790
 243+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 243+ 8794 8F 10 00 99
 244+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 244+ 879C 00 B0 D0 01
 245+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 245+ 87A4 D8 01 9F 98
 246+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 246+ 87AC CF 3C 03 DF
 247+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 247+ 87B4 03 EF 7C 03
 248+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 248+ 87BC 44 01 C6 38
 249+ 87C0
 250+ 87C0              ; ----------------------------------------------------------------------------------------
 251+ 87C0
 252+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 253+ 87C2 00 88        	defw Explosion_entidades_2
 254+ 87C4 30 88        	defw Explosion_entidades_3
 255+ 87C6
 256+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 257+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 258+ 87CC 04 38 40     	DEFB	$04,$38,$40
 259+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 260+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 261+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 262+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 263+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 264+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 265+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 266+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 267+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 268+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 269+ 87ED 03 00 40     	DEFB	$03,$00,$40
 270+ 87F0 04 00 00     	DEFB	$04,$00,$00
 271+ 87F3 08 00 00     	DEFB	$08,$00,$00
 272+ 87F6
 273+ 87F6              	org $8800
 274+ 8800
 275+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 275+ 8804 38 10 03 BC
 276+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 276+ 880C 04 06 C0 00
 277+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 277+ 8814 00 03 DD 80
 278+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 278+ 881C 3A 70 01 9C
 279+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 279+ 8824 04 F8 80 06
 280+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 280+ 882C 00 00 00 00
 281+ 8830
 282+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 282+ 8834 00 20 08 00
 283+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 283+ 883C 00 06 00 00
 284+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 284+ 8844 00 00 14 30
 285+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 285+ 884C 38 00 01 08
 286+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 286+ 8854 00 80 00 04
 287+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 287+ 885C 10 08 00 20
 288+ 8860
 289+ 8860              ; ------------------------------------------
 290+ 8860
 291+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 292+ 8862 96 88        	defw Explosion_Amadeus_2
 293+ 8864 C6 88        	defw Explosion_Amadeus_3
 294+ 8866
 295+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 296+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 297+ 886C 02 66 56     	DEFB	$02,$66,$56
 298+ 886F 02 42 48     	DEFB	$02,$42,$48
 299+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 300+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 301+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 302+ 887B 06 79 68     	DEFB	$06,$79,$68
 303+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 304+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 305+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 306+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 307+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 308+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 309+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 310+ 8893 07 19 80     	DEFB	$07,$19,$80
 311+ 8896
 312+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 313+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 314+ 889C 00 66 56     	DEFB	$00,$66,$56
 315+ 889F 04 42 48     	DEFB	$04,$42,$48
 316+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 317+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 318+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 319+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 320+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 321+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 322+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 323+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 324+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 325+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 326+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 327+ 88C3 07 19 80     	DEFB	$07,$19,$80
 328+ 88C6
 329+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 330+ 88C9 00 00 00     	DEFB	$00,$00,$00
 331+ 88CC 00 00 00     	DEFB	$00,$00,$00
 332+ 88CF 00 00 40     	DEFB	$00,$00,$40
 333+ 88D2 00 00 30     	DEFB	$00,$00,$30
 334+ 88D5 00 00 08     	DEFB	$00,$00,$08
 335+ 88D8 00 82 40     	DEFB	$00,$82,$40
 336+ 88DB 04 04 68     	DEFB	$04,$04,$68
 337+ 88DE 04 20 58     	DEFB	$04,$20,$58
 338+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 339+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 340+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 341+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 342+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 343+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 344+ 88F3 07 11 80     	DEFB	$07,$11,$80
 345+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 143  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 144  8BB3
 145  8BB3              ; --------------------------------------------------------------------------------
 146  8BB3              ;
 147  8BB3              ; 12/05/24
 148  8BB3              ;
 149  8BB3              ; Parámetros DRAW.
 150  8BB3              ;
 151  8BB3
 152  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB3
 154  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BB4              ;															- Patrón de movimiento.
 156  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BB6
 159  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BB7
 162  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BB7              ; Ejemplos.
 165  8BB7
 166  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BB7
 172  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BB8
 176  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BBA
 179  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BBC
 181  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BBC
 183  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 185  8BBE
 186  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BBE
 188  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BBF
 194  8BBF 00           Ctrl_2 db 0
 195  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC0              ;
 203  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC0              ;														BIT 4, ???
 209  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC0
 211  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC1              ;
 217  8BC1              ; 														DESCRIPCIÖN:
 218  8BC1              ;
 219  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC1              ;
 233  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC1
 237  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC1
 239  8BC1 00           Filas db 0												; Filas. [DRAW]
 240  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BC7
 244  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BC7
 246  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BC8
 250  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BC8
 252  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BC8              ;
 254  8BC8              ;	COLORES: 0 ..... NEGRO
 255  8BC8              ;    		 1 ..... AZUL
 256  8BC8              ; 			 2 ..... ROJO
 257  8BC8              ;			 3 ..... MAGENTA
 258  8BC8              ; 			 4 ..... VERDE
 259  8BC8              ; 			 5 ..... CIAN
 260  8BC8              ;			 6 ..... AMARILLO
 261  8BC8              ; 			 7 ..... BLANCO
 262  8BC8
 263  8BC8 00 00        Indice_Sprite_der defw 0
 264  8BCA 00 00        Indice_Sprite_izq defw 0
 265  8BCC 00 00        Puntero_DESPLZ_der defw 0
 266  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD0
 268  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD3 00           Columnas db 0
 271  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD7
 275  8BD7              ; variables de control general.
 276  8BD7
 277  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BD8
 279  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BD8
 281  8BD8              Perfiles_de_velocidad
 282  8BD8
 283  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BDC
 288  8BDC              ; Contadores de 16 bits.
 289  8BDC
 290  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BE4
 295  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BE4
 297  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BEA              ;
 301  8BEA              ;
 302  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BEB 00           Incrementa_puntero_backup db 0
 306  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF0              ;
 312  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF0              ;
 316  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF0              ;
 321  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF0
 325  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF1
 327  8BF1              ;														DESCRIPCIÓN:
 328  8BF1              ;
 329  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF1
 336  8BF1              ;														BIT 3, Recarga de nueva oleada.
 337  8BF1              ;														BIT 4, Recarga de nueva oleada.
 338  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF1              ;														BIT 6, **** Frame completo.
 340  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF1
 342  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF3
 347  8BF3              ; Gestión de ENTIDADES y CAJAS.
 348  8BF3
 349  8BF3 00 00        Puntero_store_caja defw 0
 350  8BF5 00 00        Puntero_restore_caja defw 0
 351  8BF7 00 00        Indice_restore_caja defw 0
 352  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8BFC
 356  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C00              ;														; _ puntero (Indice_entidades).
 359  8C00
 360  8C00              ;---------------------------------------------------------------------------------------------------------------
 361  8C00              ;
 362  8C00              ;	11/09/24
 363  8C00              ;
 364  8C00              ;	Álbumes.
 365  8C00
 366  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C02              ;														; _variable para almacenar lo posición del puntero_
 368  8C02              ; 														; _de pila, SP.
 369  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C04
 372  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C04
 374  8C04 00 00        Album_de_pintado defw 0
 375  8C06 00 00        Album_de_borrado defw 0
 376  8C08 00 00        Album_de_pintado_Amadeus defw 0
 377  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 378  8C0C 00 00        Album_de_pintado_disparos defw 0
 379  8C0E 00 00        Album_de_borrado_disparos defw 0
 380  8C10
 381  8C10 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C12 00           Num_de_bytes_album_de_disparos db 0
 383  8C13 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C14
 385  8C14 07           Numero_de_disparos_de_entidades db 7
 386  8C15
 387  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C17
 390  8C17 00 00        Puntero_rancio_disparos_album defw 0
 391  8C19
 392  8C19 00 00        Techo_Scanlines_album defw 0
 393  8C1B 00 00        Techo_Scanlines_album_2 defw 0
 394  8C1D 00           Switch db 0
 395  8C1E 00 00        Techo defw 0
 396  8C20 00 00        Scanlines_album_SP defw 0
 397  8C22 00 89        India_SP defw Tabla_de_pintado
 398  8C24 03 89        India_2_SP defw Tabla_de_pintado+3
 399  8C26
 400  8C26 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  8C27              ;
 402  8C27              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  8C27              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  8C27              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  8C27              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 406  8C27              ;																Habilita el borrado/pintado de sprites.
 407  8C27              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 408  8C27              ;																_ a la baja.
 409  8C27              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 410  8C27              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 411  8C27              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 412  8C27              ; 																_ el último frame de la explosión de nuestra nave.
 413  8C27              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 414  8C27              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 415  8C27
 416  8C27 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  8C28              ;
 418  8C28              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  8C28              ;
 420  8C28              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  8C28              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  8C28              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  8C28              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  8C28              ;
 425  8C28              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  8C28              ;															_ masticados ya generados.
 427  8C28              ;
 428  8C28              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  8C28              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  8C28              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  8C28              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  8C28
 433  8C28 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 434  8C29              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 435  8C29              ; Gestión de Disparos.
 436  8C29
 437  8C29 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 438  8C2B
 439  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 440  8C2C
 441  8C2C              ;
 442  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 443  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 444  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 445  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 446  8C2C
 447  8C2C
 448  8C2C
 449  8C2C
 450  8C2C
 451  8C2C
 452  8C2C
 453  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 454  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 455  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 456  8C2E
 457  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 458  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 459  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 461  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 462  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 463  8C36
 464  8C36              ;---------------------------------------------------------------------------------------------------------------
 465  8C36
 466  8C36              ; Relojes y temporizaciones.
 467  8C36
 468  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 469  8C37 05           Clock_explosion_Amadeus db 5
 470  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 471  8C39
 472  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 473  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 474  8C3D 00           DB_RND_disparos db 0
 475  8C3E
 476  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 477  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 478  8C41              ;														; Repite la oleada de entidades.
 479  8C41 90           CLOCK_disparo_entidad_MASTER db $90						; Reloj, decreciente.
 480  8C42 90           CLOCK_disparo_entidad db $90
 481  8C43
 482  8C43              ;---------------------------------------------------------------------------------------------------------------
 483  8C43
 484  8C43              ; Gestión de NIVELES.
 485  8C43
 486  8C43 00           Nivel db 0												; Nivel actual del juego.
 487  8C44 00 00        Puntero_indice_NIVELES defw 0
 488  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 489  8C48              ; 														; _ que definen el NIVEL.
 490  8C48
 491  8C48              ; ---------------------------------------------------------------------------------------------------------------
 492  8C48
 493  8C48              ; Temporizaciones Shield.
 494  8C48
 495  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 496  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 497  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 498  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 499  8C50 00           Shield_3 db 0
 500  8C51
 501  8C51 06           Lives db 6
 502  8C52
 503  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 504  8C52              ;
 505  8C52              ;	5/1/24
 506  8C52
 507  8C52              START
 508  8C52
 509  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 510  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 511  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 512  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 513  8C5B F3           	DI
 514  8C5C
 515  8C5C              ; Limpiamos pantalla.
 516  8C5C
 517  8C5C 3E 07        	ld a,%00000111
 518  8C5E CD B3 94     	call Cls
 519  8C61 CD 0B 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 520  8C64
 521  8C64              ; INICIALIZACIÓN.
 522  8C64
 523  8C64 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 524  8C66 CD 58 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 525  8C69 CD A2 8E     	call Extrae_numero_aleatorio_y_avanza
 526  8C6C
 527  8C6C 6F           	ld l,a
 528  8C6D 26 00        	ld h,0
 529  8C6F 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 530  8C72
 531  8C72              ;	Inicializa 1er Nivel.
 532  8C72
 533  8C72 21 94 8B     	ld hl,Indice_de_niveles
 534  8C75 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 535  8C78 CD 88 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 536  8C7B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 537  8C7B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 538  8C7B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 539  8C7B
 540  8C7B              ;	Inicia los álbumes de líneas.
 541  8C7B
 542  8C7B CD 5B 90     	call Inicia_albumes_de_lineas
 543  8C7E              ;
 544  8C7E CD 6B 90     	call Inicia_albumes_de_lineas_Amadeus
 545  8C81 CD 78 90     	call Inicia_albumes_de_disparos
 546  8C84
 547  8C84 CD A1 90     	call Inicia_Puntero_Disparo_Entidades
 548  8C87
 549  8C87 CD CD 92     4 call Inicia_Entidades
 550  8C8A CD 30 93     	call Inicia_Amadeus
 551  8C8D
 552  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 553  8C8D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 554  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 555  8C8D
 556  8C8D 11 6D 89     	ld de,Amadeus_BOX
 557  8C90 CD 83 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 558  8C93 CD 73 93     	call Limpiamos_bandeja_DRAW
 559  8C96
 560  8C96              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 561  8C96
 562  8C96 06 3C        	ld b,60
 563  8C98 CD 55 9D     2 call Amadeus_a_izquierda
 564  8C9B 10 FB        	djnz 2B
 565  8C9D
 566  8C9D CD 39 90     	call Genera_datos_de_impresion_Amadeus
 567  8CA0
 568  8CA0              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 569  8CA0
 570  8CA0 CD 8B 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 571  8CA3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 572  8CA3
 573  8CA3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 574  8CA3              ; (Esto se dá cuando se inicia una nueva oleada).
 575  8CA3
 576  8CA3              ;	ld a,(Ctrl_1)
 577  8CA3              ;	bit 3,a
 578  8CA3              ;	jr nz,5F											 ; Loop
 579  8CA3
 580  8CA3              ;	ld de,Amadeus_db
 581  8CA3              ;	call Store_Amadeus
 582  8CA3
 583  8CA3              ; 	INICIA DISPAROS !!!!!
 584  8CA3
 585  8CA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 586  8CA3
 587  8CA3              ;5 call Inicia_punteros_de_cajas
 588  8CA3              ;	call Restore_entidad
 589  8CA3
 590  8CA3              ;	ld a,(Ctrl_1)
 591  8CA3              ;	bit 3,a
 592  8CA3              ;	jr z,6F
 593  8CA3
 594  8CA3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 595  8CA3
 596  8CA3              ;	ld hl,Ctrl_1
 597  8CA3              ;	res 3,(hl)
 598  8CA3              ;	jr Main
 599  8CA3
 600  8CA3              ; Damos por concluida la construcción del FRAME.
 601  8CA3              ;
 602  8CA3
 603  8CA3 CD 16 91     	call Inicia_Shield
 604  8CA6
 605  8CA6
 606  8CA6 2A 20 8C     6 ld hl,(Scanlines_album_SP)
 607  8CA9 22 19 8C     	ld (Techo_Scanlines_album),hl
 608  8CAC
 609  8CAC 2A 06 8C     	ld hl,(Album_de_borrado)
 610  8CAF 22 20 8C     	ld (Scanlines_album_SP),hl
 611  8CB2
 612  8CB2 21 00 89     	ld hl,Tabla_de_pintado
 613  8CB5 22 22 8C     	ld (India_SP),hl
 614  8CB8
 615  8CB8 21 26 8C     	ld hl,Ctrl_3
 616  8CBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 617  8CBD CB D6        	set 2,(hl)
 618  8CBF CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 619  8CC1
 620  8CC1 FB           	ei 													; Ha de apuntar a $5c3a.
 621  8CC2
 622  8CC2 76           	halt
 623  8CC3
 624  8CC3              ; ------------------------------------
 625  8CC3
 626  8CC3              Main
 627  8CC3              ;
 628  8CC3              ; 22/08/24
 629  8CC3
 630  8CC3              ; Gestión de disparos.
 631  8CC3
 632  8CC3 CD 93 9F     	call Limpia_album_de_borrado_disparos
 633  8CC6 CD 89 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 634  8CC9 CD CF 9F     	call Motor_Disparos
 635  8CCC
 636  8CCC              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 637  8CCC              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 638  8CCC              ; Este hecho lo indica el bit2 de (Impacto2).
 639  8CCC
 640  8CCC CD 8D A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 641  8CCF
 642  8CCF              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 643  8CCF
 644  8CCF 21 42 8C     	ld hl,CLOCK_disparo_entidad
 645  8CD2 35           	dec (hl)
 646  8CD3 CC CC 8D     	call z,Autoriza_disparo_de_entidades
 647  8CD6
 648  8CD6 2A 3E 8C     	ld hl,(Clock_next_entity)
 649  8CD9 ED 4B 78 5C  	ld bc,(FRAMES)
 650  8CDD A7           	and a
 651  8CDE ED 42        	sbc hl,bc
 652  8CE0 20 16        	jr nz,1F
 653  8CE2
 654  8CE2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 655  8CE2              ; _ (Clock_next_entity) para la siguiente entidad.
 656  8CE2
 657  8CE2 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 658  8CE5 47           	ld b,a
 659  8CE6 3A FB 8B     	ld a,(Entidades_en_curso)
 660  8CE9 B8           	cp b
 661  8CEA 28 0C        	jr z,1F
 662  8CEC 30 0A        	jr nc,1F
 663  8CEE
 664  8CEE 3C           	inc a
 665  8CEF 32 FB 8B     	ld (Entidades_en_curso),a
 666  8CF2
 667  8CF2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 668  8CF2
 669  8CF2 CD A2 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 670  8CF5 CD BE 8E     	call Define_Clock_next_entity
 671  8CF8
 672  8CF8 3A FB 8B     1 ld a,(Entidades_en_curso)
 673  8CFB A7           	and a
 674  8CFC CA 7A 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 675  8CFF 47           	ld b,a												; No hay entidades que gestionar.
 676  8D00
 677  8D00              ; ( Código que ejecutamos con cada entidad: ).
 678  8D00
 679  8D00              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 680  8D00              ;
 681  8D00              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 682  8D00
 683  8D00 21 00 89     	ld hl,Tabla_de_pintado
 684  8D03 22 22 8C     	ld (India_SP),hl
 685  8D06
 686  8D06 21 26 8C     	ld hl,Ctrl_3
 687  8D09 CB D6        	set 2,(hl)
 688  8D0B CD 5E 8E     	call Change
 689  8D0E
 690  8D0E C5           2 push bc 												; Nº de entidades en curso.
 691  8D0F
 692  8D0F CD E3 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 693  8D12 ED 5B 20 8C  	ld de,(Scanlines_album_SP)
 694  8D16
 695  8D16              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 696  8D16
 697  8D16              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 698  8D16              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 699  8D16
 700  8D16 3A 2B 8C     	ld a,(Impacto2)
 701  8D19 CB 5F        	bit 3,a
 702  8D1B C4 59 9F     	call nz,Compara_con_coordenadas_de_disparo
 703  8D1E
 704  8D1E 3A B7 8B     	ld a,(Impacto)
 705  8D21 CB 4F        	bit 1,a
 706  8D23 C4 F3 91     	call nz,Genera_explosion
 707  8D26 20 31        	jr nz,Gestiona_siguiente_entidad
 708  8D28
 709  8D28 3A B7 8B     	ld a,(Impacto)
 710  8D2B A7           	and a
 711  8D2C 28 0C        	jr z,3F
 712  8D2E
 713  8D2E              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D2E
 715  8D2E              ; 5/7/24
 716  8D2E              ; Nota importante:
 717  8D2E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D2E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D2E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D2E
 721  8D2E 3A 71 89     	ld a,(Impacto_Amadeus)
 722  8D31 A7           	and a
 723  8D32 C4 F3 91     	call nz,Genera_explosion
 724  8D35 20 22        	jr nz,Gestiona_siguiente_entidad
 725  8D37
 726  8D37              ; Falsa colisión !!!
 727  8D37
 728  8D37 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8D3A
 730  8D3A              ; -------------------------------------------
 731  8D3A
 732  8D3A CD 02 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8D3D CD 3E 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8D40 CD F2 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 735  8D43 CD F3 94     	call Genera_datos_de_impresion
 736  8D46 CD 96 93     	call Decrementa_Contador_de_mov_masticados
 737  8D49
 738  8D49              ; -------------------------------------------
 739  8D49
 740  8D49              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 741  8D49
 742  8D49 2A B8 8B     	ld hl,(Puntero_de_impresion)
 743  8D4C CD C7 94     	call Genera_coordenadas
 744  8D4F
 745  8D4F              ; TODO: Generamos disparo ???
 746  8D4F
 747  8D4F 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 748  8D52 A7           	and a
 749  8D53 C4 EE 8D     	call nz,Entidad_genera_disparo_si_procede
 750  8D56
 751  8D56 CD 0B A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 752  8D59
 753  8D59              Gestiona_siguiente_entidad
 754  8D59
 755  8D59 CD 68 93      	call Store_Restore_cajas
 756  8D5C C1           	pop bc
 757  8D5D 10 AF        	djnz 2B
 758  8D5F
 759  8D5F              ; Hemos gestionado todas las entidades.
 760  8D5F
 761  8D5F AF           	xor a
 762  8D60 32 16 8C     	ld (Permiso_de_disparo_Entidades),a							; Volvemos a deshabilitar el permiso de disparo para las entidades hasta que (CLOCK_disparo_entidad) llegue a "0".
 763  8D63
 764  8D63              ; ----- ----- -----
 765  8D63
 766  8D63 CD 16 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 767  8D66 CD 2D 8F     	call Ordena_tabla_de_impresion
 768  8D69 CD 8B 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 769  8D6C
 770  8D6C              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 771  8D6C              ; Hemos gestionado todas las unidades.
 772  8D6C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 773  8D6C
 774  8D6C              ;	ld hl,Ctrl_1
 775  8D6C              ;	res 2,(hl)
 776  8D6C
 777  8D6C CD D3 8E     	call Borra_diferencia
 778  8D6F
 779  8D6F 3A 26 8C     	ld a,(Ctrl_3)
 780  8D72 CB 5F        	bit 3,a
 781  8D74 20 04        	jr nz,Gestion_de_Amadeus
 782  8D76
 783  8D76 EB           	ex de,hl
 784  8D77 71           	ld (hl),c
 785  8D78 2C           	inc l
 786  8D79 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 787  8D7A
 788  8D7A
 789  8D7A              ;! GESTIONA AMADEUS !!!!!!!!!!
 790  8D7A
 791  8D7A              Gestion_de_Amadeus
 792  8D7A
 793  8D7A 21 26 8C     	ld hl,Ctrl_3
 794  8D7D CB 76        	bit 6,(hl)
 795  8D7F 28 13        	jr z,Amadeus_vivo
 796  8D81
 797  8D81              ; Amadeus ha sido destruido.
 798  8D81              ; Decrementa (Temp_new_live).
 799  8D81
 800  8D81 21 38 8C     	ld hl,Temp_new_live
 801  8D84 35           	dec (hl)
 802  8D85 20 26        	jr nz,End_frame
 803  8D87
 804  8D87              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 805  8D87
 806  8D87 21 51 8C     	ld hl,Lives
 807  8D8A 35           	dec (hl)
 808  8D8B
 809  8D8B              ;! Fin del juego
 810  8D8B
 811  8D8B F3           	di
 812  8D8C 28 FE        	jr z,$
 813  8D8E FB           	ei
 814  8D8F
 815  8D8F              ; Nueva nave.
 816  8D8F
 817  8D8F CD 04 8E     	call Reinicia_Amadeus
 818  8D92 18 19        	jr End_frame
 819  8D94
 820  8D94              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 821  8D94
 822  8D94              Amadeus_vivo
 823  8D94
 824  8D94 3A 71 89     	ld a,(Impacto_Amadeus)
 825  8D97 A7           	and a
 826  8D98 C4 23 92     	call nz, Genera_explosion_Amadeus
 827  8D9B 20 10        	jr nz, End_frame
 828  8D9D
 829  8D9D CD D0 91     	call Teclado
 830  8DA0
 831  8DA0 21 26 8C     	ld hl,Ctrl_3
 832  8DA3 CB 6E        	bit 5,(hl)
 833  8DA5 28 06        	jr z,End_frame
 834  8DA7
 835  8DA7              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 836  8DA7
 837  8DA7 CD 79 8E     	call Change_Amadeus
 838  8DAA CD 39 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 839  8DAD
 840  8DAD              End_frame
 841  8DAD
 842  8DAD              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 843  8DAD              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 844  8DAD
 845  8DAD CD 72 A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 846  8DB0 CD A9 9F     	call Calcula_bytes_pintado_disparos
 847  8DB3 CD B6 9F     	call Limpia_album_de_pintado_disparos
 848  8DB6
 849  8DB6              ; ------------ ------------- --------------
 850  8DB6
 851  8DB6 2A 06 8C     	ld hl,(Album_de_borrado)
 852  8DB9 22 20 8C     	ld (Scanlines_album_SP),hl
 853  8DBC
 854  8DBC 21 26 8C     	ld hl,Ctrl_3
 855  8DBF CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8DC1 CB 9E        	res 3,(hl)
 857  8DC3 CB A6        	res 4,(hl)
 858  8DC5
 859  8DC5 AF           	xor a
 860  8DC6 D3 FE        	out ($fe),a
 861  8DC8
 862  8DC8 76           	halt
 863  8DC9
 864  8DC9              ; ----------------------------------------
 865  8DC9
 866  8DC9              ;	ld a,(Ctrl_1) 										; Existe Loop?
 867  8DC9              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 868  8DC9 CA C3 8C     	jp z,Main
 869  8DCC
 870  8DCC              ;------------------------------------------
 871  8DCC              ;
 872  8DCC              ;	14/09/24
 873  8DCC
 874  8DCC              Autoriza_disparo_de_entidades
 875  8DCC
 876  8DCC 3E 01        	ld a,1
 877  8DCE 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 878  8DD1
 879  8DD1 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 880  8DD4 32 42 8C     	ld (CLOCK_disparo_entidad),a
 881  8DD7
 882  8DD7 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 883  8DDA
 884  8DDA 7E           2 ld a,(hl)
 885  8DDB A7           	and a
 886  8DDC 28 08        	jr z,1F
 887  8DDE
 888  8DDE 32 3D 8C     	ld (DB_RND_disparos),a
 889  8DE1 23           	inc hl
 890  8DE2 22 3B 8C     	ld (RND_SP_Disparos),hl
 891  8DE5
 892  8DE5 C9           	ret
 893  8DE6
 894  8DE6 21 F6 88     1	ld hl,Numeros_aleatorios
 895  8DE9 22 3B 8C     	ld (RND_SP_Disparos),hl
 896  8DEC 18 EC        	jr 2B
 897  8DEE
 898  8DEE              ;------------------------------------------
 899  8DEE              ;
 900  8DEE              ;	14/09/24
 901  8DEE              ;
 902  8DEE              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 903  8DEE
 904  8DEE              Entidad_genera_disparo_si_procede
 905  8DEE
 906  8DEE 3A FB 8B     	ld a,(Entidades_en_curso)
 907  8DF1 A7           	and a
 908  8DF2 C8           	ret z
 909  8DF3
 910  8DF3 3A 3D 8C     	ld a,(DB_RND_disparos)
 911  8DF6 CB 4F        	bit 1,a
 912  8DF8 F5           	push af											; Guardamos FLAGS.
 913  8DF9
 914  8DF9 17           	rla
 915  8DFA 17           	rla
 916  8DFB
 917  8DFB 32 3D 8C     	ld (DB_RND_disparos),a
 918  8DFE
 919  8DFE F1           	pop af
 920  8DFF C4 02 9F     	call nz,Genera_disparo_de_entidad_maldosa
 921  8E02
 922  8E02 C9           	ret
 923  8E03
 924  8E03
 925  8E03              ; RECARGA DE NUEVA OLEADA.
 926  8E03
 927  8E03              ;	ld a,(Contador_de_frames)
 928  8E03              ;	ld b,a
 929  8E03              ;	ld a,(Activa_recarga_cajas)
 930  8E03              ;	cp b
 931  8E03              ;	jr z,20F
 932  8E03
 933  8E03              ;	ld hl,Ctrl_1
 934  8E03              ;	set 4,(hl)
 935  8E03              ;	jp Main
 936  8E03
 937  8E03              ;20 ld hl,Ctrl_1
 938  8E03              ;	res 4,(hl)
 939  8E03
 940  8E03              ;	ld a,(Contador_de_frames)
 941  8E03
 942  8E03              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 943  8E03              ;! _ IMPREDECIBLE !!!!
 944  8E03
 945  8E03              ;	add 10
 946  8E03              ;	ld (Clock_next_entity),a
 947  8E03
 948  8E03              ;	jp 4B
 949  8E03
 950  8E03 C9           	ret
 951  8E04
 952  8E04              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 953  8E04              ;
 954  8E04              ;	16/11/23
 955  8E04
 956  8E04              ;;Gestiona_Amadeus
 957  8E04
 958  8E04              ;! Activa/desactiva impacto con Amadeus.
 959  8E04
 960  8E04              ;	ld a,(Impacto)
 961  8E04              ;	and a
 962  8E04              ;	jr nz,2F
 963  8E04
 964  8E04              ;;	call Mov_Amadeus
 965  8E04
 966  8E04              ;;2 ld a,(Ctrl_0)
 967  8E04              ;;	bit 4,a
 968  8E04              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 969  8E04
 970  8E04              ;;	call Guarda_foto_entidad_a_pintar
 971  8E04              ;;	call Guarda_datos_de_borrado_Amadeus
 972  8E04
 973  8E04              ;;1 ld hl,Ctrl_0
 974  8E04              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 975  8E04
 976  8E04              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 977  8E04
 978  8E04              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 979  8E04
 980  8E04              ;	call Calcula_numero_de_disparotes
 981  8E04
 982  8E04              ;;	ret
 983  8E04
 984  8E04              ; -----------------------------
 985  8E04              ;
 986  8E04              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 987  8E04              ;
 988  8E04              ;	INPUTS: B a de estar a "0".
 989  8E04
 990  8E04              ;Prepara_Borra_sprites
 991  8E04
 992  8E04              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 993  8E04              ;	ld a,l
 994  8E04              ;	ret z
 995  8E04
 996  8E04              ;	srl a
 997  8E04
 998  8E04              ;2 sub 16
 999  8E04              ;	jr z,1F
1000  8E04              ;	inc b
1001  8E04              ;	jr 2B
1002  8E04
1003  8E04              ;1 inc b
1004  8E04
1005  8E04              ;	exx
1006  8E04              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1007  8E04              ;	exx
1008  8E04
1009  8E04              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1010  8E04              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1011  8E04
1012  8E04              ;	ret
1013  8E04
1014  8E04              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1015  8E04              ;
1016  8E04              ;	24/07/24
1017  8E04
1018  8E04              Reinicia_Amadeus
1019  8E04
1020  8E04              ;	Reinicia posición y estado.
1021  8E04
1022  8E04 21 CF 50     	ld hl,$50cf
1023  8E07 22 72 89     	ld (p.imp.amadeus),hl
1024  8E0A 21 F0 E0     	ld hl,$e0f0
1025  8E0D 22 74 89     	ld (Pamm_Amadeus),hl
1026  8E10 21 3D 00     	ld hl,$003d
1027  8E13 22 76 89     	ld (Comm_Amadeus),hl
1028  8E16
1029  8E16              ;	limpiamos el álbum de borrado.
1030  8E16
1031  8E16 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1032  8E19
1033  8E19 AF           	xor a
1034  8E1A 77           	ld (hl),a
1035  8E1B
1036  8E1B E5           	push hl
1037  8E1C D1           	pop de
1038  8E1D 13           	inc de
1039  8E1E
1040  8E1E 01 23 00     	ld bc,35
1041  8E21 ED B0        	ldir
1042  8E23
1043  8E23 CD 39 90     	call Genera_datos_de_impresion_Amadeus
1044  8E26
1045  8E26              ;	Reinicia temporizaciones.
1046  8E26
1047  8E26 CD 16 91     	call Inicia_Shield
1048  8E29
1049  8E29 3E 5A        	ld a,90
1050  8E2B 32 4E 8C     	ld (Shield),a
1051  8E2E
1052  8E2E 3E 64        	ld a,100
1053  8E30 32 38 8C     	ld (Temp_new_live),a
1054  8E33
1055  8E33              ; 	Restauramos el FLAG: Amadeus vivo.
1056  8E33
1057  8E33 21 26 8C     	ld hl,Ctrl_3
1058  8E36 CB B6        	res 6,(hl)
1059  8E38
1060  8E38              ;	Fuerza la impresión de la nave en el siguiente frame.
1061  8E38
1062  8E38 21 26 8C      	ld hl,Ctrl_3
1063  8E3B CB EE        	set 5,(hl)
1064  8E3D
1065  8E3D C9           	ret
1066  8E3E
1067  8E3E              ; --------------------------------------------------------------------------------------------------------------
1068  8E3E              ;
1069  8E3E              ;	12/05/24
1070  8E3E
1071  8E3E 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1072  8E41 CB 27        	sla a
1073  8E43 32 BE 8B     	ld (Velocidad),a
1074  8E46 E6 10        	and $10
1075  8E48 C8           	ret z
1076  8E49
1077  8E49              ; Restaura (Velocidad) a razón del nº de vueltas.
1078  8E49
1079  8E49 3A B6 8B     	ld a,(Contador_de_vueltas)
1080  8E4C CB 2F        	sra a
1081  8E4E CB 2F        	sra a
1082  8E50 32 BE 8B     	ld (Velocidad),a
1083  8E53
1084  8E53 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1085  8E56 23           	inc hl
1086  8E57 23           	inc hl
1087  8E58 23           	inc hl
1088  8E59 23           	inc hl
1089  8E5A 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1090  8E5D
1091  8E5D C9           	ret
1092  8E5E
1093  8E5E              ; --------------------------------------------------------------------------------------------------------------
1094  8E5E              ;
1095  8E5E              ;	25/08/24
1096  8E5E
1097  8E5E              Change
1098  8E5E
1099  8E5E 3A 1D 8C     	ld a,(Switch)
1100  8E61 EE 01        	xor 1
1101  8E63 32 1D 8C     	ld (Switch),a
1102  8E66 2A 04 8C     	ld hl,(Album_de_pintado)
1103  8E69 ED 5B 06 8C  	ld de,(Album_de_borrado)
1104  8E6D EB           	ex de,hl
1105  8E6E 22 04 8C     	ld (Album_de_pintado),hl
1106  8E71 22 20 8C     	ld (Scanlines_album_SP),hl
1107  8E74 ED 53 06 8C  	ld (Album_de_borrado),de
1108  8E78 C9           	ret
1109  8E79
1110  8E79              Change_Amadeus
1111  8E79
1112  8E79 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1113  8E7C ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
1114  8E80 EB           	ex de,hl
1115  8E81 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1116  8E84 ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
1117  8E88 C9           	ret
1118  8E89
1119  8E89              Change_Disparos
1120  8E89
1121  8E89 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
1122  8E8C ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos)
1123  8E90 EB           	ex de,hl
1124  8E91 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1125  8E94 ED 53 0E 8C  	ld (Album_de_borrado_disparos),de
1126  8E98 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1127  8E9B
1128  8E9B 3A 12 8C     	ld a,(Num_de_bytes_album_de_disparos)
1129  8E9E 32 13 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1130  8EA1
1131  8EA1 C9           	ret
1132  8EA2
1133  8EA2              ; ------------------------------------
1134  8EA2              ;
1135  8EA2              ; 1/05/24
1136  8EA2
1137  8EA2              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1138  8EA2              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1139  8EA2
1140  8EA2              ;	DESTRUYE: HL,DE,A
1141  8EA2              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1142  8EA2
1143  8EA2              ;	Variables implicadas: (RND_SP).
1144  8EA2
1145  8EA2              Extrae_numero_aleatorio_y_avanza
1146  8EA2
1147  8EA2 21 00 89     	ld hl,Tabla_de_pintado
1148  8EA5 EB           	ex de,hl
1149  8EA6 2A 39 8C     	ld hl,(RND_SP)
1150  8EA9 EB           	ex de,hl
1151  8EAA A7           	and a
1152  8EAB ED 52        	sbc hl,de
1153  8EAD
1154  8EAD 2A 39 8C     	ld hl,(RND_SP)
1155  8EB0 20 06        	jr nz,1F
1156  8EB2
1157  8EB2              ; Sitúa HL al principio de la tabla de nº aleatorios.
1158  8EB2
1159  8EB2 21 F6 88     	ld hl,Numeros_aleatorios
1160  8EB5 22 39 8C     	ld (RND_SP),HL
1161  8EB8
1162  8EB8              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1163  8EB8
1164  8EB8 7E           1 ld a,(hl)
1165  8EB9 23           	inc hl
1166  8EBA 22 39 8C     	ld (RND_SP),hl
1167  8EBD C9           	ret
1168  8EBE
1169  8EBE              ; ------------------------------------
1170  8EBE              ;
1171  8EBE              ; 1/05/24
1172  8EBE
1173  8EBE              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1174  8EBE              ; (1 a 4 segundos).
1175  8EBE              ; Actualizamos (Clock_next_entity) con A.
1176  8EBE
1177  8EBE              ;	DESTRUYE: A y B.
1178  8EBE              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1179  8EBE              ;			 Actualiza (Clock_next_entity) con A.
1180  8EBE
1181  8EBE              ;	Variables implicadas: (Clock_next_entity).
1182  8EBE
1183  8EBE              ; Notas:
1184  8EBE
1185  8EBE              ; 	$32 1 seg.
1186  8EBE              ; 	$64 2 seg.
1187  8EBE              ; 	$96 3 seg.
1188  8EBE              ; 	$c8 4 seg.
1189  8EBE              ; 	$fa 5 seg.
1190  8EBE
1191  8EBE              ; $ffff 1310,7 seg, 22 minutos.
1192  8EBE
1193  8EBE              ;	$0100  5 seg. aproximadamente.
1194  8EBE              ;	$0200 10 seg. aproximadamente.
1195  8EBE              ;	$0300 15 seg. aproximadamente.
1196  8EBE              ;	$0400 20 seg. aproximadamente.
1197  8EBE              ;	$0500 25 seg. aproximadamente.
1198  8EBE              ;	$0600 30 seg. aproximadamente.
1199  8EBE
1200  8EBE              Define_Clock_next_entity
1201  8EBE
1202  8EBE FE 34        	cp $34
1203  8EC0 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1204  8EC2
1205  8EC2              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1206  8EC2
1207  8EC2 4F           3 ld c,a
1208  8EC3 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1209  8EC5 2A 78 5C     	ld hl,(FRAMES)
1210  8EC8 A7           	and a
1211  8EC9 ED 4A        	adc hl,bc
1212  8ECB 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1213  8ECE C9           	ret
1214  8ECF
1215  8ECF 3E 34        1 ld a,$34
1216  8ED1 18 EF        	jr 3B
1217  8ED3
1218  8ED3              ; ------------------------------------
1219  8ED3              ;
1220  8ED3              ; 18/03/24
1221  8ED3
1222  8ED3              Borra_diferencia
1223  8ED3
1224  8ED3 ED 4B 20 8C  	ld bc,(Scanlines_album_SP)
1225  8ED7
1226  8ED7 3A 1D 8C     	ld a,(Switch)
1227  8EDA A7           	and a
1228  8EDB 28 08        	jr z,2F
1229  8EDD
1230  8EDD 2A 1B 8C     	ld hl,(Techo_Scanlines_album_2)
1231  8EE0 11 1B 8C     	ld de,Techo_Scanlines_album_2
1232  8EE3 18 06        	jr 3F
1233  8EE5
1234  8EE5 2A 19 8C     2 ld hl,(Techo_Scanlines_album)
1235  8EE8 11 19 8C     	ld de,Techo_Scanlines_album
1236  8EEB
1237  8EEB              ; Diferencia.
1238  8EEB
1239  8EEB ED 42        3 sbc hl,bc
1240  8EED
1241  8EED C8           	ret z
1242  8EEE D8           	ret c
1243  8EEF
1244  8EEF              ; Nuevo techo, (más bajo que el anterior).
1245  8EEF              ; Fijamos nuevo techo y borramos bytes sobrantes.
1246  8EEF
1247  8EEF EB           	ex de,hl
1248  8EF0
1249  8EF0 71           	ld (hl),c
1250  8EF1 2C           	inc l
1251  8EF2 70           	ld (hl),b
1252  8EF3
1253  8EF3 AF           	xor a
1254  8EF4 43           	ld b,e
1255  8EF5
1256  8EF5 2A 20 8C     	ld hl,(Scanlines_album_SP)
1257  8EF8
1258  8EF8 77           1 ld (hl),a
1259  8EF9 23           	inc hl
1260  8EFA 10 FC        	djnz 1B
1261  8EFC
1262  8EFC              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1263  8EFC
1264  8EFC 21 26 8C     	ld hl,Ctrl_3
1265  8EFF CB DE        	set 3,(hl)
1266  8F01
1267  8F01 C9           	ret
1268  8F02
1269  8F02              ; --------------------------------------------------------------------------------------------------------------
1270  8F02              ;
1271  8F02              ;	26/3/24
1272  8F02
1273  8F02              Recauda_informacion_de_entidad_en_curso
1274  8F02
1275  8F02              ; Almacena la Coordenada Y de la entidad en curso.
1276  8F02
1277  8F02              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1278  8F02
1279  8F02 3A B5 8B     	ld a,(Coordenada_y)
1280  8F05 2A 22 8C     	ld hl,(India_SP)
1281  8F08 77           	ld (hl),a
1282  8F09 2C           	inc l
1283  8F0A
1284  8F0A              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1285  8F0A
1286  8F0A ED 5B 20 8C  	ld de,(Scanlines_album_SP)
1287  8F0E
1288  8F0E 73           	ld (hl),e
1289  8F0F 2C           	inc l
1290  8F10 72           	ld (hl),d
1291  8F11 2C           	inc l
1292  8F12
1293  8F12 22 22 8C     	ld (India_SP),hl
1294  8F15
1295  8F15 C9           	ret
1296  8F16
1297  8F16              ; --------------------------------------------------------------------------------------------------------------
1298  8F16              ;
1299  8F16              ;	27/03/24
1300  8F16              ;
1301  8F16
1302  8F16              Inicializa_India_y_limpia_Tabla_de_impresion
1303  8F16
1304  8F16 2A 22 8C     	ld hl,(India_SP)
1305  8F19 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1306  8F1C
1307  8F1C 79           	ld a,c
1308  8F1D 95           	sub l
1309  8F1E 28 06        	jr z,2F
1310  8F20 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1311  8F21              ;														; _ y pasamos a inicializar (India_SP).
1312  8F21 AF           	xor a
1313  8F22
1314  8F22 77           1 ld (hl),a
1315  8F23 2C           	inc l
1316  8F24 10 FC        	djnz 1B												; Limpia Tabla.
1317  8F26
1318  8F26 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1319  8F29 22 22 8C     	ld (India_SP),hl
1320  8F2C
1321  8F2C C9           	ret
1322  8F2D
1323  8F2D              ; --------------------------------------------------------------------------------------------------------------
1324  8F2D              ;
1325  8F2D              ;	31/3/24
1326  8F2D
1327  8F2D              Ordena_tabla_de_impresion
1328  8F2D
1329  8F2D              ; 5794 T/states.
1330  8F2D              ; 6278 T/states.
1331  8F2D              ; 5310 T/states.
1332  8F2D
1333  8F2D              ; Inicializamos punteros (India_SP) e (India_2_SP).
1334  8F2D              ; Inicializamos contador de comparaciones, [C].
1335  8F2D              ; Cargamos los registros A y B para efectuar comparación.
1336  8F2D
1337  8F2D FD 2E 00     	ld iyl,0
1338  8F30
1339  8F30 3A FB 8B     	ld a,(Entidades_en_curso)
1340  8F33 FE 04        	cp 4 	;	4
1341  8F35 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1342  8F36
1343  8F36 3D           	dec a
1344  8F37 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1345  8F38 51           	ld d,c 										; Copia de respaldo.
1346  8F39
1347  8F39 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1348  8F3A
1349  8F3A 21 03 89     	ld hl,Tabla_de_pintado+3
1350  8F3D 46           	ld b,(hl)
1351  8F3E 22 24 8C     	ld (India_2_SP),hl
1352  8F41
1353  8F41 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1354  8F42 DC 6A 8F     	call c, Avanza_India_2_SP
1355  8F45 CC 6A 8F     	call z, Avanza_India_2_SP
1356  8F48
1357  8F48 FD 2D        	dec iyl
1358  8F4A 28 18        	jr z,2F
1359  8F4C
1360  8F4C
1361  8F4C              ; --------------------------------------------------------------------------------------------------------------
1362  8F4C              ;
1363  8F4C              ;	7/4/24
1364  8F4C
1365  8F4C              Trueque
1366  8F4C
1367  8F4C              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1368  8F4C              ;  			A contiene en nº de fila de (India_SP).
1369  8F4C              ;			HL contiene (India_2_SP).
1370  8F4C
1371  8F4C D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1372  8F4D E5           	push hl										; Preservo (India_2_SP).
1373  8F4E
1374  8F4E ED 5B 22 8C  	ld de,(India_SP)
1375  8F52 EB           	ex de,hl
1376  8F53 70           	ld (hl),b
1377  8F54 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1378  8F55
1379  8F55 CD 96 8F     	call Intercambia_1_byte
1380  8F58 CD 96 8F     	call Intercambia_1_byte
1381  8F5B
1382  8F5B
1383  8F5B              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1384  8F5B              ; Recuperamos (India_2_SP) en HL.
1385  8F5B
1386  8F5B 2A 22 8C     	ld hl,(India_SP)
1387  8F5E 7E           	ld a,(hl)
1388  8F5F
1389  8F5F E1           	pop hl
1390  8F60 D1           	pop de
1391  8F61
1392  8F61              ; --------------------------------------------------------------------------------------------------------------
1393  8F61
1394  8F61 CD 6A 8F     	call Avanza_India_2_SP
1395  8F64
1396  8F64 14           2 inc d
1397  8F65 15           	dec d
1398  8F66 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1399  8F67 18 D8        	jr 1B
1400  8F69
1401  8F69 C9           	ret
1402  8F6A
1403  8F6A              ; ----- ----- ----- ----- -----
1404  8F6A
1405  8F6A              Avanza_India_2_SP
1406  8F6A
1407  8F6A 0D           	dec c
1408  8F6B 28 0A        	jr z,Avanza_punteros_indios
1409  8F6D
1410  8F6D FD 2C        	inc iyl
1411  8F6F
1412  8F6F 2C           	inc l
1413  8F70 2C           	inc l
1414  8F71 2C           	inc l
1415  8F72
1416  8F72 46           	ld b,(hl)
1417  8F73 22 24 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1418  8F76
1419  8F76 C9           	ret
1420  8F77
1421  8F77              ; ----- ----- ----- ----- -----
1422  8F77
1423  8F77              Avanza_punteros_indios
1424  8F77
1425  8F77 15           	dec d
1426  8F78 28 15        	jr z,Prepara_salida
1427  8F7A
1428  8F7A 4A           	ld c,d
1429  8F7B
1430  8F7B 2A 22 8C     	ld hl,(India_SP)
1431  8F7E 2C           	inc l
1432  8F7F 2C           	inc l
1433  8F80 2C           	inc l
1434  8F81 7E           	ld a,(hl)
1435  8F82 22 22 8C     	ld (India_SP),hl
1436  8F85
1437  8F85 2C           	inc l
1438  8F86 2C           	inc l
1439  8F87 2C           	inc l
1440  8F88 46           	ld b,(hl)
1441  8F89 22 24 8C     	ld (India_2_SP),hl
1442  8F8C
1443  8F8C FD 2C        	inc iyl
1444  8F8E
1445  8F8E C9           	ret
1446  8F8F
1447  8F8F              Prepara_salida
1448  8F8F
1449  8F8F 21 00 89     	ld hl,Tabla_de_pintado
1450  8F92 22 22 8C     	ld (India_SP),hl
1451  8F95 C9           	ret
1452  8F96
1453  8F96
1454  8F96 2C           Intercambia_1_byte inc l
1455  8F97 1C           	inc e
1456  8F98 46           	ld b,(hl)
1457  8F99 1A           	ld a,(de)
1458  8F9A EB           	ex de,hl
1459  8F9B 70           	ld (hl),b
1460  8F9C 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1461  8F9D C9           	ret
1462  8F9E
1463  8F9E              ; -----------------------------------------------------------------------------------
1464  8F9E              ;
1465  8F9E              ;	20/01/24
1466  8F9E              ;
1467  8F9E              ;
1468  8F9E
1469  8F9E              Construye_movimientos_masticados_entidad
1470  8F9E
1471  8F9E 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1472  8FA1 E5           	push hl
1473  8FA2 CD E5 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1474  8FA5              ;															; _ el (Contador_de_mov_masticados).
1475  8FA5 CD AE 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1476  8FA8              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1477  8FA8 CD DB 99     	call Recompone_posicion_inicio
1478  8FAB
1479  8FAB CD 0B 97     1 call Draw
1480  8FAE CD CA 8F     	call Guarda_movimiento_masticado
1481  8FB1
1482  8FB1 CD 88 9D     	call Movimiento
1483  8FB4
1484  8FB4 3A 26 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1485  8FB7 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1486  8FB9 28 F0        	jr z,1B
1487  8FBB
1488  8FBB              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1489  8FBB              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1490  8FBB
1491  8FBB E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1492  8FBC 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1493  8FBF
1494  8FBF              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1495  8FBF
1496  8FBF CD EC 9E     	call Situa_en_contador_general_de_mov_masticados
1497  8FC2
1498  8FC2              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1499  8FC2              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1500  8FC2
1501  8FC2 ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1502  8FC6
1503  8FC6 71           	ld (hl),c
1504  8FC7 23           	inc hl
1505  8FC8 70           	ld (hl),b
1506  8FC9
1507  8FC9 C9           	ret
1508  8FCA
1509  8FCA              ; -----------------------------------------------------------------------------------
1510  8FCA              ;
1511  8FCA              ;	28/12/23
1512  8FCA              ;
1513  8FCA              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1514  8FCA              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1515  8FCA
1516  8FCA              Guarda_movimiento_masticado
1517  8FCA
1518  8FCA ED 73 00 8C  	ld (Stack),sp
1519  8FCE ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1520  8FD2
1521  8FD2 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1522  8FD4 FD E5            push iy 												; Pushea Puntero_objeto.
1523  8FD6
1524  8FD6 ED 7B 00 8C      ld sp,(Stack)
1525  8FDA
1526  8FDA 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1527  8FDD 23           	inc hl
1528  8FDE 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1529  8FE1
1530  8FE1 CD E5 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1531  8FE4              ;															; _ el (Contador_de_mov_masticados).
1532  8FE4 C9               ret
1533  8FE5
1534  8FE5              ; --------------------------------------------------------------------------------------------------------------
1535  8FE5              ;
1536  8FE5              ;	12/1/24
1537  8FE5              ;
1538  8FE5              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1539  8FE5
1540  8FE5              Actualiza_Puntero_de_almacen_de_mov_masticados
1541  8FE5
1542  8FE5 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1543  8FE8 01 04 00     	ld bc,4
1544  8FEB A7           	and a
1545  8FEC ED 4A        	adc hl,bc
1546  8FEE 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1547  8FF1 C9           	ret
1548  8FF2
1549  8FF2              ; --------------------------------------------------------------------------------------------------------------
1550  8FF2              ;
1551  8FF2              ;	24/03/24
1552  8FF2              ;
1553  8FF2              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1554  8FF2              ;
1555  8FF2              ;	IX contiene el puntero de impresión.
1556  8FF2              ;	DE contiene (Puntero_objeto).
1557  8FF2
1558  8FF2
1559  8FF2              Cargamos_registros_con_mov_masticado
1560  8FF2
1561  8FF2 ED 73 00 8C  	ld (Stack),sp
1562  8FF6 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1563  8FFA
1564  8FFA D1           	pop de 															; DE contiene Puntero_objeto
1565  8FFB DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1566  8FFD
1567  8FFD ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1568  9001 ED 7B 00 8C  	ld sp,(Stack)
1569  9005
1570  9005 7B           	ld a,e
1571  9006 82           	add d															; Comprueba si ya no hay datos en el almacén.
1572  9007
1573  9007 CC 9E 93     	call z,Reinicia_entidad_maliciosa
1574  900A
1575  900A C9           	ret
1576  900B
1577  900B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1578  900B              ;
1579  900B              ;	22/7/24
1580  900B
1581  900B              Cargamos_registros_con_explosion
1582  900B
1583  900B
1584  900B 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1585  900E CD A8 90     	call Extrae_address
1586  9011
1587  9011 5D           	ld e,l
1588  9012 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1589  9013
1590  9013 DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1591  9017
1592  9017 C9           	ret
1593  9018
1594  9018
1595  9018              Cargamos_registros_con_explosion_Amadeus
1596  9018
1597  9018 2A 74 89     	ld hl,(Pamm_Amadeus)
1598  901B CD A8 90     	call Extrae_address
1599  901E
1600  901E 5D           	ld e,l
1601  901F 54           	ld d,h
1602  9020
1603  9020 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1604  9024
1605  9024 C9           	ret
1606  9025
1607  9025              ; --------------------------------------------------------------------------------------------------------------
1608  9025              ;
1609  9025              ;	17/06/24
1610  9025              ;
1611  9025              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1612  9025              ;
1613  9025              ;	IX contiene el puntero de impresión.
1614  9025              ;	DE contiene (Puntero_objeto).
1615  9025
1616  9025
1617  9025              Cargamos_registros_con_mov_masticado_Amadeus
1618  9025
1619  9025 ED 73 00 8C  	ld (Stack),sp
1620  9029 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1621  902D D1           	pop de 															; DE contiene Puntero_objeto
1622  902E DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1623  9030 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1624  9034 ED 7B 00 8C  	ld sp,(Stack)
1625  9038 C9           	ret
1626  9039
1627  9039              ; ---------------------------------------------------------------------------------------------------------------------
1628  9039              ;
1629  9039              ;	18/6/24
1630  9039              ;
1631  9039              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1632  9039
1633  9039              Genera_datos_de_impresion_Amadeus
1634  9039
1635  9039 3A 71 89     	ld a,(Impacto_Amadeus)
1636  903C A7           	and a
1637  903D 20 03        	jr nz,1F
1638  903F
1639  903F              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1640  903F              ; _apuntando a la correspondiente explosión.
1641  903F
1642  903F CD 25 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1643  9042
1644  9042 DD 7D        1 ld a,ixl
1645  9044 E6 1F        	and $1f
1646  9046 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1647  9049
1648  9049 2A 20 8C     	ld hl,(Scanlines_album_SP)
1649  904C E5           	push hl
1650  904D
1651  904D 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1652  9050 22 20 8C     	ld (Scanlines_album_SP),hl
1653  9053
1654  9053 CD F3 94     	call Genera_datos_de_impresion
1655  9056
1656  9056 E1           	pop hl
1657  9057 22 20 8C     	ld (Scanlines_album_SP),hl
1658  905A
1659  905A C9           	ret
1660  905B
1661  905B              ; ---------------------------------------------------------------------------------------------------------------------
1662  905B              ;
1663  905B              ;	13/03/24
1664  905B              ;
1665  905B              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1666  905B
1667  905B              Inicia_albumes_de_lineas
1668  905B
1669  905B 21 00 80     	ld hl,Scanlines_album
1670  905E 22 04 8C     	ld (Album_de_pintado),hl
1671  9061 22 20 8C     	ld (Scanlines_album_SP),hl
1672  9064
1673  9064 21 1A 81     	ld hl,Scanlines_album_2
1674  9067 22 06 8C     	ld (Album_de_borrado),hl
1675  906A
1676  906A C9           	ret
1677  906B
1678  906B              Inicia_albumes_de_lineas_Amadeus
1679  906B
1680  906B 21 34 82     	ld hl,Amadeus_scanlines_album
1681  906E 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1682  9071 21 58 82     	ld hl,Amadeus_scanlines_album_2
1683  9074 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1684  9077
1685  9077 C9           	ret
1686  9078
1687  9078              Inicia_albumes_de_disparos
1688  9078
1689  9078 21 7C 82     	ld hl,Disparos_scanlines_album
1690  907B 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1691  907E 21 B8 82     	ld hl,Disparos_scanlines_album_2
1692  9081 22 0E 8C     	ld (Album_de_borrado_disparos),hl
1693  9084
1694  9084 21 7C 82     	ld hl,Disparos_scanlines_album
1695  9087 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1696  908A
1697  908A C9           	ret
1698  908B
1699  908B              ; ---------------------------------------------------------------------------------------------------------------------
1700  908B              ;
1701  908B              ; 8/1/23
1702  908B              ;
1703  908B              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1704  908B              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1705  908B              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1706  908B
1707  908B              ; Destruye HL y DE !!!!!
1708  908B
1709  908B              Inicia_punteros_de_cajas
1710  908B
1711  908B 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1712  908E CD A8 90         call Extrae_address
1713  9091 22 F3 8B         ld (Puntero_store_caja),hl
1714  9094 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1715  9097 22 F7 8B     	ld (Indice_restore_caja),hl
1716  909A CD A8 90     	call Extrae_address
1717  909D 22 F5 8B     	ld (Puntero_restore_caja),hl
1718  90A0 C9               ret
1719  90A1
1720  90A1              ; *************************************************************************************************************************************************************
1721  90A1              ;
1722  90A1              ; 8/1/23
1723  90A1              ;
1724  90A1              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1725  90A1
1726  90A1 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1727  90A4 22 29 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1728  90A7 C9           	ret
1729  90A8
1730  90A8              ; *************************************************************************************************************************************************************
1731  90A8              ;
1732  90A8              ; 20/10/22
1733  90A8              ;
1734  90A8              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1735  90A8              ;
1736  90A8              ; Destruye el puntero y DE !!!!!
1737  90A8
1738  90A8 5E           Extrae_address ld e,(hl)
1739  90A9 23           	inc hl
1740  90AA 56           	ld d,(hl)
1741  90AB 2B           	dec hl
1742  90AC EB           	ex de,hl
1743  90AD C9           	ret
1744  90AE
1745  90AE              ; *************************************************************************************************************************************************************
1746  90AE              ;
1747  90AE              ;	20/1/24
1748  90AE              ;
1749  90AE              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1750  90AE              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1751  90AE              ;
1752  90AE              ;   Destruye HL y BC !!!!!,
1753  90AE              ;
1754  90AE              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1755  90AE              ;					"0" ..... Izquierda.
1756  90AE
1757  90AE              Inicia_Puntero_objeto
1758  90AE
1759  90AE 3A D2 8B     	ld a,(Cuad_objeto)
1760  90B1 E6 01        	and 1
1761  90B3 F5           	push af
1762  90B4 CC D0 90     	call z,Inicia_puntero_objeto_izq
1763  90B7 F1           	pop af
1764  90B8 C8           	ret z
1765  90B9 CD BD 90     	call Inicia_puntero_objeto_der
1766  90BC C9           	ret
1767  90BD
1768  90BD              ; Arrancamos desde la parte izquierda de la pantalla.
1769  90BD              ; Iniciamos (Indice_Sprite_der).
1770  90BD
1771  90BD 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1772  90C0 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1773  90C3 CD A8 90     	call Extrae_address
1774  90C6 22 C5 8B     	ld (Puntero_objeto),hl
1775  90C9
1776  90C9 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1777  90CC 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1778  90CF C9           	ret
1779  90D0
1780  90D0              ; Arrancamos desde la parte derecha de la pantalla.
1781  90D0              ; Iniciamos (Indice_Sprite_izq).
1782  90D0
1783  90D0 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1784  90D3 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1785  90D6 CD A8 90     	call Extrae_address
1786  90D9 22 C5 8B     	ld (Puntero_objeto),hl
1787  90DC
1788  90DC 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1789  90DF 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1790  90E2 C9           	ret
1791  90E3
1792  90E3              ; **************************************************************************************************
1793  90E3              ;
1794  90E3              ;	06/07/24
1795  90E3              ;
1796  90E3              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1797  90E3
1798  90E3              Restore_entidad
1799  90E3
1800  90E3 2A F3 8B     	ld hl,(Puntero_store_caja)
1801  90E6 7E           	ld a,(hl)
1802  90E7 A7           	and a
1803  90E8 CC F6 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1804  90EB 28 F6        	jr z,Restore_entidad
1805  90ED
1806  90ED 11 B3 8B     	ld de,Bandeja_DRAW
1807  90F0 01 0C 00     	ld bc,12
1808  90F3 ED B0        	ldir
1809  90F5 C9           	ret
1810  90F6
1811  90F6              ; **************************************************************************************************
1812  90F6              ;
1813  90F6              ;	08/05/23
1814  90F6              ;
1815  90F6              ;	Incrementamos los dos punteros de entidades. (+1).
1816  90F6
1817  90F6              Incrementa_punteros_de_cajas
1818  90F6
1819  90F6 2A F5 8B     	ld hl,(Puntero_restore_caja)
1820  90F9 22 F3 8B     	ld (Puntero_store_caja),hl
1821  90FC 2A F7 8B     	ld hl,(Indice_restore_caja)
1822  90FF 23           	inc hl
1823  9100 23           	inc hl
1824  9101 22 F7 8B     	ld (Indice_restore_caja),hl
1825  9104 CD A8 90         call Extrae_address
1826  9107 22 F5 8B         ld (Puntero_restore_caja),hl
1827  910A C9               ret
1828  910B
1829  910B              ; -----------------------------------------------------------
1830  910B
1831  910B              ; Teclado.
1832  910B
1833  910B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1834  910D DB FE        	in a,($fe)
1835  910F E6 01        	and $01
1836  9111 28 02        	jr z,1f
1837  9113 18 F6        	jr Pulsa_ENTER
1838  9115 C9           1 ret
1839  9116
1840  9116              ; **************************************************************************************************
1841  9116              ;
1842  9116              ; Temporización.
1843  9116
1844  9116              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1845  9116              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1846  9116              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1847  9116              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1848  9116
1849  9116              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1850  9116              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1851  9116              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1852  9116
1853  9116              ; A partir de $4f61 no hace falta DELAY.
1854  9116
1855  9116              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1856  9116
1857  9116              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1858  9116              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1859  9116              ;	LD A,B
1860  9116              ;	AND A
1861  9116              ;	JR NZ,wait
1862  9116              ;	RET
1863  9116
1864  9116              ; ---------------------------------------------------------------------------------------------------------------
1865  9116              ;
1866  9116              ;	13/07/24
1867  9116              ;
1868  9116
1869  9116              Inicia_Shield
1870  9116
1871  9116 21 48 8C     	ld hl,Datos_Shield
1872  9119 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1873  911C
1874  911C 7E           	ld a,(hl)
1875  911D 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1876  9120
1877  9120 3E 01        	ld a,1
1878  9122 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1879  9125
1880  9125 C9           	ret
1881  9126
1882  9126              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1883  9126              ;
1884  9126              ;	4/6/24
1885  9126              ;
1886  9126              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1887  9126              ;
1888  9126              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1889  9126              ;
1890  9126
1891  9126              Actualiza_pantalla
1892  9126
1893  9126 3E 02        	ld a,2
1894  9128 D3 FE        	out ($fe),a
1895  912A
1896  912A 3A 26 8C     	ld a,(Ctrl_3)
1897  912D CB 57        	bit 2,a
1898  912F 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1899  9131
1900  9131              Borrando_entidades
1901  9131
1902  9131 2A 20 8C     	ld hl,(Scanlines_album_SP)
1903  9134 CD A8 90     	call Extrae_address
1904  9137 24           	inc h
1905  9138 25           	dec h
1906  9139 28 05        	jr z,Pintando_entidades
1907  913B CD E8 95     	call Pinta_Sprites
1908  913E 18 F1        	jr Borrando_entidades
1909  9140
1910  9140              Pintando_entidades
1911  9140
1912  9140 2A 22 8C     	ld hl,(India_SP)
1913  9143 2C           	inc l
1914  9144 CD A8 90     	call Extrae_address
1915  9147 24           	inc h
1916  9148 25           	dec h
1917  9149 28 0E        	jr z,Ejecuta_escudo
1918  914B 1C           	inc e
1919  914C 1C           	inc e
1920  914D ED 53 22 8C  	ld (India_SP),de
1921  9151 CD A8 90     	call Extrae_address
1922  9154 CD E8 95     	call Pinta_Sprites
1923  9157 18 E7        	jr Pintando_entidades
1924  9159
1925  9159              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1926  9159
1927  9159              Ejecuta_escudo
1928  9159
1929  9159 3A 4E 8C     	ld a,(Shield)
1930  915C A7           	and a
1931  915D 20 2F        	jr nz,Aplica_Shield
1932  915F
1933  915F              Borrando_Amadeus
1934  915F
1935  915F 21 26 8C     	ld hl,Ctrl_3
1936  9162 CB 6E        	bit 5,(hl)
1937  9164 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1938  9166
1939  9166 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1940  9169 CD A8 90     	call Extrae_address
1941  916C 24           	inc h
1942  916D 25           	dec h
1943  916E 28 03        	jr z,Pintando_Amadeus
1944  9170 CD E8 95     	call Pinta_Sprites
1945  9173
1946  9173              Pintando_Amadeus
1947  9173
1948  9173 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1949  9176 CD A8 90     	call Extrae_address
1950  9179 24           	inc h
1951  917A 25           	dec h
1952  917B 28 03        	jr z,1F
1953  917D CD E8 95     	call Pinta_Sprites
1954  9180
1955  9180              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1956  9180
1957  9180 21 26 8C     1 ld hl,Ctrl_3
1958  9183 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1959  9185 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1960  9187 CB AE        	res 5,(hl)
1961  9189
1962  9189 3E 01        	ld a,1												; Borde azul.
1963  918B D3 FE        	out ($fe),a
1964  918D
1965  918D C9           	ret
1966  918E
1967  918E              Aplica_Shield
1968  918E
1969  918E              ;	Bit 1 "1" (Shield_3) Sólo borra.
1970  918E              ;		  "0"     ""     Borra/Pinta.
1971  918E              ;	Bit 2    ""  RET.	 No borra, no pinta.
1972  918E
1973  918E 21 50 8C     	ld hl,Shield_3
1974  9191
1975  9191 CB 5E        	bit 3,(hl)
1976  9193 20 DE        	jr nz,Pintando_Amadeus
1977  9195
1978  9195 CB 56        	bit 2,(hl)
1979  9197 20 E7        	jr nz,1B
1980  9199
1981  9199 CB 4E        	bit 1,(hl)
1982  919B C4 A2 91     	call nz,Borra_Amadeus_shield
1983  919E
1984  919E 28 BF        	jr z,Borrando_Amadeus
1985  91A0 18 DE        	jr 1B
1986  91A2
1987  91A2              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1988  91A2
1989  91A2              Borra_Amadeus_shield
1990  91A2
1991  91A2 3A 26 8C     	ld a,(Ctrl_3)
1992  91A5 CB 6F        	bit 5,a
1993  91A7 28 08        	jr z,1F
1994  91A9
1995  91A9 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1996  91AC CD A8 90     	call Extrae_address
1997  91AF 18 06        	jr 2F
1998  91B1
1999  91B1 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
2000  91B4 CD A8 90     	call Extrae_address
2001  91B7
2002  91B7 CD E8 95     2 call Pinta_Sprites
2003  91BA
2004  91BA AF           	xor a
2005  91BB 3C           	inc a											; Asegura NZ en la salida de la rutina.
2006  91BC
2007  91BC C9           	ret
2008  91BD
2009  91BD              Pinta_Amadeus_shield
2010  91BD
2011  91BD 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
2012  91C0 CD A8 90     	call Extrae_address
2013  91C3 CD E8 95     	call Pinta_Sprites
2014  91C6
2015  91C6 AF           	xor a
2016  91C7 3C           	inc a											; Asegura NZ en la salida de la rutina.
2017  91C8
2018  91C8 C9           	ret
2019  91C9
2020  91C9              Borra_Pinta_Amadeus_shield
2021  91C9
2022  91C9 CD A2 91     	call Borra_Amadeus_shield
2023  91CC CD BD 91     	call Pinta_Amadeus_shield
2024  91CF C9           	ret
2025  91D0
2026  91D0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2027  91D0              ;
2028  91D0              ;	19/6/24
2029  91D0              ;
2030  91D0
2031  91D0              Teclado
2032  91D0
2033  91D0              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2034  91D0
2035  91D0 3E F7        	ld a,$f7												; "5" para disparar.
2036  91D2 DB FE        	in a,($fe)
2037  91D4 E6 10        	and $10
2038  91D6
2039  91D6 CC 95 A0     	call z,Genera_disparo_Amadeus
2040  91D9
2041  91D9 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2042  91DB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2043  91DD E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2044  91DF CC 55 9D         call z,Amadeus_a_izquierda
2045  91E2
2046  91E2 3E F7        	ld a,$f7
2047  91E4 DB FE        	in a,($fe)
2048  91E6 E6 01        	and $01
2049  91E8 C8           	ret z
2050  91E9
2051  91E9 3E F7        	ld a,$f7
2052  91EB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2053  91ED E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2054  91EF CC 6D 9D     	call z,Amadeus_a_derecha
2055  91F2
2056  91F2 C9           	ret
2057  91F3
2058  91F3              ; ------------------------------------------------------------------------------------------------------------------------
2059  91F3              ;
2060  91F3              ;	06/07/24
2061  91F3              ;
2062  91F3
2063  91F3              Genera_explosion
2064  91F3
2065  91F3 21 36 8C     	ld hl,Clock_explosion
2066  91F6 35           	dec (hl)
2067  91F7 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2068  91F9
2069  91F9              Borra_entidad_colisionada
2070  91F9
2071  91F9 CD 02 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2072  91FC CD 0B 90     	call Cargamos_registros_con_explosion
2073  91FF CD F3 94     	call Genera_datos_de_impresion
2074  9202
2075  9202 AF           	xor a
2076  9203 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2077  9204
2078  9204 C9           	ret
2079  9205
2080  9205              Siguiente_frame_explosion
2081  9205
2082  9205 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2083  9207
2084  9207              ; Avanza Frame de explosión.
2085  9207
2086  9207 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2087  920A 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2088  920D
2089  920D 79           	ld a,c
2090  920E 95           	sub l
2091  920F 20 0B        	jr nz,1F
2092  9211
2093  9211              ; Fín de la entidad !!!!!!!!!!!!!
2094  9211
2095  9211 21 FA 8B     	ld hl,Numero_parcial_de_entidades
2096  9214 35           	dec (hl)
2097  9215 23           	inc hl
2098  9216 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2099  9217
2100  9217 CD 73 93     	call Limpiamos_bandeja_DRAW
2101  921A 18 DD        	jr Borra_entidad_colisionada
2102  921C
2103  921C 23           1 inc hl
2104  921D 23           	inc hl
2105  921E 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2106  9221 18 D6        	jr Borra_entidad_colisionada
2107  9223
2108  9223              ; ----- ----- ----- ----- -----
2109  9223
2110  9223              Genera_explosion_Amadeus
2111  9223
2112  9223 21 37 8C     	ld hl,Clock_explosion_Amadeus
2113  9226 35           	dec (hl)
2114  9227 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2115  9229
2116  9229              Borra_Amadeus_impactado
2117  9229
2118  9229 CD 79 8E     	call Change_Amadeus
2119  922C CD 18 90     	call Cargamos_registros_con_explosion_Amadeus
2120  922F CD 39 90     	call Genera_datos_de_impresion_Amadeus
2121  9232
2122  9232 21 26 8C     	ld hl,Ctrl_3
2123  9235 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2124  9237
2125  9237 AF           	xor a
2126  9238 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2127  9239
2128  9239 C9           	ret
2129  923A
2130  923A              Siguiente_frame_explosion_Amadeus
2131  923A
2132  923A 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2133  923C
2134  923C              ; Avanza Frame de explosión.
2135  923C
2136  923C 2A 74 89     	ld hl,(Pamm_Amadeus)
2137  923F 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2138  9242
2139  9242 79           	ld a,c
2140  9243 95           	sub l
2141  9244 20 0B        	jr nz,1F
2142  9246
2143  9246              ; Fín de Amadeus !!!!!!!!!!!!!
2144  9246              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2145  9246
2146  9246 AF           	xor a
2147  9247 32 71 89     	ld (Impacto_Amadeus),a
2148  924A 21 26 8C     	ld hl,Ctrl_3
2149  924D CB F6        	set 6,(hl)
2150  924F
2151  924F 18 D8        	jr Borra_Amadeus_impactado
2152  9251
2153  9251 23           1 inc hl
2154  9252 23           	inc hl
2155  9253 22 74 89     	ld (Pamm_Amadeus),hl
2156  9256 18 D1        	jr Borra_Amadeus_impactado
2157  9258
2158  9258              ; ---------------------------------------------------------------
2159  9258
2160  9258              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9258              ; ******************************************************************************************************************************************************************************************
   2+ 9258              ;
   3+ 9258              ;   21/04/24
   4+ 9258              ;
   5+ 9258              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9258              ;   (XOR) bit a bit.
   7+ 9258              ;
   8+ 9258              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9258
  10+ 9258              Derivando_RND
  11+ 9258
  12+ 9258 21 F6 88         ld hl,Numeros_aleatorios
  13+ 925B
  14+ 925B ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 925D C5               push bc
  16+ 925E              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 925E 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9261              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9261
  20+ 9261 A7           6 and a                                 ; Carry a "0".
  21+ 9262 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9264 30 02            jr nc,1F
  23+ 9266
  24+ 9266 CB C1            set 0,c
  25+ 9268
  26+ 9268 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9269 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 926B 5F               ld e,a
  29+ 926C
  30+ 926C 7A               ld a,d
  31+ 926D E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 926F 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9271
  34+ 9271 CB 3F            srl a
  35+ 9273
  36+ 9273 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9274
  38+ 9274 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9275 28 04            jr z,4F
  40+ 9277
  41+ 9277 CB FF            set 7,a
  42+ 9279 18 02            jr 5F
  43+ 927B
  44+ 927B CB BF        4 res 7,a
  45+ 927D
  46+ 927D CB 21        5 sla c
  47+ 927F 10 E0            djnz 6B
  48+ 9281
  49+ 9281 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9282
  51+ 9282 77               ld (hl),a
  52+ 9283 23               inc hl
  53+ 9284 C1               pop bc
  54+ 9285 10 D4            djnz 3B
  55+ 9287
  56+ 9287 C9               ret
  57+ 9288
  58+ 9288
  59+ 9288
# file closed: RND_Derivando.asm
2161  9288              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9288              ;---------------------------------------------------------------------------------------------------------------
   2+ 9288              ;
   3+ 9288              ;   8/3/24
   4+ 9288              ;
   5+ 9288              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9288              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9288              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9288              ;	_ de la 1ª entidad del Nivel.
   9+ 9288              ;
  10+ 9288              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9288
  12+ 9288              ;	MODIFICA: HL,DE y A.
  13+ 9288              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9288
  15+ 9288              Inicializa_Nivel
  16+ 9288
  17+ 9288 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 928B CD A8 90     	call Extrae_address
  19+ 928E 7E           	ld a,(hl)
  20+ 928F 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9292 23           	inc hl
  22+ 9293 CD A0 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9296 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9299 CD A9 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 929C
  26+ 929C CD BA 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 929F C9           	ret
  28+ 92A0
  29+ 92A0              ; ----------------------
  30+ 92A0
  31+ 92A0 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92A3 01 04 00     	ld bc,4
  33+ 92A6 ED B0        	ldir
  34+ 92A8 C9           	ret
  35+ 92A9
  36+ 92A9 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92AA CD 44 94         call Calcula_salto_en_BC
  38+ 92AD 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92B0 A7               and a
  40+ 92B1 ED 4A            adc hl,bc
  41+ 92B3 CD A8 90         call Extrae_address
  42+ 92B6 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 92B9 C9               ret
  44+ 92BA
  45+ 92BA 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92BD CD 44 94     	call Calcula_salto_en_BC
  47+ 92C0 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92C3 A7               and a
  49+ 92C4 ED 4A            adc hl,bc
  50+ 92C6 CD A8 90         call Extrae_address
  51+ 92C9 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92CC C9           	ret
  53+ 92CD
  54+ 92CD              ;---------------------------------------------------------------------------------------------------------------
  55+ 92CD              ;
  56+ 92CD              ;   5/1/24
  57+ 92CD              ;
  58+ 92CD              ;	Destruye A,BC,HL,DE
  59+ 92CD
  60+ 92CD              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92CD              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92CD
  63+ 92CD              Inicia_Entidades
  64+ 92CD
  65+ 92CD              ; Preparamos los punteros de las cajas de entidades:
  66+ 92CD
  67+ 92CD CD 8B 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92D0              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92D0 CD 8C 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92D3
  71+ 92D3 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92D6
  73+ 92D6 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92D9
  75+ 92D9 CD F2 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92DC
  77+ 92DC 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92DF
  79+ 92DF              ; En este punto:
  80+ 92DF              ;
  81+ 92DF              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92DF              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92DF
  84+ 92DF C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92E0
  86+ 92E0 7E           	ld a,(hl)
  87+ 92E1 CD 5E 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92E4
  89+ 92E4 CD 56 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92E7
  91+ 92E7              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92E7
  93+ 92E7 CD 14 94     	call Busca_mov_masticados_segun_tipo
  94+ 92EA
  95+ 92EA A7           	and a
  96+ 92EB 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92ED
  98+ 92ED              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92ED
 100+ 92ED              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92ED              ;	_ de este tipo de entidad.
 102+ 92ED
 103+ 92ED CD EC 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92F0 CD F9 9E     	call Transfiere_datos_de_contadores
 105+ 92F3
 106+ 92F3 18 06        	jr 4F
 107+ 92F5
 108+ 92F5 CD 9E 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92F8
 110+ 92F8              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92F8              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92F8              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92F8              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92F8              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92F8
 116+ 92F8 CD D2 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92FB              ;																; _ Mov_masticados ya generados.
 118+ 92FB
 119+ 92FB CD F2 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92FE
 121+ 92FE DD E5        	push ix
 122+ 9300 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9301
 124+ 9301 D5           	push de
 125+ 9302 CD C7 94     	call Genera_coordenadas
 126+ 9305
 127+ 9305 ED 5B 20 8C  	ld de,(Scanlines_album_SP)
 128+ 9309 CD 02 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 930C D1           	pop de
 130+ 930D
 131+ 930D CD F3 94     	call Genera_datos_de_impresion
 132+ 9310              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9310              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9310              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9310              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9310
 137+ 9310 CD 96 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9313
 139+ 9313              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9313
 141+ 9313 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 9317 CD 83 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 931A
 144+ 931A CD 73 93     	call Limpiamos_bandeja_DRAW
 145+ 931D CD F6 90     	call Incrementa_punteros_de_cajas
 146+ 9320
 147+ 9320              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9320              ; _ entidad del Nivel.
 149+ 9320
 150+ 9320 3A 27 8C     	ld a,(Ctrl_4)
 151+ 9323 E6 F0        	and $f0
 152+ 9325 32 27 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9328
 154+ 9328              ; Siguiente entidad del Nivel.
 155+ 9328
 156+ 9328 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 932B 23           	inc hl 														; _ entidad del Nivel.
 158+ 932C
 159+ 932C C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 932D
 161+ 932D 10 A7        	djnz 2B
 162+ 932F
 163+ 932F C9           	ret
 164+ 9330
 165+ 9330              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9330              ;
 167+ 9330              ;	27/5/24
 168+ 9330              ;
 169+ 9330              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9330              ;
 171+ 9330
 172+ 9330              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9330              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9330
 175+ 9330 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9333 CD 56 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9336
 178+ 9336
 179+ 9336              Construye_movimientos_masticados_Amadeus
 180+ 9336
 181+ 9336 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9339 CD E5 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 933C              ;															; _ el (Contador_de_mov_masticados).
 184+ 933C CD AE 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 933F              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 933F
 187+ 933F              ; Generamos movimientos masticados de Amadeus.
 188+ 933F
 189+ 933F 06 79        	ld b,121												; $0079, 121d.
 190+ 9341
 191+ 9341 C5           1 push bc
 192+ 9342 CD 0B 97     	call Draw
 193+ 9345 CD CA 8F     	call Guarda_movimiento_masticado
 194+ 9348
 195+ 9348 CD 7F 9A     	call Mov_right
 196+ 934B CD 7F 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 934E
 198+ 934E C1           	pop bc
 199+ 934F 10 F0        	djnz 1B
 200+ 9351
 201+ 9351              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9351
 203+ 9351              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9351              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9351
 206+ 9351 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9354 01 08 00     	ld bc,8
 208+ 9357 A7           	and a
 209+ 9358 ED 42        	sbc hl,bc
 210+ 935A 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 935D
 212+ 935D C9           	ret
 213+ 935E
 214+ 935E              ; ---------------------------------------------------------------------
 215+ 935E              ;
 216+ 935E              ;	10/02/24
 217+ 935E              ;
 218+ 935E              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 935E              ;
 220+ 935E              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 935E
 222+ 935E              Definicion_segun_tipo
 223+ 935E
 224+ 935E CD 44 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9361 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9364 CD 4C 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9367 C9           	ret
 228+ 9368
 229+ 9368              ; ---------------------------------------------------------------------
 230+ 9368              ;
 231+ 9368              ;	6/7/24
 232+ 9368
 233+ 9368
 234+ 9368              Store_Restore_cajas
 235+ 9368
 236+ 9368 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 936C CD 83 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 936F CD F6 90     	call Incrementa_punteros_de_cajas
 239+ 9372 C9           	ret
 240+ 9373
 241+ 9373              ; ---------------------------------------------------------------------
 242+ 9373              ;
 243+ 9373              ;	23/6/24
 244+ 9373              ;
 245+ 9373              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9373              ;
 247+ 9373              ;	MODIFY: HL
 248+ 9373
 249+ 9373              Limpiamos_bandeja_DRAW
 250+ 9373
 251+ 9373 ED 73 00 8C  	ld (Stack),sp
 252+ 9377 31 D8 8B     	ld sp,Vel_left
 253+ 937A
 254+ 937A AF           	xor a
 255+ 937B 67           	ld h,a
 256+ 937C 6F           	ld l,a
 257+ 937D
 258+ 937D E5           	push hl
 259+ 937E E5           	push hl
 260+ 937F E5           	push hl
 261+ 9380 E5           	push hl
 262+ 9381 E5           	push hl
 263+ 9382 E5           	push hl
 264+ 9383 E5           	push hl
 265+ 9384 E5           	push hl
 266+ 9385 E5           	push hl
 267+ 9386 E5           	push hl
 268+ 9387 E5           	push hl
 269+ 9388 E5           	push hl
 270+ 9389 E5           	push hl
 271+ 938A E5           	push hl
 272+ 938B E5           	push hl
 273+ 938C E5           	push hl
 274+ 938D E5           	push hl
 275+ 938E E5           	push hl
 276+ 938F
 277+ 938F 33           	inc sp
 278+ 9390
 279+ 9390 E5           	push hl
 280+ 9391 ED 7B 00 8C  	ld sp,(Stack)
 281+ 9395
 282+ 9395 C9           	ret
 283+ 9396
 284+ 9396              ; ---------------------------------------------------------------------
 285+ 9396              ;
 286+ 9396              ;	24/03/24
 287+ 9396
 288+ 9396 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9399 2B           	dec hl
 290+ 939A 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 939D C9           	ret
 292+ 939E
 293+ 939E              ; ---------------------------------------------------------------------
 294+ 939E              ;
 295+ 939E              ;	8/5/24
 296+ 939E
 297+ 939E              Reinicia_entidad_maliciosa
 298+ 939E
 299+ 939E              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 939E
 301+ 939E CD EC 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93A1 CD F9 9E     	call Transfiere_datos_de_contadores
 303+ 93A4
 304+ 93A4              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93A4
 306+ 93A4 3A B3 8B     	ld a,(Tipo)
 307+ 93A7 CD 5E 93     	call Definicion_segun_tipo
 308+ 93AA
 309+ 93AA E5           	push hl
 310+ 93AB DD E1        	pop ix
 311+ 93AD
 312+ 93AD DD 6E 0B     	ld l,(ix+11)
 313+ 93B0 DD 66 0C     	ld h,(ix+12)
 314+ 93B3
 315+ 93B3 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93B6
 317+ 93B6 CD F2 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93B9
 319+ 93B9              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93B9              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93B9              ; Ejemplos.
 322+ 93B9
 323+ 93B9              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93B9              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93B9              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93B9              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93B9              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93B9
 329+ 93B9 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 93BC CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93BE
 332+ 93BE 7E           	ld a,(hl)
 333+ 93BF CB 2F        	sra a
 334+ 93C1 CB 2F        	sra a
 335+ 93C3
 336+ 93C3 32 BE 8B     	ld (Velocidad),a
 337+ 93C6
 338+ 93C6 3E 40        	ld a,$40
 339+ 93C8 BE           	cp (hl)
 340+ 93C9 C0           	ret nz
 341+ 93CA
 342+ 93CA              ; Límitador.
 343+ 93CA
 344+ 93CA              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93CA
 346+ 93CA CB 2E        	sra (hl)
 347+ 93CC 21 BE 8B     	ld hl,Velocidad
 348+ 93CF CB 2E        	sra (hl)
 349+ 93D1
 350+ 93D1 C9           	ret
 351+ 93D2
 352+ 93D2              ; ---------------------------------------------------------------------
 353+ 93D2              ;
 354+ 93D2              ;	22/01/24
 355+ 93D2
 356+ 93D2 21 27 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93D5 CB 46        	bit 0,(hl)
 358+ 93D7 20 0D        	jr nz,1F
 359+ 93D9 CB 4E        	bit 1,(hl)
 360+ 93DB 20 0C        	jr nz,2F
 361+ 93DD CB 56        	bit 2,(hl)
 362+ 93DF 20 0B        	jr nz,3F
 363+ 93E1 CB 5E        	bit 3,(hl)
 364+ 93E3 20 0A        	jr nz,4F
 365+ 93E5 C9           	ret
 366+ 93E6
 367+ 93E6 CB E6        1 set 4,(hl)
 368+ 93E8 C9           	ret
 369+ 93E9 CB EE        2 set 5,(hl)
 370+ 93EB C9           	ret
 371+ 93EC CB F6        3 set 6,(hl)
 372+ 93EE C9           	ret
 373+ 93EF CB FE        4 set 7,(hl)
 374+ 93F1 C9           	ret
 375+ 93F2
 376+ 93F2              ; ---------------------------------------------------------------------
 377+ 93F2              ;
 378+ 93F2              ;	23/01/24
 379+ 93F2              ;
 380+ 93F2              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93F2              ;
 382+ 93F2              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93F2              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93F2              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93F2              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93F2
 387+ 93F2              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93F2
 389+ 93F2 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93F3 3D           	dec a
 391+ 93F4 20 06        	jr nz,1F
 392+ 93F6
 393+ 93F6              ; --- Tipo_1
 394+ 93F6
 395+ 93F6 21 27 8C     	ld hl,Ctrl_4
 396+ 93F9 CB C6        	set 0,(hl)
 397+ 93FB C9           	ret
 398+ 93FC
 399+ 93FC 3D           1 dec a
 400+ 93FD 20 06        	jr nz,2F
 401+ 93FF
 402+ 93FF              ; --- Tipo_2
 403+ 93FF
 404+ 93FF 21 27 8C     	ld hl,Ctrl_4
 405+ 9402 CB CE        	set 1,(hl)
 406+ 9404 C9           	ret
 407+ 9405
 408+ 9405 3D           2 dec a
 409+ 9406 20 06        	jr nz,3F
 410+ 9408
 411+ 9408              ; --- Tipo_3
 412+ 9408
 413+ 9408 21 27 8C     	ld hl,Ctrl_4
 414+ 940B CB D6        	set 2,(hl)
 415+ 940D C9           	ret
 416+ 940E
 417+ 940E              ; --- Tipo_3
 418+ 940E
 419+ 940E 21 27 8C     3 ld hl,Ctrl_4
 420+ 9411 CB D6        	set 2,(hl)
 421+ 9413 C9           	ret
 422+ 9414
 423+ 9414              ; ---------------------------------------------------------------------
 424+ 9414              ;
 425+ 9414              ;	22/01/24
 426+ 9414
 427+ 9414 21 27 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9417 CB 46        	bit 0,(hl)
 429+ 9419 20 0E        	jr nz,1F
 430+ 941B
 431+ 941B CB 4E        	bit 1,(hl)
 432+ 941D 20 10        	jr nz,2F
 433+ 941F
 434+ 941F CB 56        	bit 2,(hl)
 435+ 9421 20 12        	jr nz,3F
 436+ 9423
 437+ 9423 CB 5E        	bit 3,(hl)
 438+ 9425 20 14        	jr nz,4F
 439+ 9427 18 19        	jr 6F
 440+ 9429
 441+ 9429              ; Entidad_de_Tipo_1.
 442+ 9429
 443+ 9429 CB 66        1 bit 4,(hl)
 444+ 942B 28 15        	jr z,6F
 445+ 942D 18 10        	jr 5F
 446+ 942F
 447+ 942F              ; Entidad_de_Tipo_2.
 448+ 942F
 449+ 942F CB 6E        2 bit 5,(hl)
 450+ 9431 28 0F        	jr z,6F
 451+ 9433 18 0A        	jr 5F
 452+ 9435
 453+ 9435              ; Entidad_de_Tipo_3.
 454+ 9435
 455+ 9435 CB 76        3 bit 6,(hl)
 456+ 9437 28 09        	jr z,6F
 457+ 9439 18 04        	jr 5F
 458+ 943B
 459+ 943B              ; Entidad_de_Tipo_4.
 460+ 943B
 461+ 943B CB 7E        4 bit 7,(hl)
 462+ 943D 28 03        	jr z,6F
 463+ 943F
 464+ 943F              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 943F
 466+ 943F AF           5 xor a
 467+ 9440 3C           	inc a
 468+ 9441 C9           	ret
 469+ 9442
 470+ 9442              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9442
 472+ 9442 AF           6 xor a
 473+ 9443 C9           	ret
 474+ 9444
 475+ 9444              ;	------------------------------------------------------------------------------------
 476+ 9444              ;
 477+ 9444              ;	12/01/24
 478+ 9444              ;
 479+ 9444              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9444              ;
 481+ 9444              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9444              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9444
 484+ 9444 CB 27        Calcula_salto_en_BC sla a
 485+ 9446 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9448 4F           	ld c,a
 487+ 9449 06 00        	ld b,0
 488+ 944B C9           	ret
 489+ 944C
 490+ 944C              ; ------------------------------------------------------------------
 491+ 944C              ;
 492+ 944C              ;	19/1/24
 493+ 944C              ;
 494+ 944C              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 944C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 944C
 497+ 944C A7           Situa_en_datos_de_definicion and a
 498+ 944D ED 4A        	adc hl,bc
 499+ 944F CD A8 90     	call Extrae_address
 500+ 9452 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 9455 C9           	ret
 502+ 9456
 503+ 9456              ; ------------------------------------------------------------------
 504+ 9456
 505+ 9456              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9456              ; 	inc de
 507+ 9456              ; 	inc de
 508+ 9456              ; 	ex de,hl
 509+ 9456              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9456              ; 	ret
 511+ 9456
 512+ 9456              ; ----------------------------------------------------------------------------------------------------------
 513+ 9456              ;
 514+ 9456              ;	24/6/24
 515+ 9456              ;
 516+ 9456              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9456              ;	_ de entidad.
 518+ 9456              ;
 519+ 9456              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9456              ;
 521+ 9456              ;
 522+ 9456              ;	MODIFICA: HL,DE y BC
 523+ 9456
 524+ 9456
 525+ 9456              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9456
 527+ 9456 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9459 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 945A 12           	ld (de),a
 530+ 945B 23           	inc hl
 531+ 945C              ;
 532+ 945C 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 945F 01 02 00     	ld bc,2
 534+ 9462 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9464              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9464 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 9467 7E           	ld a,(hl)
 538+ 9468 12           	ld (de),a
 539+ 9469 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 946A
 541+ 946A 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 946D 01 04 00     	ld bc,4
 543+ 9470 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9472
 545+ 9472 11 D0 8B     	ld de,Posicion_inicio
 546+ 9475 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9478 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 947A
 549+ 947A 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 947D 01 02 00     	ld bc,2
 551+ 9480 ED B0        	ldir
 552+ 9482
 553+ 9482 C9           	ret
 554+ 9483
 555+ 9483              ; ----------------------------------------------------------------------------------------------------------
 556+ 9483              ;
 557+ 9483              ;	1/8/24
 558+ 9483              ;
 559+ 9483
 560+ 9483              Parametros_de_bandeja_DRAW_a_caja
 561+ 9483
 562+ 9483 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 9486 01 0C 00     	ld bc,12
 564+ 9489 ED B0        	ldir
 565+ 948B C9           	ret
 566+ 948C
 567+ 948C              ;---------------------------------------------------------------------------------------------------------------
 568+ 948C              ;
 569+ 948C              ;	5/1/24
 570+ 948C              ;
 571+ 948C              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 948C              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 948C              ;
 574+ 948C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 948C              ;
 576+ 948C              ;	(Numero_parcial_de_entidades)="7".
 577+ 948C              ;
 578+ 948C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 948C              ;
 580+ 948C              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 948C              ;
 582+ 948C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 948C              ;	MODIFICA: A y B.
 584+ 948C              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 948C
 586+ 948C              Inicializa_Numero_parcial_de_entidades
 587+ 948C
 588+ 948C              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 948C
 590+ 948C 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 948F A7           	and a
 592+ 9490
 593+ 9490              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9490              ;	jr z,$
 595+ 9490              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9490
 597+ 9490 20 03        	jr nz,3F
 598+ 9492
 599+ 9492              ; ---------- ---------- ----------
 600+ 9492
 601+ 9492              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9492              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9492
 604+ 9492 CD 88 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9495
 606+ 9495              ; ---------- ---------- ----------
 607+ 9495
 608+ 9495 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9498 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 949A 38 08        	jr c,1F
 611+ 949C
 612+ 949C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 949C              ; Actualizamos variables.
 614+ 949C
 615+ 949C 3E 07        	ld a,7
 616+ 949E 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94A1 47           	ld b,a
 618+ 94A2 18 04        	jr 2F
 619+ 94A4
 620+ 94A4              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94A4              ; (Numero_de_entidades)="0".
 622+ 94A4
 623+ 94A4 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94A7 47           	ld b,a
 625+ 94A8 C9           2 ret
 626+ 94A9
# file closed: Rutinas_de_inicio_y_niveles.asm
2162  94A9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94A9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94A9              ;
   3+ 94A9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94A9              ;
   5+ 94A9              ; *****************************************************************************************************************************************************************************************
   6+ 94A9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94A9
   8+ 94A9 7C           calcula_tercio ld a,h
   9+ 94AA E6 18        	and $18
  10+ 94AC CB 2F        	sra a
  11+ 94AE CB 2F        	sra a
  12+ 94B0 CB 2F        	sra a
  13+ 94B2 C9           	ret
  14+ 94B3
# file closed: calcula_tercio.asm
2163  94B3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94B3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94B3              ;
   3+ 94B3              ;
   4+ 94B3              ;	CLS.
   5+ 94B3              ;
   6+ 94B3              ;	Limpia la pantalla y define sus atributos.
   7+ 94B3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94B3              ;
   9+ 94B3              ;	COLORES: 0 ..... NEGRO
  10+ 94B3              ;    		 1 ..... AZUL
  11+ 94B3              ; 			 2 ..... ROJO
  12+ 94B3              ;			 3 ..... MAGENTA
  13+ 94B3              ; 			 4 ..... VERDE
  14+ 94B3              ; 			 5 ..... CIAN
  15+ 94B3              ;			 6 ..... AMARILLO
  16+ 94B3              ; 			 7 ..... BLANCO
  17+ 94B3              ;
  18+ 94B3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94B3              ;
  20+ 94B3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94B3
  22+ 94B3
  23+ 94B3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94B6 11 01 40     	LD DE,$4001
  25+ 94B9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94BC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94BE ED B0        	LDIR
  28+ 94C0 01 FF 02     	LD BC,767
  29+ 94C3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94C4 ED B0        	LDIR
  31+ 94C6 C9           	ret
  32+ 94C7
# file closed: Cls.asm
2164  94C7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94C7              ; ------------------------------------------------------------------------
   2+ 94C7              ;
   3+ 94C7              ;	30/1/24
   4+ 94C7              ;
   5+ 94C7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94C7              ;	Fila superior "0", Columna izquierda "0".
   7+ 94C7              ;
   8+ 94C7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94C7              ;
  10+ 94C7              ;	Modifica: A,BC y DE.
  11+ 94C7
  12+ 94C7 7D           Genera_coordenadas ld a,l
  13+ 94C8 E6 1F        	and $1f
  14+ 94CA 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94CD
  16+ 94CD 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94CE FE 40        	cp $40
  18+ 94D0 38 1C        	jr c,4F
  19+ 94D2
  20+ 94D2 CD A9 94     	call calcula_tercio
  21+ 94D5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94D6
  23+ 94D6 1E 00        	ld e,0
  24+ 94D8 7D           	ld a,l
  25+ 94D9 E6 E0        	and $e0
  26+ 94DB 28 01        	jr z,1F
  27+ 94DD 04           	inc b
  28+ 94DE
  29+ 94DE 04           1 inc b
  30+ 94DF 05           	dec b
  31+ 94E0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94E2              ;														; _ , salimos.
  33+ 94E2 1C           3 inc e
  34+ 94E3 D6 20        	sub 32
  35+ 94E5 20 FB        	jr nz,3B
  36+ 94E7 10 F5        	djnz 1B
  37+ 94E9
  38+ 94E9 7B           2 ld a,e
  39+ 94EA 32 B5 8B     	ld (Coordenada_y),a
  40+ 94ED C9           	ret
  41+ 94EE
  42+ 94EE AF           4 xor a
  43+ 94EF 32 B5 8B     	ld (Coordenada_y),a
  44+ 94F2 C9           	ret
  45+ 94F3
# file closed: Genera_coordenadas.asm
2165  94F3              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94F3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94F3              ;
   3+ 94F3              ;	11/03/24
   4+ 94F3              ;
   5+ 94F3              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94F3              ;   DE contiene Puntero_objeto.
   7+ 94F3              ;   IX contiene el Puntero de impresión.
   8+ 94F3
   9+ 94F3              Genera_datos_de_impresion
  10+ 94F3
  11+ 94F3 ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94F7
  13+ 94F7 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94FA DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94FC
  16+ 94FC 2A 20 8C         ld hl,(Scanlines_album_SP)
  17+ 94FF
  18+ 94FF 3E 05            ld a,5
  19+ 9501 85               add l
  20+ 9502 6F               ld l,a
  21+ 9503
  22+ 9503 F9               ld sp,hl
  23+ 9504 22 20 8C         ld (Scanlines_album_SP),hl
  24+ 9507
  25+ 9507 21 00 00         ld hl,0
  26+ 950A
  27+ 950A DD E5            push ix
  28+ 950C 3B               dec sp
  29+ 950D ED 7A            adc hl,sp
  30+ 950F D5               push de
  31+ 9510
  32+ 9510              ; Recuperamos SP.
  33+ 9510
  34+ 9510 ED 7B 00 8C      ld sp,(Stack)
  35+ 9514
  36+ 9514 E5               push hl
  37+ 9515 F1               pop af
  38+ 9516 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9517
  40+ 9517              ; Tenemos el encabezado listo.
  41+ 9517              ; Preparamos registros para generar los scanlines.
  42+ 9517
  43+ 9517 DD E5            push ix
  44+ 9519 E1               pop hl                                          ; 1er scanline en HL.
  45+ 951A
  46+ 951A ED 5B 20 8C      ld de,(Scanlines_album_SP)
  47+ 951E
  48+ 951E              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 951E              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 951E
  51+ 951E 7C               ld a,h
  52+ 951F FE 50            cp $50
  53+ 9521 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9523
  55+ 9523 20 05            jr nz,2F
  56+ 9525
  57+ 9525 7D               ld a,l
  58+ 9526 FE E0            cp $e0
  59+ 9528 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 952A
  61+ 952A 7D           2 ld a,l
  62+ 952B FE C0            cp $c0
  63+ 952D D2 BF 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9530
  65+ 9530              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9530
  67+ 9530 CD BD 99         call NextScan
  68+ 9533 EB               ex de,hl
  69+ 9534
  70+ 9534 73               ld (hl),e
  71+ 9535 23               inc hl
  72+ 9536 72               ld (hl),d
  73+ 9537 23               inc hl
  74+ 9538
  75+ 9538 EB               ex de,hl
  76+ 9539
  77+ 9539 CD BD 99         call NextScan
  78+ 953C EB               ex de,hl
  79+ 953D
  80+ 953D 73               ld (hl),e
  81+ 953E 23               inc hl
  82+ 953F 72               ld (hl),d
  83+ 9540 23               inc hl
  84+ 9541
  85+ 9541 EB               ex de,hl
  86+ 9542
  87+ 9542 CD BD 99         call NextScan
  88+ 9545 EB               ex de,hl
  89+ 9546
  90+ 9546 73               ld (hl),e
  91+ 9547 23               inc hl
  92+ 9548 72               ld (hl),d
  93+ 9549 23               inc hl
  94+ 954A
  95+ 954A EB               ex de,hl
  96+ 954B
  97+ 954B CD BD 99         call NextScan
  98+ 954E EB               ex de,hl
  99+ 954F
 100+ 954F 73               ld (hl),e
 101+ 9550 23               inc hl
 102+ 9551 72               ld (hl),d
 103+ 9552 23               inc hl
 104+ 9553
 105+ 9553 EB               ex de,hl
 106+ 9554
 107+ 9554 CD BD 99         call NextScan
 108+ 9557 EB               ex de,hl
 109+ 9558
 110+ 9558 73               ld (hl),e
 111+ 9559 23               inc hl
 112+ 955A 72               ld (hl),d
 113+ 955B 23               inc hl
 114+ 955C
 115+ 955C EB               ex de,hl
 116+ 955D
 117+ 955D CD BD 99         call NextScan
 118+ 9560 EB               ex de,hl
 119+ 9561
 120+ 9561 73               ld (hl),e
 121+ 9562 23               inc hl
 122+ 9563 72               ld (hl),d
 123+ 9564 23               inc hl
 124+ 9565
 125+ 9565 EB               ex de,hl
 126+ 9566
 127+ 9566 CD BD 99         call NextScan
 128+ 9569 EB               ex de,hl
 129+ 956A
 130+ 956A 73               ld (hl),e
 131+ 956B 23               inc hl
 132+ 956C 72               ld (hl),d
 133+ 956D 23               inc hl
 134+ 956E
 135+ 956E EB               ex de,hl
 136+ 956F
 137+ 956F CD BD 99         call NextScan
 138+ 9572 EB               ex de,hl
 139+ 9573
 140+ 9573 73               ld (hl),e
 141+ 9574 23               inc hl
 142+ 9575 72               ld (hl),d
 143+ 9576 23               inc hl
 144+ 9577
 145+ 9577 EB               ex de,hl
 146+ 9578
 147+ 9578 CD BD 99         call NextScan
 148+ 957B EB               ex de,hl
 149+ 957C
 150+ 957C 73               ld (hl),e
 151+ 957D 23               inc hl
 152+ 957E 72               ld (hl),d
 153+ 957F 23               inc hl
 154+ 9580
 155+ 9580 EB               ex de,hl
 156+ 9581
 157+ 9581 CD BD 99         call NextScan
 158+ 9584 EB               ex de,hl
 159+ 9585
 160+ 9585 73               ld (hl),e
 161+ 9586 23               inc hl
 162+ 9587 72               ld (hl),d
 163+ 9588 23               inc hl
 164+ 9589
 165+ 9589 EB               ex de,hl
 166+ 958A
 167+ 958A CD BD 99         call NextScan
 168+ 958D EB               ex de,hl
 169+ 958E
 170+ 958E 73               ld (hl),e
 171+ 958F 23               inc hl
 172+ 9590 72               ld (hl),d
 173+ 9591 23               inc hl
 174+ 9592
 175+ 9592 EB               ex de,hl
 176+ 9593
 177+ 9593 CD BD 99         call NextScan
 178+ 9596 EB               ex de,hl
 179+ 9597
 180+ 9597 73               ld (hl),e
 181+ 9598 23               inc hl
 182+ 9599 72               ld (hl),d
 183+ 959A 23               inc hl
 184+ 959B
 185+ 959B EB               ex de,hl
 186+ 959C
 187+ 959C CD BD 99         call NextScan
 188+ 959F EB               ex de,hl
 189+ 95A0
 190+ 95A0 73               ld (hl),e
 191+ 95A1 23               inc hl
 192+ 95A2 72               ld (hl),d
 193+ 95A3 23               inc hl
 194+ 95A4
 195+ 95A4 EB               ex de,hl
 196+ 95A5
 197+ 95A5 CD BD 99         call NextScan
 198+ 95A8 EB               ex de,hl
 199+ 95A9
 200+ 95A9 73               ld (hl),e
 201+ 95AA 23               inc hl
 202+ 95AB 72               ld (hl),d
 203+ 95AC 23               inc hl
 204+ 95AD
 205+ 95AD EB               ex de,hl
 206+ 95AE
 207+ 95AE CD BD 99         call NextScan
 208+ 95B1 EB               ex de,hl
 209+ 95B2
 210+ 95B2 73               ld (hl),e
 211+ 95B3 23               inc hl
 212+ 95B4 72               ld (hl),d
 213+ 95B5 23               inc hl
 214+ 95B6
 215+ 95B6              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 95B6
 217+ 95B6 22 20 8C         ld (Scanlines_album_SP),hl
 218+ 95B9
 219+ 95B9              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 95B9
 221+ 95B9 08               ex af,af
 222+ 95BA
 223+ 95BA F5               push af
 224+ 95BB E1               pop hl
 225+ 95BC
 226+ 95BC 36 10            ld (hl),16
 227+ 95BE
 228+ 95BE C9               ret
 229+ 95BF
 230+ 95BF              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 95BF
 232+ 95BF              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 95BF
 234+ 95BF 3E 57            ld a,$57
 235+ 95C1 94               sub h
 236+ 95C2 47               ld b,a
 237+ 95C3
 238+ 95C3 3E DF            ld a,$df
 239+ 95C5 BD               cp l
 240+ 95C6 38 04            jr c,1F
 241+ 95C8
 242+ 95C8 3E 08            ld a,8
 243+ 95CA 80               add b
 244+ 95CB 47               ld b,a
 245+ 95CC
 246+ 95CC              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95CC              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95CC
 249+ 95CC 48           1 ld c,b
 250+ 95CD 0C               inc c
 251+ 95CE
 252+ 95CE 04               inc b
 253+ 95CF 05               dec b
 254+ 95D0 20 02            jr nz,3F
 255+ 95D2
 256+ 95D2 18 0B            jr 6F
 257+ 95D4
 258+ 95D4 CD BD 99     3 call NextScan
 259+ 95D7 EB               ex de,hl
 260+ 95D8
 261+ 95D8 73               ld (hl),e
 262+ 95D9 23               inc hl
 263+ 95DA 72               ld (hl),d
 264+ 95DB 23               inc hl
 265+ 95DC
 266+ 95DC EB               ex de,hl
 267+ 95DD 10 F5            djnz 3B
 268+ 95DF
 269+ 95DF ED 53 20 8C  6 ld (Scanlines_album_SP),de
 270+ 95E3
 271+ 95E3 08           5 ex af,af
 272+ 95E4 F5               push af
 273+ 95E5 E1               pop hl
 274+ 95E6
 275+ 95E6 71               ld (hl),c
 276+ 95E7
 277+ 95E7 C9               ret
 278+ 95E8
# file closed: Genera_datos_de_impresion.asm
2166  95E8              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95E8              ; -----------------------------------------------------------------------------
   2+ 95E8              ;
   3+ 95E8              ;   11/03/24
   4+ 95E8              ;
   5+ 95E8
   6+ 95E8              Pinta_Sprites
   7+ 95E8
   8+ 95E8              ;    ld hl,(Scanlines_album_SP)
   9+ 95E8              ;    call Extrae_address
  10+ 95E8
  11+ 95E8              ;    inc h
  12+ 95E8              ;    dec h
  13+ 95E8              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95E8
  15+ 95E8 ED 73 00 8C      ld (Stack),sp
  16+ 95EC
  17+ 95EC EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95ED              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95ED 2C               inc l
  20+ 95EE 2C               inc l
  21+ 95EF
  22+ 95EF 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95F0
  24+ 95F0 2C               inc l
  25+ 95F1 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95F2
  27+ 95F2              ;   Seleccionamos rutina de impresión:
  28+ 95F2
  29+ 95F2 3E 10            ld a,16
  30+ 95F4 B8               cp b
  31+ 95F5 C2 F1 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95F8
  33+ 95F8              ;   Rutinas:
  34+ 95F8
  35+ 95F8              Pinta_rapido    ;   1520 t/states.
  36+ 95F8
  37+ 95F8 E1               pop hl
  38+ 95F9
  39+ 95F9 1A               ld a,(de)
  40+ 95FA AE               xor (hl)
  41+ 95FB 77               ld (hl),a
  42+ 95FC 2C               inc l
  43+ 95FD 1C               inc e
  44+ 95FE 1A               ld a,(de)
  45+ 95FF AE               xor (hl)
  46+ 9600 77               ld (hl),a
  47+ 9601 2C               inc l
  48+ 9602 1C               inc e
  49+ 9603 1A               ld a,(de)
  50+ 9604 AE               xor (hl)
  51+ 9605 77               ld (hl),a
  52+ 9606 13               inc de
  53+ 9607
  54+ 9607 E1               pop hl
  55+ 9608
  56+ 9608 1A               ld a,(de)
  57+ 9609 AE               xor (hl)
  58+ 960A 77               ld (hl),a
  59+ 960B 2C               inc l
  60+ 960C 1C               inc e
  61+ 960D 1A               ld a,(de)
  62+ 960E AE               xor (hl)
  63+ 960F 77               ld (hl),a
  64+ 9610 2C               inc l
  65+ 9611 1C               inc e
  66+ 9612 1A               ld a,(de)
  67+ 9613 AE               xor (hl)
  68+ 9614 77               ld (hl),a
  69+ 9615 13               inc de
  70+ 9616
  71+ 9616 E1               pop hl
  72+ 9617
  73+ 9617 1A               ld a,(de)
  74+ 9618 AE               xor (hl)
  75+ 9619 77               ld (hl),a
  76+ 961A 2C               inc l
  77+ 961B 1C               inc e
  78+ 961C 1A               ld a,(de)
  79+ 961D AE               xor (hl)
  80+ 961E 77               ld (hl),a
  81+ 961F 2C               inc l
  82+ 9620 1C               inc e
  83+ 9621 1A               ld a,(de)
  84+ 9622 AE               xor (hl)
  85+ 9623 77               ld (hl),a
  86+ 9624 13               inc de
  87+ 9625
  88+ 9625 E1               pop hl
  89+ 9626
  90+ 9626 1A               ld a,(de)
  91+ 9627 AE               xor (hl)
  92+ 9628 77               ld (hl),a
  93+ 9629 2C               inc l
  94+ 962A 1C               inc e
  95+ 962B 1A               ld a,(de)
  96+ 962C AE               xor (hl)
  97+ 962D 77               ld (hl),a
  98+ 962E 2C               inc l
  99+ 962F 1C               inc e
 100+ 9630 1A               ld a,(de)
 101+ 9631 AE               xor (hl)
 102+ 9632 77               ld (hl),a
 103+ 9633 13               inc de
 104+ 9634
 105+ 9634 E1               pop hl
 106+ 9635
 107+ 9635 1A               ld a,(de)
 108+ 9636 AE               xor (hl)
 109+ 9637 77               ld (hl),a
 110+ 9638 2C               inc l
 111+ 9639 1C               inc e
 112+ 963A 1A               ld a,(de)
 113+ 963B AE               xor (hl)
 114+ 963C 77               ld (hl),a
 115+ 963D 2C               inc l
 116+ 963E 1C               inc e
 117+ 963F 1A               ld a,(de)
 118+ 9640 AE               xor (hl)
 119+ 9641 77               ld (hl),a
 120+ 9642 13               inc de
 121+ 9643
 122+ 9643 E1               pop hl
 123+ 9644
 124+ 9644 1A               ld a,(de)
 125+ 9645 AE               xor (hl)
 126+ 9646 77               ld (hl),a
 127+ 9647 2C               inc l
 128+ 9648 1C               inc e
 129+ 9649 1A               ld a,(de)
 130+ 964A AE               xor (hl)
 131+ 964B 77               ld (hl),a
 132+ 964C 2C               inc l
 133+ 964D 1C               inc e
 134+ 964E 1A               ld a,(de)
 135+ 964F AE               xor (hl)
 136+ 9650 77               ld (hl),a
 137+ 9651 13               inc de
 138+ 9652
 139+ 9652 E1               pop hl
 140+ 9653
 141+ 9653 1A               ld a,(de)
 142+ 9654 AE               xor (hl)
 143+ 9655 77               ld (hl),a
 144+ 9656 2C               inc l
 145+ 9657 1C               inc e
 146+ 9658 1A               ld a,(de)
 147+ 9659 AE               xor (hl)
 148+ 965A 77               ld (hl),a
 149+ 965B 2C               inc l
 150+ 965C 1C               inc e
 151+ 965D 1A               ld a,(de)
 152+ 965E AE               xor (hl)
 153+ 965F 77               ld (hl),a
 154+ 9660 13               inc de
 155+ 9661
 156+ 9661 E1               pop hl
 157+ 9662
 158+ 9662 1A               ld a,(de)
 159+ 9663 AE               xor (hl)
 160+ 9664 77               ld (hl),a
 161+ 9665 2C               inc l
 162+ 9666 1C               inc e
 163+ 9667 1A               ld a,(de)
 164+ 9668 AE               xor (hl)
 165+ 9669 77               ld (hl),a
 166+ 966A 2C               inc l
 167+ 966B 1C               inc e
 168+ 966C 1A               ld a,(de)
 169+ 966D AE               xor (hl)
 170+ 966E 77               ld (hl),a
 171+ 966F 13               inc de
 172+ 9670
 173+ 9670 E1               pop hl
 174+ 9671
 175+ 9671 1A               ld a,(de)
 176+ 9672 AE               xor (hl)
 177+ 9673 77               ld (hl),a
 178+ 9674 2C               inc l
 179+ 9675 1C               inc e
 180+ 9676 1A               ld a,(de)
 181+ 9677 AE               xor (hl)
 182+ 9678 77               ld (hl),a
 183+ 9679 2C               inc l
 184+ 967A 1C               inc e
 185+ 967B 1A               ld a,(de)
 186+ 967C AE               xor (hl)
 187+ 967D 77               ld (hl),a
 188+ 967E 13               inc de
 189+ 967F
 190+ 967F E1               pop hl
 191+ 9680
 192+ 9680 1A               ld a,(de)
 193+ 9681 AE               xor (hl)
 194+ 9682 77               ld (hl),a
 195+ 9683 2C               inc l
 196+ 9684 1C               inc e
 197+ 9685 1A               ld a,(de)
 198+ 9686 AE               xor (hl)
 199+ 9687 77               ld (hl),a
 200+ 9688 2C               inc l
 201+ 9689 1C               inc e
 202+ 968A 1A               ld a,(de)
 203+ 968B AE               xor (hl)
 204+ 968C 77               ld (hl),a
 205+ 968D 13               inc de
 206+ 968E
 207+ 968E E1               pop hl
 208+ 968F
 209+ 968F 1A               ld a,(de)
 210+ 9690 AE               xor (hl)
 211+ 9691 77               ld (hl),a
 212+ 9692 2C               inc l
 213+ 9693 1C               inc e
 214+ 9694 1A               ld a,(de)
 215+ 9695 AE               xor (hl)
 216+ 9696 77               ld (hl),a
 217+ 9697 2C               inc l
 218+ 9698 1C               inc e
 219+ 9699 1A               ld a,(de)
 220+ 969A AE               xor (hl)
 221+ 969B 77               ld (hl),a
 222+ 969C 13               inc de
 223+ 969D
 224+ 969D E1               pop hl
 225+ 969E
 226+ 969E 1A               ld a,(de)
 227+ 969F AE               xor (hl)
 228+ 96A0 77               ld (hl),a
 229+ 96A1 2C               inc l
 230+ 96A2 1C               inc e
 231+ 96A3 1A               ld a,(de)
 232+ 96A4 AE               xor (hl)
 233+ 96A5 77               ld (hl),a
 234+ 96A6 2C               inc l
 235+ 96A7 1C               inc e
 236+ 96A8 1A               ld a,(de)
 237+ 96A9 AE               xor (hl)
 238+ 96AA 77               ld (hl),a
 239+ 96AB 13               inc de
 240+ 96AC
 241+ 96AC E1               pop hl
 242+ 96AD
 243+ 96AD 1A               ld a,(de)
 244+ 96AE AE               xor (hl)
 245+ 96AF 77               ld (hl),a
 246+ 96B0 2C               inc l
 247+ 96B1 1C               inc e
 248+ 96B2 1A               ld a,(de)
 249+ 96B3 AE               xor (hl)
 250+ 96B4 77               ld (hl),a
 251+ 96B5 2C               inc l
 252+ 96B6 1C               inc e
 253+ 96B7 1A               ld a,(de)
 254+ 96B8 AE               xor (hl)
 255+ 96B9 77               ld (hl),a
 256+ 96BA 13               inc de
 257+ 96BB
 258+ 96BB E1               pop hl
 259+ 96BC
 260+ 96BC 1A               ld a,(de)
 261+ 96BD AE               xor (hl)
 262+ 96BE 77               ld (hl),a
 263+ 96BF 2C               inc l
 264+ 96C0 1C               inc e
 265+ 96C1 1A               ld a,(de)
 266+ 96C2 AE               xor (hl)
 267+ 96C3 77               ld (hl),a
 268+ 96C4 2C               inc l
 269+ 96C5 1C               inc e
 270+ 96C6 1A               ld a,(de)
 271+ 96C7 AE               xor (hl)
 272+ 96C8 77               ld (hl),a
 273+ 96C9 13               inc de
 274+ 96CA
 275+ 96CA E1               pop hl
 276+ 96CB
 277+ 96CB 1A               ld a,(de)
 278+ 96CC AE               xor (hl)
 279+ 96CD 77               ld (hl),a
 280+ 96CE 2C               inc l
 281+ 96CF 1C               inc e
 282+ 96D0 1A               ld a,(de)
 283+ 96D1 AE               xor (hl)
 284+ 96D2 77               ld (hl),a
 285+ 96D3 2C               inc l
 286+ 96D4 1C               inc e
 287+ 96D5 1A               ld a,(de)
 288+ 96D6 AE               xor (hl)
 289+ 96D7 77               ld (hl),a
 290+ 96D8 13               inc de
 291+ 96D9
 292+ 96D9 E1               pop hl
 293+ 96DA
 294+ 96DA 1A               ld a,(de)
 295+ 96DB AE               xor (hl)
 296+ 96DC 77               ld (hl),a
 297+ 96DD 2C               inc l
 298+ 96DE 1C               inc e
 299+ 96DF 1A               ld a,(de)
 300+ 96E0 AE               xor (hl)
 301+ 96E1 77               ld (hl),a
 302+ 96E2 2C               inc l
 303+ 96E3 1C               inc e
 304+ 96E4 1A               ld a,(de)
 305+ 96E5 AE               xor (hl)
 306+ 96E6 77               ld (hl),a
 307+ 96E7 13               inc de
 308+ 96E8
 309+ 96E8 ED 73 20 8C      ld (Scanlines_album_SP),sp
 310+ 96EC ED 7B 00 8C      ld sp,(Stack)
 311+ 96F0 C9               ret
 312+ 96F1
 313+ 96F1              Pinta_lento
 314+ 96F1
 315+ 96F1 E1           1 pop hl
 316+ 96F2
 317+ 96F2 1A               ld a,(de)
 318+ 96F3 AE               xor (hl)
 319+ 96F4 77               ld (hl),a
 320+ 96F5 2C               inc l
 321+ 96F6 1C               inc e
 322+ 96F7 1A               ld a,(de)
 323+ 96F8 AE               xor (hl)
 324+ 96F9 77               ld (hl),a
 325+ 96FA 2C               inc l
 326+ 96FB 1C               inc e
 327+ 96FC 1A               ld a,(de)
 328+ 96FD AE               xor (hl)
 329+ 96FE 77               ld (hl),a
 330+ 96FF 13               inc de
 331+ 9700
 332+ 9700 10 EF            djnz 1B
 333+ 9702
 334+ 9702 ED 73 20 8C      ld (Scanlines_album_SP),sp
 335+ 9706 ED 7B 00 8C      ld sp,(Stack)
 336+ 970A C9               ret
# file closed: Pinta_Sprites.asm
2167  970B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 970B              ; ******************************************************************************************************************************************************************************************
   2+ 970B              ;
   3+ 970B              ; 26/06/23
   4+ 970B              ;
   5+ 970B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 970B
   7+ 970B              Draw
   8+ 970B
   9+ 970B CD B1 99     	call Prepara_draw
  10+ 970E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 970F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9710 28 05        	jr z,2F
  13+ 9712
  14+ 9712 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9715 18 0C        	jr 1F
  16+ 9717
  17+ 9717 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 971A 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 971D CD A9 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9720              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9720
  22+ 9720 CD 50 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9723
  24+ 9723 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 9726 CB 6F        	bit 5,a
  26+ 9728 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 972A
  28+ 972A CD 3F 97     	call Comprueba_limite_horizontal
  29+ 972D CD CF 97     	call Comprueba_limite_vertical
  30+ 9730
  31+ 9730              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9730              ; -----------------------
  33+ 9730              ; -----------------------
  34+ 9730              ; -----------------------
  35+ 9730
  36+ 9730 CD 25 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9733 CD 5C 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9736
  39+ 9736 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9739 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 973B 32 C0 8B     	ld (Ctrl_0),a
  42+ 973E
  43+ 973E C9           	ret
  44+ 973F
  45+ 973F              ; *******************************************************************************************************************************************************************************************
  46+ 973F              ;	21/01/23
  47+ 973F              ;
  48+ 973F              ; 	Comprueba_limite_horizontal.
  49+ 973F              ;
  50+ 973F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 973F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 973F              ;
  53+ 973F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 973F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 973F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 973F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 973F
  58+ 973F
  59+ 973F
  60+ 973F 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9742 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9744 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9746 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9748 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 974B 18 09            jr 6F
  66+ 974D CB 5F        1 bit 3,a
  67+ 974F 28 0A            jr z,2F
  68+ 9751 E6 F7            and $f7
  69+ 9753 32 C0 8B         ld (Ctrl_0),a
  70+ 9756 CD A9 98     6 call Inicializacion
  71+ 9759 18 5B            jr 5F
  72+ 975B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 975C
  74+ 975C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 975C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 975C
  77+ 975C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 975D 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9760 CD A9 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9763 67           	ld h,a
  81+ 9764 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9765 CD A9 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9768 67           	ld h,a
  84+ 9769 A7           	and a
  85+ 976A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 976C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 976D 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 9770 FE 02        	cp 2
  89+ 9772 38 1E        	jr c,3F
  90+ 9774 28 1C        	jr z,3F
  91+ 9776 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9777 28 23            jr z,7F
  93+ 9779 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 977B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 977D E1           	pop hl
  96+ 977E
  97+ 977E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 977E              ; _para indicar con E="2" en caso necesario.
  99+ 977E
 100+ 977E E5               push hl
 101+ 977F C5               push bc
 102+ 9780 CD A9 94     	call calcula_tercio
 103+ 9783 FE 01        	cp 1
 104+ 9785 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9787 CD B7 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 978A 28 26            jr z,9F
 107+ 978C 38 24            jr c,9F
 108+ 978E 1E 00        11 ld e,0
 109+ 9790 18 22            jr 8F
 110+ 9792 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9793 28 07        	jr z, 7F
 112+ 9795 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9797 1E 00         	ld e,0
 114+ 9799 E1           	pop hl
 115+ 979A 18 04        	jr 4F
 116+ 979C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 979E 18 15            jr 10F
 118+ 97A0
 119+ 97A0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97A0              ; _para indicar con E="2" en caso necesario.
 121+ 97A0
 122+ 97A0 E5           4 push hl
 123+ 97A1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97A2 CD A9 94     	call calcula_tercio
 125+ 97A5 FE 01        	cp 1
 126+ 97A7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A9 CD B7 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97AC 28 04            jr z,9F
 129+ 97AE 30 02            jr nc,9F
 130+ 97B0 18 02        	jr 8F
 131+ 97B2 1E 02        9 ld e,2
 132+ 97B4 C1           8 pop bc
 133+ 97B5 E1           10 pop hl
 134+ 97B6 C9           5 ret
 135+ 97B7
 136+ 97B7              ; --------------------
 137+ 97B7              ;
 138+ 97B7              ; 25/08/22
 139+ 97B7
 140+ 97B7 CD A9 94     Comprueba_centro call calcula_tercio
 141+ 97BA 67               ld h,a
 142+ 97BB 08           	ex af,af
 143+ 97BC FE 02        	cp 2
 144+ 97BE 38 07        	jr c,1F
 145+ 97C0 28 05        	jr z,1F
 146+ 97C2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97C5 18 03        	jr 2F
 148+ 97C7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97CA 08           2 ex af,af
 150+ 97CB A7               and a
 151+ 97CC ED 42            sbc hl,bc
 152+ 97CE C9               ret
 153+ 97CF
 154+ 97CF              ; *********************************************************************************************************************************************************************************************
 155+ 97CF              ;
 156+ 97CF              ;   16/8/22
 157+ 97CF              ;
 158+ 97CF              ;	Comprueba_limite_vertical
 159+ 97CF              ;
 160+ 97CF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97CF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97CF              ;
 163+ 97CF
 164+ 97CF 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97D2 7D           	ld a,l
 166+ 97D3 E6 1F        	and $1F
 167+ 97D5 57           	ld d,a
 168+ 97D6 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97D9 BA           	cp d 											; Límite - Posición.
 170+ 97DA 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97DB 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97DE CB 47        	bit 0,a
 173+ 97E0 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97E2
 175+ 97E2              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97E2
 177+ 97E2 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97E3 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97E5
 180+ 97E5              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97E5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97E5
 183+ 97E5 3A B4 8B         ld a,(Coordenada_X)
 184+ 97E8 16 0F            ld d,Centro_izquierda
 185+ 97EA A7               and a
 186+ 97EB 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97EC 28 1E            jr z,3F
 188+ 97EE 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97F0              ;                                                    ; _salimos sin modificar nada.
 190+ 97F0 18 0E            jr 2F
 191+ 97F2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97F3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97F5
 194+ 97F5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97F5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97F5
 197+ 97F5 3A B4 8B         ld a,(Coordenada_X)
 198+ 97F8 16 10            ld d,Centro_derecha
 199+ 97FA A7               and a
 200+ 97FB 92               sub d
 201+ 97FC 28 0E            jr z,3F
 202+ 97FE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9800              ;                                                    ; _salimos sin modificar nada.
 204+ 9800 CB 43        2 bit 0,e
 205+ 9802 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9804 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9805 CD 99 98         call Modificaccionne
 208+ 9808 C1           	pop bc
 209+ 9809 CD A9 98         call Inicializacion
 210+ 980C C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 980D
 212+ 980D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 980D
 214+ 980D C5           4 push bc
 215+ 980E 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9811 0A           	ld a,(bc)
 217+ 9812 3D           	dec a
 218+ 9813 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9814 7D           	ld a,l
 220+ 9815 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9816 CB 47        	bit 0,a
 222+ 9818 28 03        	jr z,5F
 223+ 981A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 981B 18 2E        	jr 7F
 225+ 981D
 226+ 981D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 981D
 228+ 981D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 981E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 981F 3A C0 8B     	ld a,(Ctrl_0)
 231+ 9822 CB 4F        	bit 1,a
 232+ 9824 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9826 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9827
 235+ 9827              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9827
 237+ 9827 1C               inc e
 238+ 9828 1D               dec e
 239+ 9829 20 07            jr nz,12F
 240+ 982B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 982C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 982D 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9830 18 44        13 jr 9F
 244+ 9832 CB 43        12 bit 0,e
 245+ 9834 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9836              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9836 C1           	pop bc
 248+ 9837 18 D3        	jr 3B
 249+ 9839 80           14 add b
 250+ 983A 6F               ld l,a
 251+ 983B 22 C3 8B     	ld (Posicion_actual),hl
 252+ 983E CD 99 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9841 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9843 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9845 32 C0 8B         ld (Ctrl_0),a
 256+ 9848 F1           	pop af
 257+ 9849 18 2B        	jr 9F
 258+ 984B
 259+ 984B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 984B
 261+ 984B F5           7 push af
 262+ 984C 3A C0 8B     	ld a,(Ctrl_0)
 263+ 984F CB 47        	bit 0,a
 264+ 9851 20 1D        	jr nz,8F
 265+ 9853 F1           	pop af
 266+ 9854
 267+ 9854              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9854
 269+ 9854 1C           	inc e
 270+ 9855 1D               dec e
 271+ 9856 20 07            jr nz,10F
 272+ 9858 90           	sub b
 273+ 9859 6F               ld l,a
 274+ 985A 22 C3 8B     	ld (Posicion_actual),hl
 275+ 985D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 985F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 985F CB 43        10 bit 0,e
 278+ 9861 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9863              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9863 C1           	pop bc
 281+ 9864 18 A6        	jr 3B
 282+ 9866 90           16 sub b
 283+ 9867 6F               ld l,a
 284+ 9868 22 C3 8B     	ld (Posicion_actual),hl
 285+ 986B CD 99 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 986E 18 06            jr 9F
 287+ 9870 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9872 32 C0 8B         ld (Ctrl_0),a
 289+ 9875 F1           	pop af
 290+ 9876 C1           9 pop bc
 291+ 9877 1E 00        	ld e,0
 292+ 9879 CD A9 98         call Inicializacion
 293+ 987C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 987D 08           	ex af,af
 295+ 987E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 987F 18 8B            jr 3B
 297+ 9881
 298+ 9881              ; --------------------
 299+ 9881
 300+ 9881 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9883 CD CC 99     1 call PreviousScan
 302+ 9886 10 FB            djnz 1B
 303+ 9888 22 C3 8B     	ld (Posicion_actual),hl
 304+ 988B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 988C C9           	ret
 306+ 988D
 307+ 988D              ; --------------------
 308+ 988D
 309+ 988D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 988F CD BD 99     1 call NextScan
 311+ 9892 10 FB            djnz 1B
 312+ 9894 22 C3 8B     	ld (Posicion_actual),hl
 313+ 9897 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9898 C9           	ret
 315+ 9899
 316+ 9899              ; --------------------
 317+ 9899              ;
 318+ 9899              ;	22/01/23
 319+ 9899              ;
 320+ 9899              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9899              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9899              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9899
 324+ 9899
 325+ 9899              Modificaccionne
 326+ 9899
 327+ 9899 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 989C FE 02        	cp 2
 329+ 989E CC 81 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98A1 DC 81 98         call c,Modifica_Pos_actual
 331+ 98A4 C8           	ret z
 332+ 98A5 CD 8D 98         call Modifica_Pos_actual2
 333+ 98A8 C9               ret
 334+ 98A9
 335+ 98A9              ; *************************************************************************************************************************************************************************************************
 336+ 98A9              ;
 337+ 98A9              ;	13/8/22
 338+ 98A9              ;
 339+ 98A9              ;	Inicializacion
 340+ 98A9              ;
 341+ 98A9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A9              ;
 345+ 98A9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A9              ;	_ desaparece/aparece.
 348+ 98A9
 349+ 98A9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A9              ;
 352+ 98A9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A9              ; 		   [E] ="0"
 355+ 98A9
 356+ 98A9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A9
 358+ 98A9 CD A9 94     Inicializacion call calcula_tercio
 359+ 98AC 28 36        	jr z,primit
 360+ 98AE E6 02        	and 2
 361+ 98B0 20 07        	jr nz,segmit
 362+ 98B2 7D           	ld a,l
 363+ 98B3 FE 7F        	cp $7f
 364+ 98B5 38 2D        	jr c,primit
 365+ 98B7 28 2B        	jr z,primit
 366+ 98B9 CD 1F 99     segmit call column
 367+ 98BC 38 13        	jr c,tercuad
 368+ 98BE 3E 04        cuarcuad ld a,4
 369+ 98C0 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98C3 21 20 48     	ld hl,$4820
 371+ 98C6 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98C9 21 D6 8B     	ld hl,Limite_vertical
 373+ 98CC 36 0D        	ld (hl),$0d
 374+ 98CE 08           	ex af,af
 375+ 98CF 18 3C        	jr 1F
 376+ 98D1              tercuad
 377+ 98D1 3E 03        	ld a,3
 378+ 98D3 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98D6 21 20 48     	ld hl,$4820
 380+ 98D9 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98DC 21 D6 8B     	ld hl,Limite_vertical
 382+ 98DF 36 12        	ld (hl),$12
 383+ 98E1 08           	ex af,af
 384+ 98E2 18 29        	jr 1F
 385+ 98E4 CD 1F 99     primit call column
 386+ 98E7 38 13        	jr c, primcuad
 387+ 98E9              segcuad
 388+ 98E9 3E 02        	ld a,2
 389+ 98EB 32 D2 8B     	ld (Cuad_objeto),a
 390+ 98EE 21 C0 4F     	ld hl,$4fc0
 391+ 98F1 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 98F4 21 D6 8B     	ld hl,Limite_vertical
 393+ 98F7 36 0D        	ld (hl),$0d
 394+ 98F9 08           	ex af,af
 395+ 98FA 18 11        	jr 1F
 396+ 98FC              primcuad
 397+ 98FC 3E 01        	ld a,1
 398+ 98FE 32 D2 8B     	ld (Cuad_objeto),a
 399+ 9901 21 C0 4F     	ld hl,$4fc0
 400+ 9904 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 9907 21 D6 8B     	ld hl,Limite_vertical
 402+ 990A 36 12        	ld (hl),$12
 403+ 990C 08           	ex af,af
 404+ 990D
 405+ 990D C5           1 push bc
 406+ 990E E5           	push hl
 407+ 990F D5           	push de
 408+ 9910
 409+ 9910 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 9913 CD C7 94     	call Genera_coordenadas
 411+ 9916
 412+ 9916 D1           	pop de
 413+ 9917 E1           	pop hl
 414+ 9918 C1           	pop bc
 415+ 9919
 416+ 9919 21 C0 8B     	ld hl,Ctrl_0
 417+ 991C CB EE        	set 5,(hl)
 418+ 991E C9           	ret
 419+ 991F
 420+ 991F              ; ------------------------------------------------------------------------------------------------------------------
 421+ 991F
 422+ 991F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 991F              ;
 424+ 991F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 991F
 426+ 991F 7D           column ld a,l
 427+ 9920 E6 1F        	and $1f
 428+ 9922 FE 10         	cp $10
 429+ 9924 C9            	ret
 430+ 9925
 431+ 9925              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9925              ;
 433+ 9925              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9925              ;
 435+ 9925              ; 14/12/22
 436+ 9925              ;
 437+ 9925              ;	Modifica: A y BC.
 438+ 9925
 439+ 9925 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9928 E6 01        	and 1
 441+ 992A 28 17        	jr z,1F
 442+ 992C
 443+ 992C              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 992C
 445+ 992C 3A B4 8B     	ld a,(Coordenada_X)
 446+ 992F 47           	ld b,a
 447+ 9930 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9931 79           	ld a,c
 449+ 9932 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9933 38 08        	jr c,2F
 451+ 9935 47           	ld b,a
 452+ 9936 79           	ld a,c
 453+ 9937 90           	sub b
 454+ 9938 32 D3 8B     	ld (Columnas),a
 455+ 993B 18 1B        	jr 4F
 456+ 993D 79           2 ld a,c
 457+ 993E 32 D3 8B     	ld (Columnas),a
 458+ 9941 18 15        	jr 4F
 459+ 9943
 460+ 9943              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9943
 462+ 9943 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 9946 81           	add c
 464+ 9947 3D           	dec a
 465+ 9948 D6 1F        	sub $1f
 466+ 994A 38 08        	jr c,3F
 467+ 994C 47           	ld b,a
 468+ 994D 79           	ld a,c
 469+ 994E 90           	sub b
 470+ 994F 32 D3 8B     	ld (Columnas),a
 471+ 9952 18 04        	jr 4F
 472+ 9954 79           3 ld a,c
 473+ 9955 32 D3 8B     	ld (Columnas),a
 474+ 9958 D9           4 exx
 475+ 9959 4F           	ld c,a
 476+ 995A D9           	exx
 477+ 995B C9            ret
 478+ 995C
 479+ 995C              ; --------------------------------------------------------------------------------------------------------------------
 480+ 995C              ;
 481+ 995C              ;   19/7/23
 482+ 995C              ;
 483+ 995C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 995C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 995C              ;
 486+ 995C              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 995C              ;			HL e IY Contienen (Puntero_objeto).
 488+ 995C              ;
 489+ 995C              ;	DESTRUYE: HL,B Y A.
 490+ 995C
 491+ 995C 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 995F FE 02        	cp 2
 493+ 9961 38 18        	jr c,1F
 494+ 9963 28 16        	jr z,1F
 495+ 9965 E6 01        	and 1
 496+ 9967 28 0D        	jr z,3F
 497+ 9969
 498+ 9969              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9969
 500+ 9969 CD A5 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 996C
 502+ 996C 7D           9 ld a,l
 503+ 996D E6 1F        	and $1f
 504+ 996F 28 2A        	jr z,7F
 505+ 9971 2B           	dec hl
 506+ 9972 10 F8        	djnz 9B
 507+ 9974 18 25        	jr 7F
 508+ 9976
 509+ 9976              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9976
 511+ 9976 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 9979 18 20        	jr 7F
 513+ 997B
 514+ 997B 28 14        1 jr z,2F
 515+ 997D
 516+ 997D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 997D
 518+ 997D CD A5 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9980
 520+ 9980 7D           4 ld a,l
 521+ 9981 E6 1F        	and $1f
 522+ 9983 28 03        	jr z,6F
 523+ 9985 2B           	dec hl
 524+ 9986 10 F8        	djnz 4B
 525+ 9988 06 0F        6 ld b,15
 526+ 998A CD CC 99     5 call PreviousScan
 527+ 998D 10 FB        	djnz 5B
 528+ 998F 18 0A        	jr 7F
 529+ 9991
 530+ 9991              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9991
 532+ 9991 CD A5 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9994 06 0F        	ld b,15
 534+ 9996 CD CC 99     8 call PreviousScan
 535+ 9999 10 FB        	djnz 8B
 536+ 999B
 537+ 999B E5           7 push hl
 538+ 999C DD E1        	pop ix
 539+ 999E
 540+ 999E 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 99A1 E5           	push hl
 542+ 99A2 FD E1        	pop iy
 543+ 99A4
 544+ 99A4 C9           	ret
 545+ 99A5
 546+ 99A5              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99A5              ;
 548+ 99A5              ;	2/1/23
 549+ 99A5              ;
 550+ 99A5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99A5              ;
 552+ 99A5              ;	Tras esta rutina tenemos:
 553+ 99A5              ;
 554+ 99A5              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99A5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99A5              ;
 557+ 99A5              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99A5
 559+ 99A5 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 99A8 3A D3 8B     	ld a,(Columnas)
 561+ 99AB 3D           	dec a
 562+ 99AC 20 01        	jr nz,1F
 563+ 99AE 3C           	inc a
 564+ 99AF 47           1 ld b,a
 565+ 99B0 C9           	ret
 566+ 99B1
 567+ 99B1              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99B1              ;
 569+ 99B1              ;	Prepara_draw
 570+ 99B1              ;
 571+ 99B1              ;	Es una rutina de carga.
 572+ 99B1              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99B1              ;
 574+ 99B1              ;	FUNCIONAMIENTO:
 575+ 99B1              ;
 576+ 99B1              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99B1              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99B1              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99B1              ;
 580+ 99B1              ;	DESTRUYE:
 581+ 99B1              ;
 582+ 99B1              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99B1
 584+ 99B1 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99B4 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99B5 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99B6 4E           	ld c,(hl)
 588+ 99B7 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99BA 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99BC C9           	ret
 591+ 99BD
 592+ 99BD              ;----------------------------------------------------------------------------------------------------------------
 593+ 99BD              ;
 594+ 99BD              ;	5/08/22
 595+ 99BD              ;
 596+ 99BD              ;   NextScan.
 597+ 99BD              ;
 598+ 99BD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99BD              ;
 600+ 99BD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99BD              ;
 602+ 99BD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99BD              ;
 604+ 99BD              ;       DESTRUIDOS: AF y HL !!!
 605+ 99BD              ;
 606+ 99BD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99BD              ;
 608+ 99BD
 609+ 99BD 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99BE 7C               ld a,h
 611+ 99BF E6 07            and 7
 612+ 99C1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99C2
 614+ 99C2 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99C3 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99C5 6F               ld l,a
 617+ 99C6 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99C7
 619+ 99C7 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99C8 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99CA 67               ld h,a
 622+ 99CB C9               ret
 623+ 99CC
 624+ 99CC              ;----------------------------------------------------------------------------------------------------------------
 625+ 99CC              ;
 626+ 99CC              ;	5/08/22
 627+ 99CC              ;
 628+ 99CC              ;   PreviousScan.
 629+ 99CC              ;
 630+ 99CC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99CC              ;
 632+ 99CC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99CC              ;
 634+ 99CC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99CC              ;
 636+ 99CC              ;       DESTRUIDOS: AF y HL !!!
 637+ 99CC              ;
 638+ 99CC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99CC              ;
 640+ 99CC
 641+ 99CC 7C           PreviousScan ld a,h
 642+ 99CD 25               dec h               ; Dec H.
 643+ 99CE E6 07            and 7
 644+ 99D0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99D1
 646+ 99D1 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99D2 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99D4 6F               ld l,a
 649+ 99D5 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99D6
 651+ 99D6 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99D7 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D9 67               ld h,a
 654+ 99DA C9               ret
 655+ 99DB
 656+ 99DB
 657+ 99DB
 658+ 99DB
 659+ 99DB
 660+ 99DB
 661+ 99DB
 662+ 99DB
 663+ 99DB
 664+ 99DB
 665+ 99DB
 666+ 99DB
# file closed: Draw_XOR.asm
2168  99DB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99DB
   2+ 99DB              ; ******************************************************************************************************************************************************************************************
   3+ 99DB              ;
   4+ 99DB              ;   20/05/23
   5+ 99DB              ;
   6+ 99DB              ;	Recompone_posicion_inicio
   7+ 99DB              ;
   8+ 99DB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99DB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99DB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99DB              ;	_ a una u otra rutina.
  12+ 99DB
  13+ 99DB              Recompone_posicion_inicio
  14+ 99DB
  15+ 99DB 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99DE 7D           	ld a,l
  17+ 99DF E6 1F        	and $1f
  18+ 99E1 28 16        	jr z,1F
  19+ 99E3
  20+ 99E3 FE 1F        	cp $1f
  21+ 99E5 28 0D        	jr z,3F
  22+ 99E7
  23+ 99E7 21 BF 8B     	ld hl,Ctrl_2
  24+ 99EA CB C6        	set 0,(hl)
  25+ 99EC 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 99EF 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 99F2 18 08        	jr 2F
  28+ 99F4
  29+ 99F4 CD A2 9B     3 call Mov_left
  30+ 99F7 18 03        	jr 2F
  31+ 99F9
  32+ 99F9 CD 7F 9A     1 call Mov_right
  33+ 99FC 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99FF 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 9A02 C9           	ret
  36+ 9A03
  37+ 9A03              ; ******************************************************************************************************************************************************************************************
  38+ 9A03              ;
  39+ 9A03              ;   27/05/23
  40+ 9A03              ;
  41+ 9A03              ;	Mov_down
  42+ 9A03              ;
  43+ 9A03              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A03              ;
  45+ 9A03              ;
  46+ 9A03              Mov_down
  47+ 9A03
  48+ 9A03 CD 6D 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A06              ;																	; _ repone (Puntero_objeto).
  50+ 9A06 21 C0 8B     	ld hl,Ctrl_0
  51+ 9A09 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A0B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A0B              ; 																	; _ en el caso de que no lo haya.
  54+ 9A0B 3A DB 8B     	ld a,(Vel_down)
  55+ 9A0E 47           	ld b,a
  56+ 9A0F 2A C3 8B         ld hl,(Posicion_actual)
  57+ 9A12 CD A9 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A15 E6 02        	and 2
  59+ 9A17 28 17        	jr z,1F
  60+ 9A19
  61+ 9A19              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A19              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A19
  64+ 9A19 7C           	ld a,h
  65+ 9A1A FE 57        	cp $57
  66+ 9A1C 20 12        	jr nz,1F
  67+ 9A1E
  68+ 9A1E 7D           	ld a,l
  69+ 9A1F C6 20        	add $20
  70+ 9A21 30 0D        	jr nc,1F
  71+ 9A23
  72+ 9A23              ; ------------------------------
  73+ 9A23              ;
  74+ 9A23              ;	12/01/24
  75+ 9A23
  76+ 9A23              ;	call Reaparece_arriba
  77+ 9A23 CD 2F 9D     	call Reinicio
  78+ 9A26
  79+ 9A26              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A26
  81+ 9A26 3A 26 8C     	ld a,(Ctrl_3)
  82+ 9A29 CB CF        	set 1,a
  83+ 9A2B 32 26 8C     	ld (Ctrl_3),a
  84+ 9A2E
  85+ 9A2E 18 08        	jr 3F
  86+ 9A30              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A30              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A30              ; ------------------------------
  89+ 9A30
  90+ 9A30 CD BD 99     1 call NextScan
  91+ 9A33 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A36 10 DA            djnz 2B
  93+ 9A38 CD C7 94     3 call Genera_coordenadas
  94+ 9A3B C9           	ret
  95+ 9A3C
  96+ 9A3C              ; ******************************************************************************************************************************************************************************************
  97+ 9A3C              ;
  98+ 9A3C              ;   27/05/23
  99+ 9A3C              ;
 100+ 9A3C              ;	Mov_up
 101+ 9A3C              ;
 102+ 9A3C              ; 	Mueve el Sprite hacia arriba.
 103+ 9A3C              ;
 104+ 9A3C              ;
 105+ 9A3C              Mov_up
 106+ 9A3C
 107+ 9A3C CD 6D 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A3F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A3F 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A42 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A44              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A44              ; 																		; _ en el caso de que no lo haya.
 113+ 9A44 3A DA 8B     	ld a,(Vel_up)
 114+ 9A47 47           	ld b,a
 115+ 9A48 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A4B CD A9 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A4E A7           	and a
 118+ 9A4F 20 10        	jr nz,1F
 119+ 9A51
 120+ 9A51              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A51              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A51
 123+ 9A51 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A52 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A54 20 0B            jr nz,1F
 126+ 9A56 7D               ld a,l
 127+ 9A57 D6 20            sub $20
 128+ 9A59 30 06            jr nc,1F
 129+ 9A5B 25               dec h
 130+ 9A5C
 131+ 9A5C              ; -----------------------------
 132+ 9A5C CD 10 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A5F              ;	call Reinicio
 134+ 9A5F              ; -----------------------------
 135+ 9A5F
 136+ 9A5F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A61 CD CC 99     1 call PreviousScan
 138+ 9A64 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A67 10 E2            djnz 3B
 140+ 9A69 CD C7 94     2 call Genera_coordenadas
 141+ 9A6C C9           	ret
 142+ 9A6D
 143+ 9A6D              ; -----------------------------
 144+ 9A6D              ;
 145+ 9A6D              ;	27/5/23
 146+ 9A6D              ;
 147+ 9A6D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A6D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A6D              ;
 150+ 9A6D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A6D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A6D              ;
 153+ 9A6D              ;	Modifica: A y (Puntero_objeto).
 154+ 9A6D
 155+ 9A6D 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A70 CB 47        	bit 0,a
 157+ 9A72 C8           	ret z
 158+ 9A73 CB 87        	res 0,a
 159+ 9A75 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A78 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A7B 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A7E C9           	ret
 163+ 9A7F
 164+ 9A7F              ; ******************************************************************************************************************************************************************************************
 165+ 9A7F              ;
 166+ 9A7F              ;	19/10/22
 167+ 9A7F              ;
 168+ 9A7F              ;	Mov_right.
 169+ 9A7F              ;
 170+ 9A7F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A7F              ;
 172+ 9A7F
 173+ 9A7F 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A82 CB 77        	bit 6,a
 175+ 9A84 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A86
 177+ 9A86 CD BE 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A89 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A8A
 180+ 9A8A 21 C0 8B     	ld hl,Ctrl_0
 181+ 9A8D CB E6        	set 4,(hl)
 182+ 9A8F 18 52        	jr 8F
 183+ 9A91
 184+ 9A91 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9A94 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A96              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A96              ; 																	; _ en el caso de que no lo haya.
 188+ 9A96 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A99 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A9B 20 46        	jr nz,8F
 191+ 9A9D
 192+ 9A9D 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AA0 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AA1 28 40        	jr z,8F
 195+ 9AA3
 196+ 9AA3              ; ---------- ---------- ----------
 197+ 9AA3              ;
 198+ 9AA3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AA3
 200+ 9AA3 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AA6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AA8 28 11        	jr z,1F
 203+ 9AAA 38 06        	jr c,6F
 204+ 9AAC FE 04        	cp 4
 205+ 9AAE 28 14        	jr z,7F
 206+ 9AB0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AB2
 208+ 9AB2              ; ---------- ---------- ----------
 209+ 9AB2              ;
 210+ 9AB2              ; Perfiles de velocidad
 211+ 9AB2              ;
 212+ 9AB2
 213+ 9AB2 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AB5 FE FE        	cp $fe
 215+ 9AB7 20 2A        	jr nz,8F
 216+ 9AB9 18 10        	jr 3F
 217+ 9ABB 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ABE FE FD        	cp $fd
 219+ 9AC0 20 21        	jr nz,8F
 220+ 9AC2 18 07        	jr 3F
 221+ 9AC4 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AC7 FE FB        	cp $fb
 223+ 9AC9 20 18        	jr nz,8F
 224+ 9ACB
 225+ 9ACB              ; ---------- ---------- ----------
 226+ 9ACB
 227+ 9ACB              3
 228+ 9ACB CD FE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ACE              ;	call Reinicio
 230+ 9ACE
 231+ 9ACE              ; ---------- ---------- ----------
 232+ 9ACE              ;
 233+ 9ACE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ACE
 235+ 9ACE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AD0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AD1 CD EA 9A     	call DESPLZ_DER
 238+ 9AD4 C1           	pop bc
 239+ 9AD5 10 F9        	djnz 5B
 240+ 9AD7 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ADA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ADB 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9ADE CD C7 94     	call Genera_coordenadas
 244+ 9AE1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AE3
 246+ 9AE3              ; ---------- ---------- ----------
 247+ 9AE3
 248+ 9AE3 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AE6 CD EA 9A     	call DESPLZ_DER
 250+ 9AE9 C9           2 ret
 251+ 9AEA
 252+ 9AEA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AEA              ;
 254+ 9AEA              ;	22/9/22
 255+ 9AEA              ;
 256+ 9AEA
 257+ 9AEA CD F9 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AED CD 45 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AF0 CD 6E 9B         call Ciclo_completo
 260+ 9AF3 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AF6 CB FE        	set 7,(hl)
 262+ 9AF8 C9           	ret
 263+ 9AF9
 264+ 9AF9              ; ******************************************************************************************************************************************************************************************
 265+ 9AF9              ;	15/02/23
 266+ 9AF9              ;
 267+ 9AF9
 268+ 9AF9 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AFC 47           	ld b,a
 270+ 9AFD 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B00 23           1 inc hl
 272+ 9B01 23           	inc hl
 273+ 9B02 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B04 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B07 CD A8 90     	call Extrae_address
 276+ 9B0A 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9B0D
 278+ 9B0D              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B0D
 280+ 9B0D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B0D              ; Cuántos movimientos hemos hecho ??
 282+ 9B0D              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B0D
 284+ 9B0D 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B10 EB           	ex de,hl
 286+ 9B11 A7           	and a
 287+ 9B12 ED 52        	sbc hl,de
 288+ 9B14 CB 3D        	srl l
 289+ 9B16 3E 08        6 ld a,8
 290+ 9B18 95           	sub l
 291+ 9B19 30 1E        	jr nc,3F
 292+ 9B1B
 293+ 9B1B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B1B              ; B="0".
 295+ 9B1B
 296+ 9B1B 04           4 inc b
 297+ 9B1C 3C           	inc a
 298+ 9B1D 20 FC        	jr nz,4B
 299+ 9B1F 78           	ld a,b
 300+ 9B20 08           	ex af,af
 301+ 9B21 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B24 23           5 inc hl
 303+ 9B25 23           	inc hl
 304+ 9B26 10 FC        	djnz 5B
 305+ 9B28 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B2B CD A8 90     	call Extrae_address
 307+ 9B2E 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B31
 309+ 9B31              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B31              ; _(Posicion_actual).
 311+ 9B31
 312+ 9B31 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B34 34           	inc (hl)
 314+ 9B35 08               ex af,af
 315+ 9B36 6F           	ld l,a
 316+ 9B37 18 DD        	jr 6B
 317+ 9B39
 318+ 9B39              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B39
 320+ 9B39 47           3 ld b,a
 321+ 9B3A 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B3D 23           2 inc hl
 323+ 9B3E 23           	inc hl
 324+ 9B3F 10 FC        	djnz 2B
 325+ 9B41 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B44 C9           8 ret
 327+ 9B45
 328+ 9B45              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B45              ;
 330+ 9B45              ;	24/7/22
 331+ 9B45              ;
 332+ 9B45              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B45              ;
 334+ 9B45              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B45              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B45              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B45
 338+ 9B45 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B48 A7           	and a
 340+ 9B49 20 1F        	jr nz,1F
 341+ 9B4B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B4D 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B50
 344+ 9B50 21 C2 8B     	ld hl,Columns
 345+ 9B53 34           	inc (hl)
 346+ 9B54 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B57 E6 01        	and 1
 348+ 9B59 28 0F        	jr z,1F
 349+ 9B5B 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B5E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B5F 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B62 CD C7 94     	call Genera_coordenadas
 353+ 9B65 CD CA 9C     	call Inc_CTRL_DESPLZ
 354+ 9B68 18 03        	jr 2F
 355+ 9B6A CD CA 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B6D C9           2 ret
 357+ 9B6E
 358+ 9B6E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B6E              ;
 360+ 9B6E              ;	24/7/22
 361+ 9B6E              ;
 362+ 9B6E              ;	Ciclo_completo.
 363+ 9B6E              ;
 364+ 9B6E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B6E              ;
 366+ 9B6E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B6E              ; 	Decrementamos (Columns).
 368+ 9B6E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B6E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B6E
 371+ 9B6E
 372+ 9B6E 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B71 FE FF        	cp $ff
 374+ 9B73 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B75 E6 F0        	and $f0
 376+ 9B77 20 28        	jr nz,3F
 377+ 9B79
 378+ 9B79              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B79
 380+ 9B79 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B7C 47           	ld b,a
 382+ 9B7D 3E F8        	ld a,$f8
 383+ 9B7F 80           	add b
 384+ 9B80 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B83 18 1C        	jr 3F
 386+ 9B85 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B88 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B89 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B8A 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9B8D 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B90 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B92 20 0A        	jr nz,2F
 393+ 9B94 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B97 23           	inc hl
 395+ 9B98 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9B9B CD C7 94     	call Genera_coordenadas
 397+ 9B9E
 398+ 9B9E              ; Inicia el puntero de Sprite.
 399+ 9B9E
 400+ 9B9E CD BD 90     2 call Inicia_puntero_objeto_der
 401+ 9BA1 C9           3 ret
 402+ 9BA2
 403+ 9BA2              ; ******************************************************************************************************************************************************************************************
 404+ 9BA2              ;
 405+ 9BA2              ;	15/02/23
 406+ 9BA2              ;
 407+ 9BA2              ;	Mov_left.
 408+ 9BA2              ;
 409+ 9BA2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BA2              ;
 411+ 9BA2              Mov_left
 412+ 9BA2
 413+ 9BA2 21 C0 8B     	ld hl,Ctrl_0
 414+ 9BA5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BA7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BA7              ; 																	; _ en el caso de que no lo haya.
 417+ 9BA7 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9BAA CB 77        	bit 6,a
 419+ 9BAC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BAE
 421+ 9BAE CD C4 9C     	call Stop_Amadeus_left
 422+ 9BB1 C8           	ret z
 423+ 9BB2 20 4A        	jr nz,8F
 424+ 9BB4
 425+ 9BB4 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BB7 A7           	and a
 427+ 9BB8 20 44        	jr nz,8F
 428+ 9BBA
 429+ 9BBA 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BBD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BBE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BC0
 433+ 9BC0              ; ---------- ---------- ----------
 434+ 9BC0
 435+ 9BC0 3A D8 8B     	ld a,(Vel_left)
 436+ 9BC3 FE 02        	cp 2
 437+ 9BC5 28 0F        	jr z,1F
 438+ 9BC7 38 04        	jr c,6F
 439+ 9BC9 FE 04        	cp 4
 440+ 9BCB 28 12        	jr z,7F
 441+ 9BCD
 442+ 9BCD              ; ---------- ---------- ----------
 443+ 9BCD
 444+ 9BCD 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BD0 FE F8        	cp $f8
 446+ 9BD2 20 2A        	jr nz,8F
 447+ 9BD4 18 10        	jr 4F
 448+ 9BD6 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BD9 FE F9        	cp $f9
 450+ 9BDB 20 21        	jr nz,8F
 451+ 9BDD 18 07        	jr 4F
 452+ 9BDF 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BE2 FE FB        	cp $fb
 454+ 9BE4 20 18        	jr nz,8F
 455+ 9BE6
 456+ 9BE6              ; ---------- ---------- ----------
 457+ 9BE6
 458+ 9BE6              4
 459+ 9BE6 CD EC 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE9              ;	call Reinicio
 461+ 9BE9
 462+ 9BE9              ; ---------- ---------- ----------
 463+ 9BE9
 464+ 9BE9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BEB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BEC
 467+ 9BEC              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BEC              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BEC
 470+ 9BEC CD 05 9C     	call DESPLZ_IZQ
 471+ 9BEF C1           	pop bc
 472+ 9BF0 10 F9        	djnz 5B
 473+ 9BF2 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BF5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BF6 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9BF9 CD C7 94     	call Genera_coordenadas
 477+ 9BFC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BFE
 479+ 9BFE              ; ---------- ---------- ----------
 480+ 9BFE
 481+ 9BFE              ; Movemos, no hay recolocación.
 482+ 9BFE
 483+ 9BFE 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9C01 CD 05 9C     	call DESPLZ_IZQ
 485+ 9C04 C9           2 ret
 486+ 9C05
 487+ 9C05              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C05              ;
 489+ 9C05              ;	22/9/22
 490+ 9C05
 491+ 9C05              DESPLZ_IZQ
 492+ 9C05
 493+ 9C05 CD 14 9C     	call Desplaza_izquierda
 494+ 9C08 CD 60 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C0B CD 88 9C     	call Ciclo_completo_2
 496+ 9C0E 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C11 CB BE        	res 7,(hl)
 498+ 9C13 C9           	ret
 499+ 9C14
 500+ 9C14              Desplaza_izquierda
 501+ 9C14
 502+ 9C14 3A D8 8B     	ld a,(Vel_left)
 503+ 9C17 47           	ld b,a
 504+ 9C18 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C1B 23           1 inc hl
 506+ 9C1C 23           	inc hl
 507+ 9C1D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C1F 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C22 CD A8 90     	call Extrae_address
 510+ 9C25 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C28
 512+ 9C28              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C28
 514+ 9C28              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C28              ; Cuántos movimientos hemos hecho ??
 516+ 9C28              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C28
 518+ 9C28 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C2B EB           	ex de,hl
 520+ 9C2C A7           	and a
 521+ 9C2D ED 52        	sbc hl,de
 522+ 9C2F CB 3D        	srl l
 523+ 9C31 3E 08        6 ld a,8
 524+ 9C33 95           	sub l
 525+ 9C34 30 1E        	jr nc,3F
 526+ 9C36
 527+ 9C36              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C36              ; B="0".
 529+ 9C36
 530+ 9C36 04           4 inc b
 531+ 9C37 3C           	inc a
 532+ 9C38 20 FC        	jr nz,4B
 533+ 9C3A 78           	ld a,b
 534+ 9C3B 08           	ex af,af
 535+ 9C3C 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C3F 23           5 inc hl
 537+ 9C40 23           	inc hl
 538+ 9C41 10 FC        	djnz 5B
 539+ 9C43 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C46 CD A8 90     	call Extrae_address
 541+ 9C49 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C4C
 543+ 9C4C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C4C              ; _(Posicion_actual).
 545+ 9C4C
 546+ 9C4C 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C4F 35           	dec (hl)
 548+ 9C50 08           	ex af,af
 549+ 9C51 6F           	ld l,a
 550+ 9C52 18 DD        	jr 6B
 551+ 9C54
 552+ 9C54              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C54
 554+ 9C54 47           3 ld b,a
 555+ 9C55 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C58 23           2 inc hl
 557+ 9C59 23           	inc hl
 558+ 9C5A 10 FC        	djnz 2B
 559+ 9C5C 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C5F C9           8 ret
 561+ 9C60
 562+ 9C60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C60              ;
 564+ 9C60              ;	modifica_parametros_1er_DESPLZ
 565+ 9C60              ;
 566+ 9C60              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C60              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C60              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C60
 570+ 9C60 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C63 A7           	and a
 572+ 9C64 20 1E        	jr nz,1F
 573+ 9C66 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C67 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C6A 21 C2 8B     	ld hl,Columns
 576+ 9C6D 34           	inc (hl)
 577+ 9C6E 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C71 E6 01        	and 1
 579+ 9C73 20 0F        	jr nz,1F
 580+ 9C75 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C78 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C79 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C7C CD C7 94     	call Genera_coordenadas
 584+ 9C7F CD DB 9C     	call Dec_CTRL_DESPLZ
 585+ 9C82 18 03        	jr 2F
 586+ 9C84 CD DB 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C87 C9           2 ret
 588+ 9C88
 589+ 9C88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C88
 591+ 9C88 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C8B FE F7        	cp $f7
 593+ 9C8D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C8F 30 2C        	jr nc,3F
 595+ 9C91
 596+ 9C91              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C91
 598+ 9C91 06 00        	ld b,0
 599+ 9C93 04           4 inc b
 600+ 9C94 3C           	inc a
 601+ 9C95 FE F7        	cp $f7
 602+ 9C97 20 FA        	jr nz,4B
 603+ 9C99 3E FF        	ld a,$ff
 604+ 9C9B 90           	sub b
 605+ 9C9C 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9C9F 18 1C        	jr 3F
 607+ 9CA1
 608+ 9CA1              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CA1
 610+ 9CA1 21 C2 8B     1 ld hl,Columns
 611+ 9CA4 35           	dec (hl)
 612+ 9CA5 AF           	xor a
 613+ 9CA6 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9CA9 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9CAC E6 01        	and 1
 616+ 9CAE 28 0A        	jr z,2F
 617+ 9CB0 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CB3 2B           	dec hl
 619+ 9CB4 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CB7 CD C7 94     	call Genera_coordenadas
 621+ 9CBA
 622+ 9CBA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CBA
 624+ 9CBA CD D0 90     2 call Inicia_puntero_objeto_izq
 625+ 9CBD C9           3 ret
 626+ 9CBE
 627+ 9CBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CBE              ;
 629+ 9CBE              ;	19/10/22
 630+ 9CBE              ;
 631+ 9CBE              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CBE              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CBE
 634+ 9CBE 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CC1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CC3 C9           	ret
 637+ 9CC4
 638+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CC4              ;
 640+ 9CC4              ;	19/10/22
 641+ 9CC4              ;
 642+ 9CC4              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CC4              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CC4
 645+ 9CC4 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CC7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC9 C9           	ret
 648+ 9CCA
 649+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CCA              ;
 651+ 9CCA              ;	24/7/22
 652+ 9CCA              ;
 653+ 9CCA              ;	Inc_CTRL_DESPLZ
 654+ 9CCA              ;
 655+ 9CCA              ;
 656+ 9CCA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CCA
 658+ 9CCA 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CCD 3A D9 8B     	ld a,(Vel_right)
 660+ 9CD0 A7           	and a
 661+ 9CD1 28 06        	jr z,1F
 662+ 9CD3 47           	ld b,a
 663+ 9CD4 34           3 inc (hl)
 664+ 9CD5 10 FD        	djnz 3B
 665+ 9CD7 18 01        	jr 2F
 666+ 9CD9 34           1 inc (hl)
 667+ 9CDA C9           2 ret
 668+ 9CDB
 669+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CDB              ;
 671+ 9CDB              ;	5/2/23
 672+ 9CDB              ;
 673+ 9CDB              ;	Dec_CTRL_DESPLZ
 674+ 9CDB              ;
 675+ 9CDB              ;
 676+ 9CDB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CDB
 678+ 9CDB 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CDE 3A D8 8B     	ld a,(Vel_left)
 680+ 9CE1 A7           	and a
 681+ 9CE2 28 06        	jr z,1F
 682+ 9CE4 47           	ld b,a
 683+ 9CE5 35           3 dec (hl)
 684+ 9CE6 10 FD        	djnz 3B
 685+ 9CE8 18 01        	jr 2F
 686+ 9CEA 35           1 dec (hl)
 687+ 9CEB C9           2 ret
 688+ 9CEC
 689+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CEC
 691+ 9CEC 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CEF 01 1F 00     	ld bc,31
 693+ 9CF2 A7           	and a
 694+ 9CF3 ED 4A        	adc hl,bc
 695+ 9CF5 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9CF8 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CFB CB C6        	set 0,(hl)
 698+ 9CFD C9           	ret
 699+ 9CFE
 700+ 9CFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CFE
 702+ 9CFE 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D01 01 1F 00     	ld bc,31
 704+ 9D04 A7           	and a
 705+ 9D05 ED 42        	sbc hl,bc
 706+ 9D07 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D0A 21 C0 8B     	ld hl,Ctrl_0
 708+ 9D0D CB CE        	set 1,(hl)
 709+ 9D0F C9           	ret
 710+ 9D10
 711+ 9D10              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D10
 713+ 9D10 24           Reaparece_abajo inc h
 714+ 9D11 01 E0 17     	ld bc,$17e0
 715+ 9D14 A7           	and a
 716+ 9D15 ED 4A        	adc hl,bc
 717+ 9D17 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D1A 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D1D CB D6        	set 2,(hl)
 720+ 9D1F C9           	ret
 721+ 9D20
 722+ 9D20              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D20
 724+ 9D20 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D23 A7           	and a
 726+ 9D24 ED 42        	sbc hl,bc
 727+ 9D26 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D29 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D2C CB DE        	set 3,(hl)
 730+ 9D2E C9           	ret
 731+ 9D2F
 732+ 9D2F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D2F              ;
 734+ 9D2F              ;	15/07/23
 735+ 9D2F
 736+ 9D2F              Reinicio
 737+ 9D2F
 738+ 9D2F              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D2F
 740+ 9D2F AF           	xor a
 741+ 9D30 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D33 CD 51 9D     	call Limpia_contenido_hl
 743+ 9D36
 744+ 9D36 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D39 CD 51 9D     	call Limpia_contenido_hl
 746+ 9D3C
 747+ 9D3C CD A9 92     	call Inicializa_Puntero_indice_mov
 748+ 9D3F CD 50 9E     	call Inicia_Puntero_mov
 749+ 9D42
 750+ 9D42 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D45 06 05        	ld b,5
 752+ 9D47 77           1 ld (hl),a
 753+ 9D48 23           	inc hl
 754+ 9D49 10 FC        	djnz 1B
 755+ 9D4B
 756+ 9D4B 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D4E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D50
 759+ 9D50 C9           	ret
 760+ 9D51
 761+ 9D51 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D52 23           	inc hl
 763+ 9D53 77           	ld (hl),a
 764+ 9D54 C9           	ret
 765+ 9D55
 766+ 9D55              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D55              ;
 768+ 9D55              ;	18/6/24
 769+ 9D55              ;
 770+ 9D55
 771+ 9D55              Amadeus_a_izquierda
 772+ 9D55
 773+ 9D55              ;	Actualiza contador de movimientos.
 774+ 9D55
 775+ 9D55 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D58 35           	dec (hl)
 777+ 9D59 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D5B
 779+ 9D5B 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D5E 2B           	dec hl
 781+ 9D5F 2B           	dec hl
 782+ 9D60 2B           	dec hl
 783+ 9D61 2B           	dec hl
 784+ 9D62 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D65
 786+ 9D65 21 26 8C     	ld hl,Ctrl_3
 787+ 9D68 CB EE        	set 5,(hl)
 788+ 9D6A
 789+ 9D6A C9           	ret
 790+ 9D6B
 791+ 9D6B 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D6C C9           	ret
 793+ 9D6D
 794+ 9D6D
 795+ 9D6D              Amadeus_a_derecha
 796+ 9D6D
 797+ 9D6D              ;	Actualiza contador de movimientos.
 798+ 9D6D
 799+ 9D6D 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D70 34           	inc (hl)
 801+ 9D71 3E 7A        	ld a,$7a
 802+ 9D73 BE           	cp (hl)
 803+ 9D74 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D76
 805+ 9D76 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D79 23           	inc hl
 807+ 9D7A 23           	inc hl
 808+ 9D7B 23           	inc hl
 809+ 9D7C 23           	inc hl
 810+ 9D7D 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D80
 812+ 9D80 21 26 8C     	ld hl,Ctrl_3
 813+ 9D83 CB EE        	set 5,(hl)
 814+ 9D85 C9           	ret
 815+ 9D86
 816+ 9D86 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D87 C9           	ret
# file closed: Direcciones.asm
2169  9D88              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D88              ; ----- ----- ----- ----- -----
   2+ 9D88              ;
   3+ 9D88              ;   28/12/23
   4+ 9D88
   5+ 9D88              Movimiento
   6+ 9D88
   7+ 9D88              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D88
   9+ 9D88 3A BF 8B         ld a,(Ctrl_2)
  10+ 9D8B CB 57            bit 2,a
  11+ 9D8D 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D8F
  13+ 9D8F 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9D92 7E               ld a,(hl)
  15+ 9D93
  16+ 9D93              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D93
  18+ 9D93              Inicia_desplazamiento.
  19+ 9D93
  20+ 9D93              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D93
  22+ 9D93 CD 86 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D96
  24+ 9D96              ; Iniciamos (Repetimos_mov).
  25+ 9D96
  26+ 9D96 7E               ld a,(hl)
  27+ 9D97 E6 0F            and $0f
  28+ 9D99 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9D9C 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D9F
  31+ 9D9F              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D9F
  33+ 9D9F 23               inc hl
  34+ 9DA0 7E               ld a,(hl)
  35+ 9DA1 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9DA4 2B               dec hl
  37+ 9DA5
  38+ 9DA5 21 BF 8B         ld hl,Ctrl_2
  39+ 9DA8 CB D6            set 2,(hl)
  40+ 9DAA
  41+ 9DAA              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DAA              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DAA
  44+ 9DAA              Desplazamiento_iniciado
  45+ 9DAA
  46+ 9DAA CD 5A 9E         call Aplica_desplazamiento
  47+ 9DAD
  48+ 9DAD              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DAD
  50+ 9DAD 3A 26 8C         ld a,(Ctrl_3)
  51+ 9DB0 CB 4F            bit 1,a
  52+ 9DB2 C0               ret nz
  53+ 9DB3
  54+ 9DB3 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DB6 35               dec (hl)
  56+ 9DB7 C0               ret nz
  57+ 9DB8
  58+ 9DB8              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DB8              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DB8              ; Analiza (Cola_de_desplazamiento).
  61+ 9DB8
  62+ 9DB8 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DBB A7               and a
  64+ 9DBC CC AF 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DBF 28 30            jr z,Reinicia_el_movimiento
  66+ 9DC1
  67+ 9DC1 FE FF            cp $ff
  68+ 9DC3 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DC5
  70+ 9DC5 FE FE            cp $fe
  71+ 9DC7 CC 34 9E         call z,Fijamos_bucle
  72+ 9DCA 28 25            jr z,Reinicia_el_movimiento
  73+ 9DCC
  74+ 9DCC FE FD            cp $fd
  75+ 9DCE 20 11            jr nz,1F
  76+ 9DD0
  77+ 9DD0              ; ---
  78+ 9DD0              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DD0
  80+ 9DD0 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DD3 CB 5F            bit 3,a
  82+ 9DD5 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DD7
  84+ 9DD7              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DD7
  86+ 9DD7 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DDA CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DDC
  89+ 9DDC CD 45 9E         call Inicia_Repetimos_movimiento
  90+ 9DDF 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DE1              ; ---
  92+ 9DE1
  93+ 9DE1 FE 01        1 cp 1
  94+ 9DE3 CA 1E 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DE6
  96+ 9DE6 3D               dec a
  97+ 9DE7 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9DEA
  99+ 9DEA 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DED 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DF0              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DF0 C9               ret
 103+ 9DF1
 104+ 9DF1              Reinicia_el_movimiento
 105+ 9DF1
 106+ 9DF1 3A BF 8B         ld a,(Ctrl_2)
 107+ 9DF4 CB 5F            bit 3,a
 108+ 9DF6 28 1B            jr z,2F
 109+ 9DF8
 110+ 9DF8              ; (Cola_de_desplazamiento)="254".
 111+ 9DF8
 112+ 9DF8 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DFB 35               dec (hl)
 114+ 9DFC 20 15            jr nz,2F
 115+ 9DFE
 116+ 9DFE              ; Fin de las repeticiones del último movimiento.
 117+ 9DFE
 118+ 9DFE 21 BF 8B         ld hl,Ctrl_2
 119+ 9E01 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E03
 121+ 9E03 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9E06 23               inc hl
 123+ 9E07 23               inc hl
 124+ 9E08 23               inc hl
 125+ 9E09 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E0C              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E0C 7E               ld a,(hl)
 128+ 9E0D 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9E10
 130+ 9E10 C3 B8 9D         jp Cola
 131+ 9E13
 132+ 9E13 CD 50 9E     2 call Inicia_Puntero_mov
 133+ 9E16
 134+ 9E16 21 BF 8B         ld hl,Ctrl_2
 135+ 9E19 CB 96            res 2,(hl)
 136+ 9E1B
 137+ 9E1B C3 88 9D         jp Movimiento
 138+ 9E1E
 139+ 9E1E              Siguiente_desplazamiento
 140+ 9E1E
 141+ 9E1E              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E1E              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E1E
 144+ 9E1E 21 BF 8B         ld hl,Ctrl_2
 145+ 9E21 CB 96            res 2,(hl)
 146+ 9E23
 147+ 9E23 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E26 23               inc hl
 149+ 9E27 23               inc hl
 150+ 9E28 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E2B
 152+ 9E2B 7E               ld a,(hl)
 153+ 9E2C A7               and a
 154+ 9E2D CC AF 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E30 CA F1 9D         jp z,Reinicia_el_movimiento
 156+ 9E33
 157+ 9E33 C9               ret
 158+ 9E34
 159+ 9E34              ; Subrutinas -----------------------------------------
 160+ 9E34              ; ---------- --------- --------- ---------- ----------
 161+ 9E34              ;
 162+ 9E34              ;   24/07/23
 163+ 9E34              ;
 164+ 9E34              ;   Fijamos_bucle
 165+ 9E34              ;
 166+ 9E34              ;
 167+ 9E34
 168+ 9E34              Fijamos_bucle
 169+ 9E34
 170+ 9E34 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E37 3C               inc a
 172+ 9E38 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E3B
 174+ 9E3B CD AF 9E         call Incrementa_Puntero_indice_mov
 175+ 9E3E 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E41 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E44 C9               ret
 178+ 9E45
 179+ 9E45              ; ---------- --------- --------- ---------- ----------
 180+ 9E45              ;
 181+ 9E45              ;   07/7/23
 182+ 9E45              ;
 183+ 9E45              ;   Inicia_Repetimos_movimiento
 184+ 9E45              ;
 185+ 9E45              ;
 186+ 9E45
 187+ 9E45              Inicia_Repetimos_movimiento
 188+ 9E45
 189+ 9E45              ; Iniciamos (Repetimos_movimiento).
 190+ 9E45
 191+ 9E45 DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E49 DD 7E 02         ld a,(ix+2)
 193+ 9E4C 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E4F
 195+ 9E4F C9               ret
 196+ 9E50
 197+ 9E50              ; ---------- --------- --------- ---------- ----------
 198+ 9E50              ;
 199+ 9E50              ;   26/6/23
 200+ 9E50              ;
 201+ 9E50              ;   Inicia_Puntero_mov
 202+ 9E50              ;
 203+ 9E50              ;
 204+ 9E50
 205+ 9E50 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E53 CD A8 90         call Extrae_address
 207+ 9E56 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E59 C9               ret
 209+ 9E5A
 210+ 9E5A              ; ---------- --------- --------- ---------- ----------
 211+ 9E5A              ;
 212+ 9E5A              ;   27/06/23
 213+ 9E5A              ;
 214+ 9E5A              ;   Aplica_movimiento.
 215+ 9E5A
 216+ 9E5A              Aplica_desplazamiento
 217+ 9E5A
 218+ 9E5A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E5A
 220+ 9E5A 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E5D
 222+ 9E5D 7E               ld a,(hl)
 223+ 9E5E E6 F0            and $f0
 224+ 9E60 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E61
 226+ 9E61 CB 7E            bit 7,(hl)
 227+ 9E63 28 03            jr z,1F
 228+ 9E65 CD 3C 9A         call Mov_up
 229+ 9E68 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E6B CB 76            bit 6,(hl)
 231+ 9E6D 28 03            jr z,2F
 232+ 9E6F CD 03 9A         call Mov_down
 233+ 9E72
 234+ 9E72              ; Se ha aplicado reinicio ???
 235+ 9E72              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E72
 237+ 9E72              ;    ld a,(Ctrl_3)
 238+ 9E72              ;    bit 1,a
 239+ 9E72              ;    ret nz
 240+ 9E72
 241+ 9E72 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E75 CB 6E            bit 5,(hl)
 243+ 9E77 28 03            jr z,3F
 244+ 9E79 CD A2 9B         call Mov_left
 245+ 9E7C 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E7F CB 66            bit 4,(hl)
 247+ 9E81 C8               ret z
 248+ 9E82 CD 7F 9A         call Mov_right
 249+ 9E85 C9               ret
 250+ 9E86
 251+ 9E86              ; ---------- --------- --------- ---------- ----------
 252+ 9E86              ;
 253+ 9E86              ;   26/06/23
 254+ 9E86              ;
 255+ 9E86              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E86
 257+ 9E86              Ajusta_velocidad_desplazamiento
 258+ 9E86
 259+ 9E86              ; 1er byte de la cadena de movimiento.
 260+ 9E86              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E86
 262+ 9E86 CD A4 9E         call Extrae_nibble_alto
 263+ 9E89
 264+ 9E89 32 DA 8B         ld (Vel_up),a
 265+ 9E8C 79               ld a,c
 266+ 9E8D E6 0F            and $0f
 267+ 9E8F 32 DB 8B         ld (Vel_down),a
 268+ 9E92
 269+ 9E92              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E92              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E92
 272+ 9E92 23               inc hl
 273+ 9E93 CD A4 9E         call Extrae_nibble_alto
 274+ 9E96
 275+ 9E96 32 D8 8B         ld (Vel_left),a
 276+ 9E99 79               ld a,c
 277+ 9E9A E6 0F            and $0f
 278+ 9E9C 32 D9 8B         ld (Vel_right),a
 279+ 9E9F
 280+ 9E9F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E9F
 282+ 9E9F 23               inc hl
 283+ 9EA0 22 E6 8B         ld (Puntero_mov),hl
 284+ 9EA3 C9               ret
 285+ 9EA4
 286+ 9EA4 06 04        Extrae_nibble_alto ld b,4
 287+ 9EA6 7E               ld a,(hl)
 288+ 9EA7 4F               ld c,a
 289+ 9EA8 E6 F0            and $f0
 290+ 9EAA CB 3F        1 srl a
 291+ 9EAC 10 FC            djnz 1B
 292+ 9EAE C9               ret
 293+ 9EAF
 294+ 9EAF              ; ---------- --------- --------- ---------- ----------
 295+ 9EAF              ;
 296+ 9EAF              ;   5/7/23
 297+ 9EAF              ;
 298+ 9EAF              ;   Incrementa_Puntero_indice_mov
 299+ 9EAF
 300+ 9EAF              Incrementa_Puntero_indice_mov
 301+ 9EAF
 302+ 9EAF 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9EB2 34               inc (hl)
 304+ 9EB3
 305+ 9EB3 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9EB6 01 02 00         ld bc,2
 307+ 9EB9 A7               and a
 308+ 9EBA 09               add hl,bc
 309+ 9EBB 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9EBE
 311+ 9EBE 7E               ld a,(hl)
 312+ 9EBF A7               and a
 313+ 9EC0
 314+ 9EC0              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EC0
 316+ 9EC0              ;    jr z,$
 317+ 9EC0
 318+ 9EC0              ;! Reinicia el Patrón de movimiento.
 319+ 9EC0
 320+ 9EC0 CC C5 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EC3
 322+ 9EC3 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EC4
 324+ 9EC4 C9               ret
 325+ 9EC5
 326+ 9EC5              ; ---------- --------- --------- ---------- ----------
 327+ 9EC5              ;
 328+ 9EC5              ;   15/01/24
 329+ 9EC5              ;
 330+ 9EC5              ;   Inicializa_Puntero_indice_mov
 331+ 9EC5
 332+ 9EC5              Inicializa_Puntero_indice_mov_2
 333+ 9EC5
 334+ 9EC5              ; Existe etiqueta de bucle principal???
 335+ 9EC5
 336+ 9EC5 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EC8 24               inc h
 338+ 9EC9 25               dec h
 339+ 9ECA 28 05            jr z,2F
 340+ 9ECC
 341+ 9ECC 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9ECF 18 14            jr 3F
 343+ 9ED1
 344+ 9ED1              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ED1
 346+ 9ED1 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9ED4 47               ld b,a
 348+ 9ED5
 349+ 9ED5 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9ED8 2B           1 dec hl
 351+ 9ED9 2B               dec hl
 352+ 9EDA 10 FC            djnz 1B
 353+ 9EDC 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9EDF
 355+ 9EDF AF               xor a
 356+ 9EE0 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9EE3 18 06            jr 4F
 358+ 9EE5
 359+ 9EE5 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EE8 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9EEB C9           4 ret
 362+ 9EEC
 363+ 9EEC              ; ----------------------------------------------------------------------
 364+ 9EEC              ;
 365+ 9EEC              ;   30/01/24
 366+ 9EEC              ;
 367+ 9EEC              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EEC
 369+ 9EEC 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EEF CD 44 94         call Calcula_salto_en_BC
 371+ 9EF2 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EF5 A7               and a
 373+ 9EF6 ED 4A            adc hl,bc
 374+ 9EF8 C9               ret
 375+ 9EF9
 376+ 9EF9              ; ----------------------------------------------------------------------
 377+ 9EF9              ;
 378+ 9EF9              ;   30/01/24
 379+ 9EF9              ;
 380+ 9EF9              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF9              ;
 382+ 9EF9              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF9
 384+ 9EF9 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EFA 23               inc hl
 386+ 9EFB 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EFC 69               ld l,c
 388+ 9EFD 60               ld h,b
 389+ 9EFE 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F01 C9               ret
 391+ 9F02
# file closed: Movimiento.asm
2170  9F02              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F02              ; --------------------------------------------------------------------------------------
   2+ 9F02              ;
   3+ 9F02              ;   18/09/24
   4+ 9F02              ;
   5+ 9F02
   6+ 9F02              Genera_disparo_de_entidad_maldosa
   7+ 9F02
   8+ 9F02              ;   Estructura de un disparo de entidades.
   9+ 9F02
  10+ 9F02              ;   Disparo_1 defw 0								; Puntero objeto.
  11+ 9F02              ; 	defw 0											; Puntero de impresión.
  12+ 9F02              ;	defw 0											; Control.
  13+ 9F02
  14+ 9F02              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
  15+ 9F02              ;   _de la entidad en el momento de disparar.
  16+ 9F02
  17+ 9F02              ;   El byte alto muestra la siguiente información:
  18+ 9F02              ;
  19+ 9F02              ;   Bits (0) y (1) ..... Siempre estarán activos. Indica el nº de desplazamientos hacia abajo del_
  20+ 9F02              ;                        _disparo antes de desplazarse a derecha/izquierda.
  21+ 9F02              ;
  22+ 9F02              ;   Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
  23+ 9F02              ;
  24+ 9F02              ;                        10xx ..... Izquierda.
  25+ 9F02              ;                        01xx ..... Derecha.
  26+ 9F02              ;                        00xx ..... Recto.
  27+ 9F02
  28+ 9F02              ;*  Exclusiones.
  29+ 9F02
  30+ 9F02              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
  31+ 9F02
  32+ 9F02 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
  33+ 9F05 A7               and a
  34+ 9F06 C8               ret z
  35+ 9F07
  36+ 9F07 3A B5 8B         ld a,(Coordenada_y)
  37+ 9F0A A7               and a
  38+ 9F0B C8               ret z
  39+ 9F0C
  40+ 9F0C 3D               dec a
  41+ 9F0D C8               ret z
  42+ 9F0E
  43+ 9F0E FE 0D            cp 13
  44+ 9F10 D0               ret nc
  45+ 9F11
  46+ 9F11              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
  47+ 9F11              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
  48+ 9F11              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
  49+ 9F11              ;
  50+ 9F11              ;   (Puntero_objeto) = "$00,$18"
  51+ 9F11
  52+ 9F11 7D               ld a,l
  53+ 9F12 C6 40            add $40
  54+ 9F14 6F               ld l,a
  55+ 9F15
  56+ 9F15 4D               ld c,l
  57+ 9F16 44               ld b,h
  58+ 9F17
  59+ 9F17              ;   Decrementa el numero de disparos de entidades.
  60+ 9F17
  61+ 9F17 21 14 8C         ld hl,Numero_de_disparos_de_entidades
  62+ 9F1A 35               dec (hl)
  63+ 9F1B
  64+ 9F1B              ;   Puntero de impresión del disparo en BC , (1 scanline libre entre la entidad y el disparo).
  65+ 9F1B
  66+ 9F1B 2A 29 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  67+ 9F1E CD A8 90     1 call Extrae_address
  68+ 9F21
  69+ 9F21              ;   Comprobamos si la caja está vacía.
  70+ 9F21
  71+ 9F21 23               inc hl
  72+ 9F22 7E               ld a,(hl)
  73+ 9F23 A7               and a
  74+ 9F24
  75+ 9F24 20 2E            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
  76+ 9F26
  77+ 9F26              ;   Generamos disparo. !!!!!!!!!!!!!!!!
  78+ 9F26
  79+ 9F26 2B               dec hl
  80+ 9F27
  81+ 9F27 36 00            ld (hl),$00
  82+ 9F29 23               inc hl
  83+ 9F2A 36 18            ld (hl),$18
  84+ 9F2C 23               inc hl                                              ; Guarda el puntero objeto del disparo en la caja.
  85+ 9F2D
  86+ 9F2D 71               ld (hl),c
  87+ 9F2E 23               inc hl
  88+ 9F2F 70               ld (hl),b
  89+ 9F30 23               inc hl                                              ; Guarda el puntero de impresión.
  90+ 9F31
  91+ 9F31 3A BE 8B         ld a,(Velocidad)                                    ; Byte bajo de Control guarda la velocidad de la entidad/disparo.
  92+ 9F34 77               ld (hl),a
  93+ 9F35
  94+ 9F35 23               inc hl
  95+ 9F36
  96+ 9F36              ;! Ajusta el grado de inclinación del disparo.
  97+ 9F36
  98+ 9F36 36 07            ld (hl),7
  99+ 9F38
 100+ 9F38              ; Determina tendencia del disparo.
 101+ 9F38
 102+ 9F38 3A 6E 89         ld a,(CX_Amadeus)
 103+ 9F3B 47               ld b,a
 104+ 9F3C 3A B4 8B         ld a,(Coordenada_X)
 105+ 9F3F 90               sub b
 106+ 9F40 38 07            jr c,Disparo_a_derecha
 107+ 9F42
 108+ 9F42 FE 04        Disparo_a_izquierda cp 4
 109+ 9F44
 110+ 9F44 D8               ret c
 111+ 9F45 C8               ret z
 112+ 9F46
 113+ 9F46 CB FE            set 7,(hl)
 114+ 9F48 C9               ret
 115+ 9F49
 116+ 9F49 47           Disparo_a_derecha ld b,a
 117+ 9F4A 3E FF            ld a,$ff
 118+ 9F4C 90               sub b
 119+ 9F4D
 120+ 9F4D FE 04            cp 4
 121+ 9F4F
 122+ 9F4F D8               ret c
 123+ 9F50 C8               ret z
 124+ 9F51
 125+ 9F51 CB F6            set 6,(hl)
 126+ 9F53 C9               ret
 127+ 9F54
 128+ 9F54              ;   --- --- ---
 129+ 9F54
 130+ 9F54              Situa_en_siguiente_disparo
 131+ 9F54
 132+ 9F54 13               inc de
 133+ 9F55 13               inc de
 134+ 9F56
 135+ 9F56 EB               ex de,hl
 136+ 9F57 18 C5            jr 1B
 137+ 9F59
 138+ 9F59              ; --------------------------------------------------------------------------------------
 139+ 9F59              ;
 140+ 9F59              ;   31/08/24
 141+ 9F59              ;
 142+ 9F59
 143+ 9F59              Compara_con_coordenadas_de_disparo
 144+ 9F59
 145+ 9F59 3A B5 8B         ld a,(Coordenada_y)
 146+ 9F5C 47               ld b,a
 147+ 9F5D 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 148+ 9F60 90               sub b
 149+ 9F61
 150+ 9F61              ; A = "0" ok
 151+ 9F61              ; A = "1" ok
 152+ 9F61
 153+ 9F61 28 08            jr z,Comprueba_coordenada_X
 154+ 9F63 3D               dec a
 155+ 9F64 28 05            jr z,Comprueba_coordenada_X
 156+ 9F66
 157+ 9F66              ; A = "$ff" ok
 158+ 9F66
 159+ 9F66 FE FE            cp $fe
 160+ 9F68 28 01            jr z,Comprueba_coordenada_X
 161+ 9F6A
 162+ 9F6A C9               ret
 163+ 9F6B
 164+ 9F6B              Comprueba_coordenada_X
 165+ 9F6B
 166+ 9F6B 3A B4 8B         ld a,(Coordenada_X)
 167+ 9F6E 47               ld b,a
 168+ 9F6F 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 169+ 9F72 7E               ld a,(hl)
 170+ 9F73 90               sub b
 171+ 9F74
 172+ 9F74              ; A = "0" ok
 173+ 9F74              ; A = "1" ok
 174+ 9F74
 175+ 9F74 28 09            jr z,Activa_Impacto_en_entidad
 176+ 9F76 3D               dec a
 177+ 9F77 28 06            jr z,Activa_Impacto_en_entidad
 178+ 9F79
 179+ 9F79              ; A = "2" ok
 180+ 9F79
 181+ 9F79 3D               dec a
 182+ 9F7A 28 03            jr z,Activa_Impacto_en_entidad
 183+ 9F7C
 184+ 9F7C              ; A = "$ff"
 185+ 9F7C
 186+ 9F7C FE FD            cp $fd
 187+ 9F7E C0               ret nz
 188+ 9F7F
 189+ 9F7F              Activa_Impacto_en_entidad
 190+ 9F7F
 191+ 9F7F              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 192+ 9F7F
 193+ 9F7F 3E 02            ld a,2
 194+ 9F81 32 B7 8B         ld (Impacto),a
 195+ 9F84
 196+ 9F84              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 197+ 9F84
 198+ 9F84 11 C0 87         ld de,Indice_Explosion_entidades
 199+ 9F87 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 200+ 9F8A
 201+ 9F8A 73               ld (hl),e
 202+ 9F8B 23               inc hl
 203+ 9F8C 72               ld (hl),d
 204+ 9F8D
 205+ 9F8D              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 206+ 9F8D
 207+ 9F8D 21 2B 8C         ld hl,Impacto2
 208+ 9F90 CB 9E            res 3,(hl)
 209+ 9F92
 210+ 9F92 C9               ret
 211+ 9F93
 212+ 9F93              ; --------------------------------------------------------------------------------------
 213+ 9F93              ;
 214+ 9F93              ;   11/09/24
 215+ 9F93              ;
 216+ 9F93
 217+ 9F93              Limpia_album_de_borrado_disparos
 218+ 9F93
 219+ 9F93 21 28 8C         ld hl,Ctrl_5
 220+ 9F96 CB 46            bit 0,(hl)
 221+ 9F98 C8               ret z
 222+ 9F99 CB 86            res 0,(hl)
 223+ 9F9B
 224+ 9F9B              Limpiando
 225+ 9F9B
 226+ 9F9B AF               xor a
 227+ 9F9C 2A 0E 8C         ld hl,(Album_de_borrado_disparos)
 228+ 9F9F 77               ld (hl),a
 229+ 9FA0 5D               ld e,l
 230+ 9FA1 54               ld d,h
 231+ 9FA2 1C               inc e                                           ; DE = HL+1
 232+ 9FA3 01 3A 00         ld bc,$003a
 233+ 9FA6 ED B0            ldir
 234+ 9FA8
 235+ 9FA8 C9               ret
 236+ 9FA9
 237+ 9FA9
 238+ 9FA9              ; --------------------------------------------------------------------------------------
 239+ 9FA9              ;
 240+ 9FA9              ;   26/08/24
 241+ 9FA9              ;
 242+ 9FA9
 243+ 9FA9              Calcula_bytes_pintado_disparos
 244+ 9FA9
 245+ 9FA9 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 246+ 9FAC 45               ld b,l
 247+ 9FAD 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 248+ 9FB0 7D               ld a,l
 249+ 9FB1
 250+ 9FB1 90               sub b
 251+ 9FB2 32 12 8C         ld (Num_de_bytes_album_de_disparos),a
 252+ 9FB5
 253+ 9FB5 C9               ret
 254+ 9FB6
 255+ 9FB6              ; --------------------------------------------------------------------------------------
 256+ 9FB6              ;
 257+ 9FB6              ;   11/09/24
 258+ 9FB6              ;
 259+ 9FB6              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 260+ 9FB6              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 261+ 9FB6              ;   _disparos que el álbum del FRAME actual).
 262+ 9FB6
 263+ 9FB6              Limpia_album_de_pintado_disparos
 264+ 9FB6
 265+ 9FB6              ;*   Exclusiones.
 266+ 9FB6
 267+ 9FB6 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 268+ 9FB9 A7               and a
 269+ 9FBA C8               ret z
 270+ 9FBB
 271+ 9FBB              ; -----
 272+ 9FBB
 273+ 9FBB 3A 12 8C         ld a,(Num_de_bytes_album_de_disparos)
 274+ 9FBE 47               ld b,a
 275+ 9FBF 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 276+ 9FC2
 277+ 9FC2 90               sub b
 278+ 9FC3
 279+ 9FC3 C8               ret z
 280+ 9FC4 D8               ret c
 281+ 9FC5
 282+ 9FC5 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 283+ 9FC8 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 284+ 9FC9 AF               xor a                                                               ; "0".
 285+ 9FCA
 286+ 9FCA 77           1 ld (hl),a
 287+ 9FCB 2C               inc l
 288+ 9FCC 10 FC            djnz 1B
 289+ 9FCE
 290+ 9FCE C9               ret
 291+ 9FCF
 292+ 9FCF              ; --------------------------------------------------------------------------------------
 293+ 9FCF              ;
 294+ 9FCF              ;   27/08/24
 295+ 9FCF              ;
 296+ 9FCF
 297+ 9FCF              Motor_Disparos
 298+ 9FCF
 299+ 9FCF              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 300+ 9FCF
 301+ 9FCF 21 20 89         ld hl,Disparo_Amad+1
 302+ 9FD2
 303+ 9FD2 34               inc (hl)
 304+ 9FD3 35               dec (hl)
 305+ 9FD4
 306+ 9FD4 28 06            jr z,2F
 307+ 9FD6
 308+ 9FD6              ;   Esta caja contiene un disparo.
 309+ 9FD6
 310+ 9FD6 CD F8 9F         call Consulta_Impacto
 311+ 9FD9 CC 11 A0         call z,Mueve_disparo_Amadeus
 312+ 9FDC
 313+ 9FDC              ; Disparos de entidades.
 314+ 9FDC
 315+ 9FDC 3A 14 8C     2 ld a,(Numero_de_disparos_de_entidades)
 316+ 9FDF A7               and a
 317+ 9FE0 C8               ret z
 318+ 9FE1
 319+ 9FE1 06 07            ld b,7                                                               ; Contador de disparos.
 320+ 9FE3 21 23 89         ld hl,Indice_de_disparos_entidades
 321+ 9FE6
 322+ 9FE6 CD A8 90     4 call Extrae_address
 323+ 9FE9 13               inc de
 324+ 9FEA 13               inc de
 325+ 9FEB ED 53 17 8C      ld (Puntero_rancio_disparos_album),de
 326+ 9FEF
 327+ 9FEF 23               inc hl
 328+ 9FF0
 329+ 9FF0 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
 330+ 9FF1 35               dec (hl)
 331+ 9FF2 28 00            jr z,3F
 332+ 9FF4
 333+ 9FF4 EB           3 ex de,hl
 334+ 9FF5 10 EF            djnz 4B
 335+ 9FF7
 336+ 9FF7 C9               ret
 337+ 9FF8
 338+ 9FF8              ; ----------------------
 339+ 9FF8              ;
 340+ 9FF8              ;
 341+ 9FF8              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 342+ 9FF8              ;
 343+ 9FF8              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 344+ 9FF8
 345+ 9FF8
 346+ 9FF8              Consulta_Impacto
 347+ 9FF8
 348+ 9FF8              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 349+ 9FF8              ;   _sea lo más coherente posible.
 350+ 9FF8
 351+ 9FF8 E5               push hl
 352+ 9FF9 2B               dec hl
 353+ 9FFA CD F2 A0         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 354+ 9FFD E1               pop hl
 355+ 9FFE 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 356+ 9FFF
 357+ 9FFF C8               ret z
 358+ A000
 359+ A000 3A 2B 8C         ld a,(Impacto2)
 360+ A003 CB DF            set 3,a
 361+ A005 32 2B 8C         ld (Impacto2),a
 362+ A008
 363+ A008 E5               push hl
 364+ A009 CD DF A0         call Genera_coordenadas_de_disparo_Amadeus
 365+ A00C E1               pop hl
 366+ A00D CD 2A A0         call Elimina_disparo
 367+ A010
 368+ A010 C9               ret
 369+ A011
 370+ A011              ; ----------------------
 371+ A011              ;
 372+ A011              ;
 373+ A011              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 374+ A011
 375+ A011              Mueve_disparo_Amadeus
 376+ A011
 377+ A011 CD A8 90         call Extrae_address
 378+ A014
 379+ A014 CD CC 99         call PreviousScan
 380+ A017 CD CC 99         call PreviousScan
 381+ A01A CD CC 99         call PreviousScan
 382+ A01D CD CC 99         call PreviousScan
 383+ A020
 384+ A020              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 385+ A020
 386+ A020 7C               ld a,h
 387+ A021 D6 40            sub $40
 388+ A023 EB               ex de,hl
 389+ A024 38 04            jr c,Elimina_disparo
 390+ A026
 391+ A026               ; Introduce nuevo puntero_de_impresión en la caja.
 392+ A026
 393+ A026 73               ld (hl),e
 394+ A027 23               inc hl
 395+ A028 72               ld (hl),d
 396+ A029
 397+ A029 C9               ret
 398+ A02A
 399+ A02A              ; ----------------------
 400+ A02A              ;
 401+ A02A              ;   11/9/24
 402+ A02A
 403+ A02A              Elimina_disparo
 404+ A02A
 405+ A02A              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 406+ A02A              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 407+ A02A
 408+ A02A              ;   Disparo_1A defw 0									; Puntero objeto.
 409+ A02A              ;   	defw 0											; Puntero de impresión.
 410+ A02A
 411+ A02A 2B               dec hl
 412+ A02B 2B               dec hl
 413+ A02C
 414+ A02C AF               xor a
 415+ A02D 77               ld (hl),a
 416+ A02E 23               inc hl
 417+ A02F 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 418+ A030
 419+ A030 23               inc hl
 420+ A031 77               ld (hl),a
 421+ A032 23               inc hl
 422+ A033 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 423+ A034
 424+ A034 3E 01            ld a,1
 425+ A036 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 426+ A039
 427+ A039 21 28 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 428+ A03C CB C6            set 0,(hl)
 429+ A03E
 430+ A03E AF               xor a
 431+ A03F 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 432+ A040
 433+ A040 C9               ret
 434+ A041
 435+ A041              ; --------------------------------------------------------------------------------------
 436+ A041              ;
 437+ A041              ;   21/8/24
 438+ A041              ;
 439+ A041
 440+ A041              Pinta_disparos
 441+ A041
 442+ A041 ED 73 00 8C      ld (Stack),sp
 443+ A045 06 02            ld b,2
 444+ A047
 445+ A047 ED 7B 0E 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 446+ A04B
 447+ A04B D1           2 pop de
 448+ A04C
 449+ A04C 14               inc d
 450+ A04D 15               dec d
 451+ A04E
 452+ A04E 28 1B            jr z,1F
 453+ A050
 454+ A050              Imprime_scanlines_de_disparo
 455+ A050
 456+ A050 E1               pop hl
 457+ A051
 458+ A051              ; Puntero objeto en DE.
 459+ A051              ; Puntero_de_impresión en HL.
 460+ A051
 461+ A051              ; 1er scanline.
 462+ A051
 463+ A051 1A               ld a,(de)
 464+ A052 AE               xor (hl)
 465+ A053 77               ld (hl),a
 466+ A054
 467+ A054 13               inc de
 468+ A055 2C               inc l
 469+ A056
 470+ A056 1A               ld a,(de)
 471+ A057 AE               xor (hl)
 472+ A058 77               ld (hl),a
 473+ A059
 474+ A059              ; 2º scanline.
 475+ A059
 476+ A059 E1               pop hl
 477+ A05A 1B               dec de
 478+ A05B
 479+ A05B 1A               ld a,(de)
 480+ A05C AE               xor (hl)
 481+ A05D 77               ld (hl),a
 482+ A05E
 483+ A05E 13               inc de
 484+ A05F 2C               inc l
 485+ A060
 486+ A060 1A               ld a,(de)
 487+ A061 AE               xor (hl)
 488+ A062 77               ld (hl),a
 489+ A063
 490+ A063              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 491+ A063
 492+ A063 18 E6            jr 2B
 493+ A065
 494+ A065 ED 7B 0C 8C  3 ld sp,(Album_de_pintado_disparos)
 495+ A069 18 E0            jr 2B
 496+ A06B
 497+ A06B 10 F8        1 djnz 3B
 498+ A06D ED 7B 00 8C      ld sp,(Stack)
 499+ A071 C9               ret
 500+ A072
 501+ A072              ; --------------------------------------------------------------------------------------
 502+ A072              ;
 503+ A072              ;   14/09/24
 504+ A072              ;
 505+ A072              ;   Modifica: HL y DE.
 506+ A072
 507+ A072
 508+ A072              Genera_datos_de_impresion_disparos_Amadeus
 509+ A072
 510+ A072 ED 73 00 8C      ld (Stack),sp
 511+ A076 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 512+ A079 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 513+ A07A
 514+ A07A 14               inc d                                                     ;? Salimos si no hay disparo.
 515+ A07B 15               dec d
 516+ A07C
 517+ A07C 28 12            jr z,Salida
 518+ A07E
 519+ A07E              Genera_scanlines_de_disparo_Amadeus
 520+ A07E
 521+ A07E E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 522+ A07F              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 523+ A07F ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 524+ A083
 525+ A083 C1               pop bc
 526+ A084 C1               pop bc
 527+ A085 C1               pop bc
 528+ A086
 529+ A086 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 530+ A08A
 531+ A08A E5               push hl                                                   ;? Sube 2º scanline al álbum.
 532+ A08B CD CC 99         call PreviousScan
 533+ A08E E5               push hl                                                   ;? Sube 1er scanline al álbum.
 534+ A08F D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 535+ A090
 536+ A090              Salida
 537+ A090
 538+ A090 ED 7B 00 8C      ld sp,(Stack)
 539+ A094 C9               ret
 540+ A095
 541+ A095              ; --------------------------------------------------------------------------------------
 542+ A095              ;
 543+ A095              ;   12/09/24
 544+ A095              ;
 545+ A095
 546+ A095              Genera_disparo_Amadeus
 547+ A095
 548+ A095              ;*  Exclusiones.
 549+ A095
 550+ A095 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 551+ A098 A7               and a
 552+ A099 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 553+ A09A
 554+ A09A 3D               dec a
 555+ A09B 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 556+ A09E
 557+ A09E              Define_puntero_objeto_disparo
 558+ A09E
 559+ A09E              ;   Inicializamos contador.
 560+ A09E
 561+ A09E 06 00            ld b,0
 562+ A0A0
 563+ A0A0 2A 72 89         ld hl,(p.imp.amadeus)
 564+ A0A3 2C               inc l
 565+ A0A4
 566+ A0A4 3E 80            ld a,$80
 567+ A0A6 BE               cp (hl)
 568+ A0A7 28 0D            jr z,1F
 569+ A0A9
 570+ A0A9 04               inc b
 571+ A0AA
 572+ A0AA 3E 60            ld a,$60
 573+ A0AC BE               cp (hl)
 574+ A0AD 28 07            jr z,1F
 575+ A0AF
 576+ A0AF
 577+ A0AF 04               inc b
 578+ A0B0
 579+ A0B0 3E 18            ld a,$18
 580+ A0B2 BE               cp (hl)
 581+ A0B3 28 01            jr z,1F
 582+ A0B5
 583+ A0B5 04               inc b
 584+ A0B6
 585+ A0B6              ;   Calcula el Puntero_de_impresión del disparo.
 586+ A0B6
 587+ A0B6              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 588+ A0B6
 589+ A0B6 CD CC 99     1 call PreviousScan
 590+ A0B9
 591+ A0B9 78               ld a,b
 592+ A0BA CB 3F            srl a
 593+ A0BC 28 03            jr z,4F
 594+ A0BE
 595+ A0BE              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 596+ A0BE E5               push hl
 597+ A0BF 18 02            jr 5F
 598+ A0C1 2D           4 dec l
 599+ A0C2 E5               push hl
 600+ A0C3              ; ---
 601+ A0C3
 602+ A0C3              ;   Calcula el Puntero_objeto del disparo.
 603+ A0C3
 604+ A0C3 21 70 83     5 ld hl,Indice_disparo_Amadeus
 605+ A0C6 04               inc b
 606+ A0C7 05               dec b
 607+ A0C8 28 04            jr z,2F
 608+ A0CA
 609+ A0CA              ;   Nos desplazamos por el índice de disparos.
 610+ A0CA
 611+ A0CA 2C           3 inc l
 612+ A0CB 2C               inc l
 613+ A0CC 10 FC            djnz 3B
 614+ A0CE
 615+ A0CE              ; --- Guarda el Puntero_objeto del disparo en la pila.
 616+ A0CE CD A8 90     2 call Extrae_address
 617+ A0D1 E5               push hl
 618+ A0D2              ; ---
 619+ A0D2
 620+ A0D2              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 621+ A0D2              ; HL en el 1er .db de la caja.
 622+ A0D2
 623+ A0D2 21 1F 89         ld hl,Disparo_Amad
 624+ A0D5
 625+ A0D5 06 02            ld b,2
 626+ A0D7
 627+ A0D7 D1           6 pop de
 628+ A0D8 73               ld (hl),e
 629+ A0D9 23               inc hl
 630+ A0DA 72               ld (hl),d
 631+ A0DB 23               inc hl
 632+ A0DC
 633+ A0DC 10 F9            djnz 6B
 634+ A0DE
 635+ A0DE C9               ret
 636+ A0DF
 637+ A0DF              Genera_coordenadas_de_disparo_Amadeus
 638+ A0DF
 639+ A0DF              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 640+ A0DF              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 641+ A0DF              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 642+ A0DF
 643+ A0DF CD A8 90         call Extrae_address
 644+ A0E2 CD C7 94         call Genera_coordenadas
 645+ A0E5
 646+ A0E5 3D               dec a
 647+ A0E6
 648+ A0E6 21 2E 8C         ld hl,Coordenadas_disparo_certero
 649+ A0E9 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 650+ A0EA 23               inc hl
 651+ A0EB 3A B4 8B         ld a,(Coordenada_X)
 652+ A0EE 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 653+ A0EF
 654+ A0EF AF               xor a
 655+ A0F0 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 656+ A0F1
 657+ A0F1 C9               ret
 658+ A0F2
 659+ A0F2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 660+ A0F2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 661+ A0F2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 662+ A0F2
 663+ A0F2              ; ----------------------------------------------
 664+ A0F2              ;
 665+ A0F2              ;   27/08/24
 666+ A0F2              ;
 667+ A0F2              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 668+ A0F2              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 669+ A0F2
 670+ A0F2              Detecta_impacto_en_disparo_de_Amadeus
 671+ A0F2
 672+ A0F2              Extraccion_de_datos
 673+ A0F2
 674+ A0F2 13               inc de
 675+ A0F3 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 676+ A0F4
 677+ A0F4 5E               ld e,(hl)
 678+ A0F5 23               inc hl
 679+ A0F6 56               ld d,(hl)
 680+ A0F7
 681+ A0F7 23               inc hl
 682+ A0F8
 683+ A0F8 4E               ld c,(hl)
 684+ A0F9 23               inc hl
 685+ A0FA 46               ld b,(hl)
 686+ A0FB
 687+ A0FB C5               push bc
 688+ A0FC E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 689+ A0FD
 690+ A0FD              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 691+ A0FD
 692+ A0FD CD CC 99         call PreviousScan
 693+ A100 CD CC 99         call PreviousScan
 694+ A103
 695+ A103              Detecta_impacto_
 696+ A103
 697+ A103 1A               ld a,(de)
 698+ A104 A6               and (hl)
 699+ A105 C0               ret nz
 700+ A106
 701+ A106 13               inc de
 702+ A107 23               inc hl
 703+ A108
 704+ A108 1A               ld a,(de)
 705+ A109 A6               and (hl)
 706+ A10A C9               ret
 707+ A10B
 708+ A10B              ; -------------------------------------------------------------------------------------------------------------
 709+ A10B              ;
 710+ A10B              ;   8/8/24
 711+ A10B              ;
 712+ A10B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 713+ A10B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 714+ A10B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 715+ A10B              ;
 716+ A10B              ;   MODIFICA: HL,DE,BC y A.
 717+ A10B              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 718+ A10B              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 719+ A10B
 720+ A10B              Colision_Entidad_Amadeus
 721+ A10B
 722+ A10B              ; Posible contacto de entidad con Amadeus. ?????
 723+ A10B
 724+ A10B              ; Exclusiones:
 725+ A10B
 726+ A10B 3A 4E 8C         ld a,(Shield)
 727+ A10E A7               and a
 728+ A10F C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 729+ A110
 730+ A110 21 26 8C         ld hl,Ctrl_3
 731+ A113 CB 76            bit 6,(hl)
 732+ A115 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 733+ A116
 734+ A116 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 735+ A119 CB 56            bit 2,(hl)
 736+ A11B C0               ret nz
 737+ A11C
 738+ A11C 3A B5 8B     	ld a,(Coordenada_y)
 739+ A11F FE 14        	cp $14
 740+ A121 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 741+ A122
 742+ A122 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 743+ A125 A7               and a
 744+ A126 C0               ret nz
 745+ A127
 746+ A127              Genera_coordenadas_X
 747+ A127
 748+ A127              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 749+ A127              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 750+ A127
 751+ A127              ;   Limpiamos almacenes.
 752+ A127
 753+ A127              ;    call Limpia_Coordenadas_X
 754+ A127
 755+ A127              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 756+ A127
 757+ A127 21 30 8C         ld hl,Coordenadas_X_Entidad
 758+ A12A 3A B4 8B         ld a,(Coordenada_X)
 759+ A12D CD 4F A1         call Guarda_coordenadas_X
 760+ A130
 761+ A130              ;   Almacenamos las coordenadas X de Amadeus.
 762+ A130
 763+ A130 3A 6E 89         ld a,(CX_Amadeus)
 764+ A133 CD 4F A1         call Guarda_coordenadas_X
 765+ A136 CD 63 A1         call Compara_coordenadas_X
 766+ A139 C0               ret nz
 767+ A13A
 768+ A13A 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 769+ A13C 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 770+ A13F
 771+ A13F 2A F3 8B         ld hl,(Puntero_store_caja)
 772+ A142 2C               inc l
 773+ A143 2C               inc l
 774+ A144 2C               inc l
 775+ A145 2C               inc l
 776+ A146 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 777+ A149
 778+ A149 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 779+ A14C CB D6            set 2,(hl)
 780+ A14E
 781+ A14E C9               ret
 782+ A14F
 783+ A14F               ; ----- ----- ----- ----- -----
 784+ A14F
 785+ A14F 77           Guarda_coordenadas_X ld (hl),a
 786+ A150 3C               inc a
 787+ A151 2C               inc l
 788+ A152 77               ld (hl),a
 789+ A153 3C               inc a
 790+ A154 2C               inc l
 791+ A155 77               ld (hl),a
 792+ A156 2C               inc l
 793+ A157 C9               ret
 794+ A158
 795+ A158 AF           Limpia_Coordenadas_X xor a
 796+ A159 06 06            ld b,6
 797+ A15B 21 33 8C         ld hl,Coordenadas_X_Amadeus
 798+ A15E 77           1 ld (hl),a
 799+ A15F 23               inc hl
 800+ A160 10 FC            djnz 1B
 801+ A162 C9               ret
 802+ A163
 803+ A163              ; ----- ----- ----- ----- -----
 804+ A163
 805+ A163              Compara_coordenadas_X
 806+ A163
 807+ A163 DD 21 30 8C      ld ix,Coordenadas_X_Entidad
 808+ A167 DD 7E 00         ld a,(ix+0)
 809+ A16A CD 78 A1         call Comparando
 810+ A16D C8               ret z
 811+ A16E
 812+ A16E 3C               inc a
 813+ A16F CD 87 A1         call Comparando_1
 814+ A172 C8               ret z
 815+ A173
 816+ A173 3C               inc a
 817+ A174 CD 87 A1         call Comparando_1
 818+ A177 C9               ret
 819+ A178
 820+ A178              ; ----- ----- ----- ----- -----
 821+ A178              ;
 822+ A178              ;   4/12/23
 823+ A178              ;
 824+ A178              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 825+ A178
 826+ A178              Comparando
 827+ A178
 828+ A178 DD 2C            inc ixl
 829+ A17A DD 2C            inc ixl
 830+ A17C DD 2C            inc ixl
 831+ A17E
 832+ A17E DD 46 00         ld b,(ix+0)
 833+ A181 DD 4E 01         ld c,(ix+1)
 834+ A184 DD 56 02         ld d,(ix+2)
 835+ A187
 836+ A187 B8           Comparando_1 cp b
 837+ A188 C8               ret z
 838+ A189 B9               cp c
 839+ A18A C8               ret z
 840+ A18B BA               cp d
 841+ A18C C9               ret
 842+ A18D
 843+ A18D              ; -----------------------------------------------------------------------
 844+ A18D              ;
 845+ A18D              ;   04/7/24
 846+ A18D              ;
 847+ A18D
 848+ A18D              Detecta_colision_nave_entidad
 849+ A18D
 850+ A18D              ; Exclusiones:
 851+ A18D
 852+ A18D              ; Salimos de la rutina si no hay advertencia de posible colisión.
 853+ A18D
 854+ A18D 21 2B 8C     	ld hl,Impacto2
 855+ A190 CB 56        	bit 2,(hl)
 856+ A192 C8           	ret z
 857+ A193
 858+ A193              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 859+ A193
 860+ A193 2A 74 89         ld hl,(Pamm_Amadeus)
 861+ A196 CD A8 90         call Extrae_address
 862+ A199 54               ld d,h
 863+ A19A 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 864+ A19B
 865+ A19B 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 866+ A19E 06 10            ld b,16                                        ; Contador de scanlines en B.
 867+ A1A0 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 868+ A1A3
 869+ A1A3 C5           1 push bc
 870+ A1A4 06 03            ld b,3
 871+ A1A6 E5               push hl
 872+ A1A7
 873+ A1A7              ; .db
 874+ A1A7
 875+ A1A7 1A           3 ld a,(de)
 876+ A1A8 A7               and a
 877+ A1A9 20 03            jr nz,4F
 878+ A1AB
 879+ A1AB 2C               inc l
 880+ A1AC 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 881+ A1AE
 882+ A1AE ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 883+ A1B0 28 04            jr z,2F
 884+ A1B2
 885+ A1B2              ; Impacto.
 886+ A1B2 FD 2D            dec iyl
 887+ A1B4 28 22            jr z,5F
 888+ A1B6
 889+ A1B6 1C           2 inc e
 890+ A1B7 10 EE            djnz 3B
 891+ A1B9
 892+ A1B9 E1               pop hl
 893+ A1BA
 894+ A1BA              ; Hay salto de línea en el puntero de impresión ???
 895+ A1BA
 896+ A1BA 7C               ld a,h
 897+ A1BB D6 57            sub $57
 898+ A1BD 20 0A            jr nz,6F
 899+ A1BF
 900+ A1BF              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 901+ A1BF
 902+ A1BF 2A 72 89         ld hl,(p.imp.amadeus)
 903+ A1C2 3E 20            ld a,$20
 904+ A1C4 A7               and a
 905+ A1C5 85               add l
 906+ A1C6 6F               ld l,a
 907+ A1C7 18 01            jr 7F
 908+ A1C9
 909+ A1C9 24           6 inc h
 910+ A1CA
 911+ A1CA C1           7 pop bc
 912+ A1CB 10 D6            djnz 1B
 913+ A1CD
 914+ A1CD              ;   Fin de la comparativa.
 915+ A1CD
 916+ A1CD              ;   NO HAY COLISIÓN !!!!!.
 917+ A1CD              ;
 918+ A1CD              ;   .db (Impacto) de Amadeus a "0".
 919+ A1CD              ;   RES el bit2 de (Impacto2).
 920+ A1CD              ;
 921+ A1CD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 922+ A1CD              ;   Lo colocamos a "0".
 923+ A1CD
 924+ A1CD 21 2B 8C         ld hl,Impacto2
 925+ A1D0 CB 96            res 2,(hl)
 926+ A1D2 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
 927+ A1D5 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 928+ A1D7 C9               ret
 929+ A1D8
 930+ A1D8              ;   COLISIÓN !!!!!.
 931+ A1D8              ;
 932+ A1D8              ;   .db (Impacto) de Amadeus a "1".
 933+ A1D8              ;   SET el bit3 de (Impacto2).
 934+ A1D8              ;
 935+ A1D8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 936+ A1D8
 937+ A1D8 E1           5 pop hl
 938+ A1D9 C1               pop bc
 939+ A1DA
 940+ A1DA 21 71 89         ld hl,Impacto_Amadeus
 941+ A1DD 36 01            ld (hl),1
 942+ A1DF 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 943+ A1E2 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 944+ A1E4
 945+ A1E4 11 C0 87         ld de,Indice_Explosion_entidades
 946+ A1E7 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 947+ A1EA
 948+ A1EA 23               inc hl
 949+ A1EB 23               inc hl
 950+ A1EC 23               inc hl
 951+ A1ED
 952+ A1ED 73               ld (hl),e
 953+ A1EE 23               inc hl
 954+ A1EF 72               ld (hl),d
 955+ A1F0
 956+ A1F0              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 957+ A1F0
 958+ A1F0 11 60 88         ld de,Indice_Explosion_Amadeus
 959+ A1F3 21 74 89         ld hl,Pamm_Amadeus
 960+ A1F6
 961+ A1F6 73               ld (hl),e
 962+ A1F7 23               inc hl
 963+ A1F8 72               ld (hl),d
 964+ A1F9
 965+ A1F9 C9               ret
 966+ A1FA
 967+ A1FA
 968+ A1FA
# file closed: Disparo.asm
2171  A1FA
2172  A1FA              	SAVESNA "Pruebas.sna", START
2173  A1FA
2174  A1FA
2175  A1FA
2176  A1FA
# file closed: Banco_de_pruebas.asm
