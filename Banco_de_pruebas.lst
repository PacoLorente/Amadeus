# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E1 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A ED 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 10        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 0C        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24              ; Borramos:
  44  AA24
  45  AA24 CD 15 9B     	call Pinta_Sprites
  46  AA27
  47  AA27              ; Pintamos:
  48  AA27
  49  AA27 2A E3 89     	ld hl,(Album_de_pintado)
  50  AA2A 22 EB 89     	ld (Scanlines_album_SP),hl
  51  AA2D
  52  AA2D CD 15 9B     	call Pinta_Sprites
  53  AA30
  54  AA30              ;	ld a,6
  55  AA30              ;	out ($fe),a
  56  AA30              ;	call Pinta_Amadeus										; Borde amarillo.
  57  AA30
  58  AA30              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  59  AA30              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  60  AA30
  61  AA30              ;	ld a,7
  62  AA30              ;	out ($fe),a												; Borde blanco.
  63  AA30              ;	call Guarda_parametros_DRAW
  64  AA30              ;	call Restore_Amadeus
  65  AA30
  66  AA30              ; Posible colisión Entidad-Amadeus ???
  67  AA30
  68  AA30              ;	ld a,(Impacto2)
  69  AA30              ;	bit 2,a
  70  AA30              ;	jr z,1F
  71  AA30
  72  AA30              ;	call Detecta_colision_nave_entidad
  73  AA30
  74  AA30              ;1 ld a,4
  75  AA30              ;	out ($fe),a
  76  AA30              ;	call Gestiona_Amadeus
  77  AA30
  78  AA30              ;	ld a,7
  79  AA30              ;	out ($fe),a											; Borde blanco.
  80  AA30              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  81  AA30              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  82  AA30
  83  AA30              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  84  AA30
  85  AA30              ;	call Recupera_parametros_DRAW
  86  AA30
  87  AA30 CD 33 8C     1 call Actualiza_relojes
  88  AA33
  89  AA33 21 ED 89     	ld hl,Ctrl_3
  90  AA36 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  91  AA38 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
  92  AA3A
  93  AA3A FD E1        	pop iy
  94  AA3C DD E1        	pop ix
  95  AA3E F1           	pop af
  96  AA3F C1           	pop bc
  97  AA40 D1           	pop de
  98  AA41 E1           	pop hl
  99  AA42 D9           	exx
 100  AA43 C1           	pop bc
 101  AA44 D1           	pop de
 102  AA45 E1           	pop hl
 103  AA46 08           	ex af,af'
 104  AA47 F1           	pop af
 105  AA48 08           	ex af,af'
 106  AA49 D9           	exx
 107  AA4A
 108  AA4A ED 7B E1 89  	ld sp,(Stack_3)
 109  AA4E
 110  AA4E FB           	ei
 111  AA4F
 112  AA4F 3E 01        	ld a,1												; Borde azul.
 113  AA51 D3 FE        	out ($fe),a
 114  AA53
 115  AA53 C9           	ret
 116  AA54
 117  AA54              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 118  AA54
 119  AA54              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA54              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA54              ;
   3+ AA54              ;	17/02/23
   4+ AA54              ;
   5+ AA54              ;	Sprites e índices.
   6+ AA54
   7+ AA54              	org $8319
   8+ 8319
   9+ 8319              ; Disparo.
  10+ 8319
  11+ 8319 21 83        Indice_disparo defw Disparo_0
  12+ 831B 27 83        	defw Disparo_f9
  13+ 831D 2D 83        	defw Disparo_fb
  14+ 831F 33 83        	defw Disparo_fd
  15+ 8321
  16+ 8321              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8321 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8325 01 80
  18+ 8327              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8327 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 832B 00 60
  20+ 832D              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 832D 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8331 18 00
  22+ 8333              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8333 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8337 06 00
  24+ 8339
  25+ 8339              ; ----------------------------------------------------------------------------------------
  26+ 8339
  27+ 8339              ; Badsat_izq. 2x2.
  28+ 8339
  29+ 8339 49 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 833B 90 84        	defw Badsat_izq_fe
  31+ 833D 60 84        	defw Badsat_izq_fd
  32+ 833F 30 84        	defw Badsat_izq_fc
  33+ 8341 00 84        	defw Badsat_izq_fb
  34+ 8343 C9 83        	defw Badsat_izq_fa
  35+ 8345 99 83        	defw Badsat_izq_f9
  36+ 8347 69 83        	defw Badsat_izq_f8
  37+ 8349
  38+ 8349 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 834D 02 2A 02 55
  39+ 8351 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8355 7F E8 03 60
  40+ 8359 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 835D 2B E8 54 40
  41+ 8361 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8365 28 00 10 00
  42+ 8369
  43+ 8369 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 836D 0A 00 01 15
  44+ 8371 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8375 01 55 00 01
  45+ 8379 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 837D 00 01 B0 00
  46+ 8381 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8385 FC 00 15 F4
  47+ 8389 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 838D 55 30 00 2A
  48+ 8391 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8395 00 08 00 00
  49+ 8399
  50+ 8399 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 839D 85 00 00 8A
  51+ 83A1 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 83A5 00 AA 80 00
  52+ 83A9 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 83AD 00 00 D8 00
  53+ 83B1 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 83B5 FE 00 0A FA
  54+ 83B9 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 83BD 2A 98 00 15
  55+ 83C1 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 83C5 00 04 00 00
  56+ 83C9
  57+ 83C9 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 83CD 42 80 00 45
  58+ 83D1 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 83D5 00 55 40 00
  59+ 83D9 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 83DD 00 00 6C 00
  60+ 83E1 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 83E5 FF 00 05 7D
  61+ 83E9 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 83ED 15 4C 00 0A
  62+ 83F1 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 83F5 00 02 00 00
  63+ 83F9
  64+ 83F9              ;! 7 bytes libres aquí !!!!!
  65+ 83F9
  66+ 83F9              	org $8400
  67+ 8400
  68+ 8400 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  68+ 8404 21 40 00 22
  69+ 8408 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  69+ 840C 00 2A A0 00
  70+ 8410 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  70+ 8414 80 00 36 00
  71+ 8418 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  71+ 841C 7F 80 02 BE
  72+ 8420 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  72+ 8424 0A A6 00 05
  73+ 8428 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  73+ 842C 00 01 00 00
  74+ 8430
  75+ 8430 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  75+ 8434 10 A0 00 11
  76+ 8438 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  76+ 843C 00 15 50 00
  77+ 8440 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  77+ 8444 40 00 1B 00
  78+ 8448 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  78+ 844C BF C0 01 5F
  79+ 8450 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  79+ 8454 05 53 00 02
  80+ 8458 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  80+ 845C 00 00 80 00
  81+ 8460
  82+ 8460 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  82+ 8464 08 50 00 08
  83+ 8468 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  83+ 846C 00 0A A8 00
  84+ 8470 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  84+ 8474 A0 00 0D 80
  85+ 8478 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  85+ 847C 5F F8 00 AF
  86+ 8480 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  86+ 8484 02 A9 00 01
  87+ 8488 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  87+ 848C 00 00 40 00
  88+ 8490
  89+ 8490 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  89+ 8494 04 28 00 04
  90+ 8498 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  90+ 849C 00 05 54 00
  91+ 84A0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  91+ 84A4 D0 00 06 C0
  92+ 84A8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  92+ 84AC 2F FC 00 57
  93+ 84B0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  93+ 84B4 01 54 80 00
  94+ 84B8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  94+ 84BC 00 00 20 00
  95+ 84C0
  96+ 84C0
  97+ 84C0 D0 84        Indice_Badsat_der defw Badsat_derecha
  98+ 84C2 00 85        	defw Badsat_der_f8
  99+ 84C4 30 85        	defw Badsat_der_f9
 100+ 84C6 60 85        	defw Badsat_der_fa
 101+ 84C8 90 85        	defw Badsat_der_fb
 102+ 84CA C0 85        	defw Badsat_der_fc
 103+ 84CC 00 86        	defw Badsat_der_fd
 104+ 84CE 30 86        	defw Badsat_der_fe
 105+ 84D0
 106+ 84D0 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 107+ 84D3 28 40 00     	DEFB    $28,$40,$00
 108+ 84D6 54 40 00     	DEFB	$54,$40,$00
 109+ 84D9 AA 40 00     	DEFB	$AA,$40,$00
 110+ 84DC 55 40 00     	DEFB	$55,$40,$00
 111+ 84DF 2A 40 00     	DEFB	$2A,$40,$00
 112+ 84E2 17 FE 00     	DEFB	$17,$FE,$00
 113+ 84E5 06 C0 00     	DEFB	$06,$C0,$00
 114+ 84E8 07 50 00     	DEFB	$07,$50,$00
 115+ 84EB 1F E8 00     	DEFB	$1F,$E8,$00
 116+ 84EE 17 D4 00     	DEFB	$17,$D4,$00
 117+ 84F1 02 2A 00     	DEFB	$02,$2A,$00
 118+ 84F4 06 55 00     	DEFB	$06,$55,$00
 119+ 84F7 00 2A 00     	DEFB	$00,$2A,$00
 120+ 84FA 00 14 00     	DEFB	$00,$14,$00
 121+ 84FD 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 122+ 8500
 123+ 8500 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 123+ 8504 20 00 2A 20
 124+ 8508 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 124+ 850C 2A A0 00 15
 125+ 8510 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 125+ 8514 00 03 60 00
 126+ 8518 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 126+ 851C F4 00 0B EA
 127+ 8520 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 127+ 8524 03 2A 80 00
 128+ 8528 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 128+ 852C 00 00 04 00
 129+ 8530
 130+ 8530 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 130+ 8534 10 00 15 10
 131+ 8538 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 131+ 853C 15 50 00 0A
 132+ 8540 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 132+ 8544 80 01 B0 00
 133+ 8548 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 133+ 854C FA 00 05 F5
 134+ 8550 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 134+ 8554 01 95 40 00
 135+ 8558 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 135+ 855C 00 00 02 00
 136+ 8560
 137+ 8560 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 137+ 8564 08 00 0A 88
 138+ 8568 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 138+ 856C 0A A8 00 05
 139+ 8570 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 139+ 8574 C0 00 D8 00
 140+ 8578 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 140+ 857C FD 00 02 FA
 141+ 8580 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 141+ 8584 00 CA A0 00
 142+ 8588 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 142+ 858C 80 00 01 00
 143+ 8590
 144+ 8590 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 144+ 8594 84 00 05 44
 145+ 8598 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 145+ 859C 05 54 00 02
 146+ 85A0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 146+ 85A4 E0 00 6C 00
 147+ 85A8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 147+ 85AC FE 80 01 7D
 148+ 85B0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 148+ 85B4 00 65 50 00
 149+ 85B8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 149+ 85BC 40 00 00 80
 150+ 85C0
 151+ 85C0 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 151+ 85C4 42 00 02 A2
 152+ 85C8 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 152+ 85CC 02 AA 00 01
 153+ 85D0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 153+ 85D4 F0 00 36 00
 154+ 85D8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 154+ 85DC FF 40 00 BE
 155+ 85E0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 155+ 85E4 00 32 A8 00
 156+ 85E8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 156+ 85EC A0 00 00 40
 157+ 85F0
 158+ 85F0              ;! 16 bytes libres aquí !!!!!
 159+ 85F0
 160+ 85F0              	org $8600
 161+ 8600
 162+ 8600 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 162+ 8604 A1 00 01 51
 163+ 8608 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 163+ 860C 01 55 00 00
 164+ 8610 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 164+ 8614 F8 00 1B 00
 165+ 8618 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 165+ 861C FF A0 00 1F
 166+ 8620 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 166+ 8624 00 09 54 00
 167+ 8628 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 167+ 862C 50 00 00 20
 168+ 8630
 169+ 8630 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 169+ 8634 50 80 00 A8
 170+ 8638 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 170+ 863C 00 AA 80 00
 171+ 8640 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 171+ 8644 FC 00 0D 80
 172+ 8648 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 172+ 864C FF D0 00 0F
 173+ 8650 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 173+ 8654 00 04 AA 00
 174+ 8658 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 174+ 865C 28 00 00 10
 175+ 8660
 176+ 8660              ; ----------------------------------------------------------------------------------------
 177+ 8660
 178+ 8660              ; Amadeus. 2x2.
 179+ 8660
 180+ 8660              	org $8119
 181+ 8119
 182+ 8119 39 81        Indice_Amadeus_der defw Amadeus
 183+ 811B 00 00        	defw 0
 184+ 811D 59 81        	defw Amadeus_F9							; [$F9] right - [$FA] left
 185+ 811F 00 00        	defw 0
 186+ 8121 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 187+ 8123 00 00        	defw 0
 188+ 8125 B9 81        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 189+ 8127 00 00        	defw 0	 								; (Fín de índice).
 190+ 8129
 191+ 8129 39 81        Indice_Amadeus_izq defw Amadeus
 192+ 812B 00 00        	defw 0
 193+ 812D B9 81        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 194+ 812F 00 00        	defw 0
 195+ 8131 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 196+ 8133 00 00        	defw 0
 197+ 8135 59 81        	defw Amadeus_F9							; [$FD] right - [$FE] left
 198+ 8137 00 00        	defw 0	 								; (Fín de índice).
 199+ 8139
 200+ 8139 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 200+ 813D 26 64 24 24
 201+ 8141 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 201+ 8145 6F F6 67 E6
 202+ 8149 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 202+ 814D F7 EF FF FF
 203+ 8151 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 203+ 8155 8B D1 71 8E
 204+ 8159
 205+ 8159 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 205+ 815D F1 00 09 99
 206+ 8161 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 206+ 8165 0B 0D 00 1B
 207+ 8169 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 207+ 816D 80 19 F9 80
 208+ 8171 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 208+ 8175 F3 C0 3D FB
 209+ 8179 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 209+ 817D 3E F7 C0 3E
 210+ 8181 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 210+ 8185 40 1C 63 80
 211+ 8189
 212+ 8189 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 212+ 818D 3C 40 02 66
 213+ 8191 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 213+ 8195 02 C3 40 06
 214+ 8199 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 214+ 819D 60 06 7E 60
 215+ 81A1 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 215+ 81A5 3C F0 0F 7E
 216+ 81A9 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 216+ 81AD 0F BD F0 0F
 217+ 81B1 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 217+ 81B5 10 07 18 E0
 218+ 81B9
 219+ 81B9 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 219+ 81BD 8F 10 00 99
 220+ 81C1 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 220+ 81C5 00 B0 D0 01
 221+ 81C9 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 221+ 81CD D8 01 9F 98
 222+ 81D1 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 222+ 81D5 CF 3C 03 DF
 223+ 81D9 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 223+ 81DD 03 EF 7C 03
 224+ 81E1 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 224+ 81E5 44 01 C6 38
 225+ 81E9
 226+ 81E9              ; ----------------------------------------------------------------------------------------
 227+ 81E9
 228+ 81E9              	org $8660
 229+ 8660
 230+ 8660 66 86        Indice_Explosion_2x3 defw Explosion_2x3_1
 231+ 8662 96 86        	defw Explosion_2x3_2
 232+ 8664 C6 86        	defw Explosion_2x3_3
 233+ 8666
 234+ 8666 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 234+ 866A 10 00 04 38
 235+ 866E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 235+ 8672 02 E6 80 01
 236+ 8676 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 236+ 867A 00 03 DD 80
 237+ 867E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 237+ 8682 3B 80 01 9D
 238+ 8686 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 238+ 868A 02 FD 80 03
 239+ 868E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 239+ 8692 00 08 00 00
 240+ 8696
 241+ 8696 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 241+ 869A 38 10 03 BC
 242+ 869E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 242+ 86A2 04 06 C0 00
 243+ 86A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 243+ 86AA 00 03 DD 80
 244+ 86AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 244+ 86B2 3A 70 01 9C
 245+ 86B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 245+ 86BA 04 F8 80 06
 246+ 86BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 246+ 86C2 00 00 00 00
 247+ 86C6
 248+ 86C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 248+ 86CA 00 20 08 00
 249+ 86CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 249+ 86D2 00 06 00 00
 250+ 86D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 250+ 86DA 00 00 14 30
 251+ 86DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 251+ 86E2 38 00 01 08
 252+ 86E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 252+ 86EA 00 80 00 04
 253+ 86EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 253+ 86F2 10 08 00 20
 254+ 86F6
 255+ 86F6              ; ------------------------------------------
 256+ 86F6
 257+ 86F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 258+ 86F8 20 86        	defw Explosion_2x2_2
 259+ 86FA 40 86        	defw Explosion_2x2_3
 260+ 86FC
 261+ 86FC              	org $8600
 262+ 8600
 263+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 263+ 8604 43 84 37 D8
 264+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 264+ 860C 17 F0 3D D8
 265+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 265+ 8614 19 D0 1F 60
 266+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 266+ 861C 40 00 80 00
 267+ 8620
 268+ 8620
 269+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 269+ 8624 3B C2 60 0C
 270+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 270+ 862C 07 F0 3D D8
 271+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 271+ 8634 19 C6 1F 64
 272+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 272+ 863C 80 00 00 00
 273+ 8640
 274+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 274+ 8644 88 04 10 0C
 275+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 275+ 864C 81 E0 01 43
 276+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 276+ 8654 10 80 18 00
 277+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 277+ 865C 60 01 80 02
 278+ 8660
 279+ 8660
 280+ 8660
 281+ 8660
 282+ 8660
# file closed: Sprites_e_indices.asm
 120  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 19 81        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 29 81        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 C0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 272+ 87BF 01           	db 1												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 C0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 121  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 122  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 123  898A
 124  898A              ; ******************************************************************************************************************************************************************************************
 125  898A              ; Constantes.
 126  898A              ; ******************************************************************************************************************************************************************************************
 127  898A              ;
 128  898A              ; 09/03/24
 129  898A
 130  898A              ;
 131  898A              ; Constantes.
 132  898A              ;
 133  898A
 134  898A              Sprite_vacio equ $eae0
 135  898A
 136  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 137  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 138  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 139  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 140  898A
 141  898A              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 142  898A              ;Almacen_de_scanlines_masticados equ $e900
 143  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 144  898A              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 145  898A              ;
 146  898A              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 147  898A
 148  898A              ;	($8119 - $81e8) = Índice y datos de Amadeus. "$d0", 208 bytes.
 149  898A
 150  898A
 151  898A              ;                                                       ;	35 bytes por entidad.
 152  898A              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 153  898A              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 154  898A              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 155  898A              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 156  898A
 157  898A              Scanlines_album_2 equ $8200    ;    (8200h - 8318h)
 158  898A
 159  898A              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 160  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 161  898A              ;														; 55 Bytes.
 162  898A
 163  898A              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 164  898A
 165  898A              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 166  898A
 167  898A
 168  898A              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 169  898A
 170  898A              ; ******************************************************************************************************************************************************************************************
 171  898A              ; Variables.
 172  898A              ; ******************************************************************************************************************************************************************************************
 173  898A              ;
 174  898A              ; 18/01/24
 175  898A              ;
 176  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 177  898A              ;
 178  898A
 179  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 180  898A
 181  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 182  898B              ;															- Patrón de movimiento.
 183  898B              ;															- Aspecto
 184  898B 00           Filas db 0												; Filas. [DRAW]
 185  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 186  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 187  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 188  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 189  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 190  8993
 191  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 192  8993
 193  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 194  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 195  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 196  8994 00           Attr db 0												; Atributos de la entidad:
 197  8995
 198  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 199  8995              ;
 200  8995              ;	COLORES: 0 ..... NEGRO
 201  8995              ;    		 1 ..... AZUL
 202  8995              ; 			 2 ..... ROJO
 203  8995              ;			 3 ..... MAGENTA
 204  8995              ; 			 4 ..... VERDE
 205  8995              ; 			 5 ..... CIAN
 206  8995              ;			 6 ..... AMARILLO
 207  8995              ; 			 7 ..... BLANCO
 208  8995
 209  8995 00 00        Indice_Sprite_der defw 0
 210  8997 00 00        Indice_Sprite_izq defw 0
 211  8999 00 00        Puntero_DESPLZ_der defw 0
 212  899B 00 00        Puntero_DESPLZ_izq defw 0
 213  899D
 214  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 215  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 216  89A0
 217  89A0              ; Variables de objeto. (Características).
 218  89A0
 219  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 220  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 221  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 222  89A1 00 00 00...  Variables_de_borrado ds 6
 223  89A7
 224  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 225  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 226  89A9
 227  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 228  89AB
 229  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 230  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 231  89AB
 232  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 233  89AD              ;														; _palabras que componen el "movimiento_masticado".
 234  89AD
 235  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 236  89AD
 237  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 238  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 239  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 240  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 241  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 242  89AE              ;
 243  89AE              ; 														DESCRIPCIÖN:
 244  89AE              ;
 245  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 246  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 247  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 248  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 249  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 250  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 251  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 252  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 253  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 254  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 255  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 256  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 257  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 258  89AE              ;
 259  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 260  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 261  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 262  89AE
 263  89AE              ; Variables de funcionamiento. [DRAW].
 264  89AE
 265  89AE 00           Columnas db 0
 266  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 267  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 268  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 269  89B2
 270  89B2              ; variables de control general.
 271  89B2
 272  89B2 00           Ctrl_2 db 0
 273  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 274  89B3              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 275  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 276  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 277  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 278  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 279  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 280  89B3              ;
 281  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 282  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 283  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 284  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 285  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 286  89B3              ;														BIT 4, ???
 287  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 288  89B3
 289  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 290  89B4
 291  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 292  89B4
 293  89B4              ;					         		---------;      ;---------
 294  89B4
 295  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 296  89B4
 297  89B4              Perfiles_de_velocidad
 298  89B4
 299  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 300  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 301  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 302  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 303  89B8
 304  89B8              ; Contadores de 16 bits.
 305  89B8
 306  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 307  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 308  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 309  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 310  89C0
 311  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 312  89C0
 313  89C0              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 314  89C0              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 315  89C0              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 316  89C0
 317  89C0              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 318  89C0
 319  89C0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 320  89C2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 321  89C4 00 00        Puntero_indice_mov_bucle defw 0							;
 322  89C6              ;
 323  89C6              ;
 324  89C6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 325  89C7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 326  89C7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 327  89C7 00           Incrementa_puntero_backup db 0
 328  89C8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 329  89C9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 330  89C9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 331  89CA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 332  89CB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 333  89CC              ;
 334  89CC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 335  89CC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 336  89CC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 337  89CC              ;
 338  89CC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 339  89CC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 340  89CC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 341  89CC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 342  89CC              ;
 343  89CC              ;														;	"$ff" ..... Bucle infinito de repetición.
 344  89CC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 345  89CC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 346  89CC              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 347  89CC
 348  89CC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 349  89CD
 350  89CD              ;														DESCRIPCIÓN:
 351  89CD              ;
 352  89CD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 353  89CD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 354  89CD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 355  89CD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 356  89CD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 357  89CD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 358  89CD
 359  89CD              ;														BIT 3, Recarga de nueva oleada.
 360  89CD              ;														BIT 4, Recarga de nueva oleada.
 361  89CD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 362  89CD              ;														BIT 6, **** Frame completo.
 363  89CD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 364  89CD
 365  89CD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 366  89CF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 367  89CF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 368  89CF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 369  89CF
 370  89CF              ; Gestión de ENTIDADES y CAJAS.
 371  89CF
 372  89CF 00 00        Puntero_store_caja defw 0
 373  89D1 00 00        Puntero_restore_caja defw 0
 374  89D3 00 00        Indice_restore_caja defw 0
 375  89D5 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 376  89D6 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 377  89D7 00           Entidades_en_curso db 0									; ..... ..... .....
 378  89D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 379  89D9              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 380  89D9              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 381  89D9              ;														; _ (Numero_de_malotes)="0".
 382  89D9 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 383  89DB 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 384  89DD              ;														; _ puntero (Indice_entidades).
 385  89DD
 386  89DD              ;---------------------------------------------------------------------------------------------------------------
 387  89DD              ;
 388  89DD              ;	11/01/24
 389  89DD              ;
 390  89DD              ;	Álbumes.
 391  89DD
 392  89DD 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 393  89DF              ;														; _variable para almacenar lo posición del puntero_
 394  89DF              ; 														; _de pila, SP.
 395  89DF 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 396  89E1              ;														; La utiliza la rutina [Extrae_foto_registros].
 397  89E1 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 398  89E3
 399  89E3 00 00        Album_de_pintado defw 0
 400  89E5 00 00        Album_de_borrado defw 0
 401  89E7 00 00        Techo_de_pintado defw 0
 402  89E9 00 00        Techo_de_borrado defw 0
 403  89EB
 404  89EB 00 00        Scanlines_album_SP defw 0
 405  89ED
 406  89ED 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 407  89EE              ;
 408  89EE              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 409  89EE              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 410  89EE              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 411  89EE              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 412  89EE              ;																Habilita el borrado/pintado de sprites.
 413  89EE
 414  89EE 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 415  89EF              ;
 416  89EF              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 417  89EF              ;
 418  89EF              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 419  89EF              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 420  89EF              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 421  89EF              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 422  89EF              ;
 423  89EF              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 424  89EF              ;															_ masticados ya generados.
 425  89EF              ;
 426  89EF              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 427  89EF              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 428  89EF              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 429  89EF              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 430  89EF
 431  89EF
 432  89EF              ; Gestión de Disparos.
 433  89EF
 434  89EF              ;;Numero_de_disparotes db 0
 435  89EF              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  89EF              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 437  89EF              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 438  89EF              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 439  89EF              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 440  89EF              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 441  89EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 442  89EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 443  89EF              ;														; _produzca colisión.
 444  89EF              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 445  89EF              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 446  89EF              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 447  89EF              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 448  89EF 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 449  89F2              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 450  89F2              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 451  89F2
 452  89F2              ;---------------------------------------------------------------------------------------------------------------
 453  89F2
 454  89F2              ; Relojes y temporizaciones.
 455  89F2
 456  89F2 00           Contador_de_frames db 0
 457  89F3 00           Contador_de_frames_2 db 0
 458  89F4
 459  89F4              ;Clock_explosion db 4
 460  89F4 14           Clock_Entidades_en_curso db 20
 461  89F5 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 462  89F6              ;														; Repite la oleada de entidades.
 463  89F6              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 464  89F6              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 465  89F6              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 466  89F6
 467  89F6              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 468  89F6              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 469  89F6              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 470  89F6
 471  89F6              ;---------------------------------------------------------------------------------------------------------------
 472  89F6
 473  89F6              ; Gestión de NIVELES.
 474  89F6
 475  89F6 00           Nivel db 0												; Nivel actual del juego.
 476  89F7 00 00        Puntero_indice_NIVELES defw 0
 477  89F9 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 478  89FB              ; 														; _ que definen el NIVEL.
 479  89FB              ; Y todo comienza aquí .....
 480  89FB              ;
 481  89FB              ; 	INICIO  *************************************************************************************************************************************************************************
 482  89FB              ;
 483  89FB              ;	5/1/24
 484  89FB
 485  89FB              START
 486  89FB
 487  89FB 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 488  89FE 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 489  8A00 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 490  8A02 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 491  8A04 F3           	DI
 492  8A05
 493  8A05              ;	ld a,%00000111
 494  8A05              ;	call Cls
 495  8A05 CD 1F 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 496  8A08
 497  8A08              ; INICIALIZACIÓN.
 498  8A08
 499  8A08              ;	Inicializa 1er Nivel.
 500  8A08
 501  8A08 21 6B 89     	ld hl,Indice_de_niveles
 502  8A0B 22 F7 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 503  8A0E CD 45 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 504  8A11              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 505  8A11              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 506  8A11              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 507  8A11
 508  8A11              ;	Provisional, (para desarrollo).
 509  8A11              	;-
 510  8A11              ;	ld hl,Numero_parcial_de_entidades
 511  8A11              ;	ld b,(hl)
 512  8A11              ;	inc b
 513  8A11              ;	dec b
 514  8A11              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 515  8A11
 516  8A11 CD 65 8B     	call Inicia_albumes_de_lineas
 517  8A14
 518  8A14 CD 8A 8C     4 call Inicia_Entidades
 519  8A17
 520  8A17 CD 75 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 521  8A1A              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 522  8A1A              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 523  8A1A              ; (Esto se dá cuando se inicia una nueva oleada).
 524  8A1A
 525  8A1A              ;	ld a,(Ctrl_1)
 526  8A1A              ;	bit 3,a
 527  8A1A              ;	jr nz,5F											 ; Loop
 528  8A1A
 529  8A1A              ; 	INICIA AMADEUS !!!!!
 530  8A1A
 531  8A1A              ;3 call Restore_Amadeus
 532  8A1A              ;	call Inicia_Puntero_objeto
 533  8A1A              ;	call Draw
 534  8A1A
 535  8A1A              ;	call Guarda_movimiento_masticado	;! Provisional
 536  8A1A
 537  8A1A              ;	call Genera_datos_de_impresion
 538  8A1A              ;	call Guarda_datos_de_borrado_Amadeus
 539  8A1A
 540  8A1A              ;	ld de,Amadeus_db
 541  8A1A              ;	call Store_Amadeus
 542  8A1A
 543  8A1A              ; 	INICIA DISPAROS !!!!!
 544  8A1A
 545  8A1A              ;	call Inicia_Puntero_Disparo_Entidades
 546  8A1A              ;	call Inicia_Puntero_Disparo_Amadeus
 547  8A1A
 548  8A1A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 549  8A1A
 550  8A1A              ;5 call Inicia_punteros_de_cajas
 551  8A1A              ;	call Restore_entidad
 552  8A1A
 553  8A1A              ;	ld a,(Ctrl_1)
 554  8A1A              ;	bit 3,a
 555  8A1A              ;	jr z,6F
 556  8A1A
 557  8A1A              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 558  8A1A
 559  8A1A              ;	ld hl,Ctrl_1
 560  8A1A              ;	res 3,(hl)
 561  8A1A              ;	jr Main
 562  8A1A
 563  8A1A              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 564  8A1A
 565  8A1A              6
 566  8A1A
 567  8A1A              ;	call Calcula_numero_de_malotes
 568  8A1A
 569  8A1A              ; Damos por concluida la construcción del FRAME.
 570  8A1A              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 571  8A1A
 572  8A1A 2A EB 89     	ld hl,(Scanlines_album_SP)
 573  8A1D 22 E7 89     	ld (Techo_de_pintado),hl
 574  8A20
 575  8A20 2A E5 89     	ld hl,(Album_de_borrado)
 576  8A23 22 EB 89     	ld (Scanlines_album_SP),hl
 577  8A26
 578  8A26 21 ED 89     	ld hl,Ctrl_3
 579  8A29 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 580  8A2B CB D6        	set 2,(hl)
 581  8A2D
 582  8A2D FB           	ei
 583  8A2E 76           	halt
 584  8A2F
 585  8A2F              ; ------------------------------------
 586  8A2F
 587  8A2F              Main
 588  8A2F              ;
 589  8A2F              ;	11/12/23
 590  8A2F
 591  8A2F              ; Aparece nueva entidad ???
 592  8A2F
 593  8A2F              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 594  8A2F              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 595  8A2F              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 596  8A2F              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 597  8A2F              ;														; _un 2º bloque.
 598  8A2F
 599  8A2F              ;	call Genera_scanlines_masticados_a_borrar
 600  8A2F              ;	call Limpia_Almacen_de_scanlines_masticados
 601  8A2F
 602  8A2F              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 603  8A2F              ; 													 	; _(Scanlines_album_SP).
 604  8A2F
 605  8A2F 3A F4 89     	ld a,(Clock_Entidades_en_curso)
 606  8A32 47           	ld b,a
 607  8A33 3A F2 89     	ld a,(Contador_de_frames)
 608  8A36 B8           	cp b
 609  8A37 20 1E        	jr nz,13F
 610  8A39
 611  8A39              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 612  8A39              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 613  8A39
 614  8A39 3A D6 89     21 ld a,(Numero_parcial_de_entidades)
 615  8A3C 47           	ld b,a
 616  8A3D 3A D7 89     	ld a,(Entidades_en_curso)
 617  8A40 B8           	cp b
 618  8A41 28 14        	jr z,13F
 619  8A43 30 12        	jr nc,13F
 620  8A45
 621  8A45 3C           	inc a
 622  8A46 32 D7 89     	ld (Entidades_en_curso),a
 623  8A49
 624  8A49 FE 02        	cp 2
 625  8A4B F3           	di
 626  8A4C 28 FE        	jr z,$
 627  8A4E FB           	ei
 628  8A4F
 629  8A4F              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 630  8A4F
 631  8A4F 3A F4 89     	ld a,(Clock_Entidades_en_curso)
 632  8A52              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 633  8A52              ;! _ IMPREDECIBLE !!!!
 634  8A52 C6 64        	add 100
 635  8A54 32 F4 89     	ld (Clock_Entidades_en_curso),a
 636  8A57
 637  8A57              ; -------------------------------------------------------------------------------------------------------------
 638  8A57
 639  8A57              ; Habilita disparos.
 640  8A57
 641  8A57              13
 642  8A57
 643  8A57              ;	ld hl,Disparo_Amadeus
 644  8A57              ;	ld de,CLOCK_repone_disparo_Amadeus
 645  8A57              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 646  8A57
 647  8A57              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 648  8A57              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 649  8A57              ;	call Habilita_disparos
 650  8A57
 651  8A57              ; COLISIONES.
 652  8A57
 653  8A57              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 654  8A57
 655  8A57              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 656  8A57              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 657  8A57              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 658  8A57
 659  8A57              ;	xor a
 660  8A57              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 661  8A57
 662  8A57              ;	call Inicia_punteros_de_cajas
 663  8A57              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 664  8A57              ; 														; _ en DRAW.
 665  8A57
 666  8A57              ;	ld a,(Filas)
 667  8A57              ;	and a
 668  8A57              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 669  8A57              ;	call Incrementa_punteros_de_cajas
 670  8A57              ;	jr 12B
 671  8A57
 672  8A57              ; ---------------------------------------------------------------------------------------
 673  8A57
 674  8A57 3A D6 89     10 ld a,(Numero_parcial_de_entidades)
 675  8A5A 47               ld b,a
 676  8A5B A7           	and a
 677  8A5C 20 00        	jr nz,11F
 678  8A5E
 679  8A5E              ;	ld hl,Ctrl_1;
 680  8A5E              ;	bit 4,(hl)
 681  8A5E              ;	jp nz,16F
 682  8A5E
 683  8A5E              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 684  8A5E
 685  8A5E              ;	ld hl,Ctrl_1
 686  8A5E              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 687  8A5E
 688  8A5E              ;	ld a,(Contador_de_frames)
 689  8A5E              ;	inc a
 690  8A5E              ;	ld (Activa_recarga_cajas),a
 691  8A5E
 692  8A5E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 693  8A5E
 694  8A5E 3A D7 89     11 ld a,(Entidades_en_curso)
 695  8A61 A7           	and a
 696  8A62 28 20        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 697  8A64 47           	ld b,a												; No hay entidades que gestionar.
 698  8A65
 699  8A65              ; ( Código que ejecutamos con cada entidad: ).
 700  8A65
 701  8A65              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 702  8A65              ;
 703  8A65              ;	Se produce MOVIMIENTO.
 704  8A65
 705  8A65 C5           15 push bc 												; Nº de entidades en curso.
 706  8A66
 707  8A66 F3           	di
 708  8A67 18 FE        	jr $
 709  8A69 FB           	ei
 710  8A6A
 711  8A6A 21 ED 89     	ld hl,Ctrl_3
 712  8A6D CB D6        	set 2,(hl)
 713  8A6F CD 9E 8A     	call Change
 714  8A72
 715  8A72 CD DE 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 716  8A75
 717  8A75              ; Existe "Entidad_guía" ???.
 718  8A75              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 719  8A75
 720  8A75              ;	ld a,(Ctrl_3)
 721  8A75              ;	bit 1,a
 722  8A75              ;	jr nz,22F
 723  8A75
 724  8A75              ; Almacén de "Movimientos_masticados" lleno ???
 725  8A75              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 726  8A75              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 727  8A75
 728  8A75              ;;	ld a,(Ctrl_3)
 729  8A75              ;;	bit 3,a
 730  8A75              ;;	jr nz,22F
 731  8A75
 732  8A75              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 733  8A75
 734  8A75              ;	ld hl,Ctrl_2
 735  8A75              ;	set 5,(hl)
 736  8A75              ;	ld hl,Ctrl_3
 737  8A75              ;	set 1,(hl)
 738  8A75
 739  8A75              ; Impacto ???
 740  8A75
 741  8A75              ;22 ld a,(Impacto)
 742  8A75              ;	and a
 743  8A75              ;	jr z,8F
 744  8A75
 745  8A75              ; Hay Impacto en esta entidad.
 746  8A75
 747  8A75              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 748  8A75              ;	dec (hl)
 749  8A75              ;	jp nz,17F
 750  8A75
 751  8A75              ;! Velocidad de la animación de la explosión.
 752  8A75
 753  8A75              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 754  8A75              ;														; _,(velocidad de la explosión).
 755  8A75              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 756  8A75
 757  8A75              ;	call Repone_datos_de_borrado
 758  8A75              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 759  8A75
 760  8A75              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 761  8A75
 762  8A75              ;	ld a,(Ctrl_2)
 763  8A75              ;	bit 1,a
 764  8A75              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 765  8A75
 766  8A75              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 767  8A75
 768  8A75              ;	ld a,(CTRL_DESPLZ)
 769  8A75              ;	and a
 770  8A75              ;	jr nz,18F
 771  8A75
 772  8A75              ;	ld hl,Indice_Explosion_2x2-2
 773  8A75              ;	ld (Puntero_DESPLZ_der),hl
 774  8A75              ;	jr 19F
 775  8A75
 776  8A75              ;18 ld hl,Indice_Explosion_2x3-2
 777  8A75              ;	ld (Puntero_DESPLZ_der),hl
 778  8A75
 779  8A75              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 780  8A75              ;	set 1,(hl)
 781  8A75              ;	jr 7F
 782  8A75
 783  8A75              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 784  8A75              ; _con las coordenadas de la entidad almacenada en DRAW.
 785  8A75
 786  8A75              ;8 ld a,(Ctrl_1)
 787  8A75              ;	bit 2,a
 788  8A75              ;	jr z,7F
 789  8A75
 790  8A75              ;	ld hl,(Coordenadas_disparo_certero)
 791  8A75              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 792  8A75              ;														; E contiene la coordenada_X del disparo.
 793  8A75              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 794  8A75              ;														; H FILA, (Coordenada_y de la entidad).
 795  8A75              ;	and a
 796  8A75              ;	sbc hl,de
 797  8A75
 798  8A75              ;	call Determina_resultado_comparativa
 799  8A75
 800  8A75              ;	ld a,b
 801  8A75              ;	and a
 802  8A75              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 803  8A75
 804  8A75              ; ----- ----- -----
 805  8A75
 806  8A75              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 807  8A75              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 808  8A75
 809  8A75              ;	ld hl,Ctrl_1
 810  8A75              ;	res 2,(hl)
 811  8A75
 812  8A75 CD 9D 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 813  8A78
 814  8A78              ;	ld a,(Ctrl_0)
 815  8A78              ;	bit 4,a
 816  8A78              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 817  8A78
 818  8A78              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 819  8A78              ; [[[
 820  8A78              ;	call Detecta_disparo_entidad
 821  8A78              ; ]]]
 822  8A78
 823  8A78 CD F4 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 824  8A7B
 825  8A7B              ;	ld hl,Ctrl_0
 826  8A7B              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 827  8A7B
 828  8A7B CD E4 8C     17 call Store_Restore_cajas
 829  8A7E
 830  8A7E C1           	pop bc
 831  8A7F
 832  8A7F 10 E4        	djnz 15B
 833  8A81
 834  8A81 CD 75 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 835  8A84
 836  8A84              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 837  8A84              ; Hemos gestionado todas las unidades.
 838  8A84              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 839  8A84
 840  8A84              ;	ld hl,Ctrl_1
 841  8A84              ;	res 2,(hl)
 842  8A84
 843  8A84
 844  8A84              16
 845  8A84
 846  8A84 2A EB 89     	ld hl,(Scanlines_album_SP)
 847  8A87 22 E7 89     	ld (Techo_de_pintado),hl
 848  8A8A
 849  8A8A 2A E5 89     	ld hl,(Album_de_borrado)
 850  8A8D 22 EB 89     	ld (Scanlines_album_SP),hl
 851  8A90
 852  8A90 21 ED 89     	ld hl,Ctrl_3
 853  8A93 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 854  8A95
 855  8A95 AF           	xor a
 856  8A96 D3 FE        	out ($fe),a
 857  8A98 76           	halt
 858  8A99
 859  8A99              ; ----------------------------------------
 860  8A99
 861  8A99              ;	ld a,(Ctrl_1) 										; Existe Loop?
 862  8A99              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 863  8A99 CA 2F 8A     	jp z,Main
 864  8A9C
 865  8A9C              ; RECARGA DE NUEVA OLEADA.
 866  8A9C
 867  8A9C              ;	ld a,(Contador_de_frames)
 868  8A9C              ;	ld b,a
 869  8A9C              ;	ld a,(Activa_recarga_cajas)
 870  8A9C              ;	cp b
 871  8A9C              ;	jr z,20F
 872  8A9C
 873  8A9C              ;	ld hl,Ctrl_1
 874  8A9C              ;	set 4,(hl)
 875  8A9C              ;	jp Main
 876  8A9C
 877  8A9C              ;20 ld hl,Ctrl_1
 878  8A9C              ;	res 4,(hl)
 879  8A9C
 880  8A9C              ;	ld a,(Contador_de_frames)
 881  8A9C
 882  8A9C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 883  8A9C              ;! _ IMPREDECIBLE !!!!
 884  8A9C
 885  8A9C              ;	add 10
 886  8A9C              ;	ld (Clock_Entidades_en_curso),a
 887  8A9C
 888  8A9C              ;	jp 4B
 889  8A9C
 890  8A9C C9           	ret
 891  8A9D
 892  8A9D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 893  8A9D              ;
 894  8A9D              ;	16/11/23
 895  8A9D
 896  8A9D              ;;Gestiona_Amadeus
 897  8A9D
 898  8A9D              ;! Activa/desactiva impacto con Amadeus.
 899  8A9D
 900  8A9D              ;	ld a,(Impacto)
 901  8A9D              ;	and a
 902  8A9D              ;	jr nz,2F
 903  8A9D
 904  8A9D              ;;	call Mov_Amadeus
 905  8A9D
 906  8A9D              ;;2 ld a,(Ctrl_0)
 907  8A9D              ;;	bit 4,a
 908  8A9D              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 909  8A9D
 910  8A9D              ;;	call Guarda_foto_entidad_a_pintar
 911  8A9D              ;;	call Guarda_datos_de_borrado_Amadeus
 912  8A9D
 913  8A9D              ;;1 ld hl,Ctrl_0
 914  8A9D              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 915  8A9D
 916  8A9D              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 917  8A9D
 918  8A9D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 919  8A9D
 920  8A9D              ;	call Calcula_numero_de_disparotes
 921  8A9D
 922  8A9D              ;;	ret
 923  8A9D
 924  8A9D              ; -----------------------------
 925  8A9D              ;
 926  8A9D              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 927  8A9D              ;
 928  8A9D              ;	INPUTS: B a de estar a "0".
 929  8A9D
 930  8A9D              ;Prepara_Borra_sprites
 931  8A9D
 932  8A9D              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 933  8A9D              ;	ld a,l
 934  8A9D              ;	ret z
 935  8A9D
 936  8A9D              ;	srl a
 937  8A9D
 938  8A9D              ;2 sub 16
 939  8A9D              ;	jr z,1F
 940  8A9D              ;	inc b
 941  8A9D              ;	jr 2B
 942  8A9D
 943  8A9D              ;1 inc b
 944  8A9D
 945  8A9D              ;	exx
 946  8A9D              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 947  8A9D              ;	exx
 948  8A9D
 949  8A9D              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 950  8A9D              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 951  8A9D
 952  8A9D              ;	ret
 953  8A9D
 954  8A9D              ; --------------------------------------------------------------------------------------------------------------
 955  8A9D              ;
 956  8A9D              ;	15/12/23
 957  8A9D
 958  8A9D              Mov_obj
 959  8A9D
 960  8A9D              ;	ld a,(Ctrl_2)
 961  8A9D              ;	bit 1,a
 962  8A9D              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 963  8A9D
 964  8A9D              ; Explosión:
 965  8A9D
 966  8A9D              ;	ld a,(Frames_explosion)
 967  8A9D              ;	and a
 968  8A9D              ;	jr nz,4F
 969  8A9D
 970  8A9D              ;!  Una alimaña menos!!!!!!!!!1
 971  8A9D
 972  8A9D              ; Se trataba de una Entidad_guía ???
 973  8A9D
 974  8A9D              ;	ld a,(Ctrl_2)
 975  8A9D              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 976  8A9D              ;	jr z,5F
 977  8A9D
 978  8A9D              ;	ld hl,Ctrl_3
 979  8A9D              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 980  8A9D
 981  8A9D              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 982  8A9D              ;!! _generado puede ser distinto, (aletoriedad).
 983  8A9D
 984  8A9D              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 985  8A9D              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 986  8A9D              ;	dec (hl)
 987  8A9D              ;	ld hl,Entidades_en_curso
 988  8A9D              ;	dec (hl)
 989  8A9D              ;	ld hl,Numero_de_entidades
 990  8A9D              ;	dec (hl)
 991  8A9D              ;	jr 3F
 992  8A9D
 993  8A9D              ; -----
 994  8A9D
 995  8A9D              ;	`Movemos´ la explosión.
 996  8A9D
 997  8A9D              ;4 ld hl,(Puntero_DESPLZ_der)
 998  8A9D              ;	inc hl
 999  8A9D              ;	inc hl
1000  8A9D              ;	call Extrae_address
1001  8A9D              ;;	ld (Puntero_objeto),hl
1002  8A9D
1003  8A9D              ;;	ld hl,Frames_explosion
1004  8A9D              ;;	dec (hl)
1005  8A9D
1006  8A9D              ;;	ld hl,Ctrl_0
1007  8A9D              ;;	set 4,(hl);;
1008  8A9D
1009  8A9D              ;;	jr 3F
1010  8A9D
1011  8A9D              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1012  8A9D
1013  8A9D              ;2 xor a
1014  8A9D              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1015  8A9D
1016  8A9D              ; Movemos Entidades malignas.
1017  8A9D              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1018  8A9D
1019  8A9D              ;	ld a,(Ctrl_2)
1020  8A9D              ;	bit 5,a
1021  8A9D              ;	jr nz,8F
1022  8A9D
1023  8A9D              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1024  8A9D              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1025  8A9D              ;	jr 7F
1026  8A9D
1027  8A9D              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1028  8A9D
1029  8A9D              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1030  8A9D              ;	bit 4,a
1031  8A9D              ;	ret z
1032  8A9D
1033  8A9D              ; Ha habido desplazamiento de la entidad maligna.
1034  8A9D              ; Ha llegado a zona de AMADEUS ???
1035  8A9D
1036  8A9D              ;7 ld a,(Coordenada_y)
1037  8A9D              ;	cp $14
1038  8A9D              ;	jr c,1F
1039  8A9D
1040  8A9D              ; ---------
1041  8A9D
1042  8A9D              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1043  8A9D              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1044  8A9D
1045  8A9D              ;	di
1046  8A9D              ;	call Genera_coordenadas_X
1047  8A9D              ;	call Compara_coordenadas_X
1048  8A9D              ;	ei
1049  8A9D
1050  8A9D              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1051  8A9D
1052  8A9D              ; ---------
1053  8A9D
1054  8A9D              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1055  8A9D              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1056  8A9D              ;	call Limpia_Variables_de_borrado
1057  8A9D
1058  8A9D C9           3 ret
1059  8A9E
1060  8A9E              ; --------------------------------------------------------------------------------------------------------------
1061  8A9E              ;
1062  8A9E              ;	29/1/23
1063  8A9E
1064  8A9E              ;Mov_Amadeus
1065  8A9E
1066  8A9E              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1067  8A9E
1068  8A9E              ;	call Mov_right
1069  8A9E
1070  8A9E              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1071  8A9E              ;	bit 4,a
1072  8A9E              ;	ret z
1073  8A9E
1074  8A9E              ; ---------
1075  8A9E
1076  8A9E              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1077  8A9E              ;	call Repone_datos_de_borrado_Amadeus
1078  8A9E              ;	call Limpia_Variables_de_borrado
1079  8A9E
1080  8A9E              ;	ret
1081  8A9E
1082  8A9E              ; --------------------------------------------------------------------------------------------------------------
1083  8A9E              ;
1084  8A9E              ;	17/3/24
1085  8A9E
1086  8A9E 2A E3 89     Change ld hl,(Album_de_pintado)
1087  8AA1 ED 5B E5 89  	ld de,(Album_de_borrado)
1088  8AA5 EB           	ex de,hl
1089  8AA6 22 E3 89     	ld (Album_de_pintado),hl
1090  8AA9 22 EB 89     	ld (Scanlines_album_SP),hl
1091  8AAC ED 53 E5 89  	ld (Album_de_borrado),de
1092  8AB0
1093  8AB0 2A E7 89     	ld hl,(Techo_de_pintado)
1094  8AB3 ED 5B E9 89  	ld de,(Techo_de_borrado)
1095  8AB7
1096  8AB7 7D           	ld a,l
1097  8AB8 93           	sub e
1098  8AB9 47           	ld b,a
1099  8ABA 2D           	dec l
1100  8ABB
1101  8ABB AF           1 xor a
1102  8ABC 77           	ld (hl),a
1103  8ABD 2D           	dec l
1104  8ABE 10 FB        	djnz 1B
1105  8AC0
1106  8AC0 2C           	inc l
1107  8AC1
1108  8AC1 22 E9 89     	ld (Techo_de_borrado),hl
1109  8AC4
1110  8AC4 C9           	ret
1111  8AC5
1112  8AC5              ; -----------------------------------------------------------------------------------
1113  8AC5              ;
1114  8AC5              ;	20/01/24
1115  8AC5              ;
1116  8AC5              ;
1117  8AC5
1118  8AC5              Construye_movimientos_masticados_entidad
1119  8AC5
1120  8AC5 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1121  8AC8 E5           	push hl
1122  8AC9 CD 09 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1123  8ACC              ;															; _ el (Contador_de_mov_masticados).
1124  8ACC CD A9 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1125  8ACF              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1126  8ACF              ;	call Recompone_posicion_inicio
1127  8ACF
1128  8ACF CD 3B 8E     1 call Draw
1129  8AD2 CD EE 8A     	call Guarda_movimiento_masticado
1130  8AD5
1131  8AD5 CD 21 98     	call Movimiento
1132  8AD8
1133  8AD8 3A ED 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1134  8ADB CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1135  8ADD 28 F0        	jr z,1B
1136  8ADF
1137  8ADF              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1138  8ADF              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1139  8ADF
1140  8ADF E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1141  8AE0 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1142  8AE3
1143  8AE3              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1144  8AE3
1145  8AE3 CD 85 99     	call Situa_en_contador_general_de_mov_masticados
1146  8AE6
1147  8AE6              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1148  8AE6              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1149  8AE6
1150  8AE6 ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1151  8AEA 71           	ld (hl),c
1152  8AEB 23           	inc hl
1153  8AEC 70           	ld (hl),b
1154  8AED
1155  8AED C9           	ret
1156  8AEE
1157  8AEE              ; -----------------------------------------------------------------------------------
1158  8AEE              ;
1159  8AEE              ;	28/12/23
1160  8AEE              ;
1161  8AEE              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1162  8AEE              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1163  8AEE
1164  8AEE              Guarda_movimiento_masticado
1165  8AEE
1166  8AEE ED 73 DD 89  	ld (Stack),sp
1167  8AF2 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1168  8AF6
1169  8AF6              ;	push hl
1170  8AF6 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1171  8AF8 FD E5            push iy 												; Pushea Puntero_objeto.
1172  8AFA
1173  8AFA ED 7B DD 89      ld sp,(Stack)
1174  8AFE
1175  8AFE 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1176  8B01 23           	inc hl
1177  8B02 22 AB 89     	ld (Contador_de_mov_masticados),hl
1178  8B05
1179  8B05 CD 09 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1180  8B08              ;															; _ el (Contador_de_mov_masticados).
1181  8B08 C9               ret
1182  8B09
1183  8B09              ; --------------------------------------------------------------------------------------------------------------
1184  8B09              ;
1185  8B09              ;	12/1/24
1186  8B09              ;
1187  8B09              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1188  8B09
1189  8B09              Actualiza_Puntero_de_almacen_de_mov_masticados
1190  8B09
1191  8B09 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1192  8B0C 01 04 00     	ld bc,4
1193  8B0F A7           	and a
1194  8B10 ED 4A        	adc hl,bc
1195  8B12 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1196  8B15 C9           	ret
1197  8B16
1198  8B16              ; --------------------------------------------------------------------------------------------------------------
1199  8B16              ;
1200  8B16              ;	09/03/24
1201  8B16              ;
1202  8B16              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1203  8B16              ;
1204  8B16              ;	IX contiene el puntero de impresión.
1205  8B16              ;	DE contiene (Puntero_objeto).
1206  8B16
1207  8B16
1208  8B16 ED 73 DD 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1209  8B1A ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1210  8B1E
1211  8B1E D1           	pop de 															; DE contiene Puntero_objeto
1212  8B1F DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1213  8B21
1214  8B21 ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1215  8B25
1216  8B25 ED 7B DD 89  	ld sp,(Stack)
1217  8B29
1218  8B29 C9           	ret
1219  8B2A
1220  8B2A              ; --------------------------------------------------------------------------------------------------------------
1221  8B2A              ;
1222  8B2A              ;	28/12/23
1223  8B2A              ;
1224  8B2A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1225  8B2A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1226  8B2A
1227  8B2A              Guarda_foto_entidad_a_pintar
1228  8B2A
1229  8B2A 3A AD 89     	ld a,(Ctrl_0)
1230  8B2D CB 77        	bit 6,a
1231  8B2F 28 04        	jr z,5F
1232  8B31
1233  8B31              ;	Guarda la foto de Amadeus.
1234  8B31
1235  8B31              ;	call Draw
1236  8B31              ;	call Guarda_movimiento_masticado	;! Provisional
1237  8B31 CD 0C 9A     	call Genera_datos_de_impresion
1238  8B34 C9           	ret
1239  8B35
1240  8B35              ; ENTIDADES!
1241  8B35              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1242  8B35
1243  8B35 3A ED 89     5 ld a,(Ctrl_3)
1244  8B38 CB 5F        	bit 3,a
1245  8B3A 28 01        	jr z,1F
1246  8B3C
1247  8B3C              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1248  8B3C
1249  8B3C              4
1250  8B3C              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1251  8B3C C9           	ret
1252  8B3D
1253  8B3D              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1254  8B3D
1255  8B3D 3A ED 89     1 ld a,(Ctrl_3)
1256  8B40 CB 57        	bit 2,a
1257  8B42 20 10        	jr nz,6F
1258  8B44
1259  8B44              ; Entidad guía o fantasma ???
1260  8B44
1261  8B44 3A B2 89     	ld a,(Ctrl_2)
1262  8B47 CB 6F        	bit 5,a
1263  8B49 20 10        	jr nz,3F
1264  8B4B
1265  8B4B              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1266  8B4B
1267  8B4B 18 EF        	jr 4B
1268  8B4D
1269  8B4D              ; ENTIDAD_GUÍA:
1270  8B4D              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1271  8B4D              ; _guardando "movimientos_masticados".
1272  8B4D
1273  8B4D 3A ED 89     2 ld a,(Ctrl_3)
1274  8B50 CB 57        	bit 2,a
1275  8B52 28 07        	jr z,3F
1276  8B54
1277  8B54              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1278  8B54              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1279  8B54
1280  8B54 CB 97        6 res 2,a
1281  8B56 CB DF        	set 3,a
1282  8B58 32 ED 89     	ld (Ctrl_3),a
1283  8B5B
1284  8B5B
1285  8B5B              ;	Esto sólo lo ejecuta una entidad guía.
1286  8B5B
1287  8B5B CD 3B 8E     3 	call Draw
1288  8B5E CD EE 8A     	call Guarda_movimiento_masticado
1289  8B61 CD 0C 9A     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1290  8B64
1291  8B64              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1292  8B64              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1293  8B64
1294  8B64              ;	call Convierte_guia_en_fantasma
1295  8B64 C9           	ret
1296  8B65
1297  8B65              ; ---------------------------------------------------------------------------------------------------------------------
1298  8B65              ;
1299  8B65              ;	13/03/24
1300  8B65              ;
1301  8B65
1302  8B65              Inicia_albumes_de_lineas
1303  8B65
1304  8B65 21 00 80     	ld hl,Scanlines_album
1305  8B68 22 E3 89     	ld (Album_de_pintado),hl
1306  8B6B 22 EB 89     	ld (Scanlines_album_SP),hl
1307  8B6E
1308  8B6E 21 00 82     	ld hl,Scanlines_album_2
1309  8B71 22 E5 89     	ld (Album_de_borrado),hl
1310  8B74 C9           	ret
1311  8B75
1312  8B75              ; ---------------------------------------------------------------------------------------------------------------------
1313  8B75              ;
1314  8B75              ; 8/1/23
1315  8B75              ;
1316  8B75              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1317  8B75              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1318  8B75              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1319  8B75
1320  8B75              ; Destruye HL y DE !!!!!
1321  8B75
1322  8B75              Inicia_punteros_de_cajas
1323  8B75
1324  8B75 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1325  8B78 CD A3 8B         call Extrae_address
1326  8B7B 22 CF 89         ld (Puntero_store_caja),hl
1327  8B7E 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1328  8B81 22 D3 89     	ld (Indice_restore_caja),hl
1329  8B84 CD A3 8B     	call Extrae_address
1330  8B87 22 D1 89     	ld (Puntero_restore_caja),hl
1331  8B8A C9               ret
1332  8B8B
1333  8B8B              ; *************************************************************************************************************************************************************
1334  8B8B              ;
1335  8B8B              ; 8/1/23
1336  8B8B              ;
1337  8B8B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1338  8B8B
1339  8B8B              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1340  8B8B              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1341  8B8B              ;	ret
1342  8B8B              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1343  8B8B              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1344  8B8B              ;	ret
1345  8B8B
1346  8B8B              ; -------------------------------------------------------------------------------------------------------------
1347  8B8B              ;
1348  8B8B              ; 21/9/23
1349  8B8B              ;
1350  8B8B
1351  8B8B              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1352  8B8B
1353  8B8B              ;;Limpia_album_Amadeus
1354  8B8B              ;
1355  8B8B              ;;	ld hl,Scanlines_album_Amadeus
1356  8B8B              ;;	ld a,(hl)
1357  8B8B              ;;	and a
1358  8B8B              ;;	ret z
1359  8B8B
1360  8B8B              ;;	ld hl,Scanlines_album_Amadeus;
1361  8B8B              ;;	ld de,Scanlines_album_Amadeus+1
1362  8B8B              ;;	ld bc,11
1363  8B8B              ;;	xor a
1364  8B8B              ;;	ld (hl),a
1365  8B8B              ;;	ldir
1366  8B8B
1367  8B8B              ;;	ld hl,Scanlines_album_Amadeus
1368  8B8B              ;;	ld (End_Snapshot_Amadeus),hl
1369  8B8B
1370  8B8B              ;;	ret
1371  8B8B
1372  8B8B              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1373  8B8B              ;	ld de,Variables_de_borrado+1
1374  8B8B              ;	ld bc,5
1375  8B8B              ;	xor a
1376  8B8B              ;	ld (hl),a
1377  8B8B              ;	ldir
1378  8B8B              ;	ret
1379  8B8B
1380  8B8B              ; -------------------------------------------------------------------------------------------------------------
1381  8B8B              ;
1382  8B8B              ; 	21/02/24
1383  8B8B              ;
1384  8B8B              ;	MODIFICA: AF,HL,BC,DE
1385  8B8B              ;
1386  8B8B              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1387  8B8B              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1388  8B8B
1389  8B8B              Calcula_numero_de_malotes
1390  8B8B
1391  8B8B 21 00 80     	ld hl,Scanlines_album
1392  8B8E EB           	ex de,hl
1393  8B8F 2A EB 89     	ld hl,(Scanlines_album_SP)
1394  8B92
1395  8B92 06 00        	ld b,0
1396  8B94 7D           	ld a,l
1397  8B95 93           	sub e
1398  8B96 28 07        	jr z,1F
1399  8B98
1400  8B98              ; Nº de malotes no es "0".
1401  8B98
1402  8B98 D6 06        2 sub 6
1403  8B9A 04           	inc b
1404  8B9B A7           	and a
1405  8B9C 20 FA        	jr nz,2B
1406  8B9E 78           	ld a,b
1407  8B9F
1408  8B9F 32 D8 89     1 ld (Numero_de_malotes),a
1409  8BA2 C9           	ret
1410  8BA3
1411  8BA3              ; -------------------------------------------------------------------------------------------------------------
1412  8BA3              ;
1413  8BA3              ; 8/9/23
1414  8BA3              ;
1415  8BA3
1416  8BA3              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1417  8BA3              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1418  8BA3
1419  8BA3              ;Calcula_malotes_Amadeus
1420  8BA3
1421  8BA3              ;	ld hl,Scanlines_album_Amadeus
1422  8BA3              ;	ex de,hl
1423  8BA3              ;	ld hl,(End_Snapshot_Amadeus)
1424  8BA3
1425  8BA3              ;	ld a,h
1426  8BA3              ;	and a
1427  8BA3              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1428  8BA3
1429  8BA3              ;	ld b,0
1430  8BA3              ;	ld a,l
1431  8BA3              ;	sub e
1432  8BA3              ;	jr z,1F
1433  8BA3
1434  8BA3              ; Nº de malotes no es "0".
1435  8BA3
1436  8BA3              ;2 sub 6
1437  8BA3              ;	inc b
1438  8BA3              ;	and a
1439  8BA3              ;	jr nz,2B
1440  8BA3              ;	ld a,b
1441  8BA3
1442  8BA3              ;1 ld (Numero_de_malotes),a
1443  8BA3              ;	ret
1444  8BA3
1445  8BA3              ; -------------------------------------------------------------------------------------------------------------
1446  8BA3              ;
1447  8BA3              ; 28/2/23
1448  8BA3              ;
1449  8BA3
1450  8BA3              ;;Calcula_numero_de_disparotes
1451  8BA3
1452  8BA3              ;	ld hl,Scanlines_album_disparos
1453  8BA3              ;	ex de,hl
1454  8BA3              ;	ld hl,(End_Snapshot_disparos)
1455  8BA3
1456  8BA3              ;	ld b,0
1457  8BA3              ;	ld a,l
1458  8BA3              ;	sub e
1459  8BA3              ;	jr z,1F
1460  8BA3
1461  8BA3              ; Nº de malotes no es "0".
1462  8BA3
1463  8BA3              ;2 sub 6
1464  8BA3              ;	inc b
1465  8BA3              ;	and a
1466  8BA3              ;	jr nz,2B
1467  8BA3              ;	ld a,b
1468  8BA3
1469  8BA3              ;1 ld (Numero_de_disparotes),a
1470  8BA3              ;	ret
1471  8BA3
1472  8BA3              ; *************************************************************************************************************************************************************
1473  8BA3              ;
1474  8BA3              ; 20/10/22
1475  8BA3              ;
1476  8BA3              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1477  8BA3              ;
1478  8BA3              ; Destruye el puntero y DE !!!!!
1479  8BA3
1480  8BA3 5E           Extrae_address ld e,(hl)
1481  8BA4 23           	inc hl
1482  8BA5 56           	ld d,(hl)
1483  8BA6 2B           	dec hl
1484  8BA7 EB           	ex de,hl
1485  8BA8 C9           	ret
1486  8BA9
1487  8BA9              ; *************************************************************************************************************************************************************
1488  8BA9              ;
1489  8BA9              ;	20/1/24
1490  8BA9              ;
1491  8BA9              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1492  8BA9              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1493  8BA9              ;
1494  8BA9              ;   Destruye HL y BC !!!!!,
1495  8BA9              ;
1496  8BA9              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1497  8BA9              ;					"0" ..... Izquierda.
1498  8BA9
1499  8BA9              Inicia_Puntero_objeto
1500  8BA9
1501  8BA9 3A 9F 89     	ld a,(Cuad_objeto)
1502  8BAC E6 01        	and 1
1503  8BAE F5           	push af
1504  8BAF CC CB 8B     	call z,Inicia_puntero_objeto_izq
1505  8BB2 F1           	pop af
1506  8BB3 C8           	ret z
1507  8BB4 CD B8 8B     	call Inicia_puntero_objeto_der
1508  8BB7 C9           	ret
1509  8BB8
1510  8BB8              ; Arrancamos desde la parte izquierda de la pantalla.
1511  8BB8              ; Iniciamos (Indice_Sprite_der).
1512  8BB8
1513  8BB8 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1514  8BBB 22 99 89     	ld (Puntero_DESPLZ_der),hl
1515  8BBE CD A3 8B     	call Extrae_address
1516  8BC1 22 8F 89     	ld (Puntero_objeto),hl
1517  8BC4
1518  8BC4 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1519  8BC7 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1520  8BCA C9           	ret
1521  8BCB
1522  8BCB              ; Arrancamos desde la parte derecha de la pantalla.
1523  8BCB              ; Iniciamos (Indice_Sprite_izq).
1524  8BCB
1525  8BCB 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1526  8BCE 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1527  8BD1 CD A3 8B     	call Extrae_address
1528  8BD4 22 8F 89     	ld (Puntero_objeto),hl
1529  8BD7
1530  8BD7 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1531  8BDA 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1532  8BDD C9           	ret
1533  8BDE
1534  8BDE              ; **************************************************************************************************
1535  8BDE              ;
1536  8BDE              ;	31/01/24
1537  8BDE              ;
1538  8BDE              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1539  8BDE
1540  8BDE              Restore_entidad
1541  8BDE
1542  8BDE 2A CF 89     	ld hl,(Puntero_store_caja)
1543  8BE1 11 8A 89     	ld de,Bandeja_DRAW
1544  8BE4 7E           	ld a,(hl)
1545  8BE5 12           	ld (de),a
1546  8BE6 23           	inc hl 											; (Tipo).
1547  8BE7
1548  8BE7 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1549  8BEA 01 02 00     	ld bc,2
1550  8BED ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1551  8BEF
1552  8BEF 13           	inc de
1553  8BF0 7E           	ld a,(hl)
1554  8BF1 12           	ld (de),a 										; Transferimos (Attr).
1555  8BF2 23           	inc hl
1556  8BF3
1557  8BF3 11 A0 89     	ld de,Impacto
1558  8BF6
1559  8BF6 7E           	ld a,(hl)
1560  8BF7 12           	ld (de),a 										; Transferimos (Impacto).
1561  8BF8 23           	inc hl
1562  8BF9
1563  8BF9 13           	inc de
1564  8BFA
1565  8BFA 01 06 00     	ld bc,6
1566  8BFD ED B0        	ldir
1567  8BFF
1568  8BFF 01 07 00     	ld bc,7
1569  8C02 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1570  8C04              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1571  8C04 11 B2 89     	ld de,Ctrl_2
1572  8C07
1573  8C07 7E           	ld a,(hl)
1574  8C08 12           	ld (de),a 										; Transferimos (Ctrl_2).
1575  8C09
1576  8C09 C9           	ret
1577  8C0A
1578  8C0A              ; **************************************************************************************************
1579  8C0A              ;
1580  8C0A              ;	08/05/23
1581  8C0A              ;
1582  8C0A              ;	Incrementamos los dos punteros de entidades. (+1).
1583  8C0A
1584  8C0A              Incrementa_punteros_de_cajas
1585  8C0A
1586  8C0A 2A D1 89     	ld hl,(Puntero_restore_caja)
1587  8C0D 22 CF 89     	ld (Puntero_store_caja),hl
1588  8C10 2A D3 89     	ld hl,(Indice_restore_caja)
1589  8C13 23           	inc hl
1590  8C14 23           	inc hl
1591  8C15 22 D3 89     	ld (Indice_restore_caja),hl
1592  8C18 CD A3 8B         call Extrae_address
1593  8C1B 22 D1 89         ld (Puntero_restore_caja),hl
1594  8C1E C9               ret
1595  8C1F
1596  8C1F              ; **************************************************************************************************
1597  8C1F              ;
1598  8C1F              ;	21/12/23
1599  8C1F              ;
1600  8C1F              ;	Restore_Amadeus
1601  8C1F              ;
1602  8C1F              ;	Cargamos en DRAW los parámetros de Amadeus.
1603  8C1F              ;
1604  8C1F
1605  8C1F              ;Restore_Amadeus	push hl
1606  8C1F              ;	push de
1607  8C1F              ; 	push bc
1608  8C1F              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1609  8C1F              ;	ld de,Bandeja_DRAW
1610  8C1F              ;	ld bc,42
1611  8C1F              ;	ldir
1612  8C1F              ;	pop bc
1613  8C1F              ;	pop de
1614  8C1F              ;	pop hl
1615  8C1F              ;	ret
1616  8C1F
1617  8C1F              ; *************************************************************************************************************************************************************
1618  8C1F              ;
1619  8C1F              ;	21/12/23
1620  8C1F              ;
1621  8C1F              ;	Store_Amadeus
1622  8C1F              ;
1623  8C1F              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1624  8C1F              ;
1625  8C1F              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1626  8C1F              ;
1627  8C1F              ;	DESTRUYE: HL y BC y DE.
1628  8C1F
1629  8C1F              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1630  8C1F              ;	ld bc,42
1631  8C1F              ;	ldir
1632  8C1F              ;	ret
1633  8C1F
1634  8C1F              ; -----------------------------------------------------------
1635  8C1F              ;
1636  8C1F              ;	21/12/23
1637  8C1F              ;
1638  8C1F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1639  8C1F              ;
1640  8C1F              ;	Destruye: HL,BC,DE,A
1641  8C1F
1642  8C1F              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1643  8C1F              ;	ld bc,41
1644  8C1F              ;	xor a
1645  8C1F              ;	ld (hl),a;
1646  8C1F              ;	ld de,Bandeja_DRAW+1
1647  8C1F              ;	ldir
1648  8C1F              ;	ret
1649  8C1F
1650  8C1F              ; -----------------------------------------------------------
1651  8C1F
1652  8C1F              ; Teclado.
1653  8C1F
1654  8C1F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1655  8C21 DB FE        	in a,($fe)
1656  8C23 E6 01        	and $01
1657  8C25 28 02        	jr z,1f
1658  8C27 18 F6        	jr Pulsa_ENTER
1659  8C29 C9           1 ret
1660  8C2A
1661  8C2A              ; **************************************************************************************************
1662  8C2A              ;
1663  8C2A              ; Temporización.
1664  8C2A
1665  8C2A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1666  8C2A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1667  8C2A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1668  8C2A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1669  8C2A
1670  8C2A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1671  8C2A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1672  8C2A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1673  8C2A
1674  8C2A              ; A partir de $4f61 no hace falta DELAY.
1675  8C2A
1676  8C2A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1677  8C2A
1678  8C2A 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1679  8C2D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1680  8C2E 78           	LD A,B
1681  8C2F A7           	AND A
1682  8C30 20 FB        	JR NZ,wait
1683  8C32 C9           	RET
1684  8C33
1685  8C33              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1686  8C33              ;
1687  8C33              ;	5/3/23
1688  8C33              ;
1689  8C33              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1690  8C33
1691  8C33              ;Movimiento_Amadeus
1692  8C33
1693  8C33              ; Disparo.
1694  8C33
1695  8C33              ;	ld a,(Disparo_Amadeus)
1696  8C33              ;	and a
1697  8C33              ;	jr nz,1F
1698  8C33              ;	jr 2F
1699  8C33
1700  8C33              ;1 ld a,$f7													; "5" para disparar.
1701  8C33              ;	in a,($fe)
1702  8C33              ;	and $10
1703  8C33
1704  8C33              ;	push af
1705  8C33              ;	call z,Genera_disparo
1706  8C33              ;	pop af
1707  8C33              ;	jr nz,2F
1708  8C33
1709  8C33              ;	ld a,(Disparo_Amadeus)
1710  8C33              ;	xor 1
1711  8C33              ;	ld (Disparo_Amadeus),a
1712  8C33              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1713  8C33              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1714  8C33              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1715  8C33              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1716  8C33
1717  8C33              ;	ld a,$f7
1718  8C33              ;	in a,($fe)
1719  8C33              ;	and $01
1720  8C33              ;	ret z
1721  8C33
1722  8C33              ;	ld a,$f7
1723  8C33              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1724  8C33              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1725  8C33              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1726  8C33              ;	ret
1727  8C33
1728  8C33              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1729  8C33              ;
1730  8C33              ;	Rutina provisional para que los malotes cagen balas.
1731  8C33
1732  8C33              ;Detecta_disparo_entidad
1733  8C33
1734  8C33              ;	ld a,(Disparo_entidad)
1735  8C33              ;	and a
1736  8C33              ;	ret z
1737  8C33
1738  8C33              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1739  8C33
1740  8C33              ;	ld a,$7f				; Detecta SPACE.
1741  8C33              ;	in a,($fe)
1742  8C33              ;	and 1
1743  8C33              ;	ret nz
1744  8C33
1745  8C33              ;	call Genera_disparo
1746  8C33              ;	ret
1747  8C33
1748  8C33              ; ----------------------------------------------------------------------
1749  8C33              ;
1750  8C33              ;	8/9/23
1751  8C33
1752  8C33              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1753  8C33              ; 	dec hl
1754  8C33              ;	ld a,(hl)
1755  8C33              ;	and a
1756  8C33              ;	ret z										; Salimos si es álbum está vacío.
1757  8C33
1758  8C33              ;	ld de,Variables_de_borrado+5
1759  8C33              ;	ld bc,6
1760  8C33              ;	lddr
1761  8C33              ;	ret
1762  8C33
1763  8C33              ; ----------------------------------------------------------------------
1764  8C33              ;
1765  8C33              ;	9/9/23
1766  8C33
1767  8C33              ;Repone_datos_de_borrado_Amadeus
1768  8C33
1769  8C33              ;	ld hl,Variables_de_borrado
1770  8C33              ;	ld de,Scanlines_album_Amadeus
1771  8C33              ;	ld bc,6
1772  8C33              ;	ldir
1773  8C33
1774  8C33              ;	ex de,hl
1775  8C33              ;	ld (End_Snapshot_Amadeus),hl
1776  8C33
1777  8C33              ;	ret
1778  8C33
1779  8C33              ; ----------------------------------------------------------------------
1780  8C33              ;
1781  8C33              ;	27/10/23
1782  8C33              ;
1783  8C33
1784  8C33              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1785  8C33              ;	_ Scanlines_album correspondiente.
1786  8C33
1787  8C33              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1788  8C33              ;	_ durante el proceso de escritura.
1789  8C33
1790  8C33              ;Repone_datos_de_borrado
1791  8C33
1792  8C33              ;	ld de,(Scanlines_album_SP)
1793  8C33              ;	ld hl,Variables_de_borrado
1794  8C33              ;	ld bc,6
1795  8C33              ;	ldir
1796  8C33
1797  8C33              ;	ex de,hl
1798  8C33              ;	ld (Scanlines_album_SP),hl
1799  8C33
1800  8C33              ;	ret
1801  8C33
1802  8C33              ; --------------------------------------------------------------------------------------
1803  8C33
1804  8C33              ;Pinta_Amadeus
1805  8C33
1806  8C33              ;   	call Calcula_malotes_Amadeus
1807  8C33              ;	call Extrae_foto_Amadeus
1808  8C33              ;	call Limpia_album_Amadeus
1809  8C33
1810  8C33              ;	ret
1811  8C33
1812  8C33              ; -----------------------------------------------------------------------------------
1813  8C33              ;
1814  8C33              ;	10/12/23
1815  8C33              ;
1816  8C33              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1817  8C33
1818  8C33              Actualiza_relojes
1819  8C33
1820  8C33 3A ED 89     	ld a,(Ctrl_3)
1821  8C36 CB 47        	bit 0,a
1822  8C38 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1823  8C39
1824  8C39 21 F2 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1825  8C3C 34           	inc (hl)
1826  8C3D
1827  8C3D 34           	inc (hl)
1828  8C3E 35           	dec (hl)
1829  8C3F C0           	ret nz
1830  8C40
1831  8C40 21 F3 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1832  8C43 34           	inc (hl)
1833  8C44 C9           	ret
1834  8C45
1835  8C45              ; ---------------------------------------------------------------
1836  8C45
1837  8C45              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8C45              ;---------------------------------------------------------------------------------------------------------------
   2+ 8C45              ;
   3+ 8C45              ;   8/3/24
   4+ 8C45              ;
   5+ 8C45              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8C45              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8C45              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8C45              ;	_ de la 1ª entidad del Nivel.
   9+ 8C45              ;
  10+ 8C45              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8C45
  12+ 8C45              ;	MODIFICA: HL,DE y A.
  13+ 8C45              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8C45
  15+ 8C45              Inicializa_Nivel
  16+ 8C45
  17+ 8C45 2A F7 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8C48 CD A3 8B     	call Extrae_address
  19+ 8C4B 7E           	ld a,(hl)
  20+ 8C4C 32 D5 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8C4F 23           	inc hl
  22+ 8C50 CD 5D 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C53 22 F9 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C56 CD 66 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C59
  26+ 8C59 CD 77 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C5C C9           	ret
  28+ 8C5D
  29+ 8C5D              ; ----------------------
  30+ 8C5D
  31+ 8C5D 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C60 01 04 00     	ld bc,4
  33+ 8C63 ED B0        	ldir
  34+ 8C65 C9           	ret
  35+ 8C66
  36+ 8C66 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C67 CD B7 8D         call Calcula_salto_en_BC
  38+ 8C6A 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C6D A7               and a
  40+ 8C6E ED 4A            adc hl,bc
  41+ 8C70 CD A3 8B         call Extrae_address
  42+ 8C73 22 C0 89         ld (Puntero_indice_mov),hl
  43+ 8C76 C9               ret
  44+ 8C77
  45+ 8C77 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C7A CD B7 8D     	call Calcula_salto_en_BC
  47+ 8C7D 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C80 A7               and a
  49+ 8C81 ED 4A            adc hl,bc
  50+ 8C83 CD A3 8B         call Extrae_address
  51+ 8C86 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C89 C9           	ret
  53+ 8C8A
  54+ 8C8A              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C8A              ;
  56+ 8C8A              ;   5/1/24
  57+ 8C8A              ;
  58+ 8C8A              ;	Destruye A,BC,HL,DE
  59+ 8C8A
  60+ 8C8A              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C8A              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C8A
  63+ 8C8A              Inicia_Entidades
  64+ 8C8A
  65+ 8C8A              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C8A
  67+ 8C8A CD 75 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C8D              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C8D CD 1E 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C90
  71+ 8C90 2A F9 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C93
  73+ 8C93 22 F9 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C96
  75+ 8C96 CD 65 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C99
  77+ 8C99 2A F9 89     	ld hl,(Datos_de_nivel)
  78+ 8C9C
  79+ 8C9C              ; En este punto:
  80+ 8C9C              ;
  81+ 8C9C              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8C9C              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8C9C
  84+ 8C9C C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8C9D
  86+ 8C9D 7E           	ld a,(hl)
  87+ 8C9E CD DA 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8CA1
  89+ 8CA1 CD C9 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8CA4
  91+ 8CA4              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8CA4
  93+ 8CA4 CD 87 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8CA7
  95+ 8CA7 A7           	and a
  96+ 8CA8 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8CAA
  98+ 8CAA              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8CAA
 100+ 8CAA              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8CAA              ;	_ de este tipo de entidad.
 102+ 8CAA
 103+ 8CAA CD 85 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8CAD CD 92 99     	call Transfiere_datos_de_contadores
 105+ 8CB0
 106+ 8CB0 18 06        	jr 4F
 107+ 8CB2
 108+ 8CB2 CD C5 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8CB5
 110+ 8CB5              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8CB5              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8CB5              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8CB5              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8CB5              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8CB5
 116+ 8CB5 CD 45 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8CB8              ;																; _ Mov_masticados ya generados.
 118+ 8CB8 CD F4 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8CBB
 120+ 8CBB              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8CBB
 122+ 8CBB 2A A7 89     	ld hl,(Puntero_de_impresion)
 123+ 8CBE CD C8 99     	call Genera_coordenadas
 124+ 8CC1 CD F0 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8CC4 CD FE 8C     	call Limpiamos_bandeja_DRAW
 126+ 8CC7 CD 0A 8C     	call Incrementa_punteros_de_cajas
 127+ 8CCA
 128+ 8CCA              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8CCA              ; _ entidad del Nivel.
 130+ 8CCA
 131+ 8CCA 3A EE 89     	ld a,(Ctrl_4)
 132+ 8CCD E6 F0        	and $f0
 133+ 8CCF 32 EE 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8CD2
 135+ 8CD2              ; Siguiente entidad del Nivel.
 136+ 8CD2
 137+ 8CD2 2A F9 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8CD5 23           	inc hl 														; _ entidad del Nivel.
 139+ 8CD6
 140+ 8CD6 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8CD7
 142+ 8CD7 10 BA        	djnz 2B
 143+ 8CD9
 144+ 8CD9 C9           	ret
 145+ 8CDA
 146+ 8CDA              ; ---------------------------------------------------------------------
 147+ 8CDA              ;
 148+ 8CDA              ;	10/02/24
 149+ 8CDA              ;
 150+ 8CDA              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8CDA              ;
 152+ 8CDA              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8CDA
 154+ 8CDA              Definicion_segun_tipo
 155+ 8CDA
 156+ 8CDA CD B7 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8CDD 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8CE0 CD BF 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8CE3 C9           	ret
 160+ 8CE4
 161+ 8CE4              ; ---------------------------------------------------------------------
 162+ 8CE4              ;
 163+ 8CE4              ;	30/01/24
 164+ 8CE4
 165+ 8CE4
 166+ 8CE4              Store_Restore_cajas
 167+ 8CE4
 168+ 8CE4              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8CE4
 170+ 8CE4 2A A7 89     	ld hl,(Puntero_de_impresion)
 171+ 8CE7 CD C8 99     	call Genera_coordenadas
 172+ 8CEA
 173+ 8CEA CD F0 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8CED CD FE 8C     	call Limpiamos_bandeja_DRAW
 175+ 8CF0
 176+ 8CF0              ; 	Entidad_sospechosa. 20/4/23
 177+ 8CF0
 178+ 8CF0              ;	ld a,(Impacto)
 179+ 8CF0              ;	and a
 180+ 8CF0              ;	jr z,1F
 181+ 8CF0
 182+ 8CF0              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8CF0              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8CF0              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8CF0              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8CF0              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8CF0
 188+ 8CF0
 189+ 8CF0              ;1 ld hl,(Puntero_restore_caja)
 190+ 8CF0              ;	ld a,(hl)
 191+ 8CF0              ;	and a
 192+ 8CF0              ;	push af
 193+ 8CF0              ;	jr z,2F
 194+ 8CF0
 195+ 8CF0              ;	di
 196+ 8CF0              ;	ld de,Bandeja_DRAW
 197+ 8CF0              ;	ld bc,42
 198+ 8CF0              ;	ldir
 199+ 8CF0              ;	ei
 200+ 8CF0
 201+ 8CF0 CD 0A 8C     2 call Incrementa_punteros_de_cajas
 202+ 8CF3 C9           	ret
 203+ 8CF4
 204+ 8CF4
 205+ 8CF4              ; ---------------------------------------------------------------------
 206+ 8CF4              ;
 207+ 8CF4              ;	29/01/24
 208+ 8CF4
 209+ 8CF4              Guarda_foto_de_mov_masticado
 210+ 8CF4
 211+ 8CF4 CD 16 8B     	call Cargamos_registros_con_mov_masticado
 212+ 8CF7 CD 0C 9A     	call Genera_datos_de_impresion
 213+ 8CFA              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8CFA              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8CFA              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8CFA              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8CFA
 218+ 8CFA CD 09 8D     	call Decrementa_Contador_de_mov_masticados
 219+ 8CFD C9           	ret
 220+ 8CFE
 221+ 8CFE              ; ---------------------------------------------------------------------
 222+ 8CFE              ;
 223+ 8CFE              ;	25/01/24
 224+ 8CFE
 225+ 8CFE 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8D01 06 2A        	ld b,42
 227+ 8D03 AF           	xor a
 228+ 8D04
 229+ 8D04 77           1 ld (hl),a
 230+ 8D05 23           	inc hl
 231+ 8D06 10 FC        	djnz 1B
 232+ 8D08
 233+ 8D08 C9           	ret
 234+ 8D09
 235+ 8D09              ; ---------------------------------------------------------------------
 236+ 8D09              ;
 237+ 8D09              ;	22/01/24
 238+ 8D09
 239+ 8D09 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8D0C 2B           	dec hl
 241+ 8D0D
 242+ 8D0D 24           	inc h
 243+ 8D0E 25           	dec h
 244+ 8D0F
 245+ 8D0F FC 16 8D     	call m,Reinicia_entidad_maliciosa
 246+ 8D12
 247+ 8D12              ;	jr nz,1F
 248+ 8D12
 249+ 8D12              ;	inc l
 250+ 8D12              ;	dec l
 251+ 8D12
 252+ 8D12              ;	di
 253+ 8D12              ;	jr z,$
 254+ 8D12              ;	ei
 255+ 8D12
 256+ 8D12 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8D15 C9           	ret
 258+ 8D16
 259+ 8D16              ; ---------------------------------------------------------------------
 260+ 8D16              ;
 261+ 8D16              ;	10/2/24
 262+ 8D16
 263+ 8D16              Reinicia_entidad_maliciosa
 264+ 8D16
 265+ 8D16              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8D16
 267+ 8D16 CD 85 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8D19 CD 92 99     	call Transfiere_datos_de_contadores
 269+ 8D1C
 270+ 8D1C              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8D1C
 272+ 8D1C 3A 8A 89     	ld a,(Tipo)
 273+ 8D1F CD DA 8C     	call Definicion_segun_tipo
 274+ 8D22
 275+ 8D22 E5           	push hl
 276+ 8D23 DD E1        	pop ix
 277+ 8D25
 278+ 8D25 DD 6E 0B     	ld l,(ix+11)
 279+ 8D28 DD 66 0C     	ld h,(ix+12)
 280+ 8D2B
 281+ 8D2B 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8D2E
 283+ 8D2E              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8D2E              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8D2E
 286+ 8D2E 2A EB 89     	ld hl,(Scanlines_album_SP)
 287+ 8D31 01 06 00     	ld bc,6
 288+ 8D34 A7           	and a
 289+ 8D35 ED 42        	sbc hl,bc
 290+ 8D37 22 EB 89     	ld (Scanlines_album_SP),hl
 291+ 8D3A
 292+ 8D3A CD 16 8B     	call Cargamos_registros_con_mov_masticado
 293+ 8D3D CD 0C 9A     	call Genera_datos_de_impresion
 294+ 8D40
 295+ 8D40 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8D43 2B           	dec hl
 297+ 8D44
 298+ 8D44 C9           	ret
 299+ 8D45
 300+ 8D45
 301+ 8D45
 302+ 8D45
 303+ 8D45              ; ---------------------------------------------------------------------
 304+ 8D45              ;
 305+ 8D45              ;	22/01/24
 306+ 8D45
 307+ 8D45 21 EE 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8D48 CB 46        	bit 0,(hl)
 309+ 8D4A 20 0D        	jr nz,1F
 310+ 8D4C CB 4E        	bit 1,(hl)
 311+ 8D4E 20 0C        	jr nz,2F
 312+ 8D50 CB 56        	bit 2,(hl)
 313+ 8D52 20 0B        	jr nz,3F
 314+ 8D54 CB 5E        	bit 3,(hl)
 315+ 8D56 20 0A        	jr nz,4F
 316+ 8D58 C9           	ret
 317+ 8D59
 318+ 8D59 CB E6        1 set 4,(hl)
 319+ 8D5B C9           	ret
 320+ 8D5C CB EE        2 set 5,(hl)
 321+ 8D5E C9           	ret
 322+ 8D5F CB F6        3 set 6,(hl)
 323+ 8D61 C9           	ret
 324+ 8D62 CB FE        4 set 7,(hl)
 325+ 8D64 C9           	ret
 326+ 8D65
 327+ 8D65              ; ---------------------------------------------------------------------
 328+ 8D65              ;
 329+ 8D65              ;	23/01/24
 330+ 8D65              ;
 331+ 8D65              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D65              ;
 333+ 8D65              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D65              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D65              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D65              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D65
 338+ 8D65              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D65
 340+ 8D65 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D66 3D           	dec a
 342+ 8D67 20 06        	jr nz,1F
 343+ 8D69
 344+ 8D69              ; --- Tipo_1
 345+ 8D69
 346+ 8D69 21 EE 89     	ld hl,Ctrl_4
 347+ 8D6C CB C6        	set 0,(hl)
 348+ 8D6E C9           	ret
 349+ 8D6F
 350+ 8D6F 3D           1 dec a
 351+ 8D70 20 06        	jr nz,2F
 352+ 8D72
 353+ 8D72              ; --- Tipo_2
 354+ 8D72
 355+ 8D72 21 EE 89     	ld hl,Ctrl_4
 356+ 8D75 CB CE        	set 1,(hl)
 357+ 8D77 C9           	ret
 358+ 8D78
 359+ 8D78 3D           2 dec a
 360+ 8D79 20 06        	jr nz,3F
 361+ 8D7B
 362+ 8D7B              ; --- Tipo_3
 363+ 8D7B
 364+ 8D7B 21 EE 89     	ld hl,Ctrl_4
 365+ 8D7E CB D6        	set 2,(hl)
 366+ 8D80 C9           	ret
 367+ 8D81
 368+ 8D81              ; --- Tipo_3
 369+ 8D81
 370+ 8D81 21 EE 89     3 ld hl,Ctrl_4
 371+ 8D84 CB D6        	set 2,(hl)
 372+ 8D86 C9           	ret
 373+ 8D87
 374+ 8D87              ; ---------------------------------------------------------------------
 375+ 8D87              ;
 376+ 8D87              ;	22/01/24
 377+ 8D87
 378+ 8D87 21 EE 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D8A CB 46        	bit 0,(hl)
 380+ 8D8C 20 0E        	jr nz,1F
 381+ 8D8E
 382+ 8D8E CB 4E        	bit 1,(hl)
 383+ 8D90 20 10        	jr nz,2F
 384+ 8D92
 385+ 8D92 CB 56        	bit 2,(hl)
 386+ 8D94 20 12        	jr nz,3F
 387+ 8D96
 388+ 8D96 CB 5E        	bit 3,(hl)
 389+ 8D98 20 14        	jr nz,4F
 390+ 8D9A 18 19        	jr 6F
 391+ 8D9C
 392+ 8D9C              ; Entidad_de_Tipo_1.
 393+ 8D9C
 394+ 8D9C CB 66        1 bit 4,(hl)
 395+ 8D9E 28 15        	jr z,6F
 396+ 8DA0 18 10        	jr 5F
 397+ 8DA2
 398+ 8DA2              ; Entidad_de_Tipo_2.
 399+ 8DA2
 400+ 8DA2 CB 6E        2 bit 5,(hl)
 401+ 8DA4 28 0F        	jr z,6F
 402+ 8DA6 18 0A        	jr 5F
 403+ 8DA8
 404+ 8DA8              ; Entidad_de_Tipo_3.
 405+ 8DA8
 406+ 8DA8 CB 76        3 bit 6,(hl)
 407+ 8DAA 28 09        	jr z,6F
 408+ 8DAC 18 04        	jr 5F
 409+ 8DAE
 410+ 8DAE              ; Entidad_de_Tipo_4.
 411+ 8DAE
 412+ 8DAE CB 7E        4 bit 7,(hl)
 413+ 8DB0 28 03        	jr z,6F
 414+ 8DB2
 415+ 8DB2              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8DB2
 417+ 8DB2 AF           5 xor a
 418+ 8DB3 3C           	inc a
 419+ 8DB4 C9           	ret
 420+ 8DB5
 421+ 8DB5              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8DB5
 423+ 8DB5 AF           6 xor a
 424+ 8DB6 C9           	ret
 425+ 8DB7
 426+ 8DB7              ;	------------------------------------------------------------------------------------
 427+ 8DB7              ;
 428+ 8DB7              ;	12/01/24
 429+ 8DB7              ;
 430+ 8DB7              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8DB7              ;
 432+ 8DB7              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8DB7              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8DB7
 435+ 8DB7 CB 27        Calcula_salto_en_BC sla a
 436+ 8DB9 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8DBB 4F           	ld c,a
 438+ 8DBC 06 00        	ld b,0
 439+ 8DBE C9           	ret
 440+ 8DBF
 441+ 8DBF              ; ------------------------------------------------------------------
 442+ 8DBF              ;
 443+ 8DBF              ;	19/1/24
 444+ 8DBF              ;
 445+ 8DBF              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8DBF              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8DBF
 448+ 8DBF A7           Situa_en_datos_de_definicion and a
 449+ 8DC0 ED 4A        	adc hl,bc
 450+ 8DC2 CD A3 8B     	call Extrae_address
 451+ 8DC5 22 DB 89         ld (Datos_de_entidad),hl
 452+ 8DC8 C9           	ret
 453+ 8DC9
 454+ 8DC9              ; ------------------------------------------------------------------
 455+ 8DC9
 456+ 8DC9              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8DC9              ; 	inc de
 458+ 8DC9              ; 	inc de
 459+ 8DC9              ; 	ex de,hl
 460+ 8DC9              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8DC9              ; 	ret
 462+ 8DC9
 463+ 8DC9              ; ----------------------------------------------------------------------------------------------------------
 464+ 8DC9              ;
 465+ 8DC9              ;	31/1/24
 466+ 8DC9              ;
 467+ 8DC9              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8DC9              ;	_ de entidad.
 469+ 8DC9              ;
 470+ 8DC9              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8DC9              ;
 472+ 8DC9              ;
 473+ 8DC9              ;	MODIFICA: HL,DE y BC
 474+ 8DC9
 475+ 8DC9
 476+ 8DC9              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8DC9
 478+ 8DC9 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8DCC 01 03 00     	ld bc,3
 480+ 8DCF ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8DD1              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8DD1 11 94 89     	ld de,Attr									; DE en (Attr).
 483+ 8DD4 01 05 00     	ld bc,5
 484+ 8DD7 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8DD9              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8DD9 11 9D 89     	ld de,Posicion_inicio
 487+ 8DDC 01 03 00     	ld bc,3
 488+ 8DDF ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8DE1              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8DE1 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8DE4 01 02 00     	ld bc,2
 492+ 8DE7 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8DE9
 494+ 8DE9 11 B3 89     	ld de,Frames_explosion
 495+ 8DEC 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8DEE 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8DEF
 498+ 8DEF C9           	ret
 499+ 8DF0
 500+ 8DF0              ; ----------------------------------------------------------------------------------------------------------
 501+ 8DF0              ;
 502+ 8DF0              ;	22/01/24
 503+ 8DF0              ;
 504+ 8DF0              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8DF0              ;
 506+ 8DF0              ;	Las cajas contienen entidades iniciadas:
 507+ 8DF0              ;
 508+ 8DF0              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8DF0              ;
 510+ 8DF0              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8DF0              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8DF0              ;
 513+ 8DF0              ;	MODIFICA: HL,DE y BC
 514+ 8DF0
 515+ 8DF0 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8DF3 ED 5B CF 89  	ld de,(Puntero_store_caja)
 517+ 8DF7 7E           	ld a,(hl)
 518+ 8DF8 12           	ld (de),a
 519+ 8DF9 13           	inc de 													; (Tipo).
 520+ 8DFA
 521+ 8DFA 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8DFD 01 02 00     	ld bc,2
 523+ 8E00 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8E02              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8E02 23           	inc hl
 526+ 8E03 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8E04 12           	ld (de),a
 528+ 8E05 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8E06
 530+ 8E06 21 A0 89     	ld hl,Impacto
 531+ 8E09 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8E0A 12           	ld (de),a
 533+ 8E0B 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8E0C              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8E0C 23           	inc hl
 536+ 8E0D 01 06 00     	ld bc,6
 537+ 8E10 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8E12              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8E12 01 07 00     	ld bc,7
 540+ 8E15 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8E17              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8E17              ;															; HL apunta ahora a (Columnas).
 543+ 8E17 21 B2 89     	ld hl,Ctrl_2
 544+ 8E1A 7E           	ld a,(hl)
 545+ 8E1B 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8E1C 13           	inc de
 547+ 8E1D
 548+ 8E1D C9           	ret
 549+ 8E1E
 550+ 8E1E              ;---------------------------------------------------------------------------------------------------------------
 551+ 8E1E              ;
 552+ 8E1E              ;	5/1/24
 553+ 8E1E              ;
 554+ 8E1E              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8E1E              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8E1E              ;
 557+ 8E1E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8E1E              ;
 559+ 8E1E              ;	(Numero_parcial_de_entidades)="7".
 560+ 8E1E              ;
 561+ 8E1E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8E1E              ;
 563+ 8E1E              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8E1E              ;
 565+ 8E1E              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8E1E              ;	MODIFICA: A y B.
 567+ 8E1E              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8E1E
 569+ 8E1E              Inicializa_Numero_parcial_de_entidades
 570+ 8E1E
 571+ 8E1E              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8E1E
 573+ 8E1E 3A D5 89     	ld a,(Numero_de_entidades)
 574+ 8E21 A7           	and a
 575+ 8E22
 576+ 8E22              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8E22              ;	jr z,$
 578+ 8E22              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8E22
 580+ 8E22 20 03        	jr nz,3F
 581+ 8E24
 582+ 8E24              ; ---------- ---------- ----------
 583+ 8E24
 584+ 8E24              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8E24              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8E24
 587+ 8E24 CD 45 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8E27
 589+ 8E27              ; ---------- ---------- ----------
 590+ 8E27
 591+ 8E27 3A D5 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8E2A FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8E2C 38 08        	jr c,1F
 594+ 8E2E
 595+ 8E2E              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8E2E              ; Actualizamos variables.
 597+ 8E2E
 598+ 8E2E 3E 07        	ld a,7
 599+ 8E30 32 D6 89     	ld (Numero_parcial_de_entidades),a
 600+ 8E33 47           	ld b,a
 601+ 8E34 18 04        	jr 2F
 602+ 8E36
 603+ 8E36              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8E36              ; (Numero_de_entidades)="0".
 605+ 8E36
 606+ 8E36 32 D6 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8E39 47           	ld b,a
 608+ 8E3A C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1838  8E3B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8E3B              ; ******************************************************************************************************************************************************************************************
   2+ 8E3B              ;
   3+ 8E3B              ; 26/06/23
   4+ 8E3B              ;
   5+ 8E3B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8E3B
   7+ 8E3B              Draw
   8+ 8E3B
   9+ 8E3B CD 25 91     	call Prepara_draw
  10+ 8E3E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8E3F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8E40 28 05        	jr z,2F
  13+ 8E42
  14+ 8E42 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8E45 18 0C        	jr 1F
  16+ 8E47
  17+ 8E47 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8E4A 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8E4D CD D9 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8E50              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8E50
  22+ 8E50 CD E9 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8E53
  24+ 8E53 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8E56 CB 6F        	bit 5,a
  26+ 8E58 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E5A
  28+ 8E5A CD 6F 8E     	call Comprueba_limite_horizontal
  29+ 8E5D CD FF 8E     	call Comprueba_limite_vertical
  30+ 8E60
  31+ 8E60              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E60              ; -----------------------
  33+ 8E60              ; -----------------------
  34+ 8E60              ; -----------------------
  35+ 8E60
  36+ 8E60 CD 55 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E63 CD 8C 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E66              ;	call Define_rutina_de_impresion
  39+ 8E66
  40+ 8E66 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E69 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E6B 32 AD 89     	ld (Ctrl_0),a
  43+ 8E6E
  44+ 8E6E C9           	ret
  45+ 8E6F
  46+ 8E6F              ; *******************************************************************************************************************************************************************************************
  47+ 8E6F              ;	21/01/23
  48+ 8E6F              ;
  49+ 8E6F              ; 	Comprueba_limite_horizontal.
  50+ 8E6F              ;
  51+ 8E6F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E6F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E6F              ;
  54+ 8E6F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E6F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E6F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E6F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E6F
  59+ 8E6F
  60+ 8E6F
  61+ 8E6F 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E72 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E74 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E76 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E78 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E7B 18 09            jr 6F
  67+ 8E7D CB 5F        1 bit 3,a
  68+ 8E7F 28 0A            jr z,2F
  69+ 8E81 E6 F7            and $f7
  70+ 8E83 32 AD 89         ld (Ctrl_0),a
  71+ 8E86 CD D9 8F     6 call Inicializacion
  72+ 8E89 18 5B            jr 5F
  73+ 8E8B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E8C
  75+ 8E8C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E8C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E8C
  78+ 8E8C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E8D 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E90 CD AA 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E93 67           	ld h,a
  82+ 8E94 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E95 CD AA 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E98 67           	ld h,a
  85+ 8E99 A7           	and a
  86+ 8E9A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8E9C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8E9D 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 8EA0 FE 02        	cp 2
  90+ 8EA2 38 1E        	jr c,3F
  91+ 8EA4 28 1C        	jr z,3F
  92+ 8EA6 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8EA7 28 23            jr z,7F
  94+ 8EA9 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8EAB 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8EAD E1           	pop hl
  97+ 8EAE
  98+ 8EAE              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8EAE              ; _para indicar con E="2" en caso necesario.
 100+ 8EAE
 101+ 8EAE E5               push hl
 102+ 8EAF C5               push bc
 103+ 8EB0 CD AA 99     	call calcula_tercio
 104+ 8EB3 FE 01        	cp 1
 105+ 8EB5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8EB7 CD E7 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8EBA 28 26            jr z,9F
 108+ 8EBC 38 24            jr c,9F
 109+ 8EBE 1E 00        11 ld e,0
 110+ 8EC0 18 22            jr 8F
 111+ 8EC2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8EC3 28 07        	jr z, 7F
 113+ 8EC5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8EC7 1E 00         	ld e,0
 115+ 8EC9 E1           	pop hl
 116+ 8ECA 18 04        	jr 4F
 117+ 8ECC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8ECE 18 15            jr 10F
 119+ 8ED0
 120+ 8ED0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8ED0              ; _para indicar con E="2" en caso necesario.
 122+ 8ED0
 123+ 8ED0 E5           4 push hl
 124+ 8ED1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8ED2 CD AA 99     	call calcula_tercio
 126+ 8ED5 FE 01        	cp 1
 127+ 8ED7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8ED9 CD E7 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8EDC 28 04            jr z,9F
 130+ 8EDE 30 02            jr nc,9F
 131+ 8EE0 18 02        	jr 8F
 132+ 8EE2 1E 02        9 ld e,2
 133+ 8EE4 C1           8 pop bc
 134+ 8EE5 E1           10 pop hl
 135+ 8EE6 C9           5 ret
 136+ 8EE7
 137+ 8EE7              ; --------------------
 138+ 8EE7              ;
 139+ 8EE7              ; 25/08/22
 140+ 8EE7
 141+ 8EE7 CD AA 99     Comprueba_centro call calcula_tercio
 142+ 8EEA 67               ld h,a
 143+ 8EEB 08           	ex af,af
 144+ 8EEC FE 02        	cp 2
 145+ 8EEE 38 07        	jr c,1F
 146+ 8EF0 28 05        	jr z,1F
 147+ 8EF2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8EF5 18 03        	jr 2F
 149+ 8EF7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8EFA 08           2 ex af,af
 151+ 8EFB A7               and a
 152+ 8EFC ED 42            sbc hl,bc
 153+ 8EFE C9               ret
 154+ 8EFF
 155+ 8EFF              ; *********************************************************************************************************************************************************************************************
 156+ 8EFF              ;
 157+ 8EFF              ;   16/8/22
 158+ 8EFF              ;
 159+ 8EFF              ;	Comprueba_limite_vertical
 160+ 8EFF              ;
 161+ 8EFF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8EFF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8EFF              ;
 164+ 8EFF
 165+ 8EFF 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8F02 7D           	ld a,l
 167+ 8F03 E6 1F        	and $1F
 168+ 8F05 57           	ld d,a
 169+ 8F06 3A B1 89     	ld a,(Limite_vertical)
 170+ 8F09 BA           	cp d 											; Límite - Posición.
 171+ 8F0A 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8F0B 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8F0E CB 47        	bit 0,a
 174+ 8F10 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8F12
 176+ 8F12              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8F12
 178+ 8F12 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8F13 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8F15
 181+ 8F15              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8F15              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8F15
 184+ 8F15 3A 91 89         ld a,(Coordenada_X)
 185+ 8F18 16 0F            ld d,Centro_izquierda
 186+ 8F1A A7               and a
 187+ 8F1B 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8F1C 28 1E            jr z,3F
 189+ 8F1E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8F20              ;                                                    ; _salimos sin modificar nada.
 191+ 8F20 18 0E            jr 2F
 192+ 8F22 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8F23 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8F25
 195+ 8F25              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8F25              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8F25
 198+ 8F25 3A 91 89         ld a,(Coordenada_X)
 199+ 8F28 16 10            ld d,Centro_derecha
 200+ 8F2A A7               and a
 201+ 8F2B 92               sub d
 202+ 8F2C 28 0E            jr z,3F
 203+ 8F2E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8F30              ;                                                    ; _salimos sin modificar nada.
 205+ 8F30 CB 43        2 bit 0,e
 206+ 8F32 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8F34 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8F35 CD C9 8F         call Modificaccionne
 209+ 8F38 C1           	pop bc
 210+ 8F39 CD D9 8F         call Inicializacion
 211+ 8F3C C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8F3D
 213+ 8F3D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8F3D
 215+ 8F3D C5           4 push bc
 216+ 8F3E 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8F41 0A           	ld a,(bc)
 218+ 8F42 3D           	dec a
 219+ 8F43 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8F44 7D           	ld a,l
 221+ 8F45 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8F46 CB 47        	bit 0,a
 223+ 8F48 28 03        	jr z,5F
 224+ 8F4A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8F4B 18 2E        	jr 7F
 226+ 8F4D
 227+ 8F4D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8F4D
 229+ 8F4D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8F4E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8F4F 3A AD 89     	ld a,(Ctrl_0)
 232+ 8F52 CB 4F        	bit 1,a
 233+ 8F54 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F56 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F57
 236+ 8F57              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F57
 238+ 8F57 1C               inc e
 239+ 8F58 1D               dec e
 240+ 8F59 20 07            jr nz,12F
 241+ 8F5B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F5C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F5D 22 8D 89     	ld (Posicion_actual),hl
 244+ 8F60 18 44        13 jr 9F
 245+ 8F62 CB 43        12 bit 0,e
 246+ 8F64 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F66              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F66 C1           	pop bc
 249+ 8F67 18 D3        	jr 3B
 250+ 8F69 80           14 add b
 251+ 8F6A 6F               ld l,a
 252+ 8F6B 22 8D 89     	ld (Posicion_actual),hl
 253+ 8F6E CD C9 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F71 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F73 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F75 32 AD 89         ld (Ctrl_0),a
 257+ 8F78 F1           	pop af
 258+ 8F79 18 2B        	jr 9F
 259+ 8F7B
 260+ 8F7B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F7B
 262+ 8F7B F5           7 push af
 263+ 8F7C 3A AD 89     	ld a,(Ctrl_0)
 264+ 8F7F CB 47        	bit 0,a
 265+ 8F81 20 1D        	jr nz,8F
 266+ 8F83 F1           	pop af
 267+ 8F84
 268+ 8F84              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F84
 270+ 8F84 1C           	inc e
 271+ 8F85 1D               dec e
 272+ 8F86 20 07            jr nz,10F
 273+ 8F88 90           	sub b
 274+ 8F89 6F               ld l,a
 275+ 8F8A 22 8D 89     	ld (Posicion_actual),hl
 276+ 8F8D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F8F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F8F CB 43        10 bit 0,e
 279+ 8F91 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F93              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F93 C1           	pop bc
 282+ 8F94 18 A6        	jr 3B
 283+ 8F96 90           16 sub b
 284+ 8F97 6F               ld l,a
 285+ 8F98 22 8D 89     	ld (Posicion_actual),hl
 286+ 8F9B CD C9 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8F9E 18 06            jr 9F
 288+ 8FA0 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8FA2 32 AD 89         ld (Ctrl_0),a
 290+ 8FA5 F1           	pop af
 291+ 8FA6 C1           9 pop bc
 292+ 8FA7 1E 00        	ld e,0
 293+ 8FA9 CD D9 8F         call Inicializacion
 294+ 8FAC F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8FAD 08           	ex af,af
 296+ 8FAE F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8FAF 18 8B            jr 3B
 298+ 8FB1
 299+ 8FB1              ; --------------------
 300+ 8FB1
 301+ 8FB1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8FB3 CD 40 91     1 call PreviousScan
 303+ 8FB6 10 FB            djnz 1B
 304+ 8FB8 22 8D 89     	ld (Posicion_actual),hl
 305+ 8FBB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8FBC C9           	ret
 307+ 8FBD
 308+ 8FBD              ; --------------------
 309+ 8FBD
 310+ 8FBD 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8FBF CD 31 91     1 call NextScan
 312+ 8FC2 10 FB            djnz 1B
 313+ 8FC4 22 8D 89     	ld (Posicion_actual),hl
 314+ 8FC7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8FC8 C9           	ret
 316+ 8FC9
 317+ 8FC9              ; --------------------
 318+ 8FC9              ;
 319+ 8FC9              ;	22/01/23
 320+ 8FC9              ;
 321+ 8FC9              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8FC9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8FC9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8FC9
 325+ 8FC9
 326+ 8FC9              Modificaccionne
 327+ 8FC9
 328+ 8FC9 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 8FCC FE 02        	cp 2
 330+ 8FCE CC B1 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8FD1 DC B1 8F         call c,Modifica_Pos_actual
 332+ 8FD4 C8           	ret z
 333+ 8FD5 CD BD 8F         call Modifica_Pos_actual2
 334+ 8FD8 C9               ret
 335+ 8FD9
 336+ 8FD9              ; *************************************************************************************************************************************************************************************************
 337+ 8FD9              ;
 338+ 8FD9              ;	13/8/22
 339+ 8FD9              ;
 340+ 8FD9              ;	Inicializacion
 341+ 8FD9              ;
 342+ 8FD9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8FD9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8FD9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8FD9              ;
 346+ 8FD9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8FD9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8FD9              ;	_ desaparece/aparece.
 349+ 8FD9
 350+ 8FD9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8FD9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8FD9              ;
 353+ 8FD9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8FD9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8FD9              ; 		   [E] ="0"
 356+ 8FD9
 357+ 8FD9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8FD9
 359+ 8FD9 CD AA 99     Inicializacion call calcula_tercio
 360+ 8FDC 28 36        	jr z,primit
 361+ 8FDE E6 02        	and 2
 362+ 8FE0 20 07        	jr nz,segmit
 363+ 8FE2 7D           	ld a,l
 364+ 8FE3 FE 7F        	cp $7f
 365+ 8FE5 38 2D        	jr c,primit
 366+ 8FE7 28 2B        	jr z,primit
 367+ 8FE9 CD 4F 90     segmit call column
 368+ 8FEC 38 13        	jr c,tercuad
 369+ 8FEE 3E 04        cuarcuad ld a,4
 370+ 8FF0 32 9F 89     	ld (Cuad_objeto),a
 371+ 8FF3 21 20 48     	ld hl,$4820
 372+ 8FF6 22 AF 89     	ld (Limite_horizontal),hl
 373+ 8FF9 21 B1 89     	ld hl,Limite_vertical
 374+ 8FFC 36 0D        	ld (hl),$0d
 375+ 8FFE 08           	ex af,af
 376+ 8FFF 18 3C        	jr 1F
 377+ 9001              tercuad
 378+ 9001 3E 03        	ld a,3
 379+ 9003 32 9F 89     	ld (Cuad_objeto),a
 380+ 9006 21 20 48     	ld hl,$4820
 381+ 9009 22 AF 89     	ld (Limite_horizontal),hl
 382+ 900C 21 B1 89     	ld hl,Limite_vertical
 383+ 900F 36 12        	ld (hl),$12
 384+ 9011 08           	ex af,af
 385+ 9012 18 29        	jr 1F
 386+ 9014 CD 4F 90     primit call column
 387+ 9017 38 13        	jr c, primcuad
 388+ 9019              segcuad
 389+ 9019 3E 02        	ld a,2
 390+ 901B 32 9F 89     	ld (Cuad_objeto),a
 391+ 901E 21 C0 4F     	ld hl,$4fc0
 392+ 9021 22 AF 89     	ld (Limite_horizontal),hl
 393+ 9024 21 B1 89     	ld hl,Limite_vertical
 394+ 9027 36 0D        	ld (hl),$0d
 395+ 9029 08           	ex af,af
 396+ 902A 18 11        	jr 1F
 397+ 902C              primcuad
 398+ 902C 3E 01        	ld a,1
 399+ 902E 32 9F 89     	ld (Cuad_objeto),a
 400+ 9031 21 C0 4F     	ld hl,$4fc0
 401+ 9034 22 AF 89     	ld (Limite_horizontal),hl
 402+ 9037 21 B1 89     	ld hl,Limite_vertical
 403+ 903A 36 12        	ld (hl),$12
 404+ 903C 08           	ex af,af
 405+ 903D
 406+ 903D C5           1 push bc
 407+ 903E E5           	push hl
 408+ 903F D5           	push de
 409+ 9040
 410+ 9040 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 9043 CD C8 99     	call Genera_coordenadas
 412+ 9046
 413+ 9046 D1           	pop de
 414+ 9047 E1           	pop hl
 415+ 9048 C1           	pop bc
 416+ 9049
 417+ 9049 21 AD 89     	ld hl,Ctrl_0
 418+ 904C CB EE        	set 5,(hl)
 419+ 904E C9           	ret
 420+ 904F
 421+ 904F              ; ------------------------------------------------------------------------------------------------------------------
 422+ 904F
 423+ 904F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 904F              ;
 425+ 904F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 904F
 427+ 904F 7D           column ld a,l
 428+ 9050 E6 1F        	and $1f
 429+ 9052 FE 10         	cp $10
 430+ 9054 C9            	ret
 431+ 9055
 432+ 9055              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9055              ;
 434+ 9055              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9055              ;
 436+ 9055              ; 14/12/22
 437+ 9055              ;
 438+ 9055              ;	Modifica: A y BC.
 439+ 9055
 440+ 9055 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9058 E6 01        	and 1
 442+ 905A 28 17        	jr z,1F
 443+ 905C
 444+ 905C              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 905C
 446+ 905C 3A 91 89     	ld a,(Coordenada_X)
 447+ 905F 47           	ld b,a
 448+ 9060 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9061 79           	ld a,c
 450+ 9062 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9063 38 08        	jr c,2F
 452+ 9065 47           	ld b,a
 453+ 9066 79           	ld a,c
 454+ 9067 90           	sub b
 455+ 9068 32 AE 89     	ld (Columnas),a
 456+ 906B 18 1B        	jr 4F
 457+ 906D 79           2 ld a,c
 458+ 906E 32 AE 89     	ld (Columnas),a
 459+ 9071 18 15        	jr 4F
 460+ 9073
 461+ 9073              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9073
 463+ 9073 3A 91 89     1 ld a,(Coordenada_X)
 464+ 9076 81           	add c
 465+ 9077 3D           	dec a
 466+ 9078 D6 1F        	sub $1f
 467+ 907A 38 08        	jr c,3F
 468+ 907C 47           	ld b,a
 469+ 907D 79           	ld a,c
 470+ 907E 90           	sub b
 471+ 907F 32 AE 89     	ld (Columnas),a
 472+ 9082 18 04        	jr 4F
 473+ 9084 79           3 ld a,c
 474+ 9085 32 AE 89     	ld (Columnas),a
 475+ 9088 D9           4 exx
 476+ 9089 4F           	ld c,a
 477+ 908A D9           	exx
 478+ 908B C9            ret
 479+ 908C
 480+ 908C              ; --------------------------------------------------------------------------------------------------------------------
 481+ 908C              ;
 482+ 908C              ;   19/7/23
 483+ 908C              ;
 484+ 908C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 908C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 908C              ;
 487+ 908C              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 908C              ;			HL e IY Contienen (Puntero_objeto).
 489+ 908C              ;
 490+ 908C              ;	DESTRUYE: HL,B Y A.
 491+ 908C
 492+ 908C 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 908F FE 02        	cp 2
 494+ 9091 38 18        	jr c,1F
 495+ 9093 28 16        	jr z,1F
 496+ 9095 E6 01        	and 1
 497+ 9097 28 0D        	jr z,3F
 498+ 9099
 499+ 9099              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9099
 501+ 9099 CD DF 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 909C
 503+ 909C 7D           9 ld a,l
 504+ 909D E6 1F        	and $1f
 505+ 909F 28 2A        	jr z,7F
 506+ 90A1 2B           	dec hl
 507+ 90A2 10 F8        	djnz 9B
 508+ 90A4 18 25        	jr 7F
 509+ 90A6
 510+ 90A6              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 90A6
 512+ 90A6 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 90A9 18 20        	jr 7F
 514+ 90AB
 515+ 90AB 28 14        1 jr z,2F
 516+ 90AD
 517+ 90AD              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 90AD
 519+ 90AD CD DF 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 90B0
 521+ 90B0 7D           4 ld a,l
 522+ 90B1 E6 1F        	and $1f
 523+ 90B3 28 03        	jr z,6F
 524+ 90B5 2B           	dec hl
 525+ 90B6 10 F8        	djnz 4B
 526+ 90B8 06 0F        6 ld b,15
 527+ 90BA CD 40 91     5 call PreviousScan
 528+ 90BD 10 FB        	djnz 5B
 529+ 90BF 18 0A        	jr 7F
 530+ 90C1
 531+ 90C1              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 90C1
 533+ 90C1 CD DF 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 90C4 06 0F        	ld b,15
 535+ 90C6 CD 40 91     8 call PreviousScan
 536+ 90C9 10 FB        	djnz 8B
 537+ 90CB
 538+ 90CB E5           7 push hl
 539+ 90CC DD E1        	pop ix
 540+ 90CE
 541+ 90CE 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 90D1 E5           	push hl
 543+ 90D2 FD E1        	pop iy
 544+ 90D4
 545+ 90D4              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 90D4
 547+ 90D4 3A AD 89     	ld a,(Ctrl_0)
 548+ 90D7 CB 77        	bit 6,a
 549+ 90D9 C8           	ret z
 550+ 90DA
 551+ 90DA              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 90DA              ; _ entidad / Amadeus´.
 553+ 90DA
 554+ 90DA DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 90DE
 556+ 90DE C9           	ret
 557+ 90DF
 558+ 90DF              ; --------------------------------------------------------------------------------------------------------------------
 559+ 90DF              ;
 560+ 90DF              ;	2/1/23
 561+ 90DF              ;
 562+ 90DF              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 90DF              ;
 564+ 90DF              ;	Tras esta rutina tenemos:
 565+ 90DF              ;
 566+ 90DF              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 90DF              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 90DF              ;
 569+ 90DF              ;	DESTRUYE!!!!! HL,B y A.
 570+ 90DF
 571+ 90DF 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 90E2 3A AE 89     	ld a,(Columnas)
 573+ 90E5 3D           	dec a
 574+ 90E6 20 01        	jr nz,1F
 575+ 90E8 3C           	inc a
 576+ 90E9 47           1 ld b,a
 577+ 90EA C9           	ret
 578+ 90EB
 579+ 90EB              ; --------------------------------------------------------------------------------------------------------------------
 580+ 90EB              ;
 581+ 90EB              ;	3/1/23
 582+ 90EB              ;
 583+ 90EB              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 90EB              ;
 585+ 90EB              ;	Destruye: A,B,HL y DE.
 586+ 90EB
 587+ 90EB              Define_rutina_de_impresion
 588+ 90EB
 589+ 90EB 3A 8C 89     	ld a,(Columns)
 590+ 90EE 47           	ld b,a
 591+ 90EF 3A AE 89     	ld a,(Columnas)
 592+ 90F2 B8           	cp b
 593+ 90F3 20 0D        	jr nz,2f
 594+ 90F5
 595+ 90F5              ;	La entidad se imprime entera.
 596+ 90F5
 597+ 90F5 21 92 91     	ld hl, Indice_entidades_completas
 598+ 90F8 E6 01        	and 1
 599+ 90FA 28 02        	jr z,1F
 600+ 90FC
 601+ 90FC 23           	inc hl
 602+ 90FD 23           	inc hl
 603+ 90FE
 604+ 90FE CD A3 8B     1 call Extrae_address
 605+ 9101 C9           	ret		;	ret
 606+ 9102
 607+ 9102              ;	La entidad no se imprime entera en pantalla.
 608+ 9102
 609+ 9102 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 9105 E6 01        	and 1
 611+ 9107 28 17        	jr z,3F
 612+ 9109
 613+ 9109              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9109
 615+ 9109 21 96 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 910C 3A 8C 89     4 ld a,(Columns)
 617+ 910F E6 01        	and 1
 618+ 9111 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 9113
 620+ 9113 23           	inc hl
 621+ 9114 23           	inc hl
 622+ 9115
 623+ 9115 3A AE 89     	ld a,(Columnas)
 624+ 9118 E6 01        	and 1
 625+ 911A 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 911C
 627+ 911C 23           	inc hl
 628+ 911D 23           	inc hl
 629+ 911E
 630+ 911E 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 9120
 632+ 9120 21 9C 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 9123 18 E7        	jr 4B
 634+ 9125
 635+ 9125              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9125              ;
 637+ 9125              ;	Prepara_draw
 638+ 9125              ;
 639+ 9125              ;	Es una rutina de carga.
 640+ 9125              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9125              ;
 642+ 9125              ;	FUNCIONAMIENTO:
 643+ 9125              ;
 644+ 9125              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9125              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9125              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9125              ;
 648+ 9125              ;	DESTRUYE:
 649+ 9125              ;
 650+ 9125              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9125
 652+ 9125 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9128 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9129 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 912A 4E           	ld c,(hl)
 656+ 912B 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 912E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9130 C9           	ret
 659+ 9131
 660+ 9131              ;----------------------------------------------------------------------------------------------------------------
 661+ 9131              ;
 662+ 9131              ;	5/08/22
 663+ 9131              ;
 664+ 9131              ;   NextScan.
 665+ 9131              ;
 666+ 9131              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 9131              ;
 668+ 9131              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 9131              ;
 670+ 9131              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9131              ;
 672+ 9131              ;       DESTRUIDOS: AF y HL !!!
 673+ 9131              ;
 674+ 9131              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9131              ;
 676+ 9131
 677+ 9131 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 9132 7C               ld a,h
 679+ 9133 E6 07            and 7
 680+ 9135 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9136
 682+ 9136 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9137 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9139 6F               ld l,a
 685+ 913A D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 913B
 687+ 913B 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 913C D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 913E 67               ld h,a
 690+ 913F C9               ret
 691+ 9140
 692+ 9140              ;----------------------------------------------------------------------------------------------------------------
 693+ 9140              ;
 694+ 9140              ;	5/08/22
 695+ 9140              ;
 696+ 9140              ;   PreviousScan.
 697+ 9140              ;
 698+ 9140              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9140              ;
 700+ 9140              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9140              ;
 702+ 9140              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9140              ;
 704+ 9140              ;       DESTRUIDOS: AF y HL !!!
 705+ 9140              ;
 706+ 9140              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9140              ;
 708+ 9140
 709+ 9140 7C           PreviousScan ld a,h
 710+ 9141 25               dec h               ; Dec H.
 711+ 9142 E6 07            and 7
 712+ 9144 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9145
 714+ 9145 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9146 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9148 6F               ld l,a
 717+ 9149 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 914A
 719+ 914A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 914B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 914D 67               ld h,a
 722+ 914E C9               ret
 723+ 914F
 724+ 914F              ; -----------------------------------------------------------------------------------
 725+ 914F              ;
 726+ 914F              ;	31/7/23
 727+ 914F              ;
 728+ 914F              ;	Rutina principal de pintado de entidades.
 729+ 914F              ;	Extrae la foto del frame, (entidades).
 730+ 914F
 731+ 914F              Extrae_Scanlines_album
 732+ 914F
 733+ 914F 21 01 80     	ld hl,Scanlines_album+1
 734+ 9152 7E           	ld a,(hl)
 735+ 9153 A7           	and a
 736+ 9154 C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 9155
 738+ 9155              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9155
 740+ 9155 3A D8 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9158 A7           	and a
 742+ 9159 C8           	ret z
 743+ 915A
 744+ 915A              ; -----------------------------------
 745+ 915A
 746+ 915A ED 73 DD 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 915E 31 00 80     	ld sp,Scanlines_album
 748+ 9161
 749+ 9161 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9163 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9164 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9165
 753+ 9165 ED 73 DF 89  	ld (Stack_2),sp
 754+ 9169 ED 7B DD 89  	ld sp,(Stack)
 755+ 916D
 756+ 916D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 916D
 758+ 916D 3E CD        	ld a,$cd
 759+ 916F 32 77 91     	ld (Imprime),a
 760+ 9172 EB           	ex de,hl
 761+ 9173 22 78 91     	ld (Imprime+1),hl
 762+ 9176 EB           	ex de,hl
 763+ 9177
 764+ 9177              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9177
 766+ 9177 00 00 00     Imprime db 0,0,0
 767+ 917A
 768+ 917A ED 73 DD 89  	ld (Stack),sp
 769+ 917E
 770+ 917E 3A D8 89     	ld a,(Numero_de_malotes)
 771+ 9181 3D           	dec a
 772+ 9182 28 09        	jr z,1F
 773+ 9184 32 D8 89      	ld (Numero_de_malotes),a
 774+ 9187
 775+ 9187 ED 7B DF 89  	ld sp,(Stack_2)
 776+ 918B 18 D4        	jr 2B
 777+ 918D
 778+ 918D AF           1 xor a
 779+ 918E 32 DF 89     	ld (Stack_2),a
 780+ 9191
 781+ 9191 C9           	ret
 782+ 9192
 783+ 9192              ; -----------------------------------------------------------------------------------
 784+ 9192              ;
 785+ 9192              ;	28/2/23
 786+ 9192              ;
 787+ 9192              ;	Pinta los disparos generados.
 788+ 9192
 789+ 9192              ;Extrae_foto_disparos
 790+ 9192
 791+ 9192              ;	ld hl,Scanlines_album_disparos+1
 792+ 9192              ;    ld a,(hl)
 793+ 9192              ;    and a
 794+ 9192              ;    ret z
 795+ 9192
 796+ 9192              ;	ld a,(Numero_de_disparotes)
 797+ 9192              ;	and a
 798+ 9192              ;	ret z
 799+ 9192              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 9192              ;	ld sp,Scanlines_album_disparos
 801+ 9192
 802+ 9192              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9192              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9192              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9192
 806+ 9192              ;	ld (Stack_2),sp
 807+ 9192              ;	ld sp,(Stack)
 808+ 9192
 809+ 9192              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9192
 811+ 9192              ;	ld a,$cd
 812+ 9192              ;	ld (Imprime2),a
 813+ 9192              ;	ex de,hl
 814+ 9192              ;	ld (Imprime2+1),hl
 815+ 9192              ;	ex de,hl
 816+ 9192
 817+ 9192              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9192
 819+ 9192              ;Imprime2 db 0,0,0
 820+ 9192
 821+ 9192              ;	ld a,(Numero_de_disparotes)
 822+ 9192              ;	dec a
 823+ 9192              ;	jr z,1F
 824+ 9192              ; 	ld (Numero_de_disparotes),a
 825+ 9192
 826+ 9192              ;	ld sp,(Stack_2)
 827+ 9192              ;	jr 2B
 828+ 9192
 829+ 9192              ;1 xor a
 830+ 9192              ;	ld (Stack_2),a
 831+ 9192              ;	ret
 832+ 9192
 833+ 9192              ; -----------------------------------------------------------------------------------
 834+ 9192              ;
 835+ 9192              ;	4/9/23
 836+ 9192              ;
 837+ 9192              ;	Rutina principal de pintado de Amadeus.
 838+ 9192              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 9192
 840+ 9192              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 9192              ;	ld a,(hl)
 842+ 9192              ;	and a
 843+ 9192              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9192
 845+ 9192              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9192              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9192              ;	ret z
 848+ 9192
 849+ 9192              ; -----------------------------------
 850+ 9192
 851+ 9192              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 9192              ;	ld sp,Scanlines_album_Amadeus
 853+ 9192
 854+ 9192              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9192              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9192              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9192
 858+ 9192              ;	ld (Stack_2),sp
 859+ 9192              ;	ld sp,(Stack)
 860+ 9192
 861+ 9192              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9192
 863+ 9192              ;	ld a,$cd
 864+ 9192              ;	ld (Imprime_Amadeus),a
 865+ 9192              ;	ex de,hl
 866+ 9192              ;	ld (Imprime_Amadeus+1),hl
 867+ 9192              ;	ex de,hl
 868+ 9192
 869+ 9192              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9192
 871+ 9192              ;Imprime_Amadeus db 0,0,0
 872+ 9192
 873+ 9192              ;	ld (Stack),sp
 874+ 9192
 875+ 9192              ;	ld a,(Numero_de_malotes)
 876+ 9192              ;	dec a
 877+ 9192              ;	jr z,1F
 878+ 9192              ; 	ld (Numero_de_malotes),a
 879+ 9192
 880+ 9192              ;	ld sp,(Stack_2)
 881+ 9192              ;	jr 2B
 882+ 9192
 883+ 9192              ;1 xor a
 884+ 9192              ;	ld (Stack_2),a
 885+ 9192
 886+ 9192              ;	ret
 887+ 9192
 888+ 9192
 889+ 9192
 890+ 9192
 891+ 9192
 892+ 9192
# file closed: Draw_XOR.asm
1839  9192              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9192              ;   índices de Rutinas de impresión.
   2+ 9192
   3+ 9192 A2 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9194 36 92            defw Pinta_Amadeus_3x2
   5+ 9196
   6+ 9196 0A 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9198 AA 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 919A 5E 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 919C
  10+ 919C 34 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 919E 38 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 91A0 EC 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 91A2
  14+ 91A2
  15+ 91A2              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 91A2              ;
  17+ 91A2              ;   28/2/24
  18+ 91A2              ;
  19+ 91A2              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 91A2              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 91A2              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 91A2              ;
  23+ 91A2              ;   Modifica: AF,HL,BC y DE.
  24+ 91A2
  25+ 91A2              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 91A2
  27+ 91A2 D9               exx
  28+ 91A3 36 01            ld (hl),1
  29+ 91A5 2C               inc l
  30+ 91A6 D9               exx
  31+ 91A7
  32+ 91A7 FD E5            push iy
  33+ 91A9 D1               pop de
  34+ 91AA
  35+ 91AA ED 73 DD 89      ld (Stack),sp
  36+ 91AE F9           	ld sp,hl
  37+ 91AF 06 10            ld b,16
  38+ 91B1
  39+ 91B1 E1               pop hl
  40+ 91B2 1A               ld a,(de)
  41+ 91B3 77               ld (hl),a
  42+ 91B4 1C           	inc e
  43+ 91B5 2C               inc l
  44+ 91B6 1A               ld a,(de)
  45+ 91B7 77               ld (hl),a
  46+ 91B8 1C               inc e
  47+ 91B9
  48+ 91B9 E1               pop hl
  49+ 91BA 1A               ld a,(de)
  50+ 91BB 77               ld (hl),a
  51+ 91BC 1C           	inc e
  52+ 91BD 2C               inc l
  53+ 91BE 1A               ld a,(de)
  54+ 91BF 77               ld (hl),a
  55+ 91C0 1C               inc e
  56+ 91C1
  57+ 91C1 E1               pop hl
  58+ 91C2 1A               ld a,(de)
  59+ 91C3 77               ld (hl),a
  60+ 91C4 1C           	inc e
  61+ 91C5 2C               inc l
  62+ 91C6 1A               ld a,(de)
  63+ 91C7 77               ld (hl),a
  64+ 91C8 1C               inc e
  65+ 91C9
  66+ 91C9 E1               pop hl
  67+ 91CA 1A               ld a,(de)
  68+ 91CB 77               ld (hl),a
  69+ 91CC 1C           	inc e
  70+ 91CD 2C               inc l
  71+ 91CE 1A               ld a,(de)
  72+ 91CF 77               ld (hl),a
  73+ 91D0 1C               inc e
  74+ 91D1
  75+ 91D1 E1               pop hl
  76+ 91D2 1A               ld a,(de)
  77+ 91D3 77               ld (hl),a
  78+ 91D4 1C           	inc e
  79+ 91D5 2C               inc l
  80+ 91D6 1A               ld a,(de)
  81+ 91D7 77               ld (hl),a
  82+ 91D8 1C               inc e
  83+ 91D9
  84+ 91D9 E1               pop hl
  85+ 91DA 1A               ld a,(de)
  86+ 91DB 77               ld (hl),a
  87+ 91DC 1C           	inc e
  88+ 91DD 2C               inc l
  89+ 91DE 1A               ld a,(de)
  90+ 91DF 77               ld (hl),a
  91+ 91E0 1C               inc e
  92+ 91E1
  93+ 91E1 E1               pop hl
  94+ 91E2 1A               ld a,(de)
  95+ 91E3 77               ld (hl),a
  96+ 91E4 1C           	inc e
  97+ 91E5 2C               inc l
  98+ 91E6 1A               ld a,(de)
  99+ 91E7 77               ld (hl),a
 100+ 91E8 1C               inc e
 101+ 91E9
 102+ 91E9 E1               pop hl
 103+ 91EA 1A               ld a,(de)
 104+ 91EB 77               ld (hl),a
 105+ 91EC 1C           	inc e
 106+ 91ED 2C               inc l
 107+ 91EE 1A               ld a,(de)
 108+ 91EF 77               ld (hl),a
 109+ 91F0 1C               inc e
 110+ 91F1
 111+ 91F1 E1               pop hl
 112+ 91F2 1A               ld a,(de)
 113+ 91F3 77               ld (hl),a
 114+ 91F4 1C           	inc e
 115+ 91F5 2C               inc l
 116+ 91F6 1A               ld a,(de)
 117+ 91F7 77               ld (hl),a
 118+ 91F8 1C               inc e
 119+ 91F9
 120+ 91F9 E1               pop hl
 121+ 91FA 1A               ld a,(de)
 122+ 91FB 77               ld (hl),a
 123+ 91FC 1C           	inc e
 124+ 91FD 2C               inc l
 125+ 91FE 1A               ld a,(de)
 126+ 91FF 77               ld (hl),a
 127+ 9200 1C               inc e
 128+ 9201
 129+ 9201 E1               pop hl
 130+ 9202 1A               ld a,(de)
 131+ 9203 77               ld (hl),a
 132+ 9204 1C           	inc e
 133+ 9205 2C               inc l
 134+ 9206 1A               ld a,(de)
 135+ 9207 77               ld (hl),a
 136+ 9208 1C               inc e
 137+ 9209
 138+ 9209 E1               pop hl
 139+ 920A 1A               ld a,(de)
 140+ 920B 77               ld (hl),a
 141+ 920C 1C           	inc e
 142+ 920D 2C               inc l
 143+ 920E 1A               ld a,(de)
 144+ 920F 77               ld (hl),a
 145+ 9210 1C               inc e
 146+ 9211
 147+ 9211 E1               pop hl
 148+ 9212 1A               ld a,(de)
 149+ 9213 77               ld (hl),a
 150+ 9214 1C           	inc e
 151+ 9215 2C               inc l
 152+ 9216 1A               ld a,(de)
 153+ 9217 77               ld (hl),a
 154+ 9218 1C               inc e
 155+ 9219
 156+ 9219 E1               pop hl
 157+ 921A 1A               ld a,(de)
 158+ 921B 77               ld (hl),a
 159+ 921C 1C           	inc e
 160+ 921D 2C               inc l
 161+ 921E 1A               ld a,(de)
 162+ 921F 77               ld (hl),a
 163+ 9220 1C               inc e
 164+ 9221
 165+ 9221 E1               pop hl
 166+ 9222 1A               ld a,(de)
 167+ 9223 77               ld (hl),a
 168+ 9224 1C           	inc e
 169+ 9225 2C               inc l
 170+ 9226 1A               ld a,(de)
 171+ 9227 77               ld (hl),a
 172+ 9228 1C               inc e
 173+ 9229
 174+ 9229 E1               pop hl
 175+ 922A 1A               ld a,(de)
 176+ 922B 77               ld (hl),a
 177+ 922C 1C           	inc e
 178+ 922D 2C               inc l
 179+ 922E 1A               ld a,(de)
 180+ 922F 77               ld (hl),a
 181+ 9230 1C               inc e
 182+ 9231
 183+ 9231 ED 7B DD 89      ld sp,(Stack)
 184+ 9235
 185+ 9235 C9           	ret
 186+ 9236
 187+ 9236              Pinta_Amadeus_3x2
 188+ 9236
 189+ 9236 D9               exx
 190+ 9237 36 02            ld (hl),2
 191+ 9239 2C               inc l
 192+ 923A D9               exx
 193+ 923B
 194+ 923B FD E5            push iy
 195+ 923D D1               pop de
 196+ 923E
 197+ 923E ED 73 DD 89      ld (Stack),sp
 198+ 9242 F9               ld sp,hl
 199+ 9243 06 10            ld b,16
 200+ 9245
 201+ 9245 E1               pop hl
 202+ 9246 1A               ld a,(de)
 203+ 9247 77               ld (hl),a
 204+ 9248 1C               inc e
 205+ 9249 2C               inc l
 206+ 924A 1A               ld a,(de)
 207+ 924B 77               ld (hl),a
 208+ 924C 1C               inc e
 209+ 924D 2C               inc l
 210+ 924E 1A               ld a,(de)
 211+ 924F 77               ld (hl),a
 212+ 9250 1C               inc e
 213+ 9251
 214+ 9251 E1               pop hl
 215+ 9252 1A               ld a,(de)
 216+ 9253 77               ld (hl),a
 217+ 9254 1C               inc e
 218+ 9255 2C               inc l
 219+ 9256 1A               ld a,(de)
 220+ 9257 77               ld (hl),a
 221+ 9258 1C               inc e
 222+ 9259 2C               inc l
 223+ 925A 1A               ld a,(de)
 224+ 925B 77               ld (hl),a
 225+ 925C 1C               inc e
 226+ 925D
 227+ 925D E1               pop hl
 228+ 925E 1A               ld a,(de)
 229+ 925F 77               ld (hl),a
 230+ 9260 1C               inc e
 231+ 9261 2C               inc l
 232+ 9262 1A               ld a,(de)
 233+ 9263 77               ld (hl),a
 234+ 9264 1C               inc e
 235+ 9265 2C               inc l
 236+ 9266 1A               ld a,(de)
 237+ 9267 77               ld (hl),a
 238+ 9268 1C               inc e
 239+ 9269
 240+ 9269 E1               pop hl
 241+ 926A 1A               ld a,(de)
 242+ 926B 77               ld (hl),a
 243+ 926C 1C               inc e
 244+ 926D 2C               inc l
 245+ 926E 1A               ld a,(de)
 246+ 926F 77               ld (hl),a
 247+ 9270 1C               inc e
 248+ 9271 2C               inc l
 249+ 9272 1A               ld a,(de)
 250+ 9273 77               ld (hl),a
 251+ 9274 1C               inc e
 252+ 9275
 253+ 9275 E1               pop hl
 254+ 9276 1A               ld a,(de)
 255+ 9277 77               ld (hl),a
 256+ 9278 1C               inc e
 257+ 9279 2C               inc l
 258+ 927A 1A               ld a,(de)
 259+ 927B 77               ld (hl),a
 260+ 927C 1C               inc e
 261+ 927D 2C               inc l
 262+ 927E 1A               ld a,(de)
 263+ 927F 77               ld (hl),a
 264+ 9280 1C               inc e
 265+ 9281
 266+ 9281 E1               pop hl
 267+ 9282 1A               ld a,(de)
 268+ 9283 77               ld (hl),a
 269+ 9284 1C               inc e
 270+ 9285 2C               inc l
 271+ 9286 1A               ld a,(de)
 272+ 9287 77               ld (hl),a
 273+ 9288 1C               inc e
 274+ 9289 2C               inc l
 275+ 928A 1A               ld a,(de)
 276+ 928B 77               ld (hl),a
 277+ 928C 1C               inc e
 278+ 928D
 279+ 928D E1               pop hl
 280+ 928E 1A               ld a,(de)
 281+ 928F 77               ld (hl),a
 282+ 9290 1C               inc e
 283+ 9291 2C               inc l
 284+ 9292 1A               ld a,(de)
 285+ 9293 77               ld (hl),a
 286+ 9294 1C               inc e
 287+ 9295 2C               inc l
 288+ 9296 1A               ld a,(de)
 289+ 9297 77               ld (hl),a
 290+ 9298 1C               inc e
 291+ 9299
 292+ 9299 E1               pop hl
 293+ 929A 1A               ld a,(de)
 294+ 929B 77               ld (hl),a
 295+ 929C 1C               inc e
 296+ 929D 2C               inc l
 297+ 929E 1A               ld a,(de)
 298+ 929F 77               ld (hl),a
 299+ 92A0 1C               inc e
 300+ 92A1 2C               inc l
 301+ 92A2 1A               ld a,(de)
 302+ 92A3 77               ld (hl),a
 303+ 92A4 1C               inc e
 304+ 92A5
 305+ 92A5 E1               pop hl
 306+ 92A6 1A               ld a,(de)
 307+ 92A7 77               ld (hl),a
 308+ 92A8 1C               inc e
 309+ 92A9 2C               inc l
 310+ 92AA 1A               ld a,(de)
 311+ 92AB 77               ld (hl),a
 312+ 92AC 1C               inc e
 313+ 92AD 2C               inc l
 314+ 92AE 1A               ld a,(de)
 315+ 92AF 77               ld (hl),a
 316+ 92B0 1C               inc e
 317+ 92B1
 318+ 92B1 E1               pop hl
 319+ 92B2 1A               ld a,(de)
 320+ 92B3 77               ld (hl),a
 321+ 92B4 1C               inc e
 322+ 92B5 2C               inc l
 323+ 92B6 1A               ld a,(de)
 324+ 92B7 77               ld (hl),a
 325+ 92B8 1C               inc e
 326+ 92B9 2C               inc l
 327+ 92BA 1A               ld a,(de)
 328+ 92BB 77               ld (hl),a
 329+ 92BC 1C               inc e
 330+ 92BD
 331+ 92BD E1               pop hl
 332+ 92BE 1A               ld a,(de)
 333+ 92BF 77               ld (hl),a
 334+ 92C0 1C               inc e
 335+ 92C1 2C               inc l
 336+ 92C2 1A               ld a,(de)
 337+ 92C3 77               ld (hl),a
 338+ 92C4 1C               inc e
 339+ 92C5 2C               inc l
 340+ 92C6 1A               ld a,(de)
 341+ 92C7 77               ld (hl),a
 342+ 92C8 1C               inc e
 343+ 92C9
 344+ 92C9 E1               pop hl
 345+ 92CA 1A               ld a,(de)
 346+ 92CB 77               ld (hl),a
 347+ 92CC 1C               inc e
 348+ 92CD 2C               inc l
 349+ 92CE 1A               ld a,(de)
 350+ 92CF 77               ld (hl),a
 351+ 92D0 1C               inc e
 352+ 92D1 2C               inc l
 353+ 92D2 1A               ld a,(de)
 354+ 92D3 77               ld (hl),a
 355+ 92D4 1C               inc e
 356+ 92D5
 357+ 92D5 E1               pop hl
 358+ 92D6 1A               ld a,(de)
 359+ 92D7 77               ld (hl),a
 360+ 92D8 1C               inc e
 361+ 92D9 2C               inc l
 362+ 92DA 1A               ld a,(de)
 363+ 92DB 77               ld (hl),a
 364+ 92DC 1C               inc e
 365+ 92DD 2C               inc l
 366+ 92DE 1A               ld a,(de)
 367+ 92DF 77               ld (hl),a
 368+ 92E0 1C               inc e
 369+ 92E1
 370+ 92E1 E1               pop hl
 371+ 92E2 1A               ld a,(de)
 372+ 92E3 77               ld (hl),a
 373+ 92E4 1C               inc e
 374+ 92E5 2C               inc l
 375+ 92E6 1A               ld a,(de)
 376+ 92E7 77               ld (hl),a
 377+ 92E8 1C               inc e
 378+ 92E9 2C               inc l
 379+ 92EA 1A               ld a,(de)
 380+ 92EB 77               ld (hl),a
 381+ 92EC 1C               inc e
 382+ 92ED
 383+ 92ED E1               pop hl
 384+ 92EE 1A               ld a,(de)
 385+ 92EF 77               ld (hl),a
 386+ 92F0 1C               inc e
 387+ 92F1 2C               inc l
 388+ 92F2 1A               ld a,(de)
 389+ 92F3 77               ld (hl),a
 390+ 92F4 1C               inc e
 391+ 92F5 2C               inc l
 392+ 92F6 1A               ld a,(de)
 393+ 92F7 77               ld (hl),a
 394+ 92F8 1C               inc e
 395+ 92F9
 396+ 92F9 E1               pop hl
 397+ 92FA 1A               ld a,(de)
 398+ 92FB 77               ld (hl),a
 399+ 92FC 1C               inc e
 400+ 92FD 2C               inc l
 401+ 92FE 1A               ld a,(de)
 402+ 92FF 77               ld (hl),a
 403+ 9300 1C               inc e
 404+ 9301 2C               inc l
 405+ 9302 1A               ld a,(de)
 406+ 9303 77               ld (hl),a
 407+ 9304 1C               inc e
 408+ 9305
 409+ 9305 ED 7B DD 89      ld sp,(Stack)
 410+ 9309
 411+ 9309 C9               ret
 412+ 930A
 413+ 930A              ; ---------------------------------------------------
 414+ 930A
 415+ 930A ED 73 DD 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 930E FD F9        	ld sp,iy
 417+ 9310
 418+ 9310              ; >>>
 419+ 9310
 420+ 9310 06 10            ld b,16
 421+ 9312 D1           1 pop de
 422+ 9313 7A           	ld a,d
 423+ 9314 AE           	xor (hl)
 424+ 9315 77           	ld (hl),a
 425+ 9316 24           	inc h
 426+ 9317 7C               ld a,h
 427+ 9318 E6 07            and 7
 428+ 931A 20 0C            jr nz,2F
 429+ 931C 7D               ld a,l
 430+ 931D C6 20            add a,$20
 431+ 931F 6F               ld l,a
 432+ 9320 38 06            jr c,2F
 433+ 9322 7C               ld a,h
 434+ 9323 D6 08            sub 8
 435+ 9325 67               ld h,a
 436+ 9326 18 00            jr 2F
 437+ 9328 7C           2 ld a,h
 438+ 9329 FE 58            cp $58
 439+ 932B 28 02            jr z,3F
 440+ 932D 10 E3            djnz 1B
 441+ 932F ED 7B DD 89  3 ld sp,(Stack)
 442+ 9333 C9           	ret
 443+ 9334
 444+ 9334 ED 73 DD 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 9338 FD F9        	ld sp,iy
 446+ 933A
 447+ 933A              ; >>>
 448+ 933A
 449+ 933A 06 10            ld b,16
 450+ 933C D1           1 pop de
 451+ 933D 7B           	ld a,e
 452+ 933E AE           	xor (hl)
 453+ 933F 77           	ld (hl),a
 454+ 9340 24           	inc h
 455+ 9341 7C               ld a,h
 456+ 9342 E6 07            and 7
 457+ 9344 20 0C            jr nz,2F
 458+ 9346 7D               ld a,l
 459+ 9347 C6 20            add a,$20
 460+ 9349 6F               ld l,a
 461+ 934A 38 06            jr c,2F
 462+ 934C 7C               ld a,h
 463+ 934D D6 08            sub 8
 464+ 934F 67               ld h,a
 465+ 9350 18 00            jr 2F
 466+ 9352 7C           2 ld a,h
 467+ 9353 FE 58            cp $58
 468+ 9355 28 02            jr z,3F
 469+ 9357 10 E3            djnz 1B
 470+ 9359 ED 7B DD 89  3 ld sp,(Stack)
 471+ 935D C9           	ret
 472+ 935E
 473+ 935E              ; ---------------------------------------------------
 474+ 935E
 475+ 935E ED 73 DD 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 9362 FD F9        	ld sp,iy
 477+ 9364 06 08            ld b,8
 478+ 9366 D1           1 pop de
 479+ 9367 7A           	ld a,d
 480+ 9368 AE           	xor (hl)
 481+ 9369 77           	ld (hl),a
 482+ 936A 23           	inc hl
 483+ 936B D1           	pop de
 484+ 936C 7B           	ld a,e
 485+ 936D AE           	xor (hl)
 486+ 936E 77           	ld (hl),a
 487+ 936F 2B           	dec hl
 488+ 9370 24            	inc h
 489+ 9371 7C               ld a,h
 490+ 9372 E6 07            and 7
 491+ 9374 20 0A            jr nz,2F
 492+ 9376 7D               ld a,l
 493+ 9377 C6 20            add a,$20
 494+ 9379 6F               ld l,a
 495+ 937A 38 04            jr c,2F
 496+ 937C 7C               ld a,h
 497+ 937D D6 08            sub 8
 498+ 937F 67               ld h,a
 499+ 9380 7C           2 ld a,h
 500+ 9381 FE 58            cp $58
 501+ 9383 28 20            jr z,4F
 502+ 9385 D1               pop de
 503+ 9386 7B           	ld a,e
 504+ 9387 AE           	xor (hl)
 505+ 9388 77           	ld (hl),a
 506+ 9389 23           	inc hl
 507+ 938A 7A           	ld a,d
 508+ 938B AE           	xor (hl)
 509+ 938C 77           	ld (hl),a
 510+ 938D 2B           	dec hl
 511+ 938E 24           	inc h
 512+ 938F 7C               ld a,h
 513+ 9390 E6 07            and 7
 514+ 9392 20 0A            jr nz,3F
 515+ 9394 7D               ld a,l
 516+ 9395 C6 20            add a,$20
 517+ 9397 6F               ld l,a
 518+ 9398 38 04            jr c,3F
 519+ 939A 7C               ld a,h
 520+ 939B D6 08            sub 8
 521+ 939D 67               ld h,a
 522+ 939E 7C           3 ld a,h
 523+ 939F FE 58            cp $58
 524+ 93A1 28 02            jr z,4F
 525+ 93A3 10 C1            djnz 1B
 526+ 93A5 ED 7B DD 89  4 ld sp,(Stack)
 527+ 93A9 C9           	ret
 528+ 93AA
 529+ 93AA ED 73 DD 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 93AE FD F9        	ld sp,iy
 531+ 93B0 06 08            ld b,8
 532+ 93B2 D1           1 pop de
 533+ 93B3 D1           	pop de
 534+ 93B4 7B           	ld a,e
 535+ 93B5 AE           	xor (hl)
 536+ 93B6 77           	ld (hl),a
 537+ 93B7 24            	inc h
 538+ 93B8 7C               ld a,h
 539+ 93B9 E6 07            and 7
 540+ 93BB 20 0A            jr nz,2F
 541+ 93BD 7D               ld a,l
 542+ 93BE C6 20            add a,$20
 543+ 93C0 6F               ld l,a
 544+ 93C1 38 04            jr c,2F
 545+ 93C3 7C               ld a,h
 546+ 93C4 D6 08            sub 8
 547+ 93C6 67               ld h,a
 548+ 93C7 7C           2 ld a,h
 549+ 93C8 FE 58            cp $58
 550+ 93CA 28 1B            jr z,4F
 551+ 93CC D1               pop de
 552+ 93CD 7A           	ld a,d
 553+ 93CE AE           	xor (hl)
 554+ 93CF 77           	ld (hl),a
 555+ 93D0 24           	inc h
 556+ 93D1 7C               ld a,h
 557+ 93D2 E6 07            and 7
 558+ 93D4 20 0A            jr nz,3F
 559+ 93D6 7D               ld a,l
 560+ 93D7 C6 20            add a,$20
 561+ 93D9 6F               ld l,a
 562+ 93DA 38 04            jr c,3F
 563+ 93DC 7C               ld a,h
 564+ 93DD D6 08            sub 8
 565+ 93DF 67               ld h,a
 566+ 93E0 7C           3 ld a,h
 567+ 93E1 FE 58            cp $58
 568+ 93E3 28 02            jr z,4F
 569+ 93E5 10 CB            djnz 1B
 570+ 93E7 ED 7B DD 89  4 ld sp,(Stack)
 571+ 93EB C9           	ret
 572+ 93EC
 573+ 93EC ED 73 DD 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 93F0 FD F9        	ld sp,iy
 575+ 93F2 06 08            ld b,8
 576+ 93F4 D1           1 pop de
 577+ 93F5 7B           	ld a,e
 578+ 93F6 AE           	xor (hl)
 579+ 93F7 77           	ld (hl),a
 580+ 93F8 23           	inc hl
 581+ 93F9 7A           	ld a,d
 582+ 93FA AE           	xor (hl)
 583+ 93FB 77           	ld (hl),a
 584+ 93FC 2B           	dec hl
 585+ 93FD 24             	inc h
 586+ 93FE 7C               ld a,h
 587+ 93FF E6 07            and 7
 588+ 9401 20 0A            jr nz,2F
 589+ 9403 7D               ld a,l
 590+ 9404 C6 20            add a,$20
 591+ 9406 6F               ld l,a
 592+ 9407 38 04            jr c,2F
 593+ 9409 7C               ld a,h
 594+ 940A D6 08            sub 8
 595+ 940C 67               ld h,a
 596+ 940D 7C           2 ld a,h
 597+ 940E FE 58            cp $58
 598+ 9410 28 21            jr z,4F
 599+ 9412 D1               pop de
 600+ 9413 7A           	ld a,d
 601+ 9414 AE           	xor (hl)
 602+ 9415 77           	ld (hl),a
 603+ 9416 23           	inc hl
 604+ 9417 D1               pop de
 605+ 9418 7B           	ld a,e
 606+ 9419 AE           	xor (hl)
 607+ 941A 77           	ld (hl),a
 608+ 941B 2B           	dec hl
 609+ 941C 24           	inc h
 610+ 941D 7C               ld a,h
 611+ 941E E6 07            and 7
 612+ 9420 20 0A            jr nz,3F
 613+ 9422 7D               ld a,l
 614+ 9423 C6 20            add a,$20
 615+ 9425 6F               ld l,a
 616+ 9426 38 04            jr c,3F
 617+ 9428 7C               ld a,h
 618+ 9429 D6 08            sub 8
 619+ 942B 67               ld h,a
 620+ 942C 7C           3 ld a,h
 621+ 942D FE 58            cp $58
 622+ 942F 28 02            jr z,4F
 623+ 9431 10 C1            djnz 1B
 624+ 9433 ED 7B DD 89  4 ld sp,(Stack)
 625+ 9437 C9           	ret
 626+ 9438
 627+ 9438 ED 73 DD 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 943C FD F9        	ld sp,iy
 629+ 943E 06 08            ld b,8
 630+ 9440 D1           1 pop de
 631+ 9441 7B           	ld a,e
 632+ 9442 AE           	xor (hl)
 633+ 9443 77           	ld (hl),a
 634+ 9444 24            	inc h
 635+ 9445 7C               ld a,h
 636+ 9446 E6 07            and 7
 637+ 9448 20 0A            jr nz,2F
 638+ 944A 7D               ld a,l
 639+ 944B C6 20            add a,$20
 640+ 944D 6F               ld l,a
 641+ 944E 38 04            jr c,2F
 642+ 9450 7C               ld a,h
 643+ 9451 D6 08            sub 8
 644+ 9453 67               ld h,a
 645+ 9454 7C           2 ld a,h
 646+ 9455 FE 58            cp $58
 647+ 9457 28 1C            jr z,4F
 648+ 9459 D1               pop de
 649+ 945A 7A           	ld a,d
 650+ 945B AE           	xor (hl)
 651+ 945C 77           	ld (hl),a
 652+ 945D 24           	inc h
 653+ 945E 7C               ld a,h
 654+ 945F E6 07            and 7
 655+ 9461 20 0A            jr nz,3F
 656+ 9463 7D               ld a,l
 657+ 9464 C6 20            add a,$20
 658+ 9466 6F               ld l,a
 659+ 9467 38 04            jr c,3F
 660+ 9469 7C               ld a,h
 661+ 946A D6 08            sub 8
 662+ 946C 67               ld h,a
 663+ 946D 7C           3 ld a,h
 664+ 946E FE 58            cp $58
 665+ 9470 28 03            jr z,4F
 666+ 9472 D1               pop de
 667+ 9473 10 CB            djnz 1B
 668+ 9475 ED 7B DD 89  4 ld sp,(Stack)
 669+ 9479 C9           	ret
 670+ 947A
 671+ 947A              ; ---------------------------------------------------
 672+ 947A              ;
 673+ 947A              ;   27/02/23
 674+ 947A              ;
 675+ 947A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 947A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 947A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 947A
 679+ 947A ED 73 DD 89  Pinta_Disparo ld (Stack),sp
 680+ 947E FD F9            ld sp,iy
 681+ 9480 06 03            ld b,3
 682+ 9482 D1           1 pop de
 683+ 9483 7B               ld a,e
 684+ 9484 AE               xor (hl)
 685+ 9485 77               ld (hl),a
 686+ 9486 23               inc hl
 687+ 9487 7A               ld a,d
 688+ 9488 AE               xor (hl)
 689+ 9489 77               ld (hl),a
 690+ 948A 2B               dec hl
 691+ 948B
 692+ 948B 24               inc h
 693+ 948C 7C               ld a,h
 694+ 948D E6 07            and 7
 695+ 948F 20 0A            jr nz,2F
 696+ 9491 7D               ld a,l
 697+ 9492 C6 20            add a,$20
 698+ 9494 6F               ld l,a
 699+ 9495 38 04            jr c,2F
 700+ 9497 7C               ld a,h
 701+ 9498 D6 08            sub 8
 702+ 949A 67               ld h,a
 703+ 949B 7C           2 ld a,h
 704+ 949C FE 58            cp $58
 705+ 949E 28 02            jr z,3F
 706+ 94A0
 707+ 94A0 10 E0            djnz 1B
 708+ 94A2 ED 7B DD 89  3 ld sp,(Stack)
 709+ 94A6 C9               ret
 710+ 94A7
# file closed: Rutinas_de_impresion_sprites.asm
1840  94A7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94A7
   2+ 94A7              ; ******************************************************************************************************************************************************************************************
   3+ 94A7              ;
   4+ 94A7              ;   20/05/23
   5+ 94A7              ;
   6+ 94A7              ;	Recompone_posicion_inicio
   7+ 94A7              ;
   8+ 94A7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 94A7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 94A7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 94A7              ;	_ a una u otra rutina.
  12+ 94A7
  13+ 94A7              Recompone_posicion_inicio
  14+ 94A7
  15+ 94A7 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 94AA 7D           	ld a,l
  17+ 94AB E6 1F        	and $1f
  18+ 94AD 28 16        	jr z,1F
  19+ 94AF
  20+ 94AF FE 1F        	cp $1f
  21+ 94B1 28 0D        	jr z,3F
  22+ 94B3
  23+ 94B3 21 B2 89     	ld hl,Ctrl_2
  24+ 94B6 CB C6        	set 0,(hl)
  25+ 94B8 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 94BB 22 CD 89     	ld (Repone_puntero_objeto),hl
  27+ 94BE 18 08        	jr 2F
  28+ 94C0
  29+ 94C0 CD 6E 96     3 call Mov_left
  30+ 94C3 18 03        	jr 2F
  31+ 94C5
  32+ 94C5 CD 4B 95     1 call Mov_right
  33+ 94C8 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 94CB 22 8F 89     	ld (Puntero_objeto),hl
  35+ 94CE C9           	ret
  36+ 94CF
  37+ 94CF              ; ******************************************************************************************************************************************************************************************
  38+ 94CF              ;
  39+ 94CF              ;   27/05/23
  40+ 94CF              ;
  41+ 94CF              ;	Mov_down
  42+ 94CF              ;
  43+ 94CF              ; 	Mueve el Sprite X px hacia abajo.
  44+ 94CF              ;
  45+ 94CF              ;
  46+ 94CF              Mov_down
  47+ 94CF
  48+ 94CF CD 39 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 94D2              ;																	; _ repone (Puntero_objeto).
  50+ 94D2 21 AD 89     	ld hl,Ctrl_0
  51+ 94D5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94D7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94D7              ; 																	; _ en el caso de que no lo haya.
  54+ 94D7 3A B7 89     	ld a,(Vel_down)
  55+ 94DA 47           	ld b,a
  56+ 94DB 2A 8D 89         ld hl,(Posicion_actual)
  57+ 94DE CD AA 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 94E1 E6 02        	and 2
  59+ 94E3 28 17        	jr z,1F
  60+ 94E5
  61+ 94E5              ; Nos encontramos en el último tercio de pantalla.
  62+ 94E5              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 94E5
  64+ 94E5 7C           	ld a,h
  65+ 94E6 FE 57        	cp $57
  66+ 94E8 20 12        	jr nz,1F
  67+ 94EA
  68+ 94EA 7D           	ld a,l
  69+ 94EB C6 20        	add $20
  70+ 94ED 30 0D        	jr nc,1F
  71+ 94EF
  72+ 94EF              ; ------------------------------
  73+ 94EF              ;
  74+ 94EF              ;	12/01/24
  75+ 94EF
  76+ 94EF              ;	call Reaparece_arriba
  77+ 94EF CD FB 97     	call Reinicio
  78+ 94F2
  79+ 94F2              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94F2
  81+ 94F2 3A ED 89     	ld a,(Ctrl_3)
  82+ 94F5 CB CF        	set 1,a
  83+ 94F7 32 ED 89     	ld (Ctrl_3),a
  84+ 94FA
  85+ 94FA 18 08        	jr 3F
  86+ 94FC              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 94FC              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 94FC              ; ------------------------------
  89+ 94FC
  90+ 94FC CD 31 91     1 call NextScan
  91+ 94FF 22 8D 89     	ld (Posicion_actual),hl
  92+ 9502 10 DA            djnz 2B
  93+ 9504 CD C8 99     3 call Genera_coordenadas
  94+ 9507 C9           	ret
  95+ 9508
  96+ 9508              ; ******************************************************************************************************************************************************************************************
  97+ 9508              ;
  98+ 9508              ;   27/05/23
  99+ 9508              ;
 100+ 9508              ;	Mov_up
 101+ 9508              ;
 102+ 9508              ; 	Mueve el Sprite hacia arriba.
 103+ 9508              ;
 104+ 9508              ;
 105+ 9508              Mov_up
 106+ 9508
 107+ 9508 CD 39 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 950B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 950B 21 AD 89     	ld hl,Ctrl_0
 110+ 950E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9510              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9510              ; 																		; _ en el caso de que no lo haya.
 113+ 9510 3A B6 89     	ld a,(Vel_up)
 114+ 9513 47           	ld b,a
 115+ 9514 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 9517 CD AA 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 951A A7           	and a
 118+ 951B 20 10        	jr nz,1F
 119+ 951D
 120+ 951D              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 951D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 951D
 123+ 951D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 951E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9520 20 0B            jr nz,1F
 126+ 9522 7D               ld a,l
 127+ 9523 D6 20            sub $20
 128+ 9525 30 06            jr nc,1F
 129+ 9527 25               dec h
 130+ 9528
 131+ 9528              ; -----------------------------
 132+ 9528 CD DC 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 952B              ;	call Reinicio
 134+ 952B              ; -----------------------------
 135+ 952B
 136+ 952B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 952D CD 40 91     1 call PreviousScan
 138+ 9530 22 8D 89     	ld (Posicion_actual),hl
 139+ 9533 10 E2            djnz 3B
 140+ 9535 CD C8 99     2 call Genera_coordenadas
 141+ 9538 C9           	ret
 142+ 9539
 143+ 9539              ; -----------------------------
 144+ 9539              ;
 145+ 9539              ;	27/5/23
 146+ 9539              ;
 147+ 9539              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9539              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9539              ;
 150+ 9539              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9539              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9539              ;
 153+ 9539              ;	Modifica: A y (Puntero_objeto).
 154+ 9539
 155+ 9539 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 953C CB 47        	bit 0,a
 157+ 953E C8           	ret z
 158+ 953F CB 87        	res 0,a
 159+ 9541 32 B2 89     	ld (Ctrl_2),a
 160+ 9544 2A CD 89     	ld hl,(Repone_puntero_objeto)
 161+ 9547 22 8F 89     	ld (Puntero_objeto),hl
 162+ 954A C9           	ret
 163+ 954B
 164+ 954B              ; ******************************************************************************************************************************************************************************************
 165+ 954B              ;
 166+ 954B              ;	19/10/22
 167+ 954B              ;
 168+ 954B              ;	Mov_right.
 169+ 954B              ;
 170+ 954B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 954B              ;
 172+ 954B
 173+ 954B 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 954E CB 77        	bit 6,a
 175+ 9550 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9552
 177+ 9552 CD 8A 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9555 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9556
 180+ 9556 21 AD 89     	ld hl,Ctrl_0
 181+ 9559 CB E6        	set 4,(hl)
 182+ 955B 18 52        	jr 8F
 183+ 955D
 184+ 955D 21 AD 89     10 ld hl,Ctrl_0
 185+ 9560 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9562              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9562              ; 																	; _ en el caso de que no lo haya.
 188+ 9562 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9565 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9567 20 46        	jr nz,8F
 191+ 9569
 192+ 9569 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 956C A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 956D 28 40        	jr z,8F
 195+ 956F
 196+ 956F              ; ---------- ---------- ----------
 197+ 956F              ;
 198+ 956F              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 956F
 200+ 956F 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9572 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9574 28 11        	jr z,1F
 203+ 9576 38 06        	jr c,6F
 204+ 9578 FE 04        	cp 4
 205+ 957A 28 14        	jr z,7F
 206+ 957C 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 957E
 208+ 957E              ; ---------- ---------- ----------
 209+ 957E              ;
 210+ 957E              ; Perfiles de velocidad
 211+ 957E              ;
 212+ 957E
 213+ 957E 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9581 FE FE        	cp $fe
 215+ 9583 20 2A        	jr nz,8F
 216+ 9585 18 10        	jr 3F
 217+ 9587 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 958A FE FD        	cp $fd
 219+ 958C 20 21        	jr nz,8F
 220+ 958E 18 07        	jr 3F
 221+ 9590 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9593 FE FB        	cp $fb
 223+ 9595 20 18        	jr nz,8F
 224+ 9597
 225+ 9597              ; ---------- ---------- ----------
 226+ 9597
 227+ 9597              3
 228+ 9597 CD CA 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 959A              ;	call Reinicio
 230+ 959A
 231+ 959A              ; ---------- ---------- ----------
 232+ 959A              ;
 233+ 959A              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 959A
 235+ 959A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 959C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 959D CD B6 95     	call DESPLZ_DER
 238+ 95A0 C1           	pop bc
 239+ 95A1 10 F9        	djnz 5B
 240+ 95A3 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 95A6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 95A7 22 8D 89     	ld (Posicion_actual),hl
 243+ 95AA CD C8 99     	call Genera_coordenadas
 244+ 95AD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 95AF
 246+ 95AF              ; ---------- ---------- ----------
 247+ 95AF
 248+ 95AF 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 95B2 CD B6 95     	call DESPLZ_DER
 250+ 95B5 C9           2 ret
 251+ 95B6
 252+ 95B6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 95B6              ;
 254+ 95B6              ;	22/9/22
 255+ 95B6              ;
 256+ 95B6
 257+ 95B6 CD C5 95     DESPLZ_DER call Desplaza_derecha
 258+ 95B9 CD 11 96         call modifica_parametros_1er_DESPLZ_2
 259+ 95BC CD 3A 96         call Ciclo_completo
 260+ 95BF 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 95C2 CB FE        	set 7,(hl)
 262+ 95C4 C9           	ret
 263+ 95C5
 264+ 95C5              ; ******************************************************************************************************************************************************************************************
 265+ 95C5              ;	15/02/23
 266+ 95C5              ;
 267+ 95C5
 268+ 95C5 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 95C8 47           	ld b,a
 270+ 95C9 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 95CC 23           1 inc hl
 272+ 95CD 23           	inc hl
 273+ 95CE 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 95D0 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 95D3 CD A3 8B     	call Extrae_address
 276+ 95D6 22 8F 89     	ld (Puntero_objeto),hl
 277+ 95D9
 278+ 95D9              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95D9
 280+ 95D9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95D9              ; Cuántos movimientos hemos hecho ??
 282+ 95D9              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95D9
 284+ 95D9 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 95DC EB           	ex de,hl
 286+ 95DD A7           	and a
 287+ 95DE ED 52        	sbc hl,de
 288+ 95E0 CB 3D        	srl l
 289+ 95E2 3E 08        6 ld a,8
 290+ 95E4 95           	sub l
 291+ 95E5 30 1E        	jr nc,3F
 292+ 95E7
 293+ 95E7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 95E7              ; B="0".
 295+ 95E7
 296+ 95E7 04           4 inc b
 297+ 95E8 3C           	inc a
 298+ 95E9 20 FC        	jr nz,4B
 299+ 95EB 78           	ld a,b
 300+ 95EC 08           	ex af,af
 301+ 95ED 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 95F0 23           5 inc hl
 303+ 95F1 23           	inc hl
 304+ 95F2 10 FC        	djnz 5B
 305+ 95F4 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95F7 CD A3 8B     	call Extrae_address
 307+ 95FA 22 8F 89     	ld (Puntero_objeto),hl
 308+ 95FD
 309+ 95FD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 95FD              ; _(Posicion_actual).
 311+ 95FD
 312+ 95FD 21 8D 89     	ld hl,Posicion_actual
 313+ 9600 34           	inc (hl)
 314+ 9601 08               ex af,af
 315+ 9602 6F           	ld l,a
 316+ 9603 18 DD        	jr 6B
 317+ 9605
 318+ 9605              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9605
 320+ 9605 47           3 ld b,a
 321+ 9606 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 9609 23           2 inc hl
 323+ 960A 23           	inc hl
 324+ 960B 10 FC        	djnz 2B
 325+ 960D 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9610 C9           8 ret
 327+ 9611
 328+ 9611              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9611              ;
 330+ 9611              ;	24/7/22
 331+ 9611              ;
 332+ 9611              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9611              ;
 334+ 9611              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9611              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9611              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9611
 338+ 9611 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9614 A7           	and a
 340+ 9615 20 1F        	jr nz,1F
 341+ 9617 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9619 32 93 89         ld (CTRL_DESPLZ),a
 343+ 961C
 344+ 961C 21 8C 89     	ld hl,Columns
 345+ 961F 34           	inc (hl)
 346+ 9620 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 9623 E6 01        	and 1
 348+ 9625 28 0F        	jr z,1F
 349+ 9627 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 962A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 962B 22 8D 89     	ld (Posicion_actual),hl
 352+ 962E CD C8 99     	call Genera_coordenadas
 353+ 9631 CD 96 97     	call Inc_CTRL_DESPLZ
 354+ 9634 18 03        	jr 2F
 355+ 9636 CD 96 97     1 call Inc_CTRL_DESPLZ
 356+ 9639 C9           2 ret
 357+ 963A
 358+ 963A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 963A              ;
 360+ 963A              ;	24/7/22
 361+ 963A              ;
 362+ 963A              ;	Ciclo_completo.
 363+ 963A              ;
 364+ 963A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 963A              ;
 366+ 963A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 963A              ; 	Decrementamos (Columns).
 368+ 963A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 963A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 963A
 371+ 963A
 372+ 963A 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 963D FE FF        	cp $ff
 374+ 963F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9641 E6 F0        	and $f0
 376+ 9643 20 28        	jr nz,3F
 377+ 9645
 378+ 9645              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9645
 380+ 9645 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 9648 47           	ld b,a
 382+ 9649 3E F8        	ld a,$f8
 383+ 964B 80           	add b
 384+ 964C 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 964F 18 1C        	jr 3F
 386+ 9651 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9654 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9655 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9656 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 9659 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 965C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 965E 20 0A        	jr nz,2F
 393+ 9660 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9663 23           	inc hl
 395+ 9664 22 8D 89     	ld (Posicion_actual),hl
 396+ 9667 CD C8 99     	call Genera_coordenadas
 397+ 966A
 398+ 966A              ; Inicia el puntero de Sprite.
 399+ 966A
 400+ 966A CD B8 8B     2 call Inicia_puntero_objeto_der
 401+ 966D C9           3 ret
 402+ 966E
 403+ 966E              ; ******************************************************************************************************************************************************************************************
 404+ 966E              ;
 405+ 966E              ;	15/02/23
 406+ 966E              ;
 407+ 966E              ;	Mov_left.
 408+ 966E              ;
 409+ 966E              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 966E              ;
 411+ 966E              Mov_left
 412+ 966E
 413+ 966E 21 AD 89     	ld hl,Ctrl_0
 414+ 9671 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9673              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9673              ; 																	; _ en el caso de que no lo haya.
 417+ 9673 3A AD 89     	ld a,(Ctrl_0)
 418+ 9676 CB 77        	bit 6,a
 419+ 9678 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 967A
 421+ 967A CD 90 97     	call Stop_Amadeus_left
 422+ 967D C8           	ret z
 423+ 967E 20 4A        	jr nz,8F
 424+ 9680
 425+ 9680 3A 91 89     11 ld a,(Coordenada_X)
 426+ 9683 A7           	and a
 427+ 9684 20 44        	jr nz,8F
 428+ 9686
 429+ 9686 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9689 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 968A 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 968C
 433+ 968C              ; ---------- ---------- ----------
 434+ 968C
 435+ 968C 3A B4 89     	ld a,(Vel_left)
 436+ 968F FE 02        	cp 2
 437+ 9691 28 0F        	jr z,1F
 438+ 9693 38 04        	jr c,6F
 439+ 9695 FE 04        	cp 4
 440+ 9697 28 12        	jr z,7F
 441+ 9699
 442+ 9699              ; ---------- ---------- ----------
 443+ 9699
 444+ 9699 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 969C FE F8        	cp $f8
 446+ 969E 20 2A        	jr nz,8F
 447+ 96A0 18 10        	jr 4F
 448+ 96A2 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 96A5 FE F9        	cp $f9
 450+ 96A7 20 21        	jr nz,8F
 451+ 96A9 18 07        	jr 4F
 452+ 96AB 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 96AE FE FB        	cp $fb
 454+ 96B0 20 18        	jr nz,8F
 455+ 96B2
 456+ 96B2              ; ---------- ---------- ----------
 457+ 96B2
 458+ 96B2              4
 459+ 96B2 CD B8 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 96B5              ;	call Reinicio
 461+ 96B5
 462+ 96B5              ; ---------- ---------- ----------
 463+ 96B5
 464+ 96B5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 96B7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 96B8
 467+ 96B8              ;	ld hl,(Indice_Sprite_izq)
 468+ 96B8              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 96B8
 470+ 96B8 CD D1 96     	call DESPLZ_IZQ
 471+ 96BB C1           	pop bc
 472+ 96BC 10 F9        	djnz 5B
 473+ 96BE 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 96C1 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 96C2 22 8D 89     	ld (Posicion_actual),hl
 476+ 96C5 CD C8 99     	call Genera_coordenadas
 477+ 96C8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 96CA
 479+ 96CA              ; ---------- ---------- ----------
 480+ 96CA
 481+ 96CA              ; Movemos, no hay recolocación.
 482+ 96CA
 483+ 96CA 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 96CD CD D1 96     	call DESPLZ_IZQ
 485+ 96D0 C9           2 ret
 486+ 96D1
 487+ 96D1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 96D1              ;
 489+ 96D1              ;	22/9/22
 490+ 96D1
 491+ 96D1              DESPLZ_IZQ
 492+ 96D1
 493+ 96D1 CD E0 96     	call Desplaza_izquierda
 494+ 96D4 CD 2C 97         call modifica_parametros_1er_DESPLZ
 495+ 96D7 CD 54 97     	call Ciclo_completo_2
 496+ 96DA 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96DD CB BE        	res 7,(hl)
 498+ 96DF C9           	ret
 499+ 96E0
 500+ 96E0              Desplaza_izquierda
 501+ 96E0
 502+ 96E0 3A B4 89     	ld a,(Vel_left)
 503+ 96E3 47           	ld b,a
 504+ 96E4 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 96E7 23           1 inc hl
 506+ 96E8 23           	inc hl
 507+ 96E9 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 96EB 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 96EE CD A3 8B     	call Extrae_address
 510+ 96F1 22 8F 89     	ld (Puntero_objeto),hl
 511+ 96F4
 512+ 96F4              ; Modifica (Puntero_DESPLZ_der).
 513+ 96F4
 514+ 96F4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96F4              ; Cuántos movimientos hemos hecho ??
 516+ 96F4              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96F4
 518+ 96F4 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96F7 EB           	ex de,hl
 520+ 96F8 A7           	and a
 521+ 96F9 ED 52        	sbc hl,de
 522+ 96FB CB 3D        	srl l
 523+ 96FD 3E 08        6 ld a,8
 524+ 96FF 95           	sub l
 525+ 9700 30 1E        	jr nc,3F
 526+ 9702
 527+ 9702              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9702              ; B="0".
 529+ 9702
 530+ 9702 04           4 inc b
 531+ 9703 3C           	inc a
 532+ 9704 20 FC        	jr nz,4B
 533+ 9706 78           	ld a,b
 534+ 9707 08           	ex af,af
 535+ 9708 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 970B 23           5 inc hl
 537+ 970C 23           	inc hl
 538+ 970D 10 FC        	djnz 5B
 539+ 970F 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9712 CD A3 8B     	call Extrae_address
 541+ 9715 22 8F 89     	ld (Puntero_objeto),hl
 542+ 9718
 543+ 9718              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9718              ; _(Posicion_actual).
 545+ 9718
 546+ 9718 21 8D 89     	ld hl,Posicion_actual
 547+ 971B 35           	dec (hl)
 548+ 971C 08           	ex af,af
 549+ 971D 6F           	ld l,a
 550+ 971E 18 DD        	jr 6B
 551+ 9720
 552+ 9720              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9720
 554+ 9720 47           3 ld b,a
 555+ 9721 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 9724 23           2 inc hl
 557+ 9725 23           	inc hl
 558+ 9726 10 FC        	djnz 2B
 559+ 9728 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 972B C9           8 ret
 561+ 972C
 562+ 972C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 972C              ;
 564+ 972C              ;	modifica_parametros_1er_DESPLZ
 565+ 972C              ;
 566+ 972C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 972C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 972C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 972C
 570+ 972C 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 972F A7           	and a
 572+ 9730 20 1E        	jr nz,1F
 573+ 9732 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9733 32 93 89         ld (CTRL_DESPLZ),a
 575+ 9736 21 8C 89     	ld hl,Columns
 576+ 9739 34           	inc (hl)
 577+ 973A 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 973D E6 01        	and 1
 579+ 973F 20 0F        	jr nz,1F
 580+ 9741 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9744 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9745 22 8D 89     	ld (Posicion_actual),hl
 583+ 9748 CD C8 99     	call Genera_coordenadas
 584+ 974B CD A7 97     	call Dec_CTRL_DESPLZ
 585+ 974E 18 03        	jr 2F
 586+ 9750 CD A7 97     1 call Dec_CTRL_DESPLZ
 587+ 9753 C9           2 ret
 588+ 9754
 589+ 9754              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9754
 591+ 9754 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9757 FE F7        	cp $f7
 593+ 9759 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 975B 30 2C        	jr nc,3F
 595+ 975D
 596+ 975D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 975D
 598+ 975D 06 00        	ld b,0
 599+ 975F 04           4 inc b
 600+ 9760 3C           	inc a
 601+ 9761 FE F7        	cp $f7
 602+ 9763 20 FA        	jr nz,4B
 603+ 9765 3E FF        	ld a,$ff
 604+ 9767 90           	sub b
 605+ 9768 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 976B 18 1C        	jr 3F
 607+ 976D
 608+ 976D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 976D
 610+ 976D 21 8C 89     1 ld hl,Columns
 611+ 9770 35           	dec (hl)
 612+ 9771 AF           	xor a
 613+ 9772 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 9775 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 9778 E6 01        	and 1
 616+ 977A 28 0A        	jr z,2F
 617+ 977C 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 977F 2B           	dec hl
 619+ 9780 22 8D 89     	ld (Posicion_actual),hl
 620+ 9783 CD C8 99     	call Genera_coordenadas
 621+ 9786
 622+ 9786              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9786
 624+ 9786 CD CB 8B     2 call Inicia_puntero_objeto_izq
 625+ 9789 C9           3 ret
 626+ 978A
 627+ 978A              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 978A              ;
 629+ 978A              ;	19/10/22
 630+ 978A              ;
 631+ 978A              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 978A              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 978A
 634+ 978A 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 978D FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 978F C9           	ret
 637+ 9790
 638+ 9790              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9790              ;
 640+ 9790              ;	19/10/22
 641+ 9790              ;
 642+ 9790              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9790              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9790
 645+ 9790 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9793 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9795 C9           	ret
 648+ 9796
 649+ 9796              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9796              ;
 651+ 9796              ;	24/7/22
 652+ 9796              ;
 653+ 9796              ;	Inc_CTRL_DESPLZ
 654+ 9796              ;
 655+ 9796              ;
 656+ 9796              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9796
 658+ 9796 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9799 3A B5 89     	ld a,(Vel_right)
 660+ 979C A7           	and a
 661+ 979D 28 06        	jr z,1F
 662+ 979F 47           	ld b,a
 663+ 97A0 34           3 inc (hl)
 664+ 97A1 10 FD        	djnz 3B
 665+ 97A3 18 01        	jr 2F
 666+ 97A5 34           1 inc (hl)
 667+ 97A6 C9           2 ret
 668+ 97A7
 669+ 97A7              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 97A7              ;
 671+ 97A7              ;	5/2/23
 672+ 97A7              ;
 673+ 97A7              ;	Dec_CTRL_DESPLZ
 674+ 97A7              ;
 675+ 97A7              ;
 676+ 97A7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 97A7
 678+ 97A7 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 97AA 3A B4 89     	ld a,(Vel_left)
 680+ 97AD A7           	and a
 681+ 97AE 28 06        	jr z,1F
 682+ 97B0 47           	ld b,a
 683+ 97B1 35           3 dec (hl)
 684+ 97B2 10 FD        	djnz 3B
 685+ 97B4 18 01        	jr 2F
 686+ 97B6 35           1 dec (hl)
 687+ 97B7 C9           2 ret
 688+ 97B8
 689+ 97B8              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 97B8
 691+ 97B8 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 97BB 01 1F 00     	ld bc,31
 693+ 97BE A7           	and a
 694+ 97BF ED 4A        	adc hl,bc
 695+ 97C1 22 8D 89     	ld (Posicion_actual),hl
 696+ 97C4 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 97C7 CB C6        	set 0,(hl)
 698+ 97C9 C9           	ret
 699+ 97CA
 700+ 97CA              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 97CA
 702+ 97CA 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 97CD 01 1F 00     	ld bc,31
 704+ 97D0 A7           	and a
 705+ 97D1 ED 42        	sbc hl,bc
 706+ 97D3 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 97D6 21 AD 89     	ld hl,Ctrl_0
 708+ 97D9 CB CE        	set 1,(hl)
 709+ 97DB C9           	ret
 710+ 97DC
 711+ 97DC              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97DC
 713+ 97DC 24           Reaparece_abajo inc h
 714+ 97DD 01 E0 17     	ld bc,$17e0
 715+ 97E0 A7           	and a
 716+ 97E1 ED 4A        	adc hl,bc
 717+ 97E3 22 8D 89     	ld (Posicion_actual),hl
 718+ 97E6 21 AD 89     	ld hl,Ctrl_0
 719+ 97E9 CB D6        	set 2,(hl)
 720+ 97EB C9           	ret
 721+ 97EC
 722+ 97EC              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 97EC
 724+ 97EC 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 97EF A7           	and a
 726+ 97F0 ED 42        	sbc hl,bc
 727+ 97F2 22 8D 89     	ld (Posicion_actual),hl
 728+ 97F5 21 AD 89     	ld hl,Ctrl_0
 729+ 97F8 CB DE        	set 3,(hl)
 730+ 97FA C9           	ret
 731+ 97FB
 732+ 97FB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 97FB              ;
 734+ 97FB              ;	15/07/23
 735+ 97FB
 736+ 97FB              Reinicio
 737+ 97FB
 738+ 97FB              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 97FB
 740+ 97FB AF           	xor a
 741+ 97FC 21 C4 89     	ld hl,Puntero_indice_mov_bucle
 742+ 97FF CD 1D 98     	call Limpia_contenido_hl
 743+ 9802
 744+ 9802 21 8D 89     	ld hl,Posicion_actual
 745+ 9805 CD 1D 98     	call Limpia_contenido_hl
 746+ 9808
 747+ 9808 CD 66 8C     	call Inicializa_Puntero_indice_mov
 748+ 980B CD E9 98     	call Inicia_Puntero_mov
 749+ 980E
 750+ 980E 21 C6 89     	ld hl,Incrementa_puntero
 751+ 9811 06 05        	ld b,5
 752+ 9813 77           1 ld (hl),a
 753+ 9814 23           	inc hl
 754+ 9815 10 FC        	djnz 1B
 755+ 9817
 756+ 9817 21 B2 89     	ld hl,Ctrl_2
 757+ 981A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 981C
 759+ 981C C9           	ret
 760+ 981D
 761+ 981D 77           Limpia_contenido_hl	ld (hl),a
 762+ 981E 23           	inc hl
 763+ 981F 77           	ld (hl),a
 764+ 9820 C9           	ret
 765+ 9821
 766+ 9821
# file closed: Direcciones.asm
1841  9821              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9821              ; ----- ----- ----- ----- -----
   2+ 9821              ;
   3+ 9821              ;   28/12/23
   4+ 9821
   5+ 9821              Movimiento
   6+ 9821
   7+ 9821              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9821
   9+ 9821 3A B2 89         ld a,(Ctrl_2)
  10+ 9824 CB 57            bit 2,a
  11+ 9826 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9828
  13+ 9828 2A C2 89         ld hl,(Puntero_mov)
  14+ 982B 7E               ld a,(hl)
  15+ 982C
  16+ 982C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 982C
  18+ 982C              Inicia_desplazamiento.
  19+ 982C
  20+ 982C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 982C
  22+ 982C CD 1F 99         call Ajusta_velocidad_desplazamiento
  23+ 982F
  24+ 982F              ; Iniciamos (Repetimos_mov).
  25+ 982F
  26+ 982F 7E               ld a,(hl)
  27+ 9830 E6 0F            and $0f
  28+ 9832 32 C8 89         ld (Repetimos_desplazamiento),a
  29+ 9835 32 C9 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9838
  31+ 9838              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9838
  33+ 9838 23               inc hl
  34+ 9839 7E               ld a,(hl)
  35+ 983A 32 CB 89         ld (Cola_de_desplazamiento),a
  36+ 983D 2B               dec hl
  37+ 983E
  38+ 983E 21 B2 89         ld hl,Ctrl_2
  39+ 9841 CB D6            set 2,(hl)
  40+ 9843
  41+ 9843              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9843              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9843
  44+ 9843              Desplazamiento_iniciado
  45+ 9843
  46+ 9843 CD F3 98         call Aplica_desplazamiento
  47+ 9846
  48+ 9846              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9846
  50+ 9846 3A ED 89         ld a,(Ctrl_3)
  51+ 9849 CB 4F            bit 1,a
  52+ 984B C0               ret nz
  53+ 984C
  54+ 984C 21 C8 89     3 ld hl,Repetimos_desplazamiento
  55+ 984F 35               dec (hl)
  56+ 9850 C0               ret nz
  57+ 9851
  58+ 9851              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9851              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9851              ; Analiza (Cola_de_desplazamiento).
  61+ 9851
  62+ 9851 3A CB 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 9854 A7               and a
  64+ 9855 CC 48 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9858 28 30            jr z,Reinicia_el_movimiento
  66+ 985A
  67+ 985A FE FF            cp $ff
  68+ 985C 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 985E
  70+ 985E FE FE            cp $fe
  71+ 9860 CC CD 98         call z,Fijamos_bucle
  72+ 9863 28 25            jr z,Reinicia_el_movimiento
  73+ 9865
  74+ 9865 FE FD            cp $fd
  75+ 9867 20 11            jr nz,1F
  76+ 9869
  77+ 9869              ; ---
  78+ 9869              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9869
  80+ 9869 3A B2 89         ld a,(Ctrl_2)
  81+ 986C CB 5F            bit 3,a
  82+ 986E 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9870
  84+ 9870              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9870
  86+ 9870 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9873 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9875
  89+ 9875 CD DE 98         call Inicia_Repetimos_movimiento
  90+ 9878 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 987A              ; ---
  92+ 987A
  93+ 987A FE 01        1 cp 1
  94+ 987C CA B7 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 987F
  96+ 987F 3D               dec a
  97+ 9880 32 CB 89         ld (Cola_de_desplazamiento),a
  98+ 9883
  99+ 9883 3A C9 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9886 32 C8 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9889              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9889 C9               ret
 103+ 988A
 104+ 988A              Reinicia_el_movimiento
 105+ 988A
 106+ 988A 3A B2 89         ld a,(Ctrl_2)
 107+ 988D CB 5F            bit 3,a
 108+ 988F 28 1B            jr z,2F
 109+ 9891
 110+ 9891              ; (Cola_de_desplazamiento)="254".
 111+ 9891
 112+ 9891 21 CA 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9894 35               dec (hl)
 114+ 9895 20 15            jr nz,2F
 115+ 9897
 116+ 9897              ; Fin de las repeticiones del último movimiento.
 117+ 9897
 118+ 9897 21 B2 89         ld hl,Ctrl_2
 119+ 989A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 989C
 121+ 989C 2A C2 89         ld hl,(Puntero_mov)
 122+ 989F 23               inc hl
 123+ 98A0 23               inc hl
 124+ 98A1 23               inc hl
 125+ 98A2 22 C2 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 98A5              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 98A5 7E               ld a,(hl)
 128+ 98A6 32 CB 89         ld (Cola_de_desplazamiento),a
 129+ 98A9
 130+ 98A9 C3 51 98         jp Cola
 131+ 98AC
 132+ 98AC CD E9 98     2 call Inicia_Puntero_mov
 133+ 98AF
 134+ 98AF 21 B2 89         ld hl,Ctrl_2
 135+ 98B2 CB 96            res 2,(hl)
 136+ 98B4
 137+ 98B4 C3 21 98         jp Movimiento
 138+ 98B7
 139+ 98B7              Siguiente_desplazamiento
 140+ 98B7
 141+ 98B7              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 98B7              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 98B7
 144+ 98B7 21 B2 89         ld hl,Ctrl_2
 145+ 98BA CB 96            res 2,(hl)
 146+ 98BC
 147+ 98BC 2A C2 89         ld hl,(Puntero_mov)
 148+ 98BF 23               inc hl
 149+ 98C0 23               inc hl
 150+ 98C1 22 C2 89         ld (Puntero_mov),hl
 151+ 98C4
 152+ 98C4 7E               ld a,(hl)
 153+ 98C5 A7               and a
 154+ 98C6 CC 48 99         call z,Incrementa_Puntero_indice_mov
 155+ 98C9 CA 8A 98         jp z,Reinicia_el_movimiento
 156+ 98CC
 157+ 98CC C9               ret
 158+ 98CD
 159+ 98CD              ; Subrutinas -----------------------------------------
 160+ 98CD              ; ---------- --------- --------- ---------- ----------
 161+ 98CD              ;
 162+ 98CD              ;   24/07/23
 163+ 98CD              ;
 164+ 98CD              ;   Fijamos_bucle
 165+ 98CD              ;
 166+ 98CD              ;
 167+ 98CD
 168+ 98CD              Fijamos_bucle
 169+ 98CD
 170+ 98CD 3A C6 89         ld a,(Incrementa_puntero)
 171+ 98D0 3C               inc a
 172+ 98D1 32 C7 89         ld (Incrementa_puntero_backup),a
 173+ 98D4
 174+ 98D4 CD 48 99         call Incrementa_Puntero_indice_mov
 175+ 98D7 2A C0 89         ld hl,(Puntero_indice_mov)
 176+ 98DA 22 C4 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98DD C9               ret
 178+ 98DE
 179+ 98DE              ; ---------- --------- --------- ---------- ----------
 180+ 98DE              ;
 181+ 98DE              ;   07/7/23
 182+ 98DE              ;
 183+ 98DE              ;   Inicia_Repetimos_movimiento
 184+ 98DE              ;
 185+ 98DE              ;
 186+ 98DE
 187+ 98DE              Inicia_Repetimos_movimiento
 188+ 98DE
 189+ 98DE              ; Iniciamos (Repetimos_movimiento).
 190+ 98DE
 191+ 98DE DD 2A C2 89      ld ix,(Puntero_mov)
 192+ 98E2 DD 7E 02         ld a,(ix+2)
 193+ 98E5 32 CA 89         ld (Repetimos_movimiento),a
 194+ 98E8
 195+ 98E8 C9               ret
 196+ 98E9
 197+ 98E9              ; ---------- --------- --------- ---------- ----------
 198+ 98E9              ;
 199+ 98E9              ;   26/6/23
 200+ 98E9              ;
 201+ 98E9              ;   Inicia_Puntero_mov
 202+ 98E9              ;
 203+ 98E9              ;
 204+ 98E9
 205+ 98E9 2A C0 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 98EC CD A3 8B         call Extrae_address
 207+ 98EF 22 C2 89         ld (Puntero_mov),hl
 208+ 98F2 C9               ret
 209+ 98F3
 210+ 98F3              ; ---------- --------- --------- ---------- ----------
 211+ 98F3              ;
 212+ 98F3              ;   27/06/23
 213+ 98F3              ;
 214+ 98F3              ;   Aplica_movimiento.
 215+ 98F3
 216+ 98F3              Aplica_desplazamiento
 217+ 98F3
 218+ 98F3              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98F3
 220+ 98F3 2A C2 89         ld hl, (Puntero_mov)
 221+ 98F6
 222+ 98F6 7E               ld a,(hl)
 223+ 98F7 E6 F0            and $f0
 224+ 98F9 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 98FA
 226+ 98FA CB 7E            bit 7,(hl)
 227+ 98FC 28 03            jr z,1F
 228+ 98FE CD 08 95         call Mov_up
 229+ 9901 2A C2 89     1 ld hl, (Puntero_mov)
 230+ 9904 CB 76            bit 6,(hl)
 231+ 9906 28 03            jr z,2F
 232+ 9908 CD CF 94         call Mov_down
 233+ 990B
 234+ 990B              ; Se ha aplicado reinicio ???
 235+ 990B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 990B
 237+ 990B              ;    ld a,(Ctrl_3)
 238+ 990B              ;    bit 1,a
 239+ 990B              ;    ret nz
 240+ 990B
 241+ 990B 2A C2 89     2 ld hl, (Puntero_mov)
 242+ 990E CB 6E            bit 5,(hl)
 243+ 9910 28 03            jr z,3F
 244+ 9912 CD 6E 96         call Mov_left
 245+ 9915 2A C2 89     3 ld hl, (Puntero_mov)
 246+ 9918 CB 66            bit 4,(hl)
 247+ 991A C8               ret z
 248+ 991B CD 4B 95         call Mov_right
 249+ 991E C9               ret
 250+ 991F
 251+ 991F              ; ---------- --------- --------- ---------- ----------
 252+ 991F              ;
 253+ 991F              ;   26/06/23
 254+ 991F              ;
 255+ 991F              ;   Ajusta_velocidad_desplazamiento.
 256+ 991F
 257+ 991F              Ajusta_velocidad_desplazamiento
 258+ 991F
 259+ 991F              ; 1er byte de la cadena de movimiento.
 260+ 991F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 991F
 262+ 991F CD 3D 99         call Extrae_nibble_alto
 263+ 9922
 264+ 9922 32 B6 89         ld (Vel_up),a
 265+ 9925 79               ld a,c
 266+ 9926 E6 0F            and $0f
 267+ 9928 32 B7 89         ld (Vel_down),a
 268+ 992B
 269+ 992B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 992B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 992B
 272+ 992B 23               inc hl
 273+ 992C CD 3D 99         call Extrae_nibble_alto
 274+ 992F
 275+ 992F 32 B4 89         ld (Vel_left),a
 276+ 9932 79               ld a,c
 277+ 9933 E6 0F            and $0f
 278+ 9935 32 B5 89         ld (Vel_right),a
 279+ 9938
 280+ 9938              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9938
 282+ 9938 23               inc hl
 283+ 9939 22 C2 89         ld (Puntero_mov),hl
 284+ 993C C9               ret
 285+ 993D
 286+ 993D 06 04        Extrae_nibble_alto ld b,4
 287+ 993F 7E               ld a,(hl)
 288+ 9940 4F               ld c,a
 289+ 9941 E6 F0            and $f0
 290+ 9943 CB 3F        1 srl a
 291+ 9945 10 FC            djnz 1B
 292+ 9947 C9               ret
 293+ 9948
 294+ 9948              ; ---------- --------- --------- ---------- ----------
 295+ 9948              ;
 296+ 9948              ;   5/7/23
 297+ 9948              ;
 298+ 9948              ;   Incrementa_Puntero_indice_mov
 299+ 9948
 300+ 9948              Incrementa_Puntero_indice_mov
 301+ 9948
 302+ 9948 21 C6 89         ld hl,Incrementa_puntero
 303+ 994B 34               inc (hl)
 304+ 994C
 305+ 994C 2A C0 89         ld hl,(Puntero_indice_mov)
 306+ 994F 01 02 00         ld bc,2
 307+ 9952 A7               and a
 308+ 9953 09               add hl,bc
 309+ 9954 22 C0 89         ld (Puntero_indice_mov),hl
 310+ 9957
 311+ 9957 7E               ld a,(hl)
 312+ 9958 A7               and a
 313+ 9959
 314+ 9959              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9959
 316+ 9959              ;    jr z,$
 317+ 9959
 318+ 9959              ;! Reinicia el Patrón de movimiento.
 319+ 9959
 320+ 9959 CC 5E 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 995C
 322+ 995C AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 995D
 324+ 995D C9               ret
 325+ 995E
 326+ 995E              ; ---------- --------- --------- ---------- ----------
 327+ 995E              ;
 328+ 995E              ;   15/01/24
 329+ 995E              ;
 330+ 995E              ;   Inicializa_Puntero_indice_mov
 331+ 995E
 332+ 995E              Inicializa_Puntero_indice_mov_2
 333+ 995E
 334+ 995E              ; Existe etiqueta de bucle principal???
 335+ 995E
 336+ 995E 2A C4 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9961 24               inc h
 338+ 9962 25               dec h
 339+ 9963 28 05            jr z,2F
 340+ 9965
 341+ 9965 22 C0 89         ld (Puntero_indice_mov),hl
 342+ 9968 18 14            jr 3F
 343+ 996A
 344+ 996A              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 996A
 346+ 996A 3A C6 89     2 ld a,(Incrementa_puntero)
 347+ 996D 47               ld b,a
 348+ 996E
 349+ 996E 2A C0 89         ld hl,(Puntero_indice_mov)
 350+ 9971 2B           1 dec hl
 351+ 9972 2B               dec hl
 352+ 9973 10 FC            djnz 1B
 353+ 9975 22 C0 89         ld (Puntero_indice_mov),hl
 354+ 9978
 355+ 9978 AF               xor a
 356+ 9979 32 C6 89         ld (Incrementa_puntero),a
 357+ 997C 18 06            jr 4F
 358+ 997E
 359+ 997E 3A C7 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9981 32 C6 89         ld (Incrementa_puntero),a
 361+ 9984 C9           4 ret
 362+ 9985
 363+ 9985              ; ----------------------------------------------------------------------
 364+ 9985              ;
 365+ 9985              ;   30/01/24
 366+ 9985              ;
 367+ 9985              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9985
 369+ 9985 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9988 CD B7 8D         call Calcula_salto_en_BC
 371+ 998B 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 998E A7               and a
 373+ 998F ED 4A            adc hl,bc
 374+ 9991 C9               ret
 375+ 9992
 376+ 9992              ; ----------------------------------------------------------------------
 377+ 9992              ;
 378+ 9992              ;   30/01/24
 379+ 9992              ;
 380+ 9992              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9992              ;
 382+ 9992              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9992
 384+ 9992 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9993 23               inc hl
 386+ 9994 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9995 69               ld l,c
 388+ 9996 60               ld h,b
 389+ 9997 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 999A C9               ret
 391+ 999B
# file closed: Movimiento.asm
1842  999B              ;	include "Disparo.asm"
1843  999B              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 999B              ; Relojes y temporizaciones.
   2+ 999B
   3+ 999B              ; ------------------------------------------------------
   4+ 999B              ;
   5+ 999B              ;	16/7/23
   6+ 999B              ;
   7+ 999B              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 999B              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 999B              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 999B              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 999B              ;
  12+ 999B              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 999B              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 999B
  15+ 999B              ; Disparo_entidad db 1
  16+ 999B              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 999B              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 999B
  19+ 999B              Habilita_disparos
  20+ 999B
  21+ 999B 7E           	ld a,(hl)
  22+ 999C A7           	and a
  23+ 999D C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 999E
  25+ 999E EB           	ex de,hl
  26+ 999F
  27+ 999F 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 99A0 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 99A1
  30+ 99A1              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 99A1
  32+ 99A1 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 99A2 7E           	ld a,(hl)
  34+ 99A3 23           	inc hl
  35+ 99A4 77           	ld (hl),a
  36+ 99A5
  37+ 99A5 EB           	ex de,hl						; Habilitamos disparo.
  38+ 99A6 3E 01        	ld a,1
  39+ 99A8 77           	ld (hl),a
  40+ 99A9 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1844  99AA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99AA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99AA              ;
   3+ 99AA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99AA              ;
   5+ 99AA              ; *****************************************************************************************************************************************************************************************
   6+ 99AA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99AA
   8+ 99AA 7C           calcula_tercio ld a,h
   9+ 99AB E6 18        	and $18
  10+ 99AD CB 2F        	sra a
  11+ 99AF CB 2F        	sra a
  12+ 99B1 CB 2F        	sra a
  13+ 99B3 C9           	ret
  14+ 99B4
# file closed: calcula_tercio.asm
1845  99B4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99B4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99B4              ;
   3+ 99B4              ;
   4+ 99B4              ;	CLS.
   5+ 99B4              ;
   6+ 99B4              ;	Limpia la pantalla y define sus atributos.
   7+ 99B4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99B4              ;
   9+ 99B4              ;	COLORES: 0 ..... NEGRO
  10+ 99B4              ;    		 1 ..... AZUL
  11+ 99B4              ; 			 2 ..... ROJO
  12+ 99B4              ;			 3 ..... MAGENTA
  13+ 99B4              ; 			 4 ..... VERDE
  14+ 99B4              ; 			 5 ..... CIAN
  15+ 99B4              ;			 6 ..... AMARILLO
  16+ 99B4              ; 			 7 ..... BLANCO
  17+ 99B4              ;
  18+ 99B4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99B4              ;
  20+ 99B4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99B4
  22+ 99B4
  23+ 99B4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99B7 11 01 40     	LD DE,$4001
  25+ 99BA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99BD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99BF ED B0        	LDIR
  28+ 99C1 01 FF 02     	LD BC,767
  29+ 99C4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99C5 ED B0        	LDIR
  31+ 99C7 C9           	ret
  32+ 99C8
# file closed: Cls.asm
1846  99C8              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 99C8              ; ------------------------------------------------------------------------
   2+ 99C8              ;
   3+ 99C8              ;	30/1/24
   4+ 99C8              ;
   5+ 99C8              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 99C8              ;	Fila superior "0", Columna izquierda "0".
   7+ 99C8              ;
   8+ 99C8              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 99C8              ;
  10+ 99C8              ;	Modifica: A,BC y DE.
  11+ 99C8
  12+ 99C8 7D           Genera_coordenadas ld a,l
  13+ 99C9 E6 1F        	and $1f
  14+ 99CB 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 99CE
  16+ 99CE 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 99CF FE 40        	cp $40
  18+ 99D1 38 1C        	jr c,4F
  19+ 99D3
  20+ 99D3 CD AA 99     	call calcula_tercio
  21+ 99D6 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 99D7
  23+ 99D7 1E 00        	ld e,0
  24+ 99D9 7D           	ld a,l
  25+ 99DA E6 E0        	and $e0
  26+ 99DC 28 01        	jr z,1F
  27+ 99DE 04           	inc b
  28+ 99DF
  29+ 99DF 04           1 inc b
  30+ 99E0 05           	dec b
  31+ 99E1 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 99E3              ;														; _ , salimos.
  33+ 99E3 1C           3 inc e
  34+ 99E4 D6 20        	sub 32
  35+ 99E6 20 FB        	jr nz,3B
  36+ 99E8 10 F5        	djnz 1B
  37+ 99EA
  38+ 99EA 7B           2 ld a,e
  39+ 99EB 32 92 89     	ld (Coordenada_y),a
  40+ 99EE C9           	ret
  41+ 99EF
  42+ 99EF AF           4 xor a
  43+ 99F0 32 92 89     	ld (Coordenada_y),a
  44+ 99F3 C9           	ret
  45+ 99F4
  46+ 99F4              ; ------------------------------------------------------------------------
  47+ 99F4              ;	28/05/23
  48+ 99F4              ;
  49+ 99F4              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99F4              ;	Fila superior "0", Columna izquierda "0".
  51+ 99F4              ;
  52+ 99F4              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99F4              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99F4              ;
  55+ 99F4              ;		DE="$120d"
  56+ 99F4              ;
  57+ 99F4              ;		D, (Coordenada_X), Columnas, $12
  58+ 99F4              ;		E, (Coordenada_y), Filas, $0d
  59+ 99F4              ;
  60+ 99F4              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99F4
  62+ 99F4              ;	Modifica: A,BC y DE.
  63+ 99F4
  64+ 99F4
  65+ 99F4              Genera_coordenadas_disparo
  66+ 99F4
  67+ 99F4              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99F4
  69+ 99F4 7D           	ld a,l
  70+ 99F5 E6 1F        	and $1f
  71+ 99F7 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99F8 CD AA 99     	call calcula_tercio
  73+ 99FB 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 99FC 1E 00        	ld e,0
  75+ 99FE 7D           	ld a,l
  76+ 99FF E6 E0        	and $e0
  77+ 9A01 28 01        	jr z,1F
  78+ 9A03 04           	inc b
  79+ 9A04 1C           1 inc e
  80+ 9A05 D6 20        	sub 32
  81+ 9A07 20 FB        	jr nz,1B
  82+ 9A09 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9A0B C9           	ret
  84+ 9A0C
# file closed: Genera_coordenadas.asm
1847  9A0C              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9A0C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9A0C              ;
   3+ 9A0C              ;	11/03/24
   4+ 9A0C              ;
   5+ 9A0C              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9A0C              ;   DE contiene Puntero_objeto.
   7+ 9A0C              ;   IX contiene el Puntero de impresión.
   8+ 9A0C
   9+ 9A0C              Genera_datos_de_impresion
  10+ 9A0C
  11+ 9A0C ED 73 DD 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9A10 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ 9A13 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ 9A15
  15+ 9A15 2A EB 89         ld hl,(Scanlines_album_SP)
  16+ 9A18
  17+ 9A18 3E 05            ld a,5
  18+ 9A1A 85               add l
  19+ 9A1B 6F               ld l,a
  20+ 9A1C
  21+ 9A1C F9               ld sp,hl
  22+ 9A1D 22 EB 89         ld (Scanlines_album_SP),hl
  23+ 9A20
  24+ 9A20 21 00 00         ld hl,0
  25+ 9A23
  26+ 9A23 DD E5            push ix
  27+ 9A25 3B               dec sp
  28+ 9A26 ED 7A            adc hl,sp
  29+ 9A28 D5               push de
  30+ 9A29
  31+ 9A29              ; Recuperamos SP.
  32+ 9A29
  33+ 9A29 ED 7B DD 89      ld sp,(Stack)
  34+ 9A2D
  35+ 9A2D E5               push hl
  36+ 9A2E F1               pop af
  37+ 9A2F 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ 9A30
  39+ 9A30              ; Tenemos el encabezado listo.
  40+ 9A30              ; Preparamos registros para generar los scanlines.
  41+ 9A30
  42+ 9A30 DD E5            push ix
  43+ 9A32 E1               pop hl                                          ; 1er scanline en HL.
  44+ 9A33
  45+ 9A33 ED 5B EB 89      ld de,(Scanlines_album_SP)
  46+ 9A37
  47+ 9A37              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ 9A37              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ 9A37
  50+ 9A37 7C               ld a,h
  51+ 9A38 FE 50            cp $50
  52+ 9A3A 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ 9A3C
  54+ 9A3C 20 05            jr nz,2F
  55+ 9A3E
  56+ 9A3E 7D               ld a,l
  57+ 9A3F FE E0            cp $e0
  58+ 9A41 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ 9A43
  60+ 9A43 7D           2 ld a,l
  61+ 9A44 FE C0            cp $c0
  62+ 9A46 D2 D8 9A         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ 9A49
  64+ 9A49              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ 9A49
  66+ 9A49 CD 31 91         call NextScan
  67+ 9A4C EB               ex de,hl
  68+ 9A4D
  69+ 9A4D 73               ld (hl),e
  70+ 9A4E 2C               inc l
  71+ 9A4F 72               ld (hl),d
  72+ 9A50 2C               inc l
  73+ 9A51
  74+ 9A51 EB               ex de,hl
  75+ 9A52
  76+ 9A52 CD 31 91         call NextScan
  77+ 9A55 EB               ex de,hl
  78+ 9A56
  79+ 9A56 73               ld (hl),e
  80+ 9A57 2C               inc l
  81+ 9A58 72               ld (hl),d
  82+ 9A59 2C               inc l
  83+ 9A5A
  84+ 9A5A EB               ex de,hl
  85+ 9A5B
  86+ 9A5B CD 31 91         call NextScan
  87+ 9A5E EB               ex de,hl
  88+ 9A5F
  89+ 9A5F 73               ld (hl),e
  90+ 9A60 2C               inc l
  91+ 9A61 72               ld (hl),d
  92+ 9A62 2C               inc l
  93+ 9A63
  94+ 9A63 EB               ex de,hl
  95+ 9A64
  96+ 9A64 CD 31 91         call NextScan
  97+ 9A67 EB               ex de,hl
  98+ 9A68
  99+ 9A68 73               ld (hl),e
 100+ 9A69 2C               inc l
 101+ 9A6A 72               ld (hl),d
 102+ 9A6B 2C               inc l
 103+ 9A6C
 104+ 9A6C EB               ex de,hl
 105+ 9A6D
 106+ 9A6D CD 31 91         call NextScan
 107+ 9A70 EB               ex de,hl
 108+ 9A71
 109+ 9A71 73               ld (hl),e
 110+ 9A72 2C               inc l
 111+ 9A73 72               ld (hl),d
 112+ 9A74 2C               inc l
 113+ 9A75
 114+ 9A75 EB               ex de,hl
 115+ 9A76
 116+ 9A76 CD 31 91         call NextScan
 117+ 9A79 EB               ex de,hl
 118+ 9A7A
 119+ 9A7A 73               ld (hl),e
 120+ 9A7B 2C               inc l
 121+ 9A7C 72               ld (hl),d
 122+ 9A7D 2C               inc l
 123+ 9A7E
 124+ 9A7E EB               ex de,hl
 125+ 9A7F
 126+ 9A7F CD 31 91         call NextScan
 127+ 9A82 EB               ex de,hl
 128+ 9A83
 129+ 9A83 73               ld (hl),e
 130+ 9A84 2C               inc l
 131+ 9A85 72               ld (hl),d
 132+ 9A86 2C               inc l
 133+ 9A87
 134+ 9A87 EB               ex de,hl
 135+ 9A88
 136+ 9A88 CD 31 91         call NextScan
 137+ 9A8B EB               ex de,hl
 138+ 9A8C
 139+ 9A8C 73               ld (hl),e
 140+ 9A8D 2C               inc l
 141+ 9A8E 72               ld (hl),d
 142+ 9A8F 2C               inc l
 143+ 9A90
 144+ 9A90 EB               ex de,hl
 145+ 9A91
 146+ 9A91 CD 31 91         call NextScan
 147+ 9A94 EB               ex de,hl
 148+ 9A95
 149+ 9A95 73               ld (hl),e
 150+ 9A96 2C               inc l
 151+ 9A97 72               ld (hl),d
 152+ 9A98 2C               inc l
 153+ 9A99
 154+ 9A99 EB               ex de,hl
 155+ 9A9A
 156+ 9A9A CD 31 91         call NextScan
 157+ 9A9D EB               ex de,hl
 158+ 9A9E
 159+ 9A9E 73               ld (hl),e
 160+ 9A9F 2C               inc l
 161+ 9AA0 72               ld (hl),d
 162+ 9AA1 2C               inc l
 163+ 9AA2
 164+ 9AA2 EB               ex de,hl
 165+ 9AA3
 166+ 9AA3 CD 31 91         call NextScan
 167+ 9AA6 EB               ex de,hl
 168+ 9AA7
 169+ 9AA7 73               ld (hl),e
 170+ 9AA8 2C               inc l
 171+ 9AA9 72               ld (hl),d
 172+ 9AAA 2C               inc l
 173+ 9AAB
 174+ 9AAB EB               ex de,hl
 175+ 9AAC
 176+ 9AAC CD 31 91         call NextScan
 177+ 9AAF EB               ex de,hl
 178+ 9AB0
 179+ 9AB0 73               ld (hl),e
 180+ 9AB1 2C               inc l
 181+ 9AB2 72               ld (hl),d
 182+ 9AB3 2C               inc l
 183+ 9AB4
 184+ 9AB4 EB               ex de,hl
 185+ 9AB5
 186+ 9AB5 CD 31 91         call NextScan
 187+ 9AB8 EB               ex de,hl
 188+ 9AB9
 189+ 9AB9 73               ld (hl),e
 190+ 9ABA 2C               inc l
 191+ 9ABB 72               ld (hl),d
 192+ 9ABC 2C               inc l
 193+ 9ABD
 194+ 9ABD EB               ex de,hl
 195+ 9ABE
 196+ 9ABE CD 31 91         call NextScan
 197+ 9AC1 EB               ex de,hl
 198+ 9AC2
 199+ 9AC2 73               ld (hl),e
 200+ 9AC3 2C               inc l
 201+ 9AC4 72               ld (hl),d
 202+ 9AC5 2C               inc l
 203+ 9AC6
 204+ 9AC6 EB               ex de,hl
 205+ 9AC7
 206+ 9AC7 CD 31 91         call NextScan
 207+ 9ACA EB               ex de,hl
 208+ 9ACB
 209+ 9ACB 73               ld (hl),e
 210+ 9ACC 2C               inc l
 211+ 9ACD 72               ld (hl),d
 212+ 9ACE 2C               inc l
 213+ 9ACF
 214+ 9ACF              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ 9ACF
 216+ 9ACF 22 EB 89         ld (Scanlines_album_SP),hl
 217+ 9AD2
 218+ 9AD2              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ 9AD2
 220+ 9AD2 08               ex af,af
 221+ 9AD3
 222+ 9AD3 F5               push af
 223+ 9AD4 E1               pop hl
 224+ 9AD5
 225+ 9AD5 36 10            ld (hl),16
 226+ 9AD7
 227+ 9AD7 C9               ret
 228+ 9AD8
 229+ 9AD8              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ 9AD8
 231+ 9AD8              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ 9AD8
 233+ 9AD8 3E 57            ld a,$57
 234+ 9ADA 94               sub h
 235+ 9ADB 20 04            jr nz,4F
 236+ 9ADD
 237+ 9ADD 0E 01            ld c,1
 238+ 9ADF 18 1B            jr 5F
 239+ 9AE1
 240+ 9AE1 47           4 ld b,a
 241+ 9AE2
 242+ 9AE2 3E DF            ld a,$df
 243+ 9AE4 BD               cp l
 244+ 9AE5 38 04            jr c,1F
 245+ 9AE7
 246+ 9AE7 3E 08            ld a,8
 247+ 9AE9 80               add b
 248+ 9AEA 47               ld b,a
 249+ 9AEB
 250+ 9AEB              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 251+ 9AEB              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 252+ 9AEB
 253+ 9AEB 48           1 ld c,b
 254+ 9AEC 0C               inc c
 255+ 9AED
 256+ 9AED CD 31 91     3 call NextScan
 257+ 9AF0 EB               ex de,hl
 258+ 9AF1
 259+ 9AF1 73               ld (hl),e
 260+ 9AF2 2C               inc l
 261+ 9AF3 72               ld (hl),d
 262+ 9AF4 2C               inc l
 263+ 9AF5
 264+ 9AF5 EB               ex de,hl
 265+ 9AF6
 266+ 9AF6 10 F5            djnz 3B
 267+ 9AF8
 268+ 9AF8 ED 53 EB 89      ld (Scanlines_album_SP),de
 269+ 9AFC
 270+ 9AFC 08           5 ex af,af
 271+ 9AFD F5               push af
 272+ 9AFE E1               pop hl
 273+ 9AFF
 274+ 9AFF 71               ld (hl),c
 275+ 9B00
 276+ 9B00 C9               ret
 277+ 9B01
 278+ 9B01              ; -----------------------------------------------------------------------------
 279+ 9B01              ;
 280+ 9B01              ;   21/11/23
 281+ 9B01
 282+ 9B01              Limpia_y_reinicia_Scanlines_album
 283+ 9B01
 284+ 9B01              ;   Limpia Scanlines_album.
 285+ 9B01
 286+ 9B01 2A EB 89         ld hl,(Scanlines_album_SP)
 287+ 9B04 7D               ld a,l
 288+ 9B05 A7               and a
 289+ 9B06 C8               ret z   ;   Salimos si el álbum está vacío.
 290+ 9B07
 291+ 9B07 47               ld b,a
 292+ 9B08 04               inc b
 293+ 9B09
 294+ 9B09 36 00        1 ld (hl),0
 295+ 9B0B 2D               dec l
 296+ 9B0C 10 FB            djnz 1B
 297+ 9B0E
 298+ 9B0E              ;   Reinicializa (Scanlines_album_SP).
 299+ 9B0E
 300+ 9B0E 21 00 80         ld hl,Scanlines_album
 301+ 9B11 22 EB 89         ld (Scanlines_album_SP),hl
 302+ 9B14
 303+ 9B14 C9               ret
 304+ 9B15
 305+ 9B15              ; -----------------------------------------------------------------------------
 306+ 9B15              ;
 307+ 9B15              ;   11/03/24
 308+ 9B15              ;
 309+ 9B15
 310+ 9B15              Pinta_Sprites
 311+ 9B15
 312+ 9B15 2A EB 89         ld hl,(Scanlines_album_SP)
 313+ 9B18 CD A3 8B         call Extrae_address
 314+ 9B1B
 315+ 9B1B 24               inc h
 316+ 9B1C 25               dec h
 317+ 9B1D C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 318+ 9B1E
 319+ 9B1E ED 73 DD 89      ld (Stack),sp
 320+ 9B22
 321+ 9B22 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 322+ 9B23              ;                                       ; DE se encuentra en los datos del sprite.
 323+ 9B23 2C               inc l
 324+ 9B24 2C               inc l
 325+ 9B25
 326+ 9B25 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 327+ 9B26
 328+ 9B26 2C               inc l
 329+ 9B27 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 330+ 9B28
 331+ 9B28              ;   Seleccionamos rutina de impresión:
 332+ 9B28
 333+ 9B28 3E 10            ld a,16
 334+ 9B2A B8               cp b
 335+ 9B2B C2 29 9C         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 336+ 9B2E
 337+ 9B2E              ;   Rutinas:
 338+ 9B2E
 339+ 9B2E              Pinta_rapido    ;   1520 t/states.
 340+ 9B2E
 341+ 9B2E E1               pop hl
 342+ 9B2F
 343+ 9B2F 1A               ld a,(de)
 344+ 9B30 AE               xor (hl)
 345+ 9B31 77               ld (hl),a
 346+ 9B32 2C               inc l
 347+ 9B33 1C               inc e
 348+ 9B34 1A               ld a,(de)
 349+ 9B35 AE               xor (hl)
 350+ 9B36 77               ld (hl),a
 351+ 9B37 2C               inc l
 352+ 9B38 1C               inc e
 353+ 9B39 1A               ld a,(de)
 354+ 9B3A AE               xor (hl)
 355+ 9B3B 77               ld (hl),a
 356+ 9B3C 13               inc de
 357+ 9B3D
 358+ 9B3D E1               pop hl
 359+ 9B3E
 360+ 9B3E 1A               ld a,(de)
 361+ 9B3F AE               xor (hl)
 362+ 9B40 77               ld (hl),a
 363+ 9B41 2C               inc l
 364+ 9B42 1C               inc e
 365+ 9B43 1A               ld a,(de)
 366+ 9B44 AE               xor (hl)
 367+ 9B45 77               ld (hl),a
 368+ 9B46 2C               inc l
 369+ 9B47 1C               inc e
 370+ 9B48 1A               ld a,(de)
 371+ 9B49 AE               xor (hl)
 372+ 9B4A 77               ld (hl),a
 373+ 9B4B 13               inc de
 374+ 9B4C
 375+ 9B4C E1               pop hl
 376+ 9B4D
 377+ 9B4D 1A               ld a,(de)
 378+ 9B4E AE               xor (hl)
 379+ 9B4F 77               ld (hl),a
 380+ 9B50 2C               inc l
 381+ 9B51 1C               inc e
 382+ 9B52 1A               ld a,(de)
 383+ 9B53 AE               xor (hl)
 384+ 9B54 77               ld (hl),a
 385+ 9B55 2C               inc l
 386+ 9B56 1C               inc e
 387+ 9B57 1A               ld a,(de)
 388+ 9B58 AE               xor (hl)
 389+ 9B59 77               ld (hl),a
 390+ 9B5A 13               inc de
 391+ 9B5B
 392+ 9B5B E1               pop hl
 393+ 9B5C
 394+ 9B5C 1A               ld a,(de)
 395+ 9B5D AE               xor (hl)
 396+ 9B5E 77               ld (hl),a
 397+ 9B5F 2C               inc l
 398+ 9B60 1C               inc e
 399+ 9B61 1A               ld a,(de)
 400+ 9B62 AE               xor (hl)
 401+ 9B63 77               ld (hl),a
 402+ 9B64 2C               inc l
 403+ 9B65 1C               inc e
 404+ 9B66 1A               ld a,(de)
 405+ 9B67 AE               xor (hl)
 406+ 9B68 77               ld (hl),a
 407+ 9B69 13               inc de
 408+ 9B6A
 409+ 9B6A E1               pop hl
 410+ 9B6B
 411+ 9B6B 1A               ld a,(de)
 412+ 9B6C AE               xor (hl)
 413+ 9B6D 77               ld (hl),a
 414+ 9B6E 2C               inc l
 415+ 9B6F 1C               inc e
 416+ 9B70 1A               ld a,(de)
 417+ 9B71 AE               xor (hl)
 418+ 9B72 77               ld (hl),a
 419+ 9B73 2C               inc l
 420+ 9B74 1C               inc e
 421+ 9B75 1A               ld a,(de)
 422+ 9B76 AE               xor (hl)
 423+ 9B77 77               ld (hl),a
 424+ 9B78 13               inc de
 425+ 9B79
 426+ 9B79 E1               pop hl
 427+ 9B7A
 428+ 9B7A 1A               ld a,(de)
 429+ 9B7B AE               xor (hl)
 430+ 9B7C 77               ld (hl),a
 431+ 9B7D 2C               inc l
 432+ 9B7E 1C               inc e
 433+ 9B7F 1A               ld a,(de)
 434+ 9B80 AE               xor (hl)
 435+ 9B81 77               ld (hl),a
 436+ 9B82 2C               inc l
 437+ 9B83 1C               inc e
 438+ 9B84 1A               ld a,(de)
 439+ 9B85 AE               xor (hl)
 440+ 9B86 77               ld (hl),a
 441+ 9B87 13               inc de
 442+ 9B88
 443+ 9B88 E1               pop hl
 444+ 9B89
 445+ 9B89 1A               ld a,(de)
 446+ 9B8A AE               xor (hl)
 447+ 9B8B 77               ld (hl),a
 448+ 9B8C 2C               inc l
 449+ 9B8D 1C               inc e
 450+ 9B8E 1A               ld a,(de)
 451+ 9B8F AE               xor (hl)
 452+ 9B90 77               ld (hl),a
 453+ 9B91 2C               inc l
 454+ 9B92 1C               inc e
 455+ 9B93 1A               ld a,(de)
 456+ 9B94 AE               xor (hl)
 457+ 9B95 77               ld (hl),a
 458+ 9B96 13               inc de
 459+ 9B97
 460+ 9B97 E1               pop hl
 461+ 9B98
 462+ 9B98 1A               ld a,(de)
 463+ 9B99 AE               xor (hl)
 464+ 9B9A 77               ld (hl),a
 465+ 9B9B 2C               inc l
 466+ 9B9C 1C               inc e
 467+ 9B9D 1A               ld a,(de)
 468+ 9B9E AE               xor (hl)
 469+ 9B9F 77               ld (hl),a
 470+ 9BA0 2C               inc l
 471+ 9BA1 1C               inc e
 472+ 9BA2 1A               ld a,(de)
 473+ 9BA3 AE               xor (hl)
 474+ 9BA4 77               ld (hl),a
 475+ 9BA5 13               inc de
 476+ 9BA6
 477+ 9BA6 E1               pop hl
 478+ 9BA7
 479+ 9BA7 1A               ld a,(de)
 480+ 9BA8 AE               xor (hl)
 481+ 9BA9 77               ld (hl),a
 482+ 9BAA 2C               inc l
 483+ 9BAB 1C               inc e
 484+ 9BAC 1A               ld a,(de)
 485+ 9BAD AE               xor (hl)
 486+ 9BAE 77               ld (hl),a
 487+ 9BAF 2C               inc l
 488+ 9BB0 1C               inc e
 489+ 9BB1 1A               ld a,(de)
 490+ 9BB2 AE               xor (hl)
 491+ 9BB3 77               ld (hl),a
 492+ 9BB4 13               inc de
 493+ 9BB5
 494+ 9BB5 E1               pop hl
 495+ 9BB6
 496+ 9BB6 1A               ld a,(de)
 497+ 9BB7 AE               xor (hl)
 498+ 9BB8 77               ld (hl),a
 499+ 9BB9 2C               inc l
 500+ 9BBA 1C               inc e
 501+ 9BBB 1A               ld a,(de)
 502+ 9BBC AE               xor (hl)
 503+ 9BBD 77               ld (hl),a
 504+ 9BBE 2C               inc l
 505+ 9BBF 1C               inc e
 506+ 9BC0 1A               ld a,(de)
 507+ 9BC1 AE               xor (hl)
 508+ 9BC2 77               ld (hl),a
 509+ 9BC3 13               inc de
 510+ 9BC4
 511+ 9BC4 E1               pop hl
 512+ 9BC5
 513+ 9BC5 1A               ld a,(de)
 514+ 9BC6 AE               xor (hl)
 515+ 9BC7 77               ld (hl),a
 516+ 9BC8 2C               inc l
 517+ 9BC9 1C               inc e
 518+ 9BCA 1A               ld a,(de)
 519+ 9BCB AE               xor (hl)
 520+ 9BCC 77               ld (hl),a
 521+ 9BCD 2C               inc l
 522+ 9BCE 1C               inc e
 523+ 9BCF 1A               ld a,(de)
 524+ 9BD0 AE               xor (hl)
 525+ 9BD1 77               ld (hl),a
 526+ 9BD2 13               inc de
 527+ 9BD3
 528+ 9BD3 E1               pop hl
 529+ 9BD4
 530+ 9BD4 1A               ld a,(de)
 531+ 9BD5 AE               xor (hl)
 532+ 9BD6 77               ld (hl),a
 533+ 9BD7 2C               inc l
 534+ 9BD8 1C               inc e
 535+ 9BD9 1A               ld a,(de)
 536+ 9BDA AE               xor (hl)
 537+ 9BDB 77               ld (hl),a
 538+ 9BDC 2C               inc l
 539+ 9BDD 1C               inc e
 540+ 9BDE 1A               ld a,(de)
 541+ 9BDF AE               xor (hl)
 542+ 9BE0 77               ld (hl),a
 543+ 9BE1 13               inc de
 544+ 9BE2
 545+ 9BE2 E1               pop hl
 546+ 9BE3
 547+ 9BE3 1A               ld a,(de)
 548+ 9BE4 AE               xor (hl)
 549+ 9BE5 77               ld (hl),a
 550+ 9BE6 2C               inc l
 551+ 9BE7 1C               inc e
 552+ 9BE8 1A               ld a,(de)
 553+ 9BE9 AE               xor (hl)
 554+ 9BEA 77               ld (hl),a
 555+ 9BEB 2C               inc l
 556+ 9BEC 1C               inc e
 557+ 9BED 1A               ld a,(de)
 558+ 9BEE AE               xor (hl)
 559+ 9BEF 77               ld (hl),a
 560+ 9BF0 13               inc de
 561+ 9BF1
 562+ 9BF1 E1               pop hl
 563+ 9BF2
 564+ 9BF2 1A               ld a,(de)
 565+ 9BF3 AE               xor (hl)
 566+ 9BF4 77               ld (hl),a
 567+ 9BF5 2C               inc l
 568+ 9BF6 1C               inc e
 569+ 9BF7 1A               ld a,(de)
 570+ 9BF8 AE               xor (hl)
 571+ 9BF9 77               ld (hl),a
 572+ 9BFA 2C               inc l
 573+ 9BFB 1C               inc e
 574+ 9BFC 1A               ld a,(de)
 575+ 9BFD AE               xor (hl)
 576+ 9BFE 77               ld (hl),a
 577+ 9BFF 13               inc de
 578+ 9C00
 579+ 9C00 E1               pop hl
 580+ 9C01
 581+ 9C01 1A               ld a,(de)
 582+ 9C02 AE               xor (hl)
 583+ 9C03 77               ld (hl),a
 584+ 9C04 2C               inc l
 585+ 9C05 1C               inc e
 586+ 9C06 1A               ld a,(de)
 587+ 9C07 AE               xor (hl)
 588+ 9C08 77               ld (hl),a
 589+ 9C09 2C               inc l
 590+ 9C0A 1C               inc e
 591+ 9C0B 1A               ld a,(de)
 592+ 9C0C AE               xor (hl)
 593+ 9C0D 77               ld (hl),a
 594+ 9C0E 13               inc de
 595+ 9C0F
 596+ 9C0F E1               pop hl
 597+ 9C10
 598+ 9C10 1A               ld a,(de)
 599+ 9C11 AE               xor (hl)
 600+ 9C12 77               ld (hl),a
 601+ 9C13 2C               inc l
 602+ 9C14 1C               inc e
 603+ 9C15 1A               ld a,(de)
 604+ 9C16 AE               xor (hl)
 605+ 9C17 77               ld (hl),a
 606+ 9C18 2C               inc l
 607+ 9C19 1C               inc e
 608+ 9C1A 1A               ld a,(de)
 609+ 9C1B AE               xor (hl)
 610+ 9C1C 77               ld (hl),a
 611+ 9C1D 13               inc de
 612+ 9C1E
 613+ 9C1E ED 73 EB 89  2 ld (Scanlines_album_SP),sp
 614+ 9C22 ED 7B DD 89      ld sp,(Stack)
 615+ 9C26 C3 15 9B         jp Pinta_Sprites
 616+ 9C29
 617+ 9C29              Pinta_lento
 618+ 9C29
 619+ 9C29 E1           1 pop hl
 620+ 9C2A
 621+ 9C2A 1A               ld a,(de)
 622+ 9C2B AE               xor (hl)
 623+ 9C2C 77               ld (hl),a
 624+ 9C2D 2C               inc l
 625+ 9C2E 1C               inc e
 626+ 9C2F 1A               ld a,(de)
 627+ 9C30 AE               xor (hl)
 628+ 9C31 77               ld (hl),a
 629+ 9C32 2C               inc l
 630+ 9C33 1C               inc e
 631+ 9C34 1A               ld a,(de)
 632+ 9C35 AE               xor (hl)
 633+ 9C36 77               ld (hl),a
 634+ 9C37 13               inc de
 635+ 9C38
 636+ 9C38 10 EF            djnz 1B
 637+ 9C3A
 638+ 9C3A 18 E2            jr 2B
# file closed: Genera_datos_de_impresion.asm
1848  9C3C
1849  9C3C              	SAVESNA "Pruebas.sna", START
1850  9C3C
1851  9C3C
1852  9C3C
1853  9C3C
# file closed: Banco_de_pruebas.asm
