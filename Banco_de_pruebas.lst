# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 17 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  34  AA15              ; Pintamos Amadeus.
  35  AA15
  36  AA15 CD 6A 8E     	call Pinta_entidades
  37  AA18 CD 5C 8E     	call Pinta_Amadeus
  38  AA1B CD 0C 8E     	call Gestiona_entidades
  39  AA1E CD DE 8A     	call Gestiona_Amadeus
  40  AA21
  41  AA21              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  42  AA21
  43  AA21 CD 7D 8E     	call Actualiza_relojes
  44  AA24
  45  AA24 FD E1        	pop iy
  46  AA26 DD E1        	pop ix
  47  AA28 F1           	pop af
  48  AA29 C1           	pop bc
  49  AA2A D1           	pop de
  50  AA2B E1           	pop hl
  51  AA2C D9           	exx
  52  AA2D C1           	pop bc
  53  AA2E D1           	pop de
  54  AA2F E1           	pop hl
  55  AA30 08           	ex af,af'
  56  AA31 F1           	pop af
  57  AA32 08           	ex af,af'
  58  AA33 D9           	exx
  59  AA34
  60  AA34 ED 7B 17 89  	ld sp,(Stack_3)
  61  AA38
  62  AA38 FB           	ei
  63  AA39 ED 4D        	reti
  64  AA3B
  65  AA3B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  66  AA3B
  67  AA3B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3B              ;
   3+ AA3B              ;	17/02/23
   4+ AA3B              ;
   5+ AA3B              ;	Sprites e índices.
   6+ AA3B
   7+ AA3B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1D 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 23 89        	defw End_Snapshot_1
 267+ 8500 27 89        	defw End_Snapshot_2
 268+ 8502 2B 89        	defw End_Snapshot_3
 269+ 8504 1F 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 25 89        	defw End_Snapshot_disparos_1
 271+ 8508 29 89        	defw End_Snapshot_disparos_2
 272+ 850A 2D 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  68  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 61 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 61 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  69  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 5A 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD 9D 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0B 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 5C 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD 9D 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 5C 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 11 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 09 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD 9D 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 5C 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 5C 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD 9D 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 05 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 09 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 05 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 12 00     	ld bc,18
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0B 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0B 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 0A        	cp 10
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 0A        	ld a,10
 209+ 88BA 32 0C 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 0C 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  70  88C5
  71  88C5              ; ******************************************************************************************************************************************************************************************
  72  88C5              ; Constantes.
  73  88C5              ; ******************************************************************************************************************************************************************************************
  74  88C5              ;
  75  88C5              ; 4/9/23
  76  88C5              ;
  77  88C5              ; Constantes generales.
  78  88C5              ;
  79  88C5
  80  88C5              Sprite_vacio equ $f000
  81  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  82  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  83  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  84  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  85  88C5
  86  88C5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  87  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  88  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  89  88C5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  90  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  91  88C5              ;
  92  88C5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  93  88C5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  94  88C5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  95  88C5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  96  88C5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  97  88C5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  98  88C5
  99  88C5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 100  88C5
 101  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 102  88C5
 103  88C5              ; ******************************************************************************************************************************************************************************************
 104  88C5              ; Variables.
 105  88C5              ; ******************************************************************************************************************************************************************************************
 106  88C5              ;
 107  88C5              ; 28/07/23
 108  88C5              ;
 109  88C5              ; Variables de DRAW. (Motor principal).
 110  88C5              ;
 111  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 112  88C5
 113  88C5 00           Filas db 0												; Filas. [DRAW]
 114  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 115  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 116  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 117  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 118  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 119  88CD
 120  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 121  88CD
 122  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 123  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 124  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 125  88CE 00           Attr db 0												; Atributos de la entidad:
 126  88CF
 127  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 128  88CF              ;
 129  88CF              ;	COLORES: 0 ..... NEGRO
 130  88CF              ;    		 1 ..... AZUL
 131  88CF              ; 			 2 ..... ROJO
 132  88CF              ;			 3 ..... MAGENTA
 133  88CF              ; 			 4 ..... VERDE
 134  88CF              ; 			 5 ..... CIAN
 135  88CF              ;			 6 ..... AMARILLO
 136  88CF              ; 			 7 ..... BLANCO
 137  88CF
 138  88CF 00 00        Indice_Sprite_der defw 0
 139  88D1 00 00        Indice_Sprite_izq defw 0
 140  88D3 00 00        Puntero_DESPLZ_der defw 0
 141  88D5 00 00        Puntero_DESPLZ_izq defw 0
 142  88D7
 143  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 144  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 145  88DA
 146  88DA              ; Variables de objeto. (Características).
 147  88DA
 148  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 149  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 150  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 151  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 152  88DE
 153  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 154  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 155  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 156  88DF 00 00 00...  Variables_de_borrado ds 6
 157  88E5
 158  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 159  88E7 00 00        	defw 0
 160  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 161  88EB 00 00 00 00  	db 0,0,0,0
 162  88EF
 163  88EF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 164  88EF
 165  88EF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 166  88F0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 167  88F0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 168  88F0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 169  88F0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 170  88F0              ;
 171  88F0              ; 														DESCRIPCIÖN:
 172  88F0              ;
 173  88F0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 174  88F0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 175  88F0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 176  88F0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 177  88F0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 178  88F0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 179  88F0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 180  88F0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 181  88F0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 182  88F0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 183  88F0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 184  88F0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 185  88F0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 186  88F0              ;
 187  88F0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 188  88F0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 189  88F0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 190  88F0
 191  88F0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 192  88F0
 193  88F0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 194  88F2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 195  88F4 00 00        Puntero_indice_mov_bucle defw 0							;
 196  88F6              ;
 197  88F6              ;
 198  88F6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 199  88F7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 200  88F7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 201  88F7 00           Incrementa_puntero_backup db 0
 202  88F8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 203  88F9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 204  88F9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 205  88FA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 206  88FB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 207  88FC              ;
 208  88FC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 209  88FC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 210  88FC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 211  88FC              ;
 212  88FC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 213  88FC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 214  88FC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 215  88FC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 216  88FC              ;
 217  88FC              ;														;	"$ff" ..... Bucle infinito de repetición.
 218  88FC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 219  88FC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 220  88FC
 221  88FC
 222  88FC              ; Variables de funcionamiento. [DRAW].
 223  88FC
 224  88FC 00           Columnas db 0
 225  88FD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 226  88FF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 227  88FF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 228  8900
 229  8900              ; variables de control general.
 230  8900
 231  8900 00           Ctrl_2 db 0
 232  8901              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 233  8901              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 234  8901              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 235  8901              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 236  8901              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 237  8901              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 238  8901              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 239  8901              ;
 240  8901              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 241  8901              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 242  8901              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 243  8901              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 244  8901              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 245  8901
 246  8901 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 247  8902
 248  8902              ;! 61 Bytes por entidad.
 249  8902
 250  8902              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 251  8902              ;					         		---------;      ;---------
 252  8902
 253  8902
 254  8902              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 255  8902
 256  8902 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 257  8903
 258  8903              ;														DESCRIPCIÓN:
 259  8903              ;
 260  8903              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 261  8903              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 262  8903              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 263  8903              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 264  8903              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 265  8903              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 266  8903
 267  8903              ;														BIT 3, Recarga de nueva oleada.
 268  8903              ;														BIT 4, Recarga de nueva oleada.
 269  8903              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 270  8903              ;														BIT 6, **** Frame completo.
 271  8903              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 272  8903
 273  8903 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 274  8905              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 275  8905              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 276  8905              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 277  8905
 278  8905
 279  8905
 280  8905              ; Gestión de ENTIDADES y CAJAS.
 281  8905
 282  8905 00 00        Puntero_store_caja defw 0
 283  8907 00 00        Puntero_restore_caja defw 0
 284  8909 00 00        Indice_restore_caja defw 0
 285  890B 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 286  890C 00           Numero_parcial_de_entidades db 0
 287  890D 00           Entidades_en_curso db 0									; ..... ..... .....
 288  890E 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 289  890F              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 290  890F              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 291  890F              ;														; _ (Numero_de_malotes)="0".
 292  890F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 293  8911 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 294  8913              ;														; _ puntero (Indice_entidades).
 295  8913
 296  8913
 297  8913              ;---------------------------------------------------------------------------------------------------------------
 298  8913              ;
 299  8913              ;	2/9/23
 300  8913              ;
 301  8913              ;	Álbumes.
 302  8913
 303  8913 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 304  8915              ;														; _variable para almacenar lo posición del puntero_
 305  8915              ; 														; _de pila, SP.
 306  8915 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 307  8917              ;														; La utiliza la rutina [Extrae_foto_registros].
 308  8917 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 309  8919 00 00        Stack_snapshot defw 0
 310  891B 00 00        Stack_snapshot_disparos defw 0
 311  891D
 312  891D 00 00        End_Snapshot defw 0
 313  891F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 314  891F 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 315  8921              ;														; _el snapshot de los registros del siguiente disparo.
 316  8921              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 317  8921 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 318  8923 00 00        End_Snapshot_1 defw 0
 319  8925 00 00        End_Snapshot_disparos_1 defw 0
 320  8927 00 00        End_Snapshot_2 defw 0
 321  8929 00 00        End_Snapshot_disparos_2 defw 0
 322  892B 00 00        End_Snapshot_3 defw 0
 323  892D 00 00        End_Snapshot_disparos_3 defw 0
 324  892F
 325  892F 00 00        Puntero_indice_album_de_fotos defw 0
 326  8931 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 327  8933
 328  8933 00 00        Puntero_indice_End_Snapshot defw 0
 329  8935 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 330  8937 00 00        Puntero_de_End_Snapshot defw 0
 331  8939 00 00        Puntero_de_End_Snapshot_disparos defw 0
 332  893B
 333  893B              ;---------------------------------------------------------------------------------------------------------------
 334  893B
 335  893B              ; Gestión de Disparos.
 336  893B
 337  893B 00           Numero_de_disparotes db 0
 338  893C 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 339  893E 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 340  8940 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 341  8941              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 342  8941              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 343  8941 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 344  8943              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 345  8943              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 346  8943              ;														; _produzca colisión.
 347  8943 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 348  8945              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 349  8945 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 350  8948              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 351  8948 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 352  894B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 353  894B 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 354  894D 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 355  894E
 356  894E              ;---------------------------------------------------------------------------------------------------------------
 357  894E
 358  894E              ; Relojes y temporizaciones.
 359  894E
 360  894E 00           Contador_de_frames db 0
 361  894F 00           Contador_de_frames_2 db 0
 362  8950
 363  8950 04           Clock_explosion db 4
 364  8951 1E           Clock_Entidades_en_curso db 30
 365  8952 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 366  8953              ;														; Repite la oleada de entidades.
 367  8953 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 368  8954 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 369  8955 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 370  8956
 371  8956 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 372  8957 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 373  8958 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 374  8959
 375  8959              ;---------------------------------------------------------------------------------------------------------------
 376  8959
 377  8959              ; Gestión de NIVELES.
 378  8959
 379  8959 00           Nivel db 0												; Nivel actual del juego.
 380  895A 00 00        Puntero_indice_NIVELES defw 0
 381  895C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 382  895E              ; 														; _ que definen el NIVEL.
 383  895E              ; Y todo comienza aquí .....
 384  895E              ;
 385  895E              ; Rutina principal *************************************************************************************************************************************************************************
 386  895E              ;
 387  895E              ;	14/11/22
 388  895E
 389  895E              START
 390  895E
 391  895E 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 392  8961 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 393  8963 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 394  8965 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 395  8967 F3           	DI
 396  8968
 397  8968 3E 07        	ld a,%00000111
 398  896A CD 8E 99     	call Cls
 399  896D
 400  896D CD 76 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 401  8970
 402  8970              ; INICIALIZACIÓN.
 403  8970
 404  8970 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 405  8973
 406  8973 CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 407  8976
 408  8976 CD 9E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 409  8979              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 410  8979 CD B4 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 411  897C              ;													     ; _ malotes antes de guardar ninguna foto.
 412  897C              ; ----------
 413  897C
 414  897C CD 26 8D     	call Restore_entidad
 415  897F
 416  897F 21 0C 89     	ld hl,Numero_parcial_de_entidades
 417  8982 46           	ld b,(hl)
 418  8983 04           	inc b
 419  8984 05           	dec b
 420  8985 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 421  8987
 422  8987              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 423  8987              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 424  8987              ;	Pintamos el resto de entidades:
 425  8987
 426  8987              ;	INICIA ENTIDADES !!!!!
 427  8987
 428  8987 C5           1 push bc  												; Guardo el contador de entidades.
 429  8988 CD 6B 8B     	call Inicia_entidad
 430  898B C1           	pop bc
 431  898C 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 432  898E
 433  898E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 434  898E              ; (Esto se dá cuando se inicia una nueva oleada).
 435  898E
 436  898E 3A 02 89     	ld a,(Ctrl_1)
 437  8991 CB 5F        	bit 3,a
 438  8993 20 15        	jr nz,5F											; Loop
 439  8995
 440  8995              ; 	INICIA AMADEUS !!!!!
 441  8995
 442  8995 CD 4D 8D     3 call Restore_Amadeus
 443  8998 CD A3 8C     	call Inicia_Puntero_objeto
 444  899B CD 81 93     	call Draw
 445  899E CD A0 7F     	call Guarda_foto_registros
 446  89A1 CD D9 8D     	call Guarda_datos_de_borrado_Amadeus
 447  89A4
 448  89A4 11 9E 85     	ld de,Amadeus_db
 449  89A7 CD 5F 8D     	call Store_Amadeus
 450  89AA
 451  89AA              ; 	INICIA DISPAROS !!!!!
 452  89AA
 453  89AA              ;	call Inicia_Puntero_Disparo_Entidades
 454  89AA              ;	call Inicia_Puntero_Disparo_Amadeus
 455  89AA
 456  89AA              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 457  89AA
 458  89AA CD 9E 8B     5 call Inicia_punteros_de_cajas
 459  89AD CD 26 8D     	call Restore_entidad
 460  89B0
 461  89B0 3A 02 89     	ld a,(Ctrl_1)
 462  89B3 CB 5F        	bit 3,a
 463  89B5 28 07        	jr z,6F
 464  89B7
 465  89B7              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 466  89B7
 467  89B7 21 02 89     	ld hl,Ctrl_1
 468  89BA CB 9E        	res 3,(hl)
 469  89BC 18 04        	jr Main
 470  89BE
 471  89BE
 472  89BE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 473  89BE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 474  89BE              ; _ para situarnos en el siguiente album.
 475  89BE
 476  89BE CD E5 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 477  89C1 F3           	di
 478  89C2
 479  89C2              ; ------------------------------------
 480  89C2
 481  89C2              Main
 482  89C2              ;
 483  89C2              ;	3/8/23
 484  89C2
 485  89C2 3E 01            ld a,1
 486  89C4 D3 FE        	out ($fe),a											; Azul.
 487  89C6
 488  89C6 FB           	ei
 489  89C7
 490  89C7 3A 51 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 491  89CA 47           	ld b,a
 492  89CB 3A 4E 89     	ld a,(Contador_de_frames)
 493  89CE B8           	cp b
 494  89CF 20 18        	jr nz,13F
 495  89D1
 496  89D1 3A 0C 89     	ld a,(Numero_parcial_de_entidades)
 497  89D4 47           	ld b,a
 498  89D5 3A 0D 89     	ld a,(Entidades_en_curso)
 499  89D8 B8           	cp b
 500  89D9 28 0E        	jr z,13F
 501  89DB 30 0C        	jr nc,13F
 502  89DD
 503  89DD 3C           	inc a
 504  89DE 32 0D 89     	ld (Entidades_en_curso),a
 505  89E1
 506  89E1 3A 51 89     	ld a,(Clock_Entidades_en_curso)
 507  89E4
 508  89E4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 509  89E4              ;! _ IMPREDECIBLE !!!!
 510  89E4
 511  89E4 C6 64        	add 100
 512  89E6 32 51 89     	ld (Clock_Entidades_en_curso),a
 513  89E9
 514  89E9              ; Habilita disparos.
 515  89E9
 516  89E9 21 53 89     13 ld hl,Disparo_Amadeus
 517  89EC 11 55 89     	ld de,CLOCK_repone_disparo_Amadeus
 518  89EF CD 52 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 519  89F2
 520  89F2 21 56 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 521  89F5 11 58 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 522  89F8 CD 52 9D     	call Habilita_disparos
 523  89FB
 524  89FB              ; COLISIONES.
 525  89FB
 526  89FB CD 63 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 527  89FE
 528  89FE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 529  89FE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 530  89FE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 531  89FE
 532  89FE AF           	xor a
 533  89FF 32 40 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 534  8A02
 535  8A02 CD 9E 8B     	call Inicia_punteros_de_cajas
 536  8A05 CD 26 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 537  8A08              ; 														; _ en DRAW.
 538  8A08 3A C5 88     	ld a,(Filas)
 539  8A0B A7           	and a
 540  8A0C 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 541  8A0E CD 38 8D     	call Incrementa_punteros_de_cajas
 542  8A11 18 F2        	jr 12B
 543  8A13
 544  8A13              ; ---------------------------------------------------------------------------------------
 545  8A13
 546  8A13 3A 0C 89     10 ld a,(Numero_parcial_de_entidades)
 547  8A16 47               ld b,a
 548  8A17 A7           	and a
 549  8A18 20 14        	jr nz,11F
 550  8A1A
 551  8A1A 21 02 89     	ld hl,Ctrl_1
 552  8A1D CB 66        	bit 4,(hl)
 553  8A1F C2 AF 8A     	jp nz,16F
 554  8A22
 555  8A22 21 02 89     	ld hl,Ctrl_1
 556  8A25 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 557  8A27
 558  8A27 3A 4E 89     	ld a,(Contador_de_frames)
 559  8A2A 3C           	inc a
 560  8A2B 32 52 89     	ld (Activa_recarga_cajas),a
 561  8A2E
 562  8A2E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 563  8A2E
 564  8A2E 3A 0D 89     11 ld a,(Entidades_en_curso)
 565  8A31 A7           	and a
 566  8A32 CA AF 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 567  8A35 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 568  8A36
 569  8A36              ; Código que ejecutamos con cada entidad:
 570  8A36              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 571  8A36
 572  8A36 C5           15 push bc 												; Nº de entidades en curso.
 573  8A37
 574  8A37              ; Impacto ???
 575  8A37
 576  8A37 3A DE 88     	ld a,(Impacto)
 577  8A3A A7           	and a
 578  8A3B 28 32        	jr z,8F
 579  8A3D
 580  8A3D              ; Hay Impacto en esta entidad.
 581  8A3D
 582  8A3D 21 50 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 583  8A40 35           	dec (hl)
 584  8A41 20 66        	jr nz,17F
 585  8A43
 586  8A43              ;! Velocidad de la animación de la explosión.
 587  8A43
 588  8A43 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 589  8A45              ;														; _,(velocidad de la explosión).
 590  8A45
 591  8A45              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 592  8A45 18 FE        	jr $
 593  8A47
 594  8A47 CD F9 8D     	call Repone_datos_de_borrado
 595  8A4A CD 3F 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 596  8A4D
 597  8A4D
 598  8A4D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 599  8A4D
 600  8A4D 3A 00 89     	ld a,(Ctrl_2)
 601  8A50 CB 4F        	bit 1,a
 602  8A52 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 603  8A54
 604  8A54              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 605  8A54
 606  8A54 3A CD 88     	ld a,(CTRL_DESPLZ)
 607  8A57 A7           	and a
 608  8A58 20 08        	jr nz,18F
 609  8A5A
 610  8A5A 21 84 84     	ld hl,Indice_Explosion_2x2-2
 611  8A5D 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 612  8A60 18 06        	jr 19F
 613  8A62
 614  8A62 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 615  8A65 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 616  8A68
 617  8A68 21 00 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 618  8A6B CB CE        	set 1,(hl)
 619  8A6D 18 22        	jr 7F
 620  8A6F
 621  8A6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 622  8A6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 623  8A6F
 624  8A6F 3A 02 89     8 ld a,(Ctrl_1)
 625  8A72 CB 57        	bit 2,a
 626  8A74 28 1B        	jr z,7F
 627  8A76
 628  8A76 2A 43 89     	ld hl,(Coordenadas_disparo_certero)
 629  8A79 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 630  8A7A              ;														; E contiene la coordenada_X del disparo.
 631  8A7A 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 632  8A7D              ;														; H FILA, (Coordenada_y de la entidad).
 633  8A7D A7           	and a
 634  8A7E ED 52        	sbc hl,de
 635  8A80
 636  8A80 CD 9A 92     	call Determina_resultado_comparativa
 637  8A83
 638  8A83 78           	ld a,b
 639  8A84 A7           	and a
 640  8A85 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 641  8A87
 642  8A87              ; ----- ----- -----
 643  8A87
 644  8A87 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 645  8A89 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 646  8A8C
 647  8A8C 21 02 89     	ld hl,Ctrl_1
 648  8A8F CB 96        	res 2,(hl)
 649  8A91
 650  8A91 CD 07 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 651  8A94
 652  8A94 3A EF 88     	ld a,(Ctrl_0)
 653  8A97 CB 67        	bit 4,a
 654  8A99 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 655  8A9B
 656  8A9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 657  8A9B              ; [[[
 658  8A9B CD C1 8D     	call Detecta_disparo_entidad
 659  8A9E              ; ]]]
 660  8A9E
 661  8A9E CD 7F 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 662  8AA1 CD C7 8D     	call Guarda_datos_de_borrado
 663  8AA4
 664  8AA4 21 EF 88     	ld hl,Ctrl_0
 665  8AA7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 666  8AA9
 667  8AA9 CD EB 8C     17 call Store_Restore_cajas
 668  8AAC
 669  8AAC C1           	pop bc
 670  8AAD 10 87        	djnz 15B
 671  8AAF
 672  8AAF              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 673  8AAF              ; Hemos gestionado todas las unidades.
 674  8AAF              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 675  8AAF
 676  8AAF              ;	ld hl,Ctrl_1
 677  8AAF              ;	res 2,(hl)
 678  8AAF
 679  8AAF CD E5 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 680  8AB2              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 681  8AB2              ;														; _ interrupción.
 682  8AB2              ; ----------------------------------------
 683  8AB2
 684  8AB2 3A 02 89     	ld a,(Ctrl_1) 										; Existe Loop?
 685  8AB5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 686  8AB7 CA C2 89     	jp z,Main
 687  8ABA
 688  8ABA 3A 4E 89     	ld a,(Contador_de_frames)
 689  8ABD 47           	ld b,a
 690  8ABE 3A 52 89     	ld a,(Activa_recarga_cajas)
 691  8AC1 B8           	cp b
 692  8AC2 28 08        	jr z,20F
 693  8AC4
 694  8AC4 21 02 89     	ld hl,Ctrl_1
 695  8AC7 CB E6        	set 4,(hl)
 696  8AC9 C3 C2 89     	jp Main
 697  8ACC
 698  8ACC 21 02 89     20 ld hl,Ctrl_1
 699  8ACF CB A6        	res 4,(hl)
 700  8AD1
 701  8AD1 F3           	di
 702  8AD2
 703  8AD2 3A 4E 89     	ld a,(Contador_de_frames)
 704  8AD5
 705  8AD5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 706  8AD5              ;! _ IMPREDECIBLE !!!!
 707  8AD5
 708  8AD5 C6 0A        	add 10
 709  8AD7 32 51 89     	ld (Clock_Entidades_en_curso),a
 710  8ADA
 711  8ADA C3 73 89     	jp 4B
 712  8ADD
 713  8ADD C9           	ret
 714  8ADE
 715  8ADE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 716  8ADE
 717  8ADE              Gestiona_Amadeus
 718  8ADE
 719  8ADE 3E 04            ld a,4
 720  8AE0 D3 FE        	out ($fe),a											; Azul.
 721  8AE2
 722  8AE2 CD 4D 8D     	call Restore_Amadeus
 723  8AE5
 724  8AE5              ;! Activa/desactiva impacto con Amadeus.
 725  8AE5
 726  8AE5 3A DE 88     	ld a,(Impacto)
 727  8AE8 A7           	and a
 728  8AE9 20 FE        	jr nz,$
 729  8AEB
 730  8AEB CD 58 8B     	call Mov_Amadeus
 731  8AEE
 732  8AEE 3A EF 88     	ld a,(Ctrl_0)
 733  8AF1 CB 67        	bit 4,a
 734  8AF3 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 735  8AF5
 736  8AF5 CD 7F 8B     	call Guarda_foto_entidad_a_pintar
 737  8AF8 CD D9 8D     	call Guarda_datos_de_borrado_Amadeus
 738  8AFB
 739  8AFB 21 EF 88     14 ld hl,Ctrl_0
 740  8AFE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 741  8B00
 742  8B00 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 743  8B03 CD 5F 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 744  8B06
 745  8B06              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 746  8B06
 747  8B06              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 748  8B06
 749  8B06              ;	call Calcula_numero_de_disparotes
 750  8B06
 751  8B06 C9           	ret
 752  8B07
 753  8B07              ; --------------------------------------------------------------------------------------------------------------
 754  8B07              ;
 755  8B07              ;	27/05/23
 756  8B07
 757  8B07              Mov_obj
 758  8B07
 759  8B07 3A 00 89     	ld a,(Ctrl_2)
 760  8B0A CB 4F        	bit 1,a
 761  8B0C 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 762  8B0E
 763  8B0E              ; Explosión:
 764  8B0E
 765  8B0E 3A 01 89     	ld a,(Frames_explosion)
 766  8B11 A7           	and a
 767  8B12 20 11        	jr nz,4F
 768  8B14
 769  8B14              ; Una alimaña menos!!!!!!!!!1
 770  8B14
 771  8B14 CD 68 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 772  8B17 21 0C 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 773  8B1A 35           	dec (hl)
 774  8B1B 21 0D 89     	ld hl,Entidades_en_curso
 775  8B1E 35           	dec (hl)
 776  8B1F 21 0B 89     	ld hl,Numero_de_entidades
 777  8B22 35           	dec (hl)
 778  8B23 18 32        	jr 3F
 779  8B25
 780  8B25              ; -----
 781  8B25
 782  8B25              ;	`Movemos´ la explosión.
 783  8B25
 784  8B25 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 785  8B28 23           	inc hl
 786  8B29 23           	inc hl
 787  8B2A 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 788  8B2D CD 9D 8C     	call Extrae_address
 789  8B30 22 C9 88     	ld (Puntero_objeto),hl
 790  8B33
 791  8B33 21 01 89     	ld hl,Frames_explosion
 792  8B36 35           	dec (hl)
 793  8B37
 794  8B37              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 795  8B37 18 1E        	jr 3F
 796  8B39
 797  8B39 AF           2 xor a
 798  8B3A 32 EF 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 799  8B3D
 800  8B3D              ; Movemos Entidades malignas.
 801  8B3D
 802  8B3D CD FD 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 803  8B40
 804  8B40 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 805  8B43 CB 67        	bit 4,a
 806  8B45 C8           	ret z
 807  8B46
 808  8B46              ; Ha habido desplazamiento de la entidad maligna.
 809  8B46              ; Ha llegado a zona de AMADEUS ???
 810  8B46
 811  8B46 3A CC 88     	ld a,(Coordenada_y)
 812  8B49 FE 14        	cp $14
 813  8B4B D4 28 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 814  8B4E              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 815  8B4E              ; ---------
 816  8B4E
 817  8B4E CD 86 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 818  8B51 CD F9 8D     	call Repone_datos_de_borrado
 819  8B54 CD 3F 8C     	call Limpia_Variables_de_borrado
 820  8B57
 821  8B57 C9           3 ret													; _de la misma.
 822  8B58
 823  8B58              ; --------------------------------------------------------------------------------------------------------------
 824  8B58              ;
 825  8B58              ;	29/1/23
 826  8B58
 827  8B58              Mov_Amadeus
 828  8B58
 829  8B58 CD 8A 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 830  8B5B
 831  8B5B 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 832  8B5E CB 67        	bit 4,a
 833  8B60 C8           	ret z
 834  8B61
 835  8B61              ; ---------
 836  8B61
 837  8B61 CD 86 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 838  8B64 CD E9 8D     	call Repone_datos_de_borrado_Amadeus
 839  8B67 CD 3F 8C     	call Limpia_Variables_de_borrado
 840  8B6A
 841  8B6A C9           	ret
 842  8B6B
 843  8B6B              ; -----------------------------------------------------------------------------------
 844  8B6B
 845  8B6B CD A3 8C     Inicia_entidad	call Inicia_Puntero_objeto
 846  8B6E CD A2 99     	call Recompone_posicion_inicio
 847  8B71 CD 81 93     	call Draw
 848  8B74 CD A0 7F     	call Guarda_foto_registros
 849  8B77 CD C7 8D     	call Guarda_datos_de_borrado
 850  8B7A F3           	di
 851  8B7B CD EB 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 852  8B7E C9           	ret
 853  8B7F
 854  8B7F              ; --------------------------------------------------------------------------------------------------------------
 855  8B7F              ;
 856  8B7F              ;	31/08/23
 857  8B7F              ;
 858  8B7F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 859  8B7F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 860  8B7F
 861  8B7F              Guarda_foto_entidad_a_pintar
 862  8B7F
 863  8B7F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 864  8B7F
 865  8B7F CD 81 93     	call Draw
 866  8B82 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 867  8B85 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 868  8B86
 869  8B86              ; --------------------------------------------------------------------------------------------------------------
 870  8B86              ;
 871  8B86              ;	19/9/23
 872  8B86
 873  8B86 21 C5 88     Prepara_var_pintado ld hl,Filas
 874  8B89 11 E5 88     	ld de,Variables_de_pintado
 875  8B8C 01 08 00     	ld bc,8
 876  8B8F ED B0        	ldir
 877  8B91 C9           	ret
 878  8B92
 879  8B92              ; --------------------------------------------------------------------------------------------------------------
 880  8B92
 881  8B92 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 882  8B95 11 C5 88     	ld de,Filas
 883  8B98 01 08 00     	ld bc,8
 884  8B9B ED B0        	ldir
 885  8B9D C9           	ret
 886  8B9E
 887  8B9E              ; *************************************************************************************************************************************************************
 888  8B9E              ;
 889  8B9E              ; 8/1/23
 890  8B9E              ;
 891  8B9E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 892  8B9E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 893  8B9E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 894  8B9E
 895  8B9E              ; Destruye HL y DE !!!!!
 896  8B9E
 897  8B9E              Inicia_punteros_de_cajas
 898  8B9E
 899  8B9E 21 8C 85     	ld hl,Indice_de_cajas
 900  8BA1 CD 9D 8C         call Extrae_address
 901  8BA4 22 05 89         ld (Puntero_store_caja),hl
 902  8BA7 21 8E 85     	ld hl,Indice_de_cajas+2
 903  8BAA 22 09 89     	ld (Indice_restore_caja),hl
 904  8BAD CD 9D 8C     	call Extrae_address
 905  8BB0 22 07 89     	ld (Puntero_restore_caja),hl
 906  8BB3 C9               ret
 907  8BB4
 908  8BB4              ; ---------------------------------------------------------------
 909  8BB4              ;
 910  8BB4              ;	9/8/23
 911  8BB4              ;
 912  8BB4              ;	Inicialización y gestión de álbumes de fotos y cajas.
 913  8BB4
 914  8BB4              Inicia_punteros_de_albumes_y_malotes
 915  8BB4
 916  8BB4 21 EC 84     	ld hl,Indice_album_de_fotos
 917  8BB7 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 918  8BBA CD 9D 8C     	call Extrae_address
 919  8BBD 22 19 89     	ld (Stack_snapshot),hl
 920  8BC0
 921  8BC0 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 922  8BC3 22 31 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 923  8BC6 CD 9D 8C     	call Extrae_address
 924  8BC9 22 1B 89     	ld (Stack_snapshot_disparos),hl
 925  8BCC
 926  8BCC 21 FC 84     	ld hl,Indice_End_Snapshot
 927  8BCF 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
 928  8BD2 CD 9D 8C     	call Extrae_address
 929  8BD5 22 37 89     	ld (Puntero_de_End_Snapshot),hl
 930  8BD8
 931  8BD8 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 932  8BDB 22 35 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 933  8BDE CD 9D 8C     	call Extrae_address
 934  8BE1 22 39 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 935  8BE4
 936  8BE4 C9           	ret
 937  8BE5
 938  8BE5              ;	23/9/23
 939  8BE5
 940  8BE5              Avanza_puntero_de_album_de_fotos_y_malotes
 941  8BE5
 942  8BE5              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 943  8BE5
 944  8BE5              ; Estamos en el último álbum del índice???.
 945  8BE5
 946  8BE5 F3           	di
 947  8BE6 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
 948  8BE9 01 F2 84     	ld bc,Indice_album_de_fotos+6
 949  8BEC A7           	and a
 950  8BED ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 951  8BEF 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 952  8BF1 FB           	ei
 953  8BF2
 954  8BF2 21 02 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 955  8BF5 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 956  8BF7 76           	halt
 957  8BF8 C9           	ret
 958  8BF9
 959  8BF9 2A 2F 89     1 ld hl,(Puntero_indice_album_de_fotos)
 960  8BFC 23           	inc hl
 961  8BFD 23           	inc hl
 962  8BFE 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 963  8C01 CD 9D 8C     	call Extrae_address
 964  8C04 22 19 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 965  8C07
 966  8C07 2A 33 89     	ld hl,(Puntero_indice_End_Snapshot)
 967  8C0A 23           	inc hl
 968  8C0B 23           	inc hl
 969  8C0C 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
 970  8C0F CD 9D 8C     	call Extrae_address
 971  8C12 22 37 89     	ld (Puntero_de_End_Snapshot),hl
 972  8C15
 973  8C15 FB           	ei
 974  8C16 C9           	ret
 975  8C17
 976  8C17              ; *************************************************************************************************************************************************************
 977  8C17              ;
 978  8C17              ; 8/1/23
 979  8C17              ;
 980  8C17              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 981  8C17
 982  8C17 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 983  8C1A 22 3C 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 984  8C1D C9           	ret
 985  8C1E 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 986  8C21 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 987  8C24 C9           	ret
 988  8C25
 989  8C25              ; -------------------------------------------------------------------------------------------------------------
 990  8C25              ;
 991  8C25              ; 21/9/23
 992  8C25              ;
 993  8C25
 994  8C25              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 995  8C25
 996  8C25              Limpia_album_Amadeus
 997  8C25
 998  8C25 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 999  8C28 7E           	ld a,(hl)
1000  8C29 A7           	and a
1001  8C2A C8           	ret z
1002  8C2B
1003  8C2B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1004  8C2E 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1005  8C31 01 0B 00     	ld bc,11
1006  8C34 AF           	xor a
1007  8C35 77           	ld (hl),a
1008  8C36 ED B0        	ldir
1009  8C38
1010  8C38 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1011  8C3B 22 21 89     	ld (End_Snapshot_Amadeus),hl
1012  8C3E
1013  8C3E C9           	ret
1014  8C3F
1015  8C3F 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1016  8C42 11 E0 88     	ld de,Variables_de_borrado+1
1017  8C45 01 05 00     	ld bc,5
1018  8C48 AF           	xor a
1019  8C49 77           	ld (hl),a
1020  8C4A ED B0        	ldir
1021  8C4C C9           	ret
1022  8C4D
1023  8C4D              ; -------------------------------------------------------------------------------------------------------------
1024  8C4D              ;
1025  8C4D              ; 8/9/23
1026  8C4D              ;
1027  8C4D
1028  8C4D              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1029  8C4D              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1030  8C4D
1031  8C4D              Calcula_numero_de_malotes
1032  8C4D
1033  8C4D 21 00 70     	ld hl,Album_de_fotos
1034  8C50 EB           	ex de,hl
1035  8C51 2A 1D 89     	ld hl,(End_Snapshot)
1036  8C54
1037  8C54 7C           	ld a,h
1038  8C55 A7           	and a
1039  8C56 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1040  8C58
1041  8C58 06 00        4 ld b,0
1042  8C5A 7D           	ld a,l
1043  8C5B 93           	sub e
1044  8C5C 28 07        	jr z,1F
1045  8C5E
1046  8C5E              ; Nº de malotes no es "0".
1047  8C5E
1048  8C5E D6 06        2 sub 6
1049  8C60 04           	inc b
1050  8C61 A7           	and a
1051  8C62 20 FA        	jr nz,2B
1052  8C64 78           	ld a,b
1053  8C65
1054  8C65 32 0E 89     1 ld (Numero_de_malotes),a
1055  8C68 C9           	ret
1056  8C69
1057  8C69              ; -------------------------------------------------------------------------------------------------------------
1058  8C69              ;
1059  8C69              ; 8/9/23
1060  8C69              ;
1061  8C69
1062  8C69              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1063  8C69              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1064  8C69
1065  8C69              Calcula_malotes_Amadeus
1066  8C69
1067  8C69 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1068  8C6C EB           	ex de,hl
1069  8C6D 2A 21 89     	ld hl,(End_Snapshot_Amadeus)
1070  8C70
1071  8C70 7C           	ld a,h
1072  8C71 A7           	and a
1073  8C72 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1074  8C74
1075  8C74 06 00        	ld b,0
1076  8C76 7D           	ld a,l
1077  8C77 93           	sub e
1078  8C78 28 07        	jr z,1F
1079  8C7A
1080  8C7A              ; Nº de malotes no es "0".
1081  8C7A
1082  8C7A D6 06        2 sub 6
1083  8C7C 04           	inc b
1084  8C7D A7           	and a
1085  8C7E 20 FA        	jr nz,2B
1086  8C80 78           	ld a,b
1087  8C81
1088  8C81 32 0E 89     1 ld (Numero_de_malotes),a
1089  8C84 C9           	ret
1090  8C85
1091  8C85              ; -------------------------------------------------------------------------------------------------------------
1092  8C85              ;
1093  8C85              ; 28/2/23
1094  8C85              ;
1095  8C85
1096  8C85              Calcula_numero_de_disparotes
1097  8C85
1098  8C85 21 50 71     	ld hl,Album_de_fotos_disparos
1099  8C88 EB           	ex de,hl
1100  8C89 2A 39 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1101  8C8C
1102  8C8C 06 00        	ld b,0
1103  8C8E 7D           	ld a,l
1104  8C8F 93           	sub e
1105  8C90 28 07        	jr z,1F
1106  8C92
1107  8C92              ; Nº de malotes no es "0".
1108  8C92
1109  8C92 D6 06        2 sub 6
1110  8C94 04           	inc b
1111  8C95 A7           	and a
1112  8C96 20 FA        	jr nz,2B
1113  8C98 78           	ld a,b
1114  8C99
1115  8C99 32 3B 89     1 ld (Numero_de_disparotes),a
1116  8C9C C9           	ret
1117  8C9D
1118  8C9D              ; *************************************************************************************************************************************************************
1119  8C9D              ;
1120  8C9D              ; 20/10/22
1121  8C9D              ;
1122  8C9D              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1123  8C9D              ;
1124  8C9D              ; Destruye el puntero y DE !!!!!
1125  8C9D
1126  8C9D 5E           Extrae_address ld e,(hl)
1127  8C9E 23           	inc hl
1128  8C9F 56           	ld d,(hl)
1129  8CA0 2B           	dec hl
1130  8CA1 EB           	ex de,hl
1131  8CA2 C9           	ret
1132  8CA3
1133  8CA3              ; *************************************************************************************************************************************************************
1134  8CA3              ;
1135  8CA3              ;	7/2/23
1136  8CA3              ;
1137  8CA3              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1138  8CA3              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1139  8CA3              ;
1140  8CA3              ;   Destruye HL y BC !!!!!,
1141  8CA3              ;
1142  8CA3              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1143  8CA3              ;					"0" ..... Izquierda.
1144  8CA3
1145  8CA3              Inicia_Puntero_objeto
1146  8CA3
1147  8CA3 3A D9 88     	ld a,(Cuad_objeto)
1148  8CA6 E6 01        	and 1
1149  8CA8 F5           	push af
1150  8CA9 CC C7 8C     	call z,Inicia_puntero_objeto_izq
1151  8CAC F1           	pop af
1152  8CAD 28 2B        	jr z,1F
1153  8CAF CD B4 8C     	call Inicia_puntero_objeto_der
1154  8CB2 18 26        	jr 1F
1155  8CB4
1156  8CB4              ; Arrancamos desde la parte izquierda de la pantalla.
1157  8CB4              ; Iniciamos (Indice_Sprite_der).
1158  8CB4
1159  8CB4 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1160  8CB7 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1161  8CBA CD 9D 8C     	call Extrae_address
1162  8CBD 22 C9 88     	ld (Puntero_objeto),hl
1163  8CC0
1164  8CC0 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1165  8CC3 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1166  8CC6 C9           	ret
1167  8CC7
1168  8CC7              ; Arrancamos desde la parte derecha de la pantalla.
1169  8CC7              ; Iniciamos (Indice_Sprite_izq).
1170  8CC7
1171  8CC7 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1172  8CCA 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1173  8CCD CD 9D 8C     	call Extrae_address
1174  8CD0 22 C9 88     	ld (Puntero_objeto),hl
1175  8CD3
1176  8CD3 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1177  8CD6 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1178  8CD9 C9           	ret
1179  8CDA
1180  8CDA              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1181  8CDA
1182  8CDA 21 40 83     1 ld hl,Amadeus
1183  8CDD ED 4B C9 88  	ld bc,(Puntero_objeto)
1184  8CE1 B7 ED 42     	sub hl,bc
1185  8CE4 C0           	ret nz
1186  8CE5 21 EF 88     	ld hl,Ctrl_0
1187  8CE8 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1188  8CEA C9           	ret 												; _de nuestra nave en los extremos.
1189  8CEB
1190  8CEB              ; *************************************************************************************************************************************************************
1191  8CEB              ;
1192  8CEB              ;	14/5/23
1193  8CEB              ;
1194  8CEB              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1195  8CEB              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1196  8CEB
1197  8CEB              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1198  8CEB              ;	_de la 2ª y 3ª entidad respectivamente.
1199  8CEB
1200  8CEB              Store_Restore_cajas
1201  8CEB
1202  8CEB E5           	push hl
1203  8CEC D5           	push de
1204  8CED C5            	push bc
1205  8CEE
1206  8CEE              ;	STORE !!!!!
1207  8CEE              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1208  8CEE
1209  8CEE 21 C5 88     	ld hl,Filas
1210  8CF1 ED 5B 05 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1211  8CF5 01 3D 00     	ld bc,61
1212  8CF8 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1213  8CFA
1214  8CFA              ; 	Entidad_sospechosa. 20/4/23
1215  8CFA
1216  8CFA 3A DE 88     	ld a,(Impacto)
1217  8CFD A7           	and a
1218  8CFE 28 0C        	jr z,1F
1219  8D00
1220  8D00 2A 05 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1221  8D03 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1222  8D06 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1223  8D07 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1224  8D09 22 41 89     	ld (Entidad_sospechosa_de_colision),hl
1225  8D0C
1226  8D0C              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1227  8D0C
1228  8D0C 2A 07 89     1 ld hl,(Puntero_restore_caja)
1229  8D0F 7E           	ld a,(hl)
1230  8D10 A7           	and a
1231  8D11 F5           	push af
1232  8D12 28 08        	jr z,2F
1233  8D14
1234  8D14 11 C5 88     	ld de,Filas
1235  8D17 01 3D 00     	ld bc,61
1236  8D1A ED B0        	ldir
1237  8D1C
1238  8D1C CD 38 8D     2 call Incrementa_punteros_de_cajas
1239  8D1F F1           	pop af
1240  8D20 28 EA        	jr z,1B
1241  8D22
1242  8D22 C1           	pop bc
1243  8D23 D1           	pop de
1244  8D24 E1           	pop hl
1245  8D25
1246  8D25 C9           	ret
1247  8D26
1248  8D26              ; **************************************************************************************************
1249  8D26              ;
1250  8D26              ;	12/05/23
1251  8D26              ;
1252  8D26              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1253  8D26
1254  8D26 E5           Restore_entidad push hl
1255  8D27 D5           	push de
1256  8D28 C5            	push bc
1257  8D29
1258  8D29 2A 05 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1259  8D2C 11 C5 88     	ld de,Filas
1260  8D2F 01 3D 00     	ld bc,61
1261  8D32 ED B0        	ldir
1262  8D34
1263  8D34 C1           	pop bc
1264  8D35 D1           	pop de
1265  8D36 E1           	pop hl
1266  8D37 C9           	ret
1267  8D38
1268  8D38
1269  8D38              ; **************************************************************************************************
1270  8D38              ;
1271  8D38              ;	08/05/23
1272  8D38              ;
1273  8D38              ;	Incrementamos los dos punteros de entidades. (+1).
1274  8D38
1275  8D38 2A 07 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1276  8D3B 22 05 89     	ld (Puntero_store_caja),hl
1277  8D3E 2A 09 89     	ld hl,(Indice_restore_caja)
1278  8D41 23           	inc hl
1279  8D42 23           	inc hl
1280  8D43 22 09 89     	ld (Indice_restore_caja),hl
1281  8D46 CD 9D 8C         call Extrae_address
1282  8D49 22 07 89         ld (Puntero_restore_caja),hl
1283  8D4C C9               ret
1284  8D4D
1285  8D4D              ; **************************************************************************************************
1286  8D4D              ;
1287  8D4D              ;	25/01/23
1288  8D4D              ;
1289  8D4D              ;	Restore_Amadeus
1290  8D4D              ;
1291  8D4D              ;	Cargamos en DRAW los parámetros de Amadeus.
1292  8D4D              ;
1293  8D4D
1294  8D4D E5           Restore_Amadeus	push hl
1295  8D4E D5           	push de
1296  8D4F C5            	push bc
1297  8D50 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1298  8D53 11 C5 88     	ld de,Filas
1299  8D56 01 3D 00     	ld bc,61
1300  8D59 ED B0        	ldir
1301  8D5B C1           	pop bc
1302  8D5C D1           	pop de
1303  8D5D E1           	pop hl
1304  8D5E C9           	ret
1305  8D5F
1306  8D5F              ; *************************************************************************************************************************************************************
1307  8D5F              ;
1308  8D5F              ;	29/04/23
1309  8D5F              ;
1310  8D5F              ;	Store_Amadeus
1311  8D5F              ;
1312  8D5F              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1313  8D5F              ;
1314  8D5F              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1315  8D5F              ;
1316  8D5F              ;	DESTRUYE: HL y BC y DE.
1317  8D5F
1318  8D5F 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1319  8D62 01 3D 00     	ld bc,61
1320  8D65 ED B0        	ldir
1321  8D67 C9           	ret
1322  8D68
1323  8D68              ; -----------------------------------------------------------
1324  8D68              ;
1325  8D68              ;	27/04/23
1326  8D68              ;
1327  8D68              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1328  8D68              ;
1329  8D68              ;	Destruye: HL,BC,DE,A
1330  8D68
1331  8D68 21 C5 88     Borra_datos_entidad ld hl,Filas
1332  8D6B 01 3C 00     	ld bc,60
1333  8D6E AF           	xor a
1334  8D6F 77           	ld (hl),a
1335  8D70 11 C6 88     	ld de,Filas+1
1336  8D73 ED B0        	ldir
1337  8D75 C9           	ret
1338  8D76
1339  8D76              ; -----------------------------------------------------------
1340  8D76
1341  8D76              ; Teclado.
1342  8D76
1343  8D76 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1344  8D78 DB FE        	in a,($fe)
1345  8D7A E6 01        	and $01
1346  8D7C 28 02        	jr z,1f
1347  8D7E 18 F6        	jr Pulsa_ENTER
1348  8D80 C9           1 ret
1349  8D81
1350  8D81              ; **************************************************************************************************
1351  8D81              ;
1352  8D81              ; Temporización.
1353  8D81
1354  8D81              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1355  8D81              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1356  8D81              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1357  8D81              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1358  8D81
1359  8D81              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1360  8D81              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1361  8D81              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1362  8D81
1363  8D81              ; A partir de $4f61 no hace falta DELAY.
1364  8D81
1365  8D81              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1366  8D81
1367  8D81 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1368  8D84 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1369  8D85 78           	LD A,B
1370  8D86 A7           	AND A
1371  8D87 20 FB        	JR NZ,wait
1372  8D89 C9           	RET
1373  8D8A
1374  8D8A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1375  8D8A              ;
1376  8D8A              ;	5/3/23
1377  8D8A              ;
1378  8D8A              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1379  8D8A
1380  8D8A              Movimiento_Amadeus
1381  8D8A
1382  8D8A              ; Disparo.
1383  8D8A
1384  8D8A 3A 53 89     	ld a,(Disparo_Amadeus)
1385  8D8D A7           	and a
1386  8D8E 20 02        	jr nz,1F
1387  8D90 18 15        	jr 2F
1388  8D92
1389  8D92 3E F7        1 ld a,$f7													; "5" para disparar.
1390  8D94 DB FE        	in a,($fe)
1391  8D96 E6 10        	and $10
1392  8D98
1393  8D98 F5           	push af
1394  8D99 CC 8B 8E     	call z,Genera_disparo
1395  8D9C F1           	pop af
1396  8D9D 20 08        	jr nz,2F
1397  8D9F
1398  8D9F 3A 53 89     	ld a,(Disparo_Amadeus)
1399  8DA2 EE 01        	xor 1
1400  8DA4 32 53 89     	ld (Disparo_Amadeus),a
1401  8DA7
1402  8DA7 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1403  8DA9 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1404  8DAB E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1405  8DAD CC 5C 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1406  8DB0
1407  8DB0 3E F7        	ld a,$f7
1408  8DB2 DB FE        	in a,($fe)
1409  8DB4 E6 01        	and $01
1410  8DB6 C8           	ret z
1411  8DB7
1412  8DB7 3E F7        	ld a,$f7
1413  8DB9 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1414  8DBB E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1415  8DBD CC 3E 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1416  8DC0 C9           	ret
1417  8DC1
1418  8DC1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1419  8DC1              ;
1420  8DC1              ;	Rutina provisional para que los malotes cagen balas.
1421  8DC1
1422  8DC1              Detecta_disparo_entidad
1423  8DC1
1424  8DC1 3A 56 89     	ld a,(Disparo_entidad)
1425  8DC4 A7           	and a
1426  8DC5 C8           	ret z
1427  8DC6
1428  8DC6              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1429  8DC6
1430  8DC6              ;	ld a,$7f				; Detecta SPACE.
1431  8DC6              ;	in a,($fe)
1432  8DC6              ;	and 1
1433  8DC6              ;	ret nz
1434  8DC6
1435  8DC6              ;	call Genera_disparo
1436  8DC6 C9           	ret
1437  8DC7
1438  8DC7              ; ----------------------------------------------------------------------
1439  8DC7              ;
1440  8DC7              ;	8/9/23
1441  8DC7
1442  8DC7              Guarda_datos_de_borrado
1443  8DC7
1444  8DC7 F3           	di
1445  8DC8
1446  8DC8 2A 19 89     	ld hl,(Stack_snapshot)
1447  8DCB
1448  8DCB 2B           	dec hl
1449  8DCC 7E           	ld a,(hl)
1450  8DCD A7           	and a
1451  8DCE C8           	ret z										; Salimos si es álbum está vacío.
1452  8DCF
1453  8DCF 11 E4 88     	ld de,Variables_de_borrado+5
1454  8DD2 01 06 00     	ld bc,6
1455  8DD5 ED B8        	lddr
1456  8DD7
1457  8DD7 FB           	ei
1458  8DD8
1459  8DD8 C9           	ret
1460  8DD9
1461  8DD9              ; ----------------------------------------------------------------------
1462  8DD9              ;
1463  8DD9              ;	8/9/23
1464  8DD9
1465  8DD9 2A 21 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1466  8DDC 2B            	dec hl
1467  8DDD 7E           	ld a,(hl)
1468  8DDE A7           	and a
1469  8DDF C8           	ret z										; Salimos si es álbum está vacío.
1470  8DE0
1471  8DE0 11 E4 88     	ld de,Variables_de_borrado+5
1472  8DE3 01 06 00     	ld bc,6
1473  8DE6 ED B8        	lddr
1474  8DE8 C9           	ret
1475  8DE9
1476  8DE9              ; ----------------------------------------------------------------------
1477  8DE9              ;
1478  8DE9              ;	9/9/23
1479  8DE9
1480  8DE9              Repone_datos_de_borrado_Amadeus
1481  8DE9
1482  8DE9 21 DF 88     	ld hl,Variables_de_borrado
1483  8DEC 11 A0 72     	ld de,Album_de_fotos_Amadeus
1484  8DEF 01 06 00     	ld bc,6
1485  8DF2 ED B0        	ldir
1486  8DF4
1487  8DF4 EB           	ex de,hl
1488  8DF5 22 21 89     	ld (End_Snapshot_Amadeus),hl
1489  8DF8
1490  8DF8 C9           	ret
1491  8DF9
1492  8DF9              ; ----------------------------------------------------------------------
1493  8DF9              ;
1494  8DF9              ;	18/9/23
1495  8DF9              ;
1496  8DF9
1497  8DF9              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1498  8DF9              ;	_ Album_de_fotos correspondiente.
1499  8DF9
1500  8DF9              ;	DI.
1501  8DF9
1502  8DF9              Repone_datos_de_borrado
1503  8DF9
1504  8DF9 F3           	di
1505  8DFA
1506  8DFA ED 5B 19 89  	ld de,(Stack_snapshot)
1507  8DFE 21 DF 88     	ld hl,Variables_de_borrado
1508  8E01 01 06 00     	ld bc,6
1509  8E04 ED B0        	ldir
1510  8E06
1511  8E06 EB           	ex de,hl
1512  8E07 22 19 89     	ld (Stack_snapshot),hl
1513  8E0A
1514  8E0A FB           	ei
1515  8E0B
1516  8E0B C9           	ret
1517  8E0C
1518  8E0C              ; ----------------------------------------------------------------------
1519  8E0C              ;
1520  8E0C              ;	11/8/23
1521  8E0C
1522  8E0C              Gestiona_entidades
1523  8E0C
1524  8E0C              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1525  8E0C              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1526  8E0C
1527  8E0C              ; PINTAMOS.
1528  8E0C
1529  8E0C 3E 02        	ld a,2
1530  8E0E D3 FE            out ($fe),a											; Rojo.
1531  8E10
1532  8E10              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1533  8E10              ; _ , no gestionamos los álbumes de fotos.
1534  8E10
1535  8E10 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1536  8E13 01 EC 84     	ld bc,Indice_album_de_fotos
1537  8E16 A7           	and a
1538  8E17 ED 42        	sbc hl,bc
1539  8E19
1540  8E19 28 FE        	jr z,$
1541  8E1B C8           	ret z
1542  8E1C
1543  8E1C              ;	call Extrae_foto_disparos
1544  8E1C              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1545  8E1C
1546  8E1C CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1547  8E1F
1548  8E1F              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1549  8E1F
1550  8E1F 3A 02 89     	ld a,(Ctrl_1)
1551  8E22 CB 6F        	bit 5,a
1552  8E24 20 27        	jr nz,1F
1553  8E26
1554  8E26
1555  8E26
1556  8E26              ; !!! debug. El buffer no está completo.
1557  8E26 3A 4E 89     	ld a,(Contador_de_frames)
1558  8E29 18 FE        	jr $
1559  8E2B
1560  8E2B
1561  8E2B
1562  8E2B
1563  8E2B
1564  8E2B              ; No hemos terminado de guardar el último FRAME.
1565  8E2B
1566  8E2B 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1567  8E2E 2B           	dec hl
1568  8E2F 2B           	dec hl
1569  8E30 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
1570  8E33
1571  8E33 2A 33 89     	ld hl,(Puntero_indice_End_Snapshot)
1572  8E36 2B           	dec hl
1573  8E37 2B           	dec hl
1574  8E38 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
1575  8E3B CD 9D 8C     	call Extrae_address
1576  8E3E 22 37 89     	ld (Puntero_de_End_Snapshot),hl
1577  8E41
1578  8E41 CD 9D 8C     	call Extrae_address
1579  8E44
1580  8E44              ; Esta vacío este album???
1581  8E44
1582  8E44 24           	inc h
1583  8E45 25           	dec h
1584  8E46 28 05        	jr z,1F
1585  8E48
1586  8E48              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1587  8E48
1588  8E48 22 19 89     	ld (Stack_snapshot),hl
1589  8E4B 18 09        	jr 2F
1590  8E4D
1591  8E4D              ; FRAME completo.
1592  8E4D
1593  8E4D 2A 2F 89     1 ld hl,(Puntero_indice_album_de_fotos)
1594  8E50 CD 9D 8C     	call Extrae_address
1595  8E53 22 19 89     	ld (Stack_snapshot),hl
1596  8E56
1597  8E56              ;	En este punto:
1598  8E56
1599  8E56              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1600  8E56              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1601  8E56
1602  8E56 21 02 89     2 ld hl,Ctrl_1
1603  8E59 CB AE        	res 5,(hl)
1604  8E5B
1605  8E5B C9           	ret
1606  8E5C
1607  8E5C              ; -----------------------------------------------------------------------------------
1608  8E5C
1609  8E5C              Pinta_Amadeus
1610  8E5C
1611  8E5C 3E 06        	ld a,6
1612  8E5E D3 FE            out ($fe),a										; Amarillo
1613  8E60
1614  8E60 CD 69 8C        	call Calcula_malotes_Amadeus
1615  8E63 CD 11 97     	call Extrae_foto_Amadeus
1616  8E66 CD 25 8C     	call Limpia_album_Amadeus
1617  8E69
1618  8E69 C9           	ret
1619  8E6A
1620  8E6A              Pinta_entidades
1621  8E6A
1622  8E6A 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1623  8E6D 01 EC 84     	ld bc,Indice_album_de_fotos
1624  8E70 A7           	and a
1625  8E71 ED 42        	sbc hl,bc
1626  8E73
1627  8E73 28 FE        	jr z,$
1628  8E75 C8           	ret z
1629  8E76
1630  8E76              ; Pintamos siempre que esté completo Album_de_fotos.
1631  8E76
1632  8E76 CD 4D 8C     	call Calcula_numero_de_malotes
1633  8E79 CD 8F 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1634  8E7C
1635  8E7C C9           	ret
1636  8E7D
1637  8E7D              ; -----------------------------------------------------------------------------------
1638  8E7D
1639  8E7D              Actualiza_relojes
1640  8E7D
1641  8E7D 21 4E 89     	ld hl,Contador_de_frames
1642  8E80 7E           	ld a,(hl)
1643  8E81 FE FF        	cp $ff
1644  8E83 20 04        	jr nz,1F
1645  8E85 34           	inc (hl)
1646  8E86 21 4F 89     	ld hl,Contador_de_frames_2
1647  8E89 34           1 inc (hl)											; 0 - 255
1648  8E8A C9           	ret
1649  8E8B
1650  8E8B              ; ---------------------------------------------------------------
1651  8E8B
1652  8E8B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E8B              ; ******************************************************************************************************************************************************************************************
   2+ 8E8B              ;
   3+ 8E8B              ;   21/07/23
   4+ 8E8B              ;
   5+ 8E8B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E8B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E8B              ;
   8+ 8E8B              ;
   9+ 8E8B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E8B              ;
  11+ 8E8B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E8B              ;               _ hacen las entidades hacia abajo.
  13+ 8E8B              ;
  14+ 8E8B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E8B              ;
  16+ 8E8B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E8B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E8B              ;
  19+ 8E8B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E8B              ;           _ la bala.
  21+ 8E8B              ;
  22+ 8E8B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E8B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E8B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E8B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E8B              ;           _ en el momento de generarse la bala)).
  27+ 8E8B
  28+ 8E8B              Genera_disparo
  29+ 8E8B
  30+ 8E8B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E8B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E8B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E8B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E8B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E8B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E8B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E8B
  38+ 8E8B              ; Exclusiones:
  39+ 8E8B
  40+ 8E8B 3A DD 88         ld a,(Vel_down)
  41+ 8E8E 47               ld b,a
  42+ 8E8F 3A 4D 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E92 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E93 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E94 3A FC 88         ld a,(Columnas)
  46+ 8E97 47               ld b,a
  47+ 8E98 3A C6 88         ld a,(Columns)
  48+ 8E9B B8               cp b
  49+ 8E9C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E9D
  51+ 8E9D              ; ----- ----- -----
  52+ 8E9D
  53+ 8E9D 3A EF 88         ld a,(Ctrl_0)
  54+ 8EA0 CB 77            bit 6,a
  55+ 8EA2 20 06            jr nz,14F
  56+ 8EA4
  57+ 8EA4 3A CC 88         ld a,(Coordenada_y)
  58+ 8EA7 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EA9 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EAA
  61+ 8EAA 21 00 80     14 ld hl,Indice_disparo
  62+ 8EAD 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8EB0 4F               ld c,a
  64+ 8EB1 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EB3              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EB3              ;                                            ""        ""       "f9", B="1"
  67+ 8EB3              ;                                            ""        ""       "fb", B="2"
  68+ 8EB3              ;                                            ""        ""       "fb", B="3"
  69+ 8EB3 A7               and a
  70+ 8EB4 28 10            jr z,1F
  71+ 8EB6 E6 01            and 1
  72+ 8EB8 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EB9
  74+ 8EB9 79               ld a,c
  75+ 8EBA 16 F9            ld d,$f9
  76+ 8EBC 23           2 inc hl
  77+ 8EBD 23               inc hl
  78+ 8EBE 04               inc b
  79+ 8EBF BA               cp d
  80+ 8EC0 28 04            jr z,1F
  81+ 8EC2 14               inc d
  82+ 8EC3 14               inc d
  83+ 8EC4 18 F6            jr 2B
  84+ 8EC6
  85+ 8EC6 CD 9D 8C     1 call Extrae_address
  86+ 8EC9 E5               push hl
  87+ 8ECA FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8ECC DD 21 57 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8ED0
  90+ 8ED0              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8ED0              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8ED0
  93+ 8ED0 3A EF 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8ED3 CB 77            bit 6,a
  95+ 8ED5 20 04            jr nz,19F
  96+ 8ED7
  97+ 8ED7 AF               xor a
  98+ 8ED8 32 56 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EDB
 100+ 8EDB 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8EDE FE 02            cp 2
 102+ 8EE0 38 66            jr c,3F
 103+ 8EE2 28 64            jr z,3F
 104+ 8EE4
 105+ 8EE4              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EE4
 107+ 8EE4 E6 01            and 1
 108+ 8EE6 28 30            jr z,4F
 109+ 8EE8
 110+ 8EE8              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EE8              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EE8              ;
 113+ 8EE8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EE8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EE8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EE8
 117+ 8EE8 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8EEB
 119+ 8EEB              ;   Amadeus o entidad ???.
 120+ 8EEB
 121+ 8EEB 3A EF 88         ld a,(Ctrl_0)
 122+ 8EEE CB 77            bit 6,a
 123+ 8EF0 28 0A            jr z,8F
 124+ 8EF2
 125+ 8EF2              ; 	Dispara Amadeus.
 126+ 8EF2
 127+ 8EF2 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EF4 CD 80 96         call PreviousScan
 129+ 8EF7 CD 80 96         call PreviousScan
 130+ 8EFA
 131+ 8EFA              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EFA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EFA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EFA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EFA
 136+ 8EFA 18 11            jr 10F
 137+ 8EFC
 138+ 8EFC              ; 	Dispara Entidad.
 139+ 8EFC
 140+ 8EFC 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EFF              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EFF
 143+ 8EFF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EFF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EFF
 146+ 8EFF C5               push bc
 147+ 8F00 06 10            ld b,16
 148+ 8F02 CD 71 96     9 call NextScan
 149+ 8F05 10 FB            djnz 9B
 150+ 8F07 C1               pop bc
 151+ 8F08 CD 72 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F0B 18 06            jr 17F
 153+ 8F0D
 154+ 8F0D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F0D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F0D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F0D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F0D
 159+ 8F0D CD 72 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F10 CD E7 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F13              ;                                                      ; _al generar el disparo.
 162+ 8F13
 163+ 8F13              ; 	LLegados a este punto tendremos:
 164+ 8F13              ;
 165+ 8F13              ;       Puntero_objeto_disparo en IY.
 166+ 8F13              ;       Rutinas_de_impresion en IX.
 167+ 8F13              ;       Puntero_de_impresion en HL.
 168+ 8F13              ;       Impacto/Dirección en BC.
 169+ 8F13
 170+ 8F13 CD 7A 8F     17 call Almacena_disparo
 171+ 8F16 18 52            jr 6F                                             ; RET.
 172+ 8F18
 173+ 8F18              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F18              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F18              ;
 176+ 8F18              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F18              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F18              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F18
 180+ 8F18 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8F1B
 182+ 8F1B              ;   Amadeus o entidad ???.
 183+ 8F1B
 184+ 8F1B 3A EF 88         ld a,(Ctrl_0)
 185+ 8F1E CB 77            bit 6,a
 186+ 8F20 28 0A            jr z,11F
 187+ 8F22
 188+ 8F22              ; 	Dispara Amadeus.
 189+ 8F22
 190+ 8F22 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F24 CD 80 96         call PreviousScan
 192+ 8F27 CD 80 96         call PreviousScan
 193+ 8F2A
 194+ 8F2A              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F2A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F2A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F2A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F2A
 199+ 8F2A 18 11            jr 13F
 200+ 8F2C
 201+ 8F2C              ; 	Dispara Entidad.
 202+ 8F2C
 203+ 8F2C 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F2F              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F2F
 206+ 8F2F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F2F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F2F
 209+ 8F2F C5               push bc
 210+ 8F30 06 10            ld b,16
 211+ 8F32 CD 71 96     12 call NextScan
 212+ 8F35 10 FB            djnz 12B
 213+ 8F37 C1               pop bc
 214+ 8F38
 215+ 8F38 CD 6B 8F         call Ajusta_disparo_parte_derecha
 216+ 8F3B 18 06            jr 18F
 217+ 8F3D
 218+ 8F3D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F3D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F3D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F3D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F3D
 223+ 8F3D CD 6B 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F40 CD E7 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F43              ;                                                       ; _al generar el disparo.
 226+ 8F43
 227+ 8F43              ; LLegados a este punto tendremos:
 228+ 8F43              ;
 229+ 8F43              ;       Puntero_objeto_disparo en IY.
 230+ 8F43              ;       Rutinas_de_impresion en IX.
 231+ 8F43              ;       Puntero_de_impresion en HL.
 232+ 8F43              ;       Impacto/Dirección en BC.
 233+ 8F43
 234+ 8F43 CD 7A 8F     18 call Almacena_disparo
 235+ 8F46 18 22            jr 6F                                               ; RET.
 236+ 8F48
 237+ 8F48              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F48
 239+ 8F48 28 11        3 jr z,5F
 240+ 8F4A
 241+ 8F4A              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F4A              ;
 243+ 8F4A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F4A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F4A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F4A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F4A
 248+ 8F4A              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F4A              ;	   ""        ""       "f9", B="1"
 250+ 8F4A              ;	   ""        ""       "fb", B="2"
 251+ 8F4A              ; 	   ""        ""       "fb", B="3"
 252+ 8F4A
 253+ 8F4A 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8F4D CD 71 96     	call NextScan
 255+ 8F50
 256+ 8F50              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F50              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F50              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F50              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F50
 261+ 8F50 CD 72 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F53
 263+ 8F53              ; 	No se produce impacto. B="$80"
 264+ 8F53              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F53
 266+ 8F53 01 80 80         ld bc,$8080
 267+ 8F56
 268+ 8F56              ; 	LLegados a este punto tendremos:
 269+ 8F56              ;
 270+ 8F56              ;       Puntero_objeto_disparo en IY.
 271+ 8F56              ;       Rutinas_de_impresion en IX.
 272+ 8F56              ;       Puntero_de_impresion en HL.
 273+ 8F56              ;       Impacto/Dirección en BC.
 274+ 8F56
 275+ 8F56 CD 7A 8F         call Almacena_disparo
 276+ 8F59 18 0F            jr 6F                                           ; RET.
 277+ 8F5B
 278+ 8F5B              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F5B              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F5B              ;
 281+ 8F5B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F5B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F5B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F5B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F5B
 286+ 8F5B 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8F5E CD 71 96     	call NextScan
 288+ 8F61
 289+ 8F61              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F61              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F61              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F61              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F61
 294+ 8F61 CD 6B 8F         call Ajusta_disparo_parte_derecha
 295+ 8F64
 296+ 8F64              ; 	No se produce impacto. B="$80"
 297+ 8F64              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F64
 299+ 8F64 01 80 80     15 ld bc,$8080
 300+ 8F67
 301+ 8F67              ; 	LLegados a este punto tendremos:
 302+ 8F67              ;
 303+ 8F67              ;       Puntero_objeto_disparo en IY.
 304+ 8F67              ;       Rutinas_de_impresion en IX.
 305+ 8F67              ;       Puntero_de_impresion en HL.
 306+ 8F67              ;       Impacto/Dirección en BC.
 307+ 8F67
 308+ 8F67 CD 7A 8F         call Almacena_disparo
 309+ 8F6A
 310+ 8F6A C9           6 ret
 311+ 8F6B
 312+ 8F6B              ; ----------------------------------------------------------------
 313+ 8F6B              ;
 314+ 8F6B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F6B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F6B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F6B
 318+ 8F6B 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F6C FE 02            cp 2
 320+ 8F6E 38 01            jr c,1F
 321+ 8F70 23               inc hl
 322+ 8F71 C9           1 ret
 323+ 8F72
 324+ 8F72 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F73 FE 01        	cp 1
 326+ 8F75 20 01        	jr nz,1F
 327+ 8F77 2B           	dec hl
 328+ 8F78 2B           1 dec hl
 329+ 8F79 C9               ret
 330+ 8F7A
 331+ 8F7A              ; ----------------------------------------------------------------
 332+ 8F7A              ;
 333+ 8F7A              ;   25/02/23
 334+ 8F7A              ;
 335+ 8F7A              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F7A              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F7A              ;
 338+ 8F7A              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F7A              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F7A
 341+ 8F7A              Almacena_disparo
 342+ 8F7A
 343+ 8F7A E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F7B F1               pop af
 345+ 8F7C 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F7D
 347+ 8F7D 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F7E E6 01            and 1
 349+ 8F80 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F82              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F82              ; 	Dispara AMADEUS.
 352+ 8F82
 353+ 8F82              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F82              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F82              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F82              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F82
 358+ 8F82 C5               push bc
 359+ 8F83 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F86 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F89 A7               and a
 362+ 8F8A ED 42            sbc hl,bc
 363+ 8F8C CC 1E 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F8F C1               pop bc
 365+ 8F90 28 54            jr z,4F
 366+ 8F92
 367+ 8F92 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F95 23               inc hl
 369+ 8F96 23               inc hl
 370+ 8F97 22 3E 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F9A              ;                                                   ; _ Disparo_(+1).
 372+ 8F9A 18 18            jr 2F
 373+ 8F9C
 374+ 8F9C              ; Dispara una entidad.
 375+ 8F9C
 376+ 8F9C C5           1 push bc
 377+ 8F9D 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FA0 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FA3 A7               and a
 380+ 8FA4 ED 42            sbc hl,bc
 381+ 8FA6 CC 17 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FA9 C1               pop bc
 383+ 8FAA 28 3A            jr z,4F
 384+ 8FAC
 385+ 8FAC 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FAF 23               inc hl
 387+ 8FB0 23               inc hl
 388+ 8FB1 22 3C 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FB4              ;                                                   ; _ Disparo_(+1).
 390+ 8FB4 CD 9D 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FB7              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FB7              ;
 393+ 8FB7              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FB7              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FB7              ;                                                     Puntero_de_impresion en HL.
 396+ 8FB7              ;                                                     Impacto/Dirección en BC.
 397+ 8FB7
 398+ 8FB7 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FB8 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FB9 23               inc hl                                          ; _ al siguiente.
 401+ 8FBA A7               and a
 402+ 8FBB 20 C0            jr nz,3B
 403+ 8FBD
 404+ 8FBD 08               ex af,af
 405+ 8FBE ED 73 13 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FC2 F9               ld sp,hl
 407+ 8FC3
 408+ 8FC3 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FC5 F5               push af                                         ; Puntero de impresión.
 410+ 8FC6 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FC8 C5               push bc                                         ; Control.
 412+ 8FC9
 413+ 8FC9 ED 7B 13 89      ld sp,(Stack)
 414+ 8FCD
 415+ 8FCD              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FCD
 417+ 8FCD 21 02 89     	ld hl,Ctrl_1
 418+ 8FD0 CB C6        	set 0,(hl)
 419+ 8FD2
 420+ 8FD2 DD E5        	push ix
 421+ 8FD4 E1               pop hl
 422+ 8FD5 F5               push af
 423+ 8FD6 DD E1            pop ix
 424+ 8FD8
 425+ 8FD8 CD A0 7F     	call Guarda_foto_registros
 426+ 8FDB
 427+ 8FDB 21 02 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FDE CB 86        	res 0,(hl)
 429+ 8FE0
 430+ 8FE0              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FE0              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FE0
 433+ 8FE0 CD 1E 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FE3 CD 17 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FE6
 436+ 8FE6 C9           4 ret
 437+ 8FE7
 438+ 8FE7              ; ----------------------------------------------------------------
 439+ 8FE7              ;
 440+ 8FE7              ;   4/3/23
 441+ 8FE7              ;
 442+ 8FE7              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FE7              ;   _ al generarse el disparo.
 444+ 8FE7              ;
 445+ 8FE7              ;       "$80" ..... No se produce colisión.
 446+ 8FE7              ;       "$81" ..... Se produce colisión.
 447+ 8FE7              ;
 448+ 8FE7              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FE7              ;         _ que forman el disparo.
 450+ 8FE7
 451+ 8FE7
 452+ 8FE7              Comprueba_Colision
 453+ 8FE7
 454+ 8FE7              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FE7
 456+ 8FE7 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FE9 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FEA
 459+ 8FEA CD 20 90         call Modifica_H_Velocidad_disparo
 460+ 8FED
 461+ 8FED 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FEE FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FF0 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FF2
 465+ 8FF2 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FF4 CD 10 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FF7
 468+ 8FF7 7B               ld a,e
 469+ 8FF8 E6 01            and 1
 470+ 8FFA 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FFC              ;                                                  ; _ para activar IMPACTO.
 472+ 8FFC E1               pop hl
 473+ 8FFD E5               push hl
 474+ 8FFE CD 71 96         call NextScan
 475+ 9001
 476+ 9001 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9002 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9004 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9006              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9006 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9008 CD 10 90         call Bucle_2
 482+ 900B
 483+ 900B 43           1 ld b,e
 484+ 900C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 900D FD E1            pop iy
 486+ 900F C9               ret
 487+ 9010
 488+ 9010              ; ---------- ----------
 489+ 9010
 490+ 9010 06 02        Bucle_2 ld b,2
 491+ 9012 FD 7E 00     2 ld a,(iy)
 492+ 9015 A6               and (hl)
 493+ 9016 28 02            jr z,1F
 494+ 9018 1E 81            ld e,$81
 495+ 901A 23           1 inc hl
 496+ 901B FD 23            inc iy
 497+ 901D 10 F3            djnz 2B
 498+ 901F C9               ret
 499+ 9020
 500+ 9020              ; ---------- ----------
 501+ 9020              ;
 502+ 9020              ;   21/7/23
 503+ 9020
 504+ 9020              Modifica_H_Velocidad_disparo
 505+ 9020
 506+ 9020 3A 4D 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9023 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9025 D0               ret nc                                         ; _ incrementamos H.
 509+ 9026 24               inc h
 510+ 9027
 511+ 9027 C9               ret
 512+ 9028
 513+ 9028              ; -------------------------------------------------------------------------------------------------------------
 514+ 9028              ;
 515+ 9028              ;   11/04/23
 516+ 9028              ;
 517+ 9028              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9028              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9028              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9028              ;
 521+ 9028              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9028
 523+ 9028              Compara_coordenadas_X
 524+ 9028
 525+ 9028              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9028              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9028
 528+ 9028              ; Preparamos registros:
 529+ 9028
 530+ 9028 21 CB 88         ld hl,Filas+6
 531+ 902B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 902C 23               inc hl
 533+ 902D 23               inc hl
 534+ 902E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 902F 43               ld b,e
 536+ 9030
 537+ 9030 21 D9 88         ld hl,Filas+20
 538+ 9033 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9034 21 48 89         ld hl,Coordenadas_X_Entidad
 540+ 9037 CD 53 92         call Guarda_coordenadas_X
 541+ 903A
 542+ 903A              ; Preparamos registros:
 543+ 903A
 544+ 903A 21 A4 85         ld hl,Amadeus_db+6
 545+ 903D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 903E 23               inc hl
 547+ 903F 23               inc hl
 548+ 9040 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9041 7B               ld a,e
 550+ 9042 08               ex af,af'
 551+ 9043 21 B2 85         ld hl,Amadeus_db+20
 552+ 9046 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9047 21 45 89         ld hl,Coordenadas_X_Amadeus
 554+ 904A CD 53 92         call Guarda_coordenadas_X
 555+ 904D
 556+ 904D              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 904D              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 904D
 559+ 904D 04               inc b
 560+ 904E 05               dec b
 561+ 904F 28 04            jr z,1F
 562+ 9051 06 03            ld b,3
 563+ 9053 18 02            jr 2F
 564+ 9055 06 02        1 ld b,2
 565+ 9057 08           2 ex af,af'
 566+ 9058 3C               inc a
 567+ 9059 3D               dec a
 568+ 905A 28 04            jr z,5F
 569+ 905C 0E 03            ld c,3
 570+ 905E 18 02            jr 6F
 571+ 9060 0E 02        5 ld c,2
 572+ 9062 79           6 ld a,c
 573+ 9063 08               ex af,af'
 574+ 9064 11 48 89         ld de,Coordenadas_X_Entidad
 575+ 9067 1A           4 ld a,(de)
 576+ 9068 21 45 89         ld hl,Coordenadas_X_Amadeus
 577+ 906B BE           3 cp (hl)
 578+ 906C 28 0E            jr z,7F
 579+ 906E 23               inc hl
 580+ 906F 0D               dec c
 581+ 9070 20 F9            jr nz,3B
 582+ 9072 13               inc de
 583+ 9073 08               ex af,af'
 584+ 9074 4F               ld c,a
 585+ 9075 08               ex af,af'
 586+ 9076 10 EF            djnz 4B
 587+ 9078
 588+ 9078              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9078
 590+ 9078 CD 8F 92     8 call Limpia_Coordenadas_X
 591+ 907B C9               ret
 592+ 907C
 593+ 907C 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 907E 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9081 21 40 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9084 CB D6            set 2,(hl)
 597+ 9086 18 F0            jr 8B
 598+ 9088
 599+ 9088              ; -----------------------------------------------------------------------
 600+ 9088              ;
 601+ 9088              ;   17/04/23
 602+ 9088              ;
 603+ 9088
 604+ 9088              Detecta_colision_nave_entidad
 605+ 9088
 606+ 9088              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9088
 608+ 9088 2A C7 88         ld hl,(Posicion_actual)
 609+ 908B CD CC 95         call Calcula_puntero_de_impresion
 610+ 908E
 611+ 908E              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 908E              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 908E
 614+ 908E DD E5            push ix
 615+ 9090 E1               pop hl
 616+ 9091 E5               push hl
 617+ 9092
 618+ 9092              ; ----- ----- -----
 619+ 9092 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9094 06 0A            ld b,10
 621+ 9096 CD C6 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9099 7B               ld a,e
 623+ 909A FE 05            cp 5
 624+ 909C 38 0E            jr c,3F
 625+ 909E
 626+ 909E              ; LLegados a este punto:
 627+ 909E              ;
 628+ 909E              ;   HAY COLISIÓN !!!!!.
 629+ 909E              ;
 630+ 909E              ;   .db (Impacto) de Amadeus a "1".
 631+ 909E              ;   SET el bit3 de (Impacto2).
 632+ 909E              ;
 633+ 909E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 909E
 635+ 909E 21 B7 85         ld hl,Amadeus_db+25
 636+ 90A1 36 01            ld (hl),1
 637+ 90A3 21 40 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90A6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90A8 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90AA 18 18            jr 1F
 641+ 90AC
 642+ 90AC              ; -----
 643+ 90AC
 644+ 90AC E1           3 pop hl
 645+ 90AD CD 71 96         call NextScan
 646+ 90B0 E5               push hl
 647+ 90B1 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90B2 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90B4 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90B6 30 0C            jr nc,1F
 651+ 90B8              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90B8 10 DC            djnz 2B
 653+ 90BA
 654+ 90BA              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90BA
 656+ 90BA              ; LLegados a este punto:
 657+ 90BA              ;
 658+ 90BA              ;   NO HAY COLISIÓN !!!!!.
 659+ 90BA              ;
 660+ 90BA              ;   .db (Impacto) de Amadeus a "0".
 661+ 90BA              ;   RES el bit2 de (Impacto2).
 662+ 90BA              ;
 663+ 90BA              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90BA              ;   Lo colocamos a "0".
 665+ 90BA
 666+ 90BA 21 40 89         ld hl,Impacto2
 667+ 90BD CB 96            res 2,(hl)
 668+ 90BF 2A 41 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90C2 36 00            ld (hl),0
 670+ 90C4
 671+ 90C4 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90C5 C9               ret
 673+ 90C6
 674+ 90C6               ; ---------- ----------
 675+ 90C6
 676+ 90C6 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90C7 3A C6 88         ld a,(Columns)
 678+ 90CA 47               ld b,a
 679+ 90CB FD 7E 00     2 ld a,(iy)
 680+ 90CE BE               cp (hl)
 681+ 90CF 28 01            jr z,1F
 682+ 90D1
 683+ 90D1 1C               inc e
 684+ 90D2
 685+ 90D2 23           1 inc hl
 686+ 90D3 FD 23            inc iy
 687+ 90D5 10 F4            djnz 2B
 688+ 90D7 C1               pop bc
 689+ 90D8 C9               ret
 690+ 90D9
 691+ 90D9              ; -------------------------------------------------------------------------------------------------------------
 692+ 90D9              ;
 693+ 90D9              ;   13/03/23
 694+ 90D9              ;
 695+ 90D9              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90D9              ;
 697+ 90D9              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90D9
 699+ 90D9 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90DC 7E               ld a,(hl)
 701+ 90DD A7               and a
 702+ 90DE C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90DF
 704+ 90DF 44               ld b,h
 705+ 90E0 4D               ld c,l
 706+ 90E1 2A 1B 89         ld hl,(Stack_snapshot_disparos)
 707+ 90E4 E5               push hl
 708+ 90E5 A7               and a
 709+ 90E6 ED 42            sbc hl,bc
 710+ 90E8 E5               push hl
 711+ 90E9 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90EA
 713+ 90EA E1               pop hl
 714+ 90EB 54               ld d,h
 715+ 90EC 5D               ld e,l
 716+ 90ED 1B               dec de
 717+ 90EE ED B8            lddr                                                ; Limpiamos.
 718+ 90F0
 719+ 90F0 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90F3 22 1B 89         ld (Stack_snapshot_disparos),hl
 721+ 90F6
 722+ 90F6 C9               ret
 723+ 90F7
 724+ 90F7              ; -------------------------------------------------------------------------------------------------------------
 725+ 90F7              ;
 726+ 90F7              ;   18/07/23
 727+ 90F7              ;
 728+ 90F7
 729+ 90F7              Motor_de_disparos
 730+ 90F7
 731+ 90F7              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90F7
 733+ 90F7 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90FA 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90FD
 736+ 90FD CD 9D 8C     2 call Extrae_address
 737+ 9100 7E               ld a,(hl)
 738+ 9101 A7               and a
 739+ 9102 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9104
 741+ 9104              ; ----- ----- ----- ----- ----- -----
 742+ 9104
 743+ 9104 C5               push bc
 744+ 9105 CD C9 91         call foto_disparo_a_borrar
 745+ 9108
 746+ 9108              ; Existe colisión con este disparo???
 747+ 9108
 748+ 9108 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9109 7E               ld a,(hl)
 750+ 910A 2B               dec hl
 751+ 910B E6 01            and 1
 752+ 910D 28 1D            jr z,9F
 753+ 910F
 754+ 910F              ;   En este punto:
 755+ 910F              ;
 756+ 910F              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 910F              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 910F              ;   _con la entidad).
 759+ 910F              ;
 760+ 910F              ;   Disparo_2A defw 0                                ; Control.
 761+ 910F              ;    defw 0                                          ; Puntero objeto.
 762+ 910F              ;    defw 0                                          ; Puntero de impresión.
 763+ 910F              ;    defw 0                                          ; Rutina de impresión.
 764+ 910F
 765+ 910F E5               push hl
 766+ 9110
 767+ 9110 06 04            ld b,4
 768+ 9112 23           19 inc hl
 769+ 9113 10 FD            djnz 19B
 770+ 9115
 771+ 9115 CD 9D 8C         call Extrae_address
 772+ 9118 CD 3A 9D         call Genera_coordenadas_disparo
 773+ 911B
 774+ 911B              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 911B
 776+ 911B 21 43 89         ld hl,Coordenadas_disparo_certero
 777+ 911E 72               ld (hl),d
 778+ 911F 23               inc hl
 779+ 9120 73               ld (hl),e
 780+ 9121
 781+ 9121              ; Elimino el disparo de la base de datos.
 782+ 9121
 783+ 9121 E1               pop hl
 784+ 9122 CD 48 92         call Elimina_disparo_de_base_de_datos
 785+ 9125 21 40 89         ld hl,Impacto2
 786+ 9128 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 912A
 788+ 912A 18 06            jr 11F
 789+ 912C
 790+ 912C CD F2 91     9 call Mueve_disparo
 791+ 912F CD C9 91         call foto_disparo_a_borrar
 792+ 9132
 793+ 9132 C1           11 pop bc
 794+ 9133 18 04            jr 7F
 795+ 9135
 796+ 9135              ; ----- ----- ----- ----- ----- -----
 797+ 9135
 798+ 9135 ED 42        1 sbc hl,bc
 799+ 9137 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9139
 801+ 9139 2A 3E 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 913C 23               inc hl
 803+ 913D 23               inc hl
 804+ 913E 22 3E 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9141 18 BA            jr 2B
 806+ 9143
 807+ 9143 CD 1E 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9146              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9146
 810+ 9146              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9146
 812+ 9146 01 8A 85         ld bc,Disparo_11
 813+ 9149 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 914C
 815+ 914C CD 9D 8C     5 call Extrae_address
 816+ 914F 7E               ld a,(hl)
 817+ 9150 A7               and a
 818+ 9151 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9153
 820+ 9153              ; ----- ----- ----- ----- ----- -----
 821+ 9153
 822+ 9153 C5               push bc
 823+ 9154 CD C9 91         call foto_disparo_a_borrar
 824+ 9157
 825+ 9157              ; Existe colisión con este disparo???
 826+ 9157
 827+ 9157 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9158 7E               ld a,(hl)
 829+ 9159 2B               dec hl
 830+ 915A E6 01            and 1
 831+ 915C 28 4D            jr z,10F
 832+ 915E
 833+ 915E              ;! La colisión se produce con Amadeus???
 834+ 915E              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 915E
 836+ 915E E5               push hl
 837+ 915F
 838+ 915F 06 04            ld b,4
 839+ 9161 23           16 inc hl
 840+ 9162 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9164
 842+ 9164 CD 9D 8C         call Extrae_address
 843+ 9167 CD 3A 9D         call Genera_coordenadas_disparo
 844+ 916A
 845+ 916A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 916B FE 16            cp $16
 847+ 916D 38 2A            jr c,15F
 848+ 916F
 849+ 916F
 850+ 916F              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 916F
 852+ 916F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9170
 854+ 9170              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9170
 856+ 9170
 857+ 9170 2A 4B 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9173
 859+ 9173              ; Coordenada X de Amadeus en D.
 860+ 9173
 861+ 9173 7D               ld a,l
 862+ 9174 E6 1F            and $1F
 863+ 9176 57               ld d,a
 864+ 9177
 865+ 9177 21 A6 85         ld hl,Amadeus_db+8
 866+ 917A 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 917B
 868+ 917B 21 45 89         ld hl,Coordenadas_X_Amadeus
 869+ 917E CD 53 92         call Guarda_coordenadas_X
 870+ 9181
 871+ 9181 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9182
 873+ 9182              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9182
 875+ 9182 06 02            ld b,2
 876+ 9184 C5           20 push bc
 877+ 9185
 878+ 9185 06 03            ld b,3
 879+ 9187 21 45 89         ld hl,Coordenadas_X_Amadeus
 880+ 918A 7E           18 ld a,(hl)
 881+ 918B BA               cp d
 882+ 918C 20 04            jr nz,17F
 883+ 918E
 884+ 918E              ;! Colisión Amadeus !!!!!!!!!!
 885+ 918E
 886+ 918E C1               pop bc
 887+ 918F E1               pop hl
 888+ 9190 18 0D            jr 14F
 889+ 9192
 890+ 9192 23           17 inc hl
 891+ 9193 10 F5            djnz 18B
 892+ 9195
 893+ 9195 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9196
 895+ 9196 C1               pop bc
 896+ 9197 10 EB            djnz 20B
 897+ 9199
 898+ 9199
 899+ 9199              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9199              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9199
 902+ 9199 E1           15 pop hl
 903+ 919A 23               inc hl
 904+ 919B 35               dec (hl)
 905+ 919C 2B               dec hl
 906+ 919D 18 0C            jr 10F
 907+ 919F
 908+ 919F              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 919F              ; _ almacén de coordenadas_X de Amadeus.
 910+ 919F
 911+ 919F E5           14 push hl
 912+ 91A0 CD 48 92         call Elimina_disparo_de_base_de_datos
 913+ 91A3 21 40 89         ld hl,Impacto2
 914+ 91A6 CB CE            set 1,(hl)
 915+ 91A8 E1               pop hl
 916+ 91A9 18 06            jr 12F
 917+ 91AB
 918+ 91AB              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91AB
 920+ 91AB CD F2 91     10 call Mueve_disparo
 921+ 91AE CD C9 91         call foto_disparo_a_borrar
 922+ 91B1 C1           12 pop bc
 923+ 91B2
 924+ 91B2 18 04            jr 8F
 925+ 91B4
 926+ 91B4              ; ----- ----- ----- ----- ----- -----
 927+ 91B4
 928+ 91B4 ED 42        4 sbc hl,bc
 929+ 91B6 28 0A            jr z,6F
 930+ 91B8
 931+ 91B8 2A 3C 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91BB 23               inc hl
 933+ 91BC 23               inc hl
 934+ 91BD 22 3C 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91C0 18 8A            jr 5B
 936+ 91C2
 937+ 91C2 CD 17 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91C5 CD 8F 92         call Limpia_Coordenadas_X
 939+ 91C8 C9               ret
 940+ 91C9
 941+ 91C9              ; ------------------------------------------------------------------
 942+ 91C9
 943+ 91C9              foto_disparo_a_borrar
 944+ 91C9
 945+ 91C9 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91CA A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91CB C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91CC
 949+ 91CC E5               push hl
 950+ 91CD 23               inc hl
 951+ 91CE 23               inc hl
 952+ 91CF ED 73 13 89      ld (Stack),sp
 953+ 91D3 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91D4 FD E1            pop iy
 955+ 91D6 DD E1            pop ix
 956+ 91D8 E1               pop hl
 957+ 91D9 ED 7B 13 89      ld sp,(Stack)
 958+ 91DD 3A 02 89         ld a,(Ctrl_1)
 959+ 91E0 CB C7            set 0,a
 960+ 91E2 32 02 89         ld (Ctrl_1),a
 961+ 91E5 CD A0 7F         call Guarda_foto_registros
 962+ 91E8 3A 02 89         ld a,(Ctrl_1)
 963+ 91EB CB 87            res 0,a
 964+ 91ED 32 02 89         ld (Ctrl_1),a
 965+ 91F0 E1               pop hl
 966+ 91F1 C9               ret
 967+ 91F2
 968+ 91F2              ;---------------------------------------------------
 969+ 91F2              ;
 970+ 91F2              ;   18/07/23
 971+ 91F2              ;
 972+ 91F2
 973+ 91F2              Mueve_disparo
 974+ 91F2
 975+ 91F2              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91F2              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91F2              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91F2
 979+ 91F2 E5               push hl
 980+ 91F3
 981+ 91F3 7E               ld a,(hl)
 982+ 91F4
 983+ 91F4 06 04            ld b,4
 984+ 91F6 23           1 inc hl
 985+ 91F7 10 FD            djnz 1B
 986+ 91F9
 987+ 91F9              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91F9
 989+ 91F9 CD 9D 8C         call Extrae_address
 990+ 91FC
 991+ 91FC E6 01            and 1
 992+ 91FE 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9200
 994+ 9200              ; Disparo hacia arriba, (Amadeus).
 995+ 9200
 996+ 9200              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9200              ; _ de la dificultad.
 998+ 9200
 999+ 9200 CD 80 96         call PreviousScan
1000+ 9203 CD 80 96         call PreviousScan
1001+ 9206 CD 80 96         call PreviousScan
1002+ 9209 CD 80 96         call PreviousScan
1003+ 920C
1004+ 920C              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 920C
1006+ 920C 7C               ld a,h
1007+ 920D FE 40            cp $40
1008+ 920F 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9211
1010+ 9211              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9211
1012+ 9211 EB               ex de,hl
1013+ 9212 06 04            ld b,4
1014+ 9214 2B           6 dec hl
1015+ 9215 10 FD            djnz 6B
1016+ 9217
1017+ 9217 CD 48 92         call Elimina_disparo_de_base_de_datos
1018+ 921A E1               pop hl
1019+ 921B 18 10            jr 7F
1020+ 921D
1021+ 921D              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 921D              ; HL contiene el puntero de impresión del disparo.
1023+ 921D              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 921D
1025+ 921D D5           3 push de
1026+ 921E C5               push bc
1027+ 921F
1028+ 921F CD E7 8F         call Comprueba_Colision
1029+ 9222
1030+ 9222              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9222
1032+ 9222 78               ld a,b
1033+ 9223
1034+ 9223 C1               pop bc
1035+ 9224 D1               pop de
1036+ 9225
1037+ 9225 EB               ex de,hl
1038+ 9226
1039+ 9226 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9227 23               inc hl                                      ; _ movimiento.
1041+ 9228 72               ld (hl),d
1042+ 9229
1043+ 9229 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 922A
1045+ 922A 23               inc hl                                      ; _ en curso.
1046+ 922B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 922C 2B               dec hl
1048+ 922D
1049+ 922D C9           7 ret
1050+ 922E
1051+ 922E              ; Disparo hacia abajo, (Entidad).
1052+ 922E
1053+ 922E 3A 4D 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9231 47               ld b,a
1055+ 9232
1056+ 9232 CD 71 96     4 call NextScan
1057+ 9235 10 FB            djnz 4B
1058+ 9237
1059+ 9237              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9237
1061+ 9237 7C               ld a,h
1062+ 9238 FE 58            cp $58
1063+ 923A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 923C
1065+ 923C EB               ex de,hl
1066+ 923D 06 04            ld b,4
1067+ 923F 2B           5 dec hl
1068+ 9240 10 FD            djnz 5B
1069+ 9242
1070+ 9242 CD 48 92         call Elimina_disparo_de_base_de_datos
1071+ 9245 E1               pop hl
1072+ 9246 18 E5            jr 7B
1073+ 9248
1074+ 9248              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9248
1076+ 9248 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 924B AF               xor a
1078+ 924C 77               ld (hl),a
1079+ 924D 54               ld d,h
1080+ 924E 5D               ld e,l
1081+ 924F 13               inc de
1082+ 9250 ED B0            ldir
1083+ 9252 C9               ret
1084+ 9253
1085+ 9253              ; -----------------------------------------------------------------
1086+ 9253              ;
1087+ 9253              ;   19/7/23
1088+ 9253              ;
1089+ 9253              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9253              ;
1091+ 9253              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9253              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9253              ;
1094+ 9253              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9253              ;
1096+ 9253              ;   INPUTS:
1097+ 9253              ;
1098+ 9253              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9253              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9253
1101+ 9253              ;   MODIFICA: A, HL, BC y DE.
1102+ 9253
1103+ 9253              Guarda_coordenadas_X
1104+ 9253
1105+ 9253 7B               ld a,e
1106+ 9254 A7               and a
1107+ 9255 20 04            jr nz,1F
1108+ 9257
1109+ 9257 06 02            ld b,2
1110+ 9259 18 02            jr 2F
1111+ 925B
1112+ 925B 06 03        1 ld b,3
1113+ 925D 72           2 ld (hl),d
1114+ 925E 23               inc hl
1115+ 925F 14               inc d
1116+ 9260 10 FB            djnz 2B
1117+ 9262
1118+ 9262 C9               ret
1119+ 9263
1120+ 9263              ; -----------------------------------------------------------------
1121+ 9263              ;
1122+ 9263              ;   12/04/23
1123+ 9263              ;
1124+ 9263
1125+ 9263 3A 40 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9266 A7               and a
1127+ 9267 C8               ret z
1128+ 9268
1129+ 9268 FE 04            cp 4
1130+ 926A 20 09            jr nz,1F
1131+ 926C
1132+ 926C
1133+ 926C              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 926C
1135+ 926C CD 88 90         call Detecta_colision_nave_entidad
1136+ 926F
1137+ 926F 21 40 89         ld hl,Impacto2
1138+ 9272 CB 5E            bit 3,(hl)
1139+ 9274 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9275
1141+ 9275              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9275              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9275
1144+ 9275 21 40 89     1 ld hl,Impacto2
1145+ 9278 CB 4E            bit 1,(hl)
1146+ 927A 28 07            jr z,2F
1147+ 927C
1148+ 927C 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 927F 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9281 18 0B            jr 3F
1151+ 9283
1152+ 9283 21 40 89     2 ld hl,Impacto2
1153+ 9286 CB 46            bit 0,(hl)
1154+ 9288 C8               ret z
1155+ 9289
1156+ 9289              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9289
1158+ 9289 21 02 89         ld hl,Ctrl_1
1159+ 928C CB D6            set 2,(hl)
1160+ 928E
1161+ 928E C9           3 ret
1162+ 928F
1163+ 928F              ; -----------------------------------------------------------------
1164+ 928F              ;
1165+ 928F              ;   19/7/23
1166+ 928F              ;
1167+ 928F              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 928F
1169+ 928F AF           Limpia_Coordenadas_X xor a
1170+ 9290 06 06            ld b,6
1171+ 9292 21 45 89         ld hl,Coordenadas_X_Amadeus
1172+ 9295 77           1 ld (hl),a
1173+ 9296 23               inc hl
1174+ 9297 10 FC            djnz 1B
1175+ 9299 C9               ret
1176+ 929A
1177+ 929A              ; -----------------------------------------------------------------
1178+ 929A              ;
1179+ 929A              ;   25/04/23
1180+ 929A              ;
1181+ 929A
1182+ 929A              Determina_resultado_comparativa
1183+ 929A
1184+ 929A              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 929A              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 929A              ;
1187+ 929A              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 929A              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 929A              ;
1190+ 929A              ;   SBC HL,DE
1191+ 929A
1192+ 929A              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 929A              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 929A
1195+ 929A              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 929A              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 929A
1198+ 929A
1199+ 929A 3A D9 88         ld a,(Cuad_objeto)
1200+ 929D FE 02            cp 2
1201+ 929F 28 26            jr z,2F
1202+ 92A1 38 24            jr c,2F
1203+ 92A3
1204+ 92A3              ; Cuadrantes 3º y 4º
1205+ 92A3
1206+ 92A3 E6 01            and 1
1207+ 92A5 28 10            jr z,4F
1208+ 92A7
1209+ 92A7              ; Cuadrante 3º
1210+ 92A7
1211+ 92A7 7C               ld a,h
1212+ 92A8 06 00            ld b,0
1213+ 92AA
1214+ 92AA CD 35 93         call Compara_cositas_H3
1215+ 92AD
1216+ 92AD 04               inc b
1217+ 92AE 05               dec b
1218+ 92AF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92B0
1220+ 92B0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92B1 06 00            ld b,0
1222+ 92B3
1223+ 92B3 CD 47 93         call Compara_cositas_L3
1224+ 92B6 C9               ret
1225+ 92B7
1226+ 92B7              ; Cuadrante 4º
1227+ 92B7
1228+ 92B7 7C           4 ld a,h
1229+ 92B8 06 00            ld b,0
1230+ 92BA
1231+ 92BA CD 59 93         call Compara_cositas_H4
1232+ 92BD
1233+ 92BD 04               inc b
1234+ 92BE 05               dec b
1235+ 92BF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92C0
1237+ 92C0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92C1 06 00            ld b,0
1239+ 92C3
1240+ 92C3 CD 6F 93         call Compara_cositas_L4
1241+ 92C6 C9               ret
1242+ 92C7
1243+ 92C7              ; Cuadrantes 1º y 2º.
1244+ 92C7
1245+ 92C7 28 10        2 jr z,3F
1246+ 92C9
1247+ 92C9              ; 1er Cuadrante
1248+ 92C9
1249+ 92C9 7C               ld a,h
1250+ 92CA 06 00            ld b,0
1251+ 92CC
1252+ 92CC CD 0D 93         call Compara_cositas_H1
1253+ 92CF
1254+ 92CF 04               inc b
1255+ 92D0 05               dec b
1256+ 92D1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92D2
1258+ 92D2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92D3 06 00            ld b,0
1260+ 92D5
1261+ 92D5 CD 23 93         call Compara_cositas_L1
1262+ 92D8 C9               ret
1263+ 92D9
1264+ 92D9
1265+ 92D9              ; 2º Cuadrante
1266+ 92D9
1267+ 92D9 7C           3 ld a,h
1268+ 92DA 06 00            ld b,0
1269+ 92DC
1270+ 92DC CD E9 92         call Compara_cositas_H2
1271+ 92DF
1272+ 92DF 04               inc b
1273+ 92E0 05               dec b
1274+ 92E1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92E2
1276+ 92E2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92E3 06 00            ld b,0
1278+ 92E5
1279+ 92E5 CD FB 92         call Compara_cositas_L2
1280+ 92E8 C9               ret
1281+ 92E9
1282+ 92E9 A7           Compara_cositas_H2 and a
1283+ 92EA 28 0D            jr z,1F
1284+ 92EC              ;    cp $fd
1285+ 92EC              ;    jr z,1F
1286+ 92EC              ;    cp $fe
1287+ 92EC              ;    jr z,1F
1288+ 92EC FE FF            cp $ff
1289+ 92EE 28 09            jr z,1F
1290+ 92F0 FE 01            cp $01
1291+ 92F2 28 05            jr z,1F
1292+ 92F4 FE 02            cp $02
1293+ 92F6 28 01            jr z,1F
1294+ 92F8 C0               ret nz
1295+ 92F9 04           1 inc b
1296+ 92FA C9               ret
1297+ 92FB
1298+ 92FB A7           Compara_cositas_L2 and a
1299+ 92FC 28 0D            jr z,1F
1300+ 92FE              ;    cp $fd
1301+ 92FE              ;    jr z,1F
1302+ 92FE FE FE            cp $fe
1303+ 9300 28 09            jr z,1F
1304+ 9302 FE FF            cp $ff
1305+ 9304 28 05            jr z,1F
1306+ 9306 FE 01            cp $01
1307+ 9308 28 01            jr z,1F
1308+ 930A              ;    cp $02
1309+ 930A              ;    jr z,1F
1310+ 930A C0               ret nz
1311+ 930B 04           1 inc b
1312+ 930C C9               ret
1313+ 930D
1314+ 930D A7           Compara_cositas_H1 and a
1315+ 930E 28 11            jr z,1F
1316+ 9310              ;    cp $fd
1317+ 9310              ;    jr z,1F
1318+ 9310              ;    cp $fe
1319+ 9310              ;    jr z,1F
1320+ 9310 FE FF            cp $ff
1321+ 9312 28 0D            jr z,1F
1322+ 9314 FE 01            cp $01
1323+ 9316 28 09            jr z,1F
1324+ 9318 FE 02            cp $02
1325+ 931A 28 05            jr z,1F
1326+ 931C FE 03            cp $03
1327+ 931E 28 01            jr z,1F
1328+ 9320 C0               ret nz
1329+ 9321 04           1 inc b
1330+ 9322 C9               ret
1331+ 9323
1332+ 9323 A7           Compara_cositas_L1 and a
1333+ 9324 28 0D            jr z,1F
1334+ 9326              ;    cp $fd
1335+ 9326              ;    jr z,1F
1336+ 9326              ;    cp $fe
1337+ 9326              ;    jr z,1F
1338+ 9326              ;    cp $ff
1339+ 9326              ;    jr z,1F
1340+ 9326 FE 01            cp $01
1341+ 9328 28 09            jr z,1F
1342+ 932A FE 02            cp $02
1343+ 932C 28 05            jr z,1F
1344+ 932E FE 03            cp $03
1345+ 9330 28 01            jr z,1F
1346+ 9332 C0               ret nz
1347+ 9333 04           1 inc b
1348+ 9334 C9               ret
1349+ 9335
1350+ 9335 A7           Compara_cositas_H3 and a
1351+ 9336 28 0D            jr z,1F
1352+ 9338              ;    cp $fd
1353+ 9338              ;    jr z,1F
1354+ 9338 FE FE            cp $fe
1355+ 933A 28 09            jr z,1F
1356+ 933C FE FF            cp $ff
1357+ 933E 28 05            jr z,1F
1358+ 9340 FE 01            cp $01
1359+ 9342 28 01            jr z,1F
1360+ 9344              ;    cp $02
1361+ 9344              ;    jr z,1F
1362+ 9344              ;    cp $03
1363+ 9344              ;    jr z,1F
1364+ 9344 C0               ret nz
1365+ 9345 04           1 inc b
1366+ 9346 C9               ret
1367+ 9347
1368+ 9347 A7           Compara_cositas_L3 and a
1369+ 9348 28 0D            jr z,1F
1370+ 934A              ;    cp $fd
1371+ 934A              ;    jr z,1F
1372+ 934A              ;    cp $fe
1373+ 934A              ;    jr z,1F
1374+ 934A              ;    cp $ff
1375+ 934A              ;    jr z,1F
1376+ 934A FE 01            cp $01
1377+ 934C 28 09            jr z,1F
1378+ 934E FE 02            cp $02
1379+ 9350 28 05            jr z,1F
1380+ 9352 FE 03            cp $03
1381+ 9354 28 01            jr z,1F
1382+ 9356 C0               ret nz
1383+ 9357 04           1 inc b
1384+ 9358 C9               ret
1385+ 9359
1386+ 9359 A7           Compara_cositas_H4 and a
1387+ 935A 28 11            jr z,1F
1388+ 935C FE FD            cp $fd
1389+ 935E 28 0D            jr z,1F
1390+ 9360 FE FE            cp $fe
1391+ 9362 28 09            jr z,1F
1392+ 9364 FE FF            cp $ff
1393+ 9366 28 05            jr z,1F
1394+ 9368 FE 01            cp $01
1395+ 936A 28 01            jr z,1F
1396+ 936C              ;    cp $02
1397+ 936C              ;    jr z,1F
1398+ 936C              ;    cp $03
1399+ 936C              ;    jr z,1F
1400+ 936C C0               ret nz
1401+ 936D 04           1 inc b
1402+ 936E C9               ret
1403+ 936F
1404+ 936F A7           Compara_cositas_L4 and a
1405+ 9370 28 0D            jr z,1F
1406+ 9372              ;    cp $fd
1407+ 9372              ;    jr z,1F
1408+ 9372 FE FE            cp $fe
1409+ 9374 28 09            jr z,1F
1410+ 9376 FE FF            cp $ff
1411+ 9378 28 05            jr z,1F
1412+ 937A FE 01            cp $01
1413+ 937C 28 01            jr z,1F
1414+ 937E              ;    cp $02
1415+ 937E              ;    jr z,1F
1416+ 937E              ;    cp $03
1417+ 937E              ;    jr z,1F
1418+ 937E C0               ret nz
1419+ 937F 04           1 inc b
1420+ 9380 C9               ret
# file closed: Disparo.asm
1653  9381              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9381              ; ******************************************************************************************************************************************************************************************
   2+ 9381              ;
   3+ 9381              ; 26/06/23
   4+ 9381              ;
   5+ 9381              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9381
   7+ 9381 CD 65 96     Draw call Prepara_draw
   8+ 9384 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9385 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9386 28 05        	jr z,2F
  11+ 9388
  12+ 9388 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 938B 18 0C        	jr 1F
  14+ 938D
  15+ 938D 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9390 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9393 CD 22 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9396              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9396 CD C7 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9399
  21+ 9399 3A EF 88     1 ld a,(Ctrl_0)
  22+ 939C CB 6F        	bit 5,a
  23+ 939E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93A0
  25+ 93A0 CD B8 93     	call Comprueba_limite_horizontal
  26+ 93A3 CD 48 94     	call Comprueba_limite_vertical
  27+ 93A6
  28+ 93A6              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93A6              ; -----------------------
  30+ 93A6              ; -----------------------
  31+ 93A6              ; -----------------------
  32+ 93A6
  33+ 93A6 CD 95 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93A9 CD CC 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93AC CD 2B 96     	call Define_rutina_de_impresion
  36+ 93AF
  37+ 93AF 3A EF 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93B2 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93B4 32 EF 88     	ld (Ctrl_0),a
  40+ 93B7
  41+ 93B7 C9           	ret
  42+ 93B8
  43+ 93B8              ; *******************************************************************************************************************************************************************************************
  44+ 93B8              ;	21/01/23
  45+ 93B8              ;
  46+ 93B8              ; 	Comprueba_limite_horizontal.
  47+ 93B8              ;
  48+ 93B8              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93B8              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93B8              ;
  51+ 93B8              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93B8              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93B8              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93B8              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93B8
  56+ 93B8
  57+ 93B8
  58+ 93B8 3A EF 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93BB CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93BD 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93BF E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93C1 32 EF 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93C4 18 09            jr 6F
  64+ 93C6 CB 5F        1 bit 3,a
  65+ 93C8 28 0A            jr z,2F
  66+ 93CA E6 F7            and $f7
  67+ 93CC 32 EF 88         ld (Ctrl_0),a
  68+ 93CF CD 22 95     6 call Inicializacion
  69+ 93D2 18 5B            jr 5F
  70+ 93D4 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93D5
  72+ 93D5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93D5              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93D5
  75+ 93D5 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93D6 2A FD 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93D9 CD 84 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93DC 67           	ld h,a
  79+ 93DD EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93DE CD 84 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93E1 67           	ld h,a
  82+ 93E2 A7           	and a
  83+ 93E3 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93E5 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93E6 3A D9 88     	ld a,(Cuad_objeto)
  86+ 93E9 FE 02        	cp 2
  87+ 93EB 38 1E        	jr c,3F
  88+ 93ED 28 1C        	jr z,3F
  89+ 93EF 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93F0 28 23            jr z,7F
  91+ 93F2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93F4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93F6 E1           	pop hl
  94+ 93F7
  95+ 93F7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93F7              ; _para indicar con E="2" en caso necesario.
  97+ 93F7
  98+ 93F7 E5               push hl
  99+ 93F8 C5               push bc
 100+ 93F9 CD 84 99     	call calcula_tercio
 101+ 93FC FE 01        	cp 1
 102+ 93FE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9400 CD 30 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9403 28 26            jr z,9F
 105+ 9405 38 24            jr c,9F
 106+ 9407 1E 00        11 ld e,0
 107+ 9409 18 22            jr 8F
 108+ 940B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 940C 28 07        	jr z, 7F
 110+ 940E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9410 1E 00         	ld e,0
 112+ 9412 E1           	pop hl
 113+ 9413 18 04        	jr 4F
 114+ 9415 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9417 18 15            jr 10F
 116+ 9419
 117+ 9419              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9419              ; _para indicar con E="2" en caso necesario.
 119+ 9419
 120+ 9419 E5           4 push hl
 121+ 941A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 941B CD 84 99     	call calcula_tercio
 123+ 941E FE 01        	cp 1
 124+ 9420 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9422 CD 30 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9425 28 04            jr z,9F
 127+ 9427 30 02            jr nc,9F
 128+ 9429 18 02        	jr 8F
 129+ 942B 1E 02        9 ld e,2
 130+ 942D C1           8 pop bc
 131+ 942E E1           10 pop hl
 132+ 942F C9           5 ret
 133+ 9430
 134+ 9430              ; --------------------
 135+ 9430              ;
 136+ 9430              ; 25/08/22
 137+ 9430
 138+ 9430 CD 84 99     Comprueba_centro call calcula_tercio
 139+ 9433 67               ld h,a
 140+ 9434 08           	ex af,af
 141+ 9435 FE 02        	cp 2
 142+ 9437 38 07        	jr c,1F
 143+ 9439 28 05        	jr z,1F
 144+ 943B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 943E 18 03        	jr 2F
 146+ 9440 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9443 08           2 ex af,af
 148+ 9444 A7               and a
 149+ 9445 ED 42            sbc hl,bc
 150+ 9447 C9               ret
 151+ 9448
 152+ 9448              ; *********************************************************************************************************************************************************************************************
 153+ 9448              ;
 154+ 9448              ;   16/8/22
 155+ 9448              ;
 156+ 9448              ;	Comprueba_limite_vertical
 157+ 9448              ;
 158+ 9448              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9448              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9448              ;
 161+ 9448
 162+ 9448 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 944B 7D           	ld a,l
 164+ 944C E6 1F        	and $1F
 165+ 944E 57           	ld d,a
 166+ 944F 3A FF 88     	ld a,(Limite_vertical)
 167+ 9452 BA           	cp d 											; Límite - Posición.
 168+ 9453 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9454 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9457 CB 47        	bit 0,a
 171+ 9459 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 945B
 173+ 945B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 945B
 175+ 945B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 945C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 945E
 178+ 945E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 945E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 945E
 181+ 945E 3A CB 88         ld a,(Coordenada_X)
 182+ 9461 16 0F            ld d,Centro_izquierda
 183+ 9463 A7               and a
 184+ 9464 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9465 28 1E            jr z,3F
 186+ 9467 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9469              ;                                                    ; _salimos sin modificar nada.
 188+ 9469 18 0E            jr 2F
 189+ 946B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 946C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 946E
 192+ 946E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 946E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 946E
 195+ 946E 3A CB 88         ld a,(Coordenada_X)
 196+ 9471 16 10            ld d,Centro_derecha
 197+ 9473 A7               and a
 198+ 9474 92               sub d
 199+ 9475 28 0E            jr z,3F
 200+ 9477 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9479              ;                                                    ; _salimos sin modificar nada.
 202+ 9479 CB 43        2 bit 0,e
 203+ 947B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 947D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 947E CD 12 95         call Modificaccionne
 206+ 9481 C1           	pop bc
 207+ 9482 CD 22 95         call Inicializacion
 208+ 9485 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9486
 210+ 9486              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9486
 212+ 9486 C5           4 push bc
 213+ 9487 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 948A 0A           	ld a,(bc)
 215+ 948B 3D           	dec a
 216+ 948C 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 948D 7D           	ld a,l
 218+ 948E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 948F CB 47        	bit 0,a
 220+ 9491 28 03        	jr z,5F
 221+ 9493 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9494 18 2E        	jr 7F
 223+ 9496
 224+ 9496              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9496
 226+ 9496 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9497 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9498 3A EF 88     	ld a,(Ctrl_0)
 229+ 949B CB 4F        	bit 1,a
 230+ 949D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 949F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94A0
 233+ 94A0              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94A0
 235+ 94A0 1C               inc e
 236+ 94A1 1D               dec e
 237+ 94A2 20 07            jr nz,12F
 238+ 94A4 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94A5 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94A6 22 C7 88     	ld (Posicion_actual),hl
 241+ 94A9 18 44        13 jr 9F
 242+ 94AB CB 43        12 bit 0,e
 243+ 94AD 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94AF              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94AF C1           	pop bc
 246+ 94B0 18 D3        	jr 3B
 247+ 94B2 80           14 add b
 248+ 94B3 6F               ld l,a
 249+ 94B4 22 C7 88     	ld (Posicion_actual),hl
 250+ 94B7 CD 12 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94BA 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94BC E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94BE 32 EF 88         ld (Ctrl_0),a
 254+ 94C1 F1           	pop af
 255+ 94C2 18 2B        	jr 9F
 256+ 94C4
 257+ 94C4              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94C4
 259+ 94C4 F5           7 push af
 260+ 94C5 3A EF 88     	ld a,(Ctrl_0)
 261+ 94C8 CB 47        	bit 0,a
 262+ 94CA 20 1D        	jr nz,8F
 263+ 94CC F1           	pop af
 264+ 94CD
 265+ 94CD              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94CD
 267+ 94CD 1C           	inc e
 268+ 94CE 1D               dec e
 269+ 94CF 20 07            jr nz,10F
 270+ 94D1 90           	sub b
 271+ 94D2 6F               ld l,a
 272+ 94D3 22 C7 88     	ld (Posicion_actual),hl
 273+ 94D6 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94D8              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94D8 CB 43        10 bit 0,e
 276+ 94DA 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94DC              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94DC C1           	pop bc
 279+ 94DD 18 A6        	jr 3B
 280+ 94DF 90           16 sub b
 281+ 94E0 6F               ld l,a
 282+ 94E1 22 C7 88     	ld (Posicion_actual),hl
 283+ 94E4 CD 12 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94E7 18 06            jr 9F
 285+ 94E9 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94EB 32 EF 88         ld (Ctrl_0),a
 287+ 94EE F1           	pop af
 288+ 94EF C1           9 pop bc
 289+ 94F0 1E 00        	ld e,0
 290+ 94F2 CD 22 95         call Inicializacion
 291+ 94F5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94F6 08           	ex af,af
 293+ 94F7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94F8 18 8B            jr 3B
 295+ 94FA
 296+ 94FA              ; --------------------
 297+ 94FA
 298+ 94FA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94FC CD 80 96     1 call PreviousScan
 300+ 94FF 10 FB            djnz 1B
 301+ 9501 22 C7 88     	ld (Posicion_actual),hl
 302+ 9504 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9505 C9           	ret
 304+ 9506
 305+ 9506              ; --------------------
 306+ 9506
 307+ 9506 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9508 CD 71 96     1 call NextScan
 309+ 950B 10 FB            djnz 1B
 310+ 950D 22 C7 88     	ld (Posicion_actual),hl
 311+ 9510 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9511 C9           	ret
 313+ 9512
 314+ 9512              ; --------------------
 315+ 9512              ;
 316+ 9512              ;	22/01/23
 317+ 9512              ;
 318+ 9512              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9512              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9512              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9512
 322+ 9512
 323+ 9512              Modificaccionne
 324+ 9512
 325+ 9512 3A D9 88     	ld a,(Cuad_objeto)
 326+ 9515 FE 02        	cp 2
 327+ 9517 CC FA 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 951A DC FA 94         call c,Modifica_Pos_actual
 329+ 951D C8           	ret z
 330+ 951E CD 06 95         call Modifica_Pos_actual2
 331+ 9521 C9               ret
 332+ 9522
 333+ 9522              ; *************************************************************************************************************************************************************************************************
 334+ 9522              ;
 335+ 9522              ;	13/8/22
 336+ 9522              ;
 337+ 9522              ;	Inicializacion
 338+ 9522              ;
 339+ 9522              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9522              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9522              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9522              ;
 343+ 9522              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9522              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9522              ;	_ desaparece/aparece.
 346+ 9522
 347+ 9522              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9522              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9522              ;
 350+ 9522              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9522              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9522              ; 		   [E] ="0"
 353+ 9522
 354+ 9522              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9522
 356+ 9522 CD 84 99     Inicializacion call calcula_tercio
 357+ 9525 28 36        	jr z,primit
 358+ 9527 E6 02        	and 2
 359+ 9529 20 07        	jr nz,segmit
 360+ 952B 7D           	ld a,l
 361+ 952C FE 7F        	cp $7f
 362+ 952E 38 2D        	jr c,primit
 363+ 9530 28 2B        	jr z,primit
 364+ 9532 CD 8F 95     segmit call column
 365+ 9535 38 13        	jr c,tercuad
 366+ 9537 3E 04        cuarcuad ld a,4
 367+ 9539 32 D9 88     	ld (Cuad_objeto),a
 368+ 953C 21 20 48     	ld hl,$4820
 369+ 953F 22 FD 88     	ld (Limite_horizontal),hl
 370+ 9542 21 FF 88     	ld hl,Limite_vertical
 371+ 9545 36 0D        	ld (hl),$0d
 372+ 9547 08           	ex af,af
 373+ 9548 18 3C        	jr 1F
 374+ 954A              tercuad
 375+ 954A 3E 03        	ld a,3
 376+ 954C 32 D9 88     	ld (Cuad_objeto),a
 377+ 954F 21 20 48     	ld hl,$4820
 378+ 9552 22 FD 88     	ld (Limite_horizontal),hl
 379+ 9555 21 FF 88     	ld hl,Limite_vertical
 380+ 9558 36 12        	ld (hl),$12
 381+ 955A 08           	ex af,af
 382+ 955B 18 29        	jr 1F
 383+ 955D CD 8F 95     primit call column
 384+ 9560 38 13        	jr c, primcuad
 385+ 9562              segcuad
 386+ 9562 3E 02        	ld a,2
 387+ 9564 32 D9 88     	ld (Cuad_objeto),a
 388+ 9567 21 C0 4F     	ld hl,$4fc0
 389+ 956A 22 FD 88     	ld (Limite_horizontal),hl
 390+ 956D 21 FF 88     	ld hl,Limite_vertical
 391+ 9570 36 0D        	ld (hl),$0d
 392+ 9572 08           	ex af,af
 393+ 9573 18 11        	jr 1F
 394+ 9575              primcuad
 395+ 9575 3E 01        	ld a,1
 396+ 9577 32 D9 88     	ld (Cuad_objeto),a
 397+ 957A 21 C0 4F     	ld hl,$4fc0
 398+ 957D 22 FD 88     	ld (Limite_horizontal),hl
 399+ 9580 21 FF 88     	ld hl,Limite_vertical
 400+ 9583 36 12        	ld (hl),$12
 401+ 9585 08           	ex af,af
 402+ 9586 CD 0F 9D     1 call Genera_coordenadas
 403+ 9589 21 EF 88     	ld hl,Ctrl_0
 404+ 958C CB EE        	set 5,(hl)
 405+ 958E C9           	ret
 406+ 958F
 407+ 958F              ; ------------------------------------------------------------------------------------------------------------------
 408+ 958F
 409+ 958F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 958F              ;
 411+ 958F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 958F
 413+ 958F 7D           column ld a,l
 414+ 9590 E6 1F        	and $1f
 415+ 9592 FE 10         	cp $10
 416+ 9594 C9            	ret
 417+ 9595
 418+ 9595              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9595              ;
 420+ 9595              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9595              ;
 422+ 9595              ; 14/12/22
 423+ 9595              ;
 424+ 9595              ;	Modifica: A y BC.
 425+ 9595
 426+ 9595 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9598 E6 01        	and 1
 428+ 959A 28 17        	jr z,1F
 429+ 959C
 430+ 959C              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 959C
 432+ 959C 3A CB 88     	ld a,(Coordenada_X)
 433+ 959F 47           	ld b,a
 434+ 95A0 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95A1 79           	ld a,c
 436+ 95A2 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95A3 38 08        	jr c,2F
 438+ 95A5 47           	ld b,a
 439+ 95A6 79           	ld a,c
 440+ 95A7 90           	sub b
 441+ 95A8 32 FC 88     	ld (Columnas),a
 442+ 95AB 18 1B        	jr 4F
 443+ 95AD 79           2 ld a,c
 444+ 95AE 32 FC 88     	ld (Columnas),a
 445+ 95B1 18 15        	jr 4F
 446+ 95B3
 447+ 95B3              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95B3
 449+ 95B3 3A CB 88     1 ld a,(Coordenada_X)
 450+ 95B6 81           	add c
 451+ 95B7 3D           	dec a
 452+ 95B8 D6 1F        	sub $1f
 453+ 95BA 38 08        	jr c,3F
 454+ 95BC 47           	ld b,a
 455+ 95BD 79           	ld a,c
 456+ 95BE 90           	sub b
 457+ 95BF 32 FC 88     	ld (Columnas),a
 458+ 95C2 18 04        	jr 4F
 459+ 95C4 79           3 ld a,c
 460+ 95C5 32 FC 88     	ld (Columnas),a
 461+ 95C8 D9           4 exx
 462+ 95C9 4F           	ld c,a
 463+ 95CA D9           	exx
 464+ 95CB C9            ret
 465+ 95CC
 466+ 95CC              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95CC              ;
 468+ 95CC              ;   19/7/23
 469+ 95CC              ;
 470+ 95CC              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95CC              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95CC              ;
 473+ 95CC              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95CC              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95CC              ;
 476+ 95CC              ;	DESTRUYE: HL,B Y A.
 477+ 95CC
 478+ 95CC 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95CF FE 02        	cp 2
 480+ 95D1 38 18        	jr c,1F
 481+ 95D3 28 16        	jr z,1F
 482+ 95D5 E6 01        	and 1
 483+ 95D7 28 0D        	jr z,3F
 484+ 95D9
 485+ 95D9              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95D9
 487+ 95D9 CD 1F 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95DC
 489+ 95DC 7D           9 ld a,l
 490+ 95DD E6 1F        	and $1f
 491+ 95DF 28 2A        	jr z,7F
 492+ 95E1 2B           	dec hl
 493+ 95E2 10 F8        	djnz 9B
 494+ 95E4 18 25        	jr 7F
 495+ 95E6
 496+ 95E6              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95E6
 498+ 95E6 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 95E9 18 20        	jr 7F
 500+ 95EB
 501+ 95EB 28 14        1 jr z,2F
 502+ 95ED
 503+ 95ED              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95ED
 505+ 95ED CD 1F 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95F0
 507+ 95F0 7D           4 ld a,l
 508+ 95F1 E6 1F        	and $1f
 509+ 95F3 28 03        	jr z,6F
 510+ 95F5 2B           	dec hl
 511+ 95F6 10 F8        	djnz 4B
 512+ 95F8 06 0F        6 ld b,15
 513+ 95FA CD 80 96     5 call PreviousScan
 514+ 95FD 10 FB        	djnz 5B
 515+ 95FF 18 0A        	jr 7F
 516+ 9601
 517+ 9601              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9601
 519+ 9601 CD 1F 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9604 06 0F        	ld b,15
 521+ 9606 CD 80 96     8 call PreviousScan
 522+ 9609 10 FB        	djnz 8B
 523+ 960B
 524+ 960B E5           7 push hl
 525+ 960C DD E1        	pop ix
 526+ 960E
 527+ 960E 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 9611 E5           	push hl
 529+ 9612 FD E1        	pop iy
 530+ 9614
 531+ 9614              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9614
 533+ 9614 3A EF 88     	ld a,(Ctrl_0)
 534+ 9617 CB 77        	bit 6,a
 535+ 9619 C8           	ret z
 536+ 961A
 537+ 961A              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 961A              ; _ entidad / Amadeus´.
 539+ 961A
 540+ 961A DD 22 4B 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 961E
 542+ 961E C9           	ret
 543+ 961F
 544+ 961F              ; --------------------------------------------------------------------------------------------------------------------
 545+ 961F              ;
 546+ 961F              ;	2/1/23
 547+ 961F              ;
 548+ 961F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 961F              ;
 550+ 961F              ;	Tras esta rutina tenemos:
 551+ 961F              ;
 552+ 961F              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 961F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 961F              ;
 555+ 961F              ;	DESTRUYE!!!!! HL,B y A.
 556+ 961F
 557+ 961F 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 9622 3A FC 88     	ld a,(Columnas)
 559+ 9625 3D           	dec a
 560+ 9626 20 01        	jr nz,1F
 561+ 9628 3C           	inc a
 562+ 9629 47           1 ld b,a
 563+ 962A C9           	ret
 564+ 962B
 565+ 962B              ; --------------------------------------------------------------------------------------------------------------------
 566+ 962B              ;
 567+ 962B              ;	3/1/23
 568+ 962B              ;
 569+ 962B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 962B              ;
 571+ 962B              ;	Destruye: A,B,HL y DE.
 572+ 962B
 573+ 962B              Define_rutina_de_impresion
 574+ 962B
 575+ 962B 3A C6 88     	ld a,(Columns)
 576+ 962E 47           	ld b,a
 577+ 962F 3A FC 88     	ld a,(Columnas)
 578+ 9632 B8           	cp b
 579+ 9633 20 0D        	jr nz,2f
 580+ 9635
 581+ 9635              ;	La entidad se imprime entera.
 582+ 9635
 583+ 9635 21 54 97     	ld hl, Indice_entidades_completas
 584+ 9638 E6 01        	and 1
 585+ 963A 28 02        	jr z,1F
 586+ 963C
 587+ 963C 23           	inc hl
 588+ 963D 23           	inc hl
 589+ 963E
 590+ 963E CD 9D 8C     1 call Extrae_address
 591+ 9641 C9           	ret		;	ret
 592+ 9642
 593+ 9642              ;	La entidad no se imprime entera en pantalla.
 594+ 9642
 595+ 9642 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 9645 E6 01        	and 1
 597+ 9647 28 17        	jr z,3F
 598+ 9649
 599+ 9649              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9649
 601+ 9649 21 58 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 964C 3A C6 88     4 ld a,(Columns)
 603+ 964F E6 01        	and 1
 604+ 9651 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9653
 606+ 9653 23           	inc hl
 607+ 9654 23           	inc hl
 608+ 9655
 609+ 9655 3A FC 88     	ld a,(Columnas)
 610+ 9658 E6 01        	and 1
 611+ 965A 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 965C
 613+ 965C 23           	inc hl
 614+ 965D 23           	inc hl
 615+ 965E
 616+ 965E 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9660
 618+ 9660 21 5E 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9663 18 E7        	jr 4B
 620+ 9665
 621+ 9665              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9665              ;
 623+ 9665              ;	Prepara_draw
 624+ 9665              ;
 625+ 9665              ;	Es una rutina de carga.
 626+ 9665              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9665              ;
 628+ 9665              ;	FUNCIONAMIENTO:
 629+ 9665              ;
 630+ 9665              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9665              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9665              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9665              ;
 634+ 9665              ;	DESTRUYE:
 635+ 9665              ;
 636+ 9665              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9665
 638+ 9665 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9668 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9669 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 966A 4E           	ld c,(hl)
 642+ 966B 2A C7 88     	ld hl,(Posicion_actual)
 643+ 966E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9670 C9           	ret
 645+ 9671
 646+ 9671              ;----------------------------------------------------------------------------------------------------------------
 647+ 9671              ;
 648+ 9671              ;	5/08/22
 649+ 9671              ;
 650+ 9671              ;   NextScan.
 651+ 9671              ;
 652+ 9671              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9671              ;
 654+ 9671              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9671              ;
 656+ 9671              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9671              ;
 658+ 9671              ;       DESTRUIDOS: AF y HL !!!
 659+ 9671              ;
 660+ 9671              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9671              ;
 662+ 9671
 663+ 9671 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9672 7C               ld a,h
 665+ 9673 E6 07            and 7
 666+ 9675 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9676
 668+ 9676 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9677 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9679 6F               ld l,a
 671+ 967A D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 967B
 673+ 967B 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 967C D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 967E 67               ld h,a
 676+ 967F C9               ret
 677+ 9680
 678+ 9680              ;----------------------------------------------------------------------------------------------------------------
 679+ 9680              ;
 680+ 9680              ;	5/08/22
 681+ 9680              ;
 682+ 9680              ;   PreviousScan.
 683+ 9680              ;
 684+ 9680              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9680              ;
 686+ 9680              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9680              ;
 688+ 9680              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9680              ;
 690+ 9680              ;       DESTRUIDOS: AF y HL !!!
 691+ 9680              ;
 692+ 9680              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9680              ;
 694+ 9680
 695+ 9680 7C           PreviousScan ld a,h
 696+ 9681 25               dec h               ; Dec H.
 697+ 9682 E6 07            and 7
 698+ 9684 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9685
 700+ 9685 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9686 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9688 6F               ld l,a
 703+ 9689 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 968A
 705+ 968A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 968B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 968D 67               ld h,a
 708+ 968E C9               ret
 709+ 968F
 710+ 968F              ; -----------------------------------------------------------------------------------
 711+ 968F              ;
 712+ 968F              ;	31/7/23
 713+ 968F              ;
 714+ 968F              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 968F              ;	Extrae fotos de Album_de_fotos.
 716+ 968F
 717+ 968F              Extrae_foto_entidades
 718+ 968F
 719+ 968F 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9692 7E           	ld a,(hl)
 721+ 9693 A7           	and a
 722+ 9694 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9695
 724+ 9695 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9698 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9699 C8           	ret z
 727+ 969A
 728+ 969A              ; -----------------------------------
 729+ 969A
 730+ 969A ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 969E 31 00 70     	ld sp,Album_de_fotos
 732+ 96A1
 733+ 96A1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96A3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96A4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96A5
 737+ 96A5 ED 73 15 89  	ld (Stack_2),sp
 738+ 96A9 ED 7B 13 89  	ld sp,(Stack)
 739+ 96AD
 740+ 96AD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96AD
 742+ 96AD 3E CD        	ld a,$cd
 743+ 96AF 32 B7 96     	ld (Imprime),a
 744+ 96B2 EB           	ex de,hl
 745+ 96B3 22 B8 96     	ld (Imprime+1),hl
 746+ 96B6 EB           	ex de,hl
 747+ 96B7
 748+ 96B7              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96B7
 750+ 96B7 00 00 00     Imprime db 0,0,0
 751+ 96BA
 752+ 96BA ED 73 13 89  	ld (Stack),sp
 753+ 96BE
 754+ 96BE 3A 0E 89     	ld a,(Numero_de_malotes)
 755+ 96C1 3D           	dec a
 756+ 96C2 28 09        	jr z,1F
 757+ 96C4 32 0E 89      	ld (Numero_de_malotes),a
 758+ 96C7
 759+ 96C7 ED 7B 15 89  	ld sp,(Stack_2)
 760+ 96CB 18 D4        	jr 2B
 761+ 96CD
 762+ 96CD AF           1 xor a
 763+ 96CE 32 15 89     	ld (Stack_2),a
 764+ 96D1
 765+ 96D1 C9           	ret
 766+ 96D2
 767+ 96D2              ; -----------------------------------------------------------------------------------
 768+ 96D2              ;
 769+ 96D2              ;	28/2/23
 770+ 96D2              ;
 771+ 96D2              ;	Pinta los disparos generados.
 772+ 96D2
 773+ 96D2              Extrae_foto_disparos
 774+ 96D2
 775+ 96D2 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96D5 7E               ld a,(hl)
 777+ 96D6 A7               and a
 778+ 96D7 C8               ret z
 779+ 96D8
 780+ 96D8 3A 3B 89     	ld a,(Numero_de_disparotes)
 781+ 96DB A7           	and a
 782+ 96DC C8           	ret z
 783+ 96DD ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96E1 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96E4
 786+ 96E4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96E6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96E7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96E8
 790+ 96E8 ED 73 15 89  	ld (Stack_2),sp
 791+ 96EC ED 7B 13 89  	ld sp,(Stack)
 792+ 96F0
 793+ 96F0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96F0
 795+ 96F0 3E CD        	ld a,$cd
 796+ 96F2 32 FA 96     	ld (Imprime2),a
 797+ 96F5 EB           	ex de,hl
 798+ 96F6 22 FB 96     	ld (Imprime2+1),hl
 799+ 96F9 EB           	ex de,hl
 800+ 96FA
 801+ 96FA              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96FA
 803+ 96FA 00 00 00     Imprime2 db 0,0,0
 804+ 96FD
 805+ 96FD 3A 3B 89     	ld a,(Numero_de_disparotes)
 806+ 9700 3D           	dec a
 807+ 9701 28 09        	jr z,1F
 808+ 9703 32 3B 89      	ld (Numero_de_disparotes),a
 809+ 9706
 810+ 9706 ED 7B 15 89  	ld sp,(Stack_2)
 811+ 970A 18 D8        	jr 2B
 812+ 970C
 813+ 970C AF           1 xor a
 814+ 970D 32 15 89     	ld (Stack_2),a
 815+ 9710 C9           	ret
 816+ 9711
 817+ 9711              ; -----------------------------------------------------------------------------------
 818+ 9711              ;
 819+ 9711              ;	4/9/23
 820+ 9711              ;
 821+ 9711              ;	Rutina principal de pintado de Amadeus.
 822+ 9711              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9711
 824+ 9711 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 9714 7E           	ld a,(hl)
 826+ 9715 A7           	and a
 827+ 9716 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 9717
 829+ 9717 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 971A A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 971B C8           	ret z
 832+ 971C
 833+ 971C              ; -----------------------------------
 834+ 971C
 835+ 971C ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 9720 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9723
 838+ 9723 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9725 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9726 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9727
 842+ 9727 ED 73 15 89  	ld (Stack_2),sp
 843+ 972B ED 7B 13 89  	ld sp,(Stack)
 844+ 972F
 845+ 972F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 972F
 847+ 972F 3E CD        	ld a,$cd
 848+ 9731 32 39 97     	ld (Imprime_Amadeus),a
 849+ 9734 EB           	ex de,hl
 850+ 9735 22 3A 97     	ld (Imprime_Amadeus+1),hl
 851+ 9738 EB           	ex de,hl
 852+ 9739
 853+ 9739              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9739
 855+ 9739 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 973C
 857+ 973C ED 73 13 89  	ld (Stack),sp
 858+ 9740
 859+ 9740 3A 0E 89     	ld a,(Numero_de_malotes)
 860+ 9743 3D           	dec a
 861+ 9744 28 09        	jr z,1F
 862+ 9746 32 0E 89      	ld (Numero_de_malotes),a
 863+ 9749
 864+ 9749 ED 7B 15 89  	ld sp,(Stack_2)
 865+ 974D 18 D4        	jr 2B
 866+ 974F
 867+ 974F AF           1 xor a
 868+ 9750 32 15 89     	ld (Stack_2),a
 869+ 9753
 870+ 9753 C9           	ret
# file closed: Draw_XOR.asm
1654  9754              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9754              ;   índices de Rutinas de impresión.
   2+ 9754
   3+ 9754 64 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9756 91 97            defw Pinta_Amadeus_3x2
   5+ 9758
   6+ 9758 E7 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 975A 87 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 975C 3B 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 975E
  10+ 975E 11 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9760 15 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9762 C9 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9764
  14+ 9764
  15+ 9764              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9764              ;
  17+ 9764              ;   12/12/22
  18+ 9764              ;
  19+ 9764              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9764              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9764              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9764              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9764              ;
  24+ 9764              ;   Modifica: DE y HL.
  25+ 9764
  26+ 9764 ED 73 13 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9768 FD F9        	ld sp,iy
  28+ 976A 06 10            ld b,16
  29+ 976C D1           1 pop de
  30+ 976D 7B               ld a,e
  31+ 976E AE               xor (hl)
  32+ 976F 77           	ld (hl),a
  33+ 9770 23           	inc hl
  34+ 9771 7A               ld a,d
  35+ 9772 AE               xor (hl)
  36+ 9773 77           	ld (hl),a
  37+ 9774 2B           	dec hl
  38+ 9775 24           	inc h
  39+ 9776 7C               ld a,h
  40+ 9777 E6 07            and 7
  41+ 9779 20 0A            jr nz,2F
  42+ 977B 7D               ld a,l
  43+ 977C C6 20            add a,$20
  44+ 977E 6F               ld l,a
  45+ 977F 38 04            jr c,2F
  46+ 9781 7C               ld a,h
  47+ 9782 D6 08            sub 8
  48+ 9784 67               ld h,a
  49+ 9785 7C           2 ld a,h
  50+ 9786 FE 58            cp $58
  51+ 9788 28 02            jr z,3F
  52+ 978A 10 E0            djnz 1B
  53+ 978C ED 7B 13 89  3 ld sp,(Stack)
  54+ 9790 C9           	ret
  55+ 9791
  56+ 9791 ED 73 13 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9795 FD F9        	ld sp,iy
  58+ 9797 06 08            ld b,8
  59+ 9799 D1           1 pop de
  60+ 979A 7B               ld a,e
  61+ 979B AE               xor (hl)
  62+ 979C 77           	ld (hl),a
  63+ 979D 23           	inc hl
  64+ 979E 7A               ld a,d
  65+ 979F AE               xor (hl)
  66+ 97A0 77           	ld (hl),a
  67+ 97A1 23           	inc hl
  68+ 97A2 D1           	pop de
  69+ 97A3 7B               ld a,e
  70+ 97A4 AE               xor (hl)
  71+ 97A5 77           	ld (hl),a
  72+ 97A6 2B           	dec hl
  73+ 97A7 2B           	dec hl
  74+ 97A8 24           	inc h
  75+ 97A9 7C               ld a,h
  76+ 97AA E6 07            and 7
  77+ 97AC 20 0A            jr nz,2F
  78+ 97AE 7D               ld a,l
  79+ 97AF C6 20            add a,$20
  80+ 97B1 6F               ld l,a
  81+ 97B2 38 04            jr c,2F
  82+ 97B4 7C               ld a,h
  83+ 97B5 D6 08            sub 8
  84+ 97B7 67               ld h,a
  85+ 97B8 7C           2 ld a,h
  86+ 97B9 FE 58            cp $58
  87+ 97BB 28 25            jr z,4F
  88+ 97BD 7A               ld a,d
  89+ 97BE AE               xor (hl)
  90+ 97BF 77               ld (hl),a
  91+ 97C0 D1           	pop de
  92+ 97C1 23           	inc hl
  93+ 97C2 7B               ld a,e
  94+ 97C3 AE               xor (hl)
  95+ 97C4 77           	ld (hl),a
  96+ 97C5 23           	inc hl
  97+ 97C6 7A               ld a,d
  98+ 97C7 AE               xor (hl)
  99+ 97C8 77           	ld (hl),a
 100+ 97C9 2B           	dec hl
 101+ 97CA 2B           	dec hl
 102+ 97CB 24           	inc h
 103+ 97CC 7C               ld a,h
 104+ 97CD E6 07            and 7
 105+ 97CF 20 0A            jr nz,3F
 106+ 97D1 7D               ld a,l
 107+ 97D2 C6 20            add a,$20
 108+ 97D4 6F               ld l,a
 109+ 97D5 38 04            jr c,3F
 110+ 97D7 7C               ld a,h
 111+ 97D8 D6 08            sub 8
 112+ 97DA 67               ld h,a
 113+ 97DB 7C           3 ld a,h
 114+ 97DC FE 58            cp $58
 115+ 97DE 28 02            jr z,4F
 116+ 97E0 10 B7            djnz 1B
 117+ 97E2 ED 7B 13 89  4 ld sp,(Stack)
 118+ 97E6 C9           	ret
 119+ 97E7
 120+ 97E7              ; ---------------------------------------------------
 121+ 97E7
 122+ 97E7 ED 73 13 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97EB FD F9        	ld sp,iy
 124+ 97ED
 125+ 97ED              ; >>>
 126+ 97ED
 127+ 97ED 06 10            ld b,16
 128+ 97EF D1           1 pop de
 129+ 97F0 7A           	ld a,d
 130+ 97F1 AE           	xor (hl)
 131+ 97F2 77           	ld (hl),a
 132+ 97F3 24           	inc h
 133+ 97F4 7C               ld a,h
 134+ 97F5 E6 07            and 7
 135+ 97F7 20 0C            jr nz,2F
 136+ 97F9 7D               ld a,l
 137+ 97FA C6 20            add a,$20
 138+ 97FC 6F               ld l,a
 139+ 97FD 38 06            jr c,2F
 140+ 97FF 7C               ld a,h
 141+ 9800 D6 08            sub 8
 142+ 9802 67               ld h,a
 143+ 9803 18 00            jr 2F
 144+ 9805 7C           2 ld a,h
 145+ 9806 FE 58            cp $58
 146+ 9808 28 02            jr z,3F
 147+ 980A 10 E3            djnz 1B
 148+ 980C ED 7B 13 89  3 ld sp,(Stack)
 149+ 9810 C9           	ret
 150+ 9811
 151+ 9811 ED 73 13 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9815 FD F9        	ld sp,iy
 153+ 9817
 154+ 9817              ; >>>
 155+ 9817
 156+ 9817 06 10            ld b,16
 157+ 9819 D1           1 pop de
 158+ 981A 7B           	ld a,e
 159+ 981B AE           	xor (hl)
 160+ 981C 77           	ld (hl),a
 161+ 981D 24           	inc h
 162+ 981E 7C               ld a,h
 163+ 981F E6 07            and 7
 164+ 9821 20 0C            jr nz,2F
 165+ 9823 7D               ld a,l
 166+ 9824 C6 20            add a,$20
 167+ 9826 6F               ld l,a
 168+ 9827 38 06            jr c,2F
 169+ 9829 7C               ld a,h
 170+ 982A D6 08            sub 8
 171+ 982C 67               ld h,a
 172+ 982D 18 00            jr 2F
 173+ 982F 7C           2 ld a,h
 174+ 9830 FE 58            cp $58
 175+ 9832 28 02            jr z,3F
 176+ 9834 10 E3            djnz 1B
 177+ 9836 ED 7B 13 89  3 ld sp,(Stack)
 178+ 983A C9           	ret
 179+ 983B
 180+ 983B              ; ---------------------------------------------------
 181+ 983B
 182+ 983B ED 73 13 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 983F FD F9        	ld sp,iy
 184+ 9841 06 08            ld b,8
 185+ 9843 D1           1 pop de
 186+ 9844 7A           	ld a,d
 187+ 9845 AE           	xor (hl)
 188+ 9846 77           	ld (hl),a
 189+ 9847 23           	inc hl
 190+ 9848 D1           	pop de
 191+ 9849 7B           	ld a,e
 192+ 984A AE           	xor (hl)
 193+ 984B 77           	ld (hl),a
 194+ 984C 2B           	dec hl
 195+ 984D 24            	inc h
 196+ 984E 7C               ld a,h
 197+ 984F E6 07            and 7
 198+ 9851 20 0A            jr nz,2F
 199+ 9853 7D               ld a,l
 200+ 9854 C6 20            add a,$20
 201+ 9856 6F               ld l,a
 202+ 9857 38 04            jr c,2F
 203+ 9859 7C               ld a,h
 204+ 985A D6 08            sub 8
 205+ 985C 67               ld h,a
 206+ 985D 7C           2 ld a,h
 207+ 985E FE 58            cp $58
 208+ 9860 28 20            jr z,4F
 209+ 9862 D1               pop de
 210+ 9863 7B           	ld a,e
 211+ 9864 AE           	xor (hl)
 212+ 9865 77           	ld (hl),a
 213+ 9866 23           	inc hl
 214+ 9867 7A           	ld a,d
 215+ 9868 AE           	xor (hl)
 216+ 9869 77           	ld (hl),a
 217+ 986A 2B           	dec hl
 218+ 986B 24           	inc h
 219+ 986C 7C               ld a,h
 220+ 986D E6 07            and 7
 221+ 986F 20 0A            jr nz,3F
 222+ 9871 7D               ld a,l
 223+ 9872 C6 20            add a,$20
 224+ 9874 6F               ld l,a
 225+ 9875 38 04            jr c,3F
 226+ 9877 7C               ld a,h
 227+ 9878 D6 08            sub 8
 228+ 987A 67               ld h,a
 229+ 987B 7C           3 ld a,h
 230+ 987C FE 58            cp $58
 231+ 987E 28 02            jr z,4F
 232+ 9880 10 C1            djnz 1B
 233+ 9882 ED 7B 13 89  4 ld sp,(Stack)
 234+ 9886 C9           	ret
 235+ 9887
 236+ 9887 ED 73 13 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 988B FD F9        	ld sp,iy
 238+ 988D 06 08            ld b,8
 239+ 988F D1           1 pop de
 240+ 9890 D1           	pop de
 241+ 9891 7B           	ld a,e
 242+ 9892 AE           	xor (hl)
 243+ 9893 77           	ld (hl),a
 244+ 9894 24            	inc h
 245+ 9895 7C               ld a,h
 246+ 9896 E6 07            and 7
 247+ 9898 20 0A            jr nz,2F
 248+ 989A 7D               ld a,l
 249+ 989B C6 20            add a,$20
 250+ 989D 6F               ld l,a
 251+ 989E 38 04            jr c,2F
 252+ 98A0 7C               ld a,h
 253+ 98A1 D6 08            sub 8
 254+ 98A3 67               ld h,a
 255+ 98A4 7C           2 ld a,h
 256+ 98A5 FE 58            cp $58
 257+ 98A7 28 1B            jr z,4F
 258+ 98A9 D1               pop de
 259+ 98AA 7A           	ld a,d
 260+ 98AB AE           	xor (hl)
 261+ 98AC 77           	ld (hl),a
 262+ 98AD 24           	inc h
 263+ 98AE 7C               ld a,h
 264+ 98AF E6 07            and 7
 265+ 98B1 20 0A            jr nz,3F
 266+ 98B3 7D               ld a,l
 267+ 98B4 C6 20            add a,$20
 268+ 98B6 6F               ld l,a
 269+ 98B7 38 04            jr c,3F
 270+ 98B9 7C               ld a,h
 271+ 98BA D6 08            sub 8
 272+ 98BC 67               ld h,a
 273+ 98BD 7C           3 ld a,h
 274+ 98BE FE 58            cp $58
 275+ 98C0 28 02            jr z,4F
 276+ 98C2 10 CB            djnz 1B
 277+ 98C4 ED 7B 13 89  4 ld sp,(Stack)
 278+ 98C8 C9           	ret
 279+ 98C9
 280+ 98C9 ED 73 13 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98CD FD F9        	ld sp,iy
 282+ 98CF 06 08            ld b,8
 283+ 98D1 D1           1 pop de
 284+ 98D2 7B           	ld a,e
 285+ 98D3 AE           	xor (hl)
 286+ 98D4 77           	ld (hl),a
 287+ 98D5 23           	inc hl
 288+ 98D6 7A           	ld a,d
 289+ 98D7 AE           	xor (hl)
 290+ 98D8 77           	ld (hl),a
 291+ 98D9 2B           	dec hl
 292+ 98DA 24             	inc h
 293+ 98DB 7C               ld a,h
 294+ 98DC E6 07            and 7
 295+ 98DE 20 0A            jr nz,2F
 296+ 98E0 7D               ld a,l
 297+ 98E1 C6 20            add a,$20
 298+ 98E3 6F               ld l,a
 299+ 98E4 38 04            jr c,2F
 300+ 98E6 7C               ld a,h
 301+ 98E7 D6 08            sub 8
 302+ 98E9 67               ld h,a
 303+ 98EA 7C           2 ld a,h
 304+ 98EB FE 58            cp $58
 305+ 98ED 28 21            jr z,4F
 306+ 98EF D1               pop de
 307+ 98F0 7A           	ld a,d
 308+ 98F1 AE           	xor (hl)
 309+ 98F2 77           	ld (hl),a
 310+ 98F3 23           	inc hl
 311+ 98F4 D1               pop de
 312+ 98F5 7B           	ld a,e
 313+ 98F6 AE           	xor (hl)
 314+ 98F7 77           	ld (hl),a
 315+ 98F8 2B           	dec hl
 316+ 98F9 24           	inc h
 317+ 98FA 7C               ld a,h
 318+ 98FB E6 07            and 7
 319+ 98FD 20 0A            jr nz,3F
 320+ 98FF 7D               ld a,l
 321+ 9900 C6 20            add a,$20
 322+ 9902 6F               ld l,a
 323+ 9903 38 04            jr c,3F
 324+ 9905 7C               ld a,h
 325+ 9906 D6 08            sub 8
 326+ 9908 67               ld h,a
 327+ 9909 7C           3 ld a,h
 328+ 990A FE 58            cp $58
 329+ 990C 28 02            jr z,4F
 330+ 990E 10 C1            djnz 1B
 331+ 9910 ED 7B 13 89  4 ld sp,(Stack)
 332+ 9914 C9           	ret
 333+ 9915
 334+ 9915 ED 73 13 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9919 FD F9        	ld sp,iy
 336+ 991B 06 08            ld b,8
 337+ 991D D1           1 pop de
 338+ 991E 7B           	ld a,e
 339+ 991F AE           	xor (hl)
 340+ 9920 77           	ld (hl),a
 341+ 9921 24            	inc h
 342+ 9922 7C               ld a,h
 343+ 9923 E6 07            and 7
 344+ 9925 20 0A            jr nz,2F
 345+ 9927 7D               ld a,l
 346+ 9928 C6 20            add a,$20
 347+ 992A 6F               ld l,a
 348+ 992B 38 04            jr c,2F
 349+ 992D 7C               ld a,h
 350+ 992E D6 08            sub 8
 351+ 9930 67               ld h,a
 352+ 9931 7C           2 ld a,h
 353+ 9932 FE 58            cp $58
 354+ 9934 28 1C            jr z,4F
 355+ 9936 D1               pop de
 356+ 9937 7A           	ld a,d
 357+ 9938 AE           	xor (hl)
 358+ 9939 77           	ld (hl),a
 359+ 993A 24           	inc h
 360+ 993B 7C               ld a,h
 361+ 993C E6 07            and 7
 362+ 993E 20 0A            jr nz,3F
 363+ 9940 7D               ld a,l
 364+ 9941 C6 20            add a,$20
 365+ 9943 6F               ld l,a
 366+ 9944 38 04            jr c,3F
 367+ 9946 7C               ld a,h
 368+ 9947 D6 08            sub 8
 369+ 9949 67               ld h,a
 370+ 994A 7C           3 ld a,h
 371+ 994B FE 58            cp $58
 372+ 994D 28 03            jr z,4F
 373+ 994F D1               pop de
 374+ 9950 10 CB            djnz 1B
 375+ 9952 ED 7B 13 89  4 ld sp,(Stack)
 376+ 9956 C9           	ret
 377+ 9957
 378+ 9957              ; ---------------------------------------------------
 379+ 9957              ;
 380+ 9957              ;   27/02/23
 381+ 9957              ;
 382+ 9957              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9957              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9957              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9957
 386+ 9957 ED 73 13 89  Pinta_Disparo ld (Stack),sp
 387+ 995B FD F9            ld sp,iy
 388+ 995D 06 03            ld b,3
 389+ 995F D1           1 pop de
 390+ 9960 7B               ld a,e
 391+ 9961 AE               xor (hl)
 392+ 9962 77               ld (hl),a
 393+ 9963 23               inc hl
 394+ 9964 7A               ld a,d
 395+ 9965 AE               xor (hl)
 396+ 9966 77               ld (hl),a
 397+ 9967 2B               dec hl
 398+ 9968
 399+ 9968 24               inc h
 400+ 9969 7C               ld a,h
 401+ 996A E6 07            and 7
 402+ 996C 20 0A            jr nz,2F
 403+ 996E 7D               ld a,l
 404+ 996F C6 20            add a,$20
 405+ 9971 6F               ld l,a
 406+ 9972 38 04            jr c,2F
 407+ 9974 7C               ld a,h
 408+ 9975 D6 08            sub 8
 409+ 9977 67               ld h,a
 410+ 9978 7C           2 ld a,h
 411+ 9979 FE 58            cp $58
 412+ 997B 28 02            jr z,3F
 413+ 997D
 414+ 997D 10 E0            djnz 1B
 415+ 997F ED 7B 13 89  3 ld sp,(Stack)
 416+ 9983 C9               ret
 417+ 9984
# file closed: Rutinas_de_impresion_sprites.asm
1655  9984              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9984              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9984              ;
   3+ 9984              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9984              ;
   5+ 9984              ; *****************************************************************************************************************************************************************************************
   6+ 9984              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9984
   8+ 9984 7C           calcula_tercio ld a,h
   9+ 9985 E6 18        	and $18
  10+ 9987 CB 2F        	sra a
  11+ 9989 CB 2F        	sra a
  12+ 998B CB 2F        	sra a
  13+ 998D C9           	ret
  14+ 998E
# file closed: calcula_tercio.asm
1656  998E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 998E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 998E              ;
   3+ 998E              ;
   4+ 998E              ;	CLS.
   5+ 998E              ;
   6+ 998E              ;	Limpia la pantalla y define sus atributos.
   7+ 998E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 998E              ;
   9+ 998E              ;	COLORES: 0 ..... NEGRO
  10+ 998E              ;    		 1 ..... AZUL
  11+ 998E              ; 			 2 ..... ROJO
  12+ 998E              ;			 3 ..... MAGENTA
  13+ 998E              ; 			 4 ..... VERDE
  14+ 998E              ; 			 5 ..... CIAN
  15+ 998E              ;			 6 ..... AMARILLO
  16+ 998E              ; 			 7 ..... BLANCO
  17+ 998E              ;
  18+ 998E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 998E              ;
  20+ 998E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 998E
  22+ 998E
  23+ 998E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9991 11 01 40     	LD DE,$4001
  25+ 9994 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9997 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9999 ED B0        	LDIR
  28+ 999B 01 FF 02     	LD BC,767
  29+ 999E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 999F ED B0        	LDIR
  31+ 99A1 C9           	ret
  32+ 99A2
# file closed: Cls.asm
1657  99A2              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99A2              ; ******************************************************************************************************************************************************************************************
   2+ 99A2              ;
   3+ 99A2              ;   20/05/23
   4+ 99A2              ;
   5+ 99A2              ;	Recompone_posicion_inicio
   6+ 99A2              ;
   7+ 99A2              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99A2              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99A2              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99A2              ;	_ a una u otra rutina.
  11+ 99A2
  12+ 99A2              Recompone_posicion_inicio
  13+ 99A2
  14+ 99A2 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 99A5 7D           	ld a,l
  16+ 99A6 E6 1F        	and $1f
  17+ 99A8 28 16        	jr z,1F
  18+ 99AA
  19+ 99AA FE 1F        	cp $1f
  20+ 99AC 28 0D        	jr z,3F
  21+ 99AE
  22+ 99AE 21 00 89     	ld hl,Ctrl_2
  23+ 99B1 CB C6        	set 0,(hl)
  24+ 99B3 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 99B6 22 03 89     	ld (Repone_puntero_objeto),hl
  26+ 99B9 18 08        	jr 2F
  27+ 99BB
  28+ 99BB CD 5C 9B     3 call Mov_left
  29+ 99BE 18 03        	jr 2F
  30+ 99C0
  31+ 99C0 CD 3E 9A     1 call Mov_right
  32+ 99C3 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99C6 22 C9 88     	ld (Puntero_objeto),hl
  34+ 99C9 C9           	ret
  35+ 99CA
  36+ 99CA              ; ******************************************************************************************************************************************************************************************
  37+ 99CA              ;
  38+ 99CA              ;   27/05/23
  39+ 99CA              ;
  40+ 99CA              ;	Mov_down
  41+ 99CA              ;
  42+ 99CA              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99CA              ;
  44+ 99CA              ;
  45+ 99CA              Mov_down
  46+ 99CA
  47+ 99CA CD 2C 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99CD              ;																	; _ repone (Puntero_objeto).
  49+ 99CD 21 EF 88     	ld hl,Ctrl_0
  50+ 99D0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99D2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99D2              ; 																	; _ en el caso de que no lo haya.
  53+ 99D2 3A DD 88     	ld a,(Vel_down)
  54+ 99D5 47           	ld b,a
  55+ 99D6 2A C7 88         ld hl,(Posicion_actual)
  56+ 99D9 CD 84 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99DC E6 02        	and 2
  58+ 99DE 28 0F        	jr z,1F
  59+ 99E0
  60+ 99E0              ; Nos encontramos en el último tercio de pantalla.
  61+ 99E0              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99E0
  63+ 99E0 7C           	ld a,h
  64+ 99E1 FE 57        	cp $57
  65+ 99E3 20 0A        	jr nz,1F
  66+ 99E5
  67+ 99E5 7D           	ld a,l
  68+ 99E6 C6 20        	add $20
  69+ 99E8 30 05        	jr nc,1F
  70+ 99EA
  71+ 99EA              ; ------------------------------
  72+ 99EA              ;	call Reaparece_arriba
  73+ 99EA CD E9 9C     	call Reinicio
  74+ 99ED              ; ------------------------------
  75+ 99ED
  76+ 99ED 18 08        	jr 3F
  77+ 99EF CD 71 96     1 call NextScan
  78+ 99F2 22 C7 88     	ld (Posicion_actual),hl
  79+ 99F5 10 E2            djnz 2B
  80+ 99F7 CD 0F 9D     3 call Genera_coordenadas
  81+ 99FA C9           	ret
  82+ 99FB
  83+ 99FB              ; ******************************************************************************************************************************************************************************************
  84+ 99FB              ;
  85+ 99FB              ;   27/05/23
  86+ 99FB              ;
  87+ 99FB              ;	Mov_up
  88+ 99FB              ;
  89+ 99FB              ; 	Mueve el Sprite hacia arriba.
  90+ 99FB              ;
  91+ 99FB              ;
  92+ 99FB              Mov_up
  93+ 99FB
  94+ 99FB CD 2C 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99FE              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99FE 21 EF 88     	ld hl,Ctrl_0
  97+ 9A01 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A03              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A03              ; 																		; _ en el caso de que no lo haya.
 100+ 9A03 3A DC 88     	ld a,(Vel_up)
 101+ 9A06 47           	ld b,a
 102+ 9A07 2A C7 88     	ld hl,(Posicion_actual)
 103+ 9A0A CD 84 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A0D A7           	and a
 105+ 9A0E 20 10        	jr nz,1F
 106+ 9A10
 107+ 9A10              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A10              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A10
 110+ 9A10 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A11 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A13 20 0B            jr nz,1F
 113+ 9A15 7D               ld a,l
 114+ 9A16 D6 20            sub $20
 115+ 9A18 30 06            jr nc,1F
 116+ 9A1A 25               dec h
 117+ 9A1B
 118+ 9A1B              ; -----------------------------
 119+ 9A1B CD CA 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A1E              ;	call Reinicio
 121+ 9A1E              ; -----------------------------
 122+ 9A1E
 123+ 9A1E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A20 CD 80 96     1 call PreviousScan
 125+ 9A23 22 C7 88     	ld (Posicion_actual),hl
 126+ 9A26 10 E2            djnz 3B
 127+ 9A28 CD 0F 9D     2 call Genera_coordenadas
 128+ 9A2B C9           	ret
 129+ 9A2C
 130+ 9A2C              ; -----------------------------
 131+ 9A2C              ;
 132+ 9A2C              ;	27/5/23
 133+ 9A2C              ;
 134+ 9A2C              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A2C              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A2C              ;
 137+ 9A2C              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A2C              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A2C              ;
 140+ 9A2C              ;	Modifica: A y (Puntero_objeto).
 141+ 9A2C
 142+ 9A2C 3A 00 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A2F CB 47        	bit 0,a
 144+ 9A31 C8           	ret z
 145+ 9A32 CB 87        	res 0,a
 146+ 9A34 32 00 89     	ld (Ctrl_2),a
 147+ 9A37 2A 03 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A3A 22 C9 88     	ld (Puntero_objeto),hl
 149+ 9A3D C9           	ret
 150+ 9A3E
 151+ 9A3E              ; ******************************************************************************************************************************************************************************************
 152+ 9A3E              ;
 153+ 9A3E              ;	19/10/22
 154+ 9A3E              ;
 155+ 9A3E              ;	Mov_right.
 156+ 9A3E              ;
 157+ 9A3E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A3E              ;
 159+ 9A3E
 160+ 9A3E 21 EF 88     Mov_right ld hl,Ctrl_0
 161+ 9A41 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A43              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A43              ; 																	; _ en el caso de que no lo haya.
 164+ 9A43 3A EF 88     	ld a,(Ctrl_0)
 165+ 9A46 CB 77        	bit 6,a
 166+ 9A48 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A4A
 168+ 9A4A CD 78 9C     	call Stop_Amadeus_right
 169+ 9A4D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A4E 18 4D        	jr 8F
 171+ 9A50
 172+ 9A50 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A53 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A55 20 46        	jr nz,8F
 175+ 9A57
 176+ 9A57 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A5A A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A5B 28 40        	jr z,8F
 179+ 9A5D
 180+ 9A5D              ; ---------- ---------- ----------
 181+ 9A5D              ;
 182+ 9A5D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A5D
 184+ 9A5D 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A60 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A62 28 11        	jr z,1F
 187+ 9A64 38 06        	jr c,6F
 188+ 9A66 FE 04        	cp 4
 189+ 9A68 28 14        	jr z,7F
 190+ 9A6A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A6C
 192+ 9A6C              ; ---------- ---------- ----------
 193+ 9A6C              ;
 194+ 9A6C              ; Perfiles de velocidad
 195+ 9A6C              ;
 196+ 9A6C
 197+ 9A6C 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A6F FE FE        	cp $fe
 199+ 9A71 20 2A        	jr nz,8F
 200+ 9A73 18 10        	jr 3F
 201+ 9A75 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A78 FE FD        	cp $fd
 203+ 9A7A 20 21        	jr nz,8F
 204+ 9A7C 18 07        	jr 3F
 205+ 9A7E 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A81 FE FB        	cp $fb
 207+ 9A83 20 18        	jr nz,8F
 208+ 9A85
 209+ 9A85              ; ---------- ---------- ----------
 210+ 9A85
 211+ 9A85              3
 212+ 9A85 CD B8 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A88              ;	call Reinicio
 214+ 9A88
 215+ 9A88              ; ---------- ---------- ----------
 216+ 9A88              ;
 217+ 9A88              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A88
 219+ 9A88 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A8A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A8B CD A4 9A     	call DESPLZ_DER
 222+ 9A8E C1           	pop bc
 223+ 9A8F 10 F9        	djnz 5B
 224+ 9A91 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A94 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A95 22 C7 88     	ld (Posicion_actual),hl
 227+ 9A98 CD 0F 9D     	call Genera_coordenadas
 228+ 9A9B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A9D
 230+ 9A9D              ; ---------- ---------- ----------
 231+ 9A9D
 232+ 9A9D 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9AA0 CD A4 9A     	call DESPLZ_DER
 234+ 9AA3 C9           2 ret
 235+ 9AA4
 236+ 9AA4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AA4              ;
 238+ 9AA4              ;	22/9/22
 239+ 9AA4              ;
 240+ 9AA4
 241+ 9AA4 CD B3 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AA7 CD FF 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9AAA CD 28 9B         call Ciclo_completo
 244+ 9AAD 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AB0 CB FE        	set 7,(hl)
 246+ 9AB2 C9           	ret
 247+ 9AB3
 248+ 9AB3              ; ******************************************************************************************************************************************************************************************
 249+ 9AB3              ;	15/02/23
 250+ 9AB3              ;
 251+ 9AB3
 252+ 9AB3 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AB6 47           	ld b,a
 254+ 9AB7 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9ABA 23           1 inc hl
 256+ 9ABB 23           	inc hl
 257+ 9ABC 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9ABE 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AC1 CD 9D 8C     	call Extrae_address
 260+ 9AC4 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9AC7
 262+ 9AC7              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AC7
 264+ 9AC7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AC7              ; Cuántos movimientos hemos hecho ??
 266+ 9AC7              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AC7
 268+ 9AC7 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9ACA EB           	ex de,hl
 270+ 9ACB A7           	and a
 271+ 9ACC ED 52        	sbc hl,de
 272+ 9ACE CB 3D        	srl l
 273+ 9AD0 3E 08        6 ld a,8
 274+ 9AD2 95           	sub l
 275+ 9AD3 30 1E        	jr nc,3F
 276+ 9AD5
 277+ 9AD5              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AD5              ; B="0".
 279+ 9AD5
 280+ 9AD5 04           4 inc b
 281+ 9AD6 3C           	inc a
 282+ 9AD7 20 FC        	jr nz,4B
 283+ 9AD9 78           	ld a,b
 284+ 9ADA 08           	ex af,af
 285+ 9ADB 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9ADE 23           5 inc hl
 287+ 9ADF 23           	inc hl
 288+ 9AE0 10 FC        	djnz 5B
 289+ 9AE2 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AE5 CD 9D 8C     	call Extrae_address
 291+ 9AE8 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9AEB
 293+ 9AEB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AEB              ; _(Posicion_actual).
 295+ 9AEB
 296+ 9AEB 21 C7 88     	ld hl,Posicion_actual
 297+ 9AEE 34           	inc (hl)
 298+ 9AEF 08               ex af,af
 299+ 9AF0 6F           	ld l,a
 300+ 9AF1 18 DD        	jr 6B
 301+ 9AF3
 302+ 9AF3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AF3
 304+ 9AF3 47           3 ld b,a
 305+ 9AF4 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AF7 23           2 inc hl
 307+ 9AF8 23           	inc hl
 308+ 9AF9 10 FC        	djnz 2B
 309+ 9AFB 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AFE C9           8 ret
 311+ 9AFF
 312+ 9AFF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AFF              ;
 314+ 9AFF              ;	24/7/22
 315+ 9AFF              ;
 316+ 9AFF              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AFF              ;
 318+ 9AFF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AFF              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AFF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AFF
 322+ 9AFF 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B02 A7           	and a
 324+ 9B03 20 1F        	jr nz,1F
 325+ 9B05 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B07 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9B0A
 328+ 9B0A 21 C6 88     	ld hl,Columns
 329+ 9B0D 34           	inc (hl)
 330+ 9B0E 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9B11 E6 01        	and 1
 332+ 9B13 28 0F        	jr z,1F
 333+ 9B15 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B18 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B19 22 C7 88     	ld (Posicion_actual),hl
 336+ 9B1C CD 0F 9D     	call Genera_coordenadas
 337+ 9B1F CD 84 9C     	call Inc_CTRL_DESPLZ
 338+ 9B22 18 03        	jr 2F
 339+ 9B24 CD 84 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B27 C9           2 ret
 341+ 9B28
 342+ 9B28              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B28              ;
 344+ 9B28              ;	24/7/22
 345+ 9B28              ;
 346+ 9B28              ;	Ciclo_completo.
 347+ 9B28              ;
 348+ 9B28              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B28              ;
 350+ 9B28              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B28              ; 	Decrementamos (Columns).
 352+ 9B28              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B28              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B28
 355+ 9B28
 356+ 9B28 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B2B FE FF        	cp $ff
 358+ 9B2D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B2F E6 F0        	and $f0
 360+ 9B31 20 28        	jr nz,3F
 361+ 9B33
 362+ 9B33              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B33
 364+ 9B33 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9B36 47           	ld b,a
 366+ 9B37 3E F8        	ld a,$f8
 367+ 9B39 80           	add b
 368+ 9B3A 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9B3D 18 1C        	jr 3F
 370+ 9B3F 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B42 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B43 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B44 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9B47 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B4A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B4C 20 0A        	jr nz,2F
 377+ 9B4E 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B51 23           	inc hl
 379+ 9B52 22 C7 88     	ld (Posicion_actual),hl
 380+ 9B55 CD 0F 9D     	call Genera_coordenadas
 381+ 9B58
 382+ 9B58              ; Inicia el puntero de Sprite.
 383+ 9B58
 384+ 9B58 CD B4 8C     2 call Inicia_puntero_objeto_der
 385+ 9B5B C9           3 ret
 386+ 9B5C
 387+ 9B5C              ; ******************************************************************************************************************************************************************************************
 388+ 9B5C              ;
 389+ 9B5C              ;	15/02/23
 390+ 9B5C              ;
 391+ 9B5C              ;	Mov_left.
 392+ 9B5C              ;
 393+ 9B5C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B5C              ;
 395+ 9B5C              Mov_left
 396+ 9B5C
 397+ 9B5C 21 EF 88     	ld hl,Ctrl_0
 398+ 9B5F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B61              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B61              ; 																	; _ en el caso de que no lo haya.
 401+ 9B61 3A EF 88     	ld a,(Ctrl_0)
 402+ 9B64 CB 77        	bit 6,a
 403+ 9B66 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B68
 405+ 9B68 CD 7E 9C     	call Stop_Amadeus_left
 406+ 9B6B C8           	ret z
 407+ 9B6C 20 4A        	jr nz,8F
 408+ 9B6E
 409+ 9B6E 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9B71 A7           	and a
 411+ 9B72 20 44        	jr nz,8F
 412+ 9B74
 413+ 9B74 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B77 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B78 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B7A
 417+ 9B7A              ; ---------- ---------- ----------
 418+ 9B7A
 419+ 9B7A 3A DA 88     	ld a,(Vel_left)
 420+ 9B7D FE 02        	cp 2
 421+ 9B7F 28 0F        	jr z,1F
 422+ 9B81 38 04        	jr c,6F
 423+ 9B83 FE 04        	cp 4
 424+ 9B85 28 12        	jr z,7F
 425+ 9B87
 426+ 9B87              ; ---------- ---------- ----------
 427+ 9B87
 428+ 9B87 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B8A FE F8        	cp $f8
 430+ 9B8C 20 2A        	jr nz,8F
 431+ 9B8E 18 10        	jr 4F
 432+ 9B90 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B93 FE F9        	cp $f9
 434+ 9B95 20 21        	jr nz,8F
 435+ 9B97 18 07        	jr 4F
 436+ 9B99 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B9C FE FB        	cp $fb
 438+ 9B9E 20 18        	jr nz,8F
 439+ 9BA0
 440+ 9BA0              ; ---------- ---------- ----------
 441+ 9BA0
 442+ 9BA0              4
 443+ 9BA0 CD A6 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BA3              ;	call Reinicio
 445+ 9BA3
 446+ 9BA3              ; ---------- ---------- ----------
 447+ 9BA3
 448+ 9BA3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BA5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BA6
 451+ 9BA6              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BA6              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BA6
 454+ 9BA6 CD BF 9B     	call DESPLZ_IZQ
 455+ 9BA9 C1           	pop bc
 456+ 9BAA 10 F9        	djnz 5B
 457+ 9BAC 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BAF 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BB0 22 C7 88     	ld (Posicion_actual),hl
 460+ 9BB3 CD 0F 9D     	call Genera_coordenadas
 461+ 9BB6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BB8
 463+ 9BB8              ; ---------- ---------- ----------
 464+ 9BB8
 465+ 9BB8              ; Movemos, no hay recolocación.
 466+ 9BB8
 467+ 9BB8 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9BBB CD BF 9B     	call DESPLZ_IZQ
 469+ 9BBE C9           2 ret
 470+ 9BBF
 471+ 9BBF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BBF              ;
 473+ 9BBF              ;	22/9/22
 474+ 9BBF
 475+ 9BBF              DESPLZ_IZQ
 476+ 9BBF
 477+ 9BBF CD CE 9B     	call Desplaza_izquierda
 478+ 9BC2 CD 1A 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BC5 CD 42 9C     	call Ciclo_completo_2
 480+ 9BC8 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BCB CB BE        	res 7,(hl)
 482+ 9BCD C9           	ret
 483+ 9BCE
 484+ 9BCE              Desplaza_izquierda
 485+ 9BCE
 486+ 9BCE 3A DA 88     	ld a,(Vel_left)
 487+ 9BD1 47           	ld b,a
 488+ 9BD2 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BD5 23           1 inc hl
 490+ 9BD6 23           	inc hl
 491+ 9BD7 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BD9 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BDC CD 9D 8C     	call Extrae_address
 494+ 9BDF 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9BE2
 496+ 9BE2              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BE2
 498+ 9BE2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BE2              ; Cuántos movimientos hemos hecho ??
 500+ 9BE2              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BE2
 502+ 9BE2 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BE5 EB           	ex de,hl
 504+ 9BE6 A7           	and a
 505+ 9BE7 ED 52        	sbc hl,de
 506+ 9BE9 CB 3D        	srl l
 507+ 9BEB 3E 08        6 ld a,8
 508+ 9BED 95           	sub l
 509+ 9BEE 30 1E        	jr nc,3F
 510+ 9BF0
 511+ 9BF0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BF0              ; B="0".
 513+ 9BF0
 514+ 9BF0 04           4 inc b
 515+ 9BF1 3C           	inc a
 516+ 9BF2 20 FC        	jr nz,4B
 517+ 9BF4 78           	ld a,b
 518+ 9BF5 08           	ex af,af
 519+ 9BF6 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BF9 23           5 inc hl
 521+ 9BFA 23           	inc hl
 522+ 9BFB 10 FC        	djnz 5B
 523+ 9BFD 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C00 CD 9D 8C     	call Extrae_address
 525+ 9C03 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9C06
 527+ 9C06              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C06              ; _(Posicion_actual).
 529+ 9C06
 530+ 9C06 21 C7 88     	ld hl,Posicion_actual
 531+ 9C09 35           	dec (hl)
 532+ 9C0A 08           	ex af,af
 533+ 9C0B 6F           	ld l,a
 534+ 9C0C 18 DD        	jr 6B
 535+ 9C0E
 536+ 9C0E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C0E
 538+ 9C0E 47           3 ld b,a
 539+ 9C0F 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9C12 23           2 inc hl
 541+ 9C13 23           	inc hl
 542+ 9C14 10 FC        	djnz 2B
 543+ 9C16 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C19 C9           8 ret
 545+ 9C1A
 546+ 9C1A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C1A              ;
 548+ 9C1A              ;	modifica_parametros_1er_DESPLZ
 549+ 9C1A              ;
 550+ 9C1A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C1A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C1A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C1A
 554+ 9C1A 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C1D A7           	and a
 556+ 9C1E 20 1E        	jr nz,1F
 557+ 9C20 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C21 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9C24 21 C6 88     	ld hl,Columns
 560+ 9C27 34           	inc (hl)
 561+ 9C28 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9C2B E6 01        	and 1
 563+ 9C2D 20 0F        	jr nz,1F
 564+ 9C2F 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C32 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C33 22 C7 88     	ld (Posicion_actual),hl
 567+ 9C36 CD 0F 9D     	call Genera_coordenadas
 568+ 9C39 CD 95 9C     	call Dec_CTRL_DESPLZ
 569+ 9C3C 18 03        	jr 2F
 570+ 9C3E CD 95 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C41 C9           2 ret
 572+ 9C42
 573+ 9C42              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C42
 575+ 9C42 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C45 FE F7        	cp $f7
 577+ 9C47 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C49 30 2C        	jr nc,3F
 579+ 9C4B
 580+ 9C4B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C4B
 582+ 9C4B 06 00        	ld b,0
 583+ 9C4D 04           4 inc b
 584+ 9C4E 3C           	inc a
 585+ 9C4F FE F7        	cp $f7
 586+ 9C51 20 FA        	jr nz,4B
 587+ 9C53 3E FF        	ld a,$ff
 588+ 9C55 90           	sub b
 589+ 9C56 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9C59 18 1C        	jr 3F
 591+ 9C5B
 592+ 9C5B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C5B
 594+ 9C5B 21 C6 88     1 ld hl,Columns
 595+ 9C5E 35           	dec (hl)
 596+ 9C5F AF           	xor a
 597+ 9C60 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9C63 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9C66 E6 01        	and 1
 600+ 9C68 28 0A        	jr z,2F
 601+ 9C6A 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C6D 2B           	dec hl
 603+ 9C6E 22 C7 88     	ld (Posicion_actual),hl
 604+ 9C71 CD 0F 9D     	call Genera_coordenadas
 605+ 9C74
 606+ 9C74              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C74
 608+ 9C74 CD C7 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C77 C9           3 ret
 610+ 9C78
 611+ 9C78              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C78              ;
 613+ 9C78              ;	19/10/22
 614+ 9C78              ;
 615+ 9C78              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C78              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C78
 618+ 9C78 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C7B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C7D C9           	ret
 621+ 9C7E
 622+ 9C7E              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C7E              ;
 624+ 9C7E              ;	19/10/22
 625+ 9C7E              ;
 626+ 9C7E              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C7E              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C7E
 629+ 9C7E 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C81 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C83 C9           	ret
 632+ 9C84
 633+ 9C84              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C84              ;
 635+ 9C84              ;	24/7/22
 636+ 9C84              ;
 637+ 9C84              ;	Inc_CTRL_DESPLZ
 638+ 9C84              ;
 639+ 9C84              ;
 640+ 9C84              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C84
 642+ 9C84 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C87 3A DB 88     	ld a,(Vel_right)
 644+ 9C8A A7           	and a
 645+ 9C8B 28 06        	jr z,1F
 646+ 9C8D 47           	ld b,a
 647+ 9C8E 34           3 inc (hl)
 648+ 9C8F 10 FD        	djnz 3B
 649+ 9C91 18 01        	jr 2F
 650+ 9C93 34           1 inc (hl)
 651+ 9C94 C9           2 ret
 652+ 9C95
 653+ 9C95              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C95              ;
 655+ 9C95              ;	5/2/23
 656+ 9C95              ;
 657+ 9C95              ;	Dec_CTRL_DESPLZ
 658+ 9C95              ;
 659+ 9C95              ;
 660+ 9C95              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C95
 662+ 9C95 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C98 3A DA 88     	ld a,(Vel_left)
 664+ 9C9B A7           	and a
 665+ 9C9C 28 06        	jr z,1F
 666+ 9C9E 47           	ld b,a
 667+ 9C9F 35           3 dec (hl)
 668+ 9CA0 10 FD        	djnz 3B
 669+ 9CA2 18 01        	jr 2F
 670+ 9CA4 35           1 dec (hl)
 671+ 9CA5 C9           2 ret
 672+ 9CA6
 673+ 9CA6              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CA6
 675+ 9CA6 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CA9 01 1F 00     	ld bc,31
 677+ 9CAC A7           	and a
 678+ 9CAD ED 4A        	adc hl,bc
 679+ 9CAF 22 C7 88     	ld (Posicion_actual),hl
 680+ 9CB2 21 EF 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CB5 CB C6        	set 0,(hl)
 682+ 9CB7 C9           	ret
 683+ 9CB8
 684+ 9CB8              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CB8
 686+ 9CB8 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CBB 01 1F 00     	ld bc,31
 688+ 9CBE A7           	and a
 689+ 9CBF ED 42        	sbc hl,bc
 690+ 9CC1 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CC4 21 EF 88     	ld hl,Ctrl_0
 692+ 9CC7 CB CE        	set 1,(hl)
 693+ 9CC9 C9           	ret
 694+ 9CCA
 695+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CCA
 697+ 9CCA 24           Reaparece_abajo inc h
 698+ 9CCB 01 E0 17     	ld bc,$17e0
 699+ 9CCE A7           	and a
 700+ 9CCF ED 4A        	adc hl,bc
 701+ 9CD1 22 C7 88     	ld (Posicion_actual),hl
 702+ 9CD4 21 EF 88     	ld hl,Ctrl_0
 703+ 9CD7 CB D6        	set 2,(hl)
 704+ 9CD9 C9           	ret
 705+ 9CDA
 706+ 9CDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CDA
 708+ 9CDA 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CDD A7           	and a
 710+ 9CDE ED 42        	sbc hl,bc
 711+ 9CE0 22 C7 88     	ld (Posicion_actual),hl
 712+ 9CE3 21 EF 88     	ld hl,Ctrl_0
 713+ 9CE6 CB DE        	set 3,(hl)
 714+ 9CE8 C9           	ret
 715+ 9CE9
 716+ 9CE9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CE9              ;
 718+ 9CE9              ;	15/07/23
 719+ 9CE9
 720+ 9CE9              Reinicio
 721+ 9CE9
 722+ 9CE9              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CE9
 724+ 9CE9 AF           	xor a
 725+ 9CEA 21 F4 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CED CD 0B 9D     	call Limpia_contenido_hl
 727+ 9CF0
 728+ 9CF0 21 C7 88     	ld hl,Posicion_actual
 729+ 9CF3 CD 0B 9D     	call Limpia_contenido_hl
 730+ 9CF6
 731+ 9CF6 CD 3D A0     	call Inicializa_Puntero_indice_mov
 732+ 9CF9 CD C7 9F     	call Inicia_Puntero_mov
 733+ 9CFC
 734+ 9CFC 21 F6 88     	ld hl,Incrementa_puntero
 735+ 9CFF 06 05        	ld b,5
 736+ 9D01 77           1 ld (hl),a
 737+ 9D02 23           	inc hl
 738+ 9D03 10 FC        	djnz 1B
 739+ 9D05
 740+ 9D05 21 00 89     	ld hl,Ctrl_2
 741+ 9D08 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D0A
 743+ 9D0A C9           	ret
 744+ 9D0B
 745+ 9D0B 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D0C 23           	inc hl
 747+ 9D0D 77           	ld (hl),a
 748+ 9D0E C9           	ret
 749+ 9D0F
 750+ 9D0F
# file closed: Direcciones.asm
1658  9D0F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D0F              ; ------------------------------------------------------------------------
   2+ 9D0F              ;
   3+ 9D0F              ;	02/04/23
   4+ 9D0F              ;
   5+ 9D0F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D0F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D0F              ;
   8+ 9D0F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D0F              ;
  10+ 9D0F              ;	Modifica: A,BC y DE.
  11+ 9D0F
  12+ 9D0F C5           Genera_coordenadas push bc
  13+ 9D10 E5           	push hl
  14+ 9D11 D5           	push de
  15+ 9D12
  16+ 9D12 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9D15
  18+ 9D15 7D           	ld a,l
  19+ 9D16 E6 1F        	and $1f
  20+ 9D18 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D1B
  22+ 9D1B CD 84 99     	call calcula_tercio
  23+ 9D1E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D1F
  25+ 9D1F 1E 00        	ld e,0
  26+ 9D21 7D           	ld a,l
  27+ 9D22 E6 E0        	and $e0
  28+ 9D24 28 01        	jr z,1F
  29+ 9D26 04           	inc b
  30+ 9D27
  31+ 9D27 04           1 inc b
  32+ 9D28 05           	dec b
  33+ 9D29 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D2B              ;														; _ , salimos.
  35+ 9D2B 1C           3 inc e
  36+ 9D2C D6 20        	sub 32
  37+ 9D2E 20 FB        	jr nz,3B
  38+ 9D30 10 F5        	djnz 1B
  39+ 9D32
  40+ 9D32 7B           2 ld a,e
  41+ 9D33 32 CC 88     	ld (Coordenada_y),a
  42+ 9D36
  43+ 9D36 D1           	pop de
  44+ 9D37 E1           	pop hl
  45+ 9D38 C1           	pop bc
  46+ 9D39
  47+ 9D39 C9           	ret
  48+ 9D3A
  49+ 9D3A              ; ------------------------------------------------------------------------
  50+ 9D3A              ;	28/05/23
  51+ 9D3A              ;
  52+ 9D3A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D3A              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D3A              ;
  55+ 9D3A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D3A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D3A              ;
  58+ 9D3A              ;		DE="$120d"
  59+ 9D3A              ;
  60+ 9D3A              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D3A              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D3A              ;
  63+ 9D3A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D3A
  65+ 9D3A              ;	Modifica: A,BC y DE.
  66+ 9D3A
  67+ 9D3A
  68+ 9D3A              Genera_coordenadas_disparo
  69+ 9D3A
  70+ 9D3A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D3A
  72+ 9D3A 7D           	ld a,l
  73+ 9D3B E6 1F        	and $1f
  74+ 9D3D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D3E CD 84 99     	call calcula_tercio
  76+ 9D41 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D42 1E 00        	ld e,0
  78+ 9D44 7D           	ld a,l
  79+ 9D45 E6 E0        	and $e0
  80+ 9D47 28 01        	jr z,1F
  81+ 9D49 04           	inc b
  82+ 9D4A 1C           1 inc e
  83+ 9D4B D6 20        	sub 32
  84+ 9D4D 20 FB        	jr nz,1B
  85+ 9D4F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D51 C9           	ret
  87+ 9D52
# file closed: Genera_coordenadas.asm
1659  9D52              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D52              ; Relojes y temporizaciones.
   2+ 9D52
   3+ 9D52              ; ------------------------------------------------------
   4+ 9D52              ;
   5+ 9D52              ;	16/7/23
   6+ 9D52              ;
   7+ 9D52              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D52              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D52              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D52              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D52              ;
  12+ 9D52              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D52              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D52
  15+ 9D52              ; Disparo_entidad db 1
  16+ 9D52              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D52              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D52
  19+ 9D52              Habilita_disparos
  20+ 9D52
  21+ 9D52 7E           	ld a,(hl)
  22+ 9D53 A7           	and a
  23+ 9D54 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D55
  25+ 9D55 EB           	ex de,hl
  26+ 9D56
  27+ 9D56 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D57 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D58
  30+ 9D58              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D58
  32+ 9D58 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D59 7E           	ld a,(hl)
  34+ 9D5A 23           	inc hl
  35+ 9D5B 77           	ld (hl),a
  36+ 9D5C
  37+ 9D5C EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D5D 3E 01        	ld a,1
  39+ 9D5F 77           	ld (hl),a
  40+ 9D60 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1660  9D61              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D61
   2+ 9D61
   3+ 9D61              ;   07/07/23
   4+ 9D61              ;
   5+ 9D61              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D61              ;
   7+ 9D61              ;   Codificación:
   8+ 9D61              ;
   9+ 9D61              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D61              ;
  11+ 9D61              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D61              ;
  13+ 9D61              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D61              ;
  15+ 9D61              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D61              ;
  17+ 9D61              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D61              ;                               ..... %01000010 Vel_up 4
  19+ 9D61              ;                                               Vel_down 2
  20+ 9D61              ;                               ..... $42
  21+ 9D61              ;
  22+ 9D61              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D61              ;
  24+ 9D61              ;                               ..... %01000010 Vel_left 4
  25+ 9D61              ;                                               Vel_right 2
  26+ 9D61              ;                               ..... $42
  27+ 9D61              ;
  28+ 9D61              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D61              ;
  30+ 9D61              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D61              ;
  32+ 9D61              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D61              ;
  34+ 9D61              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D61              ;                                     $53
  36+ 9D61              ;
  37+ 9D61              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D61              ;
  39+ 9D61              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D61              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D61              ;
  42+ 9D61              ;                       Arriba ..... $81
  43+ 9D61              ;                       Arriba - izquierda ..... $a1
  44+ 9D61              ;                       Arriba - derecha ..... $91
  45+ 9D61              ;
  46+ 9D61              ;                       Abajo ..... $41
  47+ 9D61              ;                       Abajo - izquierda ..... $61
  48+ 9D61              ;                       Abajo - derecha ..... $51
  49+ 9D61              ;
  50+ 9D61              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D61              ;
  52+ 9D61              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D61              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D61              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D61              ;
  56+ 9D61              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D61              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D61              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D61              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D61              ;
  61+ 9D61              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D61              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D61              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D61              ;
  65+ 9D61              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D61              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D61              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D61              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D61
  70+ 9D61              ; ----- ----- ----- ----- -----
  71+ 9D61
  72+ 9D61 8D 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D63 95 9D            defw F_1
  74+ 9D65 9F 9D            defw F_2
  75+ 9D67 A9 9D            defw Codo_abajo_derecha
  76+ 9D69 DD 9D            defw Derecha_y_subiendo
  77+ 9D6B E7 9D            defw Derecha_y_subiendo_1
  78+ 9D6D F1 9D            defw F_3
  79+ 9D6F FB 9D            defw F_4
  80+ 9D71 05 9E            defw Derecha_y_bajando
  81+ 9D73 0F 9E            defw Derecha_y_bajando_1
  82+ 9D75 19 9E            defw Derecha_y_bajando_2
  83+ 9D77 23 9E            defw Codo_derecha_abajo
  84+ 9D79 53 9E            defw Codo_abajo_izq.
  85+ 9D7B 87 9E            defw Izquierda_y_subiendo
  86+ 9D7D 91 9E            defw Izquierda_y_subiendo_1
  87+ 9D7F 9B 9E            defw F_5
  88+ 9D81 A5 9E            defw F_6
  89+ 9D83 AF 9E            defw Izquierda_y_bajando
  90+ 9D85 B9 9E            defw Izquierda_y_bajando_1
  91+ 9D87 C3 9E            defw Izquierda_y_bajando_2
  92+ 9D89 CD 9E            defw Codo_izquierda_abajo
  93+ 9D8B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D8D
  95+ 9D8D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D91 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D95
  98+ 9D95 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D99 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D9D 08 00
 100+ 9D9F 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DA3 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DA7 0F FE
 102+ 9DA9
 103+ 9DA9 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DAD 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DB1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DB5 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DB9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DBD 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DC1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DCD 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DD1 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DD5 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DD9 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DDD
 117+ 9DDD 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DE1 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DE5 06 00
 119+ 9DE7
 120+ 9DE7 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DEB 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DEF 02 00
 122+ 9DF1
 123+ 9DF1 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DF5 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DF9 04 00
 125+ 9DFB 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DFF 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E03 08 00
 127+ 9E05
 128+ 9E05 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E09 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E0D 02 00
 130+ 9E0F
 131+ 9E0F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E13 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E17 06 00
 133+ 9E19
 134+ 9E19 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E1D 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E21 06 00
 136+ 9E23
 137+ 9E23              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E23
 139+ 9E23 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E27 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E2B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E2F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E33 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E37 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E3B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E3F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E43 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E4B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E4F 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E53
 152+ 9E53 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E57 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E5B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E5F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E63 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E67 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E6B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E6F 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E73 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E77 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E7B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E7F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E83 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E87
 166+ 9E87 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E8B 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E8F 06 00
 168+ 9E91
 169+ 9E91 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E95 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E99 02 00
 171+ 9E9B
 172+ 9E9B 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E9F 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EA3 04 00
 174+ 9EA5 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EA9 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EAD 08 00
 176+ 9EAF
 177+ 9EAF 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EB3 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EB7 02 00
 179+ 9EB9
 180+ 9EB9 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EBD 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EC1 06 00
 182+ 9EC3
 183+ 9EC3 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EC7 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9ECB 06 00
 185+ 9ECD
 186+ 9ECD 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9ED1 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9ED5 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9ED9 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EDD 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EE1 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EE5 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EE9 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EED 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EF1 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EF5 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EF9 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EFD
 199+ 9EFD              ; ----- ----- ----- ----- -----
 200+ 9EFD              ;
 201+ 9EFD              ;   27/06/23
 202+ 9EFD
 203+ 9EFD              Movimiento
 204+ 9EFD
 205+ 9EFD              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EFD
 207+ 9EFD              ;    ld hl,(Posicion_actual)
 208+ 9EFD
 209+ 9EFD FB               ei
 210+ 9EFE
 211+ 9EFE 3A 00 89         ld a,(Ctrl_2)
 212+ 9F01 CB 57            bit 2,a
 213+ 9F03 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F05
 215+ 9F05 2A F2 88         ld hl,(Puntero_mov)
 216+ 9F08 7E               ld a,(hl)
 217+ 9F09
 218+ 9F09              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F09
 220+ 9F09              Inicia_desplazamiento.
 221+ 9F09
 222+ 9F09              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F09
 224+ 9F09 CD FE 9F         call Ajusta_velocidad_desplazamiento
 225+ 9F0C
 226+ 9F0C              ; Iniciamos (Repetimos_mov).
 227+ 9F0C
 228+ 9F0C 7E               ld a,(hl)
 229+ 9F0D E6 0F            and $0f
 230+ 9F0F 32 F8 88         ld (Repetimos_desplazamiento),a
 231+ 9F12 32 F9 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F15
 233+ 9F15              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F15
 235+ 9F15 23               inc hl
 236+ 9F16 7E               ld a,(hl)
 237+ 9F17 32 FB 88         ld (Cola_de_desplazamiento),a
 238+ 9F1A 2B               dec hl
 239+ 9F1B
 240+ 9F1B 21 00 89         ld hl,Ctrl_2
 241+ 9F1E CB D6            set 2,(hl)
 242+ 9F20
 243+ 9F20              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F20              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F20
 246+ 9F20              Desplazamiento_iniciado
 247+ 9F20
 248+ 9F20 CD D2 9F         call Aplica_desplazamiento
 249+ 9F23
 250+ 9F23 3A 00 89         ld a,(Ctrl_2)
 251+ 9F26 CB 67            bit 4,a
 252+ 9F28 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F29
 254+ 9F29 21 F8 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F2C 35               dec (hl)
 256+ 9F2D C0               ret nz
 257+ 9F2E
 258+ 9F2E              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F2E              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F2E              ; Analiza (Cola_de_desplazamiento).
 261+ 9F2E
 262+ 9F2E 3A FB 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F31 A7               and a
 264+ 9F32 CC 27 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F35 28 30            jr z,Reinicia_el_movimiento
 266+ 9F37
 267+ 9F37 FE FF            cp $ff
 268+ 9F39 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F3B
 270+ 9F3B FE FE            cp $fe
 271+ 9F3D CC AB 9F         call z,Fijamos_bucle
 272+ 9F40 28 25            jr z,Reinicia_el_movimiento
 273+ 9F42
 274+ 9F42 FE FD            cp $fd
 275+ 9F44 20 11            jr nz,1F
 276+ 9F46
 277+ 9F46              ; ---
 278+ 9F46              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F46
 280+ 9F46 3A 00 89         ld a,(Ctrl_2)
 281+ 9F49 CB 5F            bit 3,a
 282+ 9F4B 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F4D
 284+ 9F4D              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F4D
 286+ 9F4D 21 00 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F50 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F52
 289+ 9F52 CD BC 9F         call Inicia_Repetimos_movimiento
 290+ 9F55 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F57              ; ---
 292+ 9F57
 293+ 9F57 FE 01        1 cp 1
 294+ 9F59 CA 95 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F5C
 296+ 9F5C 3D               dec a
 297+ 9F5D 32 FB 88         ld (Cola_de_desplazamiento),a
 298+ 9F60
 299+ 9F60 3A F9 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F63 32 F8 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F66              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F66 C9               ret
 303+ 9F67
 304+ 9F67              Reinicia_el_movimiento
 305+ 9F67
 306+ 9F67 F3               di
 307+ 9F68
 308+ 9F68 3A 00 89         ld a,(Ctrl_2)
 309+ 9F6B CB 5F            bit 3,a
 310+ 9F6D 28 1B            jr z,2F
 311+ 9F6F
 312+ 9F6F              ; (Cola_de_desplazamiento)="254".
 313+ 9F6F
 314+ 9F6F 21 FA 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F72 35               dec (hl)
 316+ 9F73 20 15            jr nz,2F
 317+ 9F75
 318+ 9F75              ; Fin de las repeticiones del último movimiento.
 319+ 9F75
 320+ 9F75 21 00 89         ld hl,Ctrl_2
 321+ 9F78 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F7A
 323+ 9F7A 2A F2 88         ld hl,(Puntero_mov)
 324+ 9F7D 23               inc hl
 325+ 9F7E 23               inc hl
 326+ 9F7F 23               inc hl
 327+ 9F80 22 F2 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F83              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F83 7E               ld a,(hl)
 330+ 9F84 32 FB 88         ld (Cola_de_desplazamiento),a
 331+ 9F87
 332+ 9F87 C3 2E 9F         jp Cola
 333+ 9F8A
 334+ 9F8A CD C7 9F     2 call Inicia_Puntero_mov
 335+ 9F8D
 336+ 9F8D 21 00 89         ld hl,Ctrl_2
 337+ 9F90 CB 96            res 2,(hl)
 338+ 9F92
 339+ 9F92 C3 FD 9E         jp Movimiento
 340+ 9F95
 341+ 9F95              Siguiente_desplazamiento
 342+ 9F95
 343+ 9F95              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F95              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F95
 346+ 9F95 21 00 89         ld hl,Ctrl_2
 347+ 9F98 CB 96            res 2,(hl)
 348+ 9F9A
 349+ 9F9A 2A F2 88         ld hl,(Puntero_mov)
 350+ 9F9D 23               inc hl
 351+ 9F9E 23               inc hl
 352+ 9F9F 22 F2 88         ld (Puntero_mov),hl
 353+ 9FA2
 354+ 9FA2 7E               ld a,(hl)
 355+ 9FA3 A7               and a
 356+ 9FA4 CC 27 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FA7 CA 67 9F         jp z,Reinicia_el_movimiento
 358+ 9FAA
 359+ 9FAA C9               ret
 360+ 9FAB              ; Subrutinas -----------------------------------------
 361+ 9FAB              ; ---------- --------- --------- ---------- ----------
 362+ 9FAB              ;
 363+ 9FAB              ;   24/07/23
 364+ 9FAB              ;
 365+ 9FAB              ;   Fijamos_bucle
 366+ 9FAB              ;
 367+ 9FAB              ;
 368+ 9FAB
 369+ 9FAB              Fijamos_bucle
 370+ 9FAB
 371+ 9FAB 3A F6 88         ld a,(Incrementa_puntero)
 372+ 9FAE 3C               inc a
 373+ 9FAF 32 F7 88         ld (Incrementa_puntero_backup),a
 374+ 9FB2
 375+ 9FB2 CD 27 A0         call Incrementa_Puntero_indice_mov
 376+ 9FB5 2A F0 88         ld hl,(Puntero_indice_mov)
 377+ 9FB8 22 F4 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FBB C9               ret
 379+ 9FBC
 380+ 9FBC              ; ---------- --------- --------- ---------- ----------
 381+ 9FBC              ;
 382+ 9FBC              ;   07/7/23
 383+ 9FBC              ;
 384+ 9FBC              ;   Inicia_Repetimos_movimiento
 385+ 9FBC              ;
 386+ 9FBC              ;
 387+ 9FBC
 388+ 9FBC              Inicia_Repetimos_movimiento
 389+ 9FBC
 390+ 9FBC              ; Iniciamos (Repetimos_movimiento).
 391+ 9FBC
 392+ 9FBC DD 2A F2 88      ld ix,(Puntero_mov)
 393+ 9FC0 DD 7E 02         ld a,(ix+2)
 394+ 9FC3 32 FA 88         ld (Repetimos_movimiento),a
 395+ 9FC6
 396+ 9FC6 C9               ret
 397+ 9FC7
 398+ 9FC7              ; ---------- --------- --------- ---------- ----------
 399+ 9FC7              ;
 400+ 9FC7              ;   26/6/23
 401+ 9FC7              ;
 402+ 9FC7              ;   Inicia_Puntero_mov
 403+ 9FC7              ;
 404+ 9FC7              ;
 405+ 9FC7
 406+ 9FC7 2A F0 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FCA 5E               ld e,(hl)
 408+ 9FCB 23               inc hl
 409+ 9FCC 56               ld d,(hl)
 410+ 9FCD EB               ex de,hl
 411+ 9FCE 22 F2 88         ld (Puntero_mov),hl
 412+ 9FD1 C9               ret
 413+ 9FD2
 414+ 9FD2              ; ---------- --------- --------- ---------- ----------
 415+ 9FD2              ;
 416+ 9FD2              ;   27/06/23
 417+ 9FD2              ;
 418+ 9FD2              ;   Aplica_movimiento.
 419+ 9FD2
 420+ 9FD2              Aplica_desplazamiento
 421+ 9FD2
 422+ 9FD2              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FD2
 424+ 9FD2 2A F2 88         ld hl, (Puntero_mov)
 425+ 9FD5
 426+ 9FD5 7E               ld a,(hl)
 427+ 9FD6 E6 F0            and $f0
 428+ 9FD8 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FD9
 430+ 9FD9 CB 7E            bit 7,(hl)
 431+ 9FDB 28 03            jr z,1F
 432+ 9FDD CD FB 99         call Mov_up
 433+ 9FE0 2A F2 88     1 ld hl, (Puntero_mov)
 434+ 9FE3 CB 76            bit 6,(hl)
 435+ 9FE5 28 03            jr z,2F
 436+ 9FE7 CD CA 99         call Mov_down
 437+ 9FEA 2A F2 88     2 ld hl, (Puntero_mov)
 438+ 9FED CB 6E            bit 5,(hl)
 439+ 9FEF 28 03            jr z,3F
 440+ 9FF1 CD 5C 9B         call Mov_left
 441+ 9FF4 2A F2 88     3 ld hl, (Puntero_mov)
 442+ 9FF7 CB 66            bit 4,(hl)
 443+ 9FF9 C8               ret z
 444+ 9FFA CD 3E 9A         call Mov_right
 445+ 9FFD C9               ret
 446+ 9FFE
 447+ 9FFE              ; ---------- --------- --------- ---------- ----------
 448+ 9FFE              ;
 449+ 9FFE              ;   26/06/23
 450+ 9FFE              ;
 451+ 9FFE              ;   Ajusta_velocidad_desplazamiento.
 452+ 9FFE
 453+ 9FFE              Ajusta_velocidad_desplazamiento
 454+ 9FFE
 455+ 9FFE              ; 1er byte de la cadena de movimiento.
 456+ 9FFE              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ 9FFE
 458+ 9FFE CD 1C A0         call Extrae_nibble_alto
 459+ A001
 460+ A001 32 DC 88         ld (Vel_up),a
 461+ A004 79               ld a,c
 462+ A005 E6 0F            and $0f
 463+ A007 32 DD 88         ld (Vel_down),a
 464+ A00A
 465+ A00A              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A00A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A00A
 468+ A00A 23               inc hl
 469+ A00B CD 1C A0         call Extrae_nibble_alto
 470+ A00E
 471+ A00E 32 DA 88         ld (Vel_left),a
 472+ A011 79               ld a,c
 473+ A012 E6 0F            and $0f
 474+ A014 32 DB 88         ld (Vel_right),a
 475+ A017
 476+ A017              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A017
 478+ A017 23               inc hl
 479+ A018 22 F2 88         ld (Puntero_mov),hl
 480+ A01B C9               ret
 481+ A01C
 482+ A01C 06 04        Extrae_nibble_alto ld b,4
 483+ A01E 7E               ld a,(hl)
 484+ A01F 4F               ld c,a
 485+ A020 E6 F0            and $f0
 486+ A022 CB 3F        1 srl a
 487+ A024 10 FC            djnz 1B
 488+ A026 C9               ret
 489+ A027
 490+ A027              ; ---------- --------- --------- ---------- ----------
 491+ A027              ;
 492+ A027              ;   5/7/23
 493+ A027              ;
 494+ A027              ;   Incrementa_Puntero_indice_mov
 495+ A027
 496+ A027              Incrementa_Puntero_indice_mov
 497+ A027
 498+ A027 21 F6 88         ld hl,Incrementa_puntero
 499+ A02A 34               inc (hl)
 500+ A02B
 501+ A02B 2A F0 88         ld hl,(Puntero_indice_mov)
 502+ A02E 01 02 00         ld bc,2
 503+ A031 A7               and a
 504+ A032 09               add hl,bc
 505+ A033 22 F0 88         ld (Puntero_indice_mov),hl
 506+ A036
 507+ A036 7E               ld a,(hl)
 508+ A037 A7               and a
 509+ A038
 510+ A038              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A038
 512+ A038              ;    jr z,$
 513+ A038
 514+ A038              ;! Reinicia el Patrón de movimiento.
 515+ A038
 516+ A038 CC 3D A0         call z,Inicializa_Puntero_indice_mov
 517+ A03B
 518+ A03B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A03C
 520+ A03C C9               ret
 521+ A03D
 522+ A03D
 523+ A03D              ; ---------- --------- --------- ---------- ----------
 524+ A03D              ;
 525+ A03D              ;   24/07/23
 526+ A03D              ;
 527+ A03D              ;   Inicializa_Puntero_indice_mov
 528+ A03D
 529+ A03D              Inicializa_Puntero_indice_mov
 530+ A03D
 531+ A03D              ; Existe etiqueta de bucle principal???
 532+ A03D
 533+ A03D 2A F4 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A040 24               inc h
 535+ A041 25               dec h
 536+ A042 28 05            jr z,2F
 537+ A044
 538+ A044 22 F0 88         ld (Puntero_indice_mov),hl
 539+ A047 18 14            jr 3F
 540+ A049
 541+ A049              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A049
 543+ A049 3A F6 88     2 ld a,(Incrementa_puntero)
 544+ A04C 47               ld b,a
 545+ A04D
 546+ A04D 2A F0 88         ld hl,(Puntero_indice_mov)
 547+ A050 2B           1 dec hl
 548+ A051 2B               dec hl
 549+ A052 10 FC            djnz 1B
 550+ A054 22 F0 88         ld (Puntero_indice_mov),hl
 551+ A057
 552+ A057 AF               xor a
 553+ A058 32 F6 88         ld (Incrementa_puntero),a
 554+ A05B 18 06            jr 4F
 555+ A05D
 556+ A05D 3A F7 88     3 ld a,(Incrementa_puntero_backup)
 557+ A060 32 F6 88         ld (Incrementa_puntero),a
 558+ A063 C9           4 ret
 559+ A064
 560+ A064
 561+ A064
# file closed: Patrones_de_mov.asm
1661  A064              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A064              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A064              ;
   3+ A064              ;	4/9/23
   4+ A064              ;
   5+ A064              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A064
   7+ A064              ;	ADC HL,SP	LD (addr),SP
   8+ A064              ;	ADD HL,SP	LD SP,(addr)
   9+ A064              ;	ADD IX,SP	LD SP,nn
  10+ A064              ; 	ADD IY,SP	LD SP,HL
  11+ A064              ;				LD SP,IX
  12+ A064              ;	DEC SP		LD SP,IY
  13+ A064
  14+ A064              ;	EX (SP),HL
  15+ A064              ;	EX (SP),IX
  16+ A064              ;	EX (SP),IY
  17+ A064
  18+ A064              ;	INC SP
  19+ A064
  20+ A064                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 13 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 02 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1B 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A EF 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 21 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 19 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 02 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1B 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A EF 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 21 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 13 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 19 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 13 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 37 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 113+ 7FFE              ;
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ac
 118+ 72AC
 119+ 72AC              Gestiona_albumes_de_fotos
 120+ 72AC
 121+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72AC              ;   Vaciamos Album_de_fotos.
 123+ 72AC
 124+ 72AC              ;   Album_de_fotos. Contiene datos ???
 125+ 72AC
 126+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72AF 7E               ld a,(hl)
 128+ 72B0 A7               and a
 129+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72B3
 131+ 72B3 2A 1D 89         ld hl,(End_Snapshot)
 132+ 72B6 01 00 70         ld bc,Album_de_fotos
 133+ 72B9 11 01 70         ld de,Album_de_fotos+1
 134+ 72BC AF               xor a
 135+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72BE
 137+ 72BE CD 4E 73         call Limpia_album
 138+ 72C1
 139+ 72C1 21 00 00         ld hl,0
 140+ 72C4 22 1D 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 72C7
 142+ 72C7              ; ----- ----- ----- -----
 143+ 72C7
 144+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 145+ 72C7
 146+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 72CA 7E               ld a,(hl)
 148+ 72CB A7               and a
 149+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 72CE              ;                               ; _ información del album2 al album1.
 151+ 72CE
 152+ 72CE              ; ----- ----- ----- -----
 153+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 72CE
 155+ 72CE 2A 23 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 72D7
 159+ 72D7 CD 4E 73         call Limpia_album
 160+ 72DA
 161+ 72DA              ;   Calculamos (End_Snapshot)
 162+ 72DA
 163+ 72DA A7               and a
 164+ 72DB ED 4A            adc hl,bc
 165+ 72DD 22 1D 89         ld (End_Snapshot),hl
 166+ 72E0
 167+ 72E0              ;   Limpiamos Album_de_fotos_1.
 168+ 72E0
 169+ 72E0 2A 23 89         ld hl,(End_Snapshot_1)
 170+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 171+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 172+ 72E9 AF               xor a
 173+ 72EA 02               ld (bc),a
 174+ 72EB
 175+ 72EB CD 4E 73         call Limpia_album
 176+ 72EE
 177+ 72EE 21 00 00         ld hl,0
 178+ 72F1 22 23 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 72F4
 180+ 72F4              ; ----- ----- ----- -----
 181+ 72F4
 182+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 183+ 72F4
 184+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 72F7 7E               ld a,(hl)
 186+ 72F8 A7               and a
 187+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 72FB              ;                               ; _ información del album3 al album2.
 189+ 72FB              ; ----- ----- ----- -----
 190+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 72FB
 192+ 72FB 2A 27 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7304
 196+ 7304 CD 4E 73         call Limpia_album
 197+ 7307
 198+ 7307              ;   Calculamos (End_Snapshot_1):
 199+ 7307
 200+ 7307 A7               and a
 201+ 7308 ED 4A            adc hl,bc
 202+ 730A 22 23 89         ld (End_Snapshot_1),hl
 203+ 730D
 204+ 730D              ;   Limpiamos Album_de_fotos_2.
 205+ 730D
 206+ 730D 2A 27 89         ld hl,(End_Snapshot_2)
 207+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7316 AF               xor a
 210+ 7317 02               ld (bc),a
 211+ 7318
 212+ 7318 CD 4E 73         call Limpia_album
 213+ 731B
 214+ 731B 21 00 00         ld hl,0
 215+ 731E 22 27 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7321
 217+ 7321              ; ----- ----- ----- -----
 218+ 7321
 219+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7321
 221+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7324 7E               ld a,(hl)
 223+ 7325 A7               and a
 224+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7327
 226+ 7327              ; ----- ----- ----- -----
 227+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7327
 229+ 7327 2A 2B 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7330
 233+ 7330 CD 4E 73         call Limpia_album
 234+ 7333
 235+ 7333              ;   Calculamos (End_Snapshot_2):
 236+ 7333
 237+ 7333 A7               and a
 238+ 7334 ED 4A            adc hl,bc
 239+ 7336 22 27 89         ld (End_Snapshot_2),hl
 240+ 7339
 241+ 7339              ;   Limpiamos Album_de_fotos_3.
 242+ 7339
 243+ 7339 2A 2B 89         ld hl,(End_Snapshot_3)
 244+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7342 AF               xor a
 247+ 7343 02               ld (bc),a
 248+ 7344
 249+ 7344 CD 4E 73         call Limpia_album
 250+ 7347
 251+ 7347 21 00 00         ld hl,0
 252+ 734A 22 2B 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 734D C9               ret
 254+ 734E
 255+ 734E              ; ----------------------------------------------------
 256+ 734E              ;
 257+ 734E              ;   10/8/23
 258+ 734E              ;
 259+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 734E              ;
 261+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 734E              ;           BC ..... Dirección de inicio del álbum.
 263+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 734E
 265+ 734E              ;    ld hl,(End_Snapshot)
 266+ 734E              ;    ld bc,Album_de_fotos
 267+ 734E              ;    ld de,Album_de_fotos+1
 268+ 734E
 269+ 734E              ;   MODIFICA: A,HL,BC y DE.
 270+ 734E
 271+ 734E              Limpia_album
 272+ 734E D5               push de                     ; Guardo DESTINO.
 273+ 734F C5               push bc                     ; Guardo ORIGEN.
 274+ 7350 ED 42            sbc hl,bc
 275+ 7352 4D               ld c,l
 276+ 7353 44               ld b,h
 277+ 7354 E1               pop hl
 278+ 7355 C5               push bc
 279+ 7356 ED B0            ldir
 280+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 735A C9               ret                         ; _ a otro).
 283+ 735B              ;
 284+ 735B
 285+ 735B              ; -----------------------------------------------
 286+ 735B
 287+ 735B
 288+ 735B
 289+ 735B
 290+ 735B
# file closed: Guarda_foto_registros.asm
1662  735B
1663  735B              	SAVESNA "Pruebas.sna", START
1664  735B
1665  735B
1666  735B
1667  735B
# file closed: Banco_de_pruebas.asm
