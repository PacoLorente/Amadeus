# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1C 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15
  44  AA15              ;! Debuggggggggggggggggggg
  45  AA15
  46  AA15              ;	ld a,(Contador_de_frames_2)
  47  AA15              ;	cp 1
  48  AA15              ;	jr nz,1F
  49  AA15              ;	ex af,af
  50  AA15              ;	ld a,(Contador_de_frames)
  51  AA15              ;	cp $c4 ;	$c1 es el último FRAME que se ve bien.
  52  AA15              ;	jr z,$
  53  AA15              ;	jr nc,$
  54  AA15
  55  AA15 CD 14 8E     1 call Pinta_entidades
  56  AA18              ;	call Pinta_Amadeus
  57  AA18 CD E8 8D     	call Gestiona_entidades
  58  AA1B              ;	call Gestiona_Amadeus
  59  AA1B
  60  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA1B
  62  AA1B CD 21 8E     	call Actualiza_relojes
  63  AA1E
  64  AA1E              ;	call Recupera_parametros_DRAW
  65  AA1E
  66  AA1E              ;! Debuggg
  67  AA1E
  68  AA1E FD E1        	pop iy
  69  AA20 DD E1        	pop ix
  70  AA22 F1           	pop af
  71  AA23 C1           	pop bc
  72  AA24 D1           	pop de
  73  AA25 E1           	pop hl
  74  AA26 D9           	exx
  75  AA27 C1           	pop bc
  76  AA28 D1           	pop de
  77  AA29 E1           	pop hl
  78  AA2A 08           	ex af,af'
  79  AA2B F1           	pop af
  80  AA2C 08           	ex af,af'
  81  AA2D D9           	exx
  82  AA2E
  83  AA2E ED 7B 1C 89  	ld sp,(Stack_3)
  84  AA32
  85  AA32 FB           	ei
  86  AA33 C9           	ret
  87  AA34
  88  AA34              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  89  AA34
  90  AA34              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA34              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA34              ;
   3+ AA34              ;	17/02/23
   4+ AA34              ;
   5+ AA34              ;	Sprites e índices.
   6+ AA34
   7+ AA34              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 22 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 28 89        	defw End_Snapshot_1
 267+ 8500 2C 89        	defw End_Snapshot_2
 268+ 8502 30 89        	defw End_Snapshot_3
 269+ 8504 24 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 2A 89        	defw End_Snapshot_disparos_1
 271+ 8508 2E 89        	defw End_Snapshot_disparos_2
 272+ 850A 32 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  91  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C              ;
  95+ 858C              ;	Índice de cajas de entidades.
  96+ 858C
  97+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 858C
  99+ 858C DD 85        	defw Caja_1
 100+ 858E 1C 86        	defw Caja_2
 101+ 8590 5B 86        	defw Caja_3
 102+ 8592 9A 86        	defw Caja_4
 103+ 8594 D9 86        	defw Caja_5
 104+ 8596 18 87        	defw Caja_6
 105+ 8598 57 87        	defw Caja_7
 106+ 859A
 107+ 859A 00 00        	defw 0
 108+ 859C 00 00        	defw 0
 109+ 859E
 110+ 859E              ; ---------- ---------- ---------- ---------- ----------
 111+ 859E
 112+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 114+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 85A7
 117+ 85A7 05           	db %00000101									; (Attr).
 118+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 85AC
 121+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 85B0
 124+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 85B2 04           	db 4 											; (Cuad_objeto).
 126+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 85B7
 128+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 85B8
 130+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 85BE
 132+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 133+ 85C0 00 00        	defw 0											;	" " " " " " "
 134+ 85C2 00 00        	defw 0											;	" " " " " " "
 135+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85C8
 137+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85CA
 139+ 85CA 00           	db 0											; (Autoriza_movimiento).
 140+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85CF 00 00
 141+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85D4
 143+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85D7
 146+ 85D7 00           	db 0 											; (Columnas).
 147+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85DD
 150+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85DD
 152+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85DF 00 00        	defw 0											; (Posicion_actual).
 154+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85E6
 157+ 85E6 00           	db %00000000 									; (Attr).
 158+ 85E7
 159+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85EF
 164+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85F1 00           	db 0											; (Cuad_objeto).
 166+ 85F2
 167+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85F6
 169+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85F7
 171+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85FD
 173+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00        	defw 0											;	" " " " " " "
 176+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8607
 178+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 8609
 180+ 8609 00           	db 0											; (Autoriza_movimiento).
 181+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 860E 00 00
 182+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 8613
 184+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 186+ 8616
 187+ 8616 00           	db 0 											; (Columnas).
 188+ 8617 00 00        	defw 0											; (Limite_horizontal).
 189+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 861C
 191+ 861C              ; ---------- ---------- ---------- ---------- ----------
 192+ 861C
 193+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 861E 00 00        	defw 0											; (Posicion_actual).
 195+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8625
 198+ 8625 00           	db %00000000 									; (Attr).
 199+ 8626
 200+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 862E
 205+ 862E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8630 00           	db 0											; (Cuad_objeto).
 207+ 8631
 208+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8635
 210+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8636
 212+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 863C
 214+ 863C 00 00        	db 0,0											; Variables_de_pintado
 215+ 863E 00 00        	defw 0											;	" " " " " " "
 216+ 8640 00 00        	defw 0											;	" " " " " " "
 217+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8646
 219+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8648
 221+ 8648 00           	db 0											; (Autoriza_movimiento).
 222+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 864D 00 00
 223+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8652
 225+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8655
 228+ 8655 00           	db 0 											; (Columnas).
 229+ 8656 00 00        	defw 0											; (Limite_horizontal).
 230+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 865B
 232+ 865B              ; ---------- ---------- ---------- ---------- ----------
 233+ 865B
 234+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 865D 00 00        	defw 0											; (Posicion_actual).
 236+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8664
 239+ 8664 00           	db %00000000 									; (Attr).
 240+ 8665
 241+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 866D
 246+ 866D 00 00        	defw 0											; (Posicion_inicio).
 247+ 866F 00           	db 0											; (Cuad_objeto).
 248+ 8670
 249+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8674
 251+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8675
 253+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 867B
 255+ 867B 00 00        	db 0,0											; Variables_de_pintado
 256+ 867D 00 00        	defw 0											;	" " " " " " "
 257+ 867F 00 00        	defw 0											;	" " " " " " "
 258+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8685
 260+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8687
 262+ 8687 00           	db 0											; (Autoriza_movimiento).
 263+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 868C 00 00
 264+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8691
 266+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8694
 269+ 8694 00           	db 0 											; (Columnas).
 270+ 8695 00 00        	defw 0											; (Limite_horizontal).
 271+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 869A
 273+ 869A              ; ---------- ---------- ---------- ---------- ----------
 274+ 869A
 275+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 869C 00 00        	defw 0											; (Posicion_actual).
 277+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 86A3
 280+ 86A3 00           	db %00000000 									; (Attr).
 281+ 86A4
 282+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 86AC
 287+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 288+ 86AE 00           	db 0											; (Cuad_objeto).
 289+ 86AF
 290+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 86B3
 292+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 86B4
 294+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 86BA
 296+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 297+ 86BC 00 00        	defw 0											;	" " " " " " "
 298+ 86BE 00 00        	defw 0											;	" " " " " " "
 299+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86C4
 301+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86C6
 303+ 86C6 00           	db 0											; (Autoriza_movimiento).
 304+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86CB 00 00
 305+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86D0
 307+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86D3
 310+ 86D3 00           	db 0 											; (Columnas).
 311+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86D9
 314+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86D9
 316+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86DB 00 00        	defw 0											; (Posicion_actual).
 318+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86E2
 321+ 86E2 00           	db %00000000 									; (Attr).
 322+ 86E3
 323+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86EB
 328+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86ED 00           	db 0											; (Cuad_objeto).
 330+ 86EE
 331+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86F2
 333+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86F3
 335+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86F9
 337+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86FB 00 00        	defw 0											;	" " " " " " "
 339+ 86FD 00 00        	defw 0											;	" " " " " " "
 340+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 8703
 342+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 8705
 344+ 8705 00           	db 0											; (Autoriza_movimiento).
 345+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 870A 00 00
 346+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 870F
 348+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 350+ 8712
 351+ 8712 00           	db 0 											; (Columnas).
 352+ 8713 00 00        	defw 0											; (Limite_horizontal).
 353+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 8718
 355+ 8718              ; ---------- ---------- ---------- ---------- ----------
 356+ 8718
 357+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 871A 00 00        	defw 0											; (Posicion_actual).
 359+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 360+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8721
 362+ 8721 00           	db %00000000 									; (Attr).
 363+ 8722
 364+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 872A
 369+ 872A 00 00        	defw 0											; (Posicion_inicio).
 370+ 872C 00           	db 0											; (Cuad_objeto).
 371+ 872D
 372+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8731
 374+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8732
 376+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8738
 378+ 8738 00 00        	db 0,0											; Variables_de_pintado
 379+ 873A 00 00        	defw 0											;	" " " " " " "
 380+ 873C 00 00        	defw 0											;	" " " " " " "
 381+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8742
 383+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8744
 385+ 8744 00           	db 0											; (Autoriza_movimiento).
 386+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8749 00 00
 387+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 874E
 389+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8751
 392+ 8751 00           	db 0 											; (Columnas).
 393+ 8752 00 00        	defw 0											; (Limite_horizontal).
 394+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8757
 396+ 8757              ; ---------- ---------- ---------- ---------- ----------
 397+ 8757
 398+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8759 00 00        	defw 0											; (Posicion_actual).
 400+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8760
 403+ 8760 00           	db %00000000 									; (Attr).
 404+ 8761
 405+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8769
 410+ 8769 00 00        	defw 0											; (Posicion_inicio).
 411+ 876B 00           	db 0											; (Cuad_objeto).
 412+ 876C
 413+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8770
 415+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8771
 417+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8777
 419+ 8777 00 00        	db 0,0											; Variables_de_pintado
 420+ 8779 00 00        	defw 0											;	" " " " " " "
 421+ 877B 00 00        	defw 0											;	" " " " " " "
 422+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8781
 424+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8783
 426+ 8783 00           	db 0											; (Autoriza_movimiento).
 427+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8788 00 00
 428+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 878D
 430+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8790
 433+ 8790 00           	db 0 											; (Columnas).
 434+ 8791 00 00        	defw 0											; (Limite_horizontal).
 435+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8796
 437+ 8796              ; -------------------------------------------------------------------------------------
 438+ 8796              ;
 439+ 8796              ;	20/05/23
 440+ 8796              ;
 441+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8796              ;
 443+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8796
 448+ 8796              Indice_de_entidades
 449+ 8796
 450+ 8796 9A 87        	defw Entidad_1
 451+ 8798 AA 87        	defw Entidad_2
 452+ 879A
 453+ 879A              ;	BADSAT, (Satélite malvado).
 454+ 879A
 455+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 879C 04           	db %00000100									; (Attr).
 457+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 87A3 01           	db 1											; (Cuad_objeto).
 461+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 87A8 13 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 87AA
 464+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 87AC 02           	db %00000010									; (Attr).
 466+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 87B3 01           	db 1											; (Cuad_objeto).
 470+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 87B8 13 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 87BA
# file closed: Cajas_y_disparos.asm
  92  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC D0 87        	defw Nivel_2
   7+ 87BE DD 87        	defw Nivel_3
   8+ 87C0 ED 87        	defw Nivel_4
   9+ 87C2 FF 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 07           Nivel_1 db 7	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1
  19+ 87CD 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 87D5 01 02
  22+ 87D7 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87DB 01 02
  23+ 87DD 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 03 01 01 01  	db 3,1,1,1,1
  26+ 87EC 01
  27+ 87ED 11           Nivel_4 db 17									; Nº de entidades.
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 04 01 01 01  	db 4,1,1,1,1
  30+ 87FC 01
  31+ 87FD 02 03        	db 2,3
  32+ 87FF 14           Nivel_5 db 20									; Nº de entidades.
  33+ 8800 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  35+ 880E 01
  36+ 880F 05 01 01 01  	db 5,1,1,1,1
  36+ 8813 01
  37+ 8814
  38+ 8814              ;---------------------------------------------------------------------------------------------------------------
  39+ 8814              ;
  40+ 8814              ;   3/9/23
  41+ 8814              ;
  42+ 8814              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8814              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8814              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8814              ;	_en la caja DRAW correspondiente.
  46+ 8814              ;
  47+ 8814              ;	MODIFICA: HL,DE y A.
  48+ 8814              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8814
  50+ 8814              Inicializa_Punteros_de_nivel
  51+ 8814
  52+ 8814 21 BA 87     	ld hl,Indice_de_niveles
  53+ 8817 22 61 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 881A CD 8B 8C     	call Extrae_address
  55+ 881D 7E           	ld a,(hl)
  56+ 881E 32 10 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  57+ 8821 23           	inc hl
  58+ 8822 22 63 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  59+ 8825 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  60+ 8826
  61+ 8826              ;---------------------------------------------------------------------------------------------------------------
  62+ 8826              ;
  63+ 8826              ;   13/5/23
  64+ 8826              ;
  65+ 8826              ;	Destruye A,BC,HL,DE
  66+ 8826
  67+ 8826              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8826              ;	_del juego.
  69+ 8826
  70+ 8826              Prepara_cajas
  71+ 8826
  72+ 8826              ; Preparamos los punteros de las cajas.
  73+ 8826
  74+ 8826 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8829 CD 8B 8C     	call Extrae_address
  76+ 882C CD 69 88     	call Avanza_caja
  77+ 882F
  78+ 882F CD AD 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8832
  80+ 8832 2A 63 89     	ld hl,(Datos_de_nivel)
  81+ 8835
  82+ 8835              ; HL está en los datos del nivel correspondiente.
  83+ 8835              ; B actuará como contador de cajas.
  84+ 8835
  85+ 8835 C5           1 push bc
  86+ 8836
  87+ 8836 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8837 CD 5A 88     	call PreparaBC
  89+ 883A
  90+ 883A 21 96 87     	ld hl,Indice_de_entidades
  91+ 883D CD 62 88     	call SBC_HL_con_BC_y_Extrae
  92+ 8840 22 16 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8843
  94+ 8843 CD 73 88     	call Datos_de_entidad_a_caja
  95+ 8846
  96+ 8846 2A 0E 89     	ld hl,(Indice_restore_caja)
  97+ 8849 CD 8B 8C     	call Extrae_address
  98+ 884C CD 69 88     	call Avanza_caja
  99+ 884F
 100+ 884F 2A 63 89     	ld hl,(Datos_de_nivel)
 101+ 8852 23           	inc hl
 102+ 8853 22 63 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8856
 104+ 8856 C1           	pop bc
 105+ 8857 10 DC        	djnz 1B
 106+ 8859 C9           	ret
 107+ 885A
 108+ 885A CB 27        PreparaBC sla a
 109+ 885C D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 885E 4F           	ld c,a
 111+ 885F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8861 C9           	ret
 113+ 8862
 114+ 8862 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8863 ED 4A        	adc hl,bc
 116+ 8865 CD 8B 8C     	call Extrae_address
 117+ 8868 C9           	ret
 118+ 8869
 119+ 8869 22 0A 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 886C 13           	inc de
 121+ 886D 13           	inc de
 122+ 886E EB           	ex de,hl
 123+ 886F 22 0E 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8872 C9           	ret
 125+ 8873
 126+ 8873              Datos_de_entidad_a_caja
 127+ 8873
 128+ 8873              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8873
 130+ 8873
 131+ 8873 ED 5B 0A 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8877
 133+ 8877 01 02 00     	ld bc,2
 134+ 887A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 887C
 136+ 887C 01 07 00     	ld bc,7
 137+ 887F CD A7 88     	call Situa_DE
 138+ 8882
 139+ 8882 01 05 00     	ld bc,5
 140+ 8885 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8887
 142+ 8887 01 04 00     	ld bc,4
 143+ 888A CD A7 88     	call Situa_DE
 144+ 888D
 145+ 888D 01 07 00     	ld bc,7
 146+ 8890 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8892
 148+ 8892 01 12 00     	ld bc,18
 149+ 8895 CD A7 88     	call Situa_DE
 150+ 8898
 151+ 8898 01 02 00     	ld bc,2
 152+ 889B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 889D
 154+ 889D              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 889D              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 889D
 157+ 889D 01 0F 00     	ld bc,15									; *****
 158+ 88A0 CD A7 88     	call Situa_DE
 159+ 88A3
 160+ 88A3 3E 03        	ld a,3
 161+ 88A5 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 88A6
 163+ 88A6 C9           	ret
 164+ 88A7
 165+ 88A7 EB           Situa_DE ex de,hl
 166+ 88A8 A7           	and a
 167+ 88A9 ED 4A        	adc hl,bc
 168+ 88AB EB           	ex de,hl
 169+ 88AC C9           	ret
 170+ 88AD
 171+ 88AD              ;---------------------------------------------------------------------------------------------------------------
 172+ 88AD              ;
 173+ 88AD              ;	21/5/23
 174+ 88AD              ;
 175+ 88AD              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 88AD              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 88AD              ;
 178+ 88AD              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 88AD              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 88AD              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 88AD              ;
 182+ 88AD              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 88AD              ;	MODIFICA: A y B.
 184+ 88AD              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 88AD
 186+ 88AD              Admin_num_entidades
 187+ 88AD
 188+ 88AD              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 88AD
 190+ 88AD 3A 10 89     	ld a,(Numero_de_entidades)
 191+ 88B0 A7           	and a
 192+ 88B1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 88B1              ;	jr z,$
 194+ 88B1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 88B1
 196+ 88B1 20 03        	jr nz,3F
 197+ 88B3
 198+ 88B3              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 88B3
 200+ 88B3 CD 14 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 88B6
 202+ 88B6 3A 10 89     3 ld a,(Numero_de_entidades)
 203+ 88B9 FE 0A        	cp 10
 204+ 88BB 38 08        	jr c,1F
 205+ 88BD
 206+ 88BD              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 88BD              ; Actualizamos variables.
 208+ 88BD
 209+ 88BD 3E 0A        	ld a,10
 210+ 88BF 32 11 89     	ld (Numero_parcial_de_entidades),a
 211+ 88C2 47           	ld b,a
 212+ 88C3 18 04        	jr 2F
 213+ 88C5
 214+ 88C5              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 88C5              ; (Numero_de_entidades)="0".
 216+ 88C5
 217+ 88C5 32 11 89     1 ld (Numero_parcial_de_entidades),a
 218+ 88C8 47           	ld b,a
 219+ 88C9 C9           2 ret
# file closed: Niveles.asm
  93  88CA
  94  88CA              ; ******************************************************************************************************************************************************************************************
  95  88CA              ; Constantes.
  96  88CA              ; ******************************************************************************************************************************************************************************************
  97  88CA              ;
  98  88CA              ; 10/11/23
  99  88CA
 100  88CA              ;
 101  88CA              ; Constantes generales.
 102  88CA              ;
 103  88CA
 104  88CA              Sprite_vacio equ $f000
 105  88CA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 106  88CA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 107  88CA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 108  88CA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 109  88CA
 110  88CA              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 111  88CA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 112  88CA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 113  88CA              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 114  88CA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 115  88CA              ;
 116  88CA              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 117  88CA              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 118  88CA              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 119  88CA              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 120  88CA              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 121  88CA              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 122  88CA
 123  88CA              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 124  88CA              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 125  88CA
 126  88CA
 127  88CA
 128  88CA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 129  88CA
 130  88CA              ; ******************************************************************************************************************************************************************************************
 131  88CA              ; Variables.
 132  88CA              ; ******************************************************************************************************************************************************************************************
 133  88CA              ;
 134  88CA              ; 10/11//23
 135  88CA              ;
 136  88CA              ; Variables de DRAW. (Motor principal).
 137  88CA              ;
 138  88CA              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 139  88CA
 140  88CA 00           Filas db 0												; Filas. [DRAW]
 141  88CB 00           Columns db 0  											; Nº de columnas. [DRAW]
 142  88CC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 143  88CE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 144  88D0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 145  88D1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 146  88D2
 147  88D2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 148  88D2
 149  88D2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 150  88D3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 151  88D3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 152  88D3 00           Attr db 0												; Atributos de la entidad:
 153  88D4
 154  88D4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 155  88D4              ;
 156  88D4              ;	COLORES: 0 ..... NEGRO
 157  88D4              ;    		 1 ..... AZUL
 158  88D4              ; 			 2 ..... ROJO
 159  88D4              ;			 3 ..... MAGENTA
 160  88D4              ; 			 4 ..... VERDE
 161  88D4              ; 			 5 ..... CIAN
 162  88D4              ;			 6 ..... AMARILLO
 163  88D4              ; 			 7 ..... BLANCO
 164  88D4
 165  88D4 00 00        Indice_Sprite_der defw 0
 166  88D6 00 00        Indice_Sprite_izq defw 0
 167  88D8 00 00        Puntero_DESPLZ_der defw 0
 168  88DA 00 00        Puntero_DESPLZ_izq defw 0
 169  88DC
 170  88DC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 171  88DE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 172  88DF
 173  88DF              ; Variables de objeto. (Características).
 174  88DF
 175  88DF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 176  88E0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 177  88E1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 178  88E2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 179  88E3
 180  88E3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 181  88E4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 182  88E4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 183  88E4 00 00 00...  Variables_de_borrado ds 6
 184  88EA
 185  88EA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 186  88EC 00 00        	defw 0
 187  88EE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 188  88F0 00 00 00 00  	db 0,0,0,0
 189  88F4
 190  88F4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 191  88F4
 192  88F4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 193  88F5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 194  88F5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 195  88F5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 196  88F5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 197  88F5              ;
 198  88F5              ; 														DESCRIPCIÖN:
 199  88F5              ;
 200  88F5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 201  88F5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 202  88F5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 203  88F5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 204  88F5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 205  88F5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 206  88F5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 207  88F5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 208  88F5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 209  88F5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 210  88F5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 211  88F5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 212  88F5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 213  88F5              ;
 214  88F5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 215  88F5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 216  88F5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 217  88F5
 218  88F5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 219  88F5
 220  88F5 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 221  88F7 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 222  88F9 00 00        Puntero_indice_mov_bucle defw 0							;
 223  88FB              ;
 224  88FB              ;
 225  88FB 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 226  88FC              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 227  88FC              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 228  88FC 00           Incrementa_puntero_backup db 0
 229  88FD 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 230  88FE              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 231  88FE 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 232  88FF 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 233  8900 00           Cola_de_desplazamiento db 0								; Este byte indica:
 234  8901              ;
 235  8901              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 236  8901              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 237  8901              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 238  8901              ;
 239  8901              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 240  8901              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 241  8901              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 242  8901              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 243  8901              ;
 244  8901              ;														;	"$ff" ..... Bucle infinito de repetición.
 245  8901              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 246  8901              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 247  8901
 248  8901
 249  8901              ; Variables de funcionamiento. [DRAW].
 250  8901
 251  8901 00           Columnas db 0
 252  8902 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 253  8904              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 254  8904 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 255  8905
 256  8905              ; variables de control general.
 257  8905
 258  8905 00           Ctrl_2 db 0
 259  8906              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 260  8906              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 261  8906              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 262  8906              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 263  8906              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 264  8906              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 265  8906              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 266  8906              ;
 267  8906              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 268  8906              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 269  8906              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 270  8906              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 271  8906              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 272  8906
 273  8906 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 274  8907
 275  8907              ;! 61 Bytes por entidad.
 276  8907
 277  8907              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 278  8907              ;					         		---------;      ;---------
 279  8907
 280  8907
 281  8907              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 282  8907
 283  8907 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 284  8908
 285  8908              ;														DESCRIPCIÓN:
 286  8908              ;
 287  8908              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 288  8908              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 289  8908              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 290  8908              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 291  8908              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 292  8908              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 293  8908
 294  8908              ;														BIT 3, Recarga de nueva oleada.
 295  8908              ;														BIT 4, Recarga de nueva oleada.
 296  8908              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 297  8908              ;														BIT 6, **** Frame completo.
 298  8908              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 299  8908
 300  8908 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 301  890A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 302  890A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 303  890A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 304  890A
 305  890A              ; Gestión de ENTIDADES y CAJAS.
 306  890A
 307  890A 00 00        Puntero_store_caja defw 0
 308  890C 00 00        Puntero_restore_caja defw 0
 309  890E 00 00        Indice_restore_caja defw 0
 310  8910 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 311  8911 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 312  8912 00           Entidades_en_curso db 0									; ..... ..... .....
 313  8913 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 314  8914              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 315  8914              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 316  8914              ;														; _ (Numero_de_malotes)="0".
 317  8914 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 318  8916 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 319  8918              ;														; _ puntero (Indice_entidades).
 320  8918
 321  8918
 322  8918              ;---------------------------------------------------------------------------------------------------------------
 323  8918              ;
 324  8918              ;	8/11/23
 325  8918              ;
 326  8918              ;	Álbumes.
 327  8918
 328  8918 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 329  891A              ;														; _variable para almacenar lo posición del puntero_
 330  891A              ; 														; _de pila, SP.
 331  891A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 332  891C              ;														; La utiliza la rutina [Extrae_foto_registros].
 333  891C 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 334  891E 00 00        Stack_snapshot defw 0
 335  8920 00 00        Stack_snapshot_disparos defw 0
 336  8922
 337  8922 00 00        End_Snapshot defw 0
 338  8924              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 339  8924 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 340  8926              ;														; _el snapshot de los registros del siguiente disparo.
 341  8926              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 342  8926 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 343  8928 00 00        End_Snapshot_1 defw 0
 344  892A 00 00        End_Snapshot_disparos_1 defw 0
 345  892C 00 00        End_Snapshot_2 defw 0
 346  892E 00 00        End_Snapshot_disparos_2 defw 0
 347  8930 00 00        End_Snapshot_3 defw 0
 348  8932 00 00        End_Snapshot_disparos_3 defw 0
 349  8934
 350  8934 00 00        Puntero_indice_album_de_fotos defw 0
 351  8936 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 352  8938
 353  8938 00 00        Puntero_indice_End_Snapshot defw 0
 354  893A 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 355  893C 00 00        Puntero_de_End_Snapshot defw 0
 356  893E 00 00        Puntero_de_End_Snapshot_disparos defw 0
 357  8940
 358  8940 F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 359  8941              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 360  8941
 361  8941 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 362  8942              ;
 363  8942              ;														DESCRIPCIÓN:
 364  8942              ;
 365  8942              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 366  8942              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 367  8942              ;																_ álbum. También indica que "hay recolocación" antes de ejecutar la "cascada de álbumes". El tipo de recolocación lo definen_
 368  8942              ;																_ los bits 1 y 2.
 369  8942              ;														BIT 1, Indica que la recolocación de álbumes será de Album3_a_Album2, (siempre que Álbum_3 contenga un FRAME completo).
 370  8942              ;														BIT 2, Indica que la recolocación de álbumes será de Album2_a_Album1, (siempre que álbum_2 contenga un FRAME completo).
 371  8942              ;																Nota: En el caso de que al hacer la recolocación, nos encontremos con que el álbum donante sigue incompleto, saltaremos_
 372  8942              ;																	_ a ejecutar la "Casacada" de álbumes para limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 373  8942              ;														BIT 3, Existe DOBLE RECOLOCACIÓN. Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Siempre que Album_de_fotos_3 contenga un FRAME completo,_
 374  8942              ;																_ pasaremos Album3_a_Album2 y Album2_a_Album1. También modificaremos los punteros y los situaremos al comienzo de Album_de_fotos_2.
 375  8942              ;																_ En el caso de que al hacer la DOBLE RECOLOCACIÓN, Album_de_fotos_3 esté incompleto, saltaremos a ejecutar la "Casacada" de álbumes para_
 376  8942              ;																_ limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 377  8942              ;														BIT 4, Buffer vacío !!!. Album_de_fotos está vacío y no podemos volcar Album_de_fotos_1. Está incompleto.
 378  8942              ;																_ El siguiente FRAME no se imprime, NO HAY CUADRO.
 379  8942
 380  8942              ;---------------------------------------------------------------------------------------------------------------
 381  8942
 382  8942              ; Gestión de Disparos.
 383  8942
 384  8942 00           Numero_de_disparotes db 0
 385  8943 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 386  8945 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 387  8947 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 388  8948              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 389  8948              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 390  8948 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 391  894A              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 392  894A              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 393  894A              ;														; _produzca colisión.
 394  894A 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 395  894C              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 396  894C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 397  894F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 398  894F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 399  8952              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 400  8952 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 401  8954 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 402  8955
 403  8955              ;---------------------------------------------------------------------------------------------------------------
 404  8955
 405  8955              ; Relojes y temporizaciones.
 406  8955
 407  8955 00           Contador_de_frames db 0
 408  8956 00           Contador_de_frames_2 db 0
 409  8957
 410  8957 04           Clock_explosion db 4
 411  8958 1E           Clock_Entidades_en_curso db 30
 412  8959 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 413  895A              ;														; Repite la oleada de entidades.
 414  895A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 415  895B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 416  895C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 417  895D
 418  895D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 419  895E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 420  895F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 421  8960
 422  8960              ;---------------------------------------------------------------------------------------------------------------
 423  8960
 424  8960              ; Gestión de NIVELES.
 425  8960
 426  8960 00           Nivel db 0												; Nivel actual del juego.
 427  8961 00 00        Puntero_indice_NIVELES defw 0
 428  8963 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 429  8965              ; 														; _ que definen el NIVEL.
 430  8965              ; Y todo comienza aquí .....
 431  8965              ;
 432  8965              ; Rutina principal *************************************************************************************************************************************************************************
 433  8965              ;
 434  8965              ;	14/11/22
 435  8965
 436  8965              START
 437  8965
 438  8965 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 439  8968 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 440  896A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 441  896C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 442  896E F3           	DI
 443  896F
 444  896F 3E 07        	ld a,%00000111
 445  8971 CD 40 99     	call Cls
 446  8974
 447  8974 CD 64 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 448  8977
 449  8977              ; INICIALIZACIÓN.
 450  8977
 451  8977 CD 14 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 452  897A CD 26 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 453  897D CD 89 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 454  8980              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 455  8980 CD 9F 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 456  8983              ;													     ; _ malotes antes de guardar ninguna foto.
 457  8983              ; ----------
 458  8983
 459  8983 CD 14 8D     	call Restore_entidad
 460  8986
 461  8986 21 11 89     	ld hl,Numero_parcial_de_entidades
 462  8989 46           	ld b,(hl)
 463  898A 04           	inc b
 464  898B 05           	dec b
 465  898C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 466  898E
 467  898E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 468  898E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 469  898E              ;	Pintamos el resto de entidades:
 470  898E
 471  898E              ;	INICIA ENTIDADES !!!!!
 472  898E
 473  898E C5           1 push bc  												; Guardo el contador de entidades.
 474  898F CD 59 8B     	call Inicia_entidad
 475  8992 C1           	pop bc
 476  8993 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 477  8995
 478  8995              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 479  8995              ; (Esto se dá cuando se inicia una nueva oleada).
 480  8995
 481  8995 3A 07 89     	ld a,(Ctrl_1)
 482  8998 CB 5F        	bit 3,a
 483  899A 20 00        	jr nz,5F											; Loop
 484  899C
 485  899C              ; 	INICIA AMADEUS !!!!!
 486  899C
 487  899C              3
 488  899C
 489  899C              ;	call Restore_Amadeus
 490  899C              ;	call Inicia_Puntero_objeto
 491  899C              ;	call Draw
 492  899C              ;	call Guarda_foto_registros
 493  899C              ;	call Guarda_datos_de_borrado_Amadeus
 494  899C
 495  899C              ;	ld de,Amadeus_db
 496  899C              ;	call Store_Amadeus
 497  899C
 498  899C              ; 	INICIA DISPAROS !!!!!
 499  899C
 500  899C              ;	call Inicia_Puntero_Disparo_Entidades
 501  899C              ;	call Inicia_Puntero_Disparo_Amadeus
 502  899C
 503  899C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 504  899C
 505  899C CD 89 8B     5 call Inicia_punteros_de_cajas
 506  899F CD 14 8D     	call Restore_entidad
 507  89A2
 508  89A2 3A 07 89     	ld a,(Ctrl_1)
 509  89A5 CB 5F        	bit 3,a
 510  89A7 28 07        	jr z,6F
 511  89A9
 512  89A9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 513  89A9
 514  89A9 21 07 89     	ld hl,Ctrl_1
 515  89AC CB 9E        	res 3,(hl)
 516  89AE 18 03        	jr Main
 517  89B0
 518  89B0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 519  89B0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 520  89B0              ; _ para situarnos en el siguiente album.
 521  89B0
 522  89B0 CD D0 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 523  89B3
 524  89B3
 525  89B3              ; ------------------------------------
 526  89B3
 527  89B3              Main
 528  89B3              ;
 529  89B3              ;	10/11/23
 530  89B3
 531  89B3              ; 	ei
 532  89B3
 533  89B3              ; Aparece nueva entidad ???
 534  89B3
 535  89B3 3A 58 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 536  89B6 47           	ld b,a
 537  89B7 3A 55 89     	ld a,(Contador_de_frames)
 538  89BA B8           	cp b
 539  89BB 20 1E        	jr nz,13F
 540  89BD
 541  89BD              ; Si aún no hemos completado el bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 542  89BD              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 543  89BD
 544  89BD 3A 11 89     	ld a,(Numero_parcial_de_entidades)
 545  89C0 47           	ld b,a
 546  89C1 3A 12 89     	ld a,(Entidades_en_curso)
 547  89C4 B8           	cp b
 548  89C5 28 14        	jr z,13F
 549  89C7 30 12        	jr nc,13F
 550  89C9
 551  89C9              ; ---
 552  89C9 3C           	inc a
 553  89CA 32 12 89     	ld (Entidades_en_curso),a
 554  89CD
 555  89CD              ;! debug
 556  89CD
 557  89CD F3           	di
 558  89CE FE 06        	cp 6
 559  89D0 28 FE        	jr z,$
 560  89D2 FB           	ei
 561  89D3
 562  89D3              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 563  89D3
 564  89D3 3A 58 89     	ld a,(Clock_Entidades_en_curso)
 565  89D6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 566  89D6              ;! _ IMPREDECIBLE !!!!
 567  89D6 C6 64        	add 100
 568  89D8 32 58 89     	ld (Clock_Entidades_en_curso),a
 569  89DB
 570  89DB              ; -------------------------------------------------------------------------------------------------------------
 571  89DB
 572  89DB              ; Habilita disparos.
 573  89DB
 574  89DB 21 5A 89     13 ld hl,Disparo_Amadeus
 575  89DE 11 5C 89     	ld de,CLOCK_repone_disparo_Amadeus
 576  89E1 CD 04 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 577  89E4
 578  89E4 21 5D 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 579  89E7 11 5F 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 580  89EA CD 04 9D     	call Habilita_disparos
 581  89ED
 582  89ED              ; COLISIONES.
 583  89ED
 584  89ED CD 15 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 585  89F0
 586  89F0              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 587  89F0              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 588  89F0              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 589  89F0
 590  89F0 AF           	xor a
 591  89F1 32 47 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 592  89F4
 593  89F4 CD 89 8B     	call Inicia_punteros_de_cajas
 594  89F7 CD 14 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 595  89FA              ; 														; _ en DRAW.
 596  89FA 3A CA 88     	ld a,(Filas)
 597  89FD A7           	and a
 598  89FE 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 599  8A00 CD 26 8D     	call Incrementa_punteros_de_cajas
 600  8A03 18 F2        	jr 12B
 601  8A05
 602  8A05              ; ---------------------------------------------------------------------------------------
 603  8A05
 604  8A05 3A 11 89     10 ld a,(Numero_parcial_de_entidades)
 605  8A08 47               ld b,a
 606  8A09 A7           	and a
 607  8A0A 20 14        	jr nz,11F
 608  8A0C
 609  8A0C 21 07 89     	ld hl,Ctrl_1
 610  8A0F CB 66        	bit 4,(hl)
 611  8A11 C2 9E 8A     	jp nz,16F
 612  8A14
 613  8A14              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 614  8A14
 615  8A14 21 07 89     	ld hl,Ctrl_1
 616  8A17 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 617  8A19
 618  8A19 3A 55 89     	ld a,(Contador_de_frames)
 619  8A1C 3C           	inc a
 620  8A1D 32 59 89     	ld (Activa_recarga_cajas),a
 621  8A20
 622  8A20              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 623  8A20
 624  8A20 3A 12 89     11 ld a,(Entidades_en_curso)
 625  8A23 A7           	and a
 626  8A24 CA 9E 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 627  8A27 47           	ld b,a												; No hay entidades que gestionar.
 628  8A28
 629  8A28              ; Código que ejecutamos con cada entidad:
 630  8A28              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 631  8A28
 632  8A28 C5           15 push bc 												; Nº de entidades en curso.
 633  8A29
 634  8A29              ; Impacto ???
 635  8A29
 636  8A29 3A E3 88     	ld a,(Impacto)
 637  8A2C A7           	and a
 638  8A2D 28 32        	jr z,8F
 639  8A2F
 640  8A2F              ; Hay Impacto en esta entidad.
 641  8A2F
 642  8A2F 21 57 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 643  8A32 35           	dec (hl)
 644  8A33 20 63        	jr nz,17F
 645  8A35
 646  8A35              ;! Velocidad de la animación de la explosión.
 647  8A35
 648  8A35 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 649  8A37              ;														; _,(velocidad de la explosión).
 650  8A37
 651  8A37              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 652  8A37 18 FE        	jr $
 653  8A39
 654  8A39 CD D5 8D     	call Repone_datos_de_borrado
 655  8A3C CD 2D 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 656  8A3F
 657  8A3F
 658  8A3F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 659  8A3F
 660  8A3F 3A 05 89     	ld a,(Ctrl_2)
 661  8A42 CB 4F        	bit 1,a
 662  8A44 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 663  8A46
 664  8A46              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 665  8A46
 666  8A46 3A D2 88     	ld a,(CTRL_DESPLZ)
 667  8A49 A7           	and a
 668  8A4A 20 08        	jr nz,18F
 669  8A4C
 670  8A4C 21 84 84     	ld hl,Indice_Explosion_2x2-2
 671  8A4F 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 672  8A52 18 06        	jr 19F
 673  8A54
 674  8A54 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 675  8A57 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 676  8A5A
 677  8A5A 21 05 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 678  8A5D CB CE        	set 1,(hl)
 679  8A5F 18 22        	jr 7F
 680  8A61
 681  8A61              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 682  8A61              ; _con las coordenadas de la entidad almacenada en DRAW.
 683  8A61
 684  8A61 3A 07 89     8 ld a,(Ctrl_1)
 685  8A64 CB 57        	bit 2,a
 686  8A66 28 1B        	jr z,7F
 687  8A68
 688  8A68 2A 4A 89     	ld hl,(Coordenadas_disparo_certero)
 689  8A6B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 690  8A6C              ;														; E contiene la coordenada_X del disparo.
 691  8A6C 2A D0 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 692  8A6F              ;														; H FILA, (Coordenada_y de la entidad).
 693  8A6F A7           	and a
 694  8A70 ED 52        	sbc hl,de
 695  8A72
 696  8A72 CD 4C 92     	call Determina_resultado_comparativa
 697  8A75
 698  8A75 78           	ld a,b
 699  8A76 A7           	and a
 700  8A77 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 701  8A79
 702  8A79              ; ----- ----- -----
 703  8A79
 704  8A79 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 705  8A7B 32 E3 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 706  8A7E
 707  8A7E 21 07 89     	ld hl,Ctrl_1
 708  8A81 CB 96        	res 2,(hl)
 709  8A83
 710  8A83 CD F5 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 711  8A86
 712  8A86 3A F4 88     	ld a,(Ctrl_0)
 713  8A89 CB 67        	bit 4,a
 714  8A8B 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 715  8A8D
 716  8A8D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 717  8A8D              ; [[[
 718  8A8D CD AF 8D     	call Detecta_disparo_entidad
 719  8A90              ; ]]]
 720  8A90 CD 6A 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 721  8A93              ;	call Guarda_datos_de_borrado
 722  8A93
 723  8A93 21 F4 88     	ld hl,Ctrl_0
 724  8A96 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 725  8A98
 726  8A98 CD D9 8C     17 call Store_Restore_cajas
 727  8A9B
 728  8A9B C1           	pop bc
 729  8A9C 10 8A        	djnz 15B
 730  8A9E
 731  8A9E              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 732  8A9E              ; Hemos gestionado todas las unidades.
 733  8A9E              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 734  8A9E
 735  8A9E              ;	ld hl,Ctrl_1
 736  8A9E              ;	res 2,(hl)
 737  8A9E
 738  8A9E CD D0 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 739  8AA1              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 740  8AA1
 741  8AA1              ; ----------------------------------------
 742  8AA1
 743  8AA1 3A 07 89     	ld a,(Ctrl_1) 										; Existe Loop?
 744  8AA4 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 745  8AA6 CA B3 89     	jp z,Main
 746  8AA9
 747  8AA9              ; RECARGA DE NUEVA OLEADA.
 748  8AA9
 749  8AA9 3A 55 89     	ld a,(Contador_de_frames)
 750  8AAC 47           	ld b,a
 751  8AAD 3A 59 89     	ld a,(Activa_recarga_cajas)
 752  8AB0 B8           	cp b
 753  8AB1 28 08        	jr z,20F
 754  8AB3
 755  8AB3 21 07 89     	ld hl,Ctrl_1
 756  8AB6 CB E6        	set 4,(hl)
 757  8AB8 C3 B3 89     	jp Main
 758  8ABB
 759  8ABB 21 07 89     20 ld hl,Ctrl_1
 760  8ABE CB A6        	res 4,(hl)
 761  8AC0
 762  8AC0 3A 55 89     	ld a,(Contador_de_frames)
 763  8AC3
 764  8AC3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 765  8AC3              ;! _ IMPREDECIBLE !!!!
 766  8AC3
 767  8AC3 C6 0A        	add 10
 768  8AC5 32 58 89     	ld (Clock_Entidades_en_curso),a
 769  8AC8
 770  8AC8 C3 7A 89     	jp 4B
 771  8ACB
 772  8ACB C9           	ret
 773  8ACC
 774  8ACC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 775  8ACC
 776  8ACC              Gestiona_Amadeus
 777  8ACC
 778  8ACC 3E 04            ld a,4
 779  8ACE D3 FE        	out ($fe),a											; Azul.
 780  8AD0
 781  8AD0 CD 3B 8D     	call Restore_Amadeus
 782  8AD3
 783  8AD3              ;! Activa/desactiva impacto con Amadeus.
 784  8AD3
 785  8AD3 3A E3 88     	ld a,(Impacto)
 786  8AD6 A7           	and a
 787  8AD7 20 FE        	jr nz,$
 788  8AD9
 789  8AD9 CD 46 8B     	call Mov_Amadeus
 790  8ADC
 791  8ADC 3A F4 88     	ld a,(Ctrl_0)
 792  8ADF CB 67        	bit 4,a
 793  8AE1 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 794  8AE3
 795  8AE3 CD 6A 8B     	call Guarda_foto_entidad_a_pintar
 796  8AE6 CD B5 8D     	call Guarda_datos_de_borrado_Amadeus
 797  8AE9
 798  8AE9 21 F4 88     14 ld hl,Ctrl_0
 799  8AEC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 800  8AEE
 801  8AEE 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 802  8AF1 CD 4D 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 803  8AF4
 804  8AF4              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 805  8AF4
 806  8AF4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 807  8AF4
 808  8AF4              ;	call Calcula_numero_de_disparotes
 809  8AF4
 810  8AF4 C9           	ret
 811  8AF5
 812  8AF5              ; --------------------------------------------------------------------------------------------------------------
 813  8AF5              ;
 814  8AF5              ;	27/05/23
 815  8AF5
 816  8AF5              Mov_obj
 817  8AF5
 818  8AF5 3A 05 89     	ld a,(Ctrl_2)
 819  8AF8 CB 4F        	bit 1,a
 820  8AFA 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 821  8AFC
 822  8AFC              ; Explosión:
 823  8AFC
 824  8AFC 3A 06 89     	ld a,(Frames_explosion)
 825  8AFF A7           	and a
 826  8B00 20 11        	jr nz,4F
 827  8B02
 828  8B02              ; Una alimaña menos!!!!!!!!!1
 829  8B02
 830  8B02 CD 56 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 831  8B05 21 11 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 832  8B08 35           	dec (hl)
 833  8B09 21 12 89     	ld hl,Entidades_en_curso
 834  8B0C 35           	dec (hl)
 835  8B0D 21 10 89     	ld hl,Numero_de_entidades
 836  8B10 35           	dec (hl)
 837  8B11 18 32        	jr 3F
 838  8B13
 839  8B13              ; -----
 840  8B13
 841  8B13              ;	`Movemos´ la explosión.
 842  8B13
 843  8B13 2A D8 88     4 ld hl,(Puntero_DESPLZ_der)
 844  8B16 23           	inc hl
 845  8B17 23           	inc hl
 846  8B18 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 847  8B1B CD 8B 8C     	call Extrae_address
 848  8B1E 22 CE 88     	ld (Puntero_objeto),hl
 849  8B21
 850  8B21 21 06 89     	ld hl,Frames_explosion
 851  8B24 35           	dec (hl)
 852  8B25
 853  8B25              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 854  8B25 18 1E        	jr 3F
 855  8B27
 856  8B27 AF           2 xor a
 857  8B28 32 F4 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 858  8B2B
 859  8B2B              ; Movemos Entidades malignas.
 860  8B2B
 861  8B2B CD AF 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 862  8B2E
 863  8B2E 3A F4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 864  8B31 CB 67        	bit 4,a
 865  8B33 C8           	ret z
 866  8B34
 867  8B34              ; Ha habido desplazamiento de la entidad maligna.
 868  8B34              ; Ha llegado a zona de AMADEUS ???
 869  8B34
 870  8B34 3A D1 88     	ld a,(Coordenada_y)
 871  8B37 FE 14        	cp $14
 872  8B39 D4 DA 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 873  8B3C              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 874  8B3C              ; ---------
 875  8B3C
 876  8B3C CD 71 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 877  8B3F CD D5 8D     	call Repone_datos_de_borrado
 878  8B42 CD 2D 8C     	call Limpia_Variables_de_borrado
 879  8B45
 880  8B45 C9           3 ret													; _de la misma.
 881  8B46
 882  8B46              ; --------------------------------------------------------------------------------------------------------------
 883  8B46              ;
 884  8B46              ;	29/1/23
 885  8B46
 886  8B46              Mov_Amadeus
 887  8B46
 888  8B46 CD 78 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 889  8B49
 890  8B49 3A F4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 891  8B4C CB 67        	bit 4,a
 892  8B4E C8           	ret z
 893  8B4F
 894  8B4F              ; ---------
 895  8B4F
 896  8B4F CD 71 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 897  8B52 CD C5 8D     	call Repone_datos_de_borrado_Amadeus
 898  8B55 CD 2D 8C     	call Limpia_Variables_de_borrado
 899  8B58
 900  8B58 C9           	ret
 901  8B59
 902  8B59              ; -----------------------------------------------------------------------------------
 903  8B59              ;
 904  8B59              ;	01/11/23
 905  8B59
 906  8B59 CD 91 8C     Inicia_entidad	call Inicia_Puntero_objeto
 907  8B5C CD 54 99     	call Recompone_posicion_inicio
 908  8B5F CD 33 93     	call Draw
 909  8B62 CD A0 7F     	call Guarda_foto_registros
 910  8B65 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 911  8B66              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 912  8B66 CD D9 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 913  8B69 C9           	ret
 914  8B6A
 915  8B6A              ; --------------------------------------------------------------------------------------------------------------
 916  8B6A              ;
 917  8B6A              ;	31/08/23
 918  8B6A              ;
 919  8B6A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 920  8B6A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 921  8B6A
 922  8B6A              Guarda_foto_entidad_a_pintar
 923  8B6A
 924  8B6A              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 925  8B6A
 926  8B6A CD 33 93     	call Draw
 927  8B6D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 928  8B70 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 929  8B71
 930  8B71              ; --------------------------------------------------------------------------------------------------------------
 931  8B71              ;
 932  8B71              ;	19/9/23
 933  8B71
 934  8B71 21 CA 88     Prepara_var_pintado ld hl,Filas
 935  8B74 11 EA 88     	ld de,Variables_de_pintado
 936  8B77 01 08 00     	ld bc,8
 937  8B7A ED B0        	ldir
 938  8B7C C9           	ret
 939  8B7D
 940  8B7D              ; --------------------------------------------------------------------------------------------------------------
 941  8B7D
 942  8B7D 21 EA 88     Repone_pintar ld hl,Variables_de_pintado
 943  8B80 11 CA 88     	ld de,Filas
 944  8B83 01 08 00     	ld bc,8
 945  8B86 ED B0        	ldir
 946  8B88 C9           	ret
 947  8B89
 948  8B89              ; *************************************************************************************************************************************************************
 949  8B89              ;
 950  8B89              ; 8/1/23
 951  8B89              ;
 952  8B89              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 953  8B89              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 954  8B89              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 955  8B89
 956  8B89              ; Destruye HL y DE !!!!!
 957  8B89
 958  8B89              Inicia_punteros_de_cajas
 959  8B89
 960  8B89 21 8C 85     	ld hl,Indice_de_cajas
 961  8B8C CD 8B 8C         call Extrae_address
 962  8B8F 22 0A 89         ld (Puntero_store_caja),hl
 963  8B92 21 8E 85     	ld hl,Indice_de_cajas+2
 964  8B95 22 0E 89     	ld (Indice_restore_caja),hl
 965  8B98 CD 8B 8C     	call Extrae_address
 966  8B9B 22 0C 89     	ld (Puntero_restore_caja),hl
 967  8B9E C9               ret
 968  8B9F
 969  8B9F              ; ---------------------------------------------------------------
 970  8B9F              ;
 971  8B9F              ;	9/8/23
 972  8B9F              ;
 973  8B9F              ;	Inicialización y gestión de álbumes de fotos y cajas.
 974  8B9F
 975  8B9F              Inicia_punteros_de_albumes_y_malotes
 976  8B9F
 977  8B9F 21 EC 84     	ld hl,Indice_album_de_fotos
 978  8BA2 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
 979  8BA5 CD 8B 8C     	call Extrae_address
 980  8BA8 22 1E 89     	ld (Stack_snapshot),hl
 981  8BAB
 982  8BAB 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 983  8BAE 22 36 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 984  8BB1 CD 8B 8C     	call Extrae_address
 985  8BB4 22 20 89     	ld (Stack_snapshot_disparos),hl
 986  8BB7
 987  8BB7 21 FC 84     	ld hl,Indice_End_Snapshot
 988  8BBA 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
 989  8BBD CD 8B 8C     	call Extrae_address
 990  8BC0 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
 991  8BC3
 992  8BC3 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 993  8BC6 22 3A 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 994  8BC9 CD 8B 8C     	call Extrae_address
 995  8BCC 22 3E 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 996  8BCF
 997  8BCF C9           	ret
 998  8BD0
 999  8BD0              ;	23/10/23
1000  8BD0
1001  8BD0              Avanza_puntero_de_album_de_fotos_de_entidades
1002  8BD0
1003  8BD0              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
1004  8BD0
1005  8BD0              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
1006  8BD0              ; Estamos en el último álbum del índice???.
1007  8BD0              ;
1008  8BD0 2A 34 89     	ld hl,(Puntero_indice_album_de_fotos)
1009  8BD3 01 F2 84     	ld bc,Indice_album_de_fotos+6
1010  8BD6 A7           	and a
1011  8BD7 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
1012  8BD9 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
1013  8BDB
1014  8BDB              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
1015  8BDB              ; Actualizamos (Semaforo).
1016  8BDB
1017  8BDB 21 40 89     	ld hl,Semaforo
1018  8BDE CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
1019  8BE0
1020  8BE0              ; Inicia con el buffer de video completo !!!
1021  8BE0
1022  8BE0 FB           	ei
1023  8BE1 76           	halt
1024  8BE2 C9           	ret
1025  8BE3
1026  8BE3 2A 34 89     1 ld hl,(Puntero_indice_album_de_fotos)
1027  8BE6 23           	inc hl
1028  8BE7 23           	inc hl
1029  8BE8 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
1030  8BEB CD 8B 8C     	call Extrae_address
1031  8BEE 22 1E 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1032  8BF1
1033  8BF1 2A 38 89     	ld hl,(Puntero_indice_End_Snapshot)
1034  8BF4 23           	inc hl
1035  8BF5 23           	inc hl
1036  8BF6 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
1037  8BF9 CD 8B 8C     	call Extrae_address
1038  8BFC 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
1039  8BFF
1040  8BFF 21 40 89     	ld hl,Semaforo
1041  8C02 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1042  8C04
1043  8C04 C9           	ret
1044  8C05
1045  8C05              ; *************************************************************************************************************************************************************
1046  8C05              ;
1047  8C05              ; 8/1/23
1048  8C05              ;
1049  8C05              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1050  8C05
1051  8C05 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1052  8C08 22 43 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1053  8C0B C9           	ret
1054  8C0C 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1055  8C0F 22 45 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1056  8C12 C9           	ret
1057  8C13
1058  8C13              ; -------------------------------------------------------------------------------------------------------------
1059  8C13              ;
1060  8C13              ; 21/9/23
1061  8C13              ;
1062  8C13
1063  8C13              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1064  8C13
1065  8C13              Limpia_album_Amadeus
1066  8C13
1067  8C13 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1068  8C16 7E           	ld a,(hl)
1069  8C17 A7           	and a
1070  8C18 C8           	ret z
1071  8C19
1072  8C19 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1073  8C1C 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1074  8C1F 01 0B 00     	ld bc,11
1075  8C22 AF           	xor a
1076  8C23 77           	ld (hl),a
1077  8C24 ED B0        	ldir
1078  8C26
1079  8C26 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1080  8C29 22 26 89     	ld (End_Snapshot_Amadeus),hl
1081  8C2C
1082  8C2C C9           	ret
1083  8C2D
1084  8C2D 21 E4 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1085  8C30 11 E5 88     	ld de,Variables_de_borrado+1
1086  8C33 01 05 00     	ld bc,5
1087  8C36 AF           	xor a
1088  8C37 77           	ld (hl),a
1089  8C38 ED B0        	ldir
1090  8C3A C9           	ret
1091  8C3B
1092  8C3B              ; -------------------------------------------------------------------------------------------------------------
1093  8C3B              ;
1094  8C3B              ; 8/9/23
1095  8C3B              ;
1096  8C3B
1097  8C3B              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1098  8C3B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1099  8C3B
1100  8C3B              Calcula_numero_de_malotes
1101  8C3B
1102  8C3B 21 00 70     	ld hl,Album_de_fotos
1103  8C3E EB           	ex de,hl
1104  8C3F 2A 22 89     	ld hl,(End_Snapshot)
1105  8C42
1106  8C42 7C           	ld a,h
1107  8C43 A7           	and a
1108  8C44 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1109  8C46
1110  8C46 06 00        4 ld b,0
1111  8C48 7D           	ld a,l
1112  8C49 93           	sub e
1113  8C4A 28 07        	jr z,1F
1114  8C4C
1115  8C4C              ; Nº de malotes no es "0".
1116  8C4C
1117  8C4C D6 06        2 sub 6
1118  8C4E 04           	inc b
1119  8C4F A7           	and a
1120  8C50 20 FA        	jr nz,2B
1121  8C52 78           	ld a,b
1122  8C53
1123  8C53 32 13 89     1 ld (Numero_de_malotes),a
1124  8C56 C9           	ret
1125  8C57
1126  8C57              ; -------------------------------------------------------------------------------------------------------------
1127  8C57              ;
1128  8C57              ; 8/9/23
1129  8C57              ;
1130  8C57
1131  8C57              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1132  8C57              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1133  8C57
1134  8C57              Calcula_malotes_Amadeus
1135  8C57
1136  8C57 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1137  8C5A EB           	ex de,hl
1138  8C5B 2A 26 89     	ld hl,(End_Snapshot_Amadeus)
1139  8C5E
1140  8C5E 7C           	ld a,h
1141  8C5F A7           	and a
1142  8C60 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1143  8C62
1144  8C62 06 00        	ld b,0
1145  8C64 7D           	ld a,l
1146  8C65 93           	sub e
1147  8C66 28 07        	jr z,1F
1148  8C68
1149  8C68              ; Nº de malotes no es "0".
1150  8C68
1151  8C68 D6 06        2 sub 6
1152  8C6A 04           	inc b
1153  8C6B A7           	and a
1154  8C6C 20 FA        	jr nz,2B
1155  8C6E 78           	ld a,b
1156  8C6F
1157  8C6F 32 13 89     1 ld (Numero_de_malotes),a
1158  8C72 C9           	ret
1159  8C73
1160  8C73              ; -------------------------------------------------------------------------------------------------------------
1161  8C73              ;
1162  8C73              ; 28/2/23
1163  8C73              ;
1164  8C73
1165  8C73              Calcula_numero_de_disparotes
1166  8C73
1167  8C73 21 50 71     	ld hl,Album_de_fotos_disparos
1168  8C76 EB           	ex de,hl
1169  8C77 2A 3E 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1170  8C7A
1171  8C7A 06 00        	ld b,0
1172  8C7C 7D           	ld a,l
1173  8C7D 93           	sub e
1174  8C7E 28 07        	jr z,1F
1175  8C80
1176  8C80              ; Nº de malotes no es "0".
1177  8C80
1178  8C80 D6 06        2 sub 6
1179  8C82 04           	inc b
1180  8C83 A7           	and a
1181  8C84 20 FA        	jr nz,2B
1182  8C86 78           	ld a,b
1183  8C87
1184  8C87 32 42 89     1 ld (Numero_de_disparotes),a
1185  8C8A C9           	ret
1186  8C8B
1187  8C8B              ; *************************************************************************************************************************************************************
1188  8C8B              ;
1189  8C8B              ; 20/10/22
1190  8C8B              ;
1191  8C8B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1192  8C8B              ;
1193  8C8B              ; Destruye el puntero y DE !!!!!
1194  8C8B
1195  8C8B 5E           Extrae_address ld e,(hl)
1196  8C8C 23           	inc hl
1197  8C8D 56           	ld d,(hl)
1198  8C8E 2B           	dec hl
1199  8C8F EB           	ex de,hl
1200  8C90 C9           	ret
1201  8C91
1202  8C91              ; *************************************************************************************************************************************************************
1203  8C91              ;
1204  8C91              ;	7/2/23
1205  8C91              ;
1206  8C91              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1207  8C91              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1208  8C91              ;
1209  8C91              ;   Destruye HL y BC !!!!!,
1210  8C91              ;
1211  8C91              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1212  8C91              ;					"0" ..... Izquierda.
1213  8C91
1214  8C91              Inicia_Puntero_objeto
1215  8C91
1216  8C91 3A DE 88     	ld a,(Cuad_objeto)
1217  8C94 E6 01        	and 1
1218  8C96 F5           	push af
1219  8C97 CC B5 8C     	call z,Inicia_puntero_objeto_izq
1220  8C9A F1           	pop af
1221  8C9B 28 2B        	jr z,1F
1222  8C9D CD A2 8C     	call Inicia_puntero_objeto_der
1223  8CA0 18 26        	jr 1F
1224  8CA2
1225  8CA2              ; Arrancamos desde la parte izquierda de la pantalla.
1226  8CA2              ; Iniciamos (Indice_Sprite_der).
1227  8CA2
1228  8CA2 2A D4 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1229  8CA5 22 D8 88     	ld (Puntero_DESPLZ_der),hl
1230  8CA8 CD 8B 8C     	call Extrae_address
1231  8CAB 22 CE 88     	ld (Puntero_objeto),hl
1232  8CAE
1233  8CAE 2A D6 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1234  8CB1 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
1235  8CB4 C9           	ret
1236  8CB5
1237  8CB5              ; Arrancamos desde la parte derecha de la pantalla.
1238  8CB5              ; Iniciamos (Indice_Sprite_izq).
1239  8CB5
1240  8CB5 2A D6 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1241  8CB8 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
1242  8CBB CD 8B 8C     	call Extrae_address
1243  8CBE 22 CE 88     	ld (Puntero_objeto),hl
1244  8CC1
1245  8CC1 2A D4 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1246  8CC4 22 D8 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1247  8CC7 C9           	ret
1248  8CC8
1249  8CC8              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1250  8CC8
1251  8CC8 21 40 83     1 ld hl,Amadeus
1252  8CCB ED 4B CE 88  	ld bc,(Puntero_objeto)
1253  8CCF B7 ED 42     	sub hl,bc
1254  8CD2 C0           	ret nz
1255  8CD3 21 F4 88     	ld hl,Ctrl_0
1256  8CD6 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1257  8CD8 C9           	ret 												; _de nuestra nave en los extremos.
1258  8CD9
1259  8CD9              ; *************************************************************************************************************************************************************
1260  8CD9              ;
1261  8CD9              ;	14/5/23
1262  8CD9              ;
1263  8CD9              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1264  8CD9              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1265  8CD9
1266  8CD9              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1267  8CD9              ;	_de la 2ª y 3ª entidad respectivamente.
1268  8CD9
1269  8CD9              Store_Restore_cajas
1270  8CD9
1271  8CD9 E5           	push hl
1272  8CDA D5           	push de
1273  8CDB C5            	push bc
1274  8CDC
1275  8CDC              ;	STORE !!!!!
1276  8CDC              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1277  8CDC
1278  8CDC 21 CA 88     	ld hl,Filas
1279  8CDF ED 5B 0A 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1280  8CE3 01 3D 00     	ld bc,61
1281  8CE6 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1282  8CE8
1283  8CE8              ; 	Entidad_sospechosa. 20/4/23
1284  8CE8
1285  8CE8 3A E3 88     	ld a,(Impacto)
1286  8CEB A7           	and a
1287  8CEC 28 0C        	jr z,1F
1288  8CEE
1289  8CEE 2A 0A 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1290  8CF1 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1291  8CF4 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1292  8CF5 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1293  8CF7 22 48 89     	ld (Entidad_sospechosa_de_colision),hl
1294  8CFA
1295  8CFA              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1296  8CFA
1297  8CFA 2A 0C 89     1 ld hl,(Puntero_restore_caja)
1298  8CFD 7E           	ld a,(hl)
1299  8CFE A7           	and a
1300  8CFF F5           	push af
1301  8D00 28 08        	jr z,2F
1302  8D02
1303  8D02 11 CA 88     	ld de,Filas
1304  8D05 01 3D 00     	ld bc,61
1305  8D08 ED B0        	ldir
1306  8D0A
1307  8D0A CD 26 8D     2 call Incrementa_punteros_de_cajas
1308  8D0D
1309  8D0D F1           	pop af
1310  8D0E 28 EA        	jr z,1B
1311  8D10
1312  8D10 C1           	pop bc
1313  8D11 D1           	pop de
1314  8D12 E1           	pop hl
1315  8D13
1316  8D13 C9           	ret
1317  8D14
1318  8D14              ; **************************************************************************************************
1319  8D14              ;
1320  8D14              ;	12/05/23
1321  8D14              ;
1322  8D14              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1323  8D14
1324  8D14 E5           Restore_entidad push hl
1325  8D15 D5           	push de
1326  8D16 C5            	push bc
1327  8D17
1328  8D17 2A 0A 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1329  8D1A 11 CA 88     	ld de,Filas
1330  8D1D 01 3D 00     	ld bc,61
1331  8D20 ED B0        	ldir
1332  8D22
1333  8D22 C1           	pop bc
1334  8D23 D1           	pop de
1335  8D24 E1           	pop hl
1336  8D25 C9           	ret
1337  8D26
1338  8D26              ; **************************************************************************************************
1339  8D26              ;
1340  8D26              ;	08/05/23
1341  8D26              ;
1342  8D26              ;	Incrementamos los dos punteros de entidades. (+1).
1343  8D26
1344  8D26              Incrementa_punteros_de_cajas
1345  8D26
1346  8D26 2A 0C 89     	ld hl,(Puntero_restore_caja)
1347  8D29 22 0A 89     	ld (Puntero_store_caja),hl
1348  8D2C 2A 0E 89     	ld hl,(Indice_restore_caja)
1349  8D2F 23           	inc hl
1350  8D30 23           	inc hl
1351  8D31 22 0E 89     	ld (Indice_restore_caja),hl
1352  8D34 CD 8B 8C         call Extrae_address
1353  8D37 22 0C 89         ld (Puntero_restore_caja),hl
1354  8D3A C9               ret
1355  8D3B
1356  8D3B              ; **************************************************************************************************
1357  8D3B              ;
1358  8D3B              ;	25/01/23
1359  8D3B              ;
1360  8D3B              ;	Restore_Amadeus
1361  8D3B              ;
1362  8D3B              ;	Cargamos en DRAW los parámetros de Amadeus.
1363  8D3B              ;
1364  8D3B
1365  8D3B E5           Restore_Amadeus	push hl
1366  8D3C D5           	push de
1367  8D3D C5            	push bc
1368  8D3E 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1369  8D41 11 CA 88     	ld de,Filas
1370  8D44 01 3D 00     	ld bc,61
1371  8D47 ED B0        	ldir
1372  8D49 C1           	pop bc
1373  8D4A D1           	pop de
1374  8D4B E1           	pop hl
1375  8D4C C9           	ret
1376  8D4D
1377  8D4D              ; *************************************************************************************************************************************************************
1378  8D4D              ;
1379  8D4D              ;	29/04/23
1380  8D4D              ;
1381  8D4D              ;	Store_Amadeus
1382  8D4D              ;
1383  8D4D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1384  8D4D              ;
1385  8D4D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1386  8D4D              ;
1387  8D4D              ;	DESTRUYE: HL y BC y DE.
1388  8D4D
1389  8D4D 21 CA 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1390  8D50 01 3D 00     	ld bc,61
1391  8D53 ED B0        	ldir
1392  8D55 C9           	ret
1393  8D56
1394  8D56              ; -----------------------------------------------------------
1395  8D56              ;
1396  8D56              ;	27/04/23
1397  8D56              ;
1398  8D56              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1399  8D56              ;
1400  8D56              ;	Destruye: HL,BC,DE,A
1401  8D56
1402  8D56 21 CA 88     Borra_datos_entidad ld hl,Filas
1403  8D59 01 3C 00     	ld bc,60
1404  8D5C AF           	xor a
1405  8D5D 77           	ld (hl),a
1406  8D5E 11 CB 88     	ld de,Filas+1
1407  8D61 ED B0        	ldir
1408  8D63 C9           	ret
1409  8D64
1410  8D64              ; -----------------------------------------------------------
1411  8D64
1412  8D64              ; Teclado.
1413  8D64
1414  8D64 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1415  8D66 DB FE        	in a,($fe)
1416  8D68 E6 01        	and $01
1417  8D6A 28 02        	jr z,1f
1418  8D6C 18 F6        	jr Pulsa_ENTER
1419  8D6E C9           1 ret
1420  8D6F
1421  8D6F              ; **************************************************************************************************
1422  8D6F              ;
1423  8D6F              ; Temporización.
1424  8D6F
1425  8D6F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1426  8D6F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1427  8D6F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1428  8D6F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1429  8D6F
1430  8D6F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1431  8D6F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1432  8D6F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1433  8D6F
1434  8D6F              ; A partir de $4f61 no hace falta DELAY.
1435  8D6F
1436  8D6F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1437  8D6F
1438  8D6F 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1439  8D72 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1440  8D73 78           	LD A,B
1441  8D74 A7           	AND A
1442  8D75 20 FB        	JR NZ,wait
1443  8D77 C9           	RET
1444  8D78
1445  8D78              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1446  8D78              ;
1447  8D78              ;	5/3/23
1448  8D78              ;
1449  8D78              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1450  8D78
1451  8D78              Movimiento_Amadeus
1452  8D78
1453  8D78              ; Disparo.
1454  8D78
1455  8D78 3A 5A 89     	ld a,(Disparo_Amadeus)
1456  8D7B A7           	and a
1457  8D7C 20 02        	jr nz,1F
1458  8D7E 18 15        	jr 2F
1459  8D80
1460  8D80 3E F7        1 ld a,$f7													; "5" para disparar.
1461  8D82 DB FE        	in a,($fe)
1462  8D84 E6 10        	and $10
1463  8D86
1464  8D86 F5           	push af
1465  8D87 CC 3D 8E     	call z,Genera_disparo
1466  8D8A F1           	pop af
1467  8D8B 20 08        	jr nz,2F
1468  8D8D
1469  8D8D 3A 5A 89     	ld a,(Disparo_Amadeus)
1470  8D90 EE 01        	xor 1
1471  8D92 32 5A 89     	ld (Disparo_Amadeus),a
1472  8D95
1473  8D95 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1474  8D97 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1475  8D99 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1476  8D9B CC 0E 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1477  8D9E
1478  8D9E 3E F7        	ld a,$f7
1479  8DA0 DB FE        	in a,($fe)
1480  8DA2 E6 01        	and $01
1481  8DA4 C8           	ret z
1482  8DA5
1483  8DA5 3E F7        	ld a,$f7
1484  8DA7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1485  8DA9 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1486  8DAB CC F0 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1487  8DAE C9           	ret
1488  8DAF
1489  8DAF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1490  8DAF              ;
1491  8DAF              ;	Rutina provisional para que los malotes cagen balas.
1492  8DAF
1493  8DAF              Detecta_disparo_entidad
1494  8DAF
1495  8DAF 3A 5D 89     	ld a,(Disparo_entidad)
1496  8DB2 A7           	and a
1497  8DB3 C8           	ret z
1498  8DB4
1499  8DB4              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1500  8DB4
1501  8DB4              ;	ld a,$7f				; Detecta SPACE.
1502  8DB4              ;	in a,($fe)
1503  8DB4              ;	and 1
1504  8DB4              ;	ret nz
1505  8DB4
1506  8DB4              ;	call Genera_disparo
1507  8DB4 C9           	ret
1508  8DB5
1509  8DB5              ; ----------------------------------------------------------------------
1510  8DB5              ;
1511  8DB5              ;	8/9/23
1512  8DB5
1513  8DB5 2A 26 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1514  8DB8 2B            	dec hl
1515  8DB9 7E           	ld a,(hl)
1516  8DBA A7           	and a
1517  8DBB C8           	ret z										; Salimos si es álbum está vacío.
1518  8DBC
1519  8DBC 11 E9 88     	ld de,Variables_de_borrado+5
1520  8DBF 01 06 00     	ld bc,6
1521  8DC2 ED B8        	lddr
1522  8DC4 C9           	ret
1523  8DC5
1524  8DC5              ; ----------------------------------------------------------------------
1525  8DC5              ;
1526  8DC5              ;	9/9/23
1527  8DC5
1528  8DC5              Repone_datos_de_borrado_Amadeus
1529  8DC5
1530  8DC5 21 E4 88     	ld hl,Variables_de_borrado
1531  8DC8 11 A0 72     	ld de,Album_de_fotos_Amadeus
1532  8DCB 01 06 00     	ld bc,6
1533  8DCE ED B0        	ldir
1534  8DD0
1535  8DD0 EB           	ex de,hl
1536  8DD1 22 26 89     	ld (End_Snapshot_Amadeus),hl
1537  8DD4
1538  8DD4 C9           	ret
1539  8DD5
1540  8DD5              ; ----------------------------------------------------------------------
1541  8DD5              ;
1542  8DD5              ;	27/10/23
1543  8DD5              ;
1544  8DD5
1545  8DD5              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1546  8DD5              ;	_ Album_de_fotos correspondiente.
1547  8DD5
1548  8DD5              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1549  8DD5              ;	_ durante el proceso de escritura.
1550  8DD5
1551  8DD5              Repone_datos_de_borrado
1552  8DD5
1553  8DD5 F3           	di
1554  8DD6 ED 5B 1E 89  	ld de,(Stack_snapshot)
1555  8DDA 21 E4 88     	ld hl,Variables_de_borrado
1556  8DDD 01 06 00     	ld bc,6
1557  8DE0 ED B0        	ldir
1558  8DE2 FB           	ei
1559  8DE3
1560  8DE3 EB           	ex de,hl
1561  8DE4 22 1E 89     	ld (Stack_snapshot),hl
1562  8DE7
1563  8DE7 C9           	ret
1564  8DE8
1565  8DE8              ; ----------------------------------------------------------------------
1566  8DE8              ;
1567  8DE8              ;	11/8/23
1568  8DE8
1569  8DE8              Gestiona_entidades
1570  8DE8
1571  8DE8              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1572  8DE8
1573  8DE8 3A 40 89     	ld a,(Semaforo)
1574  8DEB CB 47        	bit 0,a
1575  8DED 28 FE        	jr z,$												;! STOP el buffer está vacío.
1576  8DEF C8           	ret z
1577  8DF0
1578  8DF0              ;	call Extrae_foto_disparos
1579  8DF0              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1580  8DF0
1581  8DF0 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1582  8DF3
1583  8DF3              ;	BUFFER vacío ??????
1584  8DF3              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1585  8DF3
1586  8DF3 3A 41 89     	ld a,(Ctrl_Semaforo)
1587  8DF6 CB 67        	bit 4,a
1588  8DF8 28 05        	jr z,1F
1589  8DFA
1590  8DFA              ;! Buffer vacío. Inicializar (Ctrl_Semaforo) y salir sin modificar punteros.
1591  8DFA
1592  8DFA AF           	xor a
1593  8DFB 32 41 89     	ld (Ctrl_Semaforo),a
1594  8DFE C9           	ret
1595  8DFF
1596  8DFF CB 47        1 bit 0,a
1597  8E01 C0           	ret nz
1598  8E02
1599  8E02              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1600  8E02              ; Nos situamos al comienzo del último álbum.
1601  8E02
1602  8E02 CD 46 73     	call Modifica_Stack_snapshot
1603  8E05
1604  8E05 C9           	ret
1605  8E06
1606  8E06              ; -----------------------------------------------------------------------------------
1607  8E06
1608  8E06              Pinta_Amadeus
1609  8E06
1610  8E06 3E 06        	ld a,6
1611  8E08 D3 FE            out ($fe),a										; Amarillo
1612  8E0A
1613  8E0A CD 57 8C        	call Calcula_malotes_Amadeus
1614  8E0D CD C3 96     	call Extrae_foto_Amadeus
1615  8E10 CD 13 8C     	call Limpia_album_Amadeus
1616  8E13
1617  8E13 C9           	ret
1618  8E14
1619  8E14              Pinta_entidades
1620  8E14
1621  8E14 3A 40 89     	ld a,(Semaforo)
1622  8E17 CB 47        	bit 0,a
1623  8E19 C8           	ret z
1624  8E1A
1625  8E1A              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1626  8E1A
1627  8E1A CD 3B 8C     	call Calcula_numero_de_malotes
1628  8E1D CD 41 96     	call Extrae_foto_entidades
1629  8E20
1630  8E20 C9           	ret
1631  8E21
1632  8E21              ; -----------------------------------------------------------------------------------
1633  8E21              ;
1634  8E21              ;	8/11/23
1635  8E21
1636  8E21              Actualiza_relojes
1637  8E21
1638  8E21 21 55 89     	ld hl,Contador_de_frames
1639  8E24 34           	inc (hl)
1640  8E25
1641  8E25              ; ---------------------------------------------------------------
1642  8E25              ;
1643  8E25              ;	27/9/23
1644  8E25
1645  8E25              Guarda_parametros_DRAW
1646  8E25
1647  8E25 21 CA 88     	ld hl,Filas
1648  8E28 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1649  8E2B 01 3D 00     	ld bc,61
1650  8E2E ED B0        	ldir
1651  8E30 C9           	ret
1652  8E31
1653  8E31              Recupera_parametros_DRAW
1654  8E31
1655  8E31 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1656  8E34 11 CA 88     	ld de,Filas
1657  8E37 01 3D 00     	ld bc,61
1658  8E3A ED B0        	ldir
1659  8E3C C9           	ret
1660  8E3D
1661  8E3D              ; ---------------------------------------------------------------
1662  8E3D
1663  8E3D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E3D              ; ******************************************************************************************************************************************************************************************
   2+ 8E3D              ;
   3+ 8E3D              ;   21/07/23
   4+ 8E3D              ;
   5+ 8E3D              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E3D              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E3D              ;
   8+ 8E3D              ;
   9+ 8E3D              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E3D              ;
  11+ 8E3D              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E3D              ;               _ hacen las entidades hacia abajo.
  13+ 8E3D              ;
  14+ 8E3D              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E3D              ;
  16+ 8E3D              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E3D              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E3D              ;
  19+ 8E3D              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E3D              ;           _ la bala.
  21+ 8E3D              ;
  22+ 8E3D              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E3D              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E3D              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E3D              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E3D              ;           _ en el momento de generarse la bala)).
  27+ 8E3D
  28+ 8E3D              Genera_disparo
  29+ 8E3D
  30+ 8E3D              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E3D              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E3D              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E3D              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E3D              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E3D              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E3D              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E3D
  38+ 8E3D              ; Exclusiones:
  39+ 8E3D
  40+ 8E3D 3A E2 88         ld a,(Vel_down)
  41+ 8E40 47               ld b,a
  42+ 8E41 3A 54 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E44 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E45 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E46 3A 01 89         ld a,(Columnas)
  46+ 8E49 47               ld b,a
  47+ 8E4A 3A CB 88         ld a,(Columns)
  48+ 8E4D B8               cp b
  49+ 8E4E C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E4F
  51+ 8E4F              ; ----- ----- -----
  52+ 8E4F
  53+ 8E4F 3A F4 88         ld a,(Ctrl_0)
  54+ 8E52 CB 77            bit 6,a
  55+ 8E54 20 06            jr nz,14F
  56+ 8E56
  57+ 8E56 3A D1 88         ld a,(Coordenada_y)
  58+ 8E59 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E5B D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E5C
  61+ 8E5C 21 00 80     14 ld hl,Indice_disparo
  62+ 8E5F 3A D2 88         ld a,(CTRL_DESPLZ)
  63+ 8E62 4F               ld c,a
  64+ 8E63 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E65              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E65              ;                                            ""        ""       "f9", B="1"
  67+ 8E65              ;                                            ""        ""       "fb", B="2"
  68+ 8E65              ;                                            ""        ""       "fb", B="3"
  69+ 8E65 A7               and a
  70+ 8E66 28 10            jr z,1F
  71+ 8E68 E6 01            and 1
  72+ 8E6A C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E6B
  74+ 8E6B 79               ld a,c
  75+ 8E6C 16 F9            ld d,$f9
  76+ 8E6E 23           2 inc hl
  77+ 8E6F 23               inc hl
  78+ 8E70 04               inc b
  79+ 8E71 BA               cp d
  80+ 8E72 28 04            jr z,1F
  81+ 8E74 14               inc d
  82+ 8E75 14               inc d
  83+ 8E76 18 F6            jr 2B
  84+ 8E78
  85+ 8E78 CD 8B 8C     1 call Extrae_address
  86+ 8E7B E5               push hl
  87+ 8E7C FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E7E DD 21 09 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E82
  90+ 8E82              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E82              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E82
  93+ 8E82 3A F4 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E85 CB 77            bit 6,a
  95+ 8E87 20 04            jr nz,19F
  96+ 8E89
  97+ 8E89 AF               xor a
  98+ 8E8A 32 5D 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E8D
 100+ 8E8D 3A DE 88     19 ld a,(Cuad_objeto)
 101+ 8E90 FE 02            cp 2
 102+ 8E92 38 66            jr c,3F
 103+ 8E94 28 64            jr z,3F
 104+ 8E96
 105+ 8E96              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E96
 107+ 8E96 E6 01            and 1
 108+ 8E98 28 30            jr z,4F
 109+ 8E9A
 110+ 8E9A              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E9A              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E9A              ;
 113+ 8E9A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E9A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E9A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E9A
 117+ 8E9A 2A CC 88     	ld hl,(Posicion_actual)
 118+ 8E9D
 119+ 8E9D              ;   Amadeus o entidad ???.
 120+ 8E9D
 121+ 8E9D 3A F4 88         ld a,(Ctrl_0)
 122+ 8EA0 CB 77            bit 6,a
 123+ 8EA2 28 0A            jr z,8F
 124+ 8EA4
 125+ 8EA4              ; 	Dispara Amadeus.
 126+ 8EA4
 127+ 8EA4 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EA6 CD 32 96         call PreviousScan
 129+ 8EA9 CD 32 96         call PreviousScan
 130+ 8EAC
 131+ 8EAC              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EAC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EAC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EAC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EAC
 136+ 8EAC 18 11            jr 10F
 137+ 8EAE
 138+ 8EAE              ; 	Dispara Entidad.
 139+ 8EAE
 140+ 8EAE 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EB1              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EB1
 143+ 8EB1              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EB1              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EB1
 146+ 8EB1 C5               push bc
 147+ 8EB2 06 10            ld b,16
 148+ 8EB4 CD 23 96     9 call NextScan
 149+ 8EB7 10 FB            djnz 9B
 150+ 8EB9 C1               pop bc
 151+ 8EBA CD 24 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EBD 18 06            jr 17F
 153+ 8EBF
 154+ 8EBF              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EBF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EBF              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EBF              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EBF
 159+ 8EBF CD 24 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EC2 CD 99 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EC5              ;                                                      ; _al generar el disparo.
 162+ 8EC5
 163+ 8EC5              ; 	LLegados a este punto tendremos:
 164+ 8EC5              ;
 165+ 8EC5              ;       Puntero_objeto_disparo en IY.
 166+ 8EC5              ;       Rutinas_de_impresion en IX.
 167+ 8EC5              ;       Puntero_de_impresion en HL.
 168+ 8EC5              ;       Impacto/Dirección en BC.
 169+ 8EC5
 170+ 8EC5 CD 2C 8F     17 call Almacena_disparo
 171+ 8EC8 18 52            jr 6F                                             ; RET.
 172+ 8ECA
 173+ 8ECA              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8ECA              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8ECA              ;
 176+ 8ECA              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8ECA              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8ECA              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8ECA
 180+ 8ECA 2A CC 88     4 ld hl,(Posicion_actual)
 181+ 8ECD
 182+ 8ECD              ;   Amadeus o entidad ???.
 183+ 8ECD
 184+ 8ECD 3A F4 88         ld a,(Ctrl_0)
 185+ 8ED0 CB 77            bit 6,a
 186+ 8ED2 28 0A            jr z,11F
 187+ 8ED4
 188+ 8ED4              ; 	Dispara Amadeus.
 189+ 8ED4
 190+ 8ED4 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ED6 CD 32 96         call PreviousScan
 192+ 8ED9 CD 32 96         call PreviousScan
 193+ 8EDC
 194+ 8EDC              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EDC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EDC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EDC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EDC
 199+ 8EDC 18 11            jr 13F
 200+ 8EDE
 201+ 8EDE              ; 	Dispara Entidad.
 202+ 8EDE
 203+ 8EDE 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EE1              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EE1
 206+ 8EE1              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EE1              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EE1
 209+ 8EE1 C5               push bc
 210+ 8EE2 06 10            ld b,16
 211+ 8EE4 CD 23 96     12 call NextScan
 212+ 8EE7 10 FB            djnz 12B
 213+ 8EE9 C1               pop bc
 214+ 8EEA
 215+ 8EEA CD 1D 8F         call Ajusta_disparo_parte_derecha
 216+ 8EED 18 06            jr 18F
 217+ 8EEF
 218+ 8EEF              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EEF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EEF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EEF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EEF
 223+ 8EEF CD 1D 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EF2 CD 99 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EF5              ;                                                       ; _al generar el disparo.
 226+ 8EF5
 227+ 8EF5              ; LLegados a este punto tendremos:
 228+ 8EF5              ;
 229+ 8EF5              ;       Puntero_objeto_disparo en IY.
 230+ 8EF5              ;       Rutinas_de_impresion en IX.
 231+ 8EF5              ;       Puntero_de_impresion en HL.
 232+ 8EF5              ;       Impacto/Dirección en BC.
 233+ 8EF5
 234+ 8EF5 CD 2C 8F     18 call Almacena_disparo
 235+ 8EF8 18 22            jr 6F                                               ; RET.
 236+ 8EFA
 237+ 8EFA              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EFA
 239+ 8EFA 28 11        3 jr z,5F
 240+ 8EFC
 241+ 8EFC              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EFC              ;
 243+ 8EFC              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EFC              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EFC              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EFC              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EFC
 248+ 8EFC              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EFC              ;	   ""        ""       "f9", B="1"
 250+ 8EFC              ;	   ""        ""       "fb", B="2"
 251+ 8EFC              ; 	   ""        ""       "fb", B="3"
 252+ 8EFC
 253+ 8EFC 2A CC 88     	ld hl,(Posicion_actual)
 254+ 8EFF CD 23 96     	call NextScan
 255+ 8F02
 256+ 8F02              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F02              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F02              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F02              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F02
 261+ 8F02 CD 24 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F05
 263+ 8F05              ; 	No se produce impacto. B="$80"
 264+ 8F05              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F05
 266+ 8F05 01 80 80         ld bc,$8080
 267+ 8F08
 268+ 8F08              ; 	LLegados a este punto tendremos:
 269+ 8F08              ;
 270+ 8F08              ;       Puntero_objeto_disparo en IY.
 271+ 8F08              ;       Rutinas_de_impresion en IX.
 272+ 8F08              ;       Puntero_de_impresion en HL.
 273+ 8F08              ;       Impacto/Dirección en BC.
 274+ 8F08
 275+ 8F08 CD 2C 8F         call Almacena_disparo
 276+ 8F0B 18 0F            jr 6F                                           ; RET.
 277+ 8F0D
 278+ 8F0D              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F0D              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F0D              ;
 281+ 8F0D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F0D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F0D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F0D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F0D
 286+ 8F0D 2A CC 88     5 ld hl,(Posicion_actual)
 287+ 8F10 CD 23 96     	call NextScan
 288+ 8F13
 289+ 8F13              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F13              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F13              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F13              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F13
 294+ 8F13 CD 1D 8F         call Ajusta_disparo_parte_derecha
 295+ 8F16
 296+ 8F16              ; 	No se produce impacto. B="$80"
 297+ 8F16              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F16
 299+ 8F16 01 80 80     15 ld bc,$8080
 300+ 8F19
 301+ 8F19              ; 	LLegados a este punto tendremos:
 302+ 8F19              ;
 303+ 8F19              ;       Puntero_objeto_disparo en IY.
 304+ 8F19              ;       Rutinas_de_impresion en IX.
 305+ 8F19              ;       Puntero_de_impresion en HL.
 306+ 8F19              ;       Impacto/Dirección en BC.
 307+ 8F19
 308+ 8F19 CD 2C 8F         call Almacena_disparo
 309+ 8F1C
 310+ 8F1C C9           6 ret
 311+ 8F1D
 312+ 8F1D              ; ----------------------------------------------------------------
 313+ 8F1D              ;
 314+ 8F1D              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F1D              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F1D              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F1D
 318+ 8F1D 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F1E FE 02            cp 2
 320+ 8F20 38 01            jr c,1F
 321+ 8F22 23               inc hl
 322+ 8F23 C9           1 ret
 323+ 8F24
 324+ 8F24 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F25 FE 01        	cp 1
 326+ 8F27 20 01        	jr nz,1F
 327+ 8F29 2B           	dec hl
 328+ 8F2A 2B           1 dec hl
 329+ 8F2B C9               ret
 330+ 8F2C
 331+ 8F2C              ; ----------------------------------------------------------------
 332+ 8F2C              ;
 333+ 8F2C              ;   25/02/23
 334+ 8F2C              ;
 335+ 8F2C              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F2C              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F2C              ;
 338+ 8F2C              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F2C              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F2C
 341+ 8F2C              Almacena_disparo
 342+ 8F2C
 343+ 8F2C E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F2D F1               pop af
 345+ 8F2E 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F2F
 347+ 8F2F 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F30 E6 01            and 1
 349+ 8F32 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F34              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F34              ; 	Dispara AMADEUS.
 352+ 8F34
 353+ 8F34              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F34              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F34              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F34              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F34
 358+ 8F34 C5               push bc
 359+ 8F35 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F38 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F3B A7               and a
 362+ 8F3C ED 42            sbc hl,bc
 363+ 8F3E CC 0C 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F41 C1               pop bc
 365+ 8F42 28 54            jr z,4F
 366+ 8F44
 367+ 8F44 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F47 23               inc hl
 369+ 8F48 23               inc hl
 370+ 8F49 22 45 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F4C              ;                                                   ; _ Disparo_(+1).
 372+ 8F4C 18 18            jr 2F
 373+ 8F4E
 374+ 8F4E              ; Dispara una entidad.
 375+ 8F4E
 376+ 8F4E C5           1 push bc
 377+ 8F4F 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F52 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F55 A7               and a
 380+ 8F56 ED 42            sbc hl,bc
 381+ 8F58 CC 05 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F5B C1               pop bc
 383+ 8F5C 28 3A            jr z,4F
 384+ 8F5E
 385+ 8F5E 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F61 23               inc hl
 387+ 8F62 23               inc hl
 388+ 8F63 22 43 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F66              ;                                                   ; _ Disparo_(+1).
 390+ 8F66 CD 8B 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F69              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F69              ;
 393+ 8F69              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F69              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F69              ;                                                     Puntero_de_impresion en HL.
 396+ 8F69              ;                                                     Impacto/Dirección en BC.
 397+ 8F69
 398+ 8F69 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F6A 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F6B 23               inc hl                                          ; _ al siguiente.
 401+ 8F6C A7               and a
 402+ 8F6D 20 C0            jr nz,3B
 403+ 8F6F
 404+ 8F6F 08               ex af,af
 405+ 8F70 ED 73 18 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F74 F9               ld sp,hl
 407+ 8F75
 408+ 8F75 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F77 F5               push af                                         ; Puntero de impresión.
 410+ 8F78 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F7A C5               push bc                                         ; Control.
 412+ 8F7B
 413+ 8F7B ED 7B 18 89      ld sp,(Stack)
 414+ 8F7F
 415+ 8F7F              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F7F
 417+ 8F7F 21 07 89     	ld hl,Ctrl_1
 418+ 8F82 CB C6        	set 0,(hl)
 419+ 8F84
 420+ 8F84 DD E5        	push ix
 421+ 8F86 E1               pop hl
 422+ 8F87 F5               push af
 423+ 8F88 DD E1            pop ix
 424+ 8F8A
 425+ 8F8A CD A0 7F     	call Guarda_foto_registros
 426+ 8F8D
 427+ 8F8D 21 07 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F90 CB 86        	res 0,(hl)
 429+ 8F92
 430+ 8F92              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F92              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F92
 433+ 8F92 CD 0C 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F95 CD 05 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8F98
 436+ 8F98 C9           4 ret
 437+ 8F99
 438+ 8F99              ; ----------------------------------------------------------------
 439+ 8F99              ;
 440+ 8F99              ;   4/3/23
 441+ 8F99              ;
 442+ 8F99              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F99              ;   _ al generarse el disparo.
 444+ 8F99              ;
 445+ 8F99              ;       "$80" ..... No se produce colisión.
 446+ 8F99              ;       "$81" ..... Se produce colisión.
 447+ 8F99              ;
 448+ 8F99              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F99              ;         _ que forman el disparo.
 450+ 8F99
 451+ 8F99
 452+ 8F99              Comprueba_Colision
 453+ 8F99
 454+ 8F99              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F99
 456+ 8F99 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F9B E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F9C
 459+ 8F9C CD D2 8F         call Modifica_H_Velocidad_disparo
 460+ 8F9F
 461+ 8F9F 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FA0 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FA2 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FA4
 465+ 8FA4 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FA6 CD C2 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FA9
 468+ 8FA9 7B               ld a,e
 469+ 8FAA E6 01            and 1
 470+ 8FAC 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FAE              ;                                                  ; _ para activar IMPACTO.
 472+ 8FAE E1               pop hl
 473+ 8FAF E5               push hl
 474+ 8FB0 CD 23 96         call NextScan
 475+ 8FB3
 476+ 8FB3 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FB4 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FB6 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FB8              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FB8 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FBA CD C2 8F         call Bucle_2
 482+ 8FBD
 483+ 8FBD 43           1 ld b,e
 484+ 8FBE E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FBF FD E1            pop iy
 486+ 8FC1 C9               ret
 487+ 8FC2
 488+ 8FC2              ; ---------- ----------
 489+ 8FC2
 490+ 8FC2 06 02        Bucle_2 ld b,2
 491+ 8FC4 FD 7E 00     2 ld a,(iy)
 492+ 8FC7 A6               and (hl)
 493+ 8FC8 28 02            jr z,1F
 494+ 8FCA 1E 81            ld e,$81
 495+ 8FCC 23           1 inc hl
 496+ 8FCD FD 23            inc iy
 497+ 8FCF 10 F3            djnz 2B
 498+ 8FD1 C9               ret
 499+ 8FD2
 500+ 8FD2              ; ---------- ----------
 501+ 8FD2              ;
 502+ 8FD2              ;   21/7/23
 503+ 8FD2
 504+ 8FD2              Modifica_H_Velocidad_disparo
 505+ 8FD2
 506+ 8FD2 3A 54 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FD5 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FD7 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FD8 24               inc h
 510+ 8FD9
 511+ 8FD9 C9               ret
 512+ 8FDA
 513+ 8FDA              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FDA              ;
 515+ 8FDA              ;   11/04/23
 516+ 8FDA              ;
 517+ 8FDA              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FDA              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FDA              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FDA              ;
 521+ 8FDA              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FDA
 523+ 8FDA              Compara_coordenadas_X
 524+ 8FDA
 525+ 8FDA              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FDA              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FDA
 528+ 8FDA              ; Preparamos registros:
 529+ 8FDA
 530+ 8FDA 21 D0 88         ld hl,Filas+6
 531+ 8FDD 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FDE 23               inc hl
 533+ 8FDF 23               inc hl
 534+ 8FE0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FE1 43               ld b,e
 536+ 8FE2
 537+ 8FE2 21 DE 88         ld hl,Filas+20
 538+ 8FE5 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FE6 21 4F 89         ld hl,Coordenadas_X_Entidad
 540+ 8FE9 CD 05 92         call Guarda_coordenadas_X
 541+ 8FEC
 542+ 8FEC              ; Preparamos registros:
 543+ 8FEC
 544+ 8FEC 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FEF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FF0 23               inc hl
 547+ 8FF1 23               inc hl
 548+ 8FF2 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FF3 7B               ld a,e
 550+ 8FF4 08               ex af,af'
 551+ 8FF5 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FF8 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FF9 21 4C 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FFC CD 05 92         call Guarda_coordenadas_X
 555+ 8FFF
 556+ 8FFF              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FFF              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FFF
 559+ 8FFF 04               inc b
 560+ 9000 05               dec b
 561+ 9001 28 04            jr z,1F
 562+ 9003 06 03            ld b,3
 563+ 9005 18 02            jr 2F
 564+ 9007 06 02        1 ld b,2
 565+ 9009 08           2 ex af,af'
 566+ 900A 3C               inc a
 567+ 900B 3D               dec a
 568+ 900C 28 04            jr z,5F
 569+ 900E 0E 03            ld c,3
 570+ 9010 18 02            jr 6F
 571+ 9012 0E 02        5 ld c,2
 572+ 9014 79           6 ld a,c
 573+ 9015 08               ex af,af'
 574+ 9016 11 4F 89         ld de,Coordenadas_X_Entidad
 575+ 9019 1A           4 ld a,(de)
 576+ 901A 21 4C 89         ld hl,Coordenadas_X_Amadeus
 577+ 901D BE           3 cp (hl)
 578+ 901E 28 0E            jr z,7F
 579+ 9020 23               inc hl
 580+ 9021 0D               dec c
 581+ 9022 20 F9            jr nz,3B
 582+ 9024 13               inc de
 583+ 9025 08               ex af,af'
 584+ 9026 4F               ld c,a
 585+ 9027 08               ex af,af'
 586+ 9028 10 EF            djnz 4B
 587+ 902A
 588+ 902A              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 902A
 590+ 902A CD 41 92     8 call Limpia_Coordenadas_X
 591+ 902D C9               ret
 592+ 902E
 593+ 902E 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9030 32 E3 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9033 21 47 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9036 CB D6            set 2,(hl)
 597+ 9038 18 F0            jr 8B
 598+ 903A
 599+ 903A              ; -----------------------------------------------------------------------
 600+ 903A              ;
 601+ 903A              ;   17/04/23
 602+ 903A              ;
 603+ 903A
 604+ 903A              Detecta_colision_nave_entidad
 605+ 903A
 606+ 903A              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 903A
 608+ 903A 2A CC 88         ld hl,(Posicion_actual)
 609+ 903D CD 7E 95         call Calcula_puntero_de_impresion
 610+ 9040
 611+ 9040              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9040              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9040
 614+ 9040 DD E5            push ix
 615+ 9042 E1               pop hl
 616+ 9043 E5               push hl
 617+ 9044
 618+ 9044              ; ----- ----- -----
 619+ 9044 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9046 06 0A            ld b,10
 621+ 9048 CD 78 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 904B 7B               ld a,e
 623+ 904C FE 05            cp 5
 624+ 904E 38 0E            jr c,3F
 625+ 9050
 626+ 9050              ; LLegados a este punto:
 627+ 9050              ;
 628+ 9050              ;   HAY COLISIÓN !!!!!.
 629+ 9050              ;
 630+ 9050              ;   .db (Impacto) de Amadeus a "1".
 631+ 9050              ;   SET el bit3 de (Impacto2).
 632+ 9050              ;
 633+ 9050              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9050
 635+ 9050 21 B7 85         ld hl,Amadeus_db+25
 636+ 9053 36 01            ld (hl),1
 637+ 9055 21 47 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9058 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 905A CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 905C 18 18            jr 1F
 641+ 905E
 642+ 905E              ; -----
 643+ 905E
 644+ 905E E1           3 pop hl
 645+ 905F CD 23 96         call NextScan
 646+ 9062 E5               push hl
 647+ 9063 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9064 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9066 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9068 30 0C            jr nc,1F
 651+ 906A              ;                                                  ; _ 2º scanline si esto es así.
 652+ 906A 10 DC            djnz 2B
 653+ 906C
 654+ 906C              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 906C
 656+ 906C              ; LLegados a este punto:
 657+ 906C              ;
 658+ 906C              ;   NO HAY COLISIÓN !!!!!.
 659+ 906C              ;
 660+ 906C              ;   .db (Impacto) de Amadeus a "0".
 661+ 906C              ;   RES el bit2 de (Impacto2).
 662+ 906C              ;
 663+ 906C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 906C              ;   Lo colocamos a "0".
 665+ 906C
 666+ 906C 21 47 89         ld hl,Impacto2
 667+ 906F CB 96            res 2,(hl)
 668+ 9071 2A 48 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9074 36 00            ld (hl),0
 670+ 9076
 671+ 9076 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9077 C9               ret
 673+ 9078
 674+ 9078               ; ---------- ----------
 675+ 9078
 676+ 9078 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9079 3A CB 88         ld a,(Columns)
 678+ 907C 47               ld b,a
 679+ 907D FD 7E 00     2 ld a,(iy)
 680+ 9080 BE               cp (hl)
 681+ 9081 28 01            jr z,1F
 682+ 9083
 683+ 9083 1C               inc e
 684+ 9084
 685+ 9084 23           1 inc hl
 686+ 9085 FD 23            inc iy
 687+ 9087 10 F4            djnz 2B
 688+ 9089 C1               pop bc
 689+ 908A C9               ret
 690+ 908B
 691+ 908B              ; -------------------------------------------------------------------------------------------------------------
 692+ 908B              ;
 693+ 908B              ;   13/03/23
 694+ 908B              ;
 695+ 908B              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 908B              ;
 697+ 908B              ;   DESTRUYE: HL,BC,DE y A.
 698+ 908B
 699+ 908B 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 908E 7E               ld a,(hl)
 701+ 908F A7               and a
 702+ 9090 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9091
 704+ 9091 44               ld b,h
 705+ 9092 4D               ld c,l
 706+ 9093 2A 20 89         ld hl,(Stack_snapshot_disparos)
 707+ 9096 E5               push hl
 708+ 9097 A7               and a
 709+ 9098 ED 42            sbc hl,bc
 710+ 909A E5               push hl
 711+ 909B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 909C
 713+ 909C E1               pop hl
 714+ 909D 54               ld d,h
 715+ 909E 5D               ld e,l
 716+ 909F 1B               dec de
 717+ 90A0 ED B8            lddr                                                ; Limpiamos.
 718+ 90A2
 719+ 90A2 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90A5 22 20 89         ld (Stack_snapshot_disparos),hl
 721+ 90A8
 722+ 90A8 C9               ret
 723+ 90A9
 724+ 90A9              ; -------------------------------------------------------------------------------------------------------------
 725+ 90A9              ;
 726+ 90A9              ;   18/07/23
 727+ 90A9              ;
 728+ 90A9
 729+ 90A9              Motor_de_disparos
 730+ 90A9
 731+ 90A9              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90A9
 733+ 90A9 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90AC 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90AF
 736+ 90AF CD 8B 8C     2 call Extrae_address
 737+ 90B2 7E               ld a,(hl)
 738+ 90B3 A7               and a
 739+ 90B4 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90B6
 741+ 90B6              ; ----- ----- ----- ----- ----- -----
 742+ 90B6
 743+ 90B6 C5               push bc
 744+ 90B7 CD 7B 91         call foto_disparo_a_borrar
 745+ 90BA
 746+ 90BA              ; Existe colisión con este disparo???
 747+ 90BA
 748+ 90BA 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90BB 7E               ld a,(hl)
 750+ 90BC 2B               dec hl
 751+ 90BD E6 01            and 1
 752+ 90BF 28 1D            jr z,9F
 753+ 90C1
 754+ 90C1              ;   En este punto:
 755+ 90C1              ;
 756+ 90C1              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90C1              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90C1              ;   _con la entidad).
 759+ 90C1              ;
 760+ 90C1              ;   Disparo_2A defw 0                                ; Control.
 761+ 90C1              ;    defw 0                                          ; Puntero objeto.
 762+ 90C1              ;    defw 0                                          ; Puntero de impresión.
 763+ 90C1              ;    defw 0                                          ; Rutina de impresión.
 764+ 90C1
 765+ 90C1 E5               push hl
 766+ 90C2
 767+ 90C2 06 04            ld b,4
 768+ 90C4 23           19 inc hl
 769+ 90C5 10 FD            djnz 19B
 770+ 90C7
 771+ 90C7 CD 8B 8C         call Extrae_address
 772+ 90CA CD EC 9C         call Genera_coordenadas_disparo
 773+ 90CD
 774+ 90CD              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90CD
 776+ 90CD 21 4A 89         ld hl,Coordenadas_disparo_certero
 777+ 90D0 72               ld (hl),d
 778+ 90D1 23               inc hl
 779+ 90D2 73               ld (hl),e
 780+ 90D3
 781+ 90D3              ; Elimino el disparo de la base de datos.
 782+ 90D3
 783+ 90D3 E1               pop hl
 784+ 90D4 CD FA 91         call Elimina_disparo_de_base_de_datos
 785+ 90D7 21 47 89         ld hl,Impacto2
 786+ 90DA CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90DC
 788+ 90DC 18 06            jr 11F
 789+ 90DE
 790+ 90DE CD A4 91     9 call Mueve_disparo
 791+ 90E1 CD 7B 91         call foto_disparo_a_borrar
 792+ 90E4
 793+ 90E4 C1           11 pop bc
 794+ 90E5 18 04            jr 7F
 795+ 90E7
 796+ 90E7              ; ----- ----- ----- ----- ----- -----
 797+ 90E7
 798+ 90E7 ED 42        1 sbc hl,bc
 799+ 90E9 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90EB
 801+ 90EB 2A 45 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90EE 23               inc hl
 803+ 90EF 23               inc hl
 804+ 90F0 22 45 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90F3 18 BA            jr 2B
 806+ 90F5
 807+ 90F5 CD 0C 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90F8              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90F8
 810+ 90F8              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90F8
 812+ 90F8 01 8A 85         ld bc,Disparo_11
 813+ 90FB 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90FE
 815+ 90FE CD 8B 8C     5 call Extrae_address
 816+ 9101 7E               ld a,(hl)
 817+ 9102 A7               and a
 818+ 9103 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9105
 820+ 9105              ; ----- ----- ----- ----- ----- -----
 821+ 9105
 822+ 9105 C5               push bc
 823+ 9106 CD 7B 91         call foto_disparo_a_borrar
 824+ 9109
 825+ 9109              ; Existe colisión con este disparo???
 826+ 9109
 827+ 9109 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 910A 7E               ld a,(hl)
 829+ 910B 2B               dec hl
 830+ 910C E6 01            and 1
 831+ 910E 28 4D            jr z,10F
 832+ 9110
 833+ 9110              ;! La colisión se produce con Amadeus???
 834+ 9110              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9110
 836+ 9110 E5               push hl
 837+ 9111
 838+ 9111 06 04            ld b,4
 839+ 9113 23           16 inc hl
 840+ 9114 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9116
 842+ 9116 CD 8B 8C         call Extrae_address
 843+ 9119 CD EC 9C         call Genera_coordenadas_disparo
 844+ 911C
 845+ 911C 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 911D FE 16            cp $16
 847+ 911F 38 2A            jr c,15F
 848+ 9121
 849+ 9121
 850+ 9121              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9121
 852+ 9121 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9122
 854+ 9122              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9122
 856+ 9122
 857+ 9122 2A 52 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9125
 859+ 9125              ; Coordenada X de Amadeus en D.
 860+ 9125
 861+ 9125 7D               ld a,l
 862+ 9126 E6 1F            and $1F
 863+ 9128 57               ld d,a
 864+ 9129
 865+ 9129 21 A6 85         ld hl,Amadeus_db+8
 866+ 912C 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 912D
 868+ 912D 21 4C 89         ld hl,Coordenadas_X_Amadeus
 869+ 9130 CD 05 92         call Guarda_coordenadas_X
 870+ 9133
 871+ 9133 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9134
 873+ 9134              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9134
 875+ 9134 06 02            ld b,2
 876+ 9136 C5           20 push bc
 877+ 9137
 878+ 9137 06 03            ld b,3
 879+ 9139 21 4C 89         ld hl,Coordenadas_X_Amadeus
 880+ 913C 7E           18 ld a,(hl)
 881+ 913D BA               cp d
 882+ 913E 20 04            jr nz,17F
 883+ 9140
 884+ 9140              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9140
 886+ 9140 C1               pop bc
 887+ 9141 E1               pop hl
 888+ 9142 18 0D            jr 14F
 889+ 9144
 890+ 9144 23           17 inc hl
 891+ 9145 10 F5            djnz 18B
 892+ 9147
 893+ 9147 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9148
 895+ 9148 C1               pop bc
 896+ 9149 10 EB            djnz 20B
 897+ 914B
 898+ 914B
 899+ 914B              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 914B              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 914B
 902+ 914B E1           15 pop hl
 903+ 914C 23               inc hl
 904+ 914D 35               dec (hl)
 905+ 914E 2B               dec hl
 906+ 914F 18 0C            jr 10F
 907+ 9151
 908+ 9151              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9151              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9151
 911+ 9151 E5           14 push hl
 912+ 9152 CD FA 91         call Elimina_disparo_de_base_de_datos
 913+ 9155 21 47 89         ld hl,Impacto2
 914+ 9158 CB CE            set 1,(hl)
 915+ 915A E1               pop hl
 916+ 915B 18 06            jr 12F
 917+ 915D
 918+ 915D              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 915D
 920+ 915D CD A4 91     10 call Mueve_disparo
 921+ 9160 CD 7B 91         call foto_disparo_a_borrar
 922+ 9163 C1           12 pop bc
 923+ 9164
 924+ 9164 18 04            jr 8F
 925+ 9166
 926+ 9166              ; ----- ----- ----- ----- ----- -----
 927+ 9166
 928+ 9166 ED 42        4 sbc hl,bc
 929+ 9168 28 0A            jr z,6F
 930+ 916A
 931+ 916A 2A 43 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 916D 23               inc hl
 933+ 916E 23               inc hl
 934+ 916F 22 43 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9172 18 8A            jr 5B
 936+ 9174
 937+ 9174 CD 05 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9177 CD 41 92         call Limpia_Coordenadas_X
 939+ 917A C9               ret
 940+ 917B
 941+ 917B              ; ------------------------------------------------------------------
 942+ 917B
 943+ 917B              foto_disparo_a_borrar
 944+ 917B
 945+ 917B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 917C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 917D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 917E
 949+ 917E E5               push hl
 950+ 917F 23               inc hl
 951+ 9180 23               inc hl
 952+ 9181 ED 73 18 89      ld (Stack),sp
 953+ 9185 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9186 FD E1            pop iy
 955+ 9188 DD E1            pop ix
 956+ 918A E1               pop hl
 957+ 918B ED 7B 18 89      ld sp,(Stack)
 958+ 918F 3A 07 89         ld a,(Ctrl_1)
 959+ 9192 CB C7            set 0,a
 960+ 9194 32 07 89         ld (Ctrl_1),a
 961+ 9197 CD A0 7F         call Guarda_foto_registros
 962+ 919A 3A 07 89         ld a,(Ctrl_1)
 963+ 919D CB 87            res 0,a
 964+ 919F 32 07 89         ld (Ctrl_1),a
 965+ 91A2 E1               pop hl
 966+ 91A3 C9               ret
 967+ 91A4
 968+ 91A4              ;---------------------------------------------------
 969+ 91A4              ;
 970+ 91A4              ;   18/07/23
 971+ 91A4              ;
 972+ 91A4
 973+ 91A4              Mueve_disparo
 974+ 91A4
 975+ 91A4              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91A4              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91A4              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91A4
 979+ 91A4 E5               push hl
 980+ 91A5
 981+ 91A5 7E               ld a,(hl)
 982+ 91A6
 983+ 91A6 06 04            ld b,4
 984+ 91A8 23           1 inc hl
 985+ 91A9 10 FD            djnz 1B
 986+ 91AB
 987+ 91AB              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91AB
 989+ 91AB CD 8B 8C         call Extrae_address
 990+ 91AE
 991+ 91AE E6 01            and 1
 992+ 91B0 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91B2
 994+ 91B2              ; Disparo hacia arriba, (Amadeus).
 995+ 91B2
 996+ 91B2              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91B2              ; _ de la dificultad.
 998+ 91B2
 999+ 91B2 CD 32 96         call PreviousScan
1000+ 91B5 CD 32 96         call PreviousScan
1001+ 91B8 CD 32 96         call PreviousScan
1002+ 91BB CD 32 96         call PreviousScan
1003+ 91BE
1004+ 91BE              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91BE
1006+ 91BE 7C               ld a,h
1007+ 91BF FE 40            cp $40
1008+ 91C1 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91C3
1010+ 91C3              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91C3
1012+ 91C3 EB               ex de,hl
1013+ 91C4 06 04            ld b,4
1014+ 91C6 2B           6 dec hl
1015+ 91C7 10 FD            djnz 6B
1016+ 91C9
1017+ 91C9 CD FA 91         call Elimina_disparo_de_base_de_datos
1018+ 91CC E1               pop hl
1019+ 91CD 18 10            jr 7F
1020+ 91CF
1021+ 91CF              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91CF              ; HL contiene el puntero de impresión del disparo.
1023+ 91CF              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91CF
1025+ 91CF D5           3 push de
1026+ 91D0 C5               push bc
1027+ 91D1
1028+ 91D1 CD 99 8F         call Comprueba_Colision
1029+ 91D4
1030+ 91D4              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91D4
1032+ 91D4 78               ld a,b
1033+ 91D5
1034+ 91D5 C1               pop bc
1035+ 91D6 D1               pop de
1036+ 91D7
1037+ 91D7 EB               ex de,hl
1038+ 91D8
1039+ 91D8 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91D9 23               inc hl                                      ; _ movimiento.
1041+ 91DA 72               ld (hl),d
1042+ 91DB
1043+ 91DB E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91DC
1045+ 91DC 23               inc hl                                      ; _ en curso.
1046+ 91DD 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91DE 2B               dec hl
1048+ 91DF
1049+ 91DF C9           7 ret
1050+ 91E0
1051+ 91E0              ; Disparo hacia abajo, (Entidad).
1052+ 91E0
1053+ 91E0 3A 54 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91E3 47               ld b,a
1055+ 91E4
1056+ 91E4 CD 23 96     4 call NextScan
1057+ 91E7 10 FB            djnz 4B
1058+ 91E9
1059+ 91E9              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91E9
1061+ 91E9 7C               ld a,h
1062+ 91EA FE 58            cp $58
1063+ 91EC 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91EE
1065+ 91EE EB               ex de,hl
1066+ 91EF 06 04            ld b,4
1067+ 91F1 2B           5 dec hl
1068+ 91F2 10 FD            djnz 5B
1069+ 91F4
1070+ 91F4 CD FA 91         call Elimina_disparo_de_base_de_datos
1071+ 91F7 E1               pop hl
1072+ 91F8 18 E5            jr 7B
1073+ 91FA
1074+ 91FA              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91FA
1076+ 91FA 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91FD AF               xor a
1078+ 91FE 77               ld (hl),a
1079+ 91FF 54               ld d,h
1080+ 9200 5D               ld e,l
1081+ 9201 13               inc de
1082+ 9202 ED B0            ldir
1083+ 9204 C9               ret
1084+ 9205
1085+ 9205              ; -----------------------------------------------------------------
1086+ 9205              ;
1087+ 9205              ;   19/7/23
1088+ 9205              ;
1089+ 9205              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9205              ;
1091+ 9205              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9205              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9205              ;
1094+ 9205              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9205              ;
1096+ 9205              ;   INPUTS:
1097+ 9205              ;
1098+ 9205              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9205              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9205
1101+ 9205              ;   MODIFICA: A, HL, BC y DE.
1102+ 9205
1103+ 9205              Guarda_coordenadas_X
1104+ 9205
1105+ 9205 7B               ld a,e
1106+ 9206 A7               and a
1107+ 9207 20 04            jr nz,1F
1108+ 9209
1109+ 9209 06 02            ld b,2
1110+ 920B 18 02            jr 2F
1111+ 920D
1112+ 920D 06 03        1 ld b,3
1113+ 920F 72           2 ld (hl),d
1114+ 9210 23               inc hl
1115+ 9211 14               inc d
1116+ 9212 10 FB            djnz 2B
1117+ 9214
1118+ 9214 C9               ret
1119+ 9215
1120+ 9215              ; -----------------------------------------------------------------
1121+ 9215              ;
1122+ 9215              ;   12/04/23
1123+ 9215              ;
1124+ 9215
1125+ 9215 3A 47 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9218 A7               and a
1127+ 9219 C8               ret z
1128+ 921A
1129+ 921A FE 04            cp 4
1130+ 921C 20 09            jr nz,1F
1131+ 921E
1132+ 921E
1133+ 921E              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 921E
1135+ 921E CD 3A 90         call Detecta_colision_nave_entidad
1136+ 9221
1137+ 9221 21 47 89         ld hl,Impacto2
1138+ 9224 CB 5E            bit 3,(hl)
1139+ 9226 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9227
1141+ 9227              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9227              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9227
1144+ 9227 21 47 89     1 ld hl,Impacto2
1145+ 922A CB 4E            bit 1,(hl)
1146+ 922C 28 07            jr z,2F
1147+ 922E
1148+ 922E 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9231 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9233 18 0B            jr 3F
1151+ 9235
1152+ 9235 21 47 89     2 ld hl,Impacto2
1153+ 9238 CB 46            bit 0,(hl)
1154+ 923A C8               ret z
1155+ 923B
1156+ 923B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 923B
1158+ 923B 21 07 89         ld hl,Ctrl_1
1159+ 923E CB D6            set 2,(hl)
1160+ 9240
1161+ 9240 C9           3 ret
1162+ 9241
1163+ 9241              ; -----------------------------------------------------------------
1164+ 9241              ;
1165+ 9241              ;   19/7/23
1166+ 9241              ;
1167+ 9241              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9241
1169+ 9241 AF           Limpia_Coordenadas_X xor a
1170+ 9242 06 06            ld b,6
1171+ 9244 21 4C 89         ld hl,Coordenadas_X_Amadeus
1172+ 9247 77           1 ld (hl),a
1173+ 9248 23               inc hl
1174+ 9249 10 FC            djnz 1B
1175+ 924B C9               ret
1176+ 924C
1177+ 924C              ; -----------------------------------------------------------------
1178+ 924C              ;
1179+ 924C              ;   25/04/23
1180+ 924C              ;
1181+ 924C
1182+ 924C              Determina_resultado_comparativa
1183+ 924C
1184+ 924C              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 924C              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 924C              ;
1187+ 924C              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 924C              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 924C              ;
1190+ 924C              ;   SBC HL,DE
1191+ 924C
1192+ 924C              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 924C              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 924C
1195+ 924C              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 924C              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 924C
1198+ 924C
1199+ 924C 3A DE 88         ld a,(Cuad_objeto)
1200+ 924F FE 02            cp 2
1201+ 9251 28 26            jr z,2F
1202+ 9253 38 24            jr c,2F
1203+ 9255
1204+ 9255              ; Cuadrantes 3º y 4º
1205+ 9255
1206+ 9255 E6 01            and 1
1207+ 9257 28 10            jr z,4F
1208+ 9259
1209+ 9259              ; Cuadrante 3º
1210+ 9259
1211+ 9259 7C               ld a,h
1212+ 925A 06 00            ld b,0
1213+ 925C
1214+ 925C CD E7 92         call Compara_cositas_H3
1215+ 925F
1216+ 925F 04               inc b
1217+ 9260 05               dec b
1218+ 9261 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9262
1220+ 9262 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9263 06 00            ld b,0
1222+ 9265
1223+ 9265 CD F9 92         call Compara_cositas_L3
1224+ 9268 C9               ret
1225+ 9269
1226+ 9269              ; Cuadrante 4º
1227+ 9269
1228+ 9269 7C           4 ld a,h
1229+ 926A 06 00            ld b,0
1230+ 926C
1231+ 926C CD 0B 93         call Compara_cositas_H4
1232+ 926F
1233+ 926F 04               inc b
1234+ 9270 05               dec b
1235+ 9271 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9272
1237+ 9272 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9273 06 00            ld b,0
1239+ 9275
1240+ 9275 CD 21 93         call Compara_cositas_L4
1241+ 9278 C9               ret
1242+ 9279
1243+ 9279              ; Cuadrantes 1º y 2º.
1244+ 9279
1245+ 9279 28 10        2 jr z,3F
1246+ 927B
1247+ 927B              ; 1er Cuadrante
1248+ 927B
1249+ 927B 7C               ld a,h
1250+ 927C 06 00            ld b,0
1251+ 927E
1252+ 927E CD BF 92         call Compara_cositas_H1
1253+ 9281
1254+ 9281 04               inc b
1255+ 9282 05               dec b
1256+ 9283 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9284
1258+ 9284 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9285 06 00            ld b,0
1260+ 9287
1261+ 9287 CD D5 92         call Compara_cositas_L1
1262+ 928A C9               ret
1263+ 928B
1264+ 928B
1265+ 928B              ; 2º Cuadrante
1266+ 928B
1267+ 928B 7C           3 ld a,h
1268+ 928C 06 00            ld b,0
1269+ 928E
1270+ 928E CD 9B 92         call Compara_cositas_H2
1271+ 9291
1272+ 9291 04               inc b
1273+ 9292 05               dec b
1274+ 9293 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9294
1276+ 9294 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9295 06 00            ld b,0
1278+ 9297
1279+ 9297 CD AD 92         call Compara_cositas_L2
1280+ 929A C9               ret
1281+ 929B
1282+ 929B A7           Compara_cositas_H2 and a
1283+ 929C 28 0D            jr z,1F
1284+ 929E              ;    cp $fd
1285+ 929E              ;    jr z,1F
1286+ 929E              ;    cp $fe
1287+ 929E              ;    jr z,1F
1288+ 929E FE FF            cp $ff
1289+ 92A0 28 09            jr z,1F
1290+ 92A2 FE 01            cp $01
1291+ 92A4 28 05            jr z,1F
1292+ 92A6 FE 02            cp $02
1293+ 92A8 28 01            jr z,1F
1294+ 92AA C0               ret nz
1295+ 92AB 04           1 inc b
1296+ 92AC C9               ret
1297+ 92AD
1298+ 92AD A7           Compara_cositas_L2 and a
1299+ 92AE 28 0D            jr z,1F
1300+ 92B0              ;    cp $fd
1301+ 92B0              ;    jr z,1F
1302+ 92B0 FE FE            cp $fe
1303+ 92B2 28 09            jr z,1F
1304+ 92B4 FE FF            cp $ff
1305+ 92B6 28 05            jr z,1F
1306+ 92B8 FE 01            cp $01
1307+ 92BA 28 01            jr z,1F
1308+ 92BC              ;    cp $02
1309+ 92BC              ;    jr z,1F
1310+ 92BC C0               ret nz
1311+ 92BD 04           1 inc b
1312+ 92BE C9               ret
1313+ 92BF
1314+ 92BF A7           Compara_cositas_H1 and a
1315+ 92C0 28 11            jr z,1F
1316+ 92C2              ;    cp $fd
1317+ 92C2              ;    jr z,1F
1318+ 92C2              ;    cp $fe
1319+ 92C2              ;    jr z,1F
1320+ 92C2 FE FF            cp $ff
1321+ 92C4 28 0D            jr z,1F
1322+ 92C6 FE 01            cp $01
1323+ 92C8 28 09            jr z,1F
1324+ 92CA FE 02            cp $02
1325+ 92CC 28 05            jr z,1F
1326+ 92CE FE 03            cp $03
1327+ 92D0 28 01            jr z,1F
1328+ 92D2 C0               ret nz
1329+ 92D3 04           1 inc b
1330+ 92D4 C9               ret
1331+ 92D5
1332+ 92D5 A7           Compara_cositas_L1 and a
1333+ 92D6 28 0D            jr z,1F
1334+ 92D8              ;    cp $fd
1335+ 92D8              ;    jr z,1F
1336+ 92D8              ;    cp $fe
1337+ 92D8              ;    jr z,1F
1338+ 92D8              ;    cp $ff
1339+ 92D8              ;    jr z,1F
1340+ 92D8 FE 01            cp $01
1341+ 92DA 28 09            jr z,1F
1342+ 92DC FE 02            cp $02
1343+ 92DE 28 05            jr z,1F
1344+ 92E0 FE 03            cp $03
1345+ 92E2 28 01            jr z,1F
1346+ 92E4 C0               ret nz
1347+ 92E5 04           1 inc b
1348+ 92E6 C9               ret
1349+ 92E7
1350+ 92E7 A7           Compara_cositas_H3 and a
1351+ 92E8 28 0D            jr z,1F
1352+ 92EA              ;    cp $fd
1353+ 92EA              ;    jr z,1F
1354+ 92EA FE FE            cp $fe
1355+ 92EC 28 09            jr z,1F
1356+ 92EE FE FF            cp $ff
1357+ 92F0 28 05            jr z,1F
1358+ 92F2 FE 01            cp $01
1359+ 92F4 28 01            jr z,1F
1360+ 92F6              ;    cp $02
1361+ 92F6              ;    jr z,1F
1362+ 92F6              ;    cp $03
1363+ 92F6              ;    jr z,1F
1364+ 92F6 C0               ret nz
1365+ 92F7 04           1 inc b
1366+ 92F8 C9               ret
1367+ 92F9
1368+ 92F9 A7           Compara_cositas_L3 and a
1369+ 92FA 28 0D            jr z,1F
1370+ 92FC              ;    cp $fd
1371+ 92FC              ;    jr z,1F
1372+ 92FC              ;    cp $fe
1373+ 92FC              ;    jr z,1F
1374+ 92FC              ;    cp $ff
1375+ 92FC              ;    jr z,1F
1376+ 92FC FE 01            cp $01
1377+ 92FE 28 09            jr z,1F
1378+ 9300 FE 02            cp $02
1379+ 9302 28 05            jr z,1F
1380+ 9304 FE 03            cp $03
1381+ 9306 28 01            jr z,1F
1382+ 9308 C0               ret nz
1383+ 9309 04           1 inc b
1384+ 930A C9               ret
1385+ 930B
1386+ 930B A7           Compara_cositas_H4 and a
1387+ 930C 28 11            jr z,1F
1388+ 930E FE FD            cp $fd
1389+ 9310 28 0D            jr z,1F
1390+ 9312 FE FE            cp $fe
1391+ 9314 28 09            jr z,1F
1392+ 9316 FE FF            cp $ff
1393+ 9318 28 05            jr z,1F
1394+ 931A FE 01            cp $01
1395+ 931C 28 01            jr z,1F
1396+ 931E              ;    cp $02
1397+ 931E              ;    jr z,1F
1398+ 931E              ;    cp $03
1399+ 931E              ;    jr z,1F
1400+ 931E C0               ret nz
1401+ 931F 04           1 inc b
1402+ 9320 C9               ret
1403+ 9321
1404+ 9321 A7           Compara_cositas_L4 and a
1405+ 9322 28 0D            jr z,1F
1406+ 9324              ;    cp $fd
1407+ 9324              ;    jr z,1F
1408+ 9324 FE FE            cp $fe
1409+ 9326 28 09            jr z,1F
1410+ 9328 FE FF            cp $ff
1411+ 932A 28 05            jr z,1F
1412+ 932C FE 01            cp $01
1413+ 932E 28 01            jr z,1F
1414+ 9330              ;    cp $02
1415+ 9330              ;    jr z,1F
1416+ 9330              ;    cp $03
1417+ 9330              ;    jr z,1F
1418+ 9330 C0               ret nz
1419+ 9331 04           1 inc b
1420+ 9332 C9               ret
# file closed: Disparo.asm
1664  9333              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9333              ; ******************************************************************************************************************************************************************************************
   2+ 9333              ;
   3+ 9333              ; 26/06/23
   4+ 9333              ;
   5+ 9333              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9333
   7+ 9333 CD 17 96     Draw call Prepara_draw
   8+ 9336 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9337 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9338 28 05        	jr z,2F
  11+ 933A
  12+ 933A 3A DE 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 933D 18 0C        	jr 1F
  14+ 933F
  15+ 933F 2A DC 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9342 22 CC 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9345 CD D4 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9348              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9348 CD 77 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 934B
  21+ 934B 3A F4 88     1 ld a,(Ctrl_0)
  22+ 934E CB 6F        	bit 5,a
  23+ 9350 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9352
  25+ 9352 CD 6A 93     	call Comprueba_limite_horizontal
  26+ 9355 CD FA 93     	call Comprueba_limite_vertical
  27+ 9358
  28+ 9358              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9358              ; -----------------------
  30+ 9358              ; -----------------------
  31+ 9358              ; -----------------------
  32+ 9358
  33+ 9358 CD 47 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 935B CD 7E 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 935E CD DD 95     	call Define_rutina_de_impresion
  36+ 9361
  37+ 9361 3A F4 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9364 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9366 32 F4 88     	ld (Ctrl_0),a
  40+ 9369
  41+ 9369 C9           	ret
  42+ 936A
  43+ 936A              ; *******************************************************************************************************************************************************************************************
  44+ 936A              ;	21/01/23
  45+ 936A              ;
  46+ 936A              ; 	Comprueba_limite_horizontal.
  47+ 936A              ;
  48+ 936A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 936A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 936A              ;
  51+ 936A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 936A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 936A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 936A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 936A
  56+ 936A
  57+ 936A
  58+ 936A 3A F4 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 936D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 936F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9371 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9373 32 F4 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9376 18 09            jr 6F
  64+ 9378 CB 5F        1 bit 3,a
  65+ 937A 28 0A            jr z,2F
  66+ 937C E6 F7            and $f7
  67+ 937E 32 F4 88         ld (Ctrl_0),a
  68+ 9381 CD D4 94     6 call Inicializacion
  69+ 9384 18 5B            jr 5F
  70+ 9386 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9387
  72+ 9387              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9387              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9387
  75+ 9387 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9388 2A 02 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 938B CD 36 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 938E 67           	ld h,a
  79+ 938F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9390 CD 36 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9393 67           	ld h,a
  82+ 9394 A7           	and a
  83+ 9395 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9397 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9398 3A DE 88     	ld a,(Cuad_objeto)
  86+ 939B FE 02        	cp 2
  87+ 939D 38 1E        	jr c,3F
  88+ 939F 28 1C        	jr z,3F
  89+ 93A1 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93A2 28 23            jr z,7F
  91+ 93A4 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93A6 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93A8 E1           	pop hl
  94+ 93A9
  95+ 93A9              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93A9              ; _para indicar con E="2" en caso necesario.
  97+ 93A9
  98+ 93A9 E5               push hl
  99+ 93AA C5               push bc
 100+ 93AB CD 36 99     	call calcula_tercio
 101+ 93AE FE 01        	cp 1
 102+ 93B0 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93B2 CD E2 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93B5 28 26            jr z,9F
 105+ 93B7 38 24            jr c,9F
 106+ 93B9 1E 00        11 ld e,0
 107+ 93BB 18 22            jr 8F
 108+ 93BD 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93BE 28 07        	jr z, 7F
 110+ 93C0 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93C2 1E 00         	ld e,0
 112+ 93C4 E1           	pop hl
 113+ 93C5 18 04        	jr 4F
 114+ 93C7 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93C9 18 15            jr 10F
 116+ 93CB
 117+ 93CB              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93CB              ; _para indicar con E="2" en caso necesario.
 119+ 93CB
 120+ 93CB E5           4 push hl
 121+ 93CC C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93CD CD 36 99     	call calcula_tercio
 123+ 93D0 FE 01        	cp 1
 124+ 93D2 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93D4 CD E2 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93D7 28 04            jr z,9F
 127+ 93D9 30 02            jr nc,9F
 128+ 93DB 18 02        	jr 8F
 129+ 93DD 1E 02        9 ld e,2
 130+ 93DF C1           8 pop bc
 131+ 93E0 E1           10 pop hl
 132+ 93E1 C9           5 ret
 133+ 93E2
 134+ 93E2              ; --------------------
 135+ 93E2              ;
 136+ 93E2              ; 25/08/22
 137+ 93E2
 138+ 93E2 CD 36 99     Comprueba_centro call calcula_tercio
 139+ 93E5 67               ld h,a
 140+ 93E6 08           	ex af,af
 141+ 93E7 FE 02        	cp 2
 142+ 93E9 38 07        	jr c,1F
 143+ 93EB 28 05        	jr z,1F
 144+ 93ED 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93F0 18 03        	jr 2F
 146+ 93F2 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93F5 08           2 ex af,af
 148+ 93F6 A7               and a
 149+ 93F7 ED 42            sbc hl,bc
 150+ 93F9 C9               ret
 151+ 93FA
 152+ 93FA              ; *********************************************************************************************************************************************************************************************
 153+ 93FA              ;
 154+ 93FA              ;   16/8/22
 155+ 93FA              ;
 156+ 93FA              ;	Comprueba_limite_vertical
 157+ 93FA              ;
 158+ 93FA              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93FA              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93FA              ;
 161+ 93FA
 162+ 93FA 2A CC 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93FD 7D           	ld a,l
 164+ 93FE E6 1F        	and $1F
 165+ 9400 57           	ld d,a
 166+ 9401 3A 04 89     	ld a,(Limite_vertical)
 167+ 9404 BA           	cp d 											; Límite - Posición.
 168+ 9405 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9406 3A DE 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9409 CB 47        	bit 0,a
 171+ 940B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 940D
 173+ 940D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 940D
 175+ 940D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 940E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9410
 178+ 9410              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9410              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9410
 181+ 9410 3A D0 88         ld a,(Coordenada_X)
 182+ 9413 16 0F            ld d,Centro_izquierda
 183+ 9415 A7               and a
 184+ 9416 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9417 28 1E            jr z,3F
 186+ 9419 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 941B              ;                                                    ; _salimos sin modificar nada.
 188+ 941B 18 0E            jr 2F
 189+ 941D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 941E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9420
 192+ 9420              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9420              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9420
 195+ 9420 3A D0 88         ld a,(Coordenada_X)
 196+ 9423 16 10            ld d,Centro_derecha
 197+ 9425 A7               and a
 198+ 9426 92               sub d
 199+ 9427 28 0E            jr z,3F
 200+ 9429 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 942B              ;                                                    ; _salimos sin modificar nada.
 202+ 942B CB 43        2 bit 0,e
 203+ 942D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 942F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9430 CD C4 94         call Modificaccionne
 206+ 9433 C1           	pop bc
 207+ 9434 CD D4 94         call Inicializacion
 208+ 9437 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9438
 210+ 9438              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9438
 212+ 9438 C5           4 push bc
 213+ 9439 01 CB 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 943C 0A           	ld a,(bc)
 215+ 943D 3D           	dec a
 216+ 943E 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 943F 7D           	ld a,l
 218+ 9440 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9441 CB 47        	bit 0,a
 220+ 9443 28 03        	jr z,5F
 221+ 9445 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9446 18 2E        	jr 7F
 223+ 9448
 224+ 9448              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9448
 226+ 9448 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9449 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 944A 3A F4 88     	ld a,(Ctrl_0)
 229+ 944D CB 4F        	bit 1,a
 230+ 944F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9451 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9452
 233+ 9452              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9452
 235+ 9452 1C               inc e
 236+ 9453 1D               dec e
 237+ 9454 20 07            jr nz,12F
 238+ 9456 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9457 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9458 22 CC 88     	ld (Posicion_actual),hl
 241+ 945B 18 44        13 jr 9F
 242+ 945D CB 43        12 bit 0,e
 243+ 945F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9461              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9461 C1           	pop bc
 246+ 9462 18 D3        	jr 3B
 247+ 9464 80           14 add b
 248+ 9465 6F               ld l,a
 249+ 9466 22 CC 88     	ld (Posicion_actual),hl
 250+ 9469 CD C4 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 946C 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 946E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9470 32 F4 88         ld (Ctrl_0),a
 254+ 9473 F1           	pop af
 255+ 9474 18 2B        	jr 9F
 256+ 9476
 257+ 9476              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9476
 259+ 9476 F5           7 push af
 260+ 9477 3A F4 88     	ld a,(Ctrl_0)
 261+ 947A CB 47        	bit 0,a
 262+ 947C 20 1D        	jr nz,8F
 263+ 947E F1           	pop af
 264+ 947F
 265+ 947F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 947F
 267+ 947F 1C           	inc e
 268+ 9480 1D               dec e
 269+ 9481 20 07            jr nz,10F
 270+ 9483 90           	sub b
 271+ 9484 6F               ld l,a
 272+ 9485 22 CC 88     	ld (Posicion_actual),hl
 273+ 9488 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 948A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 948A CB 43        10 bit 0,e
 276+ 948C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 948E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 948E C1           	pop bc
 279+ 948F 18 A6        	jr 3B
 280+ 9491 90           16 sub b
 281+ 9492 6F               ld l,a
 282+ 9493 22 CC 88     	ld (Posicion_actual),hl
 283+ 9496 CD C4 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9499 18 06            jr 9F
 285+ 949B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 949D 32 F4 88         ld (Ctrl_0),a
 287+ 94A0 F1           	pop af
 288+ 94A1 C1           9 pop bc
 289+ 94A2 1E 00        	ld e,0
 290+ 94A4 CD D4 94         call Inicializacion
 291+ 94A7 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94A8 08           	ex af,af
 293+ 94A9 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94AA 18 8B            jr 3B
 295+ 94AC
 296+ 94AC              ; --------------------
 297+ 94AC
 298+ 94AC 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94AE CD 32 96     1 call PreviousScan
 300+ 94B1 10 FB            djnz 1B
 301+ 94B3 22 CC 88     	ld (Posicion_actual),hl
 302+ 94B6 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94B7 C9           	ret
 304+ 94B8
 305+ 94B8              ; --------------------
 306+ 94B8
 307+ 94B8 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94BA CD 23 96     1 call NextScan
 309+ 94BD 10 FB            djnz 1B
 310+ 94BF 22 CC 88     	ld (Posicion_actual),hl
 311+ 94C2 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94C3 C9           	ret
 313+ 94C4
 314+ 94C4              ; --------------------
 315+ 94C4              ;
 316+ 94C4              ;	22/01/23
 317+ 94C4              ;
 318+ 94C4              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94C4              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94C4              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94C4
 322+ 94C4
 323+ 94C4              Modificaccionne
 324+ 94C4
 325+ 94C4 3A DE 88     	ld a,(Cuad_objeto)
 326+ 94C7 FE 02        	cp 2
 327+ 94C9 CC AC 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94CC DC AC 94         call c,Modifica_Pos_actual
 329+ 94CF C8           	ret z
 330+ 94D0 CD B8 94         call Modifica_Pos_actual2
 331+ 94D3 C9               ret
 332+ 94D4
 333+ 94D4              ; *************************************************************************************************************************************************************************************************
 334+ 94D4              ;
 335+ 94D4              ;	13/8/22
 336+ 94D4              ;
 337+ 94D4              ;	Inicializacion
 338+ 94D4              ;
 339+ 94D4              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94D4              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94D4              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94D4              ;
 343+ 94D4              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94D4              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94D4              ;	_ desaparece/aparece.
 346+ 94D4
 347+ 94D4              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94D4              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94D4              ;
 350+ 94D4              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94D4              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94D4              ; 		   [E] ="0"
 353+ 94D4
 354+ 94D4              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94D4
 356+ 94D4 CD 36 99     Inicializacion call calcula_tercio
 357+ 94D7 28 36        	jr z,primit
 358+ 94D9 E6 02        	and 2
 359+ 94DB 20 07        	jr nz,segmit
 360+ 94DD 7D           	ld a,l
 361+ 94DE FE 7F        	cp $7f
 362+ 94E0 38 2D        	jr c,primit
 363+ 94E2 28 2B        	jr z,primit
 364+ 94E4 CD 41 95     segmit call column
 365+ 94E7 38 13        	jr c,tercuad
 366+ 94E9 3E 04        cuarcuad ld a,4
 367+ 94EB 32 DE 88     	ld (Cuad_objeto),a
 368+ 94EE 21 20 48     	ld hl,$4820
 369+ 94F1 22 02 89     	ld (Limite_horizontal),hl
 370+ 94F4 21 04 89     	ld hl,Limite_vertical
 371+ 94F7 36 0D        	ld (hl),$0d
 372+ 94F9 08           	ex af,af
 373+ 94FA 18 3C        	jr 1F
 374+ 94FC              tercuad
 375+ 94FC 3E 03        	ld a,3
 376+ 94FE 32 DE 88     	ld (Cuad_objeto),a
 377+ 9501 21 20 48     	ld hl,$4820
 378+ 9504 22 02 89     	ld (Limite_horizontal),hl
 379+ 9507 21 04 89     	ld hl,Limite_vertical
 380+ 950A 36 12        	ld (hl),$12
 381+ 950C 08           	ex af,af
 382+ 950D 18 29        	jr 1F
 383+ 950F CD 41 95     primit call column
 384+ 9512 38 13        	jr c, primcuad
 385+ 9514              segcuad
 386+ 9514 3E 02        	ld a,2
 387+ 9516 32 DE 88     	ld (Cuad_objeto),a
 388+ 9519 21 C0 4F     	ld hl,$4fc0
 389+ 951C 22 02 89     	ld (Limite_horizontal),hl
 390+ 951F 21 04 89     	ld hl,Limite_vertical
 391+ 9522 36 0D        	ld (hl),$0d
 392+ 9524 08           	ex af,af
 393+ 9525 18 11        	jr 1F
 394+ 9527              primcuad
 395+ 9527 3E 01        	ld a,1
 396+ 9529 32 DE 88     	ld (Cuad_objeto),a
 397+ 952C 21 C0 4F     	ld hl,$4fc0
 398+ 952F 22 02 89     	ld (Limite_horizontal),hl
 399+ 9532 21 04 89     	ld hl,Limite_vertical
 400+ 9535 36 12        	ld (hl),$12
 401+ 9537 08           	ex af,af
 402+ 9538 CD C1 9C     1 call Genera_coordenadas
 403+ 953B 21 F4 88     	ld hl,Ctrl_0
 404+ 953E CB EE        	set 5,(hl)
 405+ 9540 C9           	ret
 406+ 9541
 407+ 9541              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9541
 409+ 9541              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9541              ;
 411+ 9541              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9541
 413+ 9541 7D           column ld a,l
 414+ 9542 E6 1F        	and $1f
 415+ 9544 FE 10         	cp $10
 416+ 9546 C9            	ret
 417+ 9547
 418+ 9547              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9547              ;
 420+ 9547              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9547              ;
 422+ 9547              ; 14/12/22
 423+ 9547              ;
 424+ 9547              ;	Modifica: A y BC.
 425+ 9547
 426+ 9547 3A DE 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 954A E6 01        	and 1
 428+ 954C 28 17        	jr z,1F
 429+ 954E
 430+ 954E              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 954E
 432+ 954E 3A D0 88     	ld a,(Coordenada_X)
 433+ 9551 47           	ld b,a
 434+ 9552 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9553 79           	ld a,c
 436+ 9554 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9555 38 08        	jr c,2F
 438+ 9557 47           	ld b,a
 439+ 9558 79           	ld a,c
 440+ 9559 90           	sub b
 441+ 955A 32 01 89     	ld (Columnas),a
 442+ 955D 18 1B        	jr 4F
 443+ 955F 79           2 ld a,c
 444+ 9560 32 01 89     	ld (Columnas),a
 445+ 9563 18 15        	jr 4F
 446+ 9565
 447+ 9565              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9565
 449+ 9565 3A D0 88     1 ld a,(Coordenada_X)
 450+ 9568 81           	add c
 451+ 9569 3D           	dec a
 452+ 956A D6 1F        	sub $1f
 453+ 956C 38 08        	jr c,3F
 454+ 956E 47           	ld b,a
 455+ 956F 79           	ld a,c
 456+ 9570 90           	sub b
 457+ 9571 32 01 89     	ld (Columnas),a
 458+ 9574 18 04        	jr 4F
 459+ 9576 79           3 ld a,c
 460+ 9577 32 01 89     	ld (Columnas),a
 461+ 957A D9           4 exx
 462+ 957B 4F           	ld c,a
 463+ 957C D9           	exx
 464+ 957D C9            ret
 465+ 957E
 466+ 957E              ; --------------------------------------------------------------------------------------------------------------------
 467+ 957E              ;
 468+ 957E              ;   19/7/23
 469+ 957E              ;
 470+ 957E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 957E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 957E              ;
 473+ 957E              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 957E              ;			HL e IY Contienen (Puntero_objeto).
 475+ 957E              ;
 476+ 957E              ;	DESTRUYE: HL,B Y A.
 477+ 957E
 478+ 957E 3A DE 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9581 FE 02        	cp 2
 480+ 9583 38 18        	jr c,1F
 481+ 9585 28 16        	jr z,1F
 482+ 9587 E6 01        	and 1
 483+ 9589 28 0D        	jr z,3F
 484+ 958B
 485+ 958B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 958B
 487+ 958B CD D1 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 958E
 489+ 958E 7D           9 ld a,l
 490+ 958F E6 1F        	and $1f
 491+ 9591 28 2A        	jr z,7F
 492+ 9593 2B           	dec hl
 493+ 9594 10 F8        	djnz 9B
 494+ 9596 18 25        	jr 7F
 495+ 9598
 496+ 9598              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9598
 498+ 9598 2A CC 88     3 ld hl,(Posicion_actual)
 499+ 959B 18 20        	jr 7F
 500+ 959D
 501+ 959D 28 14        1 jr z,2F
 502+ 959F
 503+ 959F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 959F
 505+ 959F CD D1 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95A2
 507+ 95A2 7D           4 ld a,l
 508+ 95A3 E6 1F        	and $1f
 509+ 95A5 28 03        	jr z,6F
 510+ 95A7 2B           	dec hl
 511+ 95A8 10 F8        	djnz 4B
 512+ 95AA 06 0F        6 ld b,15
 513+ 95AC CD 32 96     5 call PreviousScan
 514+ 95AF 10 FB        	djnz 5B
 515+ 95B1 18 0A        	jr 7F
 516+ 95B3
 517+ 95B3              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95B3
 519+ 95B3 CD D1 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95B6 06 0F        	ld b,15
 521+ 95B8 CD 32 96     8 call PreviousScan
 522+ 95BB 10 FB        	djnz 8B
 523+ 95BD
 524+ 95BD E5           7 push hl
 525+ 95BE DD E1        	pop ix
 526+ 95C0
 527+ 95C0 2A CE 88     	ld hl,(Puntero_objeto)
 528+ 95C3 E5           	push hl
 529+ 95C4 FD E1        	pop iy
 530+ 95C6
 531+ 95C6              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95C6
 533+ 95C6 3A F4 88     	ld a,(Ctrl_0)
 534+ 95C9 CB 77        	bit 6,a
 535+ 95CB C8           	ret z
 536+ 95CC
 537+ 95CC              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95CC              ; _ entidad / Amadeus´.
 539+ 95CC
 540+ 95CC DD 22 52 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95D0
 542+ 95D0 C9           	ret
 543+ 95D1
 544+ 95D1              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95D1              ;
 546+ 95D1              ;	2/1/23
 547+ 95D1              ;
 548+ 95D1              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95D1              ;
 550+ 95D1              ;	Tras esta rutina tenemos:
 551+ 95D1              ;
 552+ 95D1              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95D1              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95D1              ;
 555+ 95D1              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95D1
 557+ 95D1 2A CC 88     Operandos ld hl,(Posicion_actual)
 558+ 95D4 3A 01 89     	ld a,(Columnas)
 559+ 95D7 3D           	dec a
 560+ 95D8 20 01        	jr nz,1F
 561+ 95DA 3C           	inc a
 562+ 95DB 47           1 ld b,a
 563+ 95DC C9           	ret
 564+ 95DD
 565+ 95DD              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95DD              ;
 567+ 95DD              ;	3/1/23
 568+ 95DD              ;
 569+ 95DD              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95DD              ;
 571+ 95DD              ;	Destruye: A,B,HL y DE.
 572+ 95DD
 573+ 95DD              Define_rutina_de_impresion
 574+ 95DD
 575+ 95DD 3A CB 88     	ld a,(Columns)
 576+ 95E0 47           	ld b,a
 577+ 95E1 3A 01 89     	ld a,(Columnas)
 578+ 95E4 B8           	cp b
 579+ 95E5 20 0D        	jr nz,2f
 580+ 95E7
 581+ 95E7              ;	La entidad se imprime entera.
 582+ 95E7
 583+ 95E7 21 06 97     	ld hl, Indice_entidades_completas
 584+ 95EA E6 01        	and 1
 585+ 95EC 28 02        	jr z,1F
 586+ 95EE
 587+ 95EE 23           	inc hl
 588+ 95EF 23           	inc hl
 589+ 95F0
 590+ 95F0 CD 8B 8C     1 call Extrae_address
 591+ 95F3 C9           	ret		;	ret
 592+ 95F4
 593+ 95F4              ;	La entidad no se imprime entera en pantalla.
 594+ 95F4
 595+ 95F4 3A DE 88     2 ld a,(Cuad_objeto)
 596+ 95F7 E6 01        	and 1
 597+ 95F9 28 17        	jr z,3F
 598+ 95FB
 599+ 95FB              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95FB
 601+ 95FB 21 0A 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95FE 3A CB 88     4 ld a,(Columns)
 603+ 9601 E6 01        	and 1
 604+ 9603 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9605
 606+ 9605 23           	inc hl
 607+ 9606 23           	inc hl
 608+ 9607
 609+ 9607 3A 01 89     	ld a,(Columnas)
 610+ 960A E6 01        	and 1
 611+ 960C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 960E
 613+ 960E 23           	inc hl
 614+ 960F 23           	inc hl
 615+ 9610
 616+ 9610 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9612
 618+ 9612 21 10 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9615 18 E7        	jr 4B
 620+ 9617
 621+ 9617              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9617              ;
 623+ 9617              ;	Prepara_draw
 624+ 9617              ;
 625+ 9617              ;	Es una rutina de carga.
 626+ 9617              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9617              ;
 628+ 9617              ;	FUNCIONAMIENTO:
 629+ 9617              ;
 630+ 9617              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9617              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9617              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9617              ;
 634+ 9617              ;	DESTRUYE:
 635+ 9617              ;
 636+ 9617              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9617
 638+ 9617 21 CA 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 961A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 961B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 961C 4E           	ld c,(hl)
 642+ 961D 2A CC 88     	ld hl,(Posicion_actual)
 643+ 9620 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9622 C9           	ret
 645+ 9623
 646+ 9623              ;----------------------------------------------------------------------------------------------------------------
 647+ 9623              ;
 648+ 9623              ;	5/08/22
 649+ 9623              ;
 650+ 9623              ;   NextScan.
 651+ 9623              ;
 652+ 9623              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9623              ;
 654+ 9623              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9623              ;
 656+ 9623              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9623              ;
 658+ 9623              ;       DESTRUIDOS: AF y HL !!!
 659+ 9623              ;
 660+ 9623              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9623              ;
 662+ 9623
 663+ 9623 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9624 7C               ld a,h
 665+ 9625 E6 07            and 7
 666+ 9627 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9628
 668+ 9628 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9629 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 962B 6F               ld l,a
 671+ 962C D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 962D
 673+ 962D 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 962E D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9630 67               ld h,a
 676+ 9631 C9               ret
 677+ 9632
 678+ 9632              ;----------------------------------------------------------------------------------------------------------------
 679+ 9632              ;
 680+ 9632              ;	5/08/22
 681+ 9632              ;
 682+ 9632              ;   PreviousScan.
 683+ 9632              ;
 684+ 9632              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9632              ;
 686+ 9632              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9632              ;
 688+ 9632              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9632              ;
 690+ 9632              ;       DESTRUIDOS: AF y HL !!!
 691+ 9632              ;
 692+ 9632              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9632              ;
 694+ 9632
 695+ 9632 7C           PreviousScan ld a,h
 696+ 9633 25               dec h               ; Dec H.
 697+ 9634 E6 07            and 7
 698+ 9636 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9637
 700+ 9637 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9638 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 963A 6F               ld l,a
 703+ 963B D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 963C
 705+ 963C 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 963D C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 963F 67               ld h,a
 708+ 9640 C9               ret
 709+ 9641
 710+ 9641              ; -----------------------------------------------------------------------------------
 711+ 9641              ;
 712+ 9641              ;	31/7/23
 713+ 9641              ;
 714+ 9641              ;	Rutina principal de pintado de entidades.
 715+ 9641              ;	Extrae la foto del frame, (entidades).
 716+ 9641
 717+ 9641              Extrae_foto_entidades
 718+ 9641
 719+ 9641 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9644 7E           	ld a,(hl)
 721+ 9645 A7           	and a
 722+ 9646 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9647
 724+ 9647              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9647
 726+ 9647 3A 13 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 964A A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 964B C8           	ret z
 729+ 964C
 730+ 964C              ; -----------------------------------
 731+ 964C
 732+ 964C ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9650 31 00 70     	ld sp,Album_de_fotos
 734+ 9653
 735+ 9653 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9655 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 9656 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9657
 739+ 9657 ED 73 1A 89  	ld (Stack_2),sp
 740+ 965B ED 7B 18 89  	ld sp,(Stack)
 741+ 965F
 742+ 965F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 965F
 744+ 965F 3E CD        	ld a,$cd
 745+ 9661 32 69 96     	ld (Imprime),a
 746+ 9664 EB           	ex de,hl
 747+ 9665 22 6A 96     	ld (Imprime+1),hl
 748+ 9668 EB           	ex de,hl
 749+ 9669
 750+ 9669              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9669
 752+ 9669 00 00 00     Imprime db 0,0,0
 753+ 966C
 754+ 966C ED 73 18 89  	ld (Stack),sp
 755+ 9670
 756+ 9670 3A 13 89     	ld a,(Numero_de_malotes)
 757+ 9673 3D           	dec a
 758+ 9674 28 09        	jr z,1F
 759+ 9676 32 13 89      	ld (Numero_de_malotes),a
 760+ 9679
 761+ 9679 ED 7B 1A 89  	ld sp,(Stack_2)
 762+ 967D 18 D4        	jr 2B
 763+ 967F
 764+ 967F AF           1 xor a
 765+ 9680 32 1A 89     	ld (Stack_2),a
 766+ 9683
 767+ 9683 C9           	ret
 768+ 9684
 769+ 9684              ; -----------------------------------------------------------------------------------
 770+ 9684              ;
 771+ 9684              ;	28/2/23
 772+ 9684              ;
 773+ 9684              ;	Pinta los disparos generados.
 774+ 9684
 775+ 9684              Extrae_foto_disparos
 776+ 9684
 777+ 9684 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9687 7E               ld a,(hl)
 779+ 9688 A7               and a
 780+ 9689 C8               ret z
 781+ 968A
 782+ 968A 3A 42 89     	ld a,(Numero_de_disparotes)
 783+ 968D A7           	and a
 784+ 968E C8           	ret z
 785+ 968F ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9693 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 9696
 788+ 9696 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9698 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9699 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 969A
 792+ 969A ED 73 1A 89  	ld (Stack_2),sp
 793+ 969E ED 7B 18 89  	ld sp,(Stack)
 794+ 96A2
 795+ 96A2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96A2
 797+ 96A2 3E CD        	ld a,$cd
 798+ 96A4 32 AC 96     	ld (Imprime2),a
 799+ 96A7 EB           	ex de,hl
 800+ 96A8 22 AD 96     	ld (Imprime2+1),hl
 801+ 96AB EB           	ex de,hl
 802+ 96AC
 803+ 96AC              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96AC
 805+ 96AC 00 00 00     Imprime2 db 0,0,0
 806+ 96AF
 807+ 96AF 3A 42 89     	ld a,(Numero_de_disparotes)
 808+ 96B2 3D           	dec a
 809+ 96B3 28 09        	jr z,1F
 810+ 96B5 32 42 89      	ld (Numero_de_disparotes),a
 811+ 96B8
 812+ 96B8 ED 7B 1A 89  	ld sp,(Stack_2)
 813+ 96BC 18 D8        	jr 2B
 814+ 96BE
 815+ 96BE AF           1 xor a
 816+ 96BF 32 1A 89     	ld (Stack_2),a
 817+ 96C2 C9           	ret
 818+ 96C3
 819+ 96C3              ; -----------------------------------------------------------------------------------
 820+ 96C3              ;
 821+ 96C3              ;	4/9/23
 822+ 96C3              ;
 823+ 96C3              ;	Rutina principal de pintado de Amadeus.
 824+ 96C3              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96C3
 826+ 96C3 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96C6 7E           	ld a,(hl)
 828+ 96C7 A7           	and a
 829+ 96C8 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96C9
 831+ 96C9 3A 13 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96CC A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96CD C8           	ret z
 834+ 96CE
 835+ 96CE              ; -----------------------------------
 836+ 96CE
 837+ 96CE ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96D2 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96D5
 840+ 96D5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96D7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96D8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96D9
 844+ 96D9 ED 73 1A 89  	ld (Stack_2),sp
 845+ 96DD ED 7B 18 89  	ld sp,(Stack)
 846+ 96E1
 847+ 96E1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96E1
 849+ 96E1 3E CD        	ld a,$cd
 850+ 96E3 32 EB 96     	ld (Imprime_Amadeus),a
 851+ 96E6 EB           	ex de,hl
 852+ 96E7 22 EC 96     	ld (Imprime_Amadeus+1),hl
 853+ 96EA EB           	ex de,hl
 854+ 96EB
 855+ 96EB              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96EB
 857+ 96EB 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96EE
 859+ 96EE ED 73 18 89  	ld (Stack),sp
 860+ 96F2
 861+ 96F2 3A 13 89     	ld a,(Numero_de_malotes)
 862+ 96F5 3D           	dec a
 863+ 96F6 28 09        	jr z,1F
 864+ 96F8 32 13 89      	ld (Numero_de_malotes),a
 865+ 96FB
 866+ 96FB ED 7B 1A 89  	ld sp,(Stack_2)
 867+ 96FF 18 D4        	jr 2B
 868+ 9701
 869+ 9701 AF           1 xor a
 870+ 9702 32 1A 89     	ld (Stack_2),a
 871+ 9705
 872+ 9705 C9           	ret
# file closed: Draw_XOR.asm
1665  9706              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9706              ;   índices de Rutinas de impresión.
   2+ 9706
   3+ 9706 16 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9708 43 97            defw Pinta_Amadeus_3x2
   5+ 970A
   6+ 970A 99 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 970C 39 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 970E ED 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9710
  10+ 9710 C3 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9712 C7 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9714 7B 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9716
  14+ 9716
  15+ 9716              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9716              ;
  17+ 9716              ;   12/12/22
  18+ 9716              ;
  19+ 9716              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9716              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9716              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9716              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9716              ;
  24+ 9716              ;   Modifica: DE y HL.
  25+ 9716
  26+ 9716 ED 73 18 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 971A FD F9        	ld sp,iy
  28+ 971C 06 10            ld b,16
  29+ 971E D1           1 pop de
  30+ 971F 7B               ld a,e
  31+ 9720 AE               xor (hl)
  32+ 9721 77           	ld (hl),a
  33+ 9722 23           	inc hl
  34+ 9723 7A               ld a,d
  35+ 9724 AE               xor (hl)
  36+ 9725 77           	ld (hl),a
  37+ 9726 2B           	dec hl
  38+ 9727 24           	inc h
  39+ 9728 7C               ld a,h
  40+ 9729 E6 07            and 7
  41+ 972B 20 0A            jr nz,2F
  42+ 972D 7D               ld a,l
  43+ 972E C6 20            add a,$20
  44+ 9730 6F               ld l,a
  45+ 9731 38 04            jr c,2F
  46+ 9733 7C               ld a,h
  47+ 9734 D6 08            sub 8
  48+ 9736 67               ld h,a
  49+ 9737 7C           2 ld a,h
  50+ 9738 FE 58            cp $58
  51+ 973A 28 02            jr z,3F
  52+ 973C 10 E0            djnz 1B
  53+ 973E ED 7B 18 89  3 ld sp,(Stack)
  54+ 9742 C9           	ret
  55+ 9743
  56+ 9743 ED 73 18 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9747 FD F9        	ld sp,iy
  58+ 9749 06 08            ld b,8
  59+ 974B D1           1 pop de
  60+ 974C 7B               ld a,e
  61+ 974D AE               xor (hl)
  62+ 974E 77           	ld (hl),a
  63+ 974F 23           	inc hl
  64+ 9750 7A               ld a,d
  65+ 9751 AE               xor (hl)
  66+ 9752 77           	ld (hl),a
  67+ 9753 23           	inc hl
  68+ 9754 D1           	pop de
  69+ 9755 7B               ld a,e
  70+ 9756 AE               xor (hl)
  71+ 9757 77           	ld (hl),a
  72+ 9758 2B           	dec hl
  73+ 9759 2B           	dec hl
  74+ 975A 24           	inc h
  75+ 975B 7C               ld a,h
  76+ 975C E6 07            and 7
  77+ 975E 20 0A            jr nz,2F
  78+ 9760 7D               ld a,l
  79+ 9761 C6 20            add a,$20
  80+ 9763 6F               ld l,a
  81+ 9764 38 04            jr c,2F
  82+ 9766 7C               ld a,h
  83+ 9767 D6 08            sub 8
  84+ 9769 67               ld h,a
  85+ 976A 7C           2 ld a,h
  86+ 976B FE 58            cp $58
  87+ 976D 28 25            jr z,4F
  88+ 976F 7A               ld a,d
  89+ 9770 AE               xor (hl)
  90+ 9771 77               ld (hl),a
  91+ 9772 D1           	pop de
  92+ 9773 23           	inc hl
  93+ 9774 7B               ld a,e
  94+ 9775 AE               xor (hl)
  95+ 9776 77           	ld (hl),a
  96+ 9777 23           	inc hl
  97+ 9778 7A               ld a,d
  98+ 9779 AE               xor (hl)
  99+ 977A 77           	ld (hl),a
 100+ 977B 2B           	dec hl
 101+ 977C 2B           	dec hl
 102+ 977D 24           	inc h
 103+ 977E 7C               ld a,h
 104+ 977F E6 07            and 7
 105+ 9781 20 0A            jr nz,3F
 106+ 9783 7D               ld a,l
 107+ 9784 C6 20            add a,$20
 108+ 9786 6F               ld l,a
 109+ 9787 38 04            jr c,3F
 110+ 9789 7C               ld a,h
 111+ 978A D6 08            sub 8
 112+ 978C 67               ld h,a
 113+ 978D 7C           3 ld a,h
 114+ 978E FE 58            cp $58
 115+ 9790 28 02            jr z,4F
 116+ 9792 10 B7            djnz 1B
 117+ 9794 ED 7B 18 89  4 ld sp,(Stack)
 118+ 9798 C9           	ret
 119+ 9799
 120+ 9799              ; ---------------------------------------------------
 121+ 9799
 122+ 9799 ED 73 18 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 979D FD F9        	ld sp,iy
 124+ 979F
 125+ 979F              ; >>>
 126+ 979F
 127+ 979F 06 10            ld b,16
 128+ 97A1 D1           1 pop de
 129+ 97A2 7A           	ld a,d
 130+ 97A3 AE           	xor (hl)
 131+ 97A4 77           	ld (hl),a
 132+ 97A5 24           	inc h
 133+ 97A6 7C               ld a,h
 134+ 97A7 E6 07            and 7
 135+ 97A9 20 0C            jr nz,2F
 136+ 97AB 7D               ld a,l
 137+ 97AC C6 20            add a,$20
 138+ 97AE 6F               ld l,a
 139+ 97AF 38 06            jr c,2F
 140+ 97B1 7C               ld a,h
 141+ 97B2 D6 08            sub 8
 142+ 97B4 67               ld h,a
 143+ 97B5 18 00            jr 2F
 144+ 97B7 7C           2 ld a,h
 145+ 97B8 FE 58            cp $58
 146+ 97BA 28 02            jr z,3F
 147+ 97BC 10 E3            djnz 1B
 148+ 97BE ED 7B 18 89  3 ld sp,(Stack)
 149+ 97C2 C9           	ret
 150+ 97C3
 151+ 97C3 ED 73 18 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97C7 FD F9        	ld sp,iy
 153+ 97C9
 154+ 97C9              ; >>>
 155+ 97C9
 156+ 97C9 06 10            ld b,16
 157+ 97CB D1           1 pop de
 158+ 97CC 7B           	ld a,e
 159+ 97CD AE           	xor (hl)
 160+ 97CE 77           	ld (hl),a
 161+ 97CF 24           	inc h
 162+ 97D0 7C               ld a,h
 163+ 97D1 E6 07            and 7
 164+ 97D3 20 0C            jr nz,2F
 165+ 97D5 7D               ld a,l
 166+ 97D6 C6 20            add a,$20
 167+ 97D8 6F               ld l,a
 168+ 97D9 38 06            jr c,2F
 169+ 97DB 7C               ld a,h
 170+ 97DC D6 08            sub 8
 171+ 97DE 67               ld h,a
 172+ 97DF 18 00            jr 2F
 173+ 97E1 7C           2 ld a,h
 174+ 97E2 FE 58            cp $58
 175+ 97E4 28 02            jr z,3F
 176+ 97E6 10 E3            djnz 1B
 177+ 97E8 ED 7B 18 89  3 ld sp,(Stack)
 178+ 97EC C9           	ret
 179+ 97ED
 180+ 97ED              ; ---------------------------------------------------
 181+ 97ED
 182+ 97ED ED 73 18 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97F1 FD F9        	ld sp,iy
 184+ 97F3 06 08            ld b,8
 185+ 97F5 D1           1 pop de
 186+ 97F6 7A           	ld a,d
 187+ 97F7 AE           	xor (hl)
 188+ 97F8 77           	ld (hl),a
 189+ 97F9 23           	inc hl
 190+ 97FA D1           	pop de
 191+ 97FB 7B           	ld a,e
 192+ 97FC AE           	xor (hl)
 193+ 97FD 77           	ld (hl),a
 194+ 97FE 2B           	dec hl
 195+ 97FF 24            	inc h
 196+ 9800 7C               ld a,h
 197+ 9801 E6 07            and 7
 198+ 9803 20 0A            jr nz,2F
 199+ 9805 7D               ld a,l
 200+ 9806 C6 20            add a,$20
 201+ 9808 6F               ld l,a
 202+ 9809 38 04            jr c,2F
 203+ 980B 7C               ld a,h
 204+ 980C D6 08            sub 8
 205+ 980E 67               ld h,a
 206+ 980F 7C           2 ld a,h
 207+ 9810 FE 58            cp $58
 208+ 9812 28 20            jr z,4F
 209+ 9814 D1               pop de
 210+ 9815 7B           	ld a,e
 211+ 9816 AE           	xor (hl)
 212+ 9817 77           	ld (hl),a
 213+ 9818 23           	inc hl
 214+ 9819 7A           	ld a,d
 215+ 981A AE           	xor (hl)
 216+ 981B 77           	ld (hl),a
 217+ 981C 2B           	dec hl
 218+ 981D 24           	inc h
 219+ 981E 7C               ld a,h
 220+ 981F E6 07            and 7
 221+ 9821 20 0A            jr nz,3F
 222+ 9823 7D               ld a,l
 223+ 9824 C6 20            add a,$20
 224+ 9826 6F               ld l,a
 225+ 9827 38 04            jr c,3F
 226+ 9829 7C               ld a,h
 227+ 982A D6 08            sub 8
 228+ 982C 67               ld h,a
 229+ 982D 7C           3 ld a,h
 230+ 982E FE 58            cp $58
 231+ 9830 28 02            jr z,4F
 232+ 9832 10 C1            djnz 1B
 233+ 9834 ED 7B 18 89  4 ld sp,(Stack)
 234+ 9838 C9           	ret
 235+ 9839
 236+ 9839 ED 73 18 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 983D FD F9        	ld sp,iy
 238+ 983F 06 08            ld b,8
 239+ 9841 D1           1 pop de
 240+ 9842 D1           	pop de
 241+ 9843 7B           	ld a,e
 242+ 9844 AE           	xor (hl)
 243+ 9845 77           	ld (hl),a
 244+ 9846 24            	inc h
 245+ 9847 7C               ld a,h
 246+ 9848 E6 07            and 7
 247+ 984A 20 0A            jr nz,2F
 248+ 984C 7D               ld a,l
 249+ 984D C6 20            add a,$20
 250+ 984F 6F               ld l,a
 251+ 9850 38 04            jr c,2F
 252+ 9852 7C               ld a,h
 253+ 9853 D6 08            sub 8
 254+ 9855 67               ld h,a
 255+ 9856 7C           2 ld a,h
 256+ 9857 FE 58            cp $58
 257+ 9859 28 1B            jr z,4F
 258+ 985B D1               pop de
 259+ 985C 7A           	ld a,d
 260+ 985D AE           	xor (hl)
 261+ 985E 77           	ld (hl),a
 262+ 985F 24           	inc h
 263+ 9860 7C               ld a,h
 264+ 9861 E6 07            and 7
 265+ 9863 20 0A            jr nz,3F
 266+ 9865 7D               ld a,l
 267+ 9866 C6 20            add a,$20
 268+ 9868 6F               ld l,a
 269+ 9869 38 04            jr c,3F
 270+ 986B 7C               ld a,h
 271+ 986C D6 08            sub 8
 272+ 986E 67               ld h,a
 273+ 986F 7C           3 ld a,h
 274+ 9870 FE 58            cp $58
 275+ 9872 28 02            jr z,4F
 276+ 9874 10 CB            djnz 1B
 277+ 9876 ED 7B 18 89  4 ld sp,(Stack)
 278+ 987A C9           	ret
 279+ 987B
 280+ 987B ED 73 18 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 987F FD F9        	ld sp,iy
 282+ 9881 06 08            ld b,8
 283+ 9883 D1           1 pop de
 284+ 9884 7B           	ld a,e
 285+ 9885 AE           	xor (hl)
 286+ 9886 77           	ld (hl),a
 287+ 9887 23           	inc hl
 288+ 9888 7A           	ld a,d
 289+ 9889 AE           	xor (hl)
 290+ 988A 77           	ld (hl),a
 291+ 988B 2B           	dec hl
 292+ 988C 24             	inc h
 293+ 988D 7C               ld a,h
 294+ 988E E6 07            and 7
 295+ 9890 20 0A            jr nz,2F
 296+ 9892 7D               ld a,l
 297+ 9893 C6 20            add a,$20
 298+ 9895 6F               ld l,a
 299+ 9896 38 04            jr c,2F
 300+ 9898 7C               ld a,h
 301+ 9899 D6 08            sub 8
 302+ 989B 67               ld h,a
 303+ 989C 7C           2 ld a,h
 304+ 989D FE 58            cp $58
 305+ 989F 28 21            jr z,4F
 306+ 98A1 D1               pop de
 307+ 98A2 7A           	ld a,d
 308+ 98A3 AE           	xor (hl)
 309+ 98A4 77           	ld (hl),a
 310+ 98A5 23           	inc hl
 311+ 98A6 D1               pop de
 312+ 98A7 7B           	ld a,e
 313+ 98A8 AE           	xor (hl)
 314+ 98A9 77           	ld (hl),a
 315+ 98AA 2B           	dec hl
 316+ 98AB 24           	inc h
 317+ 98AC 7C               ld a,h
 318+ 98AD E6 07            and 7
 319+ 98AF 20 0A            jr nz,3F
 320+ 98B1 7D               ld a,l
 321+ 98B2 C6 20            add a,$20
 322+ 98B4 6F               ld l,a
 323+ 98B5 38 04            jr c,3F
 324+ 98B7 7C               ld a,h
 325+ 98B8 D6 08            sub 8
 326+ 98BA 67               ld h,a
 327+ 98BB 7C           3 ld a,h
 328+ 98BC FE 58            cp $58
 329+ 98BE 28 02            jr z,4F
 330+ 98C0 10 C1            djnz 1B
 331+ 98C2 ED 7B 18 89  4 ld sp,(Stack)
 332+ 98C6 C9           	ret
 333+ 98C7
 334+ 98C7 ED 73 18 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98CB FD F9        	ld sp,iy
 336+ 98CD 06 08            ld b,8
 337+ 98CF D1           1 pop de
 338+ 98D0 7B           	ld a,e
 339+ 98D1 AE           	xor (hl)
 340+ 98D2 77           	ld (hl),a
 341+ 98D3 24            	inc h
 342+ 98D4 7C               ld a,h
 343+ 98D5 E6 07            and 7
 344+ 98D7 20 0A            jr nz,2F
 345+ 98D9 7D               ld a,l
 346+ 98DA C6 20            add a,$20
 347+ 98DC 6F               ld l,a
 348+ 98DD 38 04            jr c,2F
 349+ 98DF 7C               ld a,h
 350+ 98E0 D6 08            sub 8
 351+ 98E2 67               ld h,a
 352+ 98E3 7C           2 ld a,h
 353+ 98E4 FE 58            cp $58
 354+ 98E6 28 1C            jr z,4F
 355+ 98E8 D1               pop de
 356+ 98E9 7A           	ld a,d
 357+ 98EA AE           	xor (hl)
 358+ 98EB 77           	ld (hl),a
 359+ 98EC 24           	inc h
 360+ 98ED 7C               ld a,h
 361+ 98EE E6 07            and 7
 362+ 98F0 20 0A            jr nz,3F
 363+ 98F2 7D               ld a,l
 364+ 98F3 C6 20            add a,$20
 365+ 98F5 6F               ld l,a
 366+ 98F6 38 04            jr c,3F
 367+ 98F8 7C               ld a,h
 368+ 98F9 D6 08            sub 8
 369+ 98FB 67               ld h,a
 370+ 98FC 7C           3 ld a,h
 371+ 98FD FE 58            cp $58
 372+ 98FF 28 03            jr z,4F
 373+ 9901 D1               pop de
 374+ 9902 10 CB            djnz 1B
 375+ 9904 ED 7B 18 89  4 ld sp,(Stack)
 376+ 9908 C9           	ret
 377+ 9909
 378+ 9909              ; ---------------------------------------------------
 379+ 9909              ;
 380+ 9909              ;   27/02/23
 381+ 9909              ;
 382+ 9909              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9909              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9909              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9909
 386+ 9909 ED 73 18 89  Pinta_Disparo ld (Stack),sp
 387+ 990D FD F9            ld sp,iy
 388+ 990F 06 03            ld b,3
 389+ 9911 D1           1 pop de
 390+ 9912 7B               ld a,e
 391+ 9913 AE               xor (hl)
 392+ 9914 77               ld (hl),a
 393+ 9915 23               inc hl
 394+ 9916 7A               ld a,d
 395+ 9917 AE               xor (hl)
 396+ 9918 77               ld (hl),a
 397+ 9919 2B               dec hl
 398+ 991A
 399+ 991A 24               inc h
 400+ 991B 7C               ld a,h
 401+ 991C E6 07            and 7
 402+ 991E 20 0A            jr nz,2F
 403+ 9920 7D               ld a,l
 404+ 9921 C6 20            add a,$20
 405+ 9923 6F               ld l,a
 406+ 9924 38 04            jr c,2F
 407+ 9926 7C               ld a,h
 408+ 9927 D6 08            sub 8
 409+ 9929 67               ld h,a
 410+ 992A 7C           2 ld a,h
 411+ 992B FE 58            cp $58
 412+ 992D 28 02            jr z,3F
 413+ 992F
 414+ 992F 10 E0            djnz 1B
 415+ 9931 ED 7B 18 89  3 ld sp,(Stack)
 416+ 9935 C9               ret
 417+ 9936
# file closed: Rutinas_de_impresion_sprites.asm
1666  9936              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9936              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9936              ;
   3+ 9936              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9936              ;
   5+ 9936              ; *****************************************************************************************************************************************************************************************
   6+ 9936              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9936
   8+ 9936 7C           calcula_tercio ld a,h
   9+ 9937 E6 18        	and $18
  10+ 9939 CB 2F        	sra a
  11+ 993B CB 2F        	sra a
  12+ 993D CB 2F        	sra a
  13+ 993F C9           	ret
  14+ 9940
# file closed: calcula_tercio.asm
1667  9940              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9940              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9940              ;
   3+ 9940              ;
   4+ 9940              ;	CLS.
   5+ 9940              ;
   6+ 9940              ;	Limpia la pantalla y define sus atributos.
   7+ 9940              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9940              ;
   9+ 9940              ;	COLORES: 0 ..... NEGRO
  10+ 9940              ;    		 1 ..... AZUL
  11+ 9940              ; 			 2 ..... ROJO
  12+ 9940              ;			 3 ..... MAGENTA
  13+ 9940              ; 			 4 ..... VERDE
  14+ 9940              ; 			 5 ..... CIAN
  15+ 9940              ;			 6 ..... AMARILLO
  16+ 9940              ; 			 7 ..... BLANCO
  17+ 9940              ;
  18+ 9940              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9940              ;
  20+ 9940              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9940
  22+ 9940
  23+ 9940 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9943 11 01 40     	LD DE,$4001
  25+ 9946 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9949 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 994B ED B0        	LDIR
  28+ 994D 01 FF 02     	LD BC,767
  29+ 9950 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9951 ED B0        	LDIR
  31+ 9953 C9           	ret
  32+ 9954
# file closed: Cls.asm
1668  9954              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9954              ; ******************************************************************************************************************************************************************************************
   2+ 9954              ;
   3+ 9954              ;   20/05/23
   4+ 9954              ;
   5+ 9954              ;	Recompone_posicion_inicio
   6+ 9954              ;
   7+ 9954              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9954              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9954              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9954              ;	_ a una u otra rutina.
  11+ 9954
  12+ 9954              Recompone_posicion_inicio
  13+ 9954
  14+ 9954 2A DC 88     	ld hl,(Posicion_inicio)
  15+ 9957 7D           	ld a,l
  16+ 9958 E6 1F        	and $1f
  17+ 995A 28 16        	jr z,1F
  18+ 995C
  19+ 995C FE 1F        	cp $1f
  20+ 995E 28 0D        	jr z,3F
  21+ 9960
  22+ 9960 21 05 89     	ld hl,Ctrl_2
  23+ 9963 CB C6        	set 0,(hl)
  24+ 9965 2A CE 88     	ld hl,(Puntero_objeto)
  25+ 9968 22 08 89     	ld (Repone_puntero_objeto),hl
  26+ 996B 18 08        	jr 2F
  27+ 996D
  28+ 996D CD 0E 9B     3 call Mov_left
  29+ 9970 18 03        	jr 2F
  30+ 9972
  31+ 9972 CD F0 99     1 call Mov_right
  32+ 9975 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9978 22 CE 88     	ld (Puntero_objeto),hl
  34+ 997B C9           	ret
  35+ 997C
  36+ 997C              ; ******************************************************************************************************************************************************************************************
  37+ 997C              ;
  38+ 997C              ;   27/05/23
  39+ 997C              ;
  40+ 997C              ;	Mov_down
  41+ 997C              ;
  42+ 997C              ; 	Mueve el Sprite X px hacia abajo.
  43+ 997C              ;
  44+ 997C              ;
  45+ 997C              Mov_down
  46+ 997C
  47+ 997C CD DE 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 997F              ;																	; _ repone (Puntero_objeto).
  49+ 997F 21 F4 88     	ld hl,Ctrl_0
  50+ 9982 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9984              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9984              ; 																	; _ en el caso de que no lo haya.
  53+ 9984 3A E2 88     	ld a,(Vel_down)
  54+ 9987 47           	ld b,a
  55+ 9988 2A CC 88         ld hl,(Posicion_actual)
  56+ 998B CD 36 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 998E E6 02        	and 2
  58+ 9990 28 0F        	jr z,1F
  59+ 9992
  60+ 9992              ; Nos encontramos en el último tercio de pantalla.
  61+ 9992              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9992
  63+ 9992 7C           	ld a,h
  64+ 9993 FE 57        	cp $57
  65+ 9995 20 0A        	jr nz,1F
  66+ 9997
  67+ 9997 7D           	ld a,l
  68+ 9998 C6 20        	add $20
  69+ 999A 30 05        	jr nc,1F
  70+ 999C
  71+ 999C              ; ------------------------------
  72+ 999C              ;	call Reaparece_arriba
  73+ 999C CD 9B 9C     	call Reinicio
  74+ 999F              ; ------------------------------
  75+ 999F
  76+ 999F 18 08        	jr 3F
  77+ 99A1 CD 23 96     1 call NextScan
  78+ 99A4 22 CC 88     	ld (Posicion_actual),hl
  79+ 99A7 10 E2            djnz 2B
  80+ 99A9 CD C1 9C     3 call Genera_coordenadas
  81+ 99AC C9           	ret
  82+ 99AD
  83+ 99AD              ; ******************************************************************************************************************************************************************************************
  84+ 99AD              ;
  85+ 99AD              ;   27/05/23
  86+ 99AD              ;
  87+ 99AD              ;	Mov_up
  88+ 99AD              ;
  89+ 99AD              ; 	Mueve el Sprite hacia arriba.
  90+ 99AD              ;
  91+ 99AD              ;
  92+ 99AD              Mov_up
  93+ 99AD
  94+ 99AD CD DE 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99B0              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99B0 21 F4 88     	ld hl,Ctrl_0
  97+ 99B3 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99B5              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99B5              ; 																		; _ en el caso de que no lo haya.
 100+ 99B5 3A E1 88     	ld a,(Vel_up)
 101+ 99B8 47           	ld b,a
 102+ 99B9 2A CC 88     	ld hl,(Posicion_actual)
 103+ 99BC CD 36 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99BF A7           	and a
 105+ 99C0 20 10        	jr nz,1F
 106+ 99C2
 107+ 99C2              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99C2              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99C2
 110+ 99C2 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99C3 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99C5 20 0B            jr nz,1F
 113+ 99C7 7D               ld a,l
 114+ 99C8 D6 20            sub $20
 115+ 99CA 30 06            jr nc,1F
 116+ 99CC 25               dec h
 117+ 99CD
 118+ 99CD              ; -----------------------------
 119+ 99CD CD 7C 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99D0              ;	call Reinicio
 121+ 99D0              ; -----------------------------
 122+ 99D0
 123+ 99D0 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99D2 CD 32 96     1 call PreviousScan
 125+ 99D5 22 CC 88     	ld (Posicion_actual),hl
 126+ 99D8 10 E2            djnz 3B
 127+ 99DA CD C1 9C     2 call Genera_coordenadas
 128+ 99DD C9           	ret
 129+ 99DE
 130+ 99DE              ; -----------------------------
 131+ 99DE              ;
 132+ 99DE              ;	27/5/23
 133+ 99DE              ;
 134+ 99DE              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99DE              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99DE              ;
 137+ 99DE              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99DE              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99DE              ;
 140+ 99DE              ;	Modifica: A y (Puntero_objeto).
 141+ 99DE
 142+ 99DE 3A 05 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99E1 CB 47        	bit 0,a
 144+ 99E3 C8           	ret z
 145+ 99E4 CB 87        	res 0,a
 146+ 99E6 32 05 89     	ld (Ctrl_2),a
 147+ 99E9 2A 08 89     	ld hl,(Repone_puntero_objeto)
 148+ 99EC 22 CE 88     	ld (Puntero_objeto),hl
 149+ 99EF C9           	ret
 150+ 99F0
 151+ 99F0              ; ******************************************************************************************************************************************************************************************
 152+ 99F0              ;
 153+ 99F0              ;	19/10/22
 154+ 99F0              ;
 155+ 99F0              ;	Mov_right.
 156+ 99F0              ;
 157+ 99F0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99F0              ;
 159+ 99F0
 160+ 99F0 21 F4 88     Mov_right ld hl,Ctrl_0
 161+ 99F3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99F5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99F5              ; 																	; _ en el caso de que no lo haya.
 164+ 99F5 3A F4 88     	ld a,(Ctrl_0)
 165+ 99F8 CB 77        	bit 6,a
 166+ 99FA 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99FC
 168+ 99FC CD 2A 9C     	call Stop_Amadeus_right
 169+ 99FF C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A00 18 4D        	jr 8F
 171+ 9A02
 172+ 9A02 3A D0 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A05 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A07 20 46        	jr nz,8F
 175+ 9A09
 176+ 9A09 3A D2 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A0C A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A0D 28 40        	jr z,8F
 179+ 9A0F
 180+ 9A0F              ; ---------- ---------- ----------
 181+ 9A0F              ;
 182+ 9A0F              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A0F
 184+ 9A0F 3A E0 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A12 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A14 28 11        	jr z,1F
 187+ 9A16 38 06        	jr c,6F
 188+ 9A18 FE 04        	cp 4
 189+ 9A1A 28 14        	jr z,7F
 190+ 9A1C 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A1E
 192+ 9A1E              ; ---------- ---------- ----------
 193+ 9A1E              ;
 194+ 9A1E              ; Perfiles de velocidad
 195+ 9A1E              ;
 196+ 9A1E
 197+ 9A1E 3A D2 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A21 FE FE        	cp $fe
 199+ 9A23 20 2A        	jr nz,8F
 200+ 9A25 18 10        	jr 3F
 201+ 9A27 3A D2 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A2A FE FD        	cp $fd
 203+ 9A2C 20 21        	jr nz,8F
 204+ 9A2E 18 07        	jr 3F
 205+ 9A30 3A D2 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A33 FE FB        	cp $fb
 207+ 9A35 20 18        	jr nz,8F
 208+ 9A37
 209+ 9A37              ; ---------- ---------- ----------
 210+ 9A37
 211+ 9A37              3
 212+ 9A37 CD 6A 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A3A              ;	call Reinicio
 214+ 9A3A
 215+ 9A3A              ; ---------- ---------- ----------
 216+ 9A3A              ;
 217+ 9A3A              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A3A
 219+ 9A3A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A3C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A3D CD 56 9A     	call DESPLZ_DER
 222+ 9A40 C1           	pop bc
 223+ 9A41 10 F9        	djnz 5B
 224+ 9A43 2A CC 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A46 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A47 22 CC 88     	ld (Posicion_actual),hl
 227+ 9A4A CD C1 9C     	call Genera_coordenadas
 228+ 9A4D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A4F
 230+ 9A4F              ; ---------- ---------- ----------
 231+ 9A4F
 232+ 9A4F 2A CC 88     8 ld hl,(Posicion_actual)
 233+ 9A52 CD 56 9A     	call DESPLZ_DER
 234+ 9A55 C9           2 ret
 235+ 9A56
 236+ 9A56              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A56              ;
 238+ 9A56              ;	22/9/22
 239+ 9A56              ;
 240+ 9A56
 241+ 9A56 CD 65 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A59 CD B1 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A5C CD DA 9A         call Ciclo_completo
 244+ 9A5F 21 F4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A62 CB FE        	set 7,(hl)
 246+ 9A64 C9           	ret
 247+ 9A65
 248+ 9A65              ; ******************************************************************************************************************************************************************************************
 249+ 9A65              ;	15/02/23
 250+ 9A65              ;
 251+ 9A65
 252+ 9A65 3A E0 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A68 47           	ld b,a
 254+ 9A69 2A D8 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A6C 23           1 inc hl
 256+ 9A6D 23           	inc hl
 257+ 9A6E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A70 22 D8 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A73 CD 8B 8C     	call Extrae_address
 260+ 9A76 22 CE 88     	ld (Puntero_objeto),hl
 261+ 9A79
 262+ 9A79              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A79
 264+ 9A79              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A79              ; Cuántos movimientos hemos hecho ??
 266+ 9A79              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A79
 268+ 9A79 2A D4 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A7C EB           	ex de,hl
 270+ 9A7D A7           	and a
 271+ 9A7E ED 52        	sbc hl,de
 272+ 9A80 CB 3D        	srl l
 273+ 9A82 3E 08        6 ld a,8
 274+ 9A84 95           	sub l
 275+ 9A85 30 1E        	jr nc,3F
 276+ 9A87
 277+ 9A87              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A87              ; B="0".
 279+ 9A87
 280+ 9A87 04           4 inc b
 281+ 9A88 3C           	inc a
 282+ 9A89 20 FC        	jr nz,4B
 283+ 9A8B 78           	ld a,b
 284+ 9A8C 08           	ex af,af
 285+ 9A8D 2A D4 88     	ld hl,(Indice_Sprite_der)
 286+ 9A90 23           5 inc hl
 287+ 9A91 23           	inc hl
 288+ 9A92 10 FC        	djnz 5B
 289+ 9A94 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A97 CD 8B 8C     	call Extrae_address
 291+ 9A9A 22 CE 88     	ld (Puntero_objeto),hl
 292+ 9A9D
 293+ 9A9D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A9D              ; _(Posicion_actual).
 295+ 9A9D
 296+ 9A9D 21 CC 88     	ld hl,Posicion_actual
 297+ 9AA0 34           	inc (hl)
 298+ 9AA1 08               ex af,af
 299+ 9AA2 6F           	ld l,a
 300+ 9AA3 18 DD        	jr 6B
 301+ 9AA5
 302+ 9AA5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AA5
 304+ 9AA5 47           3 ld b,a
 305+ 9AA6 2A D6 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AA9 23           2 inc hl
 307+ 9AAA 23           	inc hl
 308+ 9AAB 10 FC        	djnz 2B
 309+ 9AAD 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AB0 C9           8 ret
 311+ 9AB1
 312+ 9AB1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AB1              ;
 314+ 9AB1              ;	24/7/22
 315+ 9AB1              ;
 316+ 9AB1              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AB1              ;
 318+ 9AB1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AB1              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AB1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AB1
 322+ 9AB1 3A D2 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AB4 A7           	and a
 324+ 9AB5 20 1F        	jr nz,1F
 325+ 9AB7 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AB9 32 D2 88         ld (CTRL_DESPLZ),a
 327+ 9ABC
 328+ 9ABC 21 CB 88     	ld hl,Columns
 329+ 9ABF 34           	inc (hl)
 330+ 9AC0 3A DE 88     	ld a,(Cuad_objeto)
 331+ 9AC3 E6 01        	and 1
 332+ 9AC5 28 0F        	jr z,1F
 333+ 9AC7 2A CC 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9ACA 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9ACB 22 CC 88     	ld (Posicion_actual),hl
 336+ 9ACE CD C1 9C     	call Genera_coordenadas
 337+ 9AD1 CD 36 9C     	call Inc_CTRL_DESPLZ
 338+ 9AD4 18 03        	jr 2F
 339+ 9AD6 CD 36 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AD9 C9           2 ret
 341+ 9ADA
 342+ 9ADA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9ADA              ;
 344+ 9ADA              ;	24/7/22
 345+ 9ADA              ;
 346+ 9ADA              ;	Ciclo_completo.
 347+ 9ADA              ;
 348+ 9ADA              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9ADA              ;
 350+ 9ADA              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9ADA              ; 	Decrementamos (Columns).
 352+ 9ADA              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9ADA              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9ADA
 355+ 9ADA
 356+ 9ADA 3A D2 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9ADD FE FF        	cp $ff
 358+ 9ADF 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AE1 E6 F0        	and $f0
 360+ 9AE3 20 28        	jr nz,3F
 361+ 9AE5
 362+ 9AE5              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AE5
 364+ 9AE5 3A D2 88     	ld a,(CTRL_DESPLZ)
 365+ 9AE8 47           	ld b,a
 366+ 9AE9 3E F8        	ld a,$f8
 367+ 9AEB 80           	add b
 368+ 9AEC 32 D2 88     	ld (CTRL_DESPLZ),a
 369+ 9AEF 18 1C        	jr 3F
 370+ 9AF1 21 CB 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AF4 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AF5 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AF6 32 D2 88     	ld (CTRL_DESPLZ),a
 374+ 9AF9 3A DE 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AFC E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AFE 20 0A        	jr nz,2F
 377+ 9B00 2A CC 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B03 23           	inc hl
 379+ 9B04 22 CC 88     	ld (Posicion_actual),hl
 380+ 9B07 CD C1 9C     	call Genera_coordenadas
 381+ 9B0A
 382+ 9B0A              ; Inicia el puntero de Sprite.
 383+ 9B0A
 384+ 9B0A CD A2 8C     2 call Inicia_puntero_objeto_der
 385+ 9B0D C9           3 ret
 386+ 9B0E
 387+ 9B0E              ; ******************************************************************************************************************************************************************************************
 388+ 9B0E              ;
 389+ 9B0E              ;	15/02/23
 390+ 9B0E              ;
 391+ 9B0E              ;	Mov_left.
 392+ 9B0E              ;
 393+ 9B0E              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B0E              ;
 395+ 9B0E              Mov_left
 396+ 9B0E
 397+ 9B0E 21 F4 88     	ld hl,Ctrl_0
 398+ 9B11 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B13              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B13              ; 																	; _ en el caso de que no lo haya.
 401+ 9B13 3A F4 88     	ld a,(Ctrl_0)
 402+ 9B16 CB 77        	bit 6,a
 403+ 9B18 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B1A
 405+ 9B1A CD 30 9C     	call Stop_Amadeus_left
 406+ 9B1D C8           	ret z
 407+ 9B1E 20 4A        	jr nz,8F
 408+ 9B20
 409+ 9B20 3A D0 88     11 ld a,(Coordenada_X)
 410+ 9B23 A7           	and a
 411+ 9B24 20 44        	jr nz,8F
 412+ 9B26
 413+ 9B26 3A D2 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B29 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B2A 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B2C
 417+ 9B2C              ; ---------- ---------- ----------
 418+ 9B2C
 419+ 9B2C 3A DF 88     	ld a,(Vel_left)
 420+ 9B2F FE 02        	cp 2
 421+ 9B31 28 0F        	jr z,1F
 422+ 9B33 38 04        	jr c,6F
 423+ 9B35 FE 04        	cp 4
 424+ 9B37 28 12        	jr z,7F
 425+ 9B39
 426+ 9B39              ; ---------- ---------- ----------
 427+ 9B39
 428+ 9B39 3A D2 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B3C FE F8        	cp $f8
 430+ 9B3E 20 2A        	jr nz,8F
 431+ 9B40 18 10        	jr 4F
 432+ 9B42 3A D2 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B45 FE F9        	cp $f9
 434+ 9B47 20 21        	jr nz,8F
 435+ 9B49 18 07        	jr 4F
 436+ 9B4B 3A D2 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B4E FE FB        	cp $fb
 438+ 9B50 20 18        	jr nz,8F
 439+ 9B52
 440+ 9B52              ; ---------- ---------- ----------
 441+ 9B52
 442+ 9B52              4
 443+ 9B52 CD 58 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B55              ;	call Reinicio
 445+ 9B55
 446+ 9B55              ; ---------- ---------- ----------
 447+ 9B55
 448+ 9B55 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B57 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B58
 451+ 9B58              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B58              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B58
 454+ 9B58 CD 71 9B     	call DESPLZ_IZQ
 455+ 9B5B C1           	pop bc
 456+ 9B5C 10 F9        	djnz 5B
 457+ 9B5E 2A CC 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B61 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B62 22 CC 88     	ld (Posicion_actual),hl
 460+ 9B65 CD C1 9C     	call Genera_coordenadas
 461+ 9B68 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B6A
 463+ 9B6A              ; ---------- ---------- ----------
 464+ 9B6A
 465+ 9B6A              ; Movemos, no hay recolocación.
 466+ 9B6A
 467+ 9B6A 2A CC 88     8 ld hl,(Posicion_actual)
 468+ 9B6D CD 71 9B     	call DESPLZ_IZQ
 469+ 9B70 C9           2 ret
 470+ 9B71
 471+ 9B71              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B71              ;
 473+ 9B71              ;	22/9/22
 474+ 9B71
 475+ 9B71              DESPLZ_IZQ
 476+ 9B71
 477+ 9B71 CD 80 9B     	call Desplaza_izquierda
 478+ 9B74 CD CC 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B77 CD F4 9B     	call Ciclo_completo_2
 480+ 9B7A 21 F4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B7D CB BE        	res 7,(hl)
 482+ 9B7F C9           	ret
 483+ 9B80
 484+ 9B80              Desplaza_izquierda
 485+ 9B80
 486+ 9B80 3A DF 88     	ld a,(Vel_left)
 487+ 9B83 47           	ld b,a
 488+ 9B84 2A DA 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B87 23           1 inc hl
 490+ 9B88 23           	inc hl
 491+ 9B89 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B8B 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B8E CD 8B 8C     	call Extrae_address
 494+ 9B91 22 CE 88     	ld (Puntero_objeto),hl
 495+ 9B94
 496+ 9B94              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B94
 498+ 9B94              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B94              ; Cuántos movimientos hemos hecho ??
 500+ 9B94              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B94
 502+ 9B94 2A D6 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B97 EB           	ex de,hl
 504+ 9B98 A7           	and a
 505+ 9B99 ED 52        	sbc hl,de
 506+ 9B9B CB 3D        	srl l
 507+ 9B9D 3E 08        6 ld a,8
 508+ 9B9F 95           	sub l
 509+ 9BA0 30 1E        	jr nc,3F
 510+ 9BA2
 511+ 9BA2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BA2              ; B="0".
 513+ 9BA2
 514+ 9BA2 04           4 inc b
 515+ 9BA3 3C           	inc a
 516+ 9BA4 20 FC        	jr nz,4B
 517+ 9BA6 78           	ld a,b
 518+ 9BA7 08           	ex af,af
 519+ 9BA8 2A D6 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BAB 23           5 inc hl
 521+ 9BAC 23           	inc hl
 522+ 9BAD 10 FC        	djnz 5B
 523+ 9BAF 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BB2 CD 8B 8C     	call Extrae_address
 525+ 9BB5 22 CE 88     	ld (Puntero_objeto),hl
 526+ 9BB8
 527+ 9BB8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BB8              ; _(Posicion_actual).
 529+ 9BB8
 530+ 9BB8 21 CC 88     	ld hl,Posicion_actual
 531+ 9BBB 35           	dec (hl)
 532+ 9BBC 08           	ex af,af
 533+ 9BBD 6F           	ld l,a
 534+ 9BBE 18 DD        	jr 6B
 535+ 9BC0
 536+ 9BC0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BC0
 538+ 9BC0 47           3 ld b,a
 539+ 9BC1 2A D4 88     	ld hl,(Indice_Sprite_der)
 540+ 9BC4 23           2 inc hl
 541+ 9BC5 23           	inc hl
 542+ 9BC6 10 FC        	djnz 2B
 543+ 9BC8 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BCB C9           8 ret
 545+ 9BCC
 546+ 9BCC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BCC              ;
 548+ 9BCC              ;	modifica_parametros_1er_DESPLZ
 549+ 9BCC              ;
 550+ 9BCC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BCC              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BCC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BCC
 554+ 9BCC 3A D2 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BCF A7           	and a
 556+ 9BD0 20 1E        	jr nz,1F
 557+ 9BD2 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BD3 32 D2 88         ld (CTRL_DESPLZ),a
 559+ 9BD6 21 CB 88     	ld hl,Columns
 560+ 9BD9 34           	inc (hl)
 561+ 9BDA 3A DE 88     	ld a,(Cuad_objeto)
 562+ 9BDD E6 01        	and 1
 563+ 9BDF 20 0F        	jr nz,1F
 564+ 9BE1 2A CC 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BE4 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BE5 22 CC 88     	ld (Posicion_actual),hl
 567+ 9BE8 CD C1 9C     	call Genera_coordenadas
 568+ 9BEB CD 47 9C     	call Dec_CTRL_DESPLZ
 569+ 9BEE 18 03        	jr 2F
 570+ 9BF0 CD 47 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BF3 C9           2 ret
 572+ 9BF4
 573+ 9BF4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BF4
 575+ 9BF4 3A D2 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BF7 FE F7        	cp $f7
 577+ 9BF9 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BFB 30 2C        	jr nc,3F
 579+ 9BFD
 580+ 9BFD              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BFD
 582+ 9BFD 06 00        	ld b,0
 583+ 9BFF 04           4 inc b
 584+ 9C00 3C           	inc a
 585+ 9C01 FE F7        	cp $f7
 586+ 9C03 20 FA        	jr nz,4B
 587+ 9C05 3E FF        	ld a,$ff
 588+ 9C07 90           	sub b
 589+ 9C08 32 D2 88     	ld (CTRL_DESPLZ),a
 590+ 9C0B 18 1C        	jr 3F
 591+ 9C0D
 592+ 9C0D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C0D
 594+ 9C0D 21 CB 88     1 ld hl,Columns
 595+ 9C10 35           	dec (hl)
 596+ 9C11 AF           	xor a
 597+ 9C12 32 D2 88     	ld (CTRL_DESPLZ),a
 598+ 9C15 3A DE 88     	ld a,(Cuad_objeto)
 599+ 9C18 E6 01        	and 1
 600+ 9C1A 28 0A        	jr z,2F
 601+ 9C1C 2A CC 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C1F 2B           	dec hl
 603+ 9C20 22 CC 88     	ld (Posicion_actual),hl
 604+ 9C23 CD C1 9C     	call Genera_coordenadas
 605+ 9C26
 606+ 9C26              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C26
 608+ 9C26 CD B5 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C29 C9           3 ret
 610+ 9C2A
 611+ 9C2A              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C2A              ;
 613+ 9C2A              ;	19/10/22
 614+ 9C2A              ;
 615+ 9C2A              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C2A              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C2A
 618+ 9C2A 3A D0 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C2D FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C2F C9           	ret
 621+ 9C30
 622+ 9C30              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C30              ;
 624+ 9C30              ;	19/10/22
 625+ 9C30              ;
 626+ 9C30              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C30              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C30
 629+ 9C30 3A D0 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C33 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C35 C9           	ret
 632+ 9C36
 633+ 9C36              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C36              ;
 635+ 9C36              ;	24/7/22
 636+ 9C36              ;
 637+ 9C36              ;	Inc_CTRL_DESPLZ
 638+ 9C36              ;
 639+ 9C36              ;
 640+ 9C36              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C36
 642+ 9C36 21 D2 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C39 3A E0 88     	ld a,(Vel_right)
 644+ 9C3C A7           	and a
 645+ 9C3D 28 06        	jr z,1F
 646+ 9C3F 47           	ld b,a
 647+ 9C40 34           3 inc (hl)
 648+ 9C41 10 FD        	djnz 3B
 649+ 9C43 18 01        	jr 2F
 650+ 9C45 34           1 inc (hl)
 651+ 9C46 C9           2 ret
 652+ 9C47
 653+ 9C47              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C47              ;
 655+ 9C47              ;	5/2/23
 656+ 9C47              ;
 657+ 9C47              ;	Dec_CTRL_DESPLZ
 658+ 9C47              ;
 659+ 9C47              ;
 660+ 9C47              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C47
 662+ 9C47 21 D2 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C4A 3A DF 88     	ld a,(Vel_left)
 664+ 9C4D A7           	and a
 665+ 9C4E 28 06        	jr z,1F
 666+ 9C50 47           	ld b,a
 667+ 9C51 35           3 dec (hl)
 668+ 9C52 10 FD        	djnz 3B
 669+ 9C54 18 01        	jr 2F
 670+ 9C56 35           1 dec (hl)
 671+ 9C57 C9           2 ret
 672+ 9C58
 673+ 9C58              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C58
 675+ 9C58 2A CC 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C5B 01 1F 00     	ld bc,31
 677+ 9C5E A7           	and a
 678+ 9C5F ED 4A        	adc hl,bc
 679+ 9C61 22 CC 88     	ld (Posicion_actual),hl
 680+ 9C64 21 F4 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C67 CB C6        	set 0,(hl)
 682+ 9C69 C9           	ret
 683+ 9C6A
 684+ 9C6A              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C6A
 686+ 9C6A 2A CC 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C6D 01 1F 00     	ld bc,31
 688+ 9C70 A7           	and a
 689+ 9C71 ED 42        	sbc hl,bc
 690+ 9C73 22 CC 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C76 21 F4 88     	ld hl,Ctrl_0
 692+ 9C79 CB CE        	set 1,(hl)
 693+ 9C7B C9           	ret
 694+ 9C7C
 695+ 9C7C              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C7C
 697+ 9C7C 24           Reaparece_abajo inc h
 698+ 9C7D 01 E0 17     	ld bc,$17e0
 699+ 9C80 A7           	and a
 700+ 9C81 ED 4A        	adc hl,bc
 701+ 9C83 22 CC 88     	ld (Posicion_actual),hl
 702+ 9C86 21 F4 88     	ld hl,Ctrl_0
 703+ 9C89 CB D6        	set 2,(hl)
 704+ 9C8B C9           	ret
 705+ 9C8C
 706+ 9C8C              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C8C
 708+ 9C8C 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C8F A7           	and a
 710+ 9C90 ED 42        	sbc hl,bc
 711+ 9C92 22 CC 88     	ld (Posicion_actual),hl
 712+ 9C95 21 F4 88     	ld hl,Ctrl_0
 713+ 9C98 CB DE        	set 3,(hl)
 714+ 9C9A C9           	ret
 715+ 9C9B
 716+ 9C9B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C9B              ;
 718+ 9C9B              ;	15/07/23
 719+ 9C9B
 720+ 9C9B              Reinicio
 721+ 9C9B
 722+ 9C9B              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C9B
 724+ 9C9B AF           	xor a
 725+ 9C9C 21 F9 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C9F CD BD 9C     	call Limpia_contenido_hl
 727+ 9CA2
 728+ 9CA2 21 CC 88     	ld hl,Posicion_actual
 729+ 9CA5 CD BD 9C     	call Limpia_contenido_hl
 730+ 9CA8
 731+ 9CA8 CD ED 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CAB CD 77 9F     	call Inicia_Puntero_mov
 733+ 9CAE
 734+ 9CAE 21 FB 88     	ld hl,Incrementa_puntero
 735+ 9CB1 06 05        	ld b,5
 736+ 9CB3 77           1 ld (hl),a
 737+ 9CB4 23           	inc hl
 738+ 9CB5 10 FC        	djnz 1B
 739+ 9CB7
 740+ 9CB7 21 05 89     	ld hl,Ctrl_2
 741+ 9CBA CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CBC
 743+ 9CBC C9           	ret
 744+ 9CBD
 745+ 9CBD 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CBE 23           	inc hl
 747+ 9CBF 77           	ld (hl),a
 748+ 9CC0 C9           	ret
 749+ 9CC1
 750+ 9CC1
# file closed: Direcciones.asm
1669  9CC1              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CC1              ; ------------------------------------------------------------------------
   2+ 9CC1              ;
   3+ 9CC1              ;	02/04/23
   4+ 9CC1              ;
   5+ 9CC1              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CC1              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CC1              ;
   8+ 9CC1              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CC1              ;
  10+ 9CC1              ;	Modifica: A,BC y DE.
  11+ 9CC1
  12+ 9CC1 C5           Genera_coordenadas push bc
  13+ 9CC2 E5           	push hl
  14+ 9CC3 D5           	push de
  15+ 9CC4
  16+ 9CC4 2A CC 88     	ld hl,(Posicion_actual)
  17+ 9CC7
  18+ 9CC7 7D           	ld a,l
  19+ 9CC8 E6 1F        	and $1f
  20+ 9CCA 32 D0 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CCD
  22+ 9CCD CD 36 99     	call calcula_tercio
  23+ 9CD0 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CD1
  25+ 9CD1 1E 00        	ld e,0
  26+ 9CD3 7D           	ld a,l
  27+ 9CD4 E6 E0        	and $e0
  28+ 9CD6 28 01        	jr z,1F
  29+ 9CD8 04           	inc b
  30+ 9CD9
  31+ 9CD9 04           1 inc b
  32+ 9CDA 05           	dec b
  33+ 9CDB 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CDD              ;														; _ , salimos.
  35+ 9CDD 1C           3 inc e
  36+ 9CDE D6 20        	sub 32
  37+ 9CE0 20 FB        	jr nz,3B
  38+ 9CE2 10 F5        	djnz 1B
  39+ 9CE4
  40+ 9CE4 7B           2 ld a,e
  41+ 9CE5 32 D1 88     	ld (Coordenada_y),a
  42+ 9CE8
  43+ 9CE8 D1           	pop de
  44+ 9CE9 E1           	pop hl
  45+ 9CEA C1           	pop bc
  46+ 9CEB
  47+ 9CEB C9           	ret
  48+ 9CEC
  49+ 9CEC              ; ------------------------------------------------------------------------
  50+ 9CEC              ;	28/05/23
  51+ 9CEC              ;
  52+ 9CEC              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CEC              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CEC              ;
  55+ 9CEC              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CEC              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CEC              ;
  58+ 9CEC              ;		DE="$120d"
  59+ 9CEC              ;
  60+ 9CEC              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CEC              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CEC              ;
  63+ 9CEC              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CEC
  65+ 9CEC              ;	Modifica: A,BC y DE.
  66+ 9CEC
  67+ 9CEC
  68+ 9CEC              Genera_coordenadas_disparo
  69+ 9CEC
  70+ 9CEC              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CEC
  72+ 9CEC 7D           	ld a,l
  73+ 9CED E6 1F        	and $1f
  74+ 9CEF 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CF0 CD 36 99     	call calcula_tercio
  76+ 9CF3 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CF4 1E 00        	ld e,0
  78+ 9CF6 7D           	ld a,l
  79+ 9CF7 E6 E0        	and $e0
  80+ 9CF9 28 01        	jr z,1F
  81+ 9CFB 04           	inc b
  82+ 9CFC 1C           1 inc e
  83+ 9CFD D6 20        	sub 32
  84+ 9CFF 20 FB        	jr nz,1B
  85+ 9D01 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D03 C9           	ret
  87+ 9D04
# file closed: Genera_coordenadas.asm
1670  9D04              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D04              ; Relojes y temporizaciones.
   2+ 9D04
   3+ 9D04              ; ------------------------------------------------------
   4+ 9D04              ;
   5+ 9D04              ;	16/7/23
   6+ 9D04              ;
   7+ 9D04              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D04              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D04              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D04              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D04              ;
  12+ 9D04              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D04              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D04
  15+ 9D04              ; Disparo_entidad db 1
  16+ 9D04              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D04              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D04
  19+ 9D04              Habilita_disparos
  20+ 9D04
  21+ 9D04 7E           	ld a,(hl)
  22+ 9D05 A7           	and a
  23+ 9D06 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D07
  25+ 9D07 EB           	ex de,hl
  26+ 9D08
  27+ 9D08 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D09 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D0A
  30+ 9D0A              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D0A
  32+ 9D0A 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D0B 7E           	ld a,(hl)
  34+ 9D0C 23           	inc hl
  35+ 9D0D 77           	ld (hl),a
  36+ 9D0E
  37+ 9D0E EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D0F 3E 01        	ld a,1
  39+ 9D11 77           	ld (hl),a
  40+ 9D12 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1671  9D13              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D13
   2+ 9D13
   3+ 9D13              ;   07/07/23
   4+ 9D13              ;
   5+ 9D13              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D13              ;
   7+ 9D13              ;   Codificación:
   8+ 9D13              ;
   9+ 9D13              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D13              ;
  11+ 9D13              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D13              ;
  13+ 9D13              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D13              ;
  15+ 9D13              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D13              ;
  17+ 9D13              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D13              ;                               ..... %01000010 Vel_up 4
  19+ 9D13              ;                                               Vel_down 2
  20+ 9D13              ;                               ..... $42
  21+ 9D13              ;
  22+ 9D13              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D13              ;
  24+ 9D13              ;                               ..... %01000010 Vel_left 4
  25+ 9D13              ;                                               Vel_right 2
  26+ 9D13              ;                               ..... $42
  27+ 9D13              ;
  28+ 9D13              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D13              ;
  30+ 9D13              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D13              ;
  32+ 9D13              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D13              ;
  34+ 9D13              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D13              ;                                     $53
  36+ 9D13              ;
  37+ 9D13              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D13              ;
  39+ 9D13              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D13              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D13              ;
  42+ 9D13              ;                       Arriba ..... $81
  43+ 9D13              ;                       Arriba - izquierda ..... $a1
  44+ 9D13              ;                       Arriba - derecha ..... $91
  45+ 9D13              ;
  46+ 9D13              ;                       Abajo ..... $41
  47+ 9D13              ;                       Abajo - izquierda ..... $61
  48+ 9D13              ;                       Abajo - derecha ..... $51
  49+ 9D13              ;
  50+ 9D13              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D13              ;
  52+ 9D13              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D13              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D13              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D13              ;
  56+ 9D13              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D13              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D13              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D13              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D13              ;
  61+ 9D13              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D13              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D13              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D13              ;
  65+ 9D13              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D13              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D13              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D13              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D13
  70+ 9D13              ; ----- ----- ----- ----- -----
  71+ 9D13
  72+ 9D13 3F 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D15 47 9D            defw F_1
  74+ 9D17 51 9D            defw F_2
  75+ 9D19 5B 9D            defw Codo_abajo_derecha
  76+ 9D1B 8F 9D            defw Derecha_y_subiendo
  77+ 9D1D 99 9D            defw Derecha_y_subiendo_1
  78+ 9D1F A3 9D            defw F_3
  79+ 9D21 AD 9D            defw F_4
  80+ 9D23 B7 9D            defw Derecha_y_bajando
  81+ 9D25 C1 9D            defw Derecha_y_bajando_1
  82+ 9D27 CB 9D            defw Derecha_y_bajando_2
  83+ 9D29 D5 9D            defw Codo_derecha_abajo
  84+ 9D2B 05 9E            defw Codo_abajo_izq.
  85+ 9D2D 39 9E            defw Izquierda_y_subiendo
  86+ 9D2F 43 9E            defw Izquierda_y_subiendo_1
  87+ 9D31 4D 9E            defw F_5
  88+ 9D33 57 9E            defw F_6
  89+ 9D35 61 9E            defw Izquierda_y_bajando
  90+ 9D37 6B 9E            defw Izquierda_y_bajando_1
  91+ 9D39 75 9E            defw Izquierda_y_bajando_2
  92+ 9D3B 7F 9E            defw Codo_izquierda_abajo
  93+ 9D3D 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D3F
  95+ 9D3F 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D43 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D47
  98+ 9D47 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D4B 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D4F 08 00
 100+ 9D51 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D55 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D59 0F FE
 102+ 9D5B
 103+ 9D5B 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D5F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D63 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D67 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D6B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D6F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D73 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D77 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D7B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D7F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D83 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D87 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D8B 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D8F
 117+ 9D8F 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D93 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D97 06 00
 119+ 9D99
 120+ 9D99 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D9D 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DA1 02 00
 122+ 9DA3
 123+ 9DA3 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DA7 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DAB 04 00
 125+ 9DAD 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DB1 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DB5 08 00
 127+ 9DB7
 128+ 9DB7 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DBB 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DBF 02 00
 130+ 9DC1
 131+ 9DC1 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DC5 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DC9 06 00
 133+ 9DCB
 134+ 9DCB 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DCF 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DD3 06 00
 136+ 9DD5
 137+ 9DD5              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DD5
 139+ 9DD5 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DD9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DDD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DE1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DE5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DE9 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DED 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DF1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DF5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DF9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DFD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E01 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E05
 152+ 9E05 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E09 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E0D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E11 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E15 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E19 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E1D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E21 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E25 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E29 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E2D 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E31 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E35 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E39
 166+ 9E39 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E3D 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E41 06 00
 168+ 9E43
 169+ 9E43 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E47 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E4B 02 00
 171+ 9E4D
 172+ 9E4D 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E51 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E55 04 00
 174+ 9E57 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E5B 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E5F 08 00
 176+ 9E61
 177+ 9E61 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E65 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E69 02 00
 179+ 9E6B
 180+ 9E6B 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E6F 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E73 06 00
 182+ 9E75
 183+ 9E75 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E79 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E7D 06 00
 185+ 9E7F
 186+ 9E7F 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E83 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E87 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E8B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E8F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E93 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E97 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E9B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E9F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EA3 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EA7 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EAB 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EAF
 199+ 9EAF              ; ----- ----- ----- ----- -----
 200+ 9EAF              ;
 201+ 9EAF              ;   27/06/23
 202+ 9EAF
 203+ 9EAF              Movimiento
 204+ 9EAF
 205+ 9EAF              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EAF
 207+ 9EAF              ;    ld hl,(Posicion_actual)
 208+ 9EAF
 209+ 9EAF 3A 05 89         ld a,(Ctrl_2)
 210+ 9EB2 CB 57            bit 2,a
 211+ 9EB4 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EB6
 213+ 9EB6 2A F7 88         ld hl,(Puntero_mov)
 214+ 9EB9 7E               ld a,(hl)
 215+ 9EBA
 216+ 9EBA              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EBA
 218+ 9EBA              Inicia_desplazamiento.
 219+ 9EBA
 220+ 9EBA              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EBA
 222+ 9EBA CD AE 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EBD
 224+ 9EBD              ; Iniciamos (Repetimos_mov).
 225+ 9EBD
 226+ 9EBD 7E               ld a,(hl)
 227+ 9EBE E6 0F            and $0f
 228+ 9EC0 32 FD 88         ld (Repetimos_desplazamiento),a
 229+ 9EC3 32 FE 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EC6
 231+ 9EC6              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EC6
 233+ 9EC6 23               inc hl
 234+ 9EC7 7E               ld a,(hl)
 235+ 9EC8 32 00 89         ld (Cola_de_desplazamiento),a
 236+ 9ECB 2B               dec hl
 237+ 9ECC
 238+ 9ECC 21 05 89         ld hl,Ctrl_2
 239+ 9ECF CB D6            set 2,(hl)
 240+ 9ED1
 241+ 9ED1              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9ED1              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9ED1
 244+ 9ED1              Desplazamiento_iniciado
 245+ 9ED1
 246+ 9ED1 CD 82 9F         call Aplica_desplazamiento
 247+ 9ED4
 248+ 9ED4 3A 05 89         ld a,(Ctrl_2)
 249+ 9ED7 CB 67            bit 4,a
 250+ 9ED9 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EDA
 252+ 9EDA 21 FD 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EDD 35               dec (hl)
 254+ 9EDE C0               ret nz
 255+ 9EDF
 256+ 9EDF              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EDF              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EDF              ; Analiza (Cola_de_desplazamiento).
 259+ 9EDF
 260+ 9EDF 3A 00 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EE2 A7               and a
 262+ 9EE3 CC D7 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EE6 28 30            jr z,Reinicia_el_movimiento
 264+ 9EE8
 265+ 9EE8 FE FF            cp $ff
 266+ 9EEA 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EEC
 268+ 9EEC FE FE            cp $fe
 269+ 9EEE CC 5B 9F         call z,Fijamos_bucle
 270+ 9EF1 28 25            jr z,Reinicia_el_movimiento
 271+ 9EF3
 272+ 9EF3 FE FD            cp $fd
 273+ 9EF5 20 11            jr nz,1F
 274+ 9EF7
 275+ 9EF7              ; ---
 276+ 9EF7              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EF7
 278+ 9EF7 3A 05 89         ld a,(Ctrl_2)
 279+ 9EFA CB 5F            bit 3,a
 280+ 9EFC 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EFE
 282+ 9EFE              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EFE
 284+ 9EFE 21 05 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F01 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F03
 287+ 9F03 CD 6C 9F         call Inicia_Repetimos_movimiento
 288+ 9F06 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F08              ; ---
 290+ 9F08
 291+ 9F08 FE 01        1 cp 1
 292+ 9F0A CA 45 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F0D
 294+ 9F0D 3D               dec a
 295+ 9F0E 32 00 89         ld (Cola_de_desplazamiento),a
 296+ 9F11
 297+ 9F11 3A FE 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F14 32 FD 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F17              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F17 C9               ret
 301+ 9F18
 302+ 9F18              Reinicia_el_movimiento
 303+ 9F18
 304+ 9F18 3A 05 89         ld a,(Ctrl_2)
 305+ 9F1B CB 5F            bit 3,a
 306+ 9F1D 28 1B            jr z,2F
 307+ 9F1F
 308+ 9F1F              ; (Cola_de_desplazamiento)="254".
 309+ 9F1F
 310+ 9F1F 21 FF 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F22 35               dec (hl)
 312+ 9F23 20 15            jr nz,2F
 313+ 9F25
 314+ 9F25              ; Fin de las repeticiones del último movimiento.
 315+ 9F25
 316+ 9F25 21 05 89         ld hl,Ctrl_2
 317+ 9F28 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F2A
 319+ 9F2A 2A F7 88         ld hl,(Puntero_mov)
 320+ 9F2D 23               inc hl
 321+ 9F2E 23               inc hl
 322+ 9F2F 23               inc hl
 323+ 9F30 22 F7 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F33              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F33 7E               ld a,(hl)
 326+ 9F34 32 00 89         ld (Cola_de_desplazamiento),a
 327+ 9F37
 328+ 9F37 C3 DF 9E         jp Cola
 329+ 9F3A
 330+ 9F3A CD 77 9F     2 call Inicia_Puntero_mov
 331+ 9F3D
 332+ 9F3D 21 05 89         ld hl,Ctrl_2
 333+ 9F40 CB 96            res 2,(hl)
 334+ 9F42
 335+ 9F42 C3 AF 9E         jp Movimiento
 336+ 9F45
 337+ 9F45              Siguiente_desplazamiento
 338+ 9F45
 339+ 9F45              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F45              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F45
 342+ 9F45 21 05 89         ld hl,Ctrl_2
 343+ 9F48 CB 96            res 2,(hl)
 344+ 9F4A
 345+ 9F4A 2A F7 88         ld hl,(Puntero_mov)
 346+ 9F4D 23               inc hl
 347+ 9F4E 23               inc hl
 348+ 9F4F 22 F7 88         ld (Puntero_mov),hl
 349+ 9F52
 350+ 9F52 7E               ld a,(hl)
 351+ 9F53 A7               and a
 352+ 9F54 CC D7 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F57 CA 18 9F         jp z,Reinicia_el_movimiento
 354+ 9F5A
 355+ 9F5A C9               ret
 356+ 9F5B              ; Subrutinas -----------------------------------------
 357+ 9F5B              ; ---------- --------- --------- ---------- ----------
 358+ 9F5B              ;
 359+ 9F5B              ;   24/07/23
 360+ 9F5B              ;
 361+ 9F5B              ;   Fijamos_bucle
 362+ 9F5B              ;
 363+ 9F5B              ;
 364+ 9F5B
 365+ 9F5B              Fijamos_bucle
 366+ 9F5B
 367+ 9F5B 3A FB 88         ld a,(Incrementa_puntero)
 368+ 9F5E 3C               inc a
 369+ 9F5F 32 FC 88         ld (Incrementa_puntero_backup),a
 370+ 9F62
 371+ 9F62 CD D7 9F         call Incrementa_Puntero_indice_mov
 372+ 9F65 2A F5 88         ld hl,(Puntero_indice_mov)
 373+ 9F68 22 F9 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F6B C9               ret
 375+ 9F6C
 376+ 9F6C              ; ---------- --------- --------- ---------- ----------
 377+ 9F6C              ;
 378+ 9F6C              ;   07/7/23
 379+ 9F6C              ;
 380+ 9F6C              ;   Inicia_Repetimos_movimiento
 381+ 9F6C              ;
 382+ 9F6C              ;
 383+ 9F6C
 384+ 9F6C              Inicia_Repetimos_movimiento
 385+ 9F6C
 386+ 9F6C              ; Iniciamos (Repetimos_movimiento).
 387+ 9F6C
 388+ 9F6C DD 2A F7 88      ld ix,(Puntero_mov)
 389+ 9F70 DD 7E 02         ld a,(ix+2)
 390+ 9F73 32 FF 88         ld (Repetimos_movimiento),a
 391+ 9F76
 392+ 9F76 C9               ret
 393+ 9F77
 394+ 9F77              ; ---------- --------- --------- ---------- ----------
 395+ 9F77              ;
 396+ 9F77              ;   26/6/23
 397+ 9F77              ;
 398+ 9F77              ;   Inicia_Puntero_mov
 399+ 9F77              ;
 400+ 9F77              ;
 401+ 9F77
 402+ 9F77 2A F5 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F7A 5E               ld e,(hl)
 404+ 9F7B 23               inc hl
 405+ 9F7C 56               ld d,(hl)
 406+ 9F7D EB               ex de,hl
 407+ 9F7E 22 F7 88         ld (Puntero_mov),hl
 408+ 9F81 C9               ret
 409+ 9F82
 410+ 9F82              ; ---------- --------- --------- ---------- ----------
 411+ 9F82              ;
 412+ 9F82              ;   27/06/23
 413+ 9F82              ;
 414+ 9F82              ;   Aplica_movimiento.
 415+ 9F82
 416+ 9F82              Aplica_desplazamiento
 417+ 9F82
 418+ 9F82              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F82
 420+ 9F82 2A F7 88         ld hl, (Puntero_mov)
 421+ 9F85
 422+ 9F85 7E               ld a,(hl)
 423+ 9F86 E6 F0            and $f0
 424+ 9F88 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F89
 426+ 9F89 CB 7E            bit 7,(hl)
 427+ 9F8B 28 03            jr z,1F
 428+ 9F8D CD AD 99         call Mov_up
 429+ 9F90 2A F7 88     1 ld hl, (Puntero_mov)
 430+ 9F93 CB 76            bit 6,(hl)
 431+ 9F95 28 03            jr z,2F
 432+ 9F97 CD 7C 99         call Mov_down
 433+ 9F9A 2A F7 88     2 ld hl, (Puntero_mov)
 434+ 9F9D CB 6E            bit 5,(hl)
 435+ 9F9F 28 03            jr z,3F
 436+ 9FA1 CD 0E 9B         call Mov_left
 437+ 9FA4 2A F7 88     3 ld hl, (Puntero_mov)
 438+ 9FA7 CB 66            bit 4,(hl)
 439+ 9FA9 C8               ret z
 440+ 9FAA CD F0 99         call Mov_right
 441+ 9FAD C9               ret
 442+ 9FAE
 443+ 9FAE              ; ---------- --------- --------- ---------- ----------
 444+ 9FAE              ;
 445+ 9FAE              ;   26/06/23
 446+ 9FAE              ;
 447+ 9FAE              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FAE
 449+ 9FAE              Ajusta_velocidad_desplazamiento
 450+ 9FAE
 451+ 9FAE              ; 1er byte de la cadena de movimiento.
 452+ 9FAE              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FAE
 454+ 9FAE CD CC 9F         call Extrae_nibble_alto
 455+ 9FB1
 456+ 9FB1 32 E1 88         ld (Vel_up),a
 457+ 9FB4 79               ld a,c
 458+ 9FB5 E6 0F            and $0f
 459+ 9FB7 32 E2 88         ld (Vel_down),a
 460+ 9FBA
 461+ 9FBA              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FBA              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FBA
 464+ 9FBA 23               inc hl
 465+ 9FBB CD CC 9F         call Extrae_nibble_alto
 466+ 9FBE
 467+ 9FBE 32 DF 88         ld (Vel_left),a
 468+ 9FC1 79               ld a,c
 469+ 9FC2 E6 0F            and $0f
 470+ 9FC4 32 E0 88         ld (Vel_right),a
 471+ 9FC7
 472+ 9FC7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FC7
 474+ 9FC7 23               inc hl
 475+ 9FC8 22 F7 88         ld (Puntero_mov),hl
 476+ 9FCB C9               ret
 477+ 9FCC
 478+ 9FCC 06 04        Extrae_nibble_alto ld b,4
 479+ 9FCE 7E               ld a,(hl)
 480+ 9FCF 4F               ld c,a
 481+ 9FD0 E6 F0            and $f0
 482+ 9FD2 CB 3F        1 srl a
 483+ 9FD4 10 FC            djnz 1B
 484+ 9FD6 C9               ret
 485+ 9FD7
 486+ 9FD7              ; ---------- --------- --------- ---------- ----------
 487+ 9FD7              ;
 488+ 9FD7              ;   5/7/23
 489+ 9FD7              ;
 490+ 9FD7              ;   Incrementa_Puntero_indice_mov
 491+ 9FD7
 492+ 9FD7              Incrementa_Puntero_indice_mov
 493+ 9FD7
 494+ 9FD7 21 FB 88         ld hl,Incrementa_puntero
 495+ 9FDA 34               inc (hl)
 496+ 9FDB
 497+ 9FDB 2A F5 88         ld hl,(Puntero_indice_mov)
 498+ 9FDE 01 02 00         ld bc,2
 499+ 9FE1 A7               and a
 500+ 9FE2 09               add hl,bc
 501+ 9FE3 22 F5 88         ld (Puntero_indice_mov),hl
 502+ 9FE6
 503+ 9FE6 7E               ld a,(hl)
 504+ 9FE7 A7               and a
 505+ 9FE8
 506+ 9FE8              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FE8
 508+ 9FE8              ;    jr z,$
 509+ 9FE8
 510+ 9FE8              ;! Reinicia el Patrón de movimiento.
 511+ 9FE8
 512+ 9FE8 CC ED 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FEB
 514+ 9FEB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FEC
 516+ 9FEC C9               ret
 517+ 9FED
 518+ 9FED
 519+ 9FED              ; ---------- --------- --------- ---------- ----------
 520+ 9FED              ;
 521+ 9FED              ;   24/07/23
 522+ 9FED              ;
 523+ 9FED              ;   Inicializa_Puntero_indice_mov
 524+ 9FED
 525+ 9FED              Inicializa_Puntero_indice_mov
 526+ 9FED
 527+ 9FED              ; Existe etiqueta de bucle principal???
 528+ 9FED
 529+ 9FED 2A F9 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FF0 24               inc h
 531+ 9FF1 25               dec h
 532+ 9FF2 28 05            jr z,2F
 533+ 9FF4
 534+ 9FF4 22 F5 88         ld (Puntero_indice_mov),hl
 535+ 9FF7 18 14            jr 3F
 536+ 9FF9
 537+ 9FF9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FF9
 539+ 9FF9 3A FB 88     2 ld a,(Incrementa_puntero)
 540+ 9FFC 47               ld b,a
 541+ 9FFD
 542+ 9FFD 2A F5 88         ld hl,(Puntero_indice_mov)
 543+ A000 2B           1 dec hl
 544+ A001 2B               dec hl
 545+ A002 10 FC            djnz 1B
 546+ A004 22 F5 88         ld (Puntero_indice_mov),hl
 547+ A007
 548+ A007 AF               xor a
 549+ A008 32 FB 88         ld (Incrementa_puntero),a
 550+ A00B 18 06            jr 4F
 551+ A00D
 552+ A00D 3A FC 88     3 ld a,(Incrementa_puntero_backup)
 553+ A010 32 FB 88         ld (Incrementa_puntero),a
 554+ A013 C9           4 ret
 555+ A014
 556+ A014
 557+ A014
# file closed: Patrones_de_mov.asm
1672  A014              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A014              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A014              ;
   3+ A014              ;	27/10/23
   4+ A014              ;
   5+ A014              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A014
   7+ A014              ;	ADC HL,SP	LD (addr),SP
   8+ A014              ;	ADD HL,SP	LD SP,(addr)
   9+ A014              ;	ADD IX,SP	LD SP,nn
  10+ A014              ; 	ADD IY,SP	LD SP,HL
  11+ A014              ;				LD SP,IX
  12+ A014              ;	DEC SP		LD SP,IY
  13+ A014
  14+ A014              ;	EX (SP),HL
  15+ A014              ;	EX (SP),IX
  16+ A014              ;	EX (SP),IY
  17+ A014
  18+ A014              ;	INC SP
  19+ A014
  20+ A014                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 18 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 EA 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 07 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 20 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A F4 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 26 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 1E 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 07 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 20 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A F4 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 26 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 18 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 1E 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 18 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 3C 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   8/11/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72ec
 129+ 72EC
 130+ 72EC              Gestiona_albumes_de_fotos ; 14
 131+ 72EC
 132+ 72EC              ;! Recolocacion.
 133+ 72EC
 134+ 72EC              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 135+ 72EC              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 136+ 72EC
 137+ 72EC 3A 41 89         ld a,(Ctrl_Semaforo)
 138+ 72EF CB 47            bit 0,a
 139+ 72F1 28 62            jr z,7F
 140+ 72F3
 141+ 72F3              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_1 vacíos ???
 142+ 72F3
 143+ 72F3 CB 5F            bit 3,a
 144+ 72F5 28 1E            jr z,13F
 145+ 72F7
 146+ 72F7
 147+ 72F7              ; DOBLE RECOLOCACIÓN. ----------- ------------ -----------
 148+ 72F7
 149+ 72F7              ; Album_de_fotos_1 y Album_de_fotos_2 están vacío pero ... Está Album_de_fotos_3 completo ???
 150+ 72F7
 151+ 72F7 3A 40 89         ld a,(Semaforo)
 152+ 72FA CB 5F            bit 3,a
 153+ 72FC 28 57            jr z,7F                     ;   No podemos hacer la doble recolocación!!! Album_de_fotos_3 está incompleto.
 154+ 72FE
 155+ 72FE              ; Volcamos Álbum_3 a Álbum_2
 156+ 72FE              ;    ""    Álbum_2 a Álbum_1
 157+ 72FE              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 158+ 72FE              ; Actualizamos (Semaforo)
 159+ 72FE              ; Inicializamos (Ctrl_Semaforo)
 160+ 72FE              ; Saltamos a 7F.
 161+ 72FE
 162+ 72FE CD D2 73         call Album3_a_Album2
 163+ 7301 CD F9 73         call Album2_a_Album1
 164+ 7304 CD 54 74         call Actualiza_punteros_de_albumes
 165+ 7307 CD 46 73         call Modifica_Stack_snapshot
 166+ 730A 21 40 89     	ld hl,Semaforo
 167+ 730D CB 0E        	rrc (hl)
 168+ 730F AF               xor a
 169+ 7310 32 41 89         ld (Ctrl_Semaforo),a
 170+ 7313 18 40            jr 7F
 171+ 7315
 172+ 7315              ; ------------ ---------------- ------------
 173+ 7315
 174+ 7315              ;   RECOLOCACIÓN SIMPLE.
 175+ 7315
 176+ 7315              ;   Album3_a_Album2 ?????
 177+ 7315
 178+ 7315 CB 4F        13 bit 1,a
 179+ 7317 20 0A            jr nz,10F
 180+ 7319
 181+ 7319              ;   Álbum_1 vacío.
 182+ 7319
 183+ 7319              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 184+ 7319
 185+ 7319 3A 40 89         ld a,(Semaforo)
 186+ 731C CB 57            bit 2,a
 187+ 731E 28 35            jr z,7F                      ; No puede haber recolocación. Album_de_fotos_2 está incompleto.
 188+ 7320
 189+ 7320 CD F9 73         call Album2_a_Album1
 190+ 7323
 191+ 7323              ; Album3_a_Album2 !!!
 192+ 7323
 193+ 7323              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 194+ 7323
 195+ 7323 3A 40 89     10 ld a,(Semaforo)
 196+ 7326 CB 5F            bit 3,a
 197+ 7328 20 0B            jr nz,11F
 198+ 732A
 199+ 732A              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 200+ 732A              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 201+ 732A
 202+ 732A 21 41 89         ld hl,Ctrl_Semaforo
 203+ 732D CB DE            set 3,(hl)
 204+ 732F CB 86            res 0,(hl)
 205+ 7331 CB 96            res 2,(hl)
 206+ 7333 18 20            jr 7F
 207+ 7335
 208+ 7335              ; Album_de_fotos_3 contiene un FRAME completo.
 209+ 7335              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 210+ 7335
 211+ 7335 CD D2 73     11 call Album3_a_Album2     ;   X-X-X-0
 212+ 7338 CD 46 73         call Modifica_Stack_snapshot
 213+ 733B
 214+ 733B 21 41 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 215+ 733E CB 86            res 0,(hl)
 216+ 7340 CB 8E            res 1,(hl)
 217+ 7342 CB 96            res 2,(hl)
 218+ 7344 18 0F            jr 7F
 219+ 7346
 220+ 7346 2A 34 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 221+ 7349 CD 8B 8C     	call Extrae_address
 222+ 734C 22 1E 89     	ld (Stack_snapshot),hl
 223+ 734F 21 40 89     	ld hl,Semaforo
 224+ 7352 CB 0E        	rrc (hl)
 225+ 7354 C9               ret
 226+ 7355
 227+ 7355              ; #############################################################3
 228+ 7355
 229+ 7355              ;   En 1er lugar limpiamos el FRAME pintado.
 230+ 7355              ;   Vaciamos Album_de_fotos.
 231+ 7355
 232+ 7355              ;   Album_de_fotos. Contiene datos ???
 233+ 7355
 234+ 7355              ;! Cascada.
 235+ 7355
 236+ 7355 21 01 70     7 ld hl,Album_de_fotos+1
 237+ 7358 7E               ld a,(hl)
 238+ 7359 A7               and a
 239+ 735A 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 240+ 735C
 241+ 735C              ;   Hemos impreso Album_de_fotos.
 242+ 735C              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 243+ 735C
 244+ 735C 2A 22 89         ld hl,(End_Snapshot)
 245+ 735F 01 00 70         ld bc,Album_de_fotos
 246+ 7362 11 01 70         ld de,Album_de_fotos+1
 247+ 7365 AF               xor a
 248+ 7366 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 249+ 7367
 250+ 7367 CD 47 74         call Limpia_album
 251+ 736A
 252+ 736A 21 00 00         ld hl,0
 253+ 736D 22 22 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 254+ 7370
 255+ 7370              ; ----- ----- ----- -----
 256+ 7370
 257+ 7370              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 258+ 7370              ;   Album_de_fotos_1. Contiene un frame completo ???
 259+ 7370
 260+ 7370 3A 40 89     3 ld a,(Semaforo)
 261+ 7373 CB 4F            bit 1,a
 262+ 7375 20 06            jr nz,4F
 263+ 7377
 264+ 7377              ;! Buffer vacío. El siguiente FRAME no se puede preparar. !!!!!!!!!!!!!!!!!!!!!!!!!
 265+ 7377              ;! Album_de_fotos_1 está incompleto.
 266+ 7377
 267+ 7377 21 41 89         ld hl,Ctrl_Semaforo
 268+ 737A CB E6            set 4,(hl)
 269+ 737C C9               ret
 270+ 737D
 271+ 737D              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 272+ 737D
 273+ 737D 21 55 70     4 ld hl,Album_de_fotos_1+1
 274+ 7380 7E               ld a,(hl)
 275+ 7381 A7               and a
 276+ 7382 28 03            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 277+ 7384
 278+ 7384              ; ----- ----- ----- -----
 279+ 7384              ; ----- ----- ----- -----
 280+ 7384
 281+ 7384 CD 20 74         call Album1_a_Album
 282+ 7387
 283+ 7387              ;   Album_de_fotos_2.
 284+ 7387
 285+ 7387 3A 41 89     1 ld a,(Ctrl_Semaforo)
 286+ 738A CB 5F            bit 3,a
 287+ 738C 20 36            jr nz,8F
 288+ 738E
 289+ 738E              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 290+ 738E              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 291+ 738E              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 292+ 738E
 293+ 738E              ;   Contiene Frame completo ???
 294+ 738E
 295+ 738E 3A 40 89     12 ld a,(Semaforo)
 296+ 7391 CB 57            bit 2,a
 297+ 7393 20 13            jr nz,5F
 298+ 7395
 299+ 7395              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 300+ 7395
 301+ 7395 21 A9 70         ld hl,Album_de_fotos_2+1
 302+ 7398 7E               ld a,(hl)
 303+ 7399 A7               and a
 304+ 739A 20 04            jr nz,9F
 305+ 739C
 306+ 739C              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 307+ 739C              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 308+ 739C
 309+ 739C CD 54 74         call Actualiza_punteros_de_albumes
 310+ 739F C9               ret
 311+ 73A0
 312+ 73A0              ;   Album_de_fotos_2 no está completo pero contiene datos.
 313+ 73A0
 314+ 73A0 21 41 89     9 ld hl,Ctrl_Semaforo
 315+ 73A3 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 316+ 73A5 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 317+ 73A7 C9               ret
 318+ 73A8
 319+ 73A8 21 A9 70     5 ld hl,Album_de_fotos_2+1
 320+ 73AB 7E               ld a,(hl)
 321+ 73AC A7               and a
 322+ 73AD 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 323+ 73AF
 324+ 73AF              ; ----- ----- ----- -----
 325+ 73AF              ; ----- ----- ----- -----
 326+ 73AF              ; ----- ----- ----- -----
 327+ 73AF
 328+ 73AF              ;   Album_de_fotos_2 contiene un frame completo.
 329+ 73AF              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 330+ 73AF
 331+ 73AF CD F9 73         call Album2_a_Album1
 332+ 73B2
 333+ 73B2              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 334+ 73B2              ;   Album_de_fotos_3. Contiene un frame completo ???
 335+ 73B2
 336+ 73B2 3A 40 89     2 ld a,(Semaforo)
 337+ 73B5 CB 5F            bit 3,a
 338+ 73B7 20 13            jr nz,6F
 339+ 73B9
 340+ 73B9              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 341+ 73B9
 342+ 73B9 21 FD 70         ld hl,Album_de_fotos_3+1
 343+ 73BC 7E               ld a,(hl)
 344+ 73BD A7               and a
 345+ 73BE 20 04            jr nz,8F
 346+ 73C0
 347+ 73C0              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 348+ 73C0              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 349+ 73C0
 350+ 73C0 CD 54 74         call Actualiza_punteros_de_albumes
 351+ 73C3 C9               ret
 352+ 73C4
 353+ 73C4              ;   Album_de_fotos_3 no está completo.
 354+ 73C4
 355+ 73C4 21 41 89     8 ld hl,Ctrl_Semaforo
 356+ 73C7 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 357+ 73C9 CB CE            set 1,(hl)
 358+ 73CB C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 359+ 73CC
 360+ 73CC              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 361+ 73CC
 362+ 73CC 21 FD 70     6 ld hl,Album_de_fotos_3+1
 363+ 73CF 7E               ld a,(hl)
 364+ 73D0 A7               and a
 365+ 73D1 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 366+ 73D2
 367+ 73D2              ; ----- ----- ----- -----
 368+ 73D2              ; ----- ----- ----- -----
 369+ 73D2              ; ----- ----- ----- -----
 370+ 73D2
 371+ 73D2 2A 30 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 372+ 73D5 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 373+ 73D8 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 374+ 73DB
 375+ 73DB CD 47 74         call Limpia_album
 376+ 73DE
 377+ 73DE              ;   Actualizamos (End_Snapshot_2):
 378+ 73DE
 379+ 73DE A7               and a
 380+ 73DF ED 4A            adc hl,bc
 381+ 73E1 22 2C 89         ld (End_Snapshot_2),hl
 382+ 73E4
 383+ 73E4              ;   Limpiamos Album_de_fotos_3.
 384+ 73E4
 385+ 73E4 2A 30 89         ld hl,(End_Snapshot_3)
 386+ 73E7 01 FC 70         ld bc,Album_de_fotos_3
 387+ 73EA 11 FD 70         ld de,Album_de_fotos_3+1
 388+ 73ED AF               xor a
 389+ 73EE 02               ld (bc),a
 390+ 73EF CD 47 74         call Limpia_album
 391+ 73F2
 392+ 73F2              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 393+ 73F2              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 394+ 73F2
 395+ 73F2 21 00 00         ld hl,0
 396+ 73F5 22 30 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 397+ 73F8
 398+ 73F8 C9               ret
 399+ 73F9
 400+ 73F9 2A 2C 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 401+ 73FC 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 402+ 73FF 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 403+ 7402 CD 47 74         call Limpia_album
 404+ 7405
 405+ 7405              ;   Actualizamos (End_Snapshot_1):
 406+ 7405
 407+ 7405 A7               and a
 408+ 7406 ED 4A            adc hl,bc
 409+ 7408 22 28 89         ld (End_Snapshot_1),hl
 410+ 740B
 411+ 740B              ;   Limpiamos Album_de_fotos_2.
 412+ 740B
 413+ 740B 2A 2C 89         ld hl,(End_Snapshot_2)
 414+ 740E 01 A8 70         ld bc,Album_de_fotos_2
 415+ 7411 11 A9 70         ld de,Album_de_fotos_2+1
 416+ 7414 AF               xor a
 417+ 7415 02               ld (bc),a
 418+ 7416 CD 47 74         call Limpia_album
 419+ 7419 21 00 00         ld hl,0
 420+ 741C 22 2C 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 421+ 741F C9               ret
 422+ 7420
 423+ 7420
 424+ 7420 2A 28 89     Album1_a_Album ld hl,(End_Snapshot_1)      ; Final, (origen).
 425+ 7423 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 426+ 7426 11 00 70         ld de,Album_de_fotos        ; Destino.
 427+ 7429
 428+ 7429 CD 47 74         call Limpia_album
 429+ 742C
 430+ 742C              ;   Calculamos (End_Snapshot)
 431+ 742C
 432+ 742C A7               and a
 433+ 742D ED 4A            adc hl,bc
 434+ 742F 22 22 89         ld (End_Snapshot),hl
 435+ 7432
 436+ 7432              ;   Limpiamos Album_de_fotos_1.
 437+ 7432
 438+ 7432 2A 28 89         ld hl,(End_Snapshot_1)
 439+ 7435 01 54 70         ld bc,Album_de_fotos_1
 440+ 7438 11 55 70         ld de,Album_de_fotos_1+1
 441+ 743B AF               xor a
 442+ 743C 02               ld (bc),a
 443+ 743D
 444+ 743D CD 47 74         call Limpia_album
 445+ 7440
 446+ 7440 21 00 00         ld hl,0
 447+ 7443 22 28 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 448+ 7446 C9               ret
 449+ 7447
 450+ 7447              ; ----------------------------------------------------
 451+ 7447              ;
 452+ 7447              ;   10/8/23
 453+ 7447              ;
 454+ 7447              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 455+ 7447              ;
 456+ 7447              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 457+ 7447              ;           BC ..... Dirección de inicio del álbum.
 458+ 7447              ;           DE ..... Dirección de inicio del álbum. +1
 459+ 7447
 460+ 7447              ;    ld hl,(End_Snapshot)
 461+ 7447              ;    ld bc,Album_de_fotos
 462+ 7447              ;    ld de,Album_de_fotos+1
 463+ 7447
 464+ 7447              ;   MODIFICA: A,HL,BC y DE.
 465+ 7447
 466+ 7447              Limpia_album
 467+ 7447 D5               push de                     ; Guardo DESTINO.
 468+ 7448 C5               push bc                     ; Guardo ORIGEN.
 469+ 7449 ED 42            sbc hl,bc
 470+ 744B 4D               ld c,l
 471+ 744C 44               ld b,h
 472+ 744D E1               pop hl
 473+ 744E C5               push bc
 474+ 744F ED B0            ldir
 475+ 7451 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 476+ 7452 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 477+ 7453 C9               ret                         ; _ a otro).
 478+ 7454
 479+ 7454              ; --------------------------------------------------------------------------------------------
 480+ 7454              ;
 481+ 7454              ;   20/10/23
 482+ 7454
 483+ 7454              ;
 484+ 7454
 485+ 7454              Actualiza_punteros_de_albumes
 486+ 7454
 487+ 7454 2A 34 89         ld hl,(Puntero_indice_album_de_fotos)
 488+ 7457 2B               dec hl
 489+ 7458 2B               dec hl
 490+ 7459 22 34 89         ld (Puntero_indice_album_de_fotos),hl
 491+ 745C
 492+ 745C 2A 38 89         ld hl,(Puntero_indice_End_Snapshot)
 493+ 745F 2B               dec hl
 494+ 7460 2B               dec hl
 495+ 7461 22 38 89         ld (Puntero_indice_End_Snapshot),hl
 496+ 7464 CD 8B 8C         call Extrae_address
 497+ 7467 22 3C 89         ld (Puntero_de_End_Snapshot),hl
 498+ 746A
 499+ 746A C9               ret
 500+ 746B
# file closed: Guarda_foto_registros.asm
1673  746B
1674  746B              	SAVESNA "Pruebas.sna", START
1675  746B
1676  746B
1677  746B
1678  746B
# file closed: Banco_de_pruebas.asm
