# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 0E 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15              ;	ld a,(Contador_de_frames)
  43  AA15              ;	cp $70	; 	$51 ok.
  44  AA15              ;	jr z,$
  45  AA15              ;	jr nc,$
  46  AA15
  47  AA15 3E 01        	ld a,1
  48  AA17 D3 FE        	out ($fe),a
  49  AA19 CD 84 8D     	call Pinta_entidades
  50  AA1C CD 76 8D     	call Pinta_Amadeus
  51  AA1F 3E 02        	ld a,2
  52  AA21 D3 FE        	out ($fe),a
  53  AA23
  54  AA23 CD A0 8D     	call Guarda_parametros_DRAW
  55  AA26 CD C6 8C     	call Restore_Amadeus
  56  AA29 CD C8 8A     	call Gestiona_Amadeus
  57  AA2C 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  58  AA2F CD D8 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  59  AA32
  60  AA32              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA32
  62  AA32 CD AC 8D     	call Recupera_parametros_DRAW
  63  AA35 CD 94 8D     	call Actualiza_relojes
  64  AA38 3E 00        	ld a,0
  65  AA3A D3 FE        	out ($fe),a
  66  AA3C
  67  AA3C 21 18 89     	ld hl,Ctrl_3
  68  AA3F CB 86        	res 0,(hl)
  69  AA41
  70  AA41 FD E1        	pop iy
  71  AA43 DD E1        	pop ix
  72  AA45 F1           	pop af
  73  AA46 C1           	pop bc
  74  AA47 D1           	pop de
  75  AA48 E1           	pop hl
  76  AA49 D9           	exx
  77  AA4A C1           	pop bc
  78  AA4B D1           	pop de
  79  AA4C E1           	pop hl
  80  AA4D 08           	ex af,af'
  81  AA4E F1           	pop af
  82  AA4F 08           	ex af,af'
  83  AA50 D9           	exx
  84  AA51
  85  AA51 ED 7B 0E 89  	ld sp,(Stack_3)
  86  AA55
  87  AA55 FB           	ei
  88  AA56 C9           	ret
  89  AA57
  90  AA57              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  91  AA57
  92  AA57              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA57              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA57              ;
   3+ AA57              ;	17/02/23
   4+ AA57              ;
   5+ AA57              ;	Sprites e índices.
   6+ AA57
   7+ AA57              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  93  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BF 85        	defw Caja_1
 100+ 856E 00 86        	defw Caja_2
 101+ 8570 41 86        	defw Caja_3
 102+ 8572 82 86        	defw Caja_4
 103+ 8574 C3 86        	defw Caja_5
 104+ 8576 04 87        	defw Caja_6
 105+ 8578 45 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 8587
 117+ 8587 05           	db %00000101									; (Attr).
 118+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 858C
 121+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8590
 124+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 8592 04           	db 4 											; (Cuad_objeto).
 126+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 8597
 128+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8598
 130+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 859E
 132+ 859E 00 00        	db 0,0											; Variables_de_pintado
 133+ 85A0 00 00        	defw 0											;	" " " " " " "
 134+ 85A2 00 00        	defw 0											;	" " " " " " "
 135+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85A8
 137+ 85A8 00 00        	defw 0 											; Puntero_de_impresion.
 138+ 85AA
 139+ 85AA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 85AC
 141+ 85AC 00           	db 0											; (Autoriza_movimiento).
 142+ 85AD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85B1 00 00
 143+ 85B3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85B6
 145+ 85B6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 146+ 85B8 00           	db 0											; (Cola_de_desplazamiento).
 147+ 85B9
 148+ 85B9 00           	db 0 											; (Columnas).
 149+ 85BA 00 00        	defw 0											; (Limite_horizontal).
 150+ 85BC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BF
 152+ 85BF              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BF
 154+ 85BF 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85C1 00 00        	defw 0											; (Posicion_actual).
 156+ 85C3 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C8
 159+ 85C8 00           	db %00000000 									; (Attr).
 160+ 85C9
 161+ 85C9 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85CB 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85D1
 166+ 85D1 00 00        	defw 0											; (Posicion_inicio).
 167+ 85D3 00           	db 0											; (Cuad_objeto).
 168+ 85D4
 169+ 85D4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D8
 171+ 85D8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D9
 173+ 85D9 00 00 00...  	ds 6											; Variables_de_borrado
 174+ 85DF
 175+ 85DF 00 00        	db 0,0											; Variables_de_pintado
 176+ 85E1 00 00        	defw 0											;	" " " " " " "
 177+ 85E3 00 00        	defw 0											;	" " " " " " "
 178+ 85E5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 179+ 85E9
 180+ 85E9 00 00        	defw 0 											; Puntero_de_impresion.
 181+ 85EB
 182+ 85EB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 183+ 85ED
 184+ 85ED 00           	db 0											; (Autoriza_movimiento).
 185+ 85EE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 185+ 85F2 00 00
 186+ 85F4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 187+ 85F7
 188+ 85F7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 189+ 85F9 00           	db 0											; (Cola_de_desplazamiento).
 190+ 85FA
 191+ 85FA 00           	db 0 											; (Columnas).
 192+ 85FB 00 00        	defw 0											; (Limite_horizontal).
 193+ 85FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 194+ 8600
 195+ 8600              ; ---------- ---------- ---------- ---------- ----------
 196+ 8600
 197+ 8600 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 198+ 8602 00 00        	defw 0											; (Posicion_actual).
 199+ 8604 00 00        	defw 0 											; (Puntero_objeto).
 200+ 8606 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 201+ 8609
 202+ 8609 00           	db %00000000 									; (Attr).
 203+ 860A
 204+ 860A 00 00        	defw 0											; (Indice_Sprite_der).
 205+ 860C 00 00        	defw 0											; (Indice_Sprite_izq).
 206+ 860E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 207+ 8610 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 208+ 8612
 209+ 8612 00 00        	defw 0											; (Posicion_inicio).
 210+ 8614 00           	db 0											; (Cuad_objeto).
 211+ 8615
 212+ 8615 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 213+ 8619
 214+ 8619 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 215+ 861A
 216+ 861A 00 00 00...  	ds 6											; Variables_de_borrado
 217+ 8620
 218+ 8620 00 00        	db 0,0											; Variables_de_pintado
 219+ 8622 00 00        	defw 0											;	" " " " " " "
 220+ 8624 00 00        	defw 0											;	" " " " " " "
 221+ 8626 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 862A
 223+ 862A 00 00        	defw 0 											; Puntero_de_impresion.
 224+ 862C
 225+ 862C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 226+ 862E
 227+ 862E 00           	db 0											; (Autoriza_movimiento).
 228+ 862F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 228+ 8633 00 00
 229+ 8635 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 230+ 8638
 231+ 8638 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 232+ 863A 00           	db 0											; (Cola_de_desplazamiento).
 233+ 863B
 234+ 863B 00           	db 0 											; (Columnas).
 235+ 863C 00 00        	defw 0											; (Limite_horizontal).
 236+ 863E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 237+ 8641
 238+ 8641              ; ---------- ---------- ---------- ---------- ----------
 239+ 8641
 240+ 8641 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 241+ 8643 00 00        	defw 0											; (Posicion_actual).
 242+ 8645 00 00        	defw 0 											; (Puntero_objeto).
 243+ 8647 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 244+ 864A
 245+ 864A 00           	db %00000000 									; (Attr).
 246+ 864B
 247+ 864B 00 00        	defw 0											; (Indice_Sprite_der).
 248+ 864D 00 00        	defw 0											; (Indice_Sprite_izq).
 249+ 864F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 250+ 8651 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 251+ 8653
 252+ 8653 00 00        	defw 0											; (Posicion_inicio).
 253+ 8655 00           	db 0											; (Cuad_objeto).
 254+ 8656
 255+ 8656 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 256+ 865A
 257+ 865A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 258+ 865B
 259+ 865B 00 00 00...  	ds 6											; Variables_de_borrado
 260+ 8661
 261+ 8661 00 00        	db 0,0											; Variables_de_pintado
 262+ 8663 00 00        	defw 0											;	" " " " " " "
 263+ 8665 00 00        	defw 0											;	" " " " " " "
 264+ 8667 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 265+ 866B
 266+ 866B 00 00        	defw 0 											; Puntero_de_impresion.
 267+ 866D
 268+ 866D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 269+ 866F
 270+ 866F 00           	db 0											; (Autoriza_movimiento).
 271+ 8670 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 271+ 8674 00 00
 272+ 8676 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 273+ 8679
 274+ 8679 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 275+ 867B 00           	db 0											; (Cola_de_desplazamiento).
 276+ 867C
 277+ 867C 00           	db 0 											; (Columnas).
 278+ 867D 00 00        	defw 0											; (Limite_horizontal).
 279+ 867F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 280+ 8682
 281+ 8682              ; ---------- ---------- ---------- ---------- ----------
 282+ 8682
 283+ 8682 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 284+ 8684 00 00        	defw 0											; (Posicion_actual).
 285+ 8686 00 00        	defw 0 											; (Puntero_objeto).
 286+ 8688 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 287+ 868B
 288+ 868B 00           	db %00000000 									; (Attr).
 289+ 868C
 290+ 868C 00 00        	defw 0											; (Indice_Sprite_der).
 291+ 868E 00 00        	defw 0											; (Indice_Sprite_izq).
 292+ 8690 00 00        	defw 0											; (Puntero_DESPLZ_der).
 293+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 294+ 8694
 295+ 8694 00 00        	defw 0											; (Posicion_inicio).
 296+ 8696 00           	db 0											; (Cuad_objeto).
 297+ 8697
 298+ 8697 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 299+ 869B
 300+ 869B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 301+ 869C
 302+ 869C 00 00 00...  	ds 6											; Variables_de_borrado
 303+ 86A2
 304+ 86A2 00 00        	db 0,0											; Variables_de_pintado
 305+ 86A4 00 00        	defw 0											;	" " " " " " "
 306+ 86A6 00 00        	defw 0											;	" " " " " " "
 307+ 86A8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 308+ 86AC
 309+ 86AC 00 00        	defw 0 											; Puntero_de_impresion.
 310+ 86AE
 311+ 86AE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 312+ 86B0
 313+ 86B0 00           	db 0											; (Autoriza_movimiento).
 314+ 86B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 314+ 86B5 00 00
 315+ 86B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 316+ 86BA
 317+ 86BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 318+ 86BC 00           	db 0											; (Cola_de_desplazamiento).
 319+ 86BD
 320+ 86BD 00           	db 0 											; (Columnas).
 321+ 86BE 00 00        	defw 0											; (Limite_horizontal).
 322+ 86C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 323+ 86C3
 324+ 86C3              ; ---------- ---------- ---------- ---------- ----------
 325+ 86C3
 326+ 86C3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 327+ 86C5 00 00        	defw 0											; (Posicion_actual).
 328+ 86C7 00 00        	defw 0 											; (Puntero_objeto).
 329+ 86C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 330+ 86CC
 331+ 86CC 00           	db %00000000 									; (Attr).
 332+ 86CD
 333+ 86CD 00 00        	defw 0											; (Indice_Sprite_der).
 334+ 86CF 00 00        	defw 0											; (Indice_Sprite_izq).
 335+ 86D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 336+ 86D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 337+ 86D5
 338+ 86D5 00 00        	defw 0											; (Posicion_inicio).
 339+ 86D7 00           	db 0											; (Cuad_objeto).
 340+ 86D8
 341+ 86D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 342+ 86DC
 343+ 86DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 344+ 86DD
 345+ 86DD 00 00 00...  	ds 6											; Variables_de_borrado
 346+ 86E3
 347+ 86E3 00 00        	db 0,0											; Variables_de_pintado
 348+ 86E5 00 00        	defw 0											;	" " " " " " "
 349+ 86E7 00 00        	defw 0											;	" " " " " " "
 350+ 86E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 351+ 86ED
 352+ 86ED 00 00        	defw 0 											; Puntero_de_impresion.
 353+ 86EF
 354+ 86EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 355+ 86F1
 356+ 86F1 00           	db 0											; (Autoriza_movimiento).
 357+ 86F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 357+ 86F6 00 00
 358+ 86F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 359+ 86FB
 360+ 86FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 361+ 86FD 00           	db 0											; (Cola_de_desplazamiento).
 362+ 86FE
 363+ 86FE 00           	db 0 											; (Columnas).
 364+ 86FF 00 00        	defw 0											; (Limite_horizontal).
 365+ 8701 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 366+ 8704
 367+ 8704              ; ---------- ---------- ---------- ---------- ----------
 368+ 8704
 369+ 8704 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 370+ 8706 00 00        	defw 0											; (Posicion_actual).
 371+ 8708 00 00        	defw 0 											; (Puntero_objeto).
 372+ 870A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 373+ 870D
 374+ 870D 00           	db %00000000 									; (Attr).
 375+ 870E
 376+ 870E 00 00        	defw 0											; (Indice_Sprite_der).
 377+ 8710 00 00        	defw 0											; (Indice_Sprite_izq).
 378+ 8712 00 00        	defw 0											; (Puntero_DESPLZ_der).
 379+ 8714 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 380+ 8716
 381+ 8716 00 00        	defw 0											; (Posicion_inicio).
 382+ 8718 00           	db 0											; (Cuad_objeto).
 383+ 8719
 384+ 8719 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 385+ 871D
 386+ 871D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 387+ 871E
 388+ 871E 00 00 00...  	ds 6											; Variables_de_borrado
 389+ 8724
 390+ 8724 00 00        	db 0,0											; Variables_de_pintado
 391+ 8726 00 00        	defw 0											;	" " " " " " "
 392+ 8728 00 00        	defw 0											;	" " " " " " "
 393+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 394+ 872E
 395+ 872E 00 00        	defw 0 											; Puntero_de_impresion.
 396+ 8730
 397+ 8730 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 398+ 8732
 399+ 8732 00           	db 0											; (Autoriza_movimiento).
 400+ 8733 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 400+ 8737 00 00
 401+ 8739 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 402+ 873C
 403+ 873C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 404+ 873E 00           	db 0											; (Cola_de_desplazamiento).
 405+ 873F
 406+ 873F 00           	db 0 											; (Columnas).
 407+ 8740 00 00        	defw 0											; (Limite_horizontal).
 408+ 8742 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 409+ 8745
 410+ 8745              ; ---------- ---------- ---------- ---------- ----------
 411+ 8745
 412+ 8745 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 413+ 8747 00 00        	defw 0											; (Posicion_actual).
 414+ 8749 00 00        	defw 0 											; (Puntero_objeto).
 415+ 874B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 416+ 874E
 417+ 874E 00           	db %00000000 									; (Attr).
 418+ 874F
 419+ 874F 00 00        	defw 0											; (Indice_Sprite_der).
 420+ 8751 00 00        	defw 0											; (Indice_Sprite_izq).
 421+ 8753 00 00        	defw 0											; (Puntero_DESPLZ_der).
 422+ 8755 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 423+ 8757
 424+ 8757 00 00        	defw 0											; (Posicion_inicio).
 425+ 8759 00           	db 0											; (Cuad_objeto).
 426+ 875A
 427+ 875A 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 428+ 875E
 429+ 875E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 430+ 875F
 431+ 875F 00 00 00...  	ds 6											; Variables_de_borrado
 432+ 8765
 433+ 8765 00 00        	db 0,0											; Variables_de_pintado
 434+ 8767 00 00        	defw 0											;	" " " " " " "
 435+ 8769 00 00        	defw 0											;	" " " " " " "
 436+ 876B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 437+ 876F
 438+ 876F 00 00        	defw 0 											; Puntero_de_impresion.
 439+ 8771
 440+ 8771 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 441+ 8773
 442+ 8773 00           	db 0											; (Autoriza_movimiento).
 443+ 8774 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 443+ 8778 00 00
 444+ 877A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 445+ 877D
 446+ 877D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 447+ 877F 00           	db 0											; (Cola_de_desplazamiento).
 448+ 8780
 449+ 8780 00           	db 0 											; (Columnas).
 450+ 8781 00 00        	defw 0											; (Limite_horizontal).
 451+ 8783 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 452+ 8786
 453+ 8786              ; -------------------------------------------------------------------------------------
 454+ 8786              ;
 455+ 8786              ;	20/05/23
 456+ 8786              ;
 457+ 8786              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 458+ 8786              ;
 459+ 8786              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 460+ 8786              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 461+ 8786              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 462+ 8786              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 463+ 8786
 464+ 8786              Indice_de_entidades
 465+ 8786
 466+ 8786 8A 87        	defw Entidad_1
 467+ 8788 9A 87        	defw Entidad_2
 468+ 878A
 469+ 878A              ;	BADSAT, (Satélite malvado).
 470+ 878A
 471+ 878A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 472+ 878C 04           	db %00000100									; (Attr).
 473+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 474+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 475+ 8791 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 476+ 8793 01           	db 1											; (Cuad_objeto).
 477+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 478+ 8798 8E 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 479+ 879A
 480+ 879A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 481+ 879C 02           	db %00000010									; (Attr).
 482+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 483+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 484+ 87A1 40 50        	defw $5040                                      ; (Posicion_inicio).
 485+ 87A3 01           	db 1											; (Cuad_objeto).
 486+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 487+ 87A8 8E 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 488+ 87AA
# file closed: Cajas_y_disparos.asm
  94  87AA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87AA              ; 13/05/23
   2+ 87AA
   3+ 87AA              Indice_de_niveles
   4+ 87AA
   5+ 87AA B8 87        	defw Nivel_1
   6+ 87AC C0 87        	defw Nivel_2
   7+ 87AE CD 87        	defw Nivel_3
   8+ 87B0 DD 87        	defw Nivel_4
   9+ 87B2 EF 87        	defw Nivel_5
  10+ 87B4              ;	...
  11+ 87B4              ;	...
  12+ 87B4              ;	+ Niveles ...
  13+ 87B4
  14+ 87B4 00 00        	defw 0
  15+ 87B6 00 00        	defw 0
  16+ 87B8
  17+ 87B8 07           Nivel_1 db 7	                                ; Nº de entidades.
  18+ 87B9 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 87BD 01 01 01
  19+ 87C0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87C1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87C5 01 02
  21+ 87C7 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87CB 01 02
  22+ 87CD 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87CE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87D2 01
  24+ 87D3 03 01 01 01  	db 3,1,1,1,1
  24+ 87D7 01
  25+ 87D8 03 01 01 01  	db 3,1,1,1,1
  25+ 87DC 01
  26+ 87DD 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87DE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87E2 01
  28+ 87E3 04 01 01 01  	db 4,1,1,1,1
  28+ 87E7 01
  29+ 87E8 04 01 01 01  	db 4,1,1,1,1
  29+ 87EC 01
  30+ 87ED 02 03        	db 2,3
  31+ 87EF 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87F0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87F4 01
  33+ 87F5 05 01 01 01  	db 5,1,1,1,1
  33+ 87F9 01
  34+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87FE 01
  35+ 87FF 05 01 01 01  	db 5,1,1,1,1
  35+ 8803 01
  36+ 8804
  37+ 8804              ;---------------------------------------------------------------------------------------------------------------
  38+ 8804              ;
  39+ 8804              ;   3/9/23
  40+ 8804              ;
  41+ 8804              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8804              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8804              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8804              ;	_en la caja DRAW correspondiente.
  45+ 8804              ;
  46+ 8804              ;	MODIFICA: HL,DE y A.
  47+ 8804              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8804
  49+ 8804              Inicializa_Punteros_de_nivel
  50+ 8804
  51+ 8804 21 AA 87     	ld hl,Indice_de_niveles
  52+ 8807 22 38 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 880A CD 16 8C     	call Extrae_address
  54+ 880D 7E           	ld a,(hl)
  55+ 880E 32 02 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8811 23           	inc hl
  57+ 8812 22 3A 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8815 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8816
  60+ 8816              ;---------------------------------------------------------------------------------------------------------------
  61+ 8816              ;
  62+ 8816              ;   13/5/23
  63+ 8816              ;
  64+ 8816              ;	Destruye A,BC,HL,DE
  65+ 8816
  66+ 8816              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8816              ;	_del juego.
  68+ 8816
  69+ 8816              Prepara_cajas
  70+ 8816
  71+ 8816              ; Preparamos los punteros de las cajas.
  72+ 8816
  73+ 8816 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8819 CD 16 8C     	call Extrae_address
  75+ 881C CD 59 88     	call Avanza_caja
  76+ 881F
  77+ 881F CD 9D 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8822
  79+ 8822 2A 3A 89     	ld hl,(Datos_de_nivel)
  80+ 8825
  81+ 8825              ; HL está en los datos del nivel correspondiente.
  82+ 8825              ; B actuará como contador de cajas.
  83+ 8825
  84+ 8825 C5           1 push bc
  85+ 8826
  86+ 8826 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8827 CD 4A 88     	call PreparaBC
  88+ 882A
  89+ 882A 21 86 87     	ld hl,Indice_de_entidades
  90+ 882D CD 52 88     	call SBC_HL_con_BC_y_Extrae
  91+ 8830 22 08 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8833
  93+ 8833 CD 63 88     	call Datos_de_entidad_a_caja
  94+ 8836
  95+ 8836 2A 00 89     	ld hl,(Indice_restore_caja)
  96+ 8839 CD 16 8C     	call Extrae_address
  97+ 883C CD 59 88     	call Avanza_caja
  98+ 883F
  99+ 883F 2A 3A 89     	ld hl,(Datos_de_nivel)
 100+ 8842 23           	inc hl
 101+ 8843 22 3A 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8846
 103+ 8846 C1           	pop bc
 104+ 8847 10 DC        	djnz 1B
 105+ 8849 C9           	ret
 106+ 884A
 107+ 884A CB 27        PreparaBC sla a
 108+ 884C D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 884E 4F           	ld c,a
 110+ 884F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 8851 C9           	ret
 112+ 8852
 113+ 8852 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8853 ED 4A        	adc hl,bc
 115+ 8855 CD 16 8C     	call Extrae_address
 116+ 8858 C9           	ret
 117+ 8859
 118+ 8859 22 FC 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 885C 13           	inc de
 120+ 885D 13           	inc de
 121+ 885E EB           	ex de,hl
 122+ 885F 22 00 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8862 C9           	ret
 124+ 8863
 125+ 8863              Datos_de_entidad_a_caja
 126+ 8863
 127+ 8863              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8863
 129+ 8863
 130+ 8863 ED 5B FC 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8867
 132+ 8867 01 02 00     	ld bc,2
 133+ 886A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 886C
 135+ 886C 01 07 00     	ld bc,7
 136+ 886F CD 97 88     	call Situa_DE
 137+ 8872
 138+ 8872 01 05 00     	ld bc,5
 139+ 8875 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8877
 141+ 8877 01 04 00     	ld bc,4
 142+ 887A CD 97 88     	call Situa_DE
 143+ 887D
 144+ 887D 01 07 00     	ld bc,7
 145+ 8880 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8882
 147+ 8882 01 14 00     	ld bc,20
 148+ 8885 CD 97 88     	call Situa_DE
 149+ 8888
 150+ 8888 01 02 00     	ld bc,2
 151+ 888B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 888D
 153+ 888D              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 888D              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 888D
 156+ 888D 01 0F 00     	ld bc,15									; *****
 157+ 8890 CD 97 88     	call Situa_DE
 158+ 8893
 159+ 8893 3E 03        	ld a,3
 160+ 8895 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8896
 162+ 8896 C9           	ret
 163+ 8897
 164+ 8897 EB           Situa_DE ex de,hl
 165+ 8898 A7           	and a
 166+ 8899 ED 4A        	adc hl,bc
 167+ 889B EB           	ex de,hl
 168+ 889C C9           	ret
 169+ 889D
 170+ 889D              ;---------------------------------------------------------------------------------------------------------------
 171+ 889D              ;
 172+ 889D              ;	21/5/23
 173+ 889D              ;
 174+ 889D              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 889D              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 889D              ;
 177+ 889D              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 889D              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 889D              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 889D              ;
 181+ 889D              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 889D              ;	MODIFICA: A y B.
 183+ 889D              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 889D
 185+ 889D              Admin_num_entidades
 186+ 889D
 187+ 889D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 889D
 189+ 889D 3A 02 89     	ld a,(Numero_de_entidades)
 190+ 88A0 A7           	and a
 191+ 88A1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88A1              ;	jr z,$
 193+ 88A1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88A1
 195+ 88A1 20 03        	jr nz,3F
 196+ 88A3
 197+ 88A3              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88A3
 199+ 88A3 CD 04 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88A6
 201+ 88A6 3A 02 89     3 ld a,(Numero_de_entidades)
 202+ 88A9 FE 0A        	cp 10
 203+ 88AB 38 08        	jr c,1F
 204+ 88AD
 205+ 88AD              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88AD              ; Actualizamos variables.
 207+ 88AD
 208+ 88AD 3E 0A        	ld a,10
 209+ 88AF 32 03 89     	ld (Numero_parcial_de_entidades),a
 210+ 88B2 47           	ld b,a
 211+ 88B3 18 04        	jr 2F
 212+ 88B5
 213+ 88B5              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88B5              ; (Numero_de_entidades)="0".
 215+ 88B5
 216+ 88B5 32 03 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88B8 47           	ld b,a
 218+ 88B9 C9           2 ret
# file closed: Niveles.asm
  95  88BA
  96  88BA              ; ******************************************************************************************************************************************************************************************
  97  88BA              ; Constantes.
  98  88BA              ; ******************************************************************************************************************************************************************************************
  99  88BA              ;
 100  88BA              ; 10/11/23
 101  88BA
 102  88BA              ;
 103  88BA              ; Constantes generales.
 104  88BA              ;
 105  88BA
 106  88BA              Sprite_vacio equ $f000
 107  88BA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 108  88BA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 109  88BA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 110  88BA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 111  88BA
 112  88BA              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 113  88BA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 114  88BA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 115  88BA              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 116  88BA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 117  88BA
 118  88BA              ;														; 55 Bytes.
 119  88BA
 120  88BA              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 121  88BA              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 122  88BA
 123  88BA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 124  88BA
 125  88BA              ; ******************************************************************************************************************************************************************************************
 126  88BA              ; Variables.
 127  88BA              ; ******************************************************************************************************************************************************************************************
 128  88BA              ;
 129  88BA              ; 10/11//23
 130  88BA              ;
 131  88BA              ; Variables de DRAW. (Motor principal).
 132  88BA              ;
 133  88BA              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 134  88BA
 135  88BA 00           Filas db 0												; Filas. [DRAW]
 136  88BB 00           Columns db 0  											; Nº de columnas. [DRAW]
 137  88BC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 138  88BE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 139  88C0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 140  88C1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 141  88C2
 142  88C2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 143  88C2
 144  88C2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 145  88C3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 146  88C3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 147  88C3 00           Attr db 0												; Atributos de la entidad:
 148  88C4
 149  88C4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 150  88C4              ;
 151  88C4              ;	COLORES: 0 ..... NEGRO
 152  88C4              ;    		 1 ..... AZUL
 153  88C4              ; 			 2 ..... ROJO
 154  88C4              ;			 3 ..... MAGENTA
 155  88C4              ; 			 4 ..... VERDE
 156  88C4              ; 			 5 ..... CIAN
 157  88C4              ;			 6 ..... AMARILLO
 158  88C4              ; 			 7 ..... BLANCO
 159  88C4
 160  88C4 00 00        Indice_Sprite_der defw 0
 161  88C6 00 00        Indice_Sprite_izq defw 0
 162  88C8 00 00        Puntero_DESPLZ_der defw 0
 163  88CA 00 00        Puntero_DESPLZ_izq defw 0
 164  88CC
 165  88CC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 166  88CE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 167  88CF
 168  88CF              ; Variables de objeto. (Características).
 169  88CF
 170  88CF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 171  88D0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 172  88D1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 173  88D2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 174  88D3
 175  88D3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 176  88D4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 177  88D4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 178  88D4 00 00 00...  Variables_de_borrado ds 6
 179  88DA
 180  88DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 181  88DC 00 00        	defw 0
 182  88DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 183  88E0 00 00 00 00  	db 0,0,0,0
 184  88E4
 185  88E4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 186  88E6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 187  88E6
 188  88E6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88E6
 190  88E6 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88E7              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88E7              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88E7              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88E7              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88E7              ;
 196  88E7              ; 														DESCRIPCIÖN:
 197  88E7              ;
 198  88E7              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88E7              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88E7              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88E7              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88E7              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88E7              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88E7              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88E7              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88E7              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88E7              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88E7              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88E7              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88E7              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88E7              ;
 212  88E7              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88E7              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88E7              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88E7
 216  88E7              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88E7
 218  88E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88EB 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88ED              ;
 222  88ED              ;
 223  88ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88EE 00           Incrementa_puntero_backup db 0
 227  88EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88F3              ;
 233  88F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88F3              ;
 237  88F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88F3              ;
 242  88F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88F3
 246  88F3
 247  88F3              ; Variables de funcionamiento. [DRAW].
 248  88F3
 249  88F3 00           Columnas db 0
 250  88F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  88F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  88F7
 254  88F7              ; variables de control general.
 255  88F7
 256  88F7 00           Ctrl_2 db 0
 257  88F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  88F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  88F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  88F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  88F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  88F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  88F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  88F8              ;
 265  88F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  88F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  88F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  88F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  88F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  88F8
 271  88F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  88F9
 273  88F9              ;! 63; Bytes por entidad.
 274  88F9
 275  88F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  88F9              ;					         		---------;      ;---------
 277  88F9
 278  88F9
 279  88F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  88F9
 281  88F9 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  88FA
 283  88FA              ;														DESCRIPCIÓN:
 284  88FA              ;
 285  88FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  88FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  88FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  88FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  88FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  88FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  88FA
 292  88FA              ;														BIT 3, Recarga de nueva oleada.
 293  88FA              ;														BIT 4, Recarga de nueva oleada.
 294  88FA              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  88FA              ;														BIT 6, **** Frame completo.
 296  88FA              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  88FA
 298  88FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  88FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  88FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  88FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  88FC
 303  88FC              ; Gestión de ENTIDADES y CAJAS.
 304  88FC
 305  88FC 00 00        Puntero_store_caja defw 0
 306  88FE 00 00        Puntero_restore_caja defw 0
 307  8900 00 00        Indice_restore_caja defw 0
 308  8902 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 309  8903 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 310  8904 00           Entidades_en_curso db 0									; ..... ..... .....
 311  8905 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 312  8906              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 313  8906              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 314  8906              ;														; _ (Numero_de_malotes)="0".
 315  8906 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 316  8908 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 317  890A              ;														; _ puntero (Indice_entidades).
 318  890A
 319  890A
 320  890A              ;---------------------------------------------------------------------------------------------------------------
 321  890A              ;
 322  890A              ;	18/11/23
 323  890A              ;
 324  890A              ;	Álbumes.
 325  890A
 326  890A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 327  890C              ;														; _variable para almacenar lo posición del puntero_
 328  890C              ; 														; _de pila, SP.
 329  890C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 330  890E              ;														; La utiliza la rutina [Extrae_foto_registros].
 331  890E 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 332  8910 00 70        Stack_snapshot defw Album_de_fotos
 333  8912 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 334  8914
 335  8914              ;End_Snapshot defw Album_de_fotos
 336  8914              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 337  8914 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 338  8916              ;														; _el snapshot de los registros del siguiente disparo.
 339  8916              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 340  8916 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 341  8918
 342  8918 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 343  8919              ;
 344  8919              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 345  8919              ; Gestión de Disparos.
 346  8919
 347  8919 00           Numero_de_disparotes db 0
 348  891A 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 349  891C 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 350  891E 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 351  891F              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 352  891F              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 353  891F 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 354  8921              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 355  8921              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 356  8921              ;														; _produzca colisión.
 357  8921 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 358  8923              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 359  8923 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 360  8926              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 361  8926 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 362  8929              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 363  8929 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 364  892B 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 365  892C
 366  892C              ;---------------------------------------------------------------------------------------------------------------
 367  892C
 368  892C              ; Relojes y temporizaciones.
 369  892C
 370  892C 00           Contador_de_frames db 0
 371  892D 00           Contador_de_frames_2 db 0
 372  892E
 373  892E 04           Clock_explosion db 4
 374  892F 1E           Clock_Entidades_en_curso db 30
 375  8930 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 376  8931              ;														; Repite la oleada de entidades.
 377  8931 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 378  8932 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 379  8933 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 380  8934
 381  8934 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 382  8935 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 383  8936 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 384  8937
 385  8937              ;---------------------------------------------------------------------------------------------------------------
 386  8937
 387  8937              ; Gestión de NIVELES.
 388  8937
 389  8937 00           Nivel db 0												; Nivel actual del juego.
 390  8938 00 00        Puntero_indice_NIVELES defw 0
 391  893A 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 392  893C              ; 														; _ que definen el NIVEL.
 393  893C              ; Y todo comienza aquí .....
 394  893C              ;
 395  893C              ; Rutina principal *************************************************************************************************************************************************************************
 396  893C              ;
 397  893C              ;	16/11/22
 398  893C
 399  893C              START
 400  893C
 401  893C 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 402  893F 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 403  8941 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 404  8943 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 405  8945 F3           	DI
 406  8946
 407  8946 3E 07        	ld a,%00000111
 408  8948 CD BB 98     	call Cls
 409  894B
 410  894B CD EF 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 411  894E
 412  894E              ; INICIALIZACIÓN.
 413  894E
 414  894E CD 04 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 415  8951 CD 16 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 416  8954 CD 7E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 417  8957              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 418  8957 CD 9F 8C     	call Restore_entidad
 419  895A
 420  895A 21 03 89     	ld hl,Numero_parcial_de_entidades
 421  895D 46           	ld b,(hl)
 422  895E 04           	inc b
 423  895F 05           	dec b
 424  8960 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 425  8962
 426  8962              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 427  8962              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 428  8962              ;	Pintamos el resto de entidades:
 429  8962
 430  8962              ;	INICIA ENTIDADES !!!!!
 431  8962
 432  8962 C5           1 push bc  												; Guardo el contador de entidades.
 433  8963 CD 4E 8B     	call Inicia_entidad
 434  8966 C1           	pop bc
 435  8967 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 436  8969
 437  8969              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 438  8969              ; (Esto se dá cuando se inicia una nueva oleada).
 439  8969
 440  8969 3A F9 88     	ld a,(Ctrl_1)
 441  896C CB 5F        	bit 3,a
 442  896E 20 1B        	jr nz,5F											; Loop
 443  8970
 444  8970              ; 	INICIA AMADEUS !!!!!
 445  8970
 446  8970 CD C6 8C     3 call Restore_Amadeus
 447  8973 CD 1C 8C     	call Inicia_Puntero_objeto
 448  8976 CD AE 92     	call Draw
 449  8979 CD A0 7F     	call Guarda_foto_registros
 450  897C CD 43 8D     	call Guarda_datos_de_borrado_Amadeus
 451  897F
 452  897F 11 7E 85     	ld de,Amadeus_db
 453  8982 CD D8 8C     	call Store_Amadeus
 454  8985
 455  8985              ; 	INICIA DISPAROS !!!!!
 456  8985
 457  8985 CD 94 8B     	call Inicia_Puntero_Disparo_Entidades
 458  8988 CD 9B 8B     	call Inicia_Puntero_Disparo_Amadeus
 459  898B
 460  898B              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 461  898B
 462  898B CD 7E 8B     5 call Inicia_punteros_de_cajas
 463  898E CD 9F 8C     	call Restore_entidad
 464  8991
 465  8991 3A F9 88     	ld a,(Ctrl_1)
 466  8994 CB 5F        	bit 3,a
 467  8996 28 07        	jr z,6F
 468  8998
 469  8998              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 470  8998
 471  8998 21 F9 88     	ld hl,Ctrl_1
 472  899B CB 9E        	res 3,(hl)
 473  899D 18 07        	jr Main
 474  899F
 475  899F              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 476  899F
 477  899F 21 18 89     6 ld hl,Ctrl_3
 478  89A2 CB C6        	set 0,(hl)											; Frame completo.
 479  89A4 FB           	ei
 480  89A5 76           	halt
 481  89A6
 482  89A6              ; ------------------------------------
 483  89A6
 484  89A6              Main
 485  89A6              ;
 486  89A6              ;	12/11/23
 487  89A6
 488  89A6              ; Aparece nueva entidad ???
 489  89A6
 490  89A6              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 491  89A6              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 492  89A6              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 493  89A6              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 494  89A6              ;														; _un 2º bloque.
 495  89A6
 496  89A6 3A 2F 89     	ld a,(Clock_Entidades_en_curso)
 497  89A9 47           	ld b,a
 498  89AA 3A 2C 89     	ld a,(Contador_de_frames)
 499  89AD B8           	cp b
 500  89AE 28 07        	jr z,21F
 501  89B0
 502  89B0              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 503  89B0              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 504  89B0              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 505  89B0              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 506  89B0
 507  89B0 3C           	inc a
 508  89B1 B8           	cp b
 509  89B2 20 1B        	jr nz,13F
 510  89B4
 511  89B4 32 2C 89     	ld (Contador_de_frames),a
 512  89B7
 513  89B7              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 514  89B7              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 515  89B7
 516  89B7 3A 03 89     21 ld a,(Numero_parcial_de_entidades)
 517  89BA 47           	ld b,a
 518  89BB 3A 04 89     	ld a,(Entidades_en_curso)
 519  89BE B8           	cp b
 520  89BF 28 0E        	jr z,13F
 521  89C1 30 0C        	jr nc,13F
 522  89C3
 523  89C3              ; --- --- --- --- ---
 524  89C3
 525  89C3 3C           	inc a
 526  89C4 32 04 89     	ld (Entidades_en_curso),a
 527  89C7
 528  89C7              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 529  89C7
 530  89C7 3A 2F 89     	ld a,(Clock_Entidades_en_curso)
 531  89CA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 532  89CA              ;! _ IMPREDECIBLE !!!!
 533  89CA C6 32        	add 50
 534  89CC 32 2F 89     	ld (Clock_Entidades_en_curso),a
 535  89CF
 536  89CF              ; -------------------------------------------------------------------------------------------------------------
 537  89CF
 538  89CF              ; Habilita disparos.
 539  89CF
 540  89CF 21 31 89     13 ld hl,Disparo_Amadeus
 541  89D2 11 33 89     	ld de,CLOCK_repone_disparo_Amadeus
 542  89D5 CD 7F 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 543  89D8
 544  89D8 21 34 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 545  89DB 11 36 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 546  89DE CD 7F 9C     	call Habilita_disparos
 547  89E1
 548  89E1              ; COLISIONES.
 549  89E1
 550  89E1 CD 90 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 551  89E4
 552  89E4              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 553  89E4              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 554  89E4              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 555  89E4
 556  89E4 AF           	xor a
 557  89E5 32 1E 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 558  89E8
 559  89E8 CD 7E 8B     	call Inicia_punteros_de_cajas
 560  89EB CD 9F 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 561  89EE              ; 														; _ en DRAW.
 562  89EE 3A BA 88     	ld a,(Filas)
 563  89F1 A7           	and a
 564  89F2 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 565  89F4 CD B1 8C     	call Incrementa_punteros_de_cajas
 566  89F7 18 F2        	jr 12B
 567  89F9
 568  89F9              ; ---------------------------------------------------------------------------------------
 569  89F9
 570  89F9 3A 03 89     10 ld a,(Numero_parcial_de_entidades)
 571  89FC 47               ld b,a
 572  89FD A7           	and a
 573  89FE 20 14        	jr nz,11F
 574  8A00
 575  8A00 21 F9 88     	ld hl,Ctrl_1
 576  8A03 CB 66        	bit 4,(hl)
 577  8A05 C2 93 8A     	jp nz,16F
 578  8A08
 579  8A08              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 580  8A08
 581  8A08 21 F9 88     	ld hl,Ctrl_1
 582  8A0B CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 583  8A0D
 584  8A0D 3A 2C 89     	ld a,(Contador_de_frames)
 585  8A10 3C           	inc a
 586  8A11 32 30 89     	ld (Activa_recarga_cajas),a
 587  8A14
 588  8A14              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 589  8A14
 590  8A14 3A 04 89     11 ld a,(Entidades_en_curso)
 591  8A17 A7           	and a
 592  8A18 CA 93 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 593  8A1B 47           	ld b,a												; No hay entidades que gestionar.
 594  8A1C
 595  8A1C              ; Código que ejecutamos con cada entidad:
 596  8A1C              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 597  8A1C
 598  8A1C C5           15 push bc 												; Nº de entidades en curso.
 599  8A1D
 600  8A1D              ; Impacto ???
 601  8A1D
 602  8A1D 3A D3 88     22 ld a,(Impacto)
 603  8A20 A7           	and a
 604  8A21 28 31        	jr z,8F
 605  8A23
 606  8A23              ; Hay Impacto en esta entidad.
 607  8A23
 608  8A23 21 2E 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 609  8A26 35           	dec (hl)
 610  8A27 C2 88 8A     	jp nz,17F
 611  8A2A
 612  8A2A              ;! Velocidad de la animación de la explosión.
 613  8A2A
 614  8A2A 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 615  8A2C              ;														; _,(velocidad de la explosión).
 616  8A2C
 617  8A2C              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 618  8A2C
 619  8A2C CD 63 8D     	call Repone_datos_de_borrado
 620  8A2F CD BC 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 621  8A32
 622  8A32              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 623  8A32
 624  8A32 3A F7 88     	ld a,(Ctrl_2)
 625  8A35 CB 4F        	bit 1,a
 626  8A37 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 627  8A39
 628  8A39              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 629  8A39
 630  8A39 3A C2 88     	ld a,(CTRL_DESPLZ)
 631  8A3C A7           	and a
 632  8A3D 20 08        	jr nz,18F
 633  8A3F
 634  8A3F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 635  8A42 22 C8 88     	ld (Puntero_DESPLZ_der),hl
 636  8A45 18 06        	jr 19F
 637  8A47
 638  8A47 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 639  8A4A 22 C8 88     	ld (Puntero_DESPLZ_der),hl
 640  8A4D
 641  8A4D 21 F7 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 642  8A50 CB CE        	set 1,(hl)
 643  8A52 18 22        	jr 7F
 644  8A54
 645  8A54              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 646  8A54              ; _con las coordenadas de la entidad almacenada en DRAW.
 647  8A54
 648  8A54 3A F9 88     8 ld a,(Ctrl_1)
 649  8A57 CB 57        	bit 2,a
 650  8A59 28 1B        	jr z,7F
 651  8A5B
 652  8A5B 2A 21 89     	ld hl,(Coordenadas_disparo_certero)
 653  8A5E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 654  8A5F              ;														; E contiene la coordenada_X del disparo.
 655  8A5F 2A C0 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 656  8A62              ;														; H FILA, (Coordenada_y de la entidad).
 657  8A62 A7           	and a
 658  8A63 ED 52        	sbc hl,de
 659  8A65
 660  8A65 CD C7 91     	call Determina_resultado_comparativa
 661  8A68
 662  8A68 78           	ld a,b
 663  8A69 A7           	and a
 664  8A6A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 665  8A6C
 666  8A6C              ; ----- ----- -----
 667  8A6C
 668  8A6C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 669  8A6E 32 D3 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 670  8A71
 671  8A71 21 F9 88     	ld hl,Ctrl_1
 672  8A74 CB 96        	res 2,(hl)
 673  8A76
 674  8A76 CD EA 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 675  8A79
 676  8A79 3A E6 88     	ld a,(Ctrl_0)
 677  8A7C CB 67        	bit 4,a
 678  8A7E 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 679  8A80
 680  8A80              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 681  8A80              ; [[[
 682  8A80              ;	call Detecta_disparo_entidad
 683  8A80              ; ]]]
 684  8A80 CD 5F 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 685  8A83
 686  8A83 21 E6 88     	ld hl,Ctrl_0
 687  8A86 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 688  8A88
 689  8A88 CD 64 8C     17 call Store_Restore_cajas
 690  8A8B
 691  8A8B C1           	pop bc
 692  8A8C 10 8E        	djnz 15B
 693  8A8E
 694  8A8E              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 695  8A8E              ; Hemos gestionado todas las unidades.
 696  8A8E              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 697  8A8E
 698  8A8E 21 F9 88     	ld hl,Ctrl_1
 699  8A91 CB 96        	res 2,(hl)
 700  8A93
 701  8A93 21 18 89     16 ld hl,Ctrl_3
 702  8A96 CB C6        	set 0,(hl)											; Frame completo.
 703  8A98 AF           	xor a
 704  8A99 D3 FE        	out ($fe),a
 705  8A9B FB           	ei
 706  8A9C 76           	halt
 707  8A9D
 708  8A9D              ; ----------------------------------------
 709  8A9D
 710  8A9D 3A F9 88     	ld a,(Ctrl_1) 										; Existe Loop?
 711  8AA0 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 712  8AA2 CA A6 89     	jp z,Main
 713  8AA5
 714  8AA5              ; RECARGA DE NUEVA OLEADA.
 715  8AA5
 716  8AA5 3A 2C 89     	ld a,(Contador_de_frames)
 717  8AA8 47           	ld b,a
 718  8AA9 3A 30 89     	ld a,(Activa_recarga_cajas)
 719  8AAC B8           	cp b
 720  8AAD 28 08        	jr z,20F
 721  8AAF
 722  8AAF 21 F9 88     	ld hl,Ctrl_1
 723  8AB2 CB E6        	set 4,(hl)
 724  8AB4 C3 A6 89     	jp Main
 725  8AB7
 726  8AB7 21 F9 88     20 ld hl,Ctrl_1
 727  8ABA CB A6        	res 4,(hl)
 728  8ABC
 729  8ABC 3A 2C 89     	ld a,(Contador_de_frames)
 730  8ABF
 731  8ABF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 732  8ABF              ;! _ IMPREDECIBLE !!!!
 733  8ABF
 734  8ABF C6 0A        	add 10
 735  8AC1 32 2F 89     	ld (Clock_Entidades_en_curso),a
 736  8AC4
 737  8AC4 C3 51 89     	jp 4B
 738  8AC7
 739  8AC7 C9           	ret
 740  8AC8
 741  8AC8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 742  8AC8              ;
 743  8AC8              ;	16/11/23
 744  8AC8
 745  8AC8              Gestiona_Amadeus
 746  8AC8
 747  8AC8              ;! Activa/desactiva impacto con Amadeus.
 748  8AC8
 749  8AC8 3A D3 88     	ld a,(Impacto)
 750  8ACB A7           	and a
 751  8ACC 20 FE        	jr nz,$
 752  8ACE
 753  8ACE CD 3B 8B     	call Mov_Amadeus
 754  8AD1
 755  8AD1 3A E6 88     	ld a,(Ctrl_0)
 756  8AD4 CB 67        	bit 4,a
 757  8AD6 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 758  8AD8
 759  8AD8 CD 5F 8B     	call Guarda_foto_entidad_a_pintar
 760  8ADB CD 43 8D     	call Guarda_datos_de_borrado_Amadeus
 761  8ADE
 762  8ADE 21 E6 88     14 ld hl,Ctrl_0
 763  8AE1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 764  8AE3
 765  8AE3 CD 24 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 766  8AE6
 767  8AE6              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 768  8AE6
 769  8AE6 CD FE 8B     	call Calcula_numero_de_disparotes
 770  8AE9
 771  8AE9 C9           	ret
 772  8AEA
 773  8AEA              ; --------------------------------------------------------------------------------------------------------------
 774  8AEA              ;
 775  8AEA              ;	27/05/23
 776  8AEA
 777  8AEA              Mov_obj
 778  8AEA
 779  8AEA 3A F7 88     	ld a,(Ctrl_2)
 780  8AED CB 4F        	bit 1,a
 781  8AEF 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 782  8AF1
 783  8AF1              ; Explosión:
 784  8AF1
 785  8AF1 3A F8 88     	ld a,(Frames_explosion)
 786  8AF4 A7           	and a
 787  8AF5 20 11        	jr nz,4F
 788  8AF7
 789  8AF7              ; Una alimaña menos!!!!!!!!!1
 790  8AF7
 791  8AF7 CD E1 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 792  8AFA 21 03 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 793  8AFD 35           	dec (hl)
 794  8AFE 21 04 89     	ld hl,Entidades_en_curso
 795  8B01 35           	dec (hl)
 796  8B02 21 02 89     	ld hl,Numero_de_entidades
 797  8B05 35           	dec (hl)
 798  8B06 18 32        	jr 3F
 799  8B08
 800  8B08              ; -----
 801  8B08
 802  8B08              ;	`Movemos´ la explosión.
 803  8B08
 804  8B08 2A C8 88     4 ld hl,(Puntero_DESPLZ_der)
 805  8B0B 23           	inc hl
 806  8B0C 23           	inc hl
 807  8B0D 22 C8 88     	ld (Puntero_DESPLZ_der),hl
 808  8B10 CD 16 8C     	call Extrae_address
 809  8B13 22 BE 88     	ld (Puntero_objeto),hl
 810  8B16
 811  8B16 21 F8 88     	ld hl,Frames_explosion
 812  8B19 35           	dec (hl)
 813  8B1A 18 1E        	jr 3F
 814  8B1C
 815  8B1C AF           2 xor a
 816  8B1D 32 E6 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 817  8B20
 818  8B20              ; Movemos Entidades malignas.
 819  8B20
 820  8B20 CD 2A 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 821  8B23
 822  8B23 3A E6 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 823  8B26 CB 67        	bit 4,a
 824  8B28 C8           	ret z
 825  8B29
 826  8B29              ; Ha habido desplazamiento de la entidad maligna.
 827  8B29              ; Ha llegado a zona de AMADEUS ???
 828  8B29
 829  8B29 3A C1 88     	ld a,(Coordenada_y)
 830  8B2C FE 14        	cp $14
 831  8B2E D4 55 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 832  8B31              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 833  8B31              ; ---------
 834  8B31
 835  8B31 CD 66 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 836  8B34 CD 63 8D     	call Repone_datos_de_borrado
 837  8B37 CD BC 8B     	call Limpia_Variables_de_borrado
 838  8B3A
 839  8B3A C9           3 ret													; _de la misma.
 840  8B3B
 841  8B3B              ; --------------------------------------------------------------------------------------------------------------
 842  8B3B              ;
 843  8B3B              ;	29/1/23
 844  8B3B
 845  8B3B              Mov_Amadeus
 846  8B3B
 847  8B3B CD 03 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 848  8B3E
 849  8B3E 3A E6 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 850  8B41 CB 67        	bit 4,a
 851  8B43 C8           	ret z
 852  8B44
 853  8B44              ; ---------
 854  8B44
 855  8B44 CD 66 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 856  8B47 CD 53 8D     	call Repone_datos_de_borrado_Amadeus
 857  8B4A CD BC 8B     	call Limpia_Variables_de_borrado
 858  8B4D
 859  8B4D C9           	ret
 860  8B4E
 861  8B4E              ; -----------------------------------------------------------------------------------
 862  8B4E              ;
 863  8B4E              ;	16/11/23
 864  8B4E
 865  8B4E CD 1C 8C     Inicia_entidad	call Inicia_Puntero_objeto
 866  8B51 CD CF 98     	call Recompone_posicion_inicio
 867  8B54 CD AE 92     	call Draw
 868  8B57 CD A0 7F     	call Guarda_foto_registros
 869  8B5A F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 870  8B5B              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 871  8B5B CD 64 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 872  8B5E C9           	ret
 873  8B5F
 874  8B5F              ; --------------------------------------------------------------------------------------------------------------
 875  8B5F              ;
 876  8B5F              ;	31/08/23
 877  8B5F              ;
 878  8B5F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 879  8B5F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 880  8B5F
 881  8B5F              Guarda_foto_entidad_a_pintar
 882  8B5F
 883  8B5F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 884  8B5F
 885  8B5F CD AE 92     	call Draw
 886  8B62 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 887  8B65 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 888  8B66
 889  8B66              ; --------------------------------------------------------------------------------------------------------------
 890  8B66              ;
 891  8B66              ;	19/9/23
 892  8B66
 893  8B66 21 BA 88     Prepara_var_pintado ld hl,Filas
 894  8B69 11 DA 88     	ld de,Variables_de_pintado
 895  8B6C 01 08 00     	ld bc,8
 896  8B6F ED B0        	ldir
 897  8B71 C9           	ret
 898  8B72
 899  8B72              ; --------------------------------------------------------------------------------------------------------------
 900  8B72
 901  8B72 21 DA 88     Repone_pintar ld hl,Variables_de_pintado
 902  8B75 11 BA 88     	ld de,Filas
 903  8B78 01 08 00     	ld bc,8
 904  8B7B ED B0        	ldir
 905  8B7D C9           	ret
 906  8B7E
 907  8B7E              ; *************************************************************************************************************************************************************
 908  8B7E              ;
 909  8B7E              ; 8/1/23
 910  8B7E              ;
 911  8B7E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 912  8B7E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 913  8B7E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 914  8B7E
 915  8B7E              ; Destruye HL y DE !!!!!
 916  8B7E
 917  8B7E              Inicia_punteros_de_cajas
 918  8B7E
 919  8B7E 21 6C 85     	ld hl,Indice_de_cajas
 920  8B81 CD 16 8C         call Extrae_address
 921  8B84 22 FC 88         ld (Puntero_store_caja),hl
 922  8B87 21 6E 85     	ld hl,Indice_de_cajas+2
 923  8B8A 22 00 89     	ld (Indice_restore_caja),hl
 924  8B8D CD 16 8C     	call Extrae_address
 925  8B90 22 FE 88     	ld (Puntero_restore_caja),hl
 926  8B93 C9               ret
 927  8B94
 928  8B94              ; *************************************************************************************************************************************************************
 929  8B94              ;
 930  8B94              ; 8/1/23
 931  8B94              ;
 932  8B94              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 933  8B94
 934  8B94 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 935  8B97 22 1A 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 936  8B9A C9           	ret
 937  8B9B 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 938  8B9E 22 1C 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 939  8BA1 C9           	ret
 940  8BA2
 941  8BA2              ; -------------------------------------------------------------------------------------------------------------
 942  8BA2              ;
 943  8BA2              ; 21/9/23
 944  8BA2              ;
 945  8BA2
 946  8BA2              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 947  8BA2
 948  8BA2              Limpia_album_Amadeus
 949  8BA2
 950  8BA2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 951  8BA5 7E           	ld a,(hl)
 952  8BA6 A7           	and a
 953  8BA7 C8           	ret z
 954  8BA8
 955  8BA8 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 956  8BAB 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 957  8BAE 01 0B 00     	ld bc,11
 958  8BB1 AF           	xor a
 959  8BB2 77           	ld (hl),a
 960  8BB3 ED B0        	ldir
 961  8BB5
 962  8BB5 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 963  8BB8 22 16 89     	ld (End_Snapshot_Amadeus),hl
 964  8BBB
 965  8BBB C9           	ret
 966  8BBC
 967  8BBC 21 D4 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 968  8BBF 11 D5 88     	ld de,Variables_de_borrado+1
 969  8BC2 01 05 00     	ld bc,5
 970  8BC5 AF           	xor a
 971  8BC6 77           	ld (hl),a
 972  8BC7 ED B0        	ldir
 973  8BC9 C9           	ret
 974  8BCA
 975  8BCA              ; -------------------------------------------------------------------------------------------------------------
 976  8BCA              ;
 977  8BCA              ; 8/9/23
 978  8BCA              ;
 979  8BCA
 980  8BCA              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 981  8BCA              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 982  8BCA
 983  8BCA              Calcula_numero_de_malotes
 984  8BCA
 985  8BCA 21 00 70     	ld hl,Album_de_fotos
 986  8BCD EB           	ex de,hl
 987  8BCE 2A 10 89     	ld hl,(Stack_snapshot)
 988  8BD1
 989  8BD1 06 00        	ld b,0
 990  8BD3 7D           	ld a,l
 991  8BD4 93           	sub e
 992  8BD5 28 07        	jr z,1F
 993  8BD7
 994  8BD7              ; Nº de malotes no es "0".
 995  8BD7
 996  8BD7 D6 06        2 sub 6
 997  8BD9 04           	inc b
 998  8BDA A7           	and a
 999  8BDB 20 FA        	jr nz,2B
1000  8BDD 78           	ld a,b
1001  8BDE
1002  8BDE 32 05 89     1 ld (Numero_de_malotes),a
1003  8BE1 C9           	ret
1004  8BE2
1005  8BE2              ; -------------------------------------------------------------------------------------------------------------
1006  8BE2              ;
1007  8BE2              ; 8/9/23
1008  8BE2              ;
1009  8BE2
1010  8BE2              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1011  8BE2              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1012  8BE2
1013  8BE2              Calcula_malotes_Amadeus
1014  8BE2
1015  8BE2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1016  8BE5 EB           	ex de,hl
1017  8BE6 2A 16 89     	ld hl,(End_Snapshot_Amadeus)
1018  8BE9
1019  8BE9 7C           	ld a,h
1020  8BEA A7           	and a
1021  8BEB 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1022  8BED
1023  8BED 06 00        	ld b,0
1024  8BEF 7D           	ld a,l
1025  8BF0 93           	sub e
1026  8BF1 28 07        	jr z,1F
1027  8BF3
1028  8BF3              ; Nº de malotes no es "0".
1029  8BF3
1030  8BF3 D6 06        2 sub 6
1031  8BF5 04           	inc b
1032  8BF6 A7           	and a
1033  8BF7 20 FA        	jr nz,2B
1034  8BF9 78           	ld a,b
1035  8BFA
1036  8BFA 32 05 89     1 ld (Numero_de_malotes),a
1037  8BFD C9           	ret
1038  8BFE
1039  8BFE              ; -------------------------------------------------------------------------------------------------------------
1040  8BFE              ;
1041  8BFE              ; 28/2/23
1042  8BFE              ;
1043  8BFE
1044  8BFE              Calcula_numero_de_disparotes
1045  8BFE
1046  8BFE 21 56 70     	ld hl,Album_de_fotos_disparos
1047  8C01 EB           	ex de,hl
1048  8C02 2A 14 89     	ld hl,(End_Snapshot_disparos)
1049  8C05
1050  8C05 06 00        	ld b,0
1051  8C07 7D           	ld a,l
1052  8C08 93           	sub e
1053  8C09 28 07        	jr z,1F
1054  8C0B
1055  8C0B              ; Nº de malotes no es "0".
1056  8C0B
1057  8C0B D6 06        2 sub 6
1058  8C0D 04           	inc b
1059  8C0E A7           	and a
1060  8C0F 20 FA        	jr nz,2B
1061  8C11 78           	ld a,b
1062  8C12
1063  8C12 32 19 89     1 ld (Numero_de_disparotes),a
1064  8C15 C9           	ret
1065  8C16
1066  8C16              ; *************************************************************************************************************************************************************
1067  8C16              ;
1068  8C16              ; 20/10/22
1069  8C16              ;
1070  8C16              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1071  8C16              ;
1072  8C16              ; Destruye el puntero y DE !!!!!
1073  8C16
1074  8C16 5E           Extrae_address ld e,(hl)
1075  8C17 23           	inc hl
1076  8C18 56           	ld d,(hl)
1077  8C19 2B           	dec hl
1078  8C1A EB           	ex de,hl
1079  8C1B C9           	ret
1080  8C1C
1081  8C1C              ; *************************************************************************************************************************************************************
1082  8C1C              ;
1083  8C1C              ;	7/2/23
1084  8C1C              ;
1085  8C1C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1086  8C1C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1087  8C1C              ;
1088  8C1C              ;   Destruye HL y BC !!!!!,
1089  8C1C              ;
1090  8C1C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1091  8C1C              ;					"0" ..... Izquierda.
1092  8C1C
1093  8C1C              Inicia_Puntero_objeto
1094  8C1C
1095  8C1C 3A CE 88     	ld a,(Cuad_objeto)
1096  8C1F E6 01        	and 1
1097  8C21 F5           	push af
1098  8C22 CC 40 8C     	call z,Inicia_puntero_objeto_izq
1099  8C25 F1           	pop af
1100  8C26 28 2B        	jr z,1F
1101  8C28 CD 2D 8C     	call Inicia_puntero_objeto_der
1102  8C2B 18 26        	jr 1F
1103  8C2D
1104  8C2D              ; Arrancamos desde la parte izquierda de la pantalla.
1105  8C2D              ; Iniciamos (Indice_Sprite_der).
1106  8C2D
1107  8C2D 2A C4 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1108  8C30 22 C8 88     	ld (Puntero_DESPLZ_der),hl
1109  8C33 CD 16 8C     	call Extrae_address
1110  8C36 22 BE 88     	ld (Puntero_objeto),hl
1111  8C39
1112  8C39 2A C6 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1113  8C3C 22 CA 88     	ld (Puntero_DESPLZ_izq),hl
1114  8C3F C9           	ret
1115  8C40
1116  8C40              ; Arrancamos desde la parte derecha de la pantalla.
1117  8C40              ; Iniciamos (Indice_Sprite_izq).
1118  8C40
1119  8C40 2A C6 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1120  8C43 22 CA 88     	ld (Puntero_DESPLZ_izq),hl
1121  8C46 CD 16 8C     	call Extrae_address
1122  8C49 22 BE 88     	ld (Puntero_objeto),hl
1123  8C4C
1124  8C4C 2A C4 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1125  8C4F 22 C8 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1126  8C52 C9           	ret
1127  8C53
1128  8C53              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1129  8C53
1130  8C53 21 40 83     1 ld hl,Amadeus
1131  8C56 ED 4B BE 88  	ld bc,(Puntero_objeto)
1132  8C5A B7 ED 42     	sub hl,bc
1133  8C5D C0           	ret nz
1134  8C5E 21 E6 88     	ld hl,Ctrl_0
1135  8C61 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1136  8C63 C9           	ret 												; _de nuestra nave en los extremos.
1137  8C64
1138  8C64              ; *************************************************************************************************************************************************************
1139  8C64              ;
1140  8C64              ;	14/5/23
1141  8C64              ;
1142  8C64              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1143  8C64              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1144  8C64
1145  8C64              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1146  8C64              ;	_de la 2ª y 3ª entidad respectivamente.
1147  8C64
1148  8C64              Store_Restore_cajas
1149  8C64
1150  8C64 E5           	push hl
1151  8C65 D5           	push de
1152  8C66 C5            	push bc
1153  8C67
1154  8C67              ;	STORE !!!!!
1155  8C67              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1156  8C67
1157  8C67 21 BA 88     	ld hl,Filas
1158  8C6A ED 5B FC 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1159  8C6E 01 3F 00     	ld bc,63
1160  8C71 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1161  8C73
1162  8C73              ; 	Entidad_sospechosa. 20/4/23
1163  8C73
1164  8C73 3A D3 88     	ld a,(Impacto)
1165  8C76 A7           	and a
1166  8C77 28 0C        	jr z,1F
1167  8C79
1168  8C79 2A FC 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1169  8C7C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1170  8C7F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1171  8C80 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1172  8C82 22 1F 89     	ld (Entidad_sospechosa_de_colision),hl
1173  8C85
1174  8C85              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1175  8C85
1176  8C85 2A FE 88     1 ld hl,(Puntero_restore_caja)
1177  8C88 7E           	ld a,(hl)
1178  8C89 A7           	and a
1179  8C8A F5           	push af
1180  8C8B 28 08        	jr z,2F
1181  8C8D
1182  8C8D 11 BA 88     	ld de,Filas
1183  8C90 01 3F 00     	ld bc,63
1184  8C93 ED B0        	ldir
1185  8C95
1186  8C95 CD B1 8C     2 call Incrementa_punteros_de_cajas
1187  8C98
1188  8C98 F1           	pop af
1189  8C99 28 EA        	jr z,1B
1190  8C9B
1191  8C9B C1           	pop bc
1192  8C9C D1           	pop de
1193  8C9D E1           	pop hl
1194  8C9E
1195  8C9E C9           	ret
1196  8C9F
1197  8C9F              ; **************************************************************************************************
1198  8C9F              ;
1199  8C9F              ;	12/05/23
1200  8C9F              ;
1201  8C9F              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1202  8C9F
1203  8C9F E5           Restore_entidad push hl
1204  8CA0 D5           	push de
1205  8CA1 C5            	push bc
1206  8CA2
1207  8CA2 2A FC 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1208  8CA5 11 BA 88     	ld de,Filas
1209  8CA8 01 3F 00     	ld bc,63
1210  8CAB ED B0        	ldir
1211  8CAD
1212  8CAD C1           	pop bc
1213  8CAE D1           	pop de
1214  8CAF E1           	pop hl
1215  8CB0 C9           	ret
1216  8CB1
1217  8CB1              ; **************************************************************************************************
1218  8CB1              ;
1219  8CB1              ;	08/05/23
1220  8CB1              ;
1221  8CB1              ;	Incrementamos los dos punteros de entidades. (+1).
1222  8CB1
1223  8CB1              Incrementa_punteros_de_cajas
1224  8CB1
1225  8CB1 2A FE 88     	ld hl,(Puntero_restore_caja)
1226  8CB4 22 FC 88     	ld (Puntero_store_caja),hl
1227  8CB7 2A 00 89     	ld hl,(Indice_restore_caja)
1228  8CBA 23           	inc hl
1229  8CBB 23           	inc hl
1230  8CBC 22 00 89     	ld (Indice_restore_caja),hl
1231  8CBF CD 16 8C         call Extrae_address
1232  8CC2 22 FE 88         ld (Puntero_restore_caja),hl
1233  8CC5 C9               ret
1234  8CC6
1235  8CC6              ; **************************************************************************************************
1236  8CC6              ;
1237  8CC6              ;	25/01/23
1238  8CC6              ;
1239  8CC6              ;	Restore_Amadeus
1240  8CC6              ;
1241  8CC6              ;	Cargamos en DRAW los parámetros de Amadeus.
1242  8CC6              ;
1243  8CC6
1244  8CC6 E5           Restore_Amadeus	push hl
1245  8CC7 D5           	push de
1246  8CC8 C5            	push bc
1247  8CC9 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1248  8CCC 11 BA 88     	ld de,Filas
1249  8CCF 01 3F 00     	ld bc,63
1250  8CD2 ED B0        	ldir
1251  8CD4 C1           	pop bc
1252  8CD5 D1           	pop de
1253  8CD6 E1           	pop hl
1254  8CD7 C9           	ret
1255  8CD8
1256  8CD8              ; *************************************************************************************************************************************************************
1257  8CD8              ;
1258  8CD8              ;	29/04/23
1259  8CD8              ;
1260  8CD8              ;	Store_Amadeus
1261  8CD8              ;
1262  8CD8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1263  8CD8              ;
1264  8CD8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1265  8CD8              ;
1266  8CD8              ;	DESTRUYE: HL y BC y DE.
1267  8CD8
1268  8CD8 21 BA 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1269  8CDB 01 3F 00     	ld bc,63
1270  8CDE ED B0        	ldir
1271  8CE0 C9           	ret
1272  8CE1
1273  8CE1              ; -----------------------------------------------------------
1274  8CE1              ;
1275  8CE1              ;	27/04/23
1276  8CE1              ;
1277  8CE1              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1278  8CE1              ;
1279  8CE1              ;	Destruye: HL,BC,DE,A
1280  8CE1
1281  8CE1 21 BA 88     Borra_datos_entidad ld hl,Filas
1282  8CE4 01 3E 00     	ld bc,62
1283  8CE7 AF           	xor a
1284  8CE8 77           	ld (hl),a
1285  8CE9 11 BB 88     	ld de,Filas+1
1286  8CEC ED B0        	ldir
1287  8CEE C9           	ret
1288  8CEF
1289  8CEF              ; -----------------------------------------------------------
1290  8CEF
1291  8CEF              ; Teclado.
1292  8CEF
1293  8CEF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1294  8CF1 DB FE        	in a,($fe)
1295  8CF3 E6 01        	and $01
1296  8CF5 28 02        	jr z,1f
1297  8CF7 18 F6        	jr Pulsa_ENTER
1298  8CF9 C9           1 ret
1299  8CFA
1300  8CFA              ; **************************************************************************************************
1301  8CFA              ;
1302  8CFA              ; Temporización.
1303  8CFA
1304  8CFA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1305  8CFA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1306  8CFA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1307  8CFA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1308  8CFA
1309  8CFA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1310  8CFA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1311  8CFA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1312  8CFA
1313  8CFA              ; A partir de $4f61 no hace falta DELAY.
1314  8CFA
1315  8CFA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1316  8CFA
1317  8CFA 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1318  8CFD 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1319  8CFE 78           	LD A,B
1320  8CFF A7           	AND A
1321  8D00 20 FB        	JR NZ,wait
1322  8D02 C9           	RET
1323  8D03
1324  8D03              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1325  8D03              ;
1326  8D03              ;	5/3/23
1327  8D03              ;
1328  8D03              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1329  8D03
1330  8D03              Movimiento_Amadeus
1331  8D03
1332  8D03              ; Disparo.
1333  8D03
1334  8D03 3A 31 89     	ld a,(Disparo_Amadeus)
1335  8D06 A7           	and a
1336  8D07 20 02        	jr nz,1F
1337  8D09 18 15        	jr 2F
1338  8D0B
1339  8D0B 3E F7        1 ld a,$f7													; "5" para disparar.
1340  8D0D DB FE        	in a,($fe)
1341  8D0F E6 10        	and $10
1342  8D11
1343  8D11 F5           	push af
1344  8D12 CC B8 8D     	call z,Genera_disparo
1345  8D15 F1           	pop af
1346  8D16 20 08        	jr nz,2F
1347  8D18
1348  8D18 3A 31 89     	ld a,(Disparo_Amadeus)
1349  8D1B EE 01        	xor 1
1350  8D1D 32 31 89     	ld (Disparo_Amadeus),a
1351  8D20 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1352  8D22 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1353  8D24 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1354  8D26 CC 89 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1355  8D29
1356  8D29 3E F7        	ld a,$f7
1357  8D2B DB FE        	in a,($fe)
1358  8D2D E6 01        	and $01
1359  8D2F C8           	ret z
1360  8D30
1361  8D30 3E F7        	ld a,$f7
1362  8D32 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1363  8D34 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1364  8D36 CC 6B 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1365  8D39 C9           	ret
1366  8D3A
1367  8D3A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1368  8D3A              ;
1369  8D3A              ;	Rutina provisional para que los malotes cagen balas.
1370  8D3A
1371  8D3A              Detecta_disparo_entidad
1372  8D3A
1373  8D3A 3A 34 89     	ld a,(Disparo_entidad)
1374  8D3D A7           	and a
1375  8D3E C8           	ret z
1376  8D3F
1377  8D3F              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1378  8D3F
1379  8D3F              ;	ld a,$7f				; Detecta SPACE.
1380  8D3F              ;	in a,($fe)
1381  8D3F              ;	and 1
1382  8D3F              ;	ret nz
1383  8D3F
1384  8D3F CD B8 8D     	call Genera_disparo
1385  8D42 C9           	ret
1386  8D43
1387  8D43              ; ----------------------------------------------------------------------
1388  8D43              ;
1389  8D43              ;	8/9/23
1390  8D43
1391  8D43 2A 16 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1392  8D46 2B            	dec hl
1393  8D47 7E           	ld a,(hl)
1394  8D48 A7           	and a
1395  8D49 C8           	ret z										; Salimos si es álbum está vacío.
1396  8D4A
1397  8D4A 11 D9 88     	ld de,Variables_de_borrado+5
1398  8D4D 01 06 00     	ld bc,6
1399  8D50 ED B8        	lddr
1400  8D52 C9           	ret
1401  8D53
1402  8D53              ; ----------------------------------------------------------------------
1403  8D53              ;
1404  8D53              ;	9/9/23
1405  8D53
1406  8D53              Repone_datos_de_borrado_Amadeus
1407  8D53
1408  8D53 21 D4 88     	ld hl,Variables_de_borrado
1409  8D56 11 AC 70     	ld de,Album_de_fotos_Amadeus
1410  8D59 01 06 00     	ld bc,6
1411  8D5C ED B0        	ldir
1412  8D5E
1413  8D5E EB           	ex de,hl
1414  8D5F 22 16 89     	ld (End_Snapshot_Amadeus),hl
1415  8D62
1416  8D62 C9           	ret
1417  8D63
1418  8D63              ; ----------------------------------------------------------------------
1419  8D63              ;
1420  8D63              ;	27/10/23
1421  8D63              ;
1422  8D63
1423  8D63              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1424  8D63              ;	_ Album_de_fotos correspondiente.
1425  8D63
1426  8D63              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1427  8D63              ;	_ durante el proceso de escritura.
1428  8D63
1429  8D63              Repone_datos_de_borrado
1430  8D63
1431  8D63 F3           	di
1432  8D64
1433  8D64 ED 5B 10 89  	ld de,(Stack_snapshot)
1434  8D68 21 D4 88     	ld hl,Variables_de_borrado
1435  8D6B 01 06 00     	ld bc,6
1436  8D6E ED B0        	ldir
1437  8D70 FB           	ei
1438  8D71
1439  8D71 EB           	ex de,hl
1440  8D72 22 10 89     	ld (Stack_snapshot),hl
1441  8D75
1442  8D75 C9           	ret
1443  8D76
1444  8D76              ; -----------------------------------------------------------------------------------
1445  8D76
1446  8D76              Pinta_Amadeus
1447  8D76
1448  8D76 3E 06        	ld a,6
1449  8D78 D3 FE            out ($fe),a										; Amarillo
1450  8D7A
1451  8D7A CD E2 8B        	call Calcula_malotes_Amadeus
1452  8D7D CD 3E 96     	call Extrae_foto_Amadeus
1453  8D80 CD A2 8B     	call Limpia_album_Amadeus
1454  8D83
1455  8D83 C9           	ret
1456  8D84
1457  8D84              Pinta_entidades
1458  8D84
1459  8D84              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1460  8D84
1461  8D84 3A 18 89     	ld a,(Ctrl_3)
1462  8D87 CB 47        	bit 0,a
1463  8D89 C8           	ret z
1464  8D8A
1465  8D8A CD CA 8B     	call Calcula_numero_de_malotes
1466  8D8D CD BC 95     	call Extrae_foto_entidades
1467  8D90 CD FE 7F     	call Limpia_y_reinicia_Stack_Snapshot
1468  8D93
1469  8D93 C9           	ret
1470  8D94
1471  8D94              ; -----------------------------------------------------------------------------------
1472  8D94              ;
1473  8D94              ;	12/11/23
1474  8D94              ;
1475  8D94              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1476  8D94
1477  8D94              Actualiza_relojes
1478  8D94
1479  8D94 21 2C 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1480  8D97 34           	inc (hl)
1481  8D98
1482  8D98 34           	inc (hl)
1483  8D99 35           	dec (hl)
1484  8D9A C0           	ret nz
1485  8D9B
1486  8D9B 21 2D 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1487  8D9E 34           	inc (hl)
1488  8D9F C9           	ret
1489  8DA0
1490  8DA0              ; ---------------------------------------------------------------
1491  8DA0              ;
1492  8DA0              ;	27/9/23
1493  8DA0
1494  8DA0              Guarda_parametros_DRAW
1495  8DA0
1496  8DA0 21 BA 88     	ld hl,Filas
1497  8DA3 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1498  8DA6 01 3F 00     	ld bc,63
1499  8DA9 ED B0        	ldir
1500  8DAB C9           	ret
1501  8DAC
1502  8DAC              Recupera_parametros_DRAW
1503  8DAC
1504  8DAC 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1505  8DAF 11 BA 88     	ld de,Filas
1506  8DB2 01 3F 00     	ld bc,63
1507  8DB5 ED B0        	ldir
1508  8DB7 C9           	ret
1509  8DB8
1510  8DB8              ; ---------------------------------------------------------------
1511  8DB8
1512  8DB8              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DB8              ; ******************************************************************************************************************************************************************************************
   2+ 8DB8              ;
   3+ 8DB8              ;   21/07/23
   4+ 8DB8              ;
   5+ 8DB8              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DB8              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DB8              ;
   8+ 8DB8              ;
   9+ 8DB8              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DB8              ;
  11+ 8DB8              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DB8              ;               _ hacen las entidades hacia abajo.
  13+ 8DB8              ;
  14+ 8DB8              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DB8              ;
  16+ 8DB8              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DB8              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DB8              ;
  19+ 8DB8              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DB8              ;           _ la bala.
  21+ 8DB8              ;
  22+ 8DB8              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DB8              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DB8              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DB8              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DB8              ;           _ en el momento de generarse la bala)).
  27+ 8DB8
  28+ 8DB8              Genera_disparo
  29+ 8DB8
  30+ 8DB8              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DB8              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DB8              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DB8              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DB8              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DB8              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DB8              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DB8
  38+ 8DB8              ; Exclusiones:
  39+ 8DB8
  40+ 8DB8 3A D2 88         ld a,(Vel_down)
  41+ 8DBB 47               ld b,a
  42+ 8DBC 3A 2B 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DBF B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DC0 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DC1 3A F3 88         ld a,(Columnas)
  46+ 8DC4 47               ld b,a
  47+ 8DC5 3A BB 88         ld a,(Columns)
  48+ 8DC8 B8               cp b
  49+ 8DC9 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8DCA
  51+ 8DCA              ; ----- ----- -----
  52+ 8DCA
  53+ 8DCA 3A E6 88         ld a,(Ctrl_0)
  54+ 8DCD CB 77            bit 6,a
  55+ 8DCF 20 06            jr nz,14F
  56+ 8DD1
  57+ 8DD1 3A C1 88         ld a,(Coordenada_y)
  58+ 8DD4 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8DD6 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8DD7
  61+ 8DD7 21 00 80     14 ld hl,Indice_disparo
  62+ 8DDA 3A C2 88         ld a,(CTRL_DESPLZ)
  63+ 8DDD 4F               ld c,a
  64+ 8DDE 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8DE0              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8DE0              ;                                            ""        ""       "f9", B="1"
  67+ 8DE0              ;                                            ""        ""       "fb", B="2"
  68+ 8DE0              ;                                            ""        ""       "fb", B="3"
  69+ 8DE0 A7               and a
  70+ 8DE1 28 10            jr z,1F
  71+ 8DE3 E6 01            and 1
  72+ 8DE5 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8DE6
  74+ 8DE6 79               ld a,c
  75+ 8DE7 16 F9            ld d,$f9
  76+ 8DE9 23           2 inc hl
  77+ 8DEA 23               inc hl
  78+ 8DEB 04               inc b
  79+ 8DEC BA               cp d
  80+ 8DED 28 04            jr z,1F
  81+ 8DEF 14               inc d
  82+ 8DF0 14               inc d
  83+ 8DF1 18 F6            jr 2B
  84+ 8DF3
  85+ 8DF3 CD 16 8C     1 call Extrae_address
  86+ 8DF6 E5               push hl
  87+ 8DF7 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8DF9 DD 21 84 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8DFD
  90+ 8DFD              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8DFD              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8DFD
  93+ 8DFD 3A E6 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E00 CB 77            bit 6,a
  95+ 8E02 20 04            jr nz,19F
  96+ 8E04
  97+ 8E04 AF               xor a
  98+ 8E05 32 34 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E08
 100+ 8E08 3A CE 88     19 ld a,(Cuad_objeto)
 101+ 8E0B FE 02            cp 2
 102+ 8E0D 38 66            jr c,3F
 103+ 8E0F 28 64            jr z,3F
 104+ 8E11
 105+ 8E11              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E11
 107+ 8E11 E6 01            and 1
 108+ 8E13 28 30            jr z,4F
 109+ 8E15
 110+ 8E15              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E15              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E15              ;
 113+ 8E15              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E15              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E15              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E15
 117+ 8E15 2A BC 88     	ld hl,(Posicion_actual)
 118+ 8E18
 119+ 8E18              ;   Amadeus o entidad ???.
 120+ 8E18
 121+ 8E18 3A E6 88         ld a,(Ctrl_0)
 122+ 8E1B CB 77            bit 6,a
 123+ 8E1D 28 0A            jr z,8F
 124+ 8E1F
 125+ 8E1F              ; 	Dispara Amadeus.
 126+ 8E1F
 127+ 8E1F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E21 CD AD 95         call PreviousScan
 129+ 8E24 CD AD 95         call PreviousScan
 130+ 8E27
 131+ 8E27              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E27              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E27              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E27
 136+ 8E27 18 11            jr 10F
 137+ 8E29
 138+ 8E29              ; 	Dispara Entidad.
 139+ 8E29
 140+ 8E29 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E2C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E2C
 143+ 8E2C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E2C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E2C
 146+ 8E2C C5               push bc
 147+ 8E2D 06 10            ld b,16
 148+ 8E2F CD 9E 95     9 call NextScan
 149+ 8E32 10 FB            djnz 9B
 150+ 8E34 C1               pop bc
 151+ 8E35 CD 9F 8E         call Ajusta_disparo_parte_izquierda
 152+ 8E38 18 06            jr 17F
 153+ 8E3A
 154+ 8E3A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8E3A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8E3A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8E3A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8E3A
 159+ 8E3A CD 9F 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8E3D CD 14 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8E40              ;                                                      ; _al generar el disparo.
 162+ 8E40
 163+ 8E40              ; 	LLegados a este punto tendremos:
 164+ 8E40              ;
 165+ 8E40              ;       Puntero_objeto_disparo en IY.
 166+ 8E40              ;       Rutinas_de_impresion en IX.
 167+ 8E40              ;       Puntero_de_impresion en HL.
 168+ 8E40              ;       Impacto/Dirección en BC.
 169+ 8E40
 170+ 8E40 CD A7 8E     17 call Almacena_disparo
 171+ 8E43 18 52            jr 6F                                             ; RET.
 172+ 8E45
 173+ 8E45              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8E45              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8E45              ;
 176+ 8E45              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8E45              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8E45              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8E45
 180+ 8E45 2A BC 88     4 ld hl,(Posicion_actual)
 181+ 8E48
 182+ 8E48              ;   Amadeus o entidad ???.
 183+ 8E48
 184+ 8E48 3A E6 88         ld a,(Ctrl_0)
 185+ 8E4B CB 77            bit 6,a
 186+ 8E4D 28 0A            jr z,11F
 187+ 8E4F
 188+ 8E4F              ; 	Dispara Amadeus.
 189+ 8E4F
 190+ 8E4F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8E51 CD AD 95         call PreviousScan
 192+ 8E54 CD AD 95         call PreviousScan
 193+ 8E57
 194+ 8E57              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E57              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E57              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E57              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E57
 199+ 8E57 18 11            jr 13F
 200+ 8E59
 201+ 8E59              ; 	Dispara Entidad.
 202+ 8E59
 203+ 8E59 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E5C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E5C
 206+ 8E5C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E5C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E5C
 209+ 8E5C C5               push bc
 210+ 8E5D 06 10            ld b,16
 211+ 8E5F CD 9E 95     12 call NextScan
 212+ 8E62 10 FB            djnz 12B
 213+ 8E64 C1               pop bc
 214+ 8E65
 215+ 8E65 CD 98 8E         call Ajusta_disparo_parte_derecha
 216+ 8E68 18 06            jr 18F
 217+ 8E6A
 218+ 8E6A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E6A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E6A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E6A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E6A
 223+ 8E6A CD 98 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E6D CD 14 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E70              ;                                                       ; _al generar el disparo.
 226+ 8E70
 227+ 8E70              ; LLegados a este punto tendremos:
 228+ 8E70              ;
 229+ 8E70              ;       Puntero_objeto_disparo en IY.
 230+ 8E70              ;       Rutinas_de_impresion en IX.
 231+ 8E70              ;       Puntero_de_impresion en HL.
 232+ 8E70              ;       Impacto/Dirección en BC.
 233+ 8E70
 234+ 8E70 CD A7 8E     18 call Almacena_disparo
 235+ 8E73 18 22            jr 6F                                               ; RET.
 236+ 8E75
 237+ 8E75              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E75
 239+ 8E75 28 11        3 jr z,5F
 240+ 8E77
 241+ 8E77              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E77              ;
 243+ 8E77              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E77              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E77              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E77              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E77
 248+ 8E77              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E77              ;	   ""        ""       "f9", B="1"
 250+ 8E77              ;	   ""        ""       "fb", B="2"
 251+ 8E77              ; 	   ""        ""       "fb", B="3"
 252+ 8E77
 253+ 8E77 2A BC 88     	ld hl,(Posicion_actual)
 254+ 8E7A CD 9E 95     	call NextScan
 255+ 8E7D
 256+ 8E7D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E7D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E7D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E7D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E7D
 261+ 8E7D CD 9F 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E80
 263+ 8E80              ; 	No se produce impacto. B="$80"
 264+ 8E80              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E80
 266+ 8E80 01 80 80         ld bc,$8080
 267+ 8E83
 268+ 8E83              ; 	LLegados a este punto tendremos:
 269+ 8E83              ;
 270+ 8E83              ;       Puntero_objeto_disparo en IY.
 271+ 8E83              ;       Rutinas_de_impresion en IX.
 272+ 8E83              ;       Puntero_de_impresion en HL.
 273+ 8E83              ;       Impacto/Dirección en BC.
 274+ 8E83
 275+ 8E83 CD A7 8E         call Almacena_disparo
 276+ 8E86 18 0F            jr 6F                                           ; RET.
 277+ 8E88
 278+ 8E88              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E88              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E88              ;
 281+ 8E88              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E88              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E88              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E88              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E88
 286+ 8E88 2A BC 88     5 ld hl,(Posicion_actual)
 287+ 8E8B CD 9E 95     	call NextScan
 288+ 8E8E
 289+ 8E8E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E8E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E8E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E8E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E8E
 294+ 8E8E CD 98 8E         call Ajusta_disparo_parte_derecha
 295+ 8E91
 296+ 8E91              ; 	No se produce impacto. B="$80"
 297+ 8E91              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E91
 299+ 8E91 01 80 80     15 ld bc,$8080
 300+ 8E94
 301+ 8E94              ; 	LLegados a este punto tendremos:
 302+ 8E94              ;
 303+ 8E94              ;       Puntero_objeto_disparo en IY.
 304+ 8E94              ;       Rutinas_de_impresion en IX.
 305+ 8E94              ;       Puntero_de_impresion en HL.
 306+ 8E94              ;       Impacto/Dirección en BC.
 307+ 8E94
 308+ 8E94 CD A7 8E         call Almacena_disparo
 309+ 8E97
 310+ 8E97 C9           6 ret
 311+ 8E98
 312+ 8E98              ; ----------------------------------------------------------------
 313+ 8E98              ;
 314+ 8E98              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E98              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E98              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E98
 318+ 8E98 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E99 FE 02            cp 2
 320+ 8E9B 38 01            jr c,1F
 321+ 8E9D 23               inc hl
 322+ 8E9E C9           1 ret
 323+ 8E9F
 324+ 8E9F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8EA0 FE 01        	cp 1
 326+ 8EA2 20 01        	jr nz,1F
 327+ 8EA4 2B           	dec hl
 328+ 8EA5 2B           1 dec hl
 329+ 8EA6 C9               ret
 330+ 8EA7
 331+ 8EA7              ; ----------------------------------------------------------------
 332+ 8EA7              ;
 333+ 8EA7              ;   25/02/23
 334+ 8EA7              ;
 335+ 8EA7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8EA7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8EA7              ;
 338+ 8EA7              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8EA7              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8EA7
 341+ 8EA7              Almacena_disparo
 342+ 8EA7
 343+ 8EA7 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8EA8 F1               pop af
 345+ 8EA9 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8EAA
 347+ 8EAA 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8EAB E6 01            and 1
 349+ 8EAD 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8EAF              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8EAF              ; 	Dispara AMADEUS.
 352+ 8EAF
 353+ 8EAF              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8EAF              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8EAF              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8EAF              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8EAF
 358+ 8EAF C5               push bc
 359+ 8EB0 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8EB3 2A 1C 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8EB6 A7               and a
 362+ 8EB7 ED 42            sbc hl,bc
 363+ 8EB9 CC 9B 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8EBC C1               pop bc
 365+ 8EBD 28 54            jr z,4F
 366+ 8EBF
 367+ 8EBF 2A 1C 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8EC2 23               inc hl
 369+ 8EC3 23               inc hl
 370+ 8EC4 22 1C 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8EC7              ;                                                   ; _ Disparo_(+1).
 372+ 8EC7 18 18            jr 2F
 373+ 8EC9
 374+ 8EC9              ; Dispara una entidad.
 375+ 8EC9
 376+ 8EC9 C5           1 push bc
 377+ 8ECA 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8ECD 2A 1A 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8ED0 A7               and a
 380+ 8ED1 ED 42            sbc hl,bc
 381+ 8ED3 CC 94 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8ED6 C1               pop bc
 383+ 8ED7 28 3A            jr z,4F
 384+ 8ED9
 385+ 8ED9 2A 1A 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8EDC 23               inc hl
 387+ 8EDD 23               inc hl
 388+ 8EDE 22 1A 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8EE1              ;                                                   ; _ Disparo_(+1).
 390+ 8EE1 CD 16 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8EE4              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8EE4              ;
 393+ 8EE4              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8EE4              ;                                                     Rutinas_de_impresion en IX.
 395+ 8EE4              ;                                                     Puntero_de_impresion en HL.
 396+ 8EE4              ;                                                     Impacto/Dirección en BC.
 397+ 8EE4
 398+ 8EE4 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8EE5 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8EE6 23               inc hl                                          ; _ al siguiente.
 401+ 8EE7 A7               and a
 402+ 8EE8 20 C0            jr nz,3B
 403+ 8EEA
 404+ 8EEA 08               ex af,af
 405+ 8EEB ED 73 0A 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8EEF F9               ld sp,hl
 407+ 8EF0
 408+ 8EF0 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8EF2 F5               push af                                         ; Puntero de impresión.
 410+ 8EF3 FD E5            push iy                                         ; Puntero objeto.
 411+ 8EF5 C5               push bc                                         ; Control.
 412+ 8EF6
 413+ 8EF6 ED 7B 0A 89      ld sp,(Stack)
 414+ 8EFA
 415+ 8EFA              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8EFA
 417+ 8EFA 21 F9 88     	ld hl,Ctrl_1
 418+ 8EFD CB C6        	set 0,(hl)
 419+ 8EFF
 420+ 8EFF DD E5        	push ix
 421+ 8F01 E1               pop hl
 422+ 8F02 F5               push af
 423+ 8F03 DD E1            pop ix
 424+ 8F05
 425+ 8F05 CD A0 7F     	call Guarda_foto_registros
 426+ 8F08
 427+ 8F08 21 F9 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F0B CB 86        	res 0,(hl)
 429+ 8F0D
 430+ 8F0D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F0D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F0D
 433+ 8F0D CD 9B 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F10 CD 94 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F13
 436+ 8F13 C9           4 ret
 437+ 8F14
 438+ 8F14              ; ----------------------------------------------------------------
 439+ 8F14              ;
 440+ 8F14              ;   4/3/23
 441+ 8F14              ;
 442+ 8F14              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F14              ;   _ al generarse el disparo.
 444+ 8F14              ;
 445+ 8F14              ;       "$80" ..... No se produce colisión.
 446+ 8F14              ;       "$81" ..... Se produce colisión.
 447+ 8F14              ;
 448+ 8F14              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F14              ;         _ que forman el disparo.
 450+ 8F14
 451+ 8F14
 452+ 8F14              Comprueba_Colision
 453+ 8F14
 454+ 8F14              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F14
 456+ 8F14 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F16 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F17
 459+ 8F17 CD 4D 8F         call Modifica_H_Velocidad_disparo
 460+ 8F1A
 461+ 8F1A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F1B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F1D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F1F
 465+ 8F1F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F21 CD 3D 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F24
 468+ 8F24 7B               ld a,e
 469+ 8F25 E6 01            and 1
 470+ 8F27 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F29              ;                                                  ; _ para activar IMPACTO.
 472+ 8F29 E1               pop hl
 473+ 8F2A E5               push hl
 474+ 8F2B CD 9E 95         call NextScan
 475+ 8F2E
 476+ 8F2E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F2F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F31 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F33              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F33 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F35 CD 3D 8F         call Bucle_2
 482+ 8F38
 483+ 8F38 43           1 ld b,e
 484+ 8F39 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8F3A FD E1            pop iy
 486+ 8F3C C9               ret
 487+ 8F3D
 488+ 8F3D              ; ---------- ----------
 489+ 8F3D
 490+ 8F3D 06 02        Bucle_2 ld b,2
 491+ 8F3F FD 7E 00     2 ld a,(iy)
 492+ 8F42 A6               and (hl)
 493+ 8F43 28 02            jr z,1F
 494+ 8F45 1E 81            ld e,$81
 495+ 8F47 23           1 inc hl
 496+ 8F48 FD 23            inc iy
 497+ 8F4A 10 F3            djnz 2B
 498+ 8F4C C9               ret
 499+ 8F4D
 500+ 8F4D              ; ---------- ----------
 501+ 8F4D              ;
 502+ 8F4D              ;   21/7/23
 503+ 8F4D
 504+ 8F4D              Modifica_H_Velocidad_disparo
 505+ 8F4D
 506+ 8F4D 3A 2B 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8F50 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8F52 D0               ret nc                                         ; _ incrementamos H.
 509+ 8F53 24               inc h
 510+ 8F54
 511+ 8F54 C9               ret
 512+ 8F55
 513+ 8F55              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F55              ;
 515+ 8F55              ;   11/04/23
 516+ 8F55              ;
 517+ 8F55              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F55              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F55              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F55              ;
 521+ 8F55              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8F55
 523+ 8F55              Compara_coordenadas_X
 524+ 8F55
 525+ 8F55              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F55              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F55
 528+ 8F55              ; Preparamos registros:
 529+ 8F55
 530+ 8F55 21 C0 88         ld hl,Filas+6
 531+ 8F58 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8F59 23               inc hl
 533+ 8F5A 23               inc hl
 534+ 8F5B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8F5C 43               ld b,e
 536+ 8F5D
 537+ 8F5D 21 CE 88         ld hl,Filas+20
 538+ 8F60 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8F61 21 26 89         ld hl,Coordenadas_X_Entidad
 540+ 8F64 CD 80 91         call Guarda_coordenadas_X
 541+ 8F67
 542+ 8F67              ; Preparamos registros:
 543+ 8F67
 544+ 8F67 21 84 85         ld hl,Amadeus_db+6
 545+ 8F6A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8F6B 23               inc hl
 547+ 8F6C 23               inc hl
 548+ 8F6D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8F6E 7B               ld a,e
 550+ 8F6F 08               ex af,af'
 551+ 8F70 21 92 85         ld hl,Amadeus_db+20
 552+ 8F73 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8F74 21 23 89         ld hl,Coordenadas_X_Amadeus
 554+ 8F77 CD 80 91         call Guarda_coordenadas_X
 555+ 8F7A
 556+ 8F7A              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8F7A              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8F7A
 559+ 8F7A 04               inc b
 560+ 8F7B 05               dec b
 561+ 8F7C 28 04            jr z,1F
 562+ 8F7E 06 03            ld b,3
 563+ 8F80 18 02            jr 2F
 564+ 8F82 06 02        1 ld b,2
 565+ 8F84 08           2 ex af,af'
 566+ 8F85 3C               inc a
 567+ 8F86 3D               dec a
 568+ 8F87 28 04            jr z,5F
 569+ 8F89 0E 03            ld c,3
 570+ 8F8B 18 02            jr 6F
 571+ 8F8D 0E 02        5 ld c,2
 572+ 8F8F 79           6 ld a,c
 573+ 8F90 08               ex af,af'
 574+ 8F91 11 26 89         ld de,Coordenadas_X_Entidad
 575+ 8F94 1A           4 ld a,(de)
 576+ 8F95 21 23 89         ld hl,Coordenadas_X_Amadeus
 577+ 8F98 BE           3 cp (hl)
 578+ 8F99 28 0E            jr z,7F
 579+ 8F9B 23               inc hl
 580+ 8F9C 0D               dec c
 581+ 8F9D 20 F9            jr nz,3B
 582+ 8F9F 13               inc de
 583+ 8FA0 08               ex af,af'
 584+ 8FA1 4F               ld c,a
 585+ 8FA2 08               ex af,af'
 586+ 8FA3 10 EF            djnz 4B
 587+ 8FA5
 588+ 8FA5              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 8FA5
 590+ 8FA5 CD BC 91     8 call Limpia_Coordenadas_X
 591+ 8FA8 C9               ret
 592+ 8FA9
 593+ 8FA9 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 8FAB 32 D3 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 8FAE 21 1E 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 8FB1 CB D6            set 2,(hl)
 597+ 8FB3 18 F0            jr 8B
 598+ 8FB5
 599+ 8FB5              ; -----------------------------------------------------------------------
 600+ 8FB5              ;
 601+ 8FB5              ;   17/04/23
 602+ 8FB5              ;
 603+ 8FB5
 604+ 8FB5              Detecta_colision_nave_entidad
 605+ 8FB5
 606+ 8FB5              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 8FB5
 608+ 8FB5 2A BC 88         ld hl,(Posicion_actual)
 609+ 8FB8 CD F9 94         call Calcula_puntero_de_impresion
 610+ 8FBB
 611+ 8FBB              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 8FBB              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 8FBB
 614+ 8FBB DD E5            push ix
 615+ 8FBD E1               pop hl
 616+ 8FBE E5               push hl
 617+ 8FBF
 618+ 8FBF              ; ----- ----- -----
 619+ 8FBF 1E 00            ld e,0                                         ; Indica impacto.
 620+ 8FC1 06 0A            ld b,10
 621+ 8FC3 CD F3 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 8FC6 7B               ld a,e
 623+ 8FC7 FE 05            cp 5
 624+ 8FC9 38 0E            jr c,3F
 625+ 8FCB
 626+ 8FCB              ; LLegados a este punto:
 627+ 8FCB              ;
 628+ 8FCB              ;   HAY COLISIÓN !!!!!.
 629+ 8FCB              ;
 630+ 8FCB              ;   .db (Impacto) de Amadeus a "1".
 631+ 8FCB              ;   SET el bit3 de (Impacto2).
 632+ 8FCB              ;
 633+ 8FCB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8FCB
 635+ 8FCB 21 97 85         ld hl,Amadeus_db+25
 636+ 8FCE 36 01            ld (hl),1
 637+ 8FD0 21 1E 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 8FD3 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 8FD5 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 8FD7 18 18            jr 1F
 641+ 8FD9
 642+ 8FD9              ; -----
 643+ 8FD9
 644+ 8FD9 E1           3 pop hl
 645+ 8FDA CD 9E 95         call NextScan
 646+ 8FDD E5               push hl
 647+ 8FDE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 8FDF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 8FE1 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 8FE3 30 0C            jr nc,1F
 651+ 8FE5              ;                                                  ; _ 2º scanline si esto es así.
 652+ 8FE5 10 DC            djnz 2B
 653+ 8FE7
 654+ 8FE7              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 8FE7
 656+ 8FE7              ; LLegados a este punto:
 657+ 8FE7              ;
 658+ 8FE7              ;   NO HAY COLISIÓN !!!!!.
 659+ 8FE7              ;
 660+ 8FE7              ;   .db (Impacto) de Amadeus a "0".
 661+ 8FE7              ;   RES el bit2 de (Impacto2).
 662+ 8FE7              ;
 663+ 8FE7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8FE7              ;   Lo colocamos a "0".
 665+ 8FE7
 666+ 8FE7 21 1E 89         ld hl,Impacto2
 667+ 8FEA CB 96            res 2,(hl)
 668+ 8FEC 2A 1F 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 8FEF 36 00            ld (hl),0
 670+ 8FF1
 671+ 8FF1 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 8FF2 C9               ret
 673+ 8FF3
 674+ 8FF3               ; ---------- ----------
 675+ 8FF3
 676+ 8FF3 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 8FF4 3A BB 88         ld a,(Columns)
 678+ 8FF7 47               ld b,a
 679+ 8FF8 FD 7E 00     2 ld a,(iy)
 680+ 8FFB BE               cp (hl)
 681+ 8FFC 28 01            jr z,1F
 682+ 8FFE
 683+ 8FFE 1C               inc e
 684+ 8FFF
 685+ 8FFF 23           1 inc hl
 686+ 9000 FD 23            inc iy
 687+ 9002 10 F4            djnz 2B
 688+ 9004 C1               pop bc
 689+ 9005 C9               ret
 690+ 9006
 691+ 9006              ; -------------------------------------------------------------------------------------------------------------
 692+ 9006              ;
 693+ 9006              ;   13/03/23
 694+ 9006              ;
 695+ 9006              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9006              ;
 697+ 9006              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9006
 699+ 9006 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9009 7E               ld a,(hl)
 701+ 900A A7               and a
 702+ 900B C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 900C
 704+ 900C 44               ld b,h
 705+ 900D 4D               ld c,l
 706+ 900E 2A 12 89         ld hl,(Stack_snapshot_disparos)
 707+ 9011 E5               push hl
 708+ 9012 A7               and a
 709+ 9013 ED 42            sbc hl,bc
 710+ 9015 E5               push hl
 711+ 9016 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9017
 713+ 9017 E1               pop hl
 714+ 9018 54               ld d,h
 715+ 9019 5D               ld e,l
 716+ 901A 1B               dec de
 717+ 901B ED B8            lddr                                                ; Limpiamos.
 718+ 901D
 719+ 901D 21 56 70         ld hl,Album_de_fotos_disparos
 720+ 9020 22 12 89         ld (Stack_snapshot_disparos),hl
 721+ 9023
 722+ 9023 C9               ret
 723+ 9024
 724+ 9024              ; -------------------------------------------------------------------------------------------------------------
 725+ 9024              ;
 726+ 9024              ;   18/07/23
 727+ 9024              ;
 728+ 9024
 729+ 9024              Motor_de_disparos
 730+ 9024
 731+ 9024              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9024
 733+ 9024 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9027 2A 1C 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 902A
 736+ 902A CD 16 8C     2 call Extrae_address
 737+ 902D 7E               ld a,(hl)
 738+ 902E A7               and a
 739+ 902F 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9031
 741+ 9031              ; ----- ----- ----- ----- ----- -----
 742+ 9031
 743+ 9031 C5               push bc
 744+ 9032 CD F6 90         call foto_disparo_a_borrar
 745+ 9035
 746+ 9035              ; Existe colisión con este disparo???
 747+ 9035
 748+ 9035 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9036 7E               ld a,(hl)
 750+ 9037 2B               dec hl
 751+ 9038 E6 01            and 1
 752+ 903A 28 1D            jr z,9F
 753+ 903C
 754+ 903C              ;   En este punto:
 755+ 903C              ;
 756+ 903C              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 903C              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 903C              ;   _con la entidad).
 759+ 903C              ;
 760+ 903C              ;   Disparo_2A defw 0                                ; Control.
 761+ 903C              ;    defw 0                                          ; Puntero objeto.
 762+ 903C              ;    defw 0                                          ; Puntero de impresión.
 763+ 903C              ;    defw 0                                          ; Rutina de impresión.
 764+ 903C
 765+ 903C E5               push hl
 766+ 903D
 767+ 903D 06 04            ld b,4
 768+ 903F 23           19 inc hl
 769+ 9040 10 FD            djnz 19B
 770+ 9042
 771+ 9042 CD 16 8C         call Extrae_address
 772+ 9045 CD 67 9C         call Genera_coordenadas_disparo
 773+ 9048
 774+ 9048              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9048
 776+ 9048 21 21 89         ld hl,Coordenadas_disparo_certero
 777+ 904B 72               ld (hl),d
 778+ 904C 23               inc hl
 779+ 904D 73               ld (hl),e
 780+ 904E
 781+ 904E              ; Elimino el disparo de la base de datos.
 782+ 904E
 783+ 904E E1               pop hl
 784+ 904F CD 75 91         call Elimina_disparo_de_base_de_datos
 785+ 9052 21 1E 89         ld hl,Impacto2
 786+ 9055 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9057
 788+ 9057 18 06            jr 11F
 789+ 9059
 790+ 9059 CD 1F 91     9 call Mueve_disparo
 791+ 905C CD F6 90         call foto_disparo_a_borrar
 792+ 905F
 793+ 905F C1           11 pop bc
 794+ 9060 18 04            jr 7F
 795+ 9062
 796+ 9062              ; ----- ----- ----- ----- ----- -----
 797+ 9062
 798+ 9062 ED 42        1 sbc hl,bc
 799+ 9064 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9066
 801+ 9066 2A 1C 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9069 23               inc hl
 803+ 906A 23               inc hl
 804+ 906B 22 1C 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 906E 18 BA            jr 2B
 806+ 9070
 807+ 9070 CD 9B 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9073              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9073
 810+ 9073              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9073
 812+ 9073 01 6A 85         ld bc,Disparo_11
 813+ 9076 2A 1A 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9079
 815+ 9079 CD 16 8C     5 call Extrae_address
 816+ 907C 7E               ld a,(hl)
 817+ 907D A7               and a
 818+ 907E 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9080
 820+ 9080              ; ----- ----- ----- ----- ----- -----
 821+ 9080
 822+ 9080 C5               push bc
 823+ 9081 CD F6 90         call foto_disparo_a_borrar
 824+ 9084
 825+ 9084              ; Existe colisión con este disparo???
 826+ 9084
 827+ 9084 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9085 7E               ld a,(hl)
 829+ 9086 2B               dec hl
 830+ 9087 E6 01            and 1
 831+ 9089 28 4D            jr z,10F
 832+ 908B
 833+ 908B              ;! La colisión se produce con Amadeus???
 834+ 908B              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 908B
 836+ 908B E5               push hl
 837+ 908C
 838+ 908C 06 04            ld b,4
 839+ 908E 23           16 inc hl
 840+ 908F 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9091
 842+ 9091 CD 16 8C         call Extrae_address
 843+ 9094 CD 67 9C         call Genera_coordenadas_disparo
 844+ 9097
 845+ 9097 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9098 FE 16            cp $16
 847+ 909A 38 2A            jr c,15F
 848+ 909C
 849+ 909C
 850+ 909C              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 909C
 852+ 909C D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 909D
 854+ 909D              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 909D
 856+ 909D
 857+ 909D 2A 29 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 90A0
 859+ 90A0              ; Coordenada X de Amadeus en D.
 860+ 90A0
 861+ 90A0 7D               ld a,l
 862+ 90A1 E6 1F            and $1F
 863+ 90A3 57               ld d,a
 864+ 90A4
 865+ 90A4 21 86 85         ld hl,Amadeus_db+8
 866+ 90A7 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 90A8
 868+ 90A8 21 23 89         ld hl,Coordenadas_X_Amadeus
 869+ 90AB CD 80 91         call Guarda_coordenadas_X
 870+ 90AE
 871+ 90AE D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 90AF
 873+ 90AF              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 90AF
 875+ 90AF 06 02            ld b,2
 876+ 90B1 C5           20 push bc
 877+ 90B2
 878+ 90B2 06 03            ld b,3
 879+ 90B4 21 23 89         ld hl,Coordenadas_X_Amadeus
 880+ 90B7 7E           18 ld a,(hl)
 881+ 90B8 BA               cp d
 882+ 90B9 20 04            jr nz,17F
 883+ 90BB
 884+ 90BB              ;! Colisión Amadeus !!!!!!!!!!
 885+ 90BB
 886+ 90BB C1               pop bc
 887+ 90BC E1               pop hl
 888+ 90BD 18 0D            jr 14F
 889+ 90BF
 890+ 90BF 23           17 inc hl
 891+ 90C0 10 F5            djnz 18B
 892+ 90C2
 893+ 90C2 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 90C3
 895+ 90C3 C1               pop bc
 896+ 90C4 10 EB            djnz 20B
 897+ 90C6
 898+ 90C6
 899+ 90C6              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 90C6              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 90C6
 902+ 90C6 E1           15 pop hl
 903+ 90C7 23               inc hl
 904+ 90C8 35               dec (hl)
 905+ 90C9 2B               dec hl
 906+ 90CA 18 0C            jr 10F
 907+ 90CC
 908+ 90CC              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 90CC              ; _ almacén de coordenadas_X de Amadeus.
 910+ 90CC
 911+ 90CC E5           14 push hl
 912+ 90CD CD 75 91         call Elimina_disparo_de_base_de_datos
 913+ 90D0 21 1E 89         ld hl,Impacto2
 914+ 90D3 CB CE            set 1,(hl)
 915+ 90D5 E1               pop hl
 916+ 90D6 18 06            jr 12F
 917+ 90D8
 918+ 90D8              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 90D8
 920+ 90D8 CD 1F 91     10 call Mueve_disparo
 921+ 90DB CD F6 90         call foto_disparo_a_borrar
 922+ 90DE C1           12 pop bc
 923+ 90DF
 924+ 90DF 18 04            jr 8F
 925+ 90E1
 926+ 90E1              ; ----- ----- ----- ----- ----- -----
 927+ 90E1
 928+ 90E1 ED 42        4 sbc hl,bc
 929+ 90E3 28 0A            jr z,6F
 930+ 90E5
 931+ 90E5 2A 1A 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 90E8 23               inc hl
 933+ 90E9 23               inc hl
 934+ 90EA 22 1A 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 90ED 18 8A            jr 5B
 936+ 90EF
 937+ 90EF CD 94 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 90F2 CD BC 91         call Limpia_Coordenadas_X
 939+ 90F5 C9               ret
 940+ 90F6
 941+ 90F6              ; ------------------------------------------------------------------
 942+ 90F6
 943+ 90F6              foto_disparo_a_borrar
 944+ 90F6
 945+ 90F6 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 90F7 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 90F8 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 90F9
 949+ 90F9 E5               push hl
 950+ 90FA 23               inc hl
 951+ 90FB 23               inc hl
 952+ 90FC ED 73 0A 89      ld (Stack),sp
 953+ 9100 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9101 FD E1            pop iy
 955+ 9103 DD E1            pop ix
 956+ 9105 E1               pop hl
 957+ 9106 ED 7B 0A 89      ld sp,(Stack)
 958+ 910A 3A F9 88         ld a,(Ctrl_1)
 959+ 910D CB C7            set 0,a
 960+ 910F 32 F9 88         ld (Ctrl_1),a
 961+ 9112 CD A0 7F         call Guarda_foto_registros
 962+ 9115 3A F9 88         ld a,(Ctrl_1)
 963+ 9118 CB 87            res 0,a
 964+ 911A 32 F9 88         ld (Ctrl_1),a
 965+ 911D E1               pop hl
 966+ 911E C9               ret
 967+ 911F
 968+ 911F              ;---------------------------------------------------
 969+ 911F              ;
 970+ 911F              ;   18/07/23
 971+ 911F              ;
 972+ 911F
 973+ 911F              Mueve_disparo
 974+ 911F
 975+ 911F              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 911F              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 911F              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 911F
 979+ 911F E5               push hl
 980+ 9120
 981+ 9120 7E               ld a,(hl)
 982+ 9121
 983+ 9121 06 04            ld b,4
 984+ 9123 23           1 inc hl
 985+ 9124 10 FD            djnz 1B
 986+ 9126
 987+ 9126              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9126
 989+ 9126 CD 16 8C         call Extrae_address
 990+ 9129
 991+ 9129 E6 01            and 1
 992+ 912B 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 912D
 994+ 912D              ; Disparo hacia arriba, (Amadeus).
 995+ 912D
 996+ 912D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 912D              ; _ de la dificultad.
 998+ 912D
 999+ 912D CD AD 95         call PreviousScan
1000+ 9130 CD AD 95         call PreviousScan
1001+ 9133 CD AD 95         call PreviousScan
1002+ 9136 CD AD 95         call PreviousScan
1003+ 9139
1004+ 9139              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9139
1006+ 9139 7C               ld a,h
1007+ 913A FE 40            cp $40
1008+ 913C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 913E
1010+ 913E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 913E
1012+ 913E EB               ex de,hl
1013+ 913F 06 04            ld b,4
1014+ 9141 2B           6 dec hl
1015+ 9142 10 FD            djnz 6B
1016+ 9144
1017+ 9144 CD 75 91         call Elimina_disparo_de_base_de_datos
1018+ 9147 E1               pop hl
1019+ 9148 18 10            jr 7F
1020+ 914A
1021+ 914A              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 914A              ; HL contiene el puntero de impresión del disparo.
1023+ 914A              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 914A
1025+ 914A D5           3 push de
1026+ 914B C5               push bc
1027+ 914C
1028+ 914C CD 14 8F         call Comprueba_Colision
1029+ 914F
1030+ 914F              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 914F
1032+ 914F 78               ld a,b
1033+ 9150
1034+ 9150 C1               pop bc
1035+ 9151 D1               pop de
1036+ 9152
1037+ 9152 EB               ex de,hl
1038+ 9153
1039+ 9153 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9154 23               inc hl                                      ; _ movimiento.
1041+ 9155 72               ld (hl),d
1042+ 9156
1043+ 9156 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9157
1045+ 9157 23               inc hl                                      ; _ en curso.
1046+ 9158 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9159 2B               dec hl
1048+ 915A
1049+ 915A C9           7 ret
1050+ 915B
1051+ 915B              ; Disparo hacia abajo, (Entidad).
1052+ 915B
1053+ 915B 3A 2B 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 915E 47               ld b,a
1055+ 915F
1056+ 915F CD 9E 95     4 call NextScan
1057+ 9162 10 FB            djnz 4B
1058+ 9164
1059+ 9164              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9164
1061+ 9164 7C               ld a,h
1062+ 9165 FE 58            cp $58
1063+ 9167 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9169
1065+ 9169 EB               ex de,hl
1066+ 916A 06 04            ld b,4
1067+ 916C 2B           5 dec hl
1068+ 916D 10 FD            djnz 5B
1069+ 916F
1070+ 916F CD 75 91         call Elimina_disparo_de_base_de_datos
1071+ 9172 E1               pop hl
1072+ 9173 18 E5            jr 7B
1073+ 9175
1074+ 9175              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9175
1076+ 9175 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9178 AF               xor a
1078+ 9179 77               ld (hl),a
1079+ 917A 54               ld d,h
1080+ 917B 5D               ld e,l
1081+ 917C 13               inc de
1082+ 917D ED B0            ldir
1083+ 917F C9               ret
1084+ 9180
1085+ 9180              ; -----------------------------------------------------------------
1086+ 9180              ;
1087+ 9180              ;   19/7/23
1088+ 9180              ;
1089+ 9180              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9180              ;
1091+ 9180              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9180              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9180              ;
1094+ 9180              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9180              ;
1096+ 9180              ;   INPUTS:
1097+ 9180              ;
1098+ 9180              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9180              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9180
1101+ 9180              ;   MODIFICA: A, HL, BC y DE.
1102+ 9180
1103+ 9180              Guarda_coordenadas_X
1104+ 9180
1105+ 9180 7B               ld a,e
1106+ 9181 A7               and a
1107+ 9182 20 04            jr nz,1F
1108+ 9184
1109+ 9184 06 02            ld b,2
1110+ 9186 18 02            jr 2F
1111+ 9188
1112+ 9188 06 03        1 ld b,3
1113+ 918A 72           2 ld (hl),d
1114+ 918B 23               inc hl
1115+ 918C 14               inc d
1116+ 918D 10 FB            djnz 2B
1117+ 918F
1118+ 918F C9               ret
1119+ 9190
1120+ 9190              ; -----------------------------------------------------------------
1121+ 9190              ;
1122+ 9190              ;   12/04/23
1123+ 9190              ;
1124+ 9190
1125+ 9190 3A 1E 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9193 A7               and a
1127+ 9194 C8               ret z
1128+ 9195
1129+ 9195 FE 04            cp 4
1130+ 9197 20 09            jr nz,1F
1131+ 9199
1132+ 9199
1133+ 9199              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9199
1135+ 9199 CD B5 8F         call Detecta_colision_nave_entidad
1136+ 919C
1137+ 919C 21 1E 89         ld hl,Impacto2
1138+ 919F CB 5E            bit 3,(hl)
1139+ 91A1 C0               ret nz                                               ; Existe colisión, RET.
1140+ 91A2
1141+ 91A2              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 91A2              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 91A2
1144+ 91A2 21 1E 89     1 ld hl,Impacto2
1145+ 91A5 CB 4E            bit 1,(hl)
1146+ 91A7 28 07            jr z,2F
1147+ 91A9
1148+ 91A9 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 91AC 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 91AE 18 0B            jr 3F
1151+ 91B0
1152+ 91B0 21 1E 89     2 ld hl,Impacto2
1153+ 91B3 CB 46            bit 0,(hl)
1154+ 91B5 C8               ret z
1155+ 91B6
1156+ 91B6              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 91B6
1158+ 91B6 21 F9 88         ld hl,Ctrl_1
1159+ 91B9 CB D6            set 2,(hl)
1160+ 91BB
1161+ 91BB C9           3 ret
1162+ 91BC
1163+ 91BC              ; -----------------------------------------------------------------
1164+ 91BC              ;
1165+ 91BC              ;   19/7/23
1166+ 91BC              ;
1167+ 91BC              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 91BC
1169+ 91BC AF           Limpia_Coordenadas_X xor a
1170+ 91BD 06 06            ld b,6
1171+ 91BF 21 23 89         ld hl,Coordenadas_X_Amadeus
1172+ 91C2 77           1 ld (hl),a
1173+ 91C3 23               inc hl
1174+ 91C4 10 FC            djnz 1B
1175+ 91C6 C9               ret
1176+ 91C7
1177+ 91C7              ; -----------------------------------------------------------------
1178+ 91C7              ;
1179+ 91C7              ;   25/04/23
1180+ 91C7              ;
1181+ 91C7
1182+ 91C7              Determina_resultado_comparativa
1183+ 91C7
1184+ 91C7              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 91C7              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 91C7              ;
1187+ 91C7              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 91C7              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 91C7              ;
1190+ 91C7              ;   SBC HL,DE
1191+ 91C7
1192+ 91C7              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 91C7              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 91C7
1195+ 91C7              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 91C7              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 91C7
1198+ 91C7
1199+ 91C7 3A CE 88         ld a,(Cuad_objeto)
1200+ 91CA FE 02            cp 2
1201+ 91CC 28 26            jr z,2F
1202+ 91CE 38 24            jr c,2F
1203+ 91D0
1204+ 91D0              ; Cuadrantes 3º y 4º
1205+ 91D0
1206+ 91D0 E6 01            and 1
1207+ 91D2 28 10            jr z,4F
1208+ 91D4
1209+ 91D4              ; Cuadrante 3º
1210+ 91D4
1211+ 91D4 7C               ld a,h
1212+ 91D5 06 00            ld b,0
1213+ 91D7
1214+ 91D7 CD 62 92         call Compara_cositas_H3
1215+ 91DA
1216+ 91DA 04               inc b
1217+ 91DB 05               dec b
1218+ 91DC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 91DD
1220+ 91DD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 91DE 06 00            ld b,0
1222+ 91E0
1223+ 91E0 CD 74 92         call Compara_cositas_L3
1224+ 91E3 C9               ret
1225+ 91E4
1226+ 91E4              ; Cuadrante 4º
1227+ 91E4
1228+ 91E4 7C           4 ld a,h
1229+ 91E5 06 00            ld b,0
1230+ 91E7
1231+ 91E7 CD 86 92         call Compara_cositas_H4
1232+ 91EA
1233+ 91EA 04               inc b
1234+ 91EB 05               dec b
1235+ 91EC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 91ED
1237+ 91ED 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 91EE 06 00            ld b,0
1239+ 91F0
1240+ 91F0 CD 9C 92         call Compara_cositas_L4
1241+ 91F3 C9               ret
1242+ 91F4
1243+ 91F4              ; Cuadrantes 1º y 2º.
1244+ 91F4
1245+ 91F4 28 10        2 jr z,3F
1246+ 91F6
1247+ 91F6              ; 1er Cuadrante
1248+ 91F6
1249+ 91F6 7C               ld a,h
1250+ 91F7 06 00            ld b,0
1251+ 91F9
1252+ 91F9 CD 3A 92         call Compara_cositas_H1
1253+ 91FC
1254+ 91FC 04               inc b
1255+ 91FD 05               dec b
1256+ 91FE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 91FF
1258+ 91FF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9200 06 00            ld b,0
1260+ 9202
1261+ 9202 CD 50 92         call Compara_cositas_L1
1262+ 9205 C9               ret
1263+ 9206
1264+ 9206
1265+ 9206              ; 2º Cuadrante
1266+ 9206
1267+ 9206 7C           3 ld a,h
1268+ 9207 06 00            ld b,0
1269+ 9209
1270+ 9209 CD 16 92         call Compara_cositas_H2
1271+ 920C
1272+ 920C 04               inc b
1273+ 920D 05               dec b
1274+ 920E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 920F
1276+ 920F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9210 06 00            ld b,0
1278+ 9212
1279+ 9212 CD 28 92         call Compara_cositas_L2
1280+ 9215 C9               ret
1281+ 9216
1282+ 9216 A7           Compara_cositas_H2 and a
1283+ 9217 28 0D            jr z,1F
1284+ 9219              ;    cp $fd
1285+ 9219              ;    jr z,1F
1286+ 9219              ;    cp $fe
1287+ 9219              ;    jr z,1F
1288+ 9219 FE FF            cp $ff
1289+ 921B 28 09            jr z,1F
1290+ 921D FE 01            cp $01
1291+ 921F 28 05            jr z,1F
1292+ 9221 FE 02            cp $02
1293+ 9223 28 01            jr z,1F
1294+ 9225 C0               ret nz
1295+ 9226 04           1 inc b
1296+ 9227 C9               ret
1297+ 9228
1298+ 9228 A7           Compara_cositas_L2 and a
1299+ 9229 28 0D            jr z,1F
1300+ 922B              ;    cp $fd
1301+ 922B              ;    jr z,1F
1302+ 922B FE FE            cp $fe
1303+ 922D 28 09            jr z,1F
1304+ 922F FE FF            cp $ff
1305+ 9231 28 05            jr z,1F
1306+ 9233 FE 01            cp $01
1307+ 9235 28 01            jr z,1F
1308+ 9237              ;    cp $02
1309+ 9237              ;    jr z,1F
1310+ 9237 C0               ret nz
1311+ 9238 04           1 inc b
1312+ 9239 C9               ret
1313+ 923A
1314+ 923A A7           Compara_cositas_H1 and a
1315+ 923B 28 11            jr z,1F
1316+ 923D              ;    cp $fd
1317+ 923D              ;    jr z,1F
1318+ 923D              ;    cp $fe
1319+ 923D              ;    jr z,1F
1320+ 923D FE FF            cp $ff
1321+ 923F 28 0D            jr z,1F
1322+ 9241 FE 01            cp $01
1323+ 9243 28 09            jr z,1F
1324+ 9245 FE 02            cp $02
1325+ 9247 28 05            jr z,1F
1326+ 9249 FE 03            cp $03
1327+ 924B 28 01            jr z,1F
1328+ 924D C0               ret nz
1329+ 924E 04           1 inc b
1330+ 924F C9               ret
1331+ 9250
1332+ 9250 A7           Compara_cositas_L1 and a
1333+ 9251 28 0D            jr z,1F
1334+ 9253              ;    cp $fd
1335+ 9253              ;    jr z,1F
1336+ 9253              ;    cp $fe
1337+ 9253              ;    jr z,1F
1338+ 9253              ;    cp $ff
1339+ 9253              ;    jr z,1F
1340+ 9253 FE 01            cp $01
1341+ 9255 28 09            jr z,1F
1342+ 9257 FE 02            cp $02
1343+ 9259 28 05            jr z,1F
1344+ 925B FE 03            cp $03
1345+ 925D 28 01            jr z,1F
1346+ 925F C0               ret nz
1347+ 9260 04           1 inc b
1348+ 9261 C9               ret
1349+ 9262
1350+ 9262 A7           Compara_cositas_H3 and a
1351+ 9263 28 0D            jr z,1F
1352+ 9265              ;    cp $fd
1353+ 9265              ;    jr z,1F
1354+ 9265 FE FE            cp $fe
1355+ 9267 28 09            jr z,1F
1356+ 9269 FE FF            cp $ff
1357+ 926B 28 05            jr z,1F
1358+ 926D FE 01            cp $01
1359+ 926F 28 01            jr z,1F
1360+ 9271              ;    cp $02
1361+ 9271              ;    jr z,1F
1362+ 9271              ;    cp $03
1363+ 9271              ;    jr z,1F
1364+ 9271 C0               ret nz
1365+ 9272 04           1 inc b
1366+ 9273 C9               ret
1367+ 9274
1368+ 9274 A7           Compara_cositas_L3 and a
1369+ 9275 28 0D            jr z,1F
1370+ 9277              ;    cp $fd
1371+ 9277              ;    jr z,1F
1372+ 9277              ;    cp $fe
1373+ 9277              ;    jr z,1F
1374+ 9277              ;    cp $ff
1375+ 9277              ;    jr z,1F
1376+ 9277 FE 01            cp $01
1377+ 9279 28 09            jr z,1F
1378+ 927B FE 02            cp $02
1379+ 927D 28 05            jr z,1F
1380+ 927F FE 03            cp $03
1381+ 9281 28 01            jr z,1F
1382+ 9283 C0               ret nz
1383+ 9284 04           1 inc b
1384+ 9285 C9               ret
1385+ 9286
1386+ 9286 A7           Compara_cositas_H4 and a
1387+ 9287 28 11            jr z,1F
1388+ 9289 FE FD            cp $fd
1389+ 928B 28 0D            jr z,1F
1390+ 928D FE FE            cp $fe
1391+ 928F 28 09            jr z,1F
1392+ 9291 FE FF            cp $ff
1393+ 9293 28 05            jr z,1F
1394+ 9295 FE 01            cp $01
1395+ 9297 28 01            jr z,1F
1396+ 9299              ;    cp $02
1397+ 9299              ;    jr z,1F
1398+ 9299              ;    cp $03
1399+ 9299              ;    jr z,1F
1400+ 9299 C0               ret nz
1401+ 929A 04           1 inc b
1402+ 929B C9               ret
1403+ 929C
1404+ 929C A7           Compara_cositas_L4 and a
1405+ 929D 28 0D            jr z,1F
1406+ 929F              ;    cp $fd
1407+ 929F              ;    jr z,1F
1408+ 929F FE FE            cp $fe
1409+ 92A1 28 09            jr z,1F
1410+ 92A3 FE FF            cp $ff
1411+ 92A5 28 05            jr z,1F
1412+ 92A7 FE 01            cp $01
1413+ 92A9 28 01            jr z,1F
1414+ 92AB              ;    cp $02
1415+ 92AB              ;    jr z,1F
1416+ 92AB              ;    cp $03
1417+ 92AB              ;    jr z,1F
1418+ 92AB C0               ret nz
1419+ 92AC 04           1 inc b
1420+ 92AD C9               ret
# file closed: Disparo.asm
1513  92AE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92AE              ; ******************************************************************************************************************************************************************************************
   2+ 92AE              ;
   3+ 92AE              ; 26/06/23
   4+ 92AE              ;
   5+ 92AE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92AE
   7+ 92AE CD 92 95     Draw call Prepara_draw
   8+ 92B1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92B2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92B3 28 05        	jr z,2F
  11+ 92B5
  12+ 92B5 3A CE 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92B8 18 0C        	jr 1F
  14+ 92BA
  15+ 92BA 2A CC 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 92BD 22 BC 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 92C0 CD 4F 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 92C3              ;													; _la esquina superior izquierda de la pantalla.
  19+ 92C3 CD F2 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92C6
  21+ 92C6 3A E6 88     1 ld a,(Ctrl_0)
  22+ 92C9 CB 6F        	bit 5,a
  23+ 92CB 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92CD
  25+ 92CD CD E5 92     	call Comprueba_limite_horizontal
  26+ 92D0 CD 75 93     	call Comprueba_limite_vertical
  27+ 92D3
  28+ 92D3              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92D3              ; -----------------------
  30+ 92D3              ; -----------------------
  31+ 92D3              ; -----------------------
  32+ 92D3
  33+ 92D3 CD C2 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92D6 CD F9 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92D9 CD 58 95     	call Define_rutina_de_impresion
  36+ 92DC
  37+ 92DC 3A E6 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92DF CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92E1 32 E6 88     	ld (Ctrl_0),a
  40+ 92E4
  41+ 92E4 C9           	ret
  42+ 92E5
  43+ 92E5              ; *******************************************************************************************************************************************************************************************
  44+ 92E5              ;	21/01/23
  45+ 92E5              ;
  46+ 92E5              ; 	Comprueba_limite_horizontal.
  47+ 92E5              ;
  48+ 92E5              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 92E5              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 92E5              ;
  51+ 92E5              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 92E5              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 92E5              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 92E5              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 92E5
  56+ 92E5
  57+ 92E5
  58+ 92E5 3A E6 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 92E8 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 92EA 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 92EC E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 92EE 32 E6 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 92F1 18 09            jr 6F
  64+ 92F3 CB 5F        1 bit 3,a
  65+ 92F5 28 0A            jr z,2F
  66+ 92F7 E6 F7            and $f7
  67+ 92F9 32 E6 88         ld (Ctrl_0),a
  68+ 92FC CD 4F 94     6 call Inicializacion
  69+ 92FF 18 5B            jr 5F
  70+ 9301 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9302
  72+ 9302              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9302              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9302
  75+ 9302 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9303 2A F4 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9306 CD B1 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9309 67           	ld h,a
  79+ 930A EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 930B CD B1 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 930E 67           	ld h,a
  82+ 930F A7           	and a
  83+ 9310 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9312 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9313 3A CE 88     	ld a,(Cuad_objeto)
  86+ 9316 FE 02        	cp 2
  87+ 9318 38 1E        	jr c,3F
  88+ 931A 28 1C        	jr z,3F
  89+ 931C 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 931D 28 23            jr z,7F
  91+ 931F 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9321 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9323 E1           	pop hl
  94+ 9324
  95+ 9324              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9324              ; _para indicar con E="2" en caso necesario.
  97+ 9324
  98+ 9324 E5               push hl
  99+ 9325 C5               push bc
 100+ 9326 CD B1 98     	call calcula_tercio
 101+ 9329 FE 01        	cp 1
 102+ 932B 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 932D CD 5D 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9330 28 26            jr z,9F
 105+ 9332 38 24            jr c,9F
 106+ 9334 1E 00        11 ld e,0
 107+ 9336 18 22            jr 8F
 108+ 9338 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9339 28 07        	jr z, 7F
 110+ 933B 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 933D 1E 00         	ld e,0
 112+ 933F E1           	pop hl
 113+ 9340 18 04        	jr 4F
 114+ 9342 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9344 18 15            jr 10F
 116+ 9346
 117+ 9346              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9346              ; _para indicar con E="2" en caso necesario.
 119+ 9346
 120+ 9346 E5           4 push hl
 121+ 9347 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9348 CD B1 98     	call calcula_tercio
 123+ 934B FE 01        	cp 1
 124+ 934D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 934F CD 5D 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9352 28 04            jr z,9F
 127+ 9354 30 02            jr nc,9F
 128+ 9356 18 02        	jr 8F
 129+ 9358 1E 02        9 ld e,2
 130+ 935A C1           8 pop bc
 131+ 935B E1           10 pop hl
 132+ 935C C9           5 ret
 133+ 935D
 134+ 935D              ; --------------------
 135+ 935D              ;
 136+ 935D              ; 25/08/22
 137+ 935D
 138+ 935D CD B1 98     Comprueba_centro call calcula_tercio
 139+ 9360 67               ld h,a
 140+ 9361 08           	ex af,af
 141+ 9362 FE 02        	cp 2
 142+ 9364 38 07        	jr c,1F
 143+ 9366 28 05        	jr z,1F
 144+ 9368 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 936B 18 03        	jr 2F
 146+ 936D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9370 08           2 ex af,af
 148+ 9371 A7               and a
 149+ 9372 ED 42            sbc hl,bc
 150+ 9374 C9               ret
 151+ 9375
 152+ 9375              ; *********************************************************************************************************************************************************************************************
 153+ 9375              ;
 154+ 9375              ;   16/8/22
 155+ 9375              ;
 156+ 9375              ;	Comprueba_limite_vertical
 157+ 9375              ;
 158+ 9375              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9375              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9375              ;
 161+ 9375
 162+ 9375 2A BC 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9378 7D           	ld a,l
 164+ 9379 E6 1F        	and $1F
 165+ 937B 57           	ld d,a
 166+ 937C 3A F6 88     	ld a,(Limite_vertical)
 167+ 937F BA           	cp d 											; Límite - Posición.
 168+ 9380 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9381 3A CE 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9384 CB 47        	bit 0,a
 171+ 9386 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9388
 173+ 9388              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9388
 175+ 9388 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9389 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 938B
 178+ 938B              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 938B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 938B
 181+ 938B 3A C0 88         ld a,(Coordenada_X)
 182+ 938E 16 0F            ld d,Centro_izquierda
 183+ 9390 A7               and a
 184+ 9391 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9392 28 1E            jr z,3F
 186+ 9394 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9396              ;                                                    ; _salimos sin modificar nada.
 188+ 9396 18 0E            jr 2F
 189+ 9398 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9399 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 939B
 192+ 939B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 939B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 939B
 195+ 939B 3A C0 88         ld a,(Coordenada_X)
 196+ 939E 16 10            ld d,Centro_derecha
 197+ 93A0 A7               and a
 198+ 93A1 92               sub d
 199+ 93A2 28 0E            jr z,3F
 200+ 93A4 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 93A6              ;                                                    ; _salimos sin modificar nada.
 202+ 93A6 CB 43        2 bit 0,e
 203+ 93A8 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 93AA C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 93AB CD 3F 94         call Modificaccionne
 206+ 93AE C1           	pop bc
 207+ 93AF CD 4F 94         call Inicializacion
 208+ 93B2 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 93B3
 210+ 93B3              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 93B3
 212+ 93B3 C5           4 push bc
 213+ 93B4 01 BB 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 93B7 0A           	ld a,(bc)
 215+ 93B8 3D           	dec a
 216+ 93B9 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 93BA 7D           	ld a,l
 218+ 93BB 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 93BC CB 47        	bit 0,a
 220+ 93BE 28 03        	jr z,5F
 221+ 93C0 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 93C1 18 2E        	jr 7F
 223+ 93C3
 224+ 93C3              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 93C3
 226+ 93C3 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93C4 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93C5 3A E6 88     	ld a,(Ctrl_0)
 229+ 93C8 CB 4F        	bit 1,a
 230+ 93CA 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93CC F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93CD
 233+ 93CD              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93CD
 235+ 93CD 1C               inc e
 236+ 93CE 1D               dec e
 237+ 93CF 20 07            jr nz,12F
 238+ 93D1 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93D2 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93D3 22 BC 88     	ld (Posicion_actual),hl
 241+ 93D6 18 44        13 jr 9F
 242+ 93D8 CB 43        12 bit 0,e
 243+ 93DA 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93DC              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93DC C1           	pop bc
 246+ 93DD 18 D3        	jr 3B
 247+ 93DF 80           14 add b
 248+ 93E0 6F               ld l,a
 249+ 93E1 22 BC 88     	ld (Posicion_actual),hl
 250+ 93E4 CD 3F 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 93E7 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 93E9 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 93EB 32 E6 88         ld (Ctrl_0),a
 254+ 93EE F1           	pop af
 255+ 93EF 18 2B        	jr 9F
 256+ 93F1
 257+ 93F1              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 93F1
 259+ 93F1 F5           7 push af
 260+ 93F2 3A E6 88     	ld a,(Ctrl_0)
 261+ 93F5 CB 47        	bit 0,a
 262+ 93F7 20 1D        	jr nz,8F
 263+ 93F9 F1           	pop af
 264+ 93FA
 265+ 93FA              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93FA
 267+ 93FA 1C           	inc e
 268+ 93FB 1D               dec e
 269+ 93FC 20 07            jr nz,10F
 270+ 93FE 90           	sub b
 271+ 93FF 6F               ld l,a
 272+ 9400 22 BC 88     	ld (Posicion_actual),hl
 273+ 9403 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9405              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9405 CB 43        10 bit 0,e
 276+ 9407 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9409              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9409 C1           	pop bc
 279+ 940A 18 A6        	jr 3B
 280+ 940C 90           16 sub b
 281+ 940D 6F               ld l,a
 282+ 940E 22 BC 88     	ld (Posicion_actual),hl
 283+ 9411 CD 3F 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9414 18 06            jr 9F
 285+ 9416 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9418 32 E6 88         ld (Ctrl_0),a
 287+ 941B F1           	pop af
 288+ 941C C1           9 pop bc
 289+ 941D 1E 00        	ld e,0
 290+ 941F CD 4F 94         call Inicializacion
 291+ 9422 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9423 08           	ex af,af
 293+ 9424 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9425 18 8B            jr 3B
 295+ 9427
 296+ 9427              ; --------------------
 297+ 9427
 298+ 9427 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9429 CD AD 95     1 call PreviousScan
 300+ 942C 10 FB            djnz 1B
 301+ 942E 22 BC 88     	ld (Posicion_actual),hl
 302+ 9431 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9432 C9           	ret
 304+ 9433
 305+ 9433              ; --------------------
 306+ 9433
 307+ 9433 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9435 CD 9E 95     1 call NextScan
 309+ 9438 10 FB            djnz 1B
 310+ 943A 22 BC 88     	ld (Posicion_actual),hl
 311+ 943D AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 943E C9           	ret
 313+ 943F
 314+ 943F              ; --------------------
 315+ 943F              ;
 316+ 943F              ;	22/01/23
 317+ 943F              ;
 318+ 943F              ;	E="1". Hemos cambiado de cuadrante.
 319+ 943F              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 943F              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 943F
 322+ 943F
 323+ 943F              Modificaccionne
 324+ 943F
 325+ 943F 3A CE 88     	ld a,(Cuad_objeto)
 326+ 9442 FE 02        	cp 2
 327+ 9444 CC 27 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9447 DC 27 94         call c,Modifica_Pos_actual
 329+ 944A C8           	ret z
 330+ 944B CD 33 94         call Modifica_Pos_actual2
 331+ 944E C9               ret
 332+ 944F
 333+ 944F              ; *************************************************************************************************************************************************************************************************
 334+ 944F              ;
 335+ 944F              ;	13/8/22
 336+ 944F              ;
 337+ 944F              ;	Inicializacion
 338+ 944F              ;
 339+ 944F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 944F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 944F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 944F              ;
 343+ 944F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 944F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 944F              ;	_ desaparece/aparece.
 346+ 944F
 347+ 944F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 944F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 944F              ;
 350+ 944F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 944F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 944F              ; 		   [E] ="0"
 353+ 944F
 354+ 944F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 944F
 356+ 944F CD B1 98     Inicializacion call calcula_tercio
 357+ 9452 28 36        	jr z,primit
 358+ 9454 E6 02        	and 2
 359+ 9456 20 07        	jr nz,segmit
 360+ 9458 7D           	ld a,l
 361+ 9459 FE 7F        	cp $7f
 362+ 945B 38 2D        	jr c,primit
 363+ 945D 28 2B        	jr z,primit
 364+ 945F CD BC 94     segmit call column
 365+ 9462 38 13        	jr c,tercuad
 366+ 9464 3E 04        cuarcuad ld a,4
 367+ 9466 32 CE 88     	ld (Cuad_objeto),a
 368+ 9469 21 20 48     	ld hl,$4820
 369+ 946C 22 F4 88     	ld (Limite_horizontal),hl
 370+ 946F 21 F6 88     	ld hl,Limite_vertical
 371+ 9472 36 0D        	ld (hl),$0d
 372+ 9474 08           	ex af,af
 373+ 9475 18 3C        	jr 1F
 374+ 9477              tercuad
 375+ 9477 3E 03        	ld a,3
 376+ 9479 32 CE 88     	ld (Cuad_objeto),a
 377+ 947C 21 20 48     	ld hl,$4820
 378+ 947F 22 F4 88     	ld (Limite_horizontal),hl
 379+ 9482 21 F6 88     	ld hl,Limite_vertical
 380+ 9485 36 12        	ld (hl),$12
 381+ 9487 08           	ex af,af
 382+ 9488 18 29        	jr 1F
 383+ 948A CD BC 94     primit call column
 384+ 948D 38 13        	jr c, primcuad
 385+ 948F              segcuad
 386+ 948F 3E 02        	ld a,2
 387+ 9491 32 CE 88     	ld (Cuad_objeto),a
 388+ 9494 21 C0 4F     	ld hl,$4fc0
 389+ 9497 22 F4 88     	ld (Limite_horizontal),hl
 390+ 949A 21 F6 88     	ld hl,Limite_vertical
 391+ 949D 36 0D        	ld (hl),$0d
 392+ 949F 08           	ex af,af
 393+ 94A0 18 11        	jr 1F
 394+ 94A2              primcuad
 395+ 94A2 3E 01        	ld a,1
 396+ 94A4 32 CE 88     	ld (Cuad_objeto),a
 397+ 94A7 21 C0 4F     	ld hl,$4fc0
 398+ 94AA 22 F4 88     	ld (Limite_horizontal),hl
 399+ 94AD 21 F6 88     	ld hl,Limite_vertical
 400+ 94B0 36 12        	ld (hl),$12
 401+ 94B2 08           	ex af,af
 402+ 94B3 CD 3C 9C     1 call Genera_coordenadas
 403+ 94B6 21 E6 88     	ld hl,Ctrl_0
 404+ 94B9 CB EE        	set 5,(hl)
 405+ 94BB C9           	ret
 406+ 94BC
 407+ 94BC              ; ------------------------------------------------------------------------------------------------------------------
 408+ 94BC
 409+ 94BC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 94BC              ;
 411+ 94BC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 94BC
 413+ 94BC 7D           column ld a,l
 414+ 94BD E6 1F        	and $1f
 415+ 94BF FE 10         	cp $10
 416+ 94C1 C9            	ret
 417+ 94C2
 418+ 94C2              ; --------------------------------------------------------------------------------------------------------------------
 419+ 94C2              ;
 420+ 94C2              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 94C2              ;
 422+ 94C2              ; 14/12/22
 423+ 94C2              ;
 424+ 94C2              ;	Modifica: A y BC.
 425+ 94C2
 426+ 94C2 3A CE 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94C5 E6 01        	and 1
 428+ 94C7 28 17        	jr z,1F
 429+ 94C9
 430+ 94C9              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94C9
 432+ 94C9 3A C0 88     	ld a,(Coordenada_X)
 433+ 94CC 47           	ld b,a
 434+ 94CD 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94CE 79           	ld a,c
 436+ 94CF 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94D0 38 08        	jr c,2F
 438+ 94D2 47           	ld b,a
 439+ 94D3 79           	ld a,c
 440+ 94D4 90           	sub b
 441+ 94D5 32 F3 88     	ld (Columnas),a
 442+ 94D8 18 1B        	jr 4F
 443+ 94DA 79           2 ld a,c
 444+ 94DB 32 F3 88     	ld (Columnas),a
 445+ 94DE 18 15        	jr 4F
 446+ 94E0
 447+ 94E0              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94E0
 449+ 94E0 3A C0 88     1 ld a,(Coordenada_X)
 450+ 94E3 81           	add c
 451+ 94E4 3D           	dec a
 452+ 94E5 D6 1F        	sub $1f
 453+ 94E7 38 08        	jr c,3F
 454+ 94E9 47           	ld b,a
 455+ 94EA 79           	ld a,c
 456+ 94EB 90           	sub b
 457+ 94EC 32 F3 88     	ld (Columnas),a
 458+ 94EF 18 04        	jr 4F
 459+ 94F1 79           3 ld a,c
 460+ 94F2 32 F3 88     	ld (Columnas),a
 461+ 94F5 D9           4 exx
 462+ 94F6 4F           	ld c,a
 463+ 94F7 D9           	exx
 464+ 94F8 C9            ret
 465+ 94F9
 466+ 94F9              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94F9              ;
 468+ 94F9              ;   19/7/23
 469+ 94F9              ;
 470+ 94F9              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94F9              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94F9              ;
 473+ 94F9              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94F9              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94F9              ;
 476+ 94F9              ;	DESTRUYE: HL,B Y A.
 477+ 94F9
 478+ 94F9 3A CE 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94FC FE 02        	cp 2
 480+ 94FE 38 18        	jr c,1F
 481+ 9500 28 16        	jr z,1F
 482+ 9502 E6 01        	and 1
 483+ 9504 28 0D        	jr z,3F
 484+ 9506
 485+ 9506              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9506
 487+ 9506 CD 4C 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9509
 489+ 9509 7D           9 ld a,l
 490+ 950A E6 1F        	and $1f
 491+ 950C 28 2A        	jr z,7F
 492+ 950E 2B           	dec hl
 493+ 950F 10 F8        	djnz 9B
 494+ 9511 18 25        	jr 7F
 495+ 9513
 496+ 9513              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9513
 498+ 9513 2A BC 88     3 ld hl,(Posicion_actual)
 499+ 9516 18 20        	jr 7F
 500+ 9518
 501+ 9518 28 14        1 jr z,2F
 502+ 951A
 503+ 951A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 951A
 505+ 951A CD 4C 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 951D
 507+ 951D 7D           4 ld a,l
 508+ 951E E6 1F        	and $1f
 509+ 9520 28 03        	jr z,6F
 510+ 9522 2B           	dec hl
 511+ 9523 10 F8        	djnz 4B
 512+ 9525 06 0F        6 ld b,15
 513+ 9527 CD AD 95     5 call PreviousScan
 514+ 952A 10 FB        	djnz 5B
 515+ 952C 18 0A        	jr 7F
 516+ 952E
 517+ 952E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 952E
 519+ 952E CD 4C 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9531 06 0F        	ld b,15
 521+ 9533 CD AD 95     8 call PreviousScan
 522+ 9536 10 FB        	djnz 8B
 523+ 9538
 524+ 9538 E5           7 push hl
 525+ 9539 DD E1        	pop ix
 526+ 953B
 527+ 953B 2A BE 88     	ld hl,(Puntero_objeto)
 528+ 953E E5           	push hl
 529+ 953F FD E1        	pop iy
 530+ 9541
 531+ 9541              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9541
 533+ 9541 3A E6 88     	ld a,(Ctrl_0)
 534+ 9544 CB 77        	bit 6,a
 535+ 9546 C8           	ret z
 536+ 9547
 537+ 9547              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9547              ; _ entidad / Amadeus´.
 539+ 9547
 540+ 9547 DD 22 29 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 954B
 542+ 954B C9           	ret
 543+ 954C
 544+ 954C              ; --------------------------------------------------------------------------------------------------------------------
 545+ 954C              ;
 546+ 954C              ;	2/1/23
 547+ 954C              ;
 548+ 954C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 954C              ;
 550+ 954C              ;	Tras esta rutina tenemos:
 551+ 954C              ;
 552+ 954C              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 954C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 954C              ;
 555+ 954C              ;	DESTRUYE!!!!! HL,B y A.
 556+ 954C
 557+ 954C 2A BC 88     Operandos ld hl,(Posicion_actual)
 558+ 954F 3A F3 88     	ld a,(Columnas)
 559+ 9552 3D           	dec a
 560+ 9553 20 01        	jr nz,1F
 561+ 9555 3C           	inc a
 562+ 9556 47           1 ld b,a
 563+ 9557 C9           	ret
 564+ 9558
 565+ 9558              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9558              ;
 567+ 9558              ;	3/1/23
 568+ 9558              ;
 569+ 9558              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9558              ;
 571+ 9558              ;	Destruye: A,B,HL y DE.
 572+ 9558
 573+ 9558              Define_rutina_de_impresion
 574+ 9558
 575+ 9558 3A BB 88     	ld a,(Columns)
 576+ 955B 47           	ld b,a
 577+ 955C 3A F3 88     	ld a,(Columnas)
 578+ 955F B8           	cp b
 579+ 9560 20 0D        	jr nz,2f
 580+ 9562
 581+ 9562              ;	La entidad se imprime entera.
 582+ 9562
 583+ 9562 21 81 96     	ld hl, Indice_entidades_completas
 584+ 9565 E6 01        	and 1
 585+ 9567 28 02        	jr z,1F
 586+ 9569
 587+ 9569 23           	inc hl
 588+ 956A 23           	inc hl
 589+ 956B
 590+ 956B CD 16 8C     1 call Extrae_address
 591+ 956E C9           	ret		;	ret
 592+ 956F
 593+ 956F              ;	La entidad no se imprime entera en pantalla.
 594+ 956F
 595+ 956F 3A CE 88     2 ld a,(Cuad_objeto)
 596+ 9572 E6 01        	and 1
 597+ 9574 28 17        	jr z,3F
 598+ 9576
 599+ 9576              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9576
 601+ 9576 21 85 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9579 3A BB 88     4 ld a,(Columns)
 603+ 957C E6 01        	and 1
 604+ 957E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9580
 606+ 9580 23           	inc hl
 607+ 9581 23           	inc hl
 608+ 9582
 609+ 9582 3A F3 88     	ld a,(Columnas)
 610+ 9585 E6 01        	and 1
 611+ 9587 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9589
 613+ 9589 23           	inc hl
 614+ 958A 23           	inc hl
 615+ 958B
 616+ 958B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 958D
 618+ 958D 21 8B 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9590 18 E7        	jr 4B
 620+ 9592
 621+ 9592              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9592              ;
 623+ 9592              ;	Prepara_draw
 624+ 9592              ;
 625+ 9592              ;	Es una rutina de carga.
 626+ 9592              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9592              ;
 628+ 9592              ;	FUNCIONAMIENTO:
 629+ 9592              ;
 630+ 9592              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9592              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9592              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9592              ;
 634+ 9592              ;	DESTRUYE:
 635+ 9592              ;
 636+ 9592              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9592
 638+ 9592 21 BA 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9595 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9596 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9597 4E           	ld c,(hl)
 642+ 9598 2A BC 88     	ld hl,(Posicion_actual)
 643+ 959B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 959D C9           	ret
 645+ 959E
 646+ 959E              ;----------------------------------------------------------------------------------------------------------------
 647+ 959E              ;
 648+ 959E              ;	5/08/22
 649+ 959E              ;
 650+ 959E              ;   NextScan.
 651+ 959E              ;
 652+ 959E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 959E              ;
 654+ 959E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 959E              ;
 656+ 959E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 959E              ;
 658+ 959E              ;       DESTRUIDOS: AF y HL !!!
 659+ 959E              ;
 660+ 959E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 959E              ;
 662+ 959E
 663+ 959E 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 959F 7C               ld a,h
 665+ 95A0 E6 07            and 7
 666+ 95A2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 95A3
 668+ 95A3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 95A4 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 95A6 6F               ld l,a
 671+ 95A7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 95A8
 673+ 95A8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 95A9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 95AB 67               ld h,a
 676+ 95AC C9               ret
 677+ 95AD
 678+ 95AD              ;----------------------------------------------------------------------------------------------------------------
 679+ 95AD              ;
 680+ 95AD              ;	5/08/22
 681+ 95AD              ;
 682+ 95AD              ;   PreviousScan.
 683+ 95AD              ;
 684+ 95AD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 95AD              ;
 686+ 95AD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 95AD              ;
 688+ 95AD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 95AD              ;
 690+ 95AD              ;       DESTRUIDOS: AF y HL !!!
 691+ 95AD              ;
 692+ 95AD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 95AD              ;
 694+ 95AD
 695+ 95AD 7C           PreviousScan ld a,h
 696+ 95AE 25               dec h               ; Dec H.
 697+ 95AF E6 07            and 7
 698+ 95B1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 95B2
 700+ 95B2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 95B3 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 95B5 6F               ld l,a
 703+ 95B6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 95B7
 705+ 95B7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 95B8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 95BA 67               ld h,a
 708+ 95BB C9               ret
 709+ 95BC
 710+ 95BC              ; -----------------------------------------------------------------------------------
 711+ 95BC              ;
 712+ 95BC              ;	31/7/23
 713+ 95BC              ;
 714+ 95BC              ;	Rutina principal de pintado de entidades.
 715+ 95BC              ;	Extrae la foto del frame, (entidades).
 716+ 95BC
 717+ 95BC              Extrae_foto_entidades
 718+ 95BC
 719+ 95BC 21 01 70     	ld hl,Album_de_fotos+1
 720+ 95BF 7E           	ld a,(hl)
 721+ 95C0 A7           	and a
 722+ 95C1 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 95C2
 724+ 95C2              ;	No hay datos, (entidades para pintar en este frame).
 725+ 95C2
 726+ 95C2 3A 05 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95C5 A7           	and a
 728+ 95C6 C8           	ret z
 729+ 95C7
 730+ 95C7              ; -----------------------------------
 731+ 95C7
 732+ 95C7 ED 73 0A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95CB 31 00 70     	ld sp,Album_de_fotos
 734+ 95CE
 735+ 95CE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95D0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95D1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95D2
 739+ 95D2 ED 73 0C 89  	ld (Stack_2),sp
 740+ 95D6 ED 7B 0A 89  	ld sp,(Stack)
 741+ 95DA
 742+ 95DA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95DA
 744+ 95DA 3E CD        	ld a,$cd
 745+ 95DC 32 E4 95     	ld (Imprime),a
 746+ 95DF EB           	ex de,hl
 747+ 95E0 22 E5 95     	ld (Imprime+1),hl
 748+ 95E3 EB           	ex de,hl
 749+ 95E4
 750+ 95E4              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 95E4
 752+ 95E4 00 00 00     Imprime db 0,0,0
 753+ 95E7
 754+ 95E7 ED 73 0A 89  	ld (Stack),sp
 755+ 95EB
 756+ 95EB 3A 05 89     	ld a,(Numero_de_malotes)
 757+ 95EE 3D           	dec a
 758+ 95EF 28 09        	jr z,1F
 759+ 95F1 32 05 89      	ld (Numero_de_malotes),a
 760+ 95F4
 761+ 95F4 ED 7B 0C 89  	ld sp,(Stack_2)
 762+ 95F8 18 D4        	jr 2B
 763+ 95FA
 764+ 95FA AF           1 xor a
 765+ 95FB 32 0C 89     	ld (Stack_2),a
 766+ 95FE
 767+ 95FE C9           	ret
 768+ 95FF
 769+ 95FF              ; -----------------------------------------------------------------------------------
 770+ 95FF              ;
 771+ 95FF              ;	28/2/23
 772+ 95FF              ;
 773+ 95FF              ;	Pinta los disparos generados.
 774+ 95FF
 775+ 95FF              Extrae_foto_disparos
 776+ 95FF
 777+ 95FF 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 9602 7E               ld a,(hl)
 779+ 9603 A7               and a
 780+ 9604 C8               ret z
 781+ 9605
 782+ 9605 3A 19 89     	ld a,(Numero_de_disparotes)
 783+ 9608 A7           	and a
 784+ 9609 C8           	ret z
 785+ 960A ED 73 0A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 960E 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 9611
 788+ 9611 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9613 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9614 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9615
 792+ 9615 ED 73 0C 89  	ld (Stack_2),sp
 793+ 9619 ED 7B 0A 89  	ld sp,(Stack)
 794+ 961D
 795+ 961D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 961D
 797+ 961D 3E CD        	ld a,$cd
 798+ 961F 32 27 96     	ld (Imprime2),a
 799+ 9622 EB           	ex de,hl
 800+ 9623 22 28 96     	ld (Imprime2+1),hl
 801+ 9626 EB           	ex de,hl
 802+ 9627
 803+ 9627              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9627
 805+ 9627 00 00 00     Imprime2 db 0,0,0
 806+ 962A
 807+ 962A 3A 19 89     	ld a,(Numero_de_disparotes)
 808+ 962D 3D           	dec a
 809+ 962E 28 09        	jr z,1F
 810+ 9630 32 19 89      	ld (Numero_de_disparotes),a
 811+ 9633
 812+ 9633 ED 7B 0C 89  	ld sp,(Stack_2)
 813+ 9637 18 D8        	jr 2B
 814+ 9639
 815+ 9639 AF           1 xor a
 816+ 963A 32 0C 89     	ld (Stack_2),a
 817+ 963D C9           	ret
 818+ 963E
 819+ 963E              ; -----------------------------------------------------------------------------------
 820+ 963E              ;
 821+ 963E              ;	4/9/23
 822+ 963E              ;
 823+ 963E              ;	Rutina principal de pintado de Amadeus.
 824+ 963E              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 963E
 826+ 963E 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 9641 7E           	ld a,(hl)
 828+ 9642 A7           	and a
 829+ 9643 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9644
 831+ 9644 3A 05 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9647 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9648 C8           	ret z
 834+ 9649
 835+ 9649              ; -----------------------------------
 836+ 9649
 837+ 9649 ED 73 0A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 964D 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 9650
 840+ 9650 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9652 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9653 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9654
 844+ 9654 ED 73 0C 89  	ld (Stack_2),sp
 845+ 9658 ED 7B 0A 89  	ld sp,(Stack)
 846+ 965C
 847+ 965C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 965C
 849+ 965C 3E CD        	ld a,$cd
 850+ 965E 32 66 96     	ld (Imprime_Amadeus),a
 851+ 9661 EB           	ex de,hl
 852+ 9662 22 67 96     	ld (Imprime_Amadeus+1),hl
 853+ 9665 EB           	ex de,hl
 854+ 9666
 855+ 9666              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9666
 857+ 9666 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9669
 859+ 9669 ED 73 0A 89  	ld (Stack),sp
 860+ 966D
 861+ 966D 3A 05 89     	ld a,(Numero_de_malotes)
 862+ 9670 3D           	dec a
 863+ 9671 28 09        	jr z,1F
 864+ 9673 32 05 89      	ld (Numero_de_malotes),a
 865+ 9676
 866+ 9676 ED 7B 0C 89  	ld sp,(Stack_2)
 867+ 967A 18 D4        	jr 2B
 868+ 967C
 869+ 967C AF           1 xor a
 870+ 967D 32 0C 89     	ld (Stack_2),a
 871+ 9680
 872+ 9680 C9           	ret
# file closed: Draw_XOR.asm
1514  9681              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9681              ;   índices de Rutinas de impresión.
   2+ 9681
   3+ 9681 91 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9683 BE 96            defw Pinta_Amadeus_3x2
   5+ 9685
   6+ 9685 14 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9687 B4 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9689 68 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 968B
  10+ 968B 3E 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 968D 42 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 968F F6 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9691
  14+ 9691
  15+ 9691              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9691              ;
  17+ 9691              ;   12/12/22
  18+ 9691              ;
  19+ 9691              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9691              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9691              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9691              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9691              ;
  24+ 9691              ;   Modifica: DE y HL.
  25+ 9691
  26+ 9691 ED 73 0A 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9695 FD F9        	ld sp,iy
  28+ 9697 06 10            ld b,16
  29+ 9699 D1           1 pop de
  30+ 969A 7B               ld a,e
  31+ 969B AE               xor (hl)
  32+ 969C 77           	ld (hl),a
  33+ 969D 23           	inc hl
  34+ 969E 7A               ld a,d
  35+ 969F AE               xor (hl)
  36+ 96A0 77           	ld (hl),a
  37+ 96A1 2B           	dec hl
  38+ 96A2 24           	inc h
  39+ 96A3 7C               ld a,h
  40+ 96A4 E6 07            and 7
  41+ 96A6 20 0A            jr nz,2F
  42+ 96A8 7D               ld a,l
  43+ 96A9 C6 20            add a,$20
  44+ 96AB 6F               ld l,a
  45+ 96AC 38 04            jr c,2F
  46+ 96AE 7C               ld a,h
  47+ 96AF D6 08            sub 8
  48+ 96B1 67               ld h,a
  49+ 96B2 7C           2 ld a,h
  50+ 96B3 FE 58            cp $58
  51+ 96B5 28 02            jr z,3F
  52+ 96B7 10 E0            djnz 1B
  53+ 96B9 ED 7B 0A 89  3 ld sp,(Stack)
  54+ 96BD C9           	ret
  55+ 96BE
  56+ 96BE ED 73 0A 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96C2 FD F9        	ld sp,iy
  58+ 96C4 06 08            ld b,8
  59+ 96C6 D1           1 pop de
  60+ 96C7 7B               ld a,e
  61+ 96C8 AE               xor (hl)
  62+ 96C9 77           	ld (hl),a
  63+ 96CA 23           	inc hl
  64+ 96CB 7A               ld a,d
  65+ 96CC AE               xor (hl)
  66+ 96CD 77           	ld (hl),a
  67+ 96CE 23           	inc hl
  68+ 96CF D1           	pop de
  69+ 96D0 7B               ld a,e
  70+ 96D1 AE               xor (hl)
  71+ 96D2 77           	ld (hl),a
  72+ 96D3 2B           	dec hl
  73+ 96D4 2B           	dec hl
  74+ 96D5 24           	inc h
  75+ 96D6 7C               ld a,h
  76+ 96D7 E6 07            and 7
  77+ 96D9 20 0A            jr nz,2F
  78+ 96DB 7D               ld a,l
  79+ 96DC C6 20            add a,$20
  80+ 96DE 6F               ld l,a
  81+ 96DF 38 04            jr c,2F
  82+ 96E1 7C               ld a,h
  83+ 96E2 D6 08            sub 8
  84+ 96E4 67               ld h,a
  85+ 96E5 7C           2 ld a,h
  86+ 96E6 FE 58            cp $58
  87+ 96E8 28 25            jr z,4F
  88+ 96EA 7A               ld a,d
  89+ 96EB AE               xor (hl)
  90+ 96EC 77               ld (hl),a
  91+ 96ED D1           	pop de
  92+ 96EE 23           	inc hl
  93+ 96EF 7B               ld a,e
  94+ 96F0 AE               xor (hl)
  95+ 96F1 77           	ld (hl),a
  96+ 96F2 23           	inc hl
  97+ 96F3 7A               ld a,d
  98+ 96F4 AE               xor (hl)
  99+ 96F5 77           	ld (hl),a
 100+ 96F6 2B           	dec hl
 101+ 96F7 2B           	dec hl
 102+ 96F8 24           	inc h
 103+ 96F9 7C               ld a,h
 104+ 96FA E6 07            and 7
 105+ 96FC 20 0A            jr nz,3F
 106+ 96FE 7D               ld a,l
 107+ 96FF C6 20            add a,$20
 108+ 9701 6F               ld l,a
 109+ 9702 38 04            jr c,3F
 110+ 9704 7C               ld a,h
 111+ 9705 D6 08            sub 8
 112+ 9707 67               ld h,a
 113+ 9708 7C           3 ld a,h
 114+ 9709 FE 58            cp $58
 115+ 970B 28 02            jr z,4F
 116+ 970D 10 B7            djnz 1B
 117+ 970F ED 7B 0A 89  4 ld sp,(Stack)
 118+ 9713 C9           	ret
 119+ 9714
 120+ 9714              ; ---------------------------------------------------
 121+ 9714
 122+ 9714 ED 73 0A 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9718 FD F9        	ld sp,iy
 124+ 971A
 125+ 971A              ; >>>
 126+ 971A
 127+ 971A 06 10            ld b,16
 128+ 971C D1           1 pop de
 129+ 971D 7A           	ld a,d
 130+ 971E AE           	xor (hl)
 131+ 971F 77           	ld (hl),a
 132+ 9720 24           	inc h
 133+ 9721 7C               ld a,h
 134+ 9722 E6 07            and 7
 135+ 9724 20 0C            jr nz,2F
 136+ 9726 7D               ld a,l
 137+ 9727 C6 20            add a,$20
 138+ 9729 6F               ld l,a
 139+ 972A 38 06            jr c,2F
 140+ 972C 7C               ld a,h
 141+ 972D D6 08            sub 8
 142+ 972F 67               ld h,a
 143+ 9730 18 00            jr 2F
 144+ 9732 7C           2 ld a,h
 145+ 9733 FE 58            cp $58
 146+ 9735 28 02            jr z,3F
 147+ 9737 10 E3            djnz 1B
 148+ 9739 ED 7B 0A 89  3 ld sp,(Stack)
 149+ 973D C9           	ret
 150+ 973E
 151+ 973E ED 73 0A 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9742 FD F9        	ld sp,iy
 153+ 9744
 154+ 9744              ; >>>
 155+ 9744
 156+ 9744 06 10            ld b,16
 157+ 9746 D1           1 pop de
 158+ 9747 7B           	ld a,e
 159+ 9748 AE           	xor (hl)
 160+ 9749 77           	ld (hl),a
 161+ 974A 24           	inc h
 162+ 974B 7C               ld a,h
 163+ 974C E6 07            and 7
 164+ 974E 20 0C            jr nz,2F
 165+ 9750 7D               ld a,l
 166+ 9751 C6 20            add a,$20
 167+ 9753 6F               ld l,a
 168+ 9754 38 06            jr c,2F
 169+ 9756 7C               ld a,h
 170+ 9757 D6 08            sub 8
 171+ 9759 67               ld h,a
 172+ 975A 18 00            jr 2F
 173+ 975C 7C           2 ld a,h
 174+ 975D FE 58            cp $58
 175+ 975F 28 02            jr z,3F
 176+ 9761 10 E3            djnz 1B
 177+ 9763 ED 7B 0A 89  3 ld sp,(Stack)
 178+ 9767 C9           	ret
 179+ 9768
 180+ 9768              ; ---------------------------------------------------
 181+ 9768
 182+ 9768 ED 73 0A 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 976C FD F9        	ld sp,iy
 184+ 976E 06 08            ld b,8
 185+ 9770 D1           1 pop de
 186+ 9771 7A           	ld a,d
 187+ 9772 AE           	xor (hl)
 188+ 9773 77           	ld (hl),a
 189+ 9774 23           	inc hl
 190+ 9775 D1           	pop de
 191+ 9776 7B           	ld a,e
 192+ 9777 AE           	xor (hl)
 193+ 9778 77           	ld (hl),a
 194+ 9779 2B           	dec hl
 195+ 977A 24            	inc h
 196+ 977B 7C               ld a,h
 197+ 977C E6 07            and 7
 198+ 977E 20 0A            jr nz,2F
 199+ 9780 7D               ld a,l
 200+ 9781 C6 20            add a,$20
 201+ 9783 6F               ld l,a
 202+ 9784 38 04            jr c,2F
 203+ 9786 7C               ld a,h
 204+ 9787 D6 08            sub 8
 205+ 9789 67               ld h,a
 206+ 978A 7C           2 ld a,h
 207+ 978B FE 58            cp $58
 208+ 978D 28 20            jr z,4F
 209+ 978F D1               pop de
 210+ 9790 7B           	ld a,e
 211+ 9791 AE           	xor (hl)
 212+ 9792 77           	ld (hl),a
 213+ 9793 23           	inc hl
 214+ 9794 7A           	ld a,d
 215+ 9795 AE           	xor (hl)
 216+ 9796 77           	ld (hl),a
 217+ 9797 2B           	dec hl
 218+ 9798 24           	inc h
 219+ 9799 7C               ld a,h
 220+ 979A E6 07            and 7
 221+ 979C 20 0A            jr nz,3F
 222+ 979E 7D               ld a,l
 223+ 979F C6 20            add a,$20
 224+ 97A1 6F               ld l,a
 225+ 97A2 38 04            jr c,3F
 226+ 97A4 7C               ld a,h
 227+ 97A5 D6 08            sub 8
 228+ 97A7 67               ld h,a
 229+ 97A8 7C           3 ld a,h
 230+ 97A9 FE 58            cp $58
 231+ 97AB 28 02            jr z,4F
 232+ 97AD 10 C1            djnz 1B
 233+ 97AF ED 7B 0A 89  4 ld sp,(Stack)
 234+ 97B3 C9           	ret
 235+ 97B4
 236+ 97B4 ED 73 0A 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97B8 FD F9        	ld sp,iy
 238+ 97BA 06 08            ld b,8
 239+ 97BC D1           1 pop de
 240+ 97BD D1           	pop de
 241+ 97BE 7B           	ld a,e
 242+ 97BF AE           	xor (hl)
 243+ 97C0 77           	ld (hl),a
 244+ 97C1 24            	inc h
 245+ 97C2 7C               ld a,h
 246+ 97C3 E6 07            and 7
 247+ 97C5 20 0A            jr nz,2F
 248+ 97C7 7D               ld a,l
 249+ 97C8 C6 20            add a,$20
 250+ 97CA 6F               ld l,a
 251+ 97CB 38 04            jr c,2F
 252+ 97CD 7C               ld a,h
 253+ 97CE D6 08            sub 8
 254+ 97D0 67               ld h,a
 255+ 97D1 7C           2 ld a,h
 256+ 97D2 FE 58            cp $58
 257+ 97D4 28 1B            jr z,4F
 258+ 97D6 D1               pop de
 259+ 97D7 7A           	ld a,d
 260+ 97D8 AE           	xor (hl)
 261+ 97D9 77           	ld (hl),a
 262+ 97DA 24           	inc h
 263+ 97DB 7C               ld a,h
 264+ 97DC E6 07            and 7
 265+ 97DE 20 0A            jr nz,3F
 266+ 97E0 7D               ld a,l
 267+ 97E1 C6 20            add a,$20
 268+ 97E3 6F               ld l,a
 269+ 97E4 38 04            jr c,3F
 270+ 97E6 7C               ld a,h
 271+ 97E7 D6 08            sub 8
 272+ 97E9 67               ld h,a
 273+ 97EA 7C           3 ld a,h
 274+ 97EB FE 58            cp $58
 275+ 97ED 28 02            jr z,4F
 276+ 97EF 10 CB            djnz 1B
 277+ 97F1 ED 7B 0A 89  4 ld sp,(Stack)
 278+ 97F5 C9           	ret
 279+ 97F6
 280+ 97F6 ED 73 0A 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97FA FD F9        	ld sp,iy
 282+ 97FC 06 08            ld b,8
 283+ 97FE D1           1 pop de
 284+ 97FF 7B           	ld a,e
 285+ 9800 AE           	xor (hl)
 286+ 9801 77           	ld (hl),a
 287+ 9802 23           	inc hl
 288+ 9803 7A           	ld a,d
 289+ 9804 AE           	xor (hl)
 290+ 9805 77           	ld (hl),a
 291+ 9806 2B           	dec hl
 292+ 9807 24             	inc h
 293+ 9808 7C               ld a,h
 294+ 9809 E6 07            and 7
 295+ 980B 20 0A            jr nz,2F
 296+ 980D 7D               ld a,l
 297+ 980E C6 20            add a,$20
 298+ 9810 6F               ld l,a
 299+ 9811 38 04            jr c,2F
 300+ 9813 7C               ld a,h
 301+ 9814 D6 08            sub 8
 302+ 9816 67               ld h,a
 303+ 9817 7C           2 ld a,h
 304+ 9818 FE 58            cp $58
 305+ 981A 28 21            jr z,4F
 306+ 981C D1               pop de
 307+ 981D 7A           	ld a,d
 308+ 981E AE           	xor (hl)
 309+ 981F 77           	ld (hl),a
 310+ 9820 23           	inc hl
 311+ 9821 D1               pop de
 312+ 9822 7B           	ld a,e
 313+ 9823 AE           	xor (hl)
 314+ 9824 77           	ld (hl),a
 315+ 9825 2B           	dec hl
 316+ 9826 24           	inc h
 317+ 9827 7C               ld a,h
 318+ 9828 E6 07            and 7
 319+ 982A 20 0A            jr nz,3F
 320+ 982C 7D               ld a,l
 321+ 982D C6 20            add a,$20
 322+ 982F 6F               ld l,a
 323+ 9830 38 04            jr c,3F
 324+ 9832 7C               ld a,h
 325+ 9833 D6 08            sub 8
 326+ 9835 67               ld h,a
 327+ 9836 7C           3 ld a,h
 328+ 9837 FE 58            cp $58
 329+ 9839 28 02            jr z,4F
 330+ 983B 10 C1            djnz 1B
 331+ 983D ED 7B 0A 89  4 ld sp,(Stack)
 332+ 9841 C9           	ret
 333+ 9842
 334+ 9842 ED 73 0A 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9846 FD F9        	ld sp,iy
 336+ 9848 06 08            ld b,8
 337+ 984A D1           1 pop de
 338+ 984B 7B           	ld a,e
 339+ 984C AE           	xor (hl)
 340+ 984D 77           	ld (hl),a
 341+ 984E 24            	inc h
 342+ 984F 7C               ld a,h
 343+ 9850 E6 07            and 7
 344+ 9852 20 0A            jr nz,2F
 345+ 9854 7D               ld a,l
 346+ 9855 C6 20            add a,$20
 347+ 9857 6F               ld l,a
 348+ 9858 38 04            jr c,2F
 349+ 985A 7C               ld a,h
 350+ 985B D6 08            sub 8
 351+ 985D 67               ld h,a
 352+ 985E 7C           2 ld a,h
 353+ 985F FE 58            cp $58
 354+ 9861 28 1C            jr z,4F
 355+ 9863 D1               pop de
 356+ 9864 7A           	ld a,d
 357+ 9865 AE           	xor (hl)
 358+ 9866 77           	ld (hl),a
 359+ 9867 24           	inc h
 360+ 9868 7C               ld a,h
 361+ 9869 E6 07            and 7
 362+ 986B 20 0A            jr nz,3F
 363+ 986D 7D               ld a,l
 364+ 986E C6 20            add a,$20
 365+ 9870 6F               ld l,a
 366+ 9871 38 04            jr c,3F
 367+ 9873 7C               ld a,h
 368+ 9874 D6 08            sub 8
 369+ 9876 67               ld h,a
 370+ 9877 7C           3 ld a,h
 371+ 9878 FE 58            cp $58
 372+ 987A 28 03            jr z,4F
 373+ 987C D1               pop de
 374+ 987D 10 CB            djnz 1B
 375+ 987F ED 7B 0A 89  4 ld sp,(Stack)
 376+ 9883 C9           	ret
 377+ 9884
 378+ 9884              ; ---------------------------------------------------
 379+ 9884              ;
 380+ 9884              ;   27/02/23
 381+ 9884              ;
 382+ 9884              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9884              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9884              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9884
 386+ 9884 ED 73 0A 89  Pinta_Disparo ld (Stack),sp
 387+ 9888 FD F9            ld sp,iy
 388+ 988A 06 03            ld b,3
 389+ 988C D1           1 pop de
 390+ 988D 7B               ld a,e
 391+ 988E AE               xor (hl)
 392+ 988F 77               ld (hl),a
 393+ 9890 23               inc hl
 394+ 9891 7A               ld a,d
 395+ 9892 AE               xor (hl)
 396+ 9893 77               ld (hl),a
 397+ 9894 2B               dec hl
 398+ 9895
 399+ 9895 24               inc h
 400+ 9896 7C               ld a,h
 401+ 9897 E6 07            and 7
 402+ 9899 20 0A            jr nz,2F
 403+ 989B 7D               ld a,l
 404+ 989C C6 20            add a,$20
 405+ 989E 6F               ld l,a
 406+ 989F 38 04            jr c,2F
 407+ 98A1 7C               ld a,h
 408+ 98A2 D6 08            sub 8
 409+ 98A4 67               ld h,a
 410+ 98A5 7C           2 ld a,h
 411+ 98A6 FE 58            cp $58
 412+ 98A8 28 02            jr z,3F
 413+ 98AA
 414+ 98AA 10 E0            djnz 1B
 415+ 98AC ED 7B 0A 89  3 ld sp,(Stack)
 416+ 98B0 C9               ret
 417+ 98B1
# file closed: Rutinas_de_impresion_sprites.asm
1515  98B1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98B1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98B1              ;
   3+ 98B1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98B1              ;
   5+ 98B1              ; *****************************************************************************************************************************************************************************************
   6+ 98B1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98B1
   8+ 98B1 7C           calcula_tercio ld a,h
   9+ 98B2 E6 18        	and $18
  10+ 98B4 CB 2F        	sra a
  11+ 98B6 CB 2F        	sra a
  12+ 98B8 CB 2F        	sra a
  13+ 98BA C9           	ret
  14+ 98BB
# file closed: calcula_tercio.asm
1516  98BB              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98BB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98BB              ;
   3+ 98BB              ;
   4+ 98BB              ;	CLS.
   5+ 98BB              ;
   6+ 98BB              ;	Limpia la pantalla y define sus atributos.
   7+ 98BB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98BB              ;
   9+ 98BB              ;	COLORES: 0 ..... NEGRO
  10+ 98BB              ;    		 1 ..... AZUL
  11+ 98BB              ; 			 2 ..... ROJO
  12+ 98BB              ;			 3 ..... MAGENTA
  13+ 98BB              ; 			 4 ..... VERDE
  14+ 98BB              ; 			 5 ..... CIAN
  15+ 98BB              ;			 6 ..... AMARILLO
  16+ 98BB              ; 			 7 ..... BLANCO
  17+ 98BB              ;
  18+ 98BB              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98BB              ;
  20+ 98BB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98BB
  22+ 98BB
  23+ 98BB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98BE 11 01 40     	LD DE,$4001
  25+ 98C1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98C4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98C6 ED B0        	LDIR
  28+ 98C8 01 FF 02     	LD BC,767
  29+ 98CB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98CC ED B0        	LDIR
  31+ 98CE C9           	ret
  32+ 98CF
# file closed: Cls.asm
1517  98CF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98CF              ; ******************************************************************************************************************************************************************************************
   2+ 98CF              ;
   3+ 98CF              ;   20/05/23
   4+ 98CF              ;
   5+ 98CF              ;	Recompone_posicion_inicio
   6+ 98CF              ;
   7+ 98CF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98CF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98CF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98CF              ;	_ a una u otra rutina.
  11+ 98CF
  12+ 98CF              Recompone_posicion_inicio
  13+ 98CF
  14+ 98CF 2A CC 88     	ld hl,(Posicion_inicio)
  15+ 98D2 7D           	ld a,l
  16+ 98D3 E6 1F        	and $1f
  17+ 98D5 28 16        	jr z,1F
  18+ 98D7
  19+ 98D7 FE 1F        	cp $1f
  20+ 98D9 28 0D        	jr z,3F
  21+ 98DB
  22+ 98DB 21 F7 88     	ld hl,Ctrl_2
  23+ 98DE CB C6        	set 0,(hl)
  24+ 98E0 2A BE 88     	ld hl,(Puntero_objeto)
  25+ 98E3 22 FA 88     	ld (Repone_puntero_objeto),hl
  26+ 98E6 18 08        	jr 2F
  27+ 98E8
  28+ 98E8 CD 89 9A     3 call Mov_left
  29+ 98EB 18 03        	jr 2F
  30+ 98ED
  31+ 98ED CD 6B 99     1 call Mov_right
  32+ 98F0 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98F3 22 BE 88     	ld (Puntero_objeto),hl
  34+ 98F6 C9           	ret
  35+ 98F7
  36+ 98F7              ; ******************************************************************************************************************************************************************************************
  37+ 98F7              ;
  38+ 98F7              ;   27/05/23
  39+ 98F7              ;
  40+ 98F7              ;	Mov_down
  41+ 98F7              ;
  42+ 98F7              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98F7              ;
  44+ 98F7              ;
  45+ 98F7              Mov_down
  46+ 98F7
  47+ 98F7 CD 59 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98FA              ;																	; _ repone (Puntero_objeto).
  49+ 98FA 21 E6 88     	ld hl,Ctrl_0
  50+ 98FD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98FF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98FF              ; 																	; _ en el caso de que no lo haya.
  53+ 98FF 3A D2 88     	ld a,(Vel_down)
  54+ 9902 47           	ld b,a
  55+ 9903 2A BC 88         ld hl,(Posicion_actual)
  56+ 9906 CD B1 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9909 E6 02        	and 2
  58+ 990B 28 0F        	jr z,1F
  59+ 990D
  60+ 990D              ; Nos encontramos en el último tercio de pantalla.
  61+ 990D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 990D
  63+ 990D 7C           	ld a,h
  64+ 990E FE 57        	cp $57
  65+ 9910 20 0A        	jr nz,1F
  66+ 9912
  67+ 9912 7D           	ld a,l
  68+ 9913 C6 20        	add $20
  69+ 9915 30 05        	jr nc,1F
  70+ 9917
  71+ 9917              ; ------------------------------
  72+ 9917              ;	call Reaparece_arriba
  73+ 9917 CD 16 9C     	call Reinicio
  74+ 991A              ; ------------------------------
  75+ 991A
  76+ 991A 18 08        	jr 3F
  77+ 991C CD 9E 95     1 call NextScan
  78+ 991F 22 BC 88     	ld (Posicion_actual),hl
  79+ 9922 10 E2            djnz 2B
  80+ 9924 CD 3C 9C     3 call Genera_coordenadas
  81+ 9927 C9           	ret
  82+ 9928
  83+ 9928              ; ******************************************************************************************************************************************************************************************
  84+ 9928              ;
  85+ 9928              ;   27/05/23
  86+ 9928              ;
  87+ 9928              ;	Mov_up
  88+ 9928              ;
  89+ 9928              ; 	Mueve el Sprite hacia arriba.
  90+ 9928              ;
  91+ 9928              ;
  92+ 9928              Mov_up
  93+ 9928
  94+ 9928 CD 59 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 992B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 992B 21 E6 88     	ld hl,Ctrl_0
  97+ 992E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9930              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9930              ; 																		; _ en el caso de que no lo haya.
 100+ 9930 3A D1 88     	ld a,(Vel_up)
 101+ 9933 47           	ld b,a
 102+ 9934 2A BC 88     	ld hl,(Posicion_actual)
 103+ 9937 CD B1 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 993A A7           	and a
 105+ 993B 20 10        	jr nz,1F
 106+ 993D
 107+ 993D              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 993D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 993D
 110+ 993D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 993E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9940 20 0B            jr nz,1F
 113+ 9942 7D               ld a,l
 114+ 9943 D6 20            sub $20
 115+ 9945 30 06            jr nc,1F
 116+ 9947 25               dec h
 117+ 9948
 118+ 9948              ; -----------------------------
 119+ 9948 CD F7 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 994B              ;	call Reinicio
 121+ 994B              ; -----------------------------
 122+ 994B
 123+ 994B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 994D CD AD 95     1 call PreviousScan
 125+ 9950 22 BC 88     	ld (Posicion_actual),hl
 126+ 9953 10 E2            djnz 3B
 127+ 9955 CD 3C 9C     2 call Genera_coordenadas
 128+ 9958 C9           	ret
 129+ 9959
 130+ 9959              ; -----------------------------
 131+ 9959              ;
 132+ 9959              ;	27/5/23
 133+ 9959              ;
 134+ 9959              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9959              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9959              ;
 137+ 9959              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9959              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9959              ;
 140+ 9959              ;	Modifica: A y (Puntero_objeto).
 141+ 9959
 142+ 9959 3A F7 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 995C CB 47        	bit 0,a
 144+ 995E C8           	ret z
 145+ 995F CB 87        	res 0,a
 146+ 9961 32 F7 88     	ld (Ctrl_2),a
 147+ 9964 2A FA 88     	ld hl,(Repone_puntero_objeto)
 148+ 9967 22 BE 88     	ld (Puntero_objeto),hl
 149+ 996A C9           	ret
 150+ 996B
 151+ 996B              ; ******************************************************************************************************************************************************************************************
 152+ 996B              ;
 153+ 996B              ;	19/10/22
 154+ 996B              ;
 155+ 996B              ;	Mov_right.
 156+ 996B              ;
 157+ 996B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 996B              ;
 159+ 996B
 160+ 996B 21 E6 88     Mov_right ld hl,Ctrl_0
 161+ 996E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9970              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9970              ; 																	; _ en el caso de que no lo haya.
 164+ 9970 3A E6 88     	ld a,(Ctrl_0)
 165+ 9973 CB 77        	bit 6,a
 166+ 9975 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9977
 168+ 9977 CD A5 9B     	call Stop_Amadeus_right
 169+ 997A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 997B 18 4D        	jr 8F
 171+ 997D
 172+ 997D 3A C0 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9980 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9982 20 46        	jr nz,8F
 175+ 9984
 176+ 9984 3A C2 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9987 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9988 28 40        	jr z,8F
 179+ 998A
 180+ 998A              ; ---------- ---------- ----------
 181+ 998A              ;
 182+ 998A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 998A
 184+ 998A 3A D0 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 998D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 998F 28 11        	jr z,1F
 187+ 9991 38 06        	jr c,6F
 188+ 9993 FE 04        	cp 4
 189+ 9995 28 14        	jr z,7F
 190+ 9997 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9999
 192+ 9999              ; ---------- ---------- ----------
 193+ 9999              ;
 194+ 9999              ; Perfiles de velocidad
 195+ 9999              ;
 196+ 9999
 197+ 9999 3A C2 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 999C FE FE        	cp $fe
 199+ 999E 20 2A        	jr nz,8F
 200+ 99A0 18 10        	jr 3F
 201+ 99A2 3A C2 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 99A5 FE FD        	cp $fd
 203+ 99A7 20 21        	jr nz,8F
 204+ 99A9 18 07        	jr 3F
 205+ 99AB 3A C2 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99AE FE FB        	cp $fb
 207+ 99B0 20 18        	jr nz,8F
 208+ 99B2
 209+ 99B2              ; ---------- ---------- ----------
 210+ 99B2
 211+ 99B2              3
 212+ 99B2 CD E5 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99B5              ;	call Reinicio
 214+ 99B5
 215+ 99B5              ; ---------- ---------- ----------
 216+ 99B5              ;
 217+ 99B5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99B5
 219+ 99B5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99B7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 99B8 CD D1 99     	call DESPLZ_DER
 222+ 99BB C1           	pop bc
 223+ 99BC 10 F9        	djnz 5B
 224+ 99BE 2A BC 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 99C1 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 99C2 22 BC 88     	ld (Posicion_actual),hl
 227+ 99C5 CD 3C 9C     	call Genera_coordenadas
 228+ 99C8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99CA
 230+ 99CA              ; ---------- ---------- ----------
 231+ 99CA
 232+ 99CA 2A BC 88     8 ld hl,(Posicion_actual)
 233+ 99CD CD D1 99     	call DESPLZ_DER
 234+ 99D0 C9           2 ret
 235+ 99D1
 236+ 99D1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99D1              ;
 238+ 99D1              ;	22/9/22
 239+ 99D1              ;
 240+ 99D1
 241+ 99D1 CD E0 99     DESPLZ_DER call Desplaza_derecha
 242+ 99D4 CD 2C 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99D7 CD 55 9A         call Ciclo_completo
 244+ 99DA 21 E6 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99DD CB FE        	set 7,(hl)
 246+ 99DF C9           	ret
 247+ 99E0
 248+ 99E0              ; ******************************************************************************************************************************************************************************************
 249+ 99E0              ;	15/02/23
 250+ 99E0              ;
 251+ 99E0
 252+ 99E0 3A D0 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99E3 47           	ld b,a
 254+ 99E4 2A C8 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 99E7 23           1 inc hl
 256+ 99E8 23           	inc hl
 257+ 99E9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 99EB 22 C8 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 99EE CD 16 8C     	call Extrae_address
 260+ 99F1 22 BE 88     	ld (Puntero_objeto),hl
 261+ 99F4
 262+ 99F4              ; Modifica (Puntero_DESPLZ_izq).
 263+ 99F4
 264+ 99F4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 99F4              ; Cuántos movimientos hemos hecho ??
 266+ 99F4              ; DE contiene (Puntero_DESPLZ_der).
 267+ 99F4
 268+ 99F4 2A C4 88     7 ld hl,(Indice_Sprite_der)
 269+ 99F7 EB           	ex de,hl
 270+ 99F8 A7           	and a
 271+ 99F9 ED 52        	sbc hl,de
 272+ 99FB CB 3D        	srl l
 273+ 99FD 3E 08        6 ld a,8
 274+ 99FF 95           	sub l
 275+ 9A00 30 1E        	jr nc,3F
 276+ 9A02
 277+ 9A02              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A02              ; B="0".
 279+ 9A02
 280+ 9A02 04           4 inc b
 281+ 9A03 3C           	inc a
 282+ 9A04 20 FC        	jr nz,4B
 283+ 9A06 78           	ld a,b
 284+ 9A07 08           	ex af,af
 285+ 9A08 2A C4 88     	ld hl,(Indice_Sprite_der)
 286+ 9A0B 23           5 inc hl
 287+ 9A0C 23           	inc hl
 288+ 9A0D 10 FC        	djnz 5B
 289+ 9A0F 22 C8 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A12 CD 16 8C     	call Extrae_address
 291+ 9A15 22 BE 88     	ld (Puntero_objeto),hl
 292+ 9A18
 293+ 9A18              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A18              ; _(Posicion_actual).
 295+ 9A18
 296+ 9A18 21 BC 88     	ld hl,Posicion_actual
 297+ 9A1B 34           	inc (hl)
 298+ 9A1C 08               ex af,af
 299+ 9A1D 6F           	ld l,a
 300+ 9A1E 18 DD        	jr 6B
 301+ 9A20
 302+ 9A20              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A20
 304+ 9A20 47           3 ld b,a
 305+ 9A21 2A C6 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A24 23           2 inc hl
 307+ 9A25 23           	inc hl
 308+ 9A26 10 FC        	djnz 2B
 309+ 9A28 22 CA 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A2B C9           8 ret
 311+ 9A2C
 312+ 9A2C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A2C              ;
 314+ 9A2C              ;	24/7/22
 315+ 9A2C              ;
 316+ 9A2C              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A2C              ;
 318+ 9A2C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A2C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A2C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A2C
 322+ 9A2C 3A C2 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A2F A7           	and a
 324+ 9A30 20 1F        	jr nz,1F
 325+ 9A32 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A34 32 C2 88         ld (CTRL_DESPLZ),a
 327+ 9A37
 328+ 9A37 21 BB 88     	ld hl,Columns
 329+ 9A3A 34           	inc (hl)
 330+ 9A3B 3A CE 88     	ld a,(Cuad_objeto)
 331+ 9A3E E6 01        	and 1
 332+ 9A40 28 0F        	jr z,1F
 333+ 9A42 2A BC 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A45 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A46 22 BC 88     	ld (Posicion_actual),hl
 336+ 9A49 CD 3C 9C     	call Genera_coordenadas
 337+ 9A4C CD B1 9B     	call Inc_CTRL_DESPLZ
 338+ 9A4F 18 03        	jr 2F
 339+ 9A51 CD B1 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A54 C9           2 ret
 341+ 9A55
 342+ 9A55              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A55              ;
 344+ 9A55              ;	24/7/22
 345+ 9A55              ;
 346+ 9A55              ;	Ciclo_completo.
 347+ 9A55              ;
 348+ 9A55              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A55              ;
 350+ 9A55              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A55              ; 	Decrementamos (Columns).
 352+ 9A55              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A55              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A55
 355+ 9A55
 356+ 9A55 3A C2 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A58 FE FF        	cp $ff
 358+ 9A5A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A5C E6 F0        	and $f0
 360+ 9A5E 20 28        	jr nz,3F
 361+ 9A60
 362+ 9A60              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A60
 364+ 9A60 3A C2 88     	ld a,(CTRL_DESPLZ)
 365+ 9A63 47           	ld b,a
 366+ 9A64 3E F8        	ld a,$f8
 367+ 9A66 80           	add b
 368+ 9A67 32 C2 88     	ld (CTRL_DESPLZ),a
 369+ 9A6A 18 1C        	jr 3F
 370+ 9A6C 21 BB 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A6F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A70 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A71 32 C2 88     	ld (CTRL_DESPLZ),a
 374+ 9A74 3A CE 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A77 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A79 20 0A        	jr nz,2F
 377+ 9A7B 2A BC 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A7E 23           	inc hl
 379+ 9A7F 22 BC 88     	ld (Posicion_actual),hl
 380+ 9A82 CD 3C 9C     	call Genera_coordenadas
 381+ 9A85
 382+ 9A85              ; Inicia el puntero de Sprite.
 383+ 9A85
 384+ 9A85 CD 2D 8C     2 call Inicia_puntero_objeto_der
 385+ 9A88 C9           3 ret
 386+ 9A89
 387+ 9A89              ; ******************************************************************************************************************************************************************************************
 388+ 9A89              ;
 389+ 9A89              ;	15/02/23
 390+ 9A89              ;
 391+ 9A89              ;	Mov_left.
 392+ 9A89              ;
 393+ 9A89              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A89              ;
 395+ 9A89              Mov_left
 396+ 9A89
 397+ 9A89 21 E6 88     	ld hl,Ctrl_0
 398+ 9A8C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A8E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A8E              ; 																	; _ en el caso de que no lo haya.
 401+ 9A8E 3A E6 88     	ld a,(Ctrl_0)
 402+ 9A91 CB 77        	bit 6,a
 403+ 9A93 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A95
 405+ 9A95 CD AB 9B     	call Stop_Amadeus_left
 406+ 9A98 C8           	ret z
 407+ 9A99 20 4A        	jr nz,8F
 408+ 9A9B
 409+ 9A9B 3A C0 88     11 ld a,(Coordenada_X)
 410+ 9A9E A7           	and a
 411+ 9A9F 20 44        	jr nz,8F
 412+ 9AA1
 413+ 9AA1 3A C2 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9AA4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9AA5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9AA7
 417+ 9AA7              ; ---------- ---------- ----------
 418+ 9AA7
 419+ 9AA7 3A CF 88     	ld a,(Vel_left)
 420+ 9AAA FE 02        	cp 2
 421+ 9AAC 28 0F        	jr z,1F
 422+ 9AAE 38 04        	jr c,6F
 423+ 9AB0 FE 04        	cp 4
 424+ 9AB2 28 12        	jr z,7F
 425+ 9AB4
 426+ 9AB4              ; ---------- ---------- ----------
 427+ 9AB4
 428+ 9AB4 3A C2 88     6 ld a,(CTRL_DESPLZ)
 429+ 9AB7 FE F8        	cp $f8
 430+ 9AB9 20 2A        	jr nz,8F
 431+ 9ABB 18 10        	jr 4F
 432+ 9ABD 3A C2 88     1 ld a,(CTRL_DESPLZ)
 433+ 9AC0 FE F9        	cp $f9
 434+ 9AC2 20 21        	jr nz,8F
 435+ 9AC4 18 07        	jr 4F
 436+ 9AC6 3A C2 88     7 ld a,(CTRL_DESPLZ)
 437+ 9AC9 FE FB        	cp $fb
 438+ 9ACB 20 18        	jr nz,8F
 439+ 9ACD
 440+ 9ACD              ; ---------- ---------- ----------
 441+ 9ACD
 442+ 9ACD              4
 443+ 9ACD CD D3 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AD0              ;	call Reinicio
 445+ 9AD0
 446+ 9AD0              ; ---------- ---------- ----------
 447+ 9AD0
 448+ 9AD0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AD2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9AD3
 451+ 9AD3              ;	ld hl,(Indice_Sprite_izq)
 452+ 9AD3              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9AD3
 454+ 9AD3 CD EC 9A     	call DESPLZ_IZQ
 455+ 9AD6 C1           	pop bc
 456+ 9AD7 10 F9        	djnz 5B
 457+ 9AD9 2A BC 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9ADC 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9ADD 22 BC 88     	ld (Posicion_actual),hl
 460+ 9AE0 CD 3C 9C     	call Genera_coordenadas
 461+ 9AE3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9AE5
 463+ 9AE5              ; ---------- ---------- ----------
 464+ 9AE5
 465+ 9AE5              ; Movemos, no hay recolocación.
 466+ 9AE5
 467+ 9AE5 2A BC 88     8 ld hl,(Posicion_actual)
 468+ 9AE8 CD EC 9A     	call DESPLZ_IZQ
 469+ 9AEB C9           2 ret
 470+ 9AEC
 471+ 9AEC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9AEC              ;
 473+ 9AEC              ;	22/9/22
 474+ 9AEC
 475+ 9AEC              DESPLZ_IZQ
 476+ 9AEC
 477+ 9AEC CD FB 9A     	call Desplaza_izquierda
 478+ 9AEF CD 47 9B         call modifica_parametros_1er_DESPLZ
 479+ 9AF2 CD 6F 9B     	call Ciclo_completo_2
 480+ 9AF5 21 E6 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AF8 CB BE        	res 7,(hl)
 482+ 9AFA C9           	ret
 483+ 9AFB
 484+ 9AFB              Desplaza_izquierda
 485+ 9AFB
 486+ 9AFB 3A CF 88     	ld a,(Vel_left)
 487+ 9AFE 47           	ld b,a
 488+ 9AFF 2A CA 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B02 23           1 inc hl
 490+ 9B03 23           	inc hl
 491+ 9B04 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B06 22 CA 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B09 CD 16 8C     	call Extrae_address
 494+ 9B0C 22 BE 88     	ld (Puntero_objeto),hl
 495+ 9B0F
 496+ 9B0F              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B0F
 498+ 9B0F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B0F              ; Cuántos movimientos hemos hecho ??
 500+ 9B0F              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B0F
 502+ 9B0F 2A C6 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B12 EB           	ex de,hl
 504+ 9B13 A7           	and a
 505+ 9B14 ED 52        	sbc hl,de
 506+ 9B16 CB 3D        	srl l
 507+ 9B18 3E 08        6 ld a,8
 508+ 9B1A 95           	sub l
 509+ 9B1B 30 1E        	jr nc,3F
 510+ 9B1D
 511+ 9B1D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B1D              ; B="0".
 513+ 9B1D
 514+ 9B1D 04           4 inc b
 515+ 9B1E 3C           	inc a
 516+ 9B1F 20 FC        	jr nz,4B
 517+ 9B21 78           	ld a,b
 518+ 9B22 08           	ex af,af
 519+ 9B23 2A C6 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B26 23           5 inc hl
 521+ 9B27 23           	inc hl
 522+ 9B28 10 FC        	djnz 5B
 523+ 9B2A 22 CA 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B2D CD 16 8C     	call Extrae_address
 525+ 9B30 22 BE 88     	ld (Puntero_objeto),hl
 526+ 9B33
 527+ 9B33              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B33              ; _(Posicion_actual).
 529+ 9B33
 530+ 9B33 21 BC 88     	ld hl,Posicion_actual
 531+ 9B36 35           	dec (hl)
 532+ 9B37 08           	ex af,af
 533+ 9B38 6F           	ld l,a
 534+ 9B39 18 DD        	jr 6B
 535+ 9B3B
 536+ 9B3B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B3B
 538+ 9B3B 47           3 ld b,a
 539+ 9B3C 2A C4 88     	ld hl,(Indice_Sprite_der)
 540+ 9B3F 23           2 inc hl
 541+ 9B40 23           	inc hl
 542+ 9B41 10 FC        	djnz 2B
 543+ 9B43 22 C8 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B46 C9           8 ret
 545+ 9B47
 546+ 9B47              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B47              ;
 548+ 9B47              ;	modifica_parametros_1er_DESPLZ
 549+ 9B47              ;
 550+ 9B47              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B47              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B47              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B47
 554+ 9B47 3A C2 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B4A A7           	and a
 556+ 9B4B 20 1E        	jr nz,1F
 557+ 9B4D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B4E 32 C2 88         ld (CTRL_DESPLZ),a
 559+ 9B51 21 BB 88     	ld hl,Columns
 560+ 9B54 34           	inc (hl)
 561+ 9B55 3A CE 88     	ld a,(Cuad_objeto)
 562+ 9B58 E6 01        	and 1
 563+ 9B5A 20 0F        	jr nz,1F
 564+ 9B5C 2A BC 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B5F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B60 22 BC 88     	ld (Posicion_actual),hl
 567+ 9B63 CD 3C 9C     	call Genera_coordenadas
 568+ 9B66 CD C2 9B     	call Dec_CTRL_DESPLZ
 569+ 9B69 18 03        	jr 2F
 570+ 9B6B CD C2 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B6E C9           2 ret
 572+ 9B6F
 573+ 9B6F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B6F
 575+ 9B6F 3A C2 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B72 FE F7        	cp $f7
 577+ 9B74 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B76 30 2C        	jr nc,3F
 579+ 9B78
 580+ 9B78              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B78
 582+ 9B78 06 00        	ld b,0
 583+ 9B7A 04           4 inc b
 584+ 9B7B 3C           	inc a
 585+ 9B7C FE F7        	cp $f7
 586+ 9B7E 20 FA        	jr nz,4B
 587+ 9B80 3E FF        	ld a,$ff
 588+ 9B82 90           	sub b
 589+ 9B83 32 C2 88     	ld (CTRL_DESPLZ),a
 590+ 9B86 18 1C        	jr 3F
 591+ 9B88
 592+ 9B88              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B88
 594+ 9B88 21 BB 88     1 ld hl,Columns
 595+ 9B8B 35           	dec (hl)
 596+ 9B8C AF           	xor a
 597+ 9B8D 32 C2 88     	ld (CTRL_DESPLZ),a
 598+ 9B90 3A CE 88     	ld a,(Cuad_objeto)
 599+ 9B93 E6 01        	and 1
 600+ 9B95 28 0A        	jr z,2F
 601+ 9B97 2A BC 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B9A 2B           	dec hl
 603+ 9B9B 22 BC 88     	ld (Posicion_actual),hl
 604+ 9B9E CD 3C 9C     	call Genera_coordenadas
 605+ 9BA1
 606+ 9BA1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9BA1
 608+ 9BA1 CD 40 8C     2 call Inicia_puntero_objeto_izq
 609+ 9BA4 C9           3 ret
 610+ 9BA5
 611+ 9BA5              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9BA5              ;
 613+ 9BA5              ;	19/10/22
 614+ 9BA5              ;
 615+ 9BA5              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9BA5              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9BA5
 618+ 9BA5 3A C0 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9BA8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9BAA C9           	ret
 621+ 9BAB
 622+ 9BAB              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9BAB              ;
 624+ 9BAB              ;	19/10/22
 625+ 9BAB              ;
 626+ 9BAB              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9BAB              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9BAB
 629+ 9BAB 3A C0 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9BAE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9BB0 C9           	ret
 632+ 9BB1
 633+ 9BB1              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9BB1              ;
 635+ 9BB1              ;	24/7/22
 636+ 9BB1              ;
 637+ 9BB1              ;	Inc_CTRL_DESPLZ
 638+ 9BB1              ;
 639+ 9BB1              ;
 640+ 9BB1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9BB1
 642+ 9BB1 21 C2 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9BB4 3A D0 88     	ld a,(Vel_right)
 644+ 9BB7 A7           	and a
 645+ 9BB8 28 06        	jr z,1F
 646+ 9BBA 47           	ld b,a
 647+ 9BBB 34           3 inc (hl)
 648+ 9BBC 10 FD        	djnz 3B
 649+ 9BBE 18 01        	jr 2F
 650+ 9BC0 34           1 inc (hl)
 651+ 9BC1 C9           2 ret
 652+ 9BC2
 653+ 9BC2              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9BC2              ;
 655+ 9BC2              ;	5/2/23
 656+ 9BC2              ;
 657+ 9BC2              ;	Dec_CTRL_DESPLZ
 658+ 9BC2              ;
 659+ 9BC2              ;
 660+ 9BC2              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9BC2
 662+ 9BC2 21 C2 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BC5 3A CF 88     	ld a,(Vel_left)
 664+ 9BC8 A7           	and a
 665+ 9BC9 28 06        	jr z,1F
 666+ 9BCB 47           	ld b,a
 667+ 9BCC 35           3 dec (hl)
 668+ 9BCD 10 FD        	djnz 3B
 669+ 9BCF 18 01        	jr 2F
 670+ 9BD1 35           1 dec (hl)
 671+ 9BD2 C9           2 ret
 672+ 9BD3
 673+ 9BD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BD3
 675+ 9BD3 2A BC 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BD6 01 1F 00     	ld bc,31
 677+ 9BD9 A7           	and a
 678+ 9BDA ED 4A        	adc hl,bc
 679+ 9BDC 22 BC 88     	ld (Posicion_actual),hl
 680+ 9BDF 21 E6 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BE2 CB C6        	set 0,(hl)
 682+ 9BE4 C9           	ret
 683+ 9BE5
 684+ 9BE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9BE5
 686+ 9BE5 2A BC 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9BE8 01 1F 00     	ld bc,31
 688+ 9BEB A7           	and a
 689+ 9BEC ED 42        	sbc hl,bc
 690+ 9BEE 22 BC 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9BF1 21 E6 88     	ld hl,Ctrl_0
 692+ 9BF4 CB CE        	set 1,(hl)
 693+ 9BF6 C9           	ret
 694+ 9BF7
 695+ 9BF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BF7
 697+ 9BF7 24           Reaparece_abajo inc h
 698+ 9BF8 01 E0 17     	ld bc,$17e0
 699+ 9BFB A7           	and a
 700+ 9BFC ED 4A        	adc hl,bc
 701+ 9BFE 22 BC 88     	ld (Posicion_actual),hl
 702+ 9C01 21 E6 88     	ld hl,Ctrl_0
 703+ 9C04 CB D6        	set 2,(hl)
 704+ 9C06 C9           	ret
 705+ 9C07
 706+ 9C07              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C07
 708+ 9C07 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C0A A7           	and a
 710+ 9C0B ED 42        	sbc hl,bc
 711+ 9C0D 22 BC 88     	ld (Posicion_actual),hl
 712+ 9C10 21 E6 88     	ld hl,Ctrl_0
 713+ 9C13 CB DE        	set 3,(hl)
 714+ 9C15 C9           	ret
 715+ 9C16
 716+ 9C16              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C16              ;
 718+ 9C16              ;	15/07/23
 719+ 9C16
 720+ 9C16              Reinicio
 721+ 9C16
 722+ 9C16              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C16
 724+ 9C16 AF           	xor a
 725+ 9C17 21 EB 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C1A CD 38 9C     	call Limpia_contenido_hl
 727+ 9C1D
 728+ 9C1D 21 BC 88     	ld hl,Posicion_actual
 729+ 9C20 CD 38 9C     	call Limpia_contenido_hl
 730+ 9C23
 731+ 9C23 CD 68 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C26 CD F2 9E     	call Inicia_Puntero_mov
 733+ 9C29
 734+ 9C29 21 ED 88     	ld hl,Incrementa_puntero
 735+ 9C2C 06 05        	ld b,5
 736+ 9C2E 77           1 ld (hl),a
 737+ 9C2F 23           	inc hl
 738+ 9C30 10 FC        	djnz 1B
 739+ 9C32
 740+ 9C32 21 F7 88     	ld hl,Ctrl_2
 741+ 9C35 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C37
 743+ 9C37 C9           	ret
 744+ 9C38
 745+ 9C38 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C39 23           	inc hl
 747+ 9C3A 77           	ld (hl),a
 748+ 9C3B C9           	ret
 749+ 9C3C
 750+ 9C3C
# file closed: Direcciones.asm
1518  9C3C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C3C              ; ------------------------------------------------------------------------
   2+ 9C3C              ;
   3+ 9C3C              ;	02/04/23
   4+ 9C3C              ;
   5+ 9C3C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C3C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C3C              ;
   8+ 9C3C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C3C              ;
  10+ 9C3C              ;	Modifica: A,BC y DE.
  11+ 9C3C
  12+ 9C3C C5           Genera_coordenadas push bc
  13+ 9C3D E5           	push hl
  14+ 9C3E D5           	push de
  15+ 9C3F
  16+ 9C3F 2A BC 88     	ld hl,(Posicion_actual)
  17+ 9C42
  18+ 9C42 7D           	ld a,l
  19+ 9C43 E6 1F        	and $1f
  20+ 9C45 32 C0 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C48
  22+ 9C48 CD B1 98     	call calcula_tercio
  23+ 9C4B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C4C
  25+ 9C4C 1E 00        	ld e,0
  26+ 9C4E 7D           	ld a,l
  27+ 9C4F E6 E0        	and $e0
  28+ 9C51 28 01        	jr z,1F
  29+ 9C53 04           	inc b
  30+ 9C54
  31+ 9C54 04           1 inc b
  32+ 9C55 05           	dec b
  33+ 9C56 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C58              ;														; _ , salimos.
  35+ 9C58 1C           3 inc e
  36+ 9C59 D6 20        	sub 32
  37+ 9C5B 20 FB        	jr nz,3B
  38+ 9C5D 10 F5        	djnz 1B
  39+ 9C5F
  40+ 9C5F 7B           2 ld a,e
  41+ 9C60 32 C1 88     	ld (Coordenada_y),a
  42+ 9C63
  43+ 9C63 D1           	pop de
  44+ 9C64 E1           	pop hl
  45+ 9C65 C1           	pop bc
  46+ 9C66
  47+ 9C66 C9           	ret
  48+ 9C67
  49+ 9C67              ; ------------------------------------------------------------------------
  50+ 9C67              ;	28/05/23
  51+ 9C67              ;
  52+ 9C67              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C67              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C67              ;
  55+ 9C67              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C67              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C67              ;
  58+ 9C67              ;		DE="$120d"
  59+ 9C67              ;
  60+ 9C67              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C67              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C67              ;
  63+ 9C67              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C67
  65+ 9C67              ;	Modifica: A,BC y DE.
  66+ 9C67
  67+ 9C67
  68+ 9C67              Genera_coordenadas_disparo
  69+ 9C67
  70+ 9C67              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C67
  72+ 9C67 7D           	ld a,l
  73+ 9C68 E6 1F        	and $1f
  74+ 9C6A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C6B CD B1 98     	call calcula_tercio
  76+ 9C6E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C6F 1E 00        	ld e,0
  78+ 9C71 7D           	ld a,l
  79+ 9C72 E6 E0        	and $e0
  80+ 9C74 28 01        	jr z,1F
  81+ 9C76 04           	inc b
  82+ 9C77 1C           1 inc e
  83+ 9C78 D6 20        	sub 32
  84+ 9C7A 20 FB        	jr nz,1B
  85+ 9C7C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C7E C9           	ret
  87+ 9C7F
# file closed: Genera_coordenadas.asm
1519  9C7F              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C7F              ; Relojes y temporizaciones.
   2+ 9C7F
   3+ 9C7F              ; ------------------------------------------------------
   4+ 9C7F              ;
   5+ 9C7F              ;	16/7/23
   6+ 9C7F              ;
   7+ 9C7F              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C7F              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C7F              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C7F              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C7F              ;
  12+ 9C7F              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C7F              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C7F
  15+ 9C7F              ; Disparo_entidad db 1
  16+ 9C7F              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C7F              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C7F
  19+ 9C7F              Habilita_disparos
  20+ 9C7F
  21+ 9C7F 7E           	ld a,(hl)
  22+ 9C80 A7           	and a
  23+ 9C81 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C82
  25+ 9C82 EB           	ex de,hl
  26+ 9C83
  27+ 9C83 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C84 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C85
  30+ 9C85              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C85
  32+ 9C85 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C86 7E           	ld a,(hl)
  34+ 9C87 23           	inc hl
  35+ 9C88 77           	ld (hl),a
  36+ 9C89
  37+ 9C89 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C8A 3E 01        	ld a,1
  39+ 9C8C 77           	ld (hl),a
  40+ 9C8D C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1520  9C8E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C8E
   2+ 9C8E
   3+ 9C8E              ;   07/07/23
   4+ 9C8E              ;
   5+ 9C8E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C8E              ;
   7+ 9C8E              ;   Codificación:
   8+ 9C8E              ;
   9+ 9C8E              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C8E              ;
  11+ 9C8E              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C8E              ;
  13+ 9C8E              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C8E              ;
  15+ 9C8E              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C8E              ;
  17+ 9C8E              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C8E              ;                               ..... %01000010 Vel_up 4
  19+ 9C8E              ;                                               Vel_down 2
  20+ 9C8E              ;                               ..... $42
  21+ 9C8E              ;
  22+ 9C8E              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C8E              ;
  24+ 9C8E              ;                               ..... %01000010 Vel_left 4
  25+ 9C8E              ;                                               Vel_right 2
  26+ 9C8E              ;                               ..... $42
  27+ 9C8E              ;
  28+ 9C8E              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C8E              ;
  30+ 9C8E              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C8E              ;
  32+ 9C8E              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C8E              ;
  34+ 9C8E              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C8E              ;                                     $53
  36+ 9C8E              ;
  37+ 9C8E              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C8E              ;
  39+ 9C8E              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C8E              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C8E              ;
  42+ 9C8E              ;                       Arriba ..... $81
  43+ 9C8E              ;                       Arriba - izquierda ..... $a1
  44+ 9C8E              ;                       Arriba - derecha ..... $91
  45+ 9C8E              ;
  46+ 9C8E              ;                       Abajo ..... $41
  47+ 9C8E              ;                       Abajo - izquierda ..... $61
  48+ 9C8E              ;                       Abajo - derecha ..... $51
  49+ 9C8E              ;
  50+ 9C8E              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C8E              ;
  52+ 9C8E              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C8E              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C8E              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C8E              ;
  56+ 9C8E              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C8E              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C8E              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C8E              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C8E              ;
  61+ 9C8E              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C8E              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C8E              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C8E              ;
  65+ 9C8E              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C8E              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C8E              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C8E              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C8E
  70+ 9C8E              ; ----- ----- ----- ----- -----
  71+ 9C8E
  72+ 9C8E BA 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C90 C2 9C            defw F_1
  74+ 9C92 CC 9C            defw F_2
  75+ 9C94 D6 9C            defw Codo_abajo_derecha
  76+ 9C96 0A 9D            defw Derecha_y_subiendo
  77+ 9C98 14 9D            defw Derecha_y_subiendo_1
  78+ 9C9A 1E 9D            defw F_3
  79+ 9C9C 28 9D            defw F_4
  80+ 9C9E 32 9D            defw Derecha_y_bajando
  81+ 9CA0 3C 9D            defw Derecha_y_bajando_1
  82+ 9CA2 46 9D            defw Derecha_y_bajando_2
  83+ 9CA4 50 9D            defw Codo_derecha_abajo
  84+ 9CA6 80 9D            defw Codo_abajo_izq.
  85+ 9CA8 B4 9D            defw Izquierda_y_subiendo
  86+ 9CAA BE 9D            defw Izquierda_y_subiendo_1
  87+ 9CAC C8 9D            defw F_5
  88+ 9CAE D2 9D            defw F_6
  89+ 9CB0 DC 9D            defw Izquierda_y_bajando
  90+ 9CB2 E6 9D            defw Izquierda_y_bajando_1
  91+ 9CB4 F0 9D            defw Izquierda_y_bajando_2
  92+ 9CB6 FA 9D            defw Codo_izquierda_abajo
  93+ 9CB8 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9CBA
  95+ 9CBA 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9CBE 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9CC2
  98+ 9CC2 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CC6 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CCA 08 00
 100+ 9CCC 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CD0 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CD4 0F FE
 102+ 9CD6
 103+ 9CD6 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CDA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CDE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CE2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9CE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9CEA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9CEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CF2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CF6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CFA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CFE 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D02 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D06 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D0A
 117+ 9D0A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D0E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D12 06 00
 119+ 9D14
 120+ 9D14 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D18 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D1C 02 00
 122+ 9D1E
 123+ 9D1E 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D22 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D26 04 00
 125+ 9D28 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D2C 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D30 08 00
 127+ 9D32
 128+ 9D32 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D36 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D3A 02 00
 130+ 9D3C
 131+ 9D3C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D40 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D44 06 00
 133+ 9D46
 134+ 9D46 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D4A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D4E 06 00
 136+ 9D50
 137+ 9D50              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D50
 139+ 9D50 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D54 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D58 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D60 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D64 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D6C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D74 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D78 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D7C 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D80
 152+ 9D80 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D84 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D88 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D8C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D90 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D94 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D98 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D9C 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9DA0 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9DA4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9DA8 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DAC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DB0 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DB4
 166+ 9DB4 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DB8 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9DBC 06 00
 168+ 9DBE
 169+ 9DBE 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9DC2 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DC6 02 00
 171+ 9DC8
 172+ 9DC8 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DCC 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DD0 04 00
 174+ 9DD2 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DD6 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DDA 08 00
 176+ 9DDC
 177+ 9DDC 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DE0 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9DE4 02 00
 179+ 9DE6
 180+ 9DE6 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9DEA 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9DEE 06 00
 182+ 9DF0
 183+ 9DF0 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DF4 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DF8 06 00
 185+ 9DFA
 186+ 9DFA 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DFE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E02 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E06 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E0A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E0E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E12 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E16 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E1A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E1E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E22 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E26 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E2A
 199+ 9E2A              ; ----- ----- ----- ----- -----
 200+ 9E2A              ;
 201+ 9E2A              ;   27/06/23
 202+ 9E2A
 203+ 9E2A              Movimiento
 204+ 9E2A
 205+ 9E2A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E2A
 207+ 9E2A              ;    ld hl,(Posicion_actual)
 208+ 9E2A
 209+ 9E2A 3A F7 88         ld a,(Ctrl_2)
 210+ 9E2D CB 57            bit 2,a
 211+ 9E2F 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E31
 213+ 9E31 2A E9 88         ld hl,(Puntero_mov)
 214+ 9E34 7E               ld a,(hl)
 215+ 9E35
 216+ 9E35              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E35
 218+ 9E35              Inicia_desplazamiento.
 219+ 9E35
 220+ 9E35              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E35
 222+ 9E35 CD 29 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E38
 224+ 9E38              ; Iniciamos (Repetimos_mov).
 225+ 9E38
 226+ 9E38 7E               ld a,(hl)
 227+ 9E39 E6 0F            and $0f
 228+ 9E3B 32 EF 88         ld (Repetimos_desplazamiento),a
 229+ 9E3E 32 F0 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E41
 231+ 9E41              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E41
 233+ 9E41 23               inc hl
 234+ 9E42 7E               ld a,(hl)
 235+ 9E43 32 F2 88         ld (Cola_de_desplazamiento),a
 236+ 9E46 2B               dec hl
 237+ 9E47
 238+ 9E47 21 F7 88         ld hl,Ctrl_2
 239+ 9E4A CB D6            set 2,(hl)
 240+ 9E4C
 241+ 9E4C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E4C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E4C
 244+ 9E4C              Desplazamiento_iniciado
 245+ 9E4C
 246+ 9E4C CD FD 9E         call Aplica_desplazamiento
 247+ 9E4F
 248+ 9E4F 3A F7 88         ld a,(Ctrl_2)
 249+ 9E52 CB 67            bit 4,a
 250+ 9E54 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E55
 252+ 9E55 21 EF 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E58 35               dec (hl)
 254+ 9E59 C0               ret nz
 255+ 9E5A
 256+ 9E5A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E5A              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E5A              ; Analiza (Cola_de_desplazamiento).
 259+ 9E5A
 260+ 9E5A 3A F2 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E5D A7               and a
 262+ 9E5E CC 52 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E61 28 30            jr z,Reinicia_el_movimiento
 264+ 9E63
 265+ 9E63 FE FF            cp $ff
 266+ 9E65 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E67
 268+ 9E67 FE FE            cp $fe
 269+ 9E69 CC D6 9E         call z,Fijamos_bucle
 270+ 9E6C 28 25            jr z,Reinicia_el_movimiento
 271+ 9E6E
 272+ 9E6E FE FD            cp $fd
 273+ 9E70 20 11            jr nz,1F
 274+ 9E72
 275+ 9E72              ; ---
 276+ 9E72              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E72
 278+ 9E72 3A F7 88         ld a,(Ctrl_2)
 279+ 9E75 CB 5F            bit 3,a
 280+ 9E77 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E79
 282+ 9E79              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E79
 284+ 9E79 21 F7 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E7C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E7E
 287+ 9E7E CD E7 9E         call Inicia_Repetimos_movimiento
 288+ 9E81 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E83              ; ---
 290+ 9E83
 291+ 9E83 FE 01        1 cp 1
 292+ 9E85 CA C0 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E88
 294+ 9E88 3D               dec a
 295+ 9E89 32 F2 88         ld (Cola_de_desplazamiento),a
 296+ 9E8C
 297+ 9E8C 3A F0 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E8F 32 EF 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E92              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E92 C9               ret
 301+ 9E93
 302+ 9E93              Reinicia_el_movimiento
 303+ 9E93
 304+ 9E93 3A F7 88         ld a,(Ctrl_2)
 305+ 9E96 CB 5F            bit 3,a
 306+ 9E98 28 1B            jr z,2F
 307+ 9E9A
 308+ 9E9A              ; (Cola_de_desplazamiento)="254".
 309+ 9E9A
 310+ 9E9A 21 F1 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E9D 35               dec (hl)
 312+ 9E9E 20 15            jr nz,2F
 313+ 9EA0
 314+ 9EA0              ; Fin de las repeticiones del último movimiento.
 315+ 9EA0
 316+ 9EA0 21 F7 88         ld hl,Ctrl_2
 317+ 9EA3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9EA5
 319+ 9EA5 2A E9 88         ld hl,(Puntero_mov)
 320+ 9EA8 23               inc hl
 321+ 9EA9 23               inc hl
 322+ 9EAA 23               inc hl
 323+ 9EAB 22 E9 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EAE              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EAE 7E               ld a,(hl)
 326+ 9EAF 32 F2 88         ld (Cola_de_desplazamiento),a
 327+ 9EB2
 328+ 9EB2 C3 5A 9E         jp Cola
 329+ 9EB5
 330+ 9EB5 CD F2 9E     2 call Inicia_Puntero_mov
 331+ 9EB8
 332+ 9EB8 21 F7 88         ld hl,Ctrl_2
 333+ 9EBB CB 96            res 2,(hl)
 334+ 9EBD
 335+ 9EBD C3 2A 9E         jp Movimiento
 336+ 9EC0
 337+ 9EC0              Siguiente_desplazamiento
 338+ 9EC0
 339+ 9EC0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9EC0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9EC0
 342+ 9EC0 21 F7 88         ld hl,Ctrl_2
 343+ 9EC3 CB 96            res 2,(hl)
 344+ 9EC5
 345+ 9EC5 2A E9 88         ld hl,(Puntero_mov)
 346+ 9EC8 23               inc hl
 347+ 9EC9 23               inc hl
 348+ 9ECA 22 E9 88         ld (Puntero_mov),hl
 349+ 9ECD
 350+ 9ECD 7E               ld a,(hl)
 351+ 9ECE A7               and a
 352+ 9ECF CC 52 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9ED2 CA 93 9E         jp z,Reinicia_el_movimiento
 354+ 9ED5
 355+ 9ED5 C9               ret
 356+ 9ED6
 357+ 9ED6              ; Subrutinas -----------------------------------------
 358+ 9ED6              ; ---------- --------- --------- ---------- ----------
 359+ 9ED6              ;
 360+ 9ED6              ;   24/07/23
 361+ 9ED6              ;
 362+ 9ED6              ;   Fijamos_bucle
 363+ 9ED6              ;
 364+ 9ED6              ;
 365+ 9ED6
 366+ 9ED6              Fijamos_bucle
 367+ 9ED6
 368+ 9ED6 3A ED 88         ld a,(Incrementa_puntero)
 369+ 9ED9 3C               inc a
 370+ 9EDA 32 EE 88         ld (Incrementa_puntero_backup),a
 371+ 9EDD
 372+ 9EDD CD 52 9F         call Incrementa_Puntero_indice_mov
 373+ 9EE0 2A E7 88         ld hl,(Puntero_indice_mov)
 374+ 9EE3 22 EB 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9EE6 C9               ret
 376+ 9EE7
 377+ 9EE7              ; ---------- --------- --------- ---------- ----------
 378+ 9EE7              ;
 379+ 9EE7              ;   07/7/23
 380+ 9EE7              ;
 381+ 9EE7              ;   Inicia_Repetimos_movimiento
 382+ 9EE7              ;
 383+ 9EE7              ;
 384+ 9EE7
 385+ 9EE7              Inicia_Repetimos_movimiento
 386+ 9EE7
 387+ 9EE7              ; Iniciamos (Repetimos_movimiento).
 388+ 9EE7
 389+ 9EE7 DD 2A E9 88      ld ix,(Puntero_mov)
 390+ 9EEB DD 7E 02         ld a,(ix+2)
 391+ 9EEE 32 F1 88         ld (Repetimos_movimiento),a
 392+ 9EF1
 393+ 9EF1 C9               ret
 394+ 9EF2
 395+ 9EF2              ; ---------- --------- --------- ---------- ----------
 396+ 9EF2              ;
 397+ 9EF2              ;   26/6/23
 398+ 9EF2              ;
 399+ 9EF2              ;   Inicia_Puntero_mov
 400+ 9EF2              ;
 401+ 9EF2              ;
 402+ 9EF2
 403+ 9EF2 2A E7 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9EF5 5E               ld e,(hl)
 405+ 9EF6 23               inc hl
 406+ 9EF7 56               ld d,(hl)
 407+ 9EF8 EB               ex de,hl
 408+ 9EF9 22 E9 88         ld (Puntero_mov),hl
 409+ 9EFC C9               ret
 410+ 9EFD
 411+ 9EFD              ; ---------- --------- --------- ---------- ----------
 412+ 9EFD              ;
 413+ 9EFD              ;   27/06/23
 414+ 9EFD              ;
 415+ 9EFD              ;   Aplica_movimiento.
 416+ 9EFD
 417+ 9EFD              Aplica_desplazamiento
 418+ 9EFD
 419+ 9EFD              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EFD
 421+ 9EFD 2A E9 88         ld hl, (Puntero_mov)
 422+ 9F00
 423+ 9F00 7E               ld a,(hl)
 424+ 9F01 E6 F0            and $f0
 425+ 9F03 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F04
 427+ 9F04 CB 7E            bit 7,(hl)
 428+ 9F06 28 03            jr z,1F
 429+ 9F08 CD 28 99         call Mov_up
 430+ 9F0B 2A E9 88     1 ld hl, (Puntero_mov)
 431+ 9F0E CB 76            bit 6,(hl)
 432+ 9F10 28 03            jr z,2F
 433+ 9F12 CD F7 98         call Mov_down
 434+ 9F15 2A E9 88     2 ld hl, (Puntero_mov)
 435+ 9F18 CB 6E            bit 5,(hl)
 436+ 9F1A 28 03            jr z,3F
 437+ 9F1C CD 89 9A         call Mov_left
 438+ 9F1F 2A E9 88     3 ld hl, (Puntero_mov)
 439+ 9F22 CB 66            bit 4,(hl)
 440+ 9F24 C8               ret z
 441+ 9F25 CD 6B 99         call Mov_right
 442+ 9F28 C9               ret
 443+ 9F29
 444+ 9F29              ; ---------- --------- --------- ---------- ----------
 445+ 9F29              ;
 446+ 9F29              ;   26/06/23
 447+ 9F29              ;
 448+ 9F29              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F29
 450+ 9F29              Ajusta_velocidad_desplazamiento
 451+ 9F29
 452+ 9F29              ; 1er byte de la cadena de movimiento.
 453+ 9F29              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F29
 455+ 9F29 CD 47 9F         call Extrae_nibble_alto
 456+ 9F2C
 457+ 9F2C 32 D1 88         ld (Vel_up),a
 458+ 9F2F 79               ld a,c
 459+ 9F30 E6 0F            and $0f
 460+ 9F32 32 D2 88         ld (Vel_down),a
 461+ 9F35
 462+ 9F35              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F35              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F35
 465+ 9F35 23               inc hl
 466+ 9F36 CD 47 9F         call Extrae_nibble_alto
 467+ 9F39
 468+ 9F39 32 CF 88         ld (Vel_left),a
 469+ 9F3C 79               ld a,c
 470+ 9F3D E6 0F            and $0f
 471+ 9F3F 32 D0 88         ld (Vel_right),a
 472+ 9F42
 473+ 9F42              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F42
 475+ 9F42 23               inc hl
 476+ 9F43 22 E9 88         ld (Puntero_mov),hl
 477+ 9F46 C9               ret
 478+ 9F47
 479+ 9F47 06 04        Extrae_nibble_alto ld b,4
 480+ 9F49 7E               ld a,(hl)
 481+ 9F4A 4F               ld c,a
 482+ 9F4B E6 F0            and $f0
 483+ 9F4D CB 3F        1 srl a
 484+ 9F4F 10 FC            djnz 1B
 485+ 9F51 C9               ret
 486+ 9F52
 487+ 9F52              ; ---------- --------- --------- ---------- ----------
 488+ 9F52              ;
 489+ 9F52              ;   5/7/23
 490+ 9F52              ;
 491+ 9F52              ;   Incrementa_Puntero_indice_mov
 492+ 9F52
 493+ 9F52              Incrementa_Puntero_indice_mov
 494+ 9F52
 495+ 9F52 21 ED 88         ld hl,Incrementa_puntero
 496+ 9F55 34               inc (hl)
 497+ 9F56
 498+ 9F56 2A E7 88         ld hl,(Puntero_indice_mov)
 499+ 9F59 01 02 00         ld bc,2
 500+ 9F5C A7               and a
 501+ 9F5D 09               add hl,bc
 502+ 9F5E 22 E7 88         ld (Puntero_indice_mov),hl
 503+ 9F61
 504+ 9F61 7E               ld a,(hl)
 505+ 9F62 A7               and a
 506+ 9F63
 507+ 9F63              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F63
 509+ 9F63              ;    jr z,$
 510+ 9F63
 511+ 9F63              ;! Reinicia el Patrón de movimiento.
 512+ 9F63
 513+ 9F63 CC 68 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F66
 515+ 9F66 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F67
 517+ 9F67 C9               ret
 518+ 9F68
 519+ 9F68
 520+ 9F68              ; ---------- --------- --------- ---------- ----------
 521+ 9F68              ;
 522+ 9F68              ;   24/07/23
 523+ 9F68              ;
 524+ 9F68              ;   Inicializa_Puntero_indice_mov
 525+ 9F68
 526+ 9F68              Inicializa_Puntero_indice_mov
 527+ 9F68
 528+ 9F68              ; Existe etiqueta de bucle principal???
 529+ 9F68
 530+ 9F68 2A EB 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F6B 24               inc h
 532+ 9F6C 25               dec h
 533+ 9F6D 28 05            jr z,2F
 534+ 9F6F
 535+ 9F6F 22 E7 88         ld (Puntero_indice_mov),hl
 536+ 9F72 18 14            jr 3F
 537+ 9F74
 538+ 9F74              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F74
 540+ 9F74 3A ED 88     2 ld a,(Incrementa_puntero)
 541+ 9F77 47               ld b,a
 542+ 9F78
 543+ 9F78 2A E7 88         ld hl,(Puntero_indice_mov)
 544+ 9F7B 2B           1 dec hl
 545+ 9F7C 2B               dec hl
 546+ 9F7D 10 FC            djnz 1B
 547+ 9F7F 22 E7 88         ld (Puntero_indice_mov),hl
 548+ 9F82
 549+ 9F82 AF               xor a
 550+ 9F83 32 ED 88         ld (Incrementa_puntero),a
 551+ 9F86 18 06            jr 4F
 552+ 9F88
 553+ 9F88 3A EE 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F8B 32 ED 88         ld (Incrementa_puntero),a
 555+ 9F8E C9           4 ret
 556+ 9F8F
 557+ 9F8F
 558+ 9F8F
# file closed: Patrones_de_mov.asm
1521  9F8F              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F8F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F8F              ;
   3+ 9F8F              ;	27/10/23
   4+ 9F8F              ;
   5+ 9F8F              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F8F
   7+ 9F8F              ;	ADC HL,SP	LD (addr),SP
   8+ 9F8F              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F8F              ;	ADD IX,SP	LD SP,nn
  10+ 9F8F              ; 	ADD IY,SP	LD SP,HL
  11+ 9F8F              ;				LD SP,IX
  12+ 9F8F              ;	DEC SP		LD SP,IY
  13+ 9F8F
  14+ 9F8F              ;	EX (SP),HL
  15+ 9F8F              ;	EX (SP),IX
  16+ 9F8F              ;	EX (SP),IY
  17+ 9F8F
  18+ 9F8F              ;	INC SP
  19+ 9F8F
  20+ 9F8F                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 0A 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 DA 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A F9 88         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 12 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A E6 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 16 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 10 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A F9 88         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 12 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A E6 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 16 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 0A 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 10 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 0A 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC FB               ei
 107+ 7FFD C9               ret
 108+ 7FFE
 109+ 7FFE              ; -----------------------------------------------------------------------------
 110+ 7FFE              ;
 111+ 7FFE              ;   21/11/23
 112+ 7FFE
 113+ 7FFE              Limpia_y_reinicia_Stack_Snapshot
 114+ 7FFE
 115+ 7FFE              ;   Limpia Album_de_fotos.
 116+ 7FFE
 117+ 7FFE 2A 10 89         ld hl,(Stack_snapshot)
 118+ 8001 7D               ld a,l
 119+ 8002 A7               and a
 120+ 8003 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8004
 122+ 8004 47               ld b,a
 123+ 8005 04               inc b
 124+ 8006
 125+ 8006 36 00        1 ld (hl),0
 126+ 8008 2D               dec l
 127+ 8009 10 FB            djnz 1B
 128+ 800B
 129+ 800B              ;   Reinicializa (Stack_snapshot).
 130+ 800B
 131+ 800B AF               xor a
 132+ 800C 32 10 89         ld (Stack_snapshot),a
 133+ 800F
 134+ 800F C9               ret
# file closed: Guarda_foto_registros.asm
1522  8010
1523  8010              	SAVESNA "Pruebas.sna", START
1524  8010
1525  8010
1526  8010
1527  8010
# file closed: Banco_de_pruebas.asm
