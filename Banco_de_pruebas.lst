# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A5 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A AF 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 03        	jr z,1F
  42  AA20
  43  AA20 CD FF 91     	call Extrae_foto_entidades
  44  AA23
  45  AA23              ;	ld a,6
  46  AA23              ;	out ($fe),a
  47  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  48  AA23
  49  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  50  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  51  AA23
  52  AA23              ;	ld a,7
  53  AA23              ;	out ($fe),a												; Borde blanco.
  54  AA23              ;	call Guarda_parametros_DRAW
  55  AA23              ;	call Restore_Amadeus
  56  AA23
  57  AA23              ; Posible colisión Entidad-Amadeus ???
  58  AA23
  59  AA23              ;	ld a,(Impacto2)
  60  AA23              ;	bit 2,a
  61  AA23              ;	jr z,1F
  62  AA23
  63  AA23              ;	call Detecta_colision_nave_entidad
  64  AA23
  65  AA23              ;1 ld a,4
  66  AA23              ;	out ($fe),a
  67  AA23              ;	call Gestiona_Amadeus
  68  AA23
  69  AA23              ;	ld a,7
  70  AA23              ;	out ($fe),a											; Borde blanco.
  71  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  72  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  73  AA23
  74  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  75  AA23
  76  AA23              ;	call Recupera_parametros_DRAW
  77  AA23
  78  AA23 CD E0 8C     1 call Actualiza_relojes
  79  AA26
  80  AA26 21 AF 89     	ld hl,Ctrl_3
  81  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  82  AA2B
  83  AA2B FD E1        	pop iy
  84  AA2D DD E1        	pop ix
  85  AA2F F1           	pop af
  86  AA30 C1           	pop bc
  87  AA31 D1           	pop de
  88  AA32 E1           	pop hl
  89  AA33 D9           	exx
  90  AA34 C1           	pop bc
  91  AA35 D1           	pop de
  92  AA36 E1           	pop hl
  93  AA37 08           	ex af,af'
  94  AA38 F1           	pop af
  95  AA39 08           	ex af,af'
  96  AA3A D9           	exx
  97  AA3B
  98  AA3B ED 7B A5 89  	ld sp,(Stack_3)
  99  AA3F
 100  AA3F FB           	ei
 101  AA40
 102  AA40 3E 01        	ld a,1												; Borde azul.
 103  AA42 D3 FE        	out ($fe),a
 104  AA44
 105  AA44 C9           	ret
 106  AA45
 107  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 108  AA45
 109  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 110  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 111  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 112  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 3B 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8939 01 01
  18+ 893B
  19+ 893B 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893C 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8940 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8944 01 02
  22+ 8946 02 01 01 01  	db 2,1,1,1,1,2
  22+ 894A 01 02
  23+ 894C
# file closed: Niveles.asm
 113  894C
 114  894C              ; ******************************************************************************************************************************************************************************************
 115  894C              ; Constantes.
 116  894C              ; ******************************************************************************************************************************************************************************************
 117  894C              ;
 118  894C              ; 25/12/23
 119  894C
 120  894C              ;
 121  894C              ; Constantes.
 122  894C              ;
 123  894C
 124  894C              Sprite_vacio equ $eae0
 125  894C              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 126  894C              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 127  894C              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 128  894C              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 129  894C
 130  894C              Almacen_de_scanlines_masticados equ $e9df
 131  894C              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 132  894C
 133  894C              Almacen_de_movimientos_masticados_Amadeus equ $e700
 134  894C              ;
 135  894C              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 136  894C              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 137  894C              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 138  894C              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 139  894C              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 140  894C              ;														; 55 Bytes.
 141  894C
 142  894C              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 143  894C              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 144  894C
 145  894C              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 146  894C
 147  894C              ; ******************************************************************************************************************************************************************************************
 148  894C              ; Variables.
 149  894C              ; ******************************************************************************************************************************************************************************************
 150  894C              ;
 151  894C              ; 18/01/24
 152  894C              ;
 153  894C              ; Variables de DRAW. (Motor principal).	42 Bytes.
 154  894C              ;
 155  894C
 156  894C              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 157  894C
 158  894C 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 159  894D              ;															- Patrón de movimiento.
 160  894D              ;															- Aspecto
 161  894D 00           Filas db 0												; Filas. [DRAW]
 162  894E 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 163  894F 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 164  8951 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 165  8953 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 166  8954 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 167  8955
 168  8955              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 169  8955
 170  8955 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 171  8956              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 172  8956              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 173  8956 00           Attr db 0												; Atributos de la entidad:
 174  8957
 175  8957              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 176  8957              ;
 177  8957              ;	COLORES: 0 ..... NEGRO
 178  8957              ;    		 1 ..... AZUL
 179  8957              ; 			 2 ..... ROJO
 180  8957              ;			 3 ..... MAGENTA
 181  8957              ; 			 4 ..... VERDE
 182  8957              ; 			 5 ..... CIAN
 183  8957              ;			 6 ..... AMARILLO
 184  8957              ; 			 7 ..... BLANCO
 185  8957
 186  8957 00 00        Indice_Sprite_der defw 0
 187  8959 00 00        Indice_Sprite_izq defw 0
 188  895B 00 00        Puntero_DESPLZ_der defw 0
 189  895D 00 00        Puntero_DESPLZ_izq defw 0
 190  895F
 191  895F 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 192  8961 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 193  8962
 194  8962              ; Variables de objeto. (Características).
 195  8962
 196  8962 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 197  8963              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 198  8963              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 199  8963 00 00 00...  Variables_de_borrado ds 6
 200  8969
 201  8969 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 202  896B              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 203  896B
 204  896B 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 205  896D
 206  896D              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 207  896D              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 208  896D
 209  896D 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 210  896F              ;														; _palabras que componen el "movimiento_masticado".
 211  896F
 212  896F              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 213  896F
 214  896F 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 215  8970              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 216  8970              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 217  8970              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 218  8970              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 219  8970              ;
 220  8970              ; 														DESCRIPCIÖN:
 221  8970              ;
 222  8970              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 223  8970              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 224  8970              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 225  8970              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 226  8970              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 227  8970              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 228  8970              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 229  8970              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 230  8970              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 231  8970              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 232  8970              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 233  8970              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 234  8970              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 235  8970              ;
 236  8970              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 237  8970              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 238  8970              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 239  8970
 240  8970              ; Variables de funcionamiento. [DRAW].
 241  8970
 242  8970 00           Columnas db 0
 243  8971 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 244  8973              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 245  8973 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 246  8974
 247  8974              ; variables de control general.
 248  8974
 249  8974 00           Ctrl_2 db 0
 250  8975              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 251  8975              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 252  8975              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 253  8975              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 254  8975              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 255  8975              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 256  8975              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 257  8975              ;
 258  8975              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 259  8975              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 260  8975              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 261  8975              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 262  8975              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 263  8975              ;														BIT 4, ???
 264  8975              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 265  8975
 266  8975 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 267  8976
 268  8976              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 269  8976
 270  8976              ;					         		---------;      ;---------
 271  8976
 272  8976              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 273  8976
 274  8976              Perfiles_de_velocidad
 275  8976
 276  8976 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 277  8977 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 278  8978 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 279  8979 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 280  897A
 281  897A              ; Contadores de 16 bits.
 282  897A
 283  897A 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 284  897C 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 285  897E 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 286  8980 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 287  8982
 288  8982              ; Movimiento. ------------------------------------------------------------------------------------------------------
 289  8982
 290  8982 DF E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 291  8984
 292  8984 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 293  8986 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 294  8988 00 00        Puntero_indice_mov_bucle defw 0							;
 295  898A              ;
 296  898A              ;
 297  898A 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 298  898B              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 299  898B              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 300  898B 00           Incrementa_puntero_backup db 0
 301  898C 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 302  898D              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 303  898D 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 304  898E 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 305  898F 00           Cola_de_desplazamiento db 0								; Este byte indica:
 306  8990              ;
 307  8990              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 308  8990              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 309  8990              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 310  8990              ;
 311  8990              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 312  8990              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 313  8990              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 314  8990              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 315  8990              ;
 316  8990              ;														;	"$ff" ..... Bucle infinito de repetición.
 317  8990              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 318  8990              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 319  8990              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 320  8990
 321  8990 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 322  8991
 323  8991              ;														DESCRIPCIÓN:
 324  8991              ;
 325  8991              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 326  8991              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 327  8991              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 328  8991              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 329  8991              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 330  8991              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 331  8991
 332  8991              ;														BIT 3, Recarga de nueva oleada.
 333  8991              ;														BIT 4, Recarga de nueva oleada.
 334  8991              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 335  8991              ;														BIT 6, **** Frame completo.
 336  8991              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 337  8991
 338  8991 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 339  8993              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 340  8993              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 341  8993              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 342  8993
 343  8993              ; Gestión de ENTIDADES y CAJAS.
 344  8993
 345  8993 00 00        Puntero_store_caja defw 0
 346  8995 00 00        Puntero_restore_caja defw 0
 347  8997 00 00        Indice_restore_caja defw 0
 348  8999 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 349  899A 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 350  899B 00           Entidades_en_curso db 0									; ..... ..... .....
 351  899C 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 352  899D              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 353  899D              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 354  899D              ;														; _ (Numero_de_malotes)="0".
 355  899D 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 356  899F 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 357  89A1              ;														; _ puntero (Indice_entidades).
 358  89A1
 359  89A1              ;---------------------------------------------------------------------------------------------------------------
 360  89A1              ;
 361  89A1              ;	11/01/24
 362  89A1              ;
 363  89A1              ;	Álbumes.
 364  89A1
 365  89A1 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 366  89A3              ;														; _variable para almacenar lo posición del puntero_
 367  89A3              ; 														; _de pila, SP.
 368  89A3 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 369  89A5              ;														; La utiliza la rutina [Extrae_foto_registros].
 370  89A5 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 371  89A7 00 80        Stack_snapshot defw Album_de_fotos
 372  89A9 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 373  89AB
 374  89AB              ;End_Snapshot defw Album_de_fotos
 375  89AB              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 376  89AB 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 377  89AD              ;														; _el snapshot de los registros del siguiente disparo.
 378  89AD              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 379  89AD AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 380  89AF
 381  89AF 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 382  89B0              ;
 383  89B0              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 384  89B0              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 385  89B0              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 386  89B0
 387  89B0 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 388  89B1              ;
 389  89B1              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 390  89B1              ;
 391  89B1              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 392  89B1              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 393  89B1              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 394  89B1              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 395  89B1              ;
 396  89B1              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 397  89B1              ;															_ masticados ya generados.
 398  89B1              ;
 399  89B1              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 400  89B1              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 401  89B1              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 402  89B1              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 403  89B1
 404  89B1
 405  89B1              ; Gestión de Disparos.
 406  89B1
 407  89B1 00           Numero_de_disparotes db 0
 408  89B2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 409  89B4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 410  89B6 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 411  89B7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 412  89B7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 413  89B7 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 414  89B9              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 415  89B9              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 416  89B9              ;														; _produzca colisión.
 417  89B9 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 418  89BB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 419  89BB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 420  89BE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 421  89BE 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 422  89C1              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 423  89C1 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 424  89C2
 425  89C2              ;---------------------------------------------------------------------------------------------------------------
 426  89C2
 427  89C2              ; Relojes y temporizaciones.
 428  89C2
 429  89C2 00           Contador_de_frames db 0
 430  89C3 00           Contador_de_frames_2 db 0
 431  89C4
 432  89C4 04           Clock_explosion db 4
 433  89C5 14           Clock_Entidades_en_curso db 20
 434  89C6 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 435  89C7              ;														; Repite la oleada de entidades.
 436  89C7 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 437  89C8 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 438  89C9 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 439  89CA
 440  89CA 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 441  89CB 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 442  89CC 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 443  89CD
 444  89CD              ;---------------------------------------------------------------------------------------------------------------
 445  89CD
 446  89CD              ; Gestión de NIVELES.
 447  89CD
 448  89CD 00           Nivel db 0												; Nivel actual del juego.
 449  89CE 00 00        Puntero_indice_NIVELES defw 0
 450  89D0 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 451  89D2              ; 														; _ que definen el NIVEL.
 452  89D2              ; Y todo comienza aquí .....
 453  89D2              ;
 454  89D2              ; 	INICIO  *************************************************************************************************************************************************************************
 455  89D2              ;
 456  89D2              ;	5/1/24
 457  89D2
 458  89D2              START
 459  89D2
 460  89D2 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 461  89D5 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 462  89D7 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 463  89D9 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 464  89DB F3           	DI
 465  89DC
 466  89DC              ;	ld a,%00000111
 467  89DC              ;	call Cls
 468  89DC CD 51 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 469  89DF
 470  89DF              ; INICIALIZACIÓN.
 471  89DF
 472  89DF              ;	Inicializa 1er Nivel.
 473  89DF
 474  89DF 21 28 89     	ld hl,Indice_de_niveles
 475  89E2 22 CE 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 476  89E5 CD F2 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 477  89E8
 478  89E8              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 479  89E8              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 480  89E8              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 481  89E8
 482  89E8              ;	Provisional, (para desarrollo).
 483  89E8
 484  89E8              	;-
 485  89E8              ;	ld hl,Numero_parcial_de_entidades
 486  89E8              ;	ld b,(hl)
 487  89E8              ;	inc b
 488  89E8              ;	dec b
 489  89E8              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 490  89E8
 491  89E8 CD 37 8D     4 call Inicia_Entidades
 492  89EB
 493  89EB CD 14 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 494  89EE
 495  89EE              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 496  89EE              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 497  89EE              ; (Esto se dá cuando se inicia una nueva oleada).
 498  89EE
 499  89EE              ;	ld a,(Ctrl_1)
 500  89EE              ;	bit 3,a
 501  89EE              ;	jr nz,5F											; Loop
 502  89EE
 503  89EE              ; 	INICIA AMADEUS !!!!!
 504  89EE
 505  89EE              ;3 call Restore_Amadeus
 506  89EE              ;	call Inicia_Puntero_objeto
 507  89EE              ;	call Draw
 508  89EE
 509  89EE              ;	call Guarda_movimiento_masticado	;! Provisional
 510  89EE
 511  89EE              ;	call Guarda_foto_registros
 512  89EE              ;	call Guarda_datos_de_borrado_Amadeus
 513  89EE
 514  89EE              ;	ld de,Amadeus_db
 515  89EE              ;	call Store_Amadeus
 516  89EE
 517  89EE              ; 	INICIA DISPAROS !!!!!
 518  89EE
 519  89EE              ;	call Inicia_Puntero_Disparo_Entidades
 520  89EE              ;	call Inicia_Puntero_Disparo_Amadeus
 521  89EE
 522  89EE              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 523  89EE
 524  89EE              ;5 call Inicia_punteros_de_cajas
 525  89EE              ;	call Restore_entidad
 526  89EE
 527  89EE              ;	ld a,(Ctrl_1)
 528  89EE              ;	bit 3,a
 529  89EE              ;	jr z,6F
 530  89EE
 531  89EE              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 532  89EE
 533  89EE              ;	ld hl,Ctrl_1
 534  89EE              ;	res 3,(hl)
 535  89EE              ;	jr Main
 536  89EE
 537  89EE              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 538  89EE
 539  89EE              6
 540  89EE CD 60 8B     	call Calcula_numero_de_malotes
 541  89F1
 542  89F1 21 AF 89     	ld hl,Ctrl_3
 543  89F4 CB C6        	set 0,(hl)											; Frame completo.
 544  89F6 FB           	ei
 545  89F7 76           	halt
 546  89F8
 547  89F8              ; ------------------------------------
 548  89F8
 549  89F8              Main
 550  89F8              ;
 551  89F8              ;	11/12/23
 552  89F8
 553  89F8              ; Aparece nueva entidad ???
 554  89F8
 555  89F8              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 556  89F8              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 557  89F8              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 558  89F8              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 559  89F8              ;														; _un 2º bloque.
 560  89F8
 561  89F8              ;	ld a,1
 562  89F8              ;	out ($fe),a
 563  89F8
 564  89F8 CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar el limpiar el álbum de fotos e inicializar
 565  89FB              ; 													 	; _(Stack_snapshot).
 566  89FB
 567  89FB 3A C5 89     	ld a,(Clock_Entidades_en_curso)
 568  89FE 47           	ld b,a
 569  89FF 3A C2 89     	ld a,(Contador_de_frames)
 570  8A02 B8           	cp b
 571  8A03 20 18        	jr nz,13F
 572  8A05
 573  8A05              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 574  8A05              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 575  8A05
 576  8A05 3A 9A 89     21 ld a,(Numero_parcial_de_entidades)
 577  8A08 47           	ld b,a
 578  8A09 3A 9B 89     	ld a,(Entidades_en_curso)
 579  8A0C B8           	cp b
 580  8A0D 28 0E        	jr z,13F
 581  8A0F 30 0C        	jr nc,13F
 582  8A11
 583  8A11 3C           	inc a
 584  8A12 32 9B 89     	ld (Entidades_en_curso),a
 585  8A15
 586  8A15              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 587  8A15
 588  8A15 3A C5 89     	ld a,(Clock_Entidades_en_curso)
 589  8A18              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 590  8A18              ;! _ IMPREDECIBLE !!!!
 591  8A18 C6 64        	add 100
 592  8A1A 32 C5 89     	ld (Clock_Entidades_en_curso),a
 593  8A1D
 594  8A1D              ; -------------------------------------------------------------------------------------------------------------
 595  8A1D
 596  8A1D              ; Habilita disparos.
 597  8A1D
 598  8A1D              13
 599  8A1D
 600  8A1D              ;	ld hl,Disparo_Amadeus
 601  8A1D              ;	ld de,CLOCK_repone_disparo_Amadeus
 602  8A1D              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 603  8A1D
 604  8A1D              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 605  8A1D              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 606  8A1D              ;	call Habilita_disparos
 607  8A1D
 608  8A1D              ; COLISIONES.
 609  8A1D
 610  8A1D              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 611  8A1D
 612  8A1D              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 613  8A1D              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 614  8A1D              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 615  8A1D
 616  8A1D              ;	xor a
 617  8A1D              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 618  8A1D
 619  8A1D              ;	call Inicia_punteros_de_cajas
 620  8A1D              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 621  8A1D              ; 														; _ en DRAW.
 622  8A1D
 623  8A1D              ;	ld a,(Filas)
 624  8A1D              ;	and a
 625  8A1D              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 626  8A1D              ;	call Incrementa_punteros_de_cajas
 627  8A1D              ;	jr 12B
 628  8A1D
 629  8A1D              ; ---------------------------------------------------------------------------------------
 630  8A1D
 631  8A1D 3A 9A 89     10 ld a,(Numero_parcial_de_entidades)
 632  8A20 47               ld b,a
 633  8A21 A7           	and a
 634  8A22 20 00        	jr nz,11F
 635  8A24
 636  8A24              ;	ld hl,Ctrl_1;
 637  8A24              ;	bit 4,(hl)
 638  8A24              ;	jp nz,16F
 639  8A24
 640  8A24              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 641  8A24
 642  8A24              ;	ld hl,Ctrl_1
 643  8A24              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 644  8A24
 645  8A24              ;	ld a,(Contador_de_frames)
 646  8A24              ;	inc a
 647  8A24              ;	ld (Activa_recarga_cajas),a
 648  8A24
 649  8A24              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 650  8A24
 651  8A24 3A 9B 89     11 ld a,(Entidades_en_curso)
 652  8A27 A7           	and a
 653  8A28 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 654  8A2A 47           	ld b,a												; No hay entidades que gestionar.
 655  8A2B
 656  8A2B              ; ( Código que ejecutamos con cada entidad: ).
 657  8A2B
 658  8A2B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 659  8A2B
 660  8A2B C5           15 push bc 												; Nº de entidades en curso.
 661  8A2C
 662  8A2C CD E7 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 663  8A2F
 664  8A2F
 665  8A2F 3A AF 89     	ld a,(Ctrl_3)
 666  8A32 CB 57        	bit 2,a
 667  8A34 F3           	di
 668  8A35 20 FE        	jr nz,$
 669  8A37 FB           	ei
 670  8A38
 671  8A38
 672  8A38
 673  8A38
 674  8A38              ; Existe "Entidad_guía" ???.
 675  8A38              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 676  8A38
 677  8A38              ;	ld a,(Ctrl_3)
 678  8A38              ;	bit 1,a
 679  8A38              ;	jr nz,22F
 680  8A38
 681  8A38              ; Almacén de "Movimientos_masticados" lleno ???
 682  8A38              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 683  8A38              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 684  8A38
 685  8A38              ;;	ld a,(Ctrl_3)
 686  8A38              ;;	bit 3,a
 687  8A38              ;;	jr nz,22F
 688  8A38
 689  8A38              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 690  8A38
 691  8A38              ;	ld hl,Ctrl_2
 692  8A38              ;	set 5,(hl)
 693  8A38              ;	ld hl,Ctrl_3
 694  8A38              ;	set 1,(hl)
 695  8A38
 696  8A38              ; Impacto ???
 697  8A38
 698  8A38              ;22 ld a,(Impacto)
 699  8A38              ;	and a
 700  8A38              ;	jr z,8F
 701  8A38
 702  8A38              ; Hay Impacto en esta entidad.
 703  8A38
 704  8A38              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 705  8A38              ;	dec (hl)
 706  8A38              ;	jp nz,17F
 707  8A38
 708  8A38              ;! Velocidad de la animación de la explosión.
 709  8A38
 710  8A38              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 711  8A38              ;														; _,(velocidad de la explosión).
 712  8A38              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 713  8A38
 714  8A38              ;	call Repone_datos_de_borrado
 715  8A38              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 716  8A38
 717  8A38              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 718  8A38
 719  8A38              ;	ld a,(Ctrl_2)
 720  8A38              ;	bit 1,a
 721  8A38              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 722  8A38
 723  8A38              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 724  8A38
 725  8A38              ;	ld a,(CTRL_DESPLZ)
 726  8A38              ;	and a
 727  8A38              ;	jr nz,18F
 728  8A38
 729  8A38              ;	ld hl,Indice_Explosion_2x2-2
 730  8A38              ;	ld (Puntero_DESPLZ_der),hl
 731  8A38              ;	jr 19F
 732  8A38
 733  8A38              ;18 ld hl,Indice_Explosion_2x3-2
 734  8A38              ;	ld (Puntero_DESPLZ_der),hl
 735  8A38
 736  8A38              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 737  8A38              ;	set 1,(hl)
 738  8A38              ;	jr 7F
 739  8A38
 740  8A38              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 741  8A38              ; _con las coordenadas de la entidad almacenada en DRAW.
 742  8A38
 743  8A38              ;8 ld a,(Ctrl_1)
 744  8A38              ;	bit 2,a
 745  8A38              ;	jr z,7F
 746  8A38
 747  8A38              ;	ld hl,(Coordenadas_disparo_certero)
 748  8A38              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 749  8A38              ;														; E contiene la coordenada_X del disparo.
 750  8A38              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 751  8A38              ;														; H FILA, (Coordenada_y de la entidad).
 752  8A38              ;	and a
 753  8A38              ;	sbc hl,de
 754  8A38
 755  8A38              ;	call Determina_resultado_comparativa
 756  8A38
 757  8A38              ;	ld a,b
 758  8A38              ;	and a
 759  8A38              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 760  8A38
 761  8A38              ; ----- ----- -----
 762  8A38
 763  8A38              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 764  8A38              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 765  8A38
 766  8A38              ;	ld hl,Ctrl_1
 767  8A38              ;	res 2,(hl)
 768  8A38
 769  8A38 CD 57 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 770  8A3B
 771  8A3B              ;	ld a,(Ctrl_0)
 772  8A3B              ;	bit 4,a
 773  8A3B              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 774  8A3B
 775  8A3B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 776  8A3B              ; [[[
 777  8A3B              ;	call Detecta_disparo_entidad
 778  8A3B              ; ]]]
 779  8A3B
 780  8A3B CD A1 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 781  8A3E
 782  8A3E              ;	ld hl,Ctrl_0
 783  8A3E              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 784  8A3E
 785  8A3E CD 91 8D     17 call Store_Restore_cajas
 786  8A41
 787  8A41 C1           	pop bc
 788  8A42
 789  8A42 10 E7        	djnz 15B
 790  8A44
 791  8A44 CD 14 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 792  8A47
 793  8A47              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 794  8A47              ; Hemos gestionado todas las unidades.
 795  8A47              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 796  8A47
 797  8A47              ;	ld hl,Ctrl_1
 798  8A47              ;	res 2,(hl)
 799  8A47
 800  8A47              16
 801  8A47
 802  8A47 CD 60 8B     	call Calcula_numero_de_malotes
 803  8A4A
 804  8A4A 21 AF 89     	ld hl,Ctrl_3
 805  8A4D CB C6        	set 0,(hl)											; Frame completo.
 806  8A4F
 807  8A4F AF           	xor a
 808  8A50 D3 FE        	out ($fe),a
 809  8A52
 810  8A52 76           	halt
 811  8A53
 812  8A53              ; ----------------------------------------
 813  8A53
 814  8A53              ;	ld a,(Ctrl_1) 										; Existe Loop?
 815  8A53              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 816  8A53 CA F8 89     	jp z,Main
 817  8A56
 818  8A56              ; RECARGA DE NUEVA OLEADA.
 819  8A56
 820  8A56              ;	ld a,(Contador_de_frames)
 821  8A56              ;	ld b,a
 822  8A56              ;	ld a,(Activa_recarga_cajas)
 823  8A56              ;	cp b
 824  8A56              ;	jr z,20F
 825  8A56
 826  8A56              ;	ld hl,Ctrl_1
 827  8A56              ;	set 4,(hl)
 828  8A56              ;	jp Main
 829  8A56
 830  8A56              ;20 ld hl,Ctrl_1
 831  8A56              ;	res 4,(hl)
 832  8A56
 833  8A56              ;	ld a,(Contador_de_frames)
 834  8A56
 835  8A56              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 836  8A56              ;! _ IMPREDECIBLE !!!!
 837  8A56
 838  8A56              ;	add 10
 839  8A56              ;	ld (Clock_Entidades_en_curso),a
 840  8A56
 841  8A56              ;	jp 4B
 842  8A56
 843  8A56 C9           	ret
 844  8A57
 845  8A57              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 846  8A57              ;
 847  8A57              ;	16/11/23
 848  8A57
 849  8A57              ;;Gestiona_Amadeus
 850  8A57
 851  8A57              ;! Activa/desactiva impacto con Amadeus.
 852  8A57
 853  8A57              ;	ld a,(Impacto)
 854  8A57              ;	and a
 855  8A57              ;	jr nz,2F
 856  8A57
 857  8A57              ;;	call Mov_Amadeus
 858  8A57
 859  8A57              ;;2 ld a,(Ctrl_0)
 860  8A57              ;;	bit 4,a
 861  8A57              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 862  8A57
 863  8A57              ;;	call Guarda_foto_entidad_a_pintar
 864  8A57              ;;	call Guarda_datos_de_borrado_Amadeus
 865  8A57
 866  8A57              ;;1 ld hl,Ctrl_0
 867  8A57              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 868  8A57
 869  8A57              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 870  8A57
 871  8A57              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 872  8A57
 873  8A57              ;	call Calcula_numero_de_disparotes
 874  8A57
 875  8A57              ;;	ret
 876  8A57
 877  8A57              ; --------------------------------------------------------------------------------------------------------------
 878  8A57              ;
 879  8A57              ;	15/12/23
 880  8A57
 881  8A57              Mov_obj
 882  8A57
 883  8A57              ;	ld a,(Ctrl_2)
 884  8A57              ;	bit 1,a
 885  8A57              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 886  8A57
 887  8A57              ; Explosión:
 888  8A57
 889  8A57              ;	ld a,(Frames_explosion)
 890  8A57              ;	and a
 891  8A57              ;	jr nz,4F
 892  8A57
 893  8A57              ;!  Una alimaña menos!!!!!!!!!1
 894  8A57
 895  8A57              ; Se trataba de una Entidad_guía ???
 896  8A57
 897  8A57              ;	ld a,(Ctrl_2)
 898  8A57              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 899  8A57              ;	jr z,5F
 900  8A57
 901  8A57              ;	ld hl,Ctrl_3
 902  8A57              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 903  8A57
 904  8A57              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 905  8A57              ;!! _generado puede ser distinto, (aletoriedad).
 906  8A57
 907  8A57              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 908  8A57              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 909  8A57              ;	dec (hl)
 910  8A57              ;	ld hl,Entidades_en_curso
 911  8A57              ;	dec (hl)
 912  8A57              ;	ld hl,Numero_de_entidades
 913  8A57              ;	dec (hl)
 914  8A57              ;	jr 3F
 915  8A57
 916  8A57              ; -----
 917  8A57
 918  8A57              ;	`Movemos´ la explosión.
 919  8A57
 920  8A57              ;4 ld hl,(Puntero_DESPLZ_der)
 921  8A57              ;	inc hl
 922  8A57              ;	inc hl
 923  8A57              ;	call Extrae_address
 924  8A57              ;;	ld (Puntero_objeto),hl
 925  8A57
 926  8A57              ;;	ld hl,Frames_explosion
 927  8A57              ;;	dec (hl)
 928  8A57
 929  8A57              ;;	ld hl,Ctrl_0
 930  8A57              ;;	set 4,(hl);;
 931  8A57
 932  8A57              ;;	jr 3F
 933  8A57
 934  8A57              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 935  8A57
 936  8A57              ;2 xor a
 937  8A57              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 938  8A57
 939  8A57              ; Movemos Entidades malignas.
 940  8A57              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 941  8A57
 942  8A57              ;	ld a,(Ctrl_2)
 943  8A57              ;	bit 5,a
 944  8A57              ;	jr nz,8F
 945  8A57
 946  8A57              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 947  8A57              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 948  8A57              ;	jr 7F
 949  8A57
 950  8A57              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 951  8A57
 952  8A57              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 953  8A57              ;	bit 4,a
 954  8A57              ;	ret z
 955  8A57
 956  8A57              ; Ha habido desplazamiento de la entidad maligna.
 957  8A57              ; Ha llegado a zona de AMADEUS ???
 958  8A57
 959  8A57              ;7 ld a,(Coordenada_y)
 960  8A57              ;	cp $14
 961  8A57              ;	jr c,1F
 962  8A57
 963  8A57              ; ---------
 964  8A57
 965  8A57              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 966  8A57              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 967  8A57
 968  8A57              ;	di
 969  8A57              ;	call Genera_coordenadas_X
 970  8A57              ;	call Compara_coordenadas_X
 971  8A57              ;	ei
 972  8A57
 973  8A57              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 974  8A57
 975  8A57              ; ---------
 976  8A57
 977  8A57              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 978  8A57 CD C5 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 979  8A5A CD 52 8B     	call Limpia_Variables_de_borrado
 980  8A5D
 981  8A5D C9           3 ret
 982  8A5E
 983  8A5E              ; --------------------------------------------------------------------------------------------------------------
 984  8A5E              ;
 985  8A5E              ;	29/1/23
 986  8A5E
 987  8A5E              Mov_Amadeus
 988  8A5E
 989  8A5E              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 990  8A5E
 991  8A5E CD 98 95     	call Mov_right
 992  8A61
 993  8A61 3A 6F 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 994  8A64 CB 67        	bit 4,a
 995  8A66 C8           	ret z
 996  8A67
 997  8A67              ; ---------
 998  8A67
 999  8A67              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1000  8A67 CD B5 8C     	call Repone_datos_de_borrado_Amadeus
1001  8A6A CD 52 8B     	call Limpia_Variables_de_borrado
1002  8A6D
1003  8A6D C9           	ret
1004  8A6E
1005  8A6E              ; -----------------------------------------------------------------------------------
1006  8A6E              ;
1007  8A6E              ;	20/01/24
1008  8A6E              ;
1009  8A6E              ;
1010  8A6E
1011  8A6E              Construye_movimientos_masticados_entidad
1012  8A6E
1013  8A6E 2A 6B 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1014  8A71 E5           	push hl
1015  8A72 CD B6 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1016  8A75              ;															; _ el (Contador_de_mov_masticados).
1017  8A75 CD B2 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1018  8A78              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1019  8A78 CD F4 94     	call Recompone_posicion_inicio
1020  8A7B
1021  8A7B CD E8 8E     1 call Draw
1022  8A7E CD 9A 8A     	call Guarda_movimiento_masticado
1023  8A81
1024  8A81 CD 6E 98     	call Movimiento
1025  8A84
1026  8A84 3A AF 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1027  8A87 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1028  8A89 28 F0        	jr z,1B
1029  8A8B
1030  8A8B              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1031  8A8B              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1032  8A8B
1033  8A8B E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1034  8A8C 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1035  8A8F
1036  8A8F              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1037  8A8F
1038  8A8F CD D2 99     	call Situa_en_contador_general_de_mov_masticados
1039  8A92
1040  8A92              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1041  8A92              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1042  8A92
1043  8A92 ED 4B 6D 89  	ld bc,(Contador_de_mov_masticados)
1044  8A96 71           	ld (hl),c
1045  8A97 23           	inc hl
1046  8A98 70           	ld (hl),b
1047  8A99
1048  8A99 C9           	ret
1049  8A9A
1050  8A9A              ; -----------------------------------------------------------------------------------
1051  8A9A              ;
1052  8A9A              ;	28/12/23
1053  8A9A              ;
1054  8A9A              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1055  8A9A              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1056  8A9A
1057  8A9A              Guarda_movimiento_masticado
1058  8A9A
1059  8A9A ED 73 A1 89  	ld (Stack),sp
1060  8A9E ED 7B 6B 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1061  8AA2
1062  8AA2 E5           	push hl
1063  8AA3 DD E5            push ix
1064  8AA5 FD E5            push iy
1065  8AA7
1066  8AA7 ED 7B A1 89      ld sp,(Stack)
1067  8AAB
1068  8AAB 2A 6D 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1069  8AAE 23           	inc hl
1070  8AAF 22 6D 89     	ld (Contador_de_mov_masticados),hl
1071  8AB2
1072  8AB2 CD B6 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1073  8AB5              ;															; _ el (Contador_de_mov_masticados).
1074  8AB5 C9               ret
1075  8AB6
1076  8AB6              ; --------------------------------------------------------------------------------------------------------------
1077  8AB6              ;
1078  8AB6              ;	12/1/24
1079  8AB6              ;
1080  8AB6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1081  8AB6
1082  8AB6              Actualiza_Puntero_de_almacen_de_mov_masticados
1083  8AB6
1084  8AB6 2A 6B 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1085  8AB9 01 06 00     	ld bc,6
1086  8ABC A7           	and a
1087  8ABD ED 4A        	adc hl,bc
1088  8ABF 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1089  8AC2 C9           	ret
1090  8AC3
1091  8AC3              ; --------------------------------------------------------------------------------------------------------------
1092  8AC3              ;
1093  8AC3              ;	15/01/24
1094  8AC3              ;
1095  8AC3              ;	Cargamos los registros_
1096  8AC3              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1097  8AC3              ;
1098  8AC3              ;	HL contiene la dirección de la rutina de impresión.
1099  8AC3              ;	IX contiene el puntero de impresión.
1100  8AC3              ;	IY contiene (Puntero_objeto).
1101  8AC3
1102  8AC3
1103  8AC3 ED 73 A1 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1104  8AC7 ED 7B 6B 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1105  8ACB
1106  8ACB FD E1        	pop iy
1107  8ACD DD E1        	pop ix
1108  8ACF E1           	pop hl
1109  8AD0
1110  8AD0 ED 73 6B 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1111  8AD4
1112  8AD4 ED 7B A1 89  	ld sp,(Stack)
1113  8AD8
1114  8AD8 C9           	ret
1115  8AD9
1116  8AD9              ; --------------------------------------------------------------------------------------------------------------
1117  8AD9              ;
1118  8AD9              ;	28/12/23
1119  8AD9              ;
1120  8AD9              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1121  8AD9              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1122  8AD9
1123  8AD9              Guarda_foto_entidad_a_pintar
1124  8AD9
1125  8AD9 3A 6F 89     	ld a,(Ctrl_0)
1126  8ADC CB 77        	bit 6,a
1127  8ADE 28 04        	jr z,5F
1128  8AE0
1129  8AE0              ;	Guarda la foto de Amadeus.
1130  8AE0
1131  8AE0              ;	call Draw
1132  8AE0              ;	call Guarda_movimiento_masticado	;! Provisional
1133  8AE0 CD BF 80     	call Guarda_foto_registros
1134  8AE3 C9           	ret
1135  8AE4
1136  8AE4              ; ENTIDADES!
1137  8AE4              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1138  8AE4
1139  8AE4 3A AF 89     5 ld a,(Ctrl_3)
1140  8AE7 CB 5F        	bit 3,a
1141  8AE9 28 01        	jr z,1F
1142  8AEB
1143  8AEB              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1144  8AEB
1145  8AEB              4
1146  8AEB              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1147  8AEB C9           	ret
1148  8AEC
1149  8AEC              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1150  8AEC
1151  8AEC 3A AF 89     1 ld a,(Ctrl_3)
1152  8AEF CB 57        	bit 2,a
1153  8AF1 20 10        	jr nz,6F
1154  8AF3
1155  8AF3              ; Entidad guía o fantasma ???
1156  8AF3
1157  8AF3 3A 74 89     	ld a,(Ctrl_2)
1158  8AF6 CB 6F        	bit 5,a
1159  8AF8 20 10        	jr nz,3F
1160  8AFA
1161  8AFA              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1162  8AFA
1163  8AFA 18 EF        	jr 4B
1164  8AFC
1165  8AFC              ; ENTIDAD_GUÍA:
1166  8AFC              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1167  8AFC              ; _guardando "movimientos_masticados".
1168  8AFC
1169  8AFC 3A AF 89     2 ld a,(Ctrl_3)
1170  8AFF CB 57        	bit 2,a
1171  8B01 28 07        	jr z,3F
1172  8B03
1173  8B03              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1174  8B03              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1175  8B03
1176  8B03 CB 97        6 res 2,a
1177  8B05 CB DF        	set 3,a
1178  8B07 32 AF 89     	ld (Ctrl_3),a
1179  8B0A
1180  8B0A
1181  8B0A              ;	Esto sólo lo ejecuta una entidad guía.
1182  8B0A
1183  8B0A CD E8 8E     3 	call Draw
1184  8B0D CD 9A 8A     	call Guarda_movimiento_masticado
1185  8B10 CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1186  8B13
1187  8B13              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1188  8B13              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1189  8B13
1190  8B13              ;	call Convierte_guia_en_fantasma
1191  8B13 C9           	ret
1192  8B14
1193  8B14              ; *************************************************************************************************************************************************************
1194  8B14              ;
1195  8B14              ; 8/1/23
1196  8B14              ;
1197  8B14              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1198  8B14              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1199  8B14              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1200  8B14
1201  8B14              ; Destruye HL y DE !!!!!
1202  8B14
1203  8B14              Inicia_punteros_de_cajas
1204  8B14
1205  8B14 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1206  8B17 CD AC 8B         call Extrae_address
1207  8B1A 22 93 89         ld (Puntero_store_caja),hl
1208  8B1D 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1209  8B20 22 97 89     	ld (Indice_restore_caja),hl
1210  8B23 CD AC 8B     	call Extrae_address
1211  8B26 22 95 89     	ld (Puntero_restore_caja),hl
1212  8B29 C9               ret
1213  8B2A
1214  8B2A              ; *************************************************************************************************************************************************************
1215  8B2A              ;
1216  8B2A              ; 8/1/23
1217  8B2A              ;
1218  8B2A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1219  8B2A
1220  8B2A 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1221  8B2D 22 B2 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1222  8B30 C9           	ret
1223  8B31 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1224  8B34 22 B4 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1225  8B37 C9           	ret
1226  8B38
1227  8B38              ; -------------------------------------------------------------------------------------------------------------
1228  8B38              ;
1229  8B38              ; 21/9/23
1230  8B38              ;
1231  8B38
1232  8B38              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1233  8B38
1234  8B38              Limpia_album_Amadeus
1235  8B38
1236  8B38 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1237  8B3B 7E           	ld a,(hl)
1238  8B3C A7           	and a
1239  8B3D C8           	ret z
1240  8B3E
1241  8B3E 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1242  8B41 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1243  8B44 01 0B 00     	ld bc,11
1244  8B47 AF           	xor a
1245  8B48 77           	ld (hl),a
1246  8B49 ED B0        	ldir
1247  8B4B
1248  8B4B 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1249  8B4E 22 AD 89     	ld (End_Snapshot_Amadeus),hl
1250  8B51
1251  8B51 C9           	ret
1252  8B52
1253  8B52 21 63 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1254  8B55 11 64 89     	ld de,Variables_de_borrado+1
1255  8B58 01 05 00     	ld bc,5
1256  8B5B AF           	xor a
1257  8B5C 77           	ld (hl),a
1258  8B5D ED B0        	ldir
1259  8B5F C9           	ret
1260  8B60
1261  8B60              ; -------------------------------------------------------------------------------------------------------------
1262  8B60              ;
1263  8B60              ; 	21/02/24
1264  8B60              ;
1265  8B60              ;	MODIFICA: AF,HL,BC,DE
1266  8B60              ;
1267  8B60              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1268  8B60              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1269  8B60
1270  8B60              Calcula_numero_de_malotes
1271  8B60
1272  8B60 21 00 80     	ld hl,Album_de_fotos
1273  8B63 EB           	ex de,hl
1274  8B64 2A A7 89     	ld hl,(Stack_snapshot)
1275  8B67
1276  8B67 06 00        	ld b,0
1277  8B69 7D           	ld a,l
1278  8B6A 93           	sub e
1279  8B6B 28 07        	jr z,1F
1280  8B6D
1281  8B6D              ; Nº de malotes no es "0".
1282  8B6D
1283  8B6D D6 06        2 sub 6
1284  8B6F 04           	inc b
1285  8B70 A7           	and a
1286  8B71 20 FA        	jr nz,2B
1287  8B73 78           	ld a,b
1288  8B74
1289  8B74 32 9C 89     1 ld (Numero_de_malotes),a
1290  8B77 C9           	ret
1291  8B78
1292  8B78              ; -------------------------------------------------------------------------------------------------------------
1293  8B78              ;
1294  8B78              ; 8/9/23
1295  8B78              ;
1296  8B78
1297  8B78              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1298  8B78              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1299  8B78
1300  8B78              Calcula_malotes_Amadeus
1301  8B78
1302  8B78 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1303  8B7B EB           	ex de,hl
1304  8B7C 2A AD 89     	ld hl,(End_Snapshot_Amadeus)
1305  8B7F
1306  8B7F 7C           	ld a,h
1307  8B80 A7           	and a
1308  8B81 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1309  8B83
1310  8B83 06 00        	ld b,0
1311  8B85 7D           	ld a,l
1312  8B86 93           	sub e
1313  8B87 28 07        	jr z,1F
1314  8B89
1315  8B89              ; Nº de malotes no es "0".
1316  8B89
1317  8B89 D6 06        2 sub 6
1318  8B8B 04           	inc b
1319  8B8C A7           	and a
1320  8B8D 20 FA        	jr nz,2B
1321  8B8F 78           	ld a,b
1322  8B90
1323  8B90 32 9C 89     1 ld (Numero_de_malotes),a
1324  8B93 C9           	ret
1325  8B94
1326  8B94              ; -------------------------------------------------------------------------------------------------------------
1327  8B94              ;
1328  8B94              ; 28/2/23
1329  8B94              ;
1330  8B94
1331  8B94              Calcula_numero_de_disparotes
1332  8B94
1333  8B94 21 56 80     	ld hl,Album_de_fotos_disparos
1334  8B97 EB           	ex de,hl
1335  8B98 2A AB 89     	ld hl,(End_Snapshot_disparos)
1336  8B9B
1337  8B9B 06 00        	ld b,0
1338  8B9D 7D           	ld a,l
1339  8B9E 93           	sub e
1340  8B9F 28 07        	jr z,1F
1341  8BA1
1342  8BA1              ; Nº de malotes no es "0".
1343  8BA1
1344  8BA1 D6 06        2 sub 6
1345  8BA3 04           	inc b
1346  8BA4 A7           	and a
1347  8BA5 20 FA        	jr nz,2B
1348  8BA7 78           	ld a,b
1349  8BA8
1350  8BA8 32 B1 89     1 ld (Numero_de_disparotes),a
1351  8BAB C9           	ret
1352  8BAC
1353  8BAC              ; *************************************************************************************************************************************************************
1354  8BAC              ;
1355  8BAC              ; 20/10/22
1356  8BAC              ;
1357  8BAC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1358  8BAC              ;
1359  8BAC              ; Destruye el puntero y DE !!!!!
1360  8BAC
1361  8BAC 5E           Extrae_address ld e,(hl)
1362  8BAD 23           	inc hl
1363  8BAE 56           	ld d,(hl)
1364  8BAF 2B           	dec hl
1365  8BB0 EB           	ex de,hl
1366  8BB1 C9           	ret
1367  8BB2
1368  8BB2              ; *************************************************************************************************************************************************************
1369  8BB2              ;
1370  8BB2              ;	20/1/24
1371  8BB2              ;
1372  8BB2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1373  8BB2              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1374  8BB2              ;
1375  8BB2              ;   Destruye HL y BC !!!!!,
1376  8BB2              ;
1377  8BB2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1378  8BB2              ;					"0" ..... Izquierda.
1379  8BB2
1380  8BB2              Inicia_Puntero_objeto
1381  8BB2
1382  8BB2 3A 61 89     	ld a,(Cuad_objeto)
1383  8BB5 E6 01        	and 1
1384  8BB7 F5           	push af
1385  8BB8 CC D4 8B     	call z,Inicia_puntero_objeto_izq
1386  8BBB F1           	pop af
1387  8BBC C8           	ret z
1388  8BBD CD C1 8B     	call Inicia_puntero_objeto_der
1389  8BC0 C9           	ret
1390  8BC1
1391  8BC1              ; Arrancamos desde la parte izquierda de la pantalla.
1392  8BC1              ; Iniciamos (Indice_Sprite_der).
1393  8BC1
1394  8BC1 2A 57 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1395  8BC4 22 5B 89     	ld (Puntero_DESPLZ_der),hl
1396  8BC7 CD AC 8B     	call Extrae_address
1397  8BCA 22 51 89     	ld (Puntero_objeto),hl
1398  8BCD
1399  8BCD 2A 59 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1400  8BD0 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
1401  8BD3 C9           	ret
1402  8BD4
1403  8BD4              ; Arrancamos desde la parte derecha de la pantalla.
1404  8BD4              ; Iniciamos (Indice_Sprite_izq).
1405  8BD4
1406  8BD4 2A 59 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1407  8BD7 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
1408  8BDA CD AC 8B     	call Extrae_address
1409  8BDD 22 51 89     	ld (Puntero_objeto),hl
1410  8BE0
1411  8BE0 2A 57 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1412  8BE3 22 5B 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1413  8BE6 C9           	ret
1414  8BE7
1415  8BE7              ; **************************************************************************************************
1416  8BE7              ;
1417  8BE7              ;	31/01/24
1418  8BE7              ;
1419  8BE7              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1420  8BE7
1421  8BE7              Restore_entidad
1422  8BE7
1423  8BE7 2A 93 89     	ld hl,(Puntero_store_caja)
1424  8BEA 11 4C 89     	ld de,Bandeja_DRAW
1425  8BED 7E           	ld a,(hl)
1426  8BEE 12           	ld (de),a
1427  8BEF 23           	inc hl 											; (Tipo).
1428  8BF0
1429  8BF0 11 53 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1430  8BF3 01 02 00     	ld bc,2
1431  8BF6 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1432  8BF8
1433  8BF8 13           	inc de
1434  8BF9 7E           	ld a,(hl)
1435  8BFA 12           	ld (de),a 										; Transferimos (Attr).
1436  8BFB 23           	inc hl
1437  8BFC
1438  8BFC 11 62 89     	ld de,Impacto
1439  8BFF
1440  8BFF 7E           	ld a,(hl)
1441  8C00 12           	ld (de),a 										; Transferimos (Impacto).
1442  8C01 23           	inc hl
1443  8C02
1444  8C02 13           	inc de
1445  8C03
1446  8C03 01 06 00     	ld bc,6
1447  8C06 ED B0        	ldir
1448  8C08
1449  8C08 01 07 00     	ld bc,7
1450  8C0B ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1451  8C0D              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1452  8C0D 11 74 89     	ld de,Ctrl_2
1453  8C10
1454  8C10 7E           	ld a,(hl)
1455  8C11 12           	ld (de),a 										; Transferimos (Ctrl_2).
1456  8C12
1457  8C12 C9           	ret
1458  8C13
1459  8C13              ; **************************************************************************************************
1460  8C13              ;
1461  8C13              ;	08/05/23
1462  8C13              ;
1463  8C13              ;	Incrementamos los dos punteros de entidades. (+1).
1464  8C13
1465  8C13              Incrementa_punteros_de_cajas
1466  8C13
1467  8C13 2A 95 89     	ld hl,(Puntero_restore_caja)
1468  8C16 22 93 89     	ld (Puntero_store_caja),hl
1469  8C19 2A 97 89     	ld hl,(Indice_restore_caja)
1470  8C1C 23           	inc hl
1471  8C1D 23           	inc hl
1472  8C1E 22 97 89     	ld (Indice_restore_caja),hl
1473  8C21 CD AC 8B         call Extrae_address
1474  8C24 22 95 89         ld (Puntero_restore_caja),hl
1475  8C27 C9               ret
1476  8C28
1477  8C28              ; **************************************************************************************************
1478  8C28              ;
1479  8C28              ;	21/12/23
1480  8C28              ;
1481  8C28              ;	Restore_Amadeus
1482  8C28              ;
1483  8C28              ;	Cargamos en DRAW los parámetros de Amadeus.
1484  8C28              ;
1485  8C28
1486  8C28 E5           Restore_Amadeus	push hl
1487  8C29 D5           	push de
1488  8C2A C5            	push bc
1489  8C2B 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1490  8C2E 11 4C 89     	ld de,Bandeja_DRAW
1491  8C31 01 2A 00     	ld bc,42
1492  8C34 ED B0        	ldir
1493  8C36 C1           	pop bc
1494  8C37 D1           	pop de
1495  8C38 E1           	pop hl
1496  8C39 C9           	ret
1497  8C3A
1498  8C3A              ; *************************************************************************************************************************************************************
1499  8C3A              ;
1500  8C3A              ;	21/12/23
1501  8C3A              ;
1502  8C3A              ;	Store_Amadeus
1503  8C3A              ;
1504  8C3A              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1505  8C3A              ;
1506  8C3A              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1507  8C3A              ;
1508  8C3A              ;	DESTRUYE: HL y BC y DE.
1509  8C3A
1510  8C3A 21 4C 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1511  8C3D 01 2A 00     	ld bc,42
1512  8C40 ED B0        	ldir
1513  8C42 C9           	ret
1514  8C43
1515  8C43              ; -----------------------------------------------------------
1516  8C43              ;
1517  8C43              ;	21/12/23
1518  8C43              ;
1519  8C43              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1520  8C43              ;
1521  8C43              ;	Destruye: HL,BC,DE,A
1522  8C43
1523  8C43 21 4C 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1524  8C46 01 29 00     	ld bc,41
1525  8C49 AF           	xor a
1526  8C4A 77           	ld (hl),a
1527  8C4B 11 4D 89     	ld de,Bandeja_DRAW+1
1528  8C4E ED B0        	ldir
1529  8C50 C9           	ret
1530  8C51
1531  8C51              ; -----------------------------------------------------------
1532  8C51
1533  8C51              ; Teclado.
1534  8C51
1535  8C51 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1536  8C53 DB FE        	in a,($fe)
1537  8C55 E6 01        	and $01
1538  8C57 28 02        	jr z,1f
1539  8C59 18 F6        	jr Pulsa_ENTER
1540  8C5B C9           1 ret
1541  8C5C
1542  8C5C              ; **************************************************************************************************
1543  8C5C              ;
1544  8C5C              ; Temporización.
1545  8C5C
1546  8C5C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1547  8C5C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1548  8C5C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1549  8C5C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1550  8C5C
1551  8C5C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1552  8C5C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1553  8C5C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1554  8C5C
1555  8C5C              ; A partir de $4f61 no hace falta DELAY.
1556  8C5C
1557  8C5C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1558  8C5C
1559  8C5C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1560  8C5F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1561  8C60 78           	LD A,B
1562  8C61 A7           	AND A
1563  8C62 20 FB        	JR NZ,wait
1564  8C64 C9           	RET
1565  8C65
1566  8C65              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1567  8C65              ;
1568  8C65              ;	5/3/23
1569  8C65              ;
1570  8C65              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1571  8C65
1572  8C65              Movimiento_Amadeus
1573  8C65
1574  8C65              ; Disparo.
1575  8C65
1576  8C65 3A C7 89     	ld a,(Disparo_Amadeus)
1577  8C68 A7           	and a
1578  8C69 20 02        	jr nz,1F
1579  8C6B 18 15        	jr 2F
1580  8C6D
1581  8C6D 3E F7        1 ld a,$f7													; "5" para disparar.
1582  8C6F DB FE        	in a,($fe)
1583  8C71 E6 10        	and $10
1584  8C73
1585  8C73 F5           	push af
1586  8C74 CC E8 99     	call z,Genera_disparo
1587  8C77 F1           	pop af
1588  8C78 20 08        	jr nz,2F
1589  8C7A
1590  8C7A 3A C7 89     	ld a,(Disparo_Amadeus)
1591  8C7D EE 01        	xor 1
1592  8C7F 32 C7 89     	ld (Disparo_Amadeus),a
1593  8C82 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1594  8C84 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1595  8C86 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1596  8C88 CC BB 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1597  8C8B
1598  8C8B 3E F7        	ld a,$f7
1599  8C8D DB FE        	in a,($fe)
1600  8C8F E6 01        	and $01
1601  8C91 C8           	ret z
1602  8C92
1603  8C92 3E F7        	ld a,$f7
1604  8C94 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1605  8C96 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1606  8C98 CC 98 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1607  8C9B C9           	ret
1608  8C9C
1609  8C9C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1610  8C9C              ;
1611  8C9C              ;	Rutina provisional para que los malotes cagen balas.
1612  8C9C
1613  8C9C              Detecta_disparo_entidad
1614  8C9C
1615  8C9C 3A CA 89     	ld a,(Disparo_entidad)
1616  8C9F A7           	and a
1617  8CA0 C8           	ret z
1618  8CA1
1619  8CA1              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1620  8CA1
1621  8CA1              ;	ld a,$7f				; Detecta SPACE.
1622  8CA1              ;	in a,($fe)
1623  8CA1              ;	and 1
1624  8CA1              ;	ret nz
1625  8CA1
1626  8CA1 CD E8 99     	call Genera_disparo
1627  8CA4 C9           	ret
1628  8CA5
1629  8CA5              ; ----------------------------------------------------------------------
1630  8CA5              ;
1631  8CA5              ;	8/9/23
1632  8CA5
1633  8CA5 2A AD 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1634  8CA8 2B            	dec hl
1635  8CA9 7E           	ld a,(hl)
1636  8CAA A7           	and a
1637  8CAB C8           	ret z										; Salimos si es álbum está vacío.
1638  8CAC
1639  8CAC 11 68 89     	ld de,Variables_de_borrado+5
1640  8CAF 01 06 00     	ld bc,6
1641  8CB2 ED B8        	lddr
1642  8CB4 C9           	ret
1643  8CB5
1644  8CB5              ; ----------------------------------------------------------------------
1645  8CB5              ;
1646  8CB5              ;	9/9/23
1647  8CB5
1648  8CB5              Repone_datos_de_borrado_Amadeus
1649  8CB5
1650  8CB5 21 63 89     	ld hl,Variables_de_borrado
1651  8CB8 11 AC 80     	ld de,Album_de_fotos_Amadeus
1652  8CBB 01 06 00     	ld bc,6
1653  8CBE ED B0        	ldir
1654  8CC0
1655  8CC0 EB           	ex de,hl
1656  8CC1 22 AD 89     	ld (End_Snapshot_Amadeus),hl
1657  8CC4
1658  8CC4 C9           	ret
1659  8CC5
1660  8CC5              ; ----------------------------------------------------------------------
1661  8CC5              ;
1662  8CC5              ;	27/10/23
1663  8CC5              ;
1664  8CC5
1665  8CC5              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1666  8CC5              ;	_ Album_de_fotos correspondiente.
1667  8CC5
1668  8CC5              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1669  8CC5              ;	_ durante el proceso de escritura.
1670  8CC5
1671  8CC5              Repone_datos_de_borrado
1672  8CC5
1673  8CC5 ED 5B A7 89  	ld de,(Stack_snapshot)
1674  8CC9 21 63 89     	ld hl,Variables_de_borrado
1675  8CCC 01 06 00     	ld bc,6
1676  8CCF ED B0        	ldir
1677  8CD1
1678  8CD1 EB           	ex de,hl
1679  8CD2 22 A7 89     	ld (Stack_snapshot),hl
1680  8CD5
1681  8CD5 C9           	ret
1682  8CD6
1683  8CD6              ; --------------------------------------------------------------------------------------
1684  8CD6
1685  8CD6              Pinta_Amadeus
1686  8CD6
1687  8CD6 CD 78 8B        	call Calcula_malotes_Amadeus
1688  8CD9 CD 81 92     	call Extrae_foto_Amadeus
1689  8CDC CD 38 8B     	call Limpia_album_Amadeus
1690  8CDF
1691  8CDF C9           	ret
1692  8CE0
1693  8CE0              ; -----------------------------------------------------------------------------------
1694  8CE0              ;
1695  8CE0              ;	10/12/23
1696  8CE0              ;
1697  8CE0              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1698  8CE0
1699  8CE0              Actualiza_relojes
1700  8CE0
1701  8CE0 3A AF 89     	ld a,(Ctrl_3)
1702  8CE3 CB 47        	bit 0,a
1703  8CE5 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1704  8CE6
1705  8CE6 21 C2 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1706  8CE9 34           	inc (hl)
1707  8CEA
1708  8CEA 34           	inc (hl)
1709  8CEB 35           	dec (hl)
1710  8CEC C0           	ret nz
1711  8CED
1712  8CED 21 C3 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1713  8CF0 34           	inc (hl)
1714  8CF1 C9           	ret
1715  8CF2
1716  8CF2              ; ---------------------------------------------------------------
1717  8CF2
1718  8CF2              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8CF2              ;---------------------------------------------------------------------------------------------------------------
   2+ 8CF2              ;
   3+ 8CF2              ;   19/1/24
   4+ 8CF2              ;
   5+ 8CF2              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8CF2              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8CF2              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8CF2              ;	_ de la 1ª entidad del Nivel.
   9+ 8CF2              ;
  10+ 8CF2              ;	MODIFICA: HL,DE y A.
  11+ 8CF2              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8CF2
  13+ 8CF2              Inicializa_Nivel
  14+ 8CF2
  15+ 8CF2 2A CE 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8CF5 CD AC 8B     	call Extrae_address
  17+ 8CF8 7E           	ld a,(hl)
  18+ 8CF9 32 99 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8CFC 23           	inc hl
  20+ 8CFD CD 0A 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8D00 22 D0 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D03 CD 13 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D06              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D06 CD 24 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8D09 C9           	ret
  26+ 8D0A
  27+ 8D0A              ; ----------------------
  28+ 8D0A
  29+ 8D0A 11 76 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8D0D 01 04 00     	ld bc,4
  31+ 8D10 ED B0        	ldir
  32+ 8D12 C9           	ret
  33+ 8D13
  34+ 8D13 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8D14 CD 64 8E         call Calcula_salto_en_BC
  36+ 8D17 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8D1A A7               and a
  38+ 8D1B ED 4A            adc hl,bc
  39+ 8D1D CD AC 8B         call Extrae_address
  40+ 8D20 22 84 89         ld (Puntero_indice_mov),hl
  41+ 8D23 C9               ret
  42+ 8D24
  43+ 8D24 3A 4C 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8D27 CD 64 8E     	call Calcula_salto_en_BC
  45+ 8D2A 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8D2D A7               and a
  47+ 8D2E ED 4A            adc hl,bc
  48+ 8D30 CD AC 8B         call Extrae_address
  49+ 8D33 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8D36 C9           	ret
  51+ 8D37
  52+ 8D37              ;---------------------------------------------------------------------------------------------------------------
  53+ 8D37              ;
  54+ 8D37              ;   5/1/24
  55+ 8D37              ;
  56+ 8D37              ;	Destruye A,BC,HL,DE
  57+ 8D37
  58+ 8D37              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8D37              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8D37
  61+ 8D37              Inicia_Entidades
  62+ 8D37
  63+ 8D37              ; Preparamos los punteros de las cajas de entidades:
  64+ 8D37
  65+ 8D37 CD 14 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8D3A              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8D3A CD CB 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8D3D
  69+ 8D3D 2A D0 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8D40
  71+ 8D40 22 D0 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8D43
  73+ 8D43 CD 12 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8D46
  75+ 8D46 2A D0 89     	ld hl,(Datos_de_nivel)
  76+ 8D49
  77+ 8D49              ; En este punto:
  78+ 8D49              ;
  79+ 8D49              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8D49              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8D49
  82+ 8D49 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8D4A
  84+ 8D4A 7E           	ld a,(hl)
  85+ 8D4B CD 87 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8D4E
  87+ 8D4E CD 76 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8D51
  89+ 8D51              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8D51
  91+ 8D51 CD 34 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8D54
  93+ 8D54 A7           	and a
  94+ 8D55 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8D57
  96+ 8D57              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8D57
  98+ 8D57              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8D57              ;	_ de este tipo de entidad.
 100+ 8D57
 101+ 8D57 CD D2 99     	call Situa_en_contador_general_de_mov_masticados
 102+ 8D5A CD DF 99     	call Transfiere_datos_de_contadores
 103+ 8D5D
 104+ 8D5D 18 06        	jr 4F
 105+ 8D5F
 106+ 8D5F CD 6E 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8D62
 108+ 8D62              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8D62              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8D62              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8D62              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8D62              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8D62
 114+ 8D62 CD F2 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8D65              ;																; _ Mov_masticados ya generados.
 116+ 8D65 CD A1 8D     4 call Guarda_foto_de_mov_masticado
 117+ 8D68
 118+ 8D68              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8D68
 120+ 8D68 2A 69 89     	ld hl,(Puntero_de_impresion)
 121+ 8D6B CD E9 9E     	call Genera_coordenadas
 122+ 8D6E CD 9D 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8D71 CD AB 8D     	call Limpiamos_bandeja_DRAW
 124+ 8D74 CD 13 8C     	call Incrementa_punteros_de_cajas
 125+ 8D77
 126+ 8D77              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8D77              ; _ entidad del Nivel.
 128+ 8D77
 129+ 8D77 3A B0 89     	ld a,(Ctrl_4)
 130+ 8D7A E6 F0        	and $f0
 131+ 8D7C 32 B0 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8D7F
 133+ 8D7F              ; Siguiente entidad del Nivel.
 134+ 8D7F
 135+ 8D7F 2A D0 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8D82 23           	inc hl 														; _ entidad del Nivel.
 137+ 8D83
 138+ 8D83 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8D84
 140+ 8D84 10 BA        	djnz 2B
 141+ 8D86
 142+ 8D86 C9           	ret
 143+ 8D87
 144+ 8D87              ; ---------------------------------------------------------------------
 145+ 8D87              ;
 146+ 8D87              ;	10/02/24
 147+ 8D87              ;
 148+ 8D87              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8D87              ;
 150+ 8D87              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8D87
 152+ 8D87              Definicion_segun_tipo
 153+ 8D87
 154+ 8D87 CD 64 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8D8A 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8D8D CD 6C 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8D90 C9           	ret
 158+ 8D91
 159+ 8D91              ; ---------------------------------------------------------------------
 160+ 8D91              ;
 161+ 8D91              ;	30/01/24
 162+ 8D91
 163+ 8D91
 164+ 8D91              Store_Restore_cajas
 165+ 8D91
 166+ 8D91              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8D91
 168+ 8D91 2A 69 89     	ld hl,(Puntero_de_impresion)
 169+ 8D94 CD E9 9E     	call Genera_coordenadas
 170+ 8D97
 171+ 8D97 CD 9D 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8D9A CD AB 8D     	call Limpiamos_bandeja_DRAW
 173+ 8D9D
 174+ 8D9D              ; 	Entidad_sospechosa. 20/4/23
 175+ 8D9D
 176+ 8D9D              ;	ld a,(Impacto)
 177+ 8D9D              ;	and a
 178+ 8D9D              ;	jr z,1F
 179+ 8D9D
 180+ 8D9D              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8D9D              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8D9D              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8D9D              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8D9D              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8D9D
 186+ 8D9D
 187+ 8D9D              ;1 ld hl,(Puntero_restore_caja)
 188+ 8D9D              ;	ld a,(hl)
 189+ 8D9D              ;	and a
 190+ 8D9D              ;	push af
 191+ 8D9D              ;	jr z,2F
 192+ 8D9D
 193+ 8D9D              ;	di
 194+ 8D9D              ;	ld de,Bandeja_DRAW
 195+ 8D9D              ;	ld bc,42
 196+ 8D9D              ;	ldir
 197+ 8D9D              ;	ei
 198+ 8D9D
 199+ 8D9D CD 13 8C     2 call Incrementa_punteros_de_cajas
 200+ 8DA0 C9           	ret
 201+ 8DA1
 202+ 8DA1
 203+ 8DA1              ; ---------------------------------------------------------------------
 204+ 8DA1              ;
 205+ 8DA1              ;	29/01/24
 206+ 8DA1
 207+ 8DA1 CD C3 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 208+ 8DA4 CD BF 80     	call Guarda_foto_registros
 209+ 8DA7              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 210+ 8DA7              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 211+ 8DA7              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 212+ 8DA7              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 213+ 8DA7
 214+ 8DA7 CD B6 8D     	call Decrementa_Contador_de_mov_masticados
 215+ 8DAA C9           	ret
 216+ 8DAB
 217+ 8DAB              ; ---------------------------------------------------------------------
 218+ 8DAB              ;
 219+ 8DAB              ;	25/01/24
 220+ 8DAB
 221+ 8DAB 21 4C 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 222+ 8DAE 06 2A        	ld b,42
 223+ 8DB0 AF           	xor a
 224+ 8DB1
 225+ 8DB1 77           1 ld (hl),a
 226+ 8DB2 23           	inc hl
 227+ 8DB3 10 FC        	djnz 1B
 228+ 8DB5
 229+ 8DB5 C9           	ret
 230+ 8DB6
 231+ 8DB6              ; ---------------------------------------------------------------------
 232+ 8DB6              ;
 233+ 8DB6              ;	22/01/24
 234+ 8DB6
 235+ 8DB6 2A 6D 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 236+ 8DB9 2B           	dec hl
 237+ 8DBA
 238+ 8DBA 24           	inc h
 239+ 8DBB 25           	dec h
 240+ 8DBC
 241+ 8DBC FC C3 8D     	call m,Reinicia_entidad_maliciosa
 242+ 8DBF
 243+ 8DBF              ;	jr nz,1F
 244+ 8DBF
 245+ 8DBF              ;	inc l
 246+ 8DBF              ;	dec l
 247+ 8DBF
 248+ 8DBF              ;	di
 249+ 8DBF              ;	jr z,$
 250+ 8DBF              ;	ei
 251+ 8DBF
 252+ 8DBF 22 6D 89     1 ld (Contador_de_mov_masticados),hl
 253+ 8DC2 C9           	ret
 254+ 8DC3
 255+ 8DC3              ; ---------------------------------------------------------------------
 256+ 8DC3              ;
 257+ 8DC3              ;	10/2/24
 258+ 8DC3
 259+ 8DC3              Reinicia_entidad_maliciosa
 260+ 8DC3
 261+ 8DC3              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 262+ 8DC3
 263+ 8DC3 CD D2 99     	call Situa_en_contador_general_de_mov_masticados
 264+ 8DC6 CD DF 99     	call Transfiere_datos_de_contadores
 265+ 8DC9
 266+ 8DC9              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 267+ 8DC9
 268+ 8DC9 3A 4C 89     	ld a,(Tipo)
 269+ 8DCC CD 87 8D     	call Definicion_segun_tipo
 270+ 8DCF
 271+ 8DCF E5           	push hl
 272+ 8DD0 DD E1        	pop ix
 273+ 8DD2
 274+ 8DD2 DD 6E 0B     	ld l,(ix+11)
 275+ 8DD5 DD 66 0C     	ld h,(ix+12)
 276+ 8DD8
 277+ 8DD8 22 6B 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 278+ 8DDB
 279+ 8DDB              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 280+ 8DDB              ;	Queremos pintar la entidad en su posición de inicio.
 281+ 8DDB
 282+ 8DDB 2A A7 89     	ld hl,(Stack_snapshot)
 283+ 8DDE 01 06 00     	ld bc,6
 284+ 8DE1 A7           	and a
 285+ 8DE2 ED 42        	sbc hl,bc
 286+ 8DE4 22 A7 89     	ld (Stack_snapshot),hl
 287+ 8DE7
 288+ 8DE7 CD C3 8A     	call Cargamos_registros_con_mov_masticado
 289+ 8DEA CD BF 80     	call Guarda_foto_registros
 290+ 8DED
 291+ 8DED 2A 6D 89     	ld hl,(Contador_de_mov_masticados)
 292+ 8DF0 2B           	dec hl
 293+ 8DF1
 294+ 8DF1 C9           	ret
 295+ 8DF2
 296+ 8DF2
 297+ 8DF2
 298+ 8DF2
 299+ 8DF2              ; ---------------------------------------------------------------------
 300+ 8DF2              ;
 301+ 8DF2              ;	22/01/24
 302+ 8DF2
 303+ 8DF2 21 B0 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 304+ 8DF5 CB 46        	bit 0,(hl)
 305+ 8DF7 20 0D        	jr nz,1F
 306+ 8DF9 CB 4E        	bit 1,(hl)
 307+ 8DFB 20 0C        	jr nz,2F
 308+ 8DFD CB 56        	bit 2,(hl)
 309+ 8DFF 20 0B        	jr nz,3F
 310+ 8E01 CB 5E        	bit 3,(hl)
 311+ 8E03 20 0A        	jr nz,4F
 312+ 8E05 C9           	ret
 313+ 8E06
 314+ 8E06 CB E6        1 set 4,(hl)
 315+ 8E08 C9           	ret
 316+ 8E09 CB EE        2 set 5,(hl)
 317+ 8E0B C9           	ret
 318+ 8E0C CB F6        3 set 6,(hl)
 319+ 8E0E C9           	ret
 320+ 8E0F CB FE        4 set 7,(hl)
 321+ 8E11 C9           	ret
 322+ 8E12
 323+ 8E12              ; ---------------------------------------------------------------------
 324+ 8E12              ;
 325+ 8E12              ;	23/01/24
 326+ 8E12              ;
 327+ 8E12              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 328+ 8E12              ;
 329+ 8E12              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 330+ 8E12              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 331+ 8E12              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 332+ 8E12              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 333+ 8E12
 334+ 8E12              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 335+ 8E12
 336+ 8E12 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 337+ 8E13 3D           	dec a
 338+ 8E14 20 06        	jr nz,1F
 339+ 8E16
 340+ 8E16              ; --- Tipo_1
 341+ 8E16
 342+ 8E16 21 B0 89     	ld hl,Ctrl_4
 343+ 8E19 CB C6        	set 0,(hl)
 344+ 8E1B C9           	ret
 345+ 8E1C
 346+ 8E1C 3D           1 dec a
 347+ 8E1D 20 06        	jr nz,2F
 348+ 8E1F
 349+ 8E1F              ; --- Tipo_2
 350+ 8E1F
 351+ 8E1F 21 B0 89     	ld hl,Ctrl_4
 352+ 8E22 CB CE        	set 1,(hl)
 353+ 8E24 C9           	ret
 354+ 8E25
 355+ 8E25 3D           2 dec a
 356+ 8E26 20 06        	jr nz,3F
 357+ 8E28
 358+ 8E28              ; --- Tipo_3
 359+ 8E28
 360+ 8E28 21 B0 89     	ld hl,Ctrl_4
 361+ 8E2B CB D6        	set 2,(hl)
 362+ 8E2D C9           	ret
 363+ 8E2E
 364+ 8E2E              ; --- Tipo_3
 365+ 8E2E
 366+ 8E2E 21 B0 89     3 ld hl,Ctrl_4
 367+ 8E31 CB D6        	set 2,(hl)
 368+ 8E33 C9           	ret
 369+ 8E34
 370+ 8E34              ; ---------------------------------------------------------------------
 371+ 8E34              ;
 372+ 8E34              ;	22/01/24
 373+ 8E34
 374+ 8E34 21 B0 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 375+ 8E37 CB 46        	bit 0,(hl)
 376+ 8E39 20 0E        	jr nz,1F
 377+ 8E3B
 378+ 8E3B CB 4E        	bit 1,(hl)
 379+ 8E3D 20 10        	jr nz,2F
 380+ 8E3F
 381+ 8E3F CB 56        	bit 2,(hl)
 382+ 8E41 20 12        	jr nz,3F
 383+ 8E43
 384+ 8E43 CB 5E        	bit 3,(hl)
 385+ 8E45 20 14        	jr nz,4F
 386+ 8E47 18 19        	jr 6F
 387+ 8E49
 388+ 8E49              ; Entidad_de_Tipo_1.
 389+ 8E49
 390+ 8E49 CB 66        1 bit 4,(hl)
 391+ 8E4B 28 15        	jr z,6F
 392+ 8E4D 18 10        	jr 5F
 393+ 8E4F
 394+ 8E4F              ; Entidad_de_Tipo_2.
 395+ 8E4F
 396+ 8E4F CB 6E        2 bit 5,(hl)
 397+ 8E51 28 0F        	jr z,6F
 398+ 8E53 18 0A        	jr 5F
 399+ 8E55
 400+ 8E55              ; Entidad_de_Tipo_3.
 401+ 8E55
 402+ 8E55 CB 76        3 bit 6,(hl)
 403+ 8E57 28 09        	jr z,6F
 404+ 8E59 18 04        	jr 5F
 405+ 8E5B
 406+ 8E5B              ; Entidad_de_Tipo_4.
 407+ 8E5B
 408+ 8E5B CB 7E        4 bit 7,(hl)
 409+ 8E5D 28 03        	jr z,6F
 410+ 8E5F
 411+ 8E5F              ; Esta entidad TIENE MOV_MASTICADOS.
 412+ 8E5F
 413+ 8E5F AF           5 xor a
 414+ 8E60 3C           	inc a
 415+ 8E61 C9           	ret
 416+ 8E62
 417+ 8E62              ; Esta entidad NO TIENE MOV_MASTICADOS.
 418+ 8E62
 419+ 8E62 AF           6 xor a
 420+ 8E63 C9           	ret
 421+ 8E64
 422+ 8E64              ;	------------------------------------------------------------------------------------
 423+ 8E64              ;
 424+ 8E64              ;	12/01/24
 425+ 8E64              ;
 426+ 8E64              ;	INPUTS:	A contiene el (Tipo) de entidad.
 427+ 8E64              ;
 428+ 8E64              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 429+ 8E64              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 430+ 8E64
 431+ 8E64 CB 27        Calcula_salto_en_BC sla a
 432+ 8E66 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 433+ 8E68 4F           	ld c,a
 434+ 8E69 06 00        	ld b,0
 435+ 8E6B C9           	ret
 436+ 8E6C
 437+ 8E6C              ; ------------------------------------------------------------------
 438+ 8E6C              ;
 439+ 8E6C              ;	19/1/24
 440+ 8E6C              ;
 441+ 8E6C              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 442+ 8E6C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 443+ 8E6C
 444+ 8E6C A7           Situa_en_datos_de_definicion and a
 445+ 8E6D ED 4A        	adc hl,bc
 446+ 8E6F CD AC 8B     	call Extrae_address
 447+ 8E72 22 9F 89         ld (Datos_de_entidad),hl
 448+ 8E75 C9           	ret
 449+ 8E76
 450+ 8E76              ; ------------------------------------------------------------------
 451+ 8E76
 452+ 8E76              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 453+ 8E76              ; 	inc de
 454+ 8E76              ; 	inc de
 455+ 8E76              ; 	ex de,hl
 456+ 8E76              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 457+ 8E76              ; 	ret
 458+ 8E76
 459+ 8E76              ; ----------------------------------------------------------------------------------------------------------
 460+ 8E76              ;
 461+ 8E76              ;	31/1/24
 462+ 8E76              ;
 463+ 8E76              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 464+ 8E76              ;	_ de entidad.
 465+ 8E76              ;
 466+ 8E76              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 467+ 8E76              ;
 468+ 8E76              ;
 469+ 8E76              ;	MODIFICA: HL,DE y BC
 470+ 8E76
 471+ 8E76
 472+ 8E76              Definicion_de_entidad_a_bandeja_DRAW
 473+ 8E76
 474+ 8E76 11 4C 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 475+ 8E79 01 03 00     	ld bc,3
 476+ 8E7C ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 477+ 8E7E              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 478+ 8E7E 11 56 89     	ld de,Attr									; DE en (Attr).
 479+ 8E81 01 05 00     	ld bc,5
 480+ 8E84 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 481+ 8E86              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 482+ 8E86 11 5F 89     	ld de,Posicion_inicio
 483+ 8E89 01 03 00     	ld bc,3
 484+ 8E8C ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 485+ 8E8E              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 486+ 8E8E 11 6B 89     	ld de,Puntero_de_almacen_de_mov_masticados
 487+ 8E91 01 02 00     	ld bc,2
 488+ 8E94 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 489+ 8E96
 490+ 8E96 11 75 89     	ld de,Frames_explosion
 491+ 8E99 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 492+ 8E9B 12           	ld (de),a 									; Vuelco (Frames_explosion).
 493+ 8E9C
 494+ 8E9C C9           	ret
 495+ 8E9D
 496+ 8E9D              ; ----------------------------------------------------------------------------------------------------------
 497+ 8E9D              ;
 498+ 8E9D              ;	22/01/24
 499+ 8E9D              ;
 500+ 8E9D              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 501+ 8E9D              ;
 502+ 8E9D              ;	Las cajas contienen entidades iniciadas:
 503+ 8E9D              ;
 504+ 8E9D              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 505+ 8E9D              ;
 506+ 8E9D              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 507+ 8E9D              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 508+ 8E9D              ;
 509+ 8E9D              ;	MODIFICA: HL,DE y BC
 510+ 8E9D
 511+ 8E9D 21 4C 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 512+ 8EA0 ED 5B 93 89  	ld de,(Puntero_store_caja)
 513+ 8EA4 7E           	ld a,(hl)
 514+ 8EA5 12           	ld (de),a
 515+ 8EA6 13           	inc de 													; (Tipo).
 516+ 8EA7
 517+ 8EA7 21 53 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 518+ 8EAA 01 02 00     	ld bc,2
 519+ 8EAD ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 520+ 8EAF              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 521+ 8EAF 23           	inc hl
 522+ 8EB0 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 523+ 8EB1 12           	ld (de),a
 524+ 8EB2 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 525+ 8EB3
 526+ 8EB3 21 62 89     	ld hl,Impacto
 527+ 8EB6 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 528+ 8EB7 12           	ld (de),a
 529+ 8EB8 13           	inc de 													; (Impacto), volcado a la caja.
 530+ 8EB9              ;															; DE situado ahora en (Variables_de_borrado).
 531+ 8EB9 23           	inc hl
 532+ 8EBA 01 06 00     	ld bc,6
 533+ 8EBD ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 534+ 8EBF              ; 															; DE situado ahora en (Puntero_de_impresión).
 535+ 8EBF 01 07 00     	ld bc,7
 536+ 8EC2 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 537+ 8EC4              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 538+ 8EC4              ;															; HL apunta ahora a (Columnas).
 539+ 8EC4 21 74 89     	ld hl,Ctrl_2
 540+ 8EC7 7E           	ld a,(hl)
 541+ 8EC8 12           	ld (de),a 												; Volcamos (Ctrl_2).
 542+ 8EC9 13           	inc de
 543+ 8ECA
 544+ 8ECA C9           	ret
 545+ 8ECB
 546+ 8ECB              ;---------------------------------------------------------------------------------------------------------------
 547+ 8ECB              ;
 548+ 8ECB              ;	5/1/24
 549+ 8ECB              ;
 550+ 8ECB              ;	INICIALIZA (Numero_parcial_de_entidades).
 551+ 8ECB              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 552+ 8ECB              ;
 553+ 8ECB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 554+ 8ECB              ;
 555+ 8ECB              ;	(Numero_parcial_de_entidades)="7".
 556+ 8ECB              ;
 557+ 8ECB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 558+ 8ECB              ;
 559+ 8ECB              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 560+ 8ECB              ;
 561+ 8ECB              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 562+ 8ECB              ;	MODIFICA: A y B.
 563+ 8ECB              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 564+ 8ECB
 565+ 8ECB              Inicializa_Numero_parcial_de_entidades
 566+ 8ECB
 567+ 8ECB              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 568+ 8ECB
 569+ 8ECB 3A 99 89     	ld a,(Numero_de_entidades)
 570+ 8ECE A7           	and a
 571+ 8ECF
 572+ 8ECF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 573+ 8ECF              ;	jr z,$
 574+ 8ECF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8ECF
 576+ 8ECF 20 03        	jr nz,3F
 577+ 8ED1
 578+ 8ED1              ; ---------- ---------- ----------
 579+ 8ED1
 580+ 8ED1              ;! RESET para pruebas. Omitir esta línea en modo normal.
 581+ 8ED1              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 582+ 8ED1
 583+ 8ED1 CD F2 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 584+ 8ED4
 585+ 8ED4              ; ---------- ---------- ----------
 586+ 8ED4
 587+ 8ED4 3A 99 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 588+ 8ED7 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 589+ 8ED9 38 08        	jr c,1F
 590+ 8EDB
 591+ 8EDB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 592+ 8EDB              ; Actualizamos variables.
 593+ 8EDB
 594+ 8EDB 3E 07        	ld a,7
 595+ 8EDD 32 9A 89     	ld (Numero_parcial_de_entidades),a
 596+ 8EE0 47           	ld b,a
 597+ 8EE1 18 04        	jr 2F
 598+ 8EE3
 599+ 8EE3              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 600+ 8EE3              ; (Numero_de_entidades)="0".
 601+ 8EE3
 602+ 8EE3 32 9A 89     1 ld (Numero_parcial_de_entidades),a
 603+ 8EE6 47           	ld b,a
 604+ 8EE7 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1719  8EE8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8EE8              ; ******************************************************************************************************************************************************************************************
   2+ 8EE8              ;
   3+ 8EE8              ; 26/06/23
   4+ 8EE8              ;
   5+ 8EE8              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8EE8
   7+ 8EE8              Draw
   8+ 8EE8
   9+ 8EE8 CD D5 91     	call Prepara_draw
  10+ 8EEB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8EEC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8EED 28 05        	jr z,2F
  13+ 8EEF
  14+ 8EEF 3A 61 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8EF2 18 0C        	jr 1F
  16+ 8EF4
  17+ 8EF4 2A 5F 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8EF7 22 4F 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8EFA CD 89 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8EFD              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8EFD
  22+ 8EFD CD 36 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F00
  24+ 8F00 3A 6F 89     1 ld a,(Ctrl_0)
  25+ 8F03 CB 6F        	bit 5,a
  26+ 8F05 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F07
  28+ 8F07 CD 1F 8F     	call Comprueba_limite_horizontal
  29+ 8F0A CD AF 8F     	call Comprueba_limite_vertical
  30+ 8F0D
  31+ 8F0D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F0D              ; -----------------------
  33+ 8F0D              ; -----------------------
  34+ 8F0D              ; -----------------------
  35+ 8F0D
  36+ 8F0D CD 05 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F10 CD 3C 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F13 CD 9B 91     	call Define_rutina_de_impresion
  39+ 8F16
  40+ 8F16 3A 6F 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8F19 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8F1B 32 6F 89     	ld (Ctrl_0),a
  43+ 8F1E
  44+ 8F1E C9           	ret
  45+ 8F1F
  46+ 8F1F              ; *******************************************************************************************************************************************************************************************
  47+ 8F1F              ;	21/01/23
  48+ 8F1F              ;
  49+ 8F1F              ; 	Comprueba_limite_horizontal.
  50+ 8F1F              ;
  51+ 8F1F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8F1F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8F1F              ;
  54+ 8F1F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8F1F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8F1F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8F1F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8F1F
  59+ 8F1F
  60+ 8F1F
  61+ 8F1F 3A 6F 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8F22 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8F24 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8F26 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8F28 32 6F 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8F2B 18 09            jr 6F
  67+ 8F2D CB 5F        1 bit 3,a
  68+ 8F2F 28 0A            jr z,2F
  69+ 8F31 E6 F7            and $f7
  70+ 8F33 32 6F 89         ld (Ctrl_0),a
  71+ 8F36 CD 89 90     6 call Inicializacion
  72+ 8F39 18 5B            jr 5F
  73+ 8F3B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F3C
  75+ 8F3C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F3C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F3C
  78+ 8F3C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F3D 2A 71 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F40 CD CB 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F43 67           	ld h,a
  82+ 8F44 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F45 CD CB 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F48 67           	ld h,a
  85+ 8F49 A7           	and a
  86+ 8F4A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F4C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F4D 3A 61 89     	ld a,(Cuad_objeto)
  89+ 8F50 FE 02        	cp 2
  90+ 8F52 38 1E        	jr c,3F
  91+ 8F54 28 1C        	jr z,3F
  92+ 8F56 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F57 28 23            jr z,7F
  94+ 8F59 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F5B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F5D E1           	pop hl
  97+ 8F5E
  98+ 8F5E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F5E              ; _para indicar con E="2" en caso necesario.
 100+ 8F5E
 101+ 8F5E E5               push hl
 102+ 8F5F C5               push bc
 103+ 8F60 CD CB 9E     	call calcula_tercio
 104+ 8F63 FE 01        	cp 1
 105+ 8F65 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F67 CD 97 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F6A 28 26            jr z,9F
 108+ 8F6C 38 24            jr c,9F
 109+ 8F6E 1E 00        11 ld e,0
 110+ 8F70 18 22            jr 8F
 111+ 8F72 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F73 28 07        	jr z, 7F
 113+ 8F75 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8F77 1E 00         	ld e,0
 115+ 8F79 E1           	pop hl
 116+ 8F7A 18 04        	jr 4F
 117+ 8F7C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8F7E 18 15            jr 10F
 119+ 8F80
 120+ 8F80              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8F80              ; _para indicar con E="2" en caso necesario.
 122+ 8F80
 123+ 8F80 E5           4 push hl
 124+ 8F81 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8F82 CD CB 9E     	call calcula_tercio
 126+ 8F85 FE 01        	cp 1
 127+ 8F87 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8F89 CD 97 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8F8C 28 04            jr z,9F
 130+ 8F8E 30 02            jr nc,9F
 131+ 8F90 18 02        	jr 8F
 132+ 8F92 1E 02        9 ld e,2
 133+ 8F94 C1           8 pop bc
 134+ 8F95 E1           10 pop hl
 135+ 8F96 C9           5 ret
 136+ 8F97
 137+ 8F97              ; --------------------
 138+ 8F97              ;
 139+ 8F97              ; 25/08/22
 140+ 8F97
 141+ 8F97 CD CB 9E     Comprueba_centro call calcula_tercio
 142+ 8F9A 67               ld h,a
 143+ 8F9B 08           	ex af,af
 144+ 8F9C FE 02        	cp 2
 145+ 8F9E 38 07        	jr c,1F
 146+ 8FA0 28 05        	jr z,1F
 147+ 8FA2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8FA5 18 03        	jr 2F
 149+ 8FA7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8FAA 08           2 ex af,af
 151+ 8FAB A7               and a
 152+ 8FAC ED 42            sbc hl,bc
 153+ 8FAE C9               ret
 154+ 8FAF
 155+ 8FAF              ; *********************************************************************************************************************************************************************************************
 156+ 8FAF              ;
 157+ 8FAF              ;   16/8/22
 158+ 8FAF              ;
 159+ 8FAF              ;	Comprueba_limite_vertical
 160+ 8FAF              ;
 161+ 8FAF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8FAF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8FAF              ;
 164+ 8FAF
 165+ 8FAF 2A 4F 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8FB2 7D           	ld a,l
 167+ 8FB3 E6 1F        	and $1F
 168+ 8FB5 57           	ld d,a
 169+ 8FB6 3A 73 89     	ld a,(Limite_vertical)
 170+ 8FB9 BA           	cp d 											; Límite - Posición.
 171+ 8FBA 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8FBB 3A 61 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8FBE CB 47        	bit 0,a
 174+ 8FC0 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8FC2
 176+ 8FC2              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8FC2
 178+ 8FC2 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8FC3 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8FC5
 181+ 8FC5              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8FC5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8FC5
 184+ 8FC5 3A 53 89         ld a,(Coordenada_X)
 185+ 8FC8 16 0F            ld d,Centro_izquierda
 186+ 8FCA A7               and a
 187+ 8FCB 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8FCC 28 1E            jr z,3F
 189+ 8FCE 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8FD0              ;                                                    ; _salimos sin modificar nada.
 191+ 8FD0 18 0E            jr 2F
 192+ 8FD2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8FD3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8FD5
 195+ 8FD5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8FD5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8FD5
 198+ 8FD5 3A 53 89         ld a,(Coordenada_X)
 199+ 8FD8 16 10            ld d,Centro_derecha
 200+ 8FDA A7               and a
 201+ 8FDB 92               sub d
 202+ 8FDC 28 0E            jr z,3F
 203+ 8FDE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8FE0              ;                                                    ; _salimos sin modificar nada.
 205+ 8FE0 CB 43        2 bit 0,e
 206+ 8FE2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8FE4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8FE5 CD 79 90         call Modificaccionne
 209+ 8FE8 C1           	pop bc
 210+ 8FE9 CD 89 90         call Inicializacion
 211+ 8FEC C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8FED
 213+ 8FED              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8FED
 215+ 8FED C5           4 push bc
 216+ 8FEE 01 4E 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8FF1 0A           	ld a,(bc)
 218+ 8FF2 3D           	dec a
 219+ 8FF3 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8FF4 7D           	ld a,l
 221+ 8FF5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8FF6 CB 47        	bit 0,a
 223+ 8FF8 28 03        	jr z,5F
 224+ 8FFA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8FFB 18 2E        	jr 7F
 226+ 8FFD
 227+ 8FFD              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8FFD
 229+ 8FFD 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8FFE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8FFF 3A 6F 89     	ld a,(Ctrl_0)
 232+ 9002 CB 4F        	bit 1,a
 233+ 9004 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9006 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9007
 236+ 9007              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9007
 238+ 9007 1C               inc e
 239+ 9008 1D               dec e
 240+ 9009 20 07            jr nz,12F
 241+ 900B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 900C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 900D 22 4F 89     	ld (Posicion_actual),hl
 244+ 9010 18 44        13 jr 9F
 245+ 9012 CB 43        12 bit 0,e
 246+ 9014 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9016              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9016 C1           	pop bc
 249+ 9017 18 D3        	jr 3B
 250+ 9019 80           14 add b
 251+ 901A 6F               ld l,a
 252+ 901B 22 4F 89     	ld (Posicion_actual),hl
 253+ 901E CD 79 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9021 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9023 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9025 32 6F 89         ld (Ctrl_0),a
 257+ 9028 F1           	pop af
 258+ 9029 18 2B        	jr 9F
 259+ 902B
 260+ 902B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 902B
 262+ 902B F5           7 push af
 263+ 902C 3A 6F 89     	ld a,(Ctrl_0)
 264+ 902F CB 47        	bit 0,a
 265+ 9031 20 1D        	jr nz,8F
 266+ 9033 F1           	pop af
 267+ 9034
 268+ 9034              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9034
 270+ 9034 1C           	inc e
 271+ 9035 1D               dec e
 272+ 9036 20 07            jr nz,10F
 273+ 9038 90           	sub b
 274+ 9039 6F               ld l,a
 275+ 903A 22 4F 89     	ld (Posicion_actual),hl
 276+ 903D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 903F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 903F CB 43        10 bit 0,e
 279+ 9041 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9043              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9043 C1           	pop bc
 282+ 9044 18 A6        	jr 3B
 283+ 9046 90           16 sub b
 284+ 9047 6F               ld l,a
 285+ 9048 22 4F 89     	ld (Posicion_actual),hl
 286+ 904B CD 79 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 904E 18 06            jr 9F
 288+ 9050 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9052 32 6F 89         ld (Ctrl_0),a
 290+ 9055 F1           	pop af
 291+ 9056 C1           9 pop bc
 292+ 9057 1E 00        	ld e,0
 293+ 9059 CD 89 90         call Inicializacion
 294+ 905C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 905D 08           	ex af,af
 296+ 905E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 905F 18 8B            jr 3B
 298+ 9061
 299+ 9061              ; --------------------
 300+ 9061
 301+ 9061 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9063 CD F0 91     1 call PreviousScan
 303+ 9066 10 FB            djnz 1B
 304+ 9068 22 4F 89     	ld (Posicion_actual),hl
 305+ 906B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 906C C9           	ret
 307+ 906D
 308+ 906D              ; --------------------
 309+ 906D
 310+ 906D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 906F CD E1 91     1 call NextScan
 312+ 9072 10 FB            djnz 1B
 313+ 9074 22 4F 89     	ld (Posicion_actual),hl
 314+ 9077 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9078 C9           	ret
 316+ 9079
 317+ 9079              ; --------------------
 318+ 9079              ;
 319+ 9079              ;	22/01/23
 320+ 9079              ;
 321+ 9079              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9079              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9079              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9079
 325+ 9079
 326+ 9079              Modificaccionne
 327+ 9079
 328+ 9079 3A 61 89     	ld a,(Cuad_objeto)
 329+ 907C FE 02        	cp 2
 330+ 907E CC 61 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9081 DC 61 90         call c,Modifica_Pos_actual
 332+ 9084 C8           	ret z
 333+ 9085 CD 6D 90         call Modifica_Pos_actual2
 334+ 9088 C9               ret
 335+ 9089
 336+ 9089              ; *************************************************************************************************************************************************************************************************
 337+ 9089              ;
 338+ 9089              ;	13/8/22
 339+ 9089              ;
 340+ 9089              ;	Inicializacion
 341+ 9089              ;
 342+ 9089              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9089              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9089              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9089              ;
 346+ 9089              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9089              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9089              ;	_ desaparece/aparece.
 349+ 9089
 350+ 9089              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9089              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9089              ;
 353+ 9089              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9089              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9089              ; 		   [E] ="0"
 356+ 9089
 357+ 9089              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9089
 359+ 9089 CD CB 9E     Inicializacion call calcula_tercio
 360+ 908C 28 36        	jr z,primit
 361+ 908E E6 02        	and 2
 362+ 9090 20 07        	jr nz,segmit
 363+ 9092 7D           	ld a,l
 364+ 9093 FE 7F        	cp $7f
 365+ 9095 38 2D        	jr c,primit
 366+ 9097 28 2B        	jr z,primit
 367+ 9099 CD FF 90     segmit call column
 368+ 909C 38 13        	jr c,tercuad
 369+ 909E 3E 04        cuarcuad ld a,4
 370+ 90A0 32 61 89     	ld (Cuad_objeto),a
 371+ 90A3 21 20 48     	ld hl,$4820
 372+ 90A6 22 71 89     	ld (Limite_horizontal),hl
 373+ 90A9 21 73 89     	ld hl,Limite_vertical
 374+ 90AC 36 0D        	ld (hl),$0d
 375+ 90AE 08           	ex af,af
 376+ 90AF 18 3C        	jr 1F
 377+ 90B1              tercuad
 378+ 90B1 3E 03        	ld a,3
 379+ 90B3 32 61 89     	ld (Cuad_objeto),a
 380+ 90B6 21 20 48     	ld hl,$4820
 381+ 90B9 22 71 89     	ld (Limite_horizontal),hl
 382+ 90BC 21 73 89     	ld hl,Limite_vertical
 383+ 90BF 36 12        	ld (hl),$12
 384+ 90C1 08           	ex af,af
 385+ 90C2 18 29        	jr 1F
 386+ 90C4 CD FF 90     primit call column
 387+ 90C7 38 13        	jr c, primcuad
 388+ 90C9              segcuad
 389+ 90C9 3E 02        	ld a,2
 390+ 90CB 32 61 89     	ld (Cuad_objeto),a
 391+ 90CE 21 C0 4F     	ld hl,$4fc0
 392+ 90D1 22 71 89     	ld (Limite_horizontal),hl
 393+ 90D4 21 73 89     	ld hl,Limite_vertical
 394+ 90D7 36 0D        	ld (hl),$0d
 395+ 90D9 08           	ex af,af
 396+ 90DA 18 11        	jr 1F
 397+ 90DC              primcuad
 398+ 90DC 3E 01        	ld a,1
 399+ 90DE 32 61 89     	ld (Cuad_objeto),a
 400+ 90E1 21 C0 4F     	ld hl,$4fc0
 401+ 90E4 22 71 89     	ld (Limite_horizontal),hl
 402+ 90E7 21 73 89     	ld hl,Limite_vertical
 403+ 90EA 36 12        	ld (hl),$12
 404+ 90EC 08           	ex af,af
 405+ 90ED
 406+ 90ED C5           1 push bc
 407+ 90EE E5           	push hl
 408+ 90EF D5           	push de
 409+ 90F0
 410+ 90F0 2A 4F 89     	ld hl,(Posicion_actual)
 411+ 90F3 CD E9 9E     	call Genera_coordenadas
 412+ 90F6
 413+ 90F6 D1           	pop de
 414+ 90F7 E1           	pop hl
 415+ 90F8 C1           	pop bc
 416+ 90F9
 417+ 90F9 21 6F 89     	ld hl,Ctrl_0
 418+ 90FC CB EE        	set 5,(hl)
 419+ 90FE C9           	ret
 420+ 90FF
 421+ 90FF              ; ------------------------------------------------------------------------------------------------------------------
 422+ 90FF
 423+ 90FF              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 90FF              ;
 425+ 90FF              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 90FF
 427+ 90FF 7D           column ld a,l
 428+ 9100 E6 1F        	and $1f
 429+ 9102 FE 10         	cp $10
 430+ 9104 C9            	ret
 431+ 9105
 432+ 9105              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9105              ;
 434+ 9105              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9105              ;
 436+ 9105              ; 14/12/22
 437+ 9105              ;
 438+ 9105              ;	Modifica: A y BC.
 439+ 9105
 440+ 9105 3A 61 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9108 E6 01        	and 1
 442+ 910A 28 17        	jr z,1F
 443+ 910C
 444+ 910C              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 910C
 446+ 910C 3A 53 89     	ld a,(Coordenada_X)
 447+ 910F 47           	ld b,a
 448+ 9110 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9111 79           	ld a,c
 450+ 9112 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9113 38 08        	jr c,2F
 452+ 9115 47           	ld b,a
 453+ 9116 79           	ld a,c
 454+ 9117 90           	sub b
 455+ 9118 32 70 89     	ld (Columnas),a
 456+ 911B 18 1B        	jr 4F
 457+ 911D 79           2 ld a,c
 458+ 911E 32 70 89     	ld (Columnas),a
 459+ 9121 18 15        	jr 4F
 460+ 9123
 461+ 9123              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9123
 463+ 9123 3A 53 89     1 ld a,(Coordenada_X)
 464+ 9126 81           	add c
 465+ 9127 3D           	dec a
 466+ 9128 D6 1F        	sub $1f
 467+ 912A 38 08        	jr c,3F
 468+ 912C 47           	ld b,a
 469+ 912D 79           	ld a,c
 470+ 912E 90           	sub b
 471+ 912F 32 70 89     	ld (Columnas),a
 472+ 9132 18 04        	jr 4F
 473+ 9134 79           3 ld a,c
 474+ 9135 32 70 89     	ld (Columnas),a
 475+ 9138 D9           4 exx
 476+ 9139 4F           	ld c,a
 477+ 913A D9           	exx
 478+ 913B C9            ret
 479+ 913C
 480+ 913C              ; --------------------------------------------------------------------------------------------------------------------
 481+ 913C              ;
 482+ 913C              ;   19/7/23
 483+ 913C              ;
 484+ 913C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 913C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 913C              ;
 487+ 913C              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 913C              ;			HL e IY Contienen (Puntero_objeto).
 489+ 913C              ;
 490+ 913C              ;	DESTRUYE: HL,B Y A.
 491+ 913C
 492+ 913C 3A 61 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 913F FE 02        	cp 2
 494+ 9141 38 18        	jr c,1F
 495+ 9143 28 16        	jr z,1F
 496+ 9145 E6 01        	and 1
 497+ 9147 28 0D        	jr z,3F
 498+ 9149
 499+ 9149              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9149
 501+ 9149 CD 8F 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 914C
 503+ 914C 7D           9 ld a,l
 504+ 914D E6 1F        	and $1f
 505+ 914F 28 2A        	jr z,7F
 506+ 9151 2B           	dec hl
 507+ 9152 10 F8        	djnz 9B
 508+ 9154 18 25        	jr 7F
 509+ 9156
 510+ 9156              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9156
 512+ 9156 2A 4F 89     3 ld hl,(Posicion_actual)
 513+ 9159 18 20        	jr 7F
 514+ 915B
 515+ 915B 28 14        1 jr z,2F
 516+ 915D
 517+ 915D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 915D
 519+ 915D CD 8F 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9160
 521+ 9160 7D           4 ld a,l
 522+ 9161 E6 1F        	and $1f
 523+ 9163 28 03        	jr z,6F
 524+ 9165 2B           	dec hl
 525+ 9166 10 F8        	djnz 4B
 526+ 9168 06 0F        6 ld b,15
 527+ 916A CD F0 91     5 call PreviousScan
 528+ 916D 10 FB        	djnz 5B
 529+ 916F 18 0A        	jr 7F
 530+ 9171
 531+ 9171              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9171
 533+ 9171 CD 8F 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9174 06 0F        	ld b,15
 535+ 9176 CD F0 91     8 call PreviousScan
 536+ 9179 10 FB        	djnz 8B
 537+ 917B
 538+ 917B E5           7 push hl
 539+ 917C DD E1        	pop ix
 540+ 917E
 541+ 917E 2A 51 89     	ld hl,(Puntero_objeto)
 542+ 9181 E5           	push hl
 543+ 9182 FD E1        	pop iy
 544+ 9184
 545+ 9184              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9184
 547+ 9184 3A 6F 89     	ld a,(Ctrl_0)
 548+ 9187 CB 77        	bit 6,a
 549+ 9189 C8           	ret z
 550+ 918A
 551+ 918A              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 918A              ; _ entidad / Amadeus´.
 553+ 918A
 554+ 918A DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 918E
 556+ 918E C9           	ret
 557+ 918F
 558+ 918F              ; --------------------------------------------------------------------------------------------------------------------
 559+ 918F              ;
 560+ 918F              ;	2/1/23
 561+ 918F              ;
 562+ 918F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 918F              ;
 564+ 918F              ;	Tras esta rutina tenemos:
 565+ 918F              ;
 566+ 918F              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 918F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 918F              ;
 569+ 918F              ;	DESTRUYE!!!!! HL,B y A.
 570+ 918F
 571+ 918F 2A 4F 89     Operandos ld hl,(Posicion_actual)
 572+ 9192 3A 70 89     	ld a,(Columnas)
 573+ 9195 3D           	dec a
 574+ 9196 20 01        	jr nz,1F
 575+ 9198 3C           	inc a
 576+ 9199 47           1 ld b,a
 577+ 919A C9           	ret
 578+ 919B
 579+ 919B              ; --------------------------------------------------------------------------------------------------------------------
 580+ 919B              ;
 581+ 919B              ;	3/1/23
 582+ 919B              ;
 583+ 919B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 919B              ;
 585+ 919B              ;	Destruye: A,B,HL y DE.
 586+ 919B
 587+ 919B              Define_rutina_de_impresion
 588+ 919B
 589+ 919B 3A 4E 89     	ld a,(Columns)
 590+ 919E 47           	ld b,a
 591+ 919F 3A 70 89     	ld a,(Columnas)
 592+ 91A2 B8           	cp b
 593+ 91A3 20 0D        	jr nz,2f
 594+ 91A5
 595+ 91A5              ;	La entidad se imprime entera.
 596+ 91A5
 597+ 91A5 21 C4 92     	ld hl, Indice_entidades_completas
 598+ 91A8 E6 01        	and 1
 599+ 91AA 28 02        	jr z,1F
 600+ 91AC
 601+ 91AC 23           	inc hl
 602+ 91AD 23           	inc hl
 603+ 91AE
 604+ 91AE CD AC 8B     1 call Extrae_address
 605+ 91B1 C9           	ret		;	ret
 606+ 91B2
 607+ 91B2              ;	La entidad no se imprime entera en pantalla.
 608+ 91B2
 609+ 91B2 3A 61 89     2 ld a,(Cuad_objeto)
 610+ 91B5 E6 01        	and 1
 611+ 91B7 28 17        	jr z,3F
 612+ 91B9
 613+ 91B9              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 91B9
 615+ 91B9 21 C8 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 91BC 3A 4E 89     4 ld a,(Columns)
 617+ 91BF E6 01        	and 1
 618+ 91C1 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 91C3
 620+ 91C3 23           	inc hl
 621+ 91C4 23           	inc hl
 622+ 91C5
 623+ 91C5 3A 70 89     	ld a,(Columnas)
 624+ 91C8 E6 01        	and 1
 625+ 91CA 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 91CC
 627+ 91CC 23           	inc hl
 628+ 91CD 23           	inc hl
 629+ 91CE
 630+ 91CE 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 91D0
 632+ 91D0 21 CE 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 91D3 18 E7        	jr 4B
 634+ 91D5
 635+ 91D5              ; --------------------------------------------------------------------------------------------------------------------
 636+ 91D5              ;
 637+ 91D5              ;	Prepara_draw
 638+ 91D5              ;
 639+ 91D5              ;	Es una rutina de carga.
 640+ 91D5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 91D5              ;
 642+ 91D5              ;	FUNCIONAMIENTO:
 643+ 91D5              ;
 644+ 91D5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 91D5              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 91D5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 91D5              ;
 648+ 91D5              ;	DESTRUYE:
 649+ 91D5              ;
 650+ 91D5              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 91D5
 652+ 91D5 21 4D 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 91D8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 91D9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 91DA 4E           	ld c,(hl)
 656+ 91DB 2A 4F 89     	ld hl,(Posicion_actual)
 657+ 91DE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 91E0 C9           	ret
 659+ 91E1
 660+ 91E1              ;----------------------------------------------------------------------------------------------------------------
 661+ 91E1              ;
 662+ 91E1              ;	5/08/22
 663+ 91E1              ;
 664+ 91E1              ;   NextScan.
 665+ 91E1              ;
 666+ 91E1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 91E1              ;
 668+ 91E1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 91E1              ;
 670+ 91E1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 91E1              ;
 672+ 91E1              ;       DESTRUIDOS: AF y HL !!!
 673+ 91E1              ;
 674+ 91E1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 91E1              ;
 676+ 91E1
 677+ 91E1 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 91E2 7C               ld a,h
 679+ 91E3 E6 07            and 7
 680+ 91E5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 91E6
 682+ 91E6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 91E7 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 91E9 6F               ld l,a
 685+ 91EA D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 91EB
 687+ 91EB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 91EC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 91EE 67               ld h,a
 690+ 91EF C9               ret
 691+ 91F0
 692+ 91F0              ;----------------------------------------------------------------------------------------------------------------
 693+ 91F0              ;
 694+ 91F0              ;	5/08/22
 695+ 91F0              ;
 696+ 91F0              ;   PreviousScan.
 697+ 91F0              ;
 698+ 91F0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 91F0              ;
 700+ 91F0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 91F0              ;
 702+ 91F0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 91F0              ;
 704+ 91F0              ;       DESTRUIDOS: AF y HL !!!
 705+ 91F0              ;
 706+ 91F0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 91F0              ;
 708+ 91F0
 709+ 91F0 7C           PreviousScan ld a,h
 710+ 91F1 25               dec h               ; Dec H.
 711+ 91F2 E6 07            and 7
 712+ 91F4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 91F5
 714+ 91F5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 91F6 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 91F8 6F               ld l,a
 717+ 91F9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 91FA
 719+ 91FA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 91FB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 91FD 67               ld h,a
 722+ 91FE C9               ret
 723+ 91FF
 724+ 91FF              ; -----------------------------------------------------------------------------------
 725+ 91FF              ;
 726+ 91FF              ;	31/7/23
 727+ 91FF              ;
 728+ 91FF              ;	Rutina principal de pintado de entidades.
 729+ 91FF              ;	Extrae la foto del frame, (entidades).
 730+ 91FF
 731+ 91FF              Extrae_foto_entidades
 732+ 91FF
 733+ 91FF 21 01 80     	ld hl,Album_de_fotos+1
 734+ 9202 7E           	ld a,(hl)
 735+ 9203 A7           	and a
 736+ 9204 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9205
 738+ 9205              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9205
 740+ 9205 3A 9C 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9208 A7           	and a
 742+ 9209 C8           	ret z
 743+ 920A
 744+ 920A              ; -----------------------------------
 745+ 920A
 746+ 920A ED 73 A1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 920E 31 00 80     	ld sp,Album_de_fotos
 748+ 9211
 749+ 9211 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9213 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9214 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9215
 753+ 9215 ED 73 A3 89  	ld (Stack_2),sp
 754+ 9219 ED 7B A1 89  	ld sp,(Stack)
 755+ 921D
 756+ 921D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 921D
 758+ 921D 3E CD        	ld a,$cd
 759+ 921F 32 27 92     	ld (Imprime),a
 760+ 9222 EB           	ex de,hl
 761+ 9223 22 28 92     	ld (Imprime+1),hl
 762+ 9226 EB           	ex de,hl
 763+ 9227
 764+ 9227              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9227
 766+ 9227 00 00 00     Imprime db 0,0,0
 767+ 922A
 768+ 922A ED 73 A1 89  	ld (Stack),sp
 769+ 922E
 770+ 922E 3A 9C 89     	ld a,(Numero_de_malotes)
 771+ 9231 3D           	dec a
 772+ 9232 28 09        	jr z,1F
 773+ 9234 32 9C 89      	ld (Numero_de_malotes),a
 774+ 9237
 775+ 9237 ED 7B A3 89  	ld sp,(Stack_2)
 776+ 923B 18 D4        	jr 2B
 777+ 923D
 778+ 923D AF           1 xor a
 779+ 923E 32 A3 89     	ld (Stack_2),a
 780+ 9241
 781+ 9241 C9           	ret
 782+ 9242
 783+ 9242              ; -----------------------------------------------------------------------------------
 784+ 9242              ;
 785+ 9242              ;	28/2/23
 786+ 9242              ;
 787+ 9242              ;	Pinta los disparos generados.
 788+ 9242
 789+ 9242              Extrae_foto_disparos
 790+ 9242
 791+ 9242 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9245 7E               ld a,(hl)
 793+ 9246 A7               and a
 794+ 9247 C8               ret z
 795+ 9248
 796+ 9248 3A B1 89     	ld a,(Numero_de_disparotes)
 797+ 924B A7           	and a
 798+ 924C C8           	ret z
 799+ 924D ED 73 A1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9251 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9254
 802+ 9254 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9256 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9257 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9258
 806+ 9258 ED 73 A3 89  	ld (Stack_2),sp
 807+ 925C ED 7B A1 89  	ld sp,(Stack)
 808+ 9260
 809+ 9260              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9260
 811+ 9260 3E CD        	ld a,$cd
 812+ 9262 32 6A 92     	ld (Imprime2),a
 813+ 9265 EB           	ex de,hl
 814+ 9266 22 6B 92     	ld (Imprime2+1),hl
 815+ 9269 EB           	ex de,hl
 816+ 926A
 817+ 926A              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 926A
 819+ 926A 00 00 00     Imprime2 db 0,0,0
 820+ 926D
 821+ 926D 3A B1 89     	ld a,(Numero_de_disparotes)
 822+ 9270 3D           	dec a
 823+ 9271 28 09        	jr z,1F
 824+ 9273 32 B1 89      	ld (Numero_de_disparotes),a
 825+ 9276
 826+ 9276 ED 7B A3 89  	ld sp,(Stack_2)
 827+ 927A 18 D8        	jr 2B
 828+ 927C
 829+ 927C AF           1 xor a
 830+ 927D 32 A3 89     	ld (Stack_2),a
 831+ 9280 C9           	ret
 832+ 9281
 833+ 9281              ; -----------------------------------------------------------------------------------
 834+ 9281              ;
 835+ 9281              ;	4/9/23
 836+ 9281              ;
 837+ 9281              ;	Rutina principal de pintado de Amadeus.
 838+ 9281              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9281
 840+ 9281 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9284 7E           	ld a,(hl)
 842+ 9285 A7           	and a
 843+ 9286 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9287
 845+ 9287 3A 9C 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 928A A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 928B C8           	ret z
 848+ 928C
 849+ 928C              ; -----------------------------------
 850+ 928C
 851+ 928C ED 73 A1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9290 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 9293
 854+ 9293 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9295 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9296 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9297
 858+ 9297 ED 73 A3 89  	ld (Stack_2),sp
 859+ 929B ED 7B A1 89  	ld sp,(Stack)
 860+ 929F
 861+ 929F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 929F
 863+ 929F 3E CD        	ld a,$cd
 864+ 92A1 32 A9 92     	ld (Imprime_Amadeus),a
 865+ 92A4 EB           	ex de,hl
 866+ 92A5 22 AA 92     	ld (Imprime_Amadeus+1),hl
 867+ 92A8 EB           	ex de,hl
 868+ 92A9
 869+ 92A9              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92A9
 871+ 92A9 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 92AC
 873+ 92AC ED 73 A1 89  	ld (Stack),sp
 874+ 92B0
 875+ 92B0 3A 9C 89     	ld a,(Numero_de_malotes)
 876+ 92B3 3D           	dec a
 877+ 92B4 28 09        	jr z,1F
 878+ 92B6 32 9C 89      	ld (Numero_de_malotes),a
 879+ 92B9
 880+ 92B9 ED 7B A3 89  	ld sp,(Stack_2)
 881+ 92BD 18 D4        	jr 2B
 882+ 92BF
 883+ 92BF AF           1 xor a
 884+ 92C0 32 A3 89     	ld (Stack_2),a
 885+ 92C3
 886+ 92C3 C9           	ret
# file closed: Draw_XOR.asm
1720  92C4              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92C4              ;   índices de Rutinas de impresión.
   2+ 92C4
   3+ 92C4 D4 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92C6 01 93            defw Pinta_Amadeus_3x2
   5+ 92C8
   6+ 92C8 57 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92CA F7 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92CC AB 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92CE
  10+ 92CE 81 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92D0 85 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92D2 39 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92D4
  14+ 92D4
  15+ 92D4              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92D4              ;
  17+ 92D4              ;   12/12/22
  18+ 92D4              ;
  19+ 92D4              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92D4              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92D4              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92D4              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92D4              ;
  24+ 92D4              ;   Modifica: DE y HL.
  25+ 92D4
  26+ 92D4 ED 73 A1 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92D8 FD F9        	ld sp,iy
  28+ 92DA 06 10            ld b,16
  29+ 92DC D1           1 pop de
  30+ 92DD 7B               ld a,e
  31+ 92DE AE               xor (hl)
  32+ 92DF 77           	ld (hl),a
  33+ 92E0 23           	inc hl
  34+ 92E1 7A               ld a,d
  35+ 92E2 AE               xor (hl)
  36+ 92E3 77           	ld (hl),a
  37+ 92E4 2B           	dec hl
  38+ 92E5 24           	inc h
  39+ 92E6 7C               ld a,h
  40+ 92E7 E6 07            and 7
  41+ 92E9 20 0A            jr nz,2F
  42+ 92EB 7D               ld a,l
  43+ 92EC C6 20            add a,$20
  44+ 92EE 6F               ld l,a
  45+ 92EF 38 04            jr c,2F
  46+ 92F1 7C               ld a,h
  47+ 92F2 D6 08            sub 8
  48+ 92F4 67               ld h,a
  49+ 92F5 7C           2 ld a,h
  50+ 92F6 FE 58            cp $58
  51+ 92F8 28 02            jr z,3F
  52+ 92FA 10 E0            djnz 1B
  53+ 92FC ED 7B A1 89  3 ld sp,(Stack)
  54+ 9300 C9           	ret
  55+ 9301
  56+ 9301 ED 73 A1 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9305 FD F9        	ld sp,iy
  58+ 9307 06 08            ld b,8
  59+ 9309 D1           1 pop de
  60+ 930A 7B               ld a,e
  61+ 930B AE               xor (hl)
  62+ 930C 77           	ld (hl),a
  63+ 930D 23           	inc hl
  64+ 930E 7A               ld a,d
  65+ 930F AE               xor (hl)
  66+ 9310 77           	ld (hl),a
  67+ 9311 23           	inc hl
  68+ 9312 D1           	pop de
  69+ 9313 7B               ld a,e
  70+ 9314 AE               xor (hl)
  71+ 9315 77           	ld (hl),a
  72+ 9316 2B           	dec hl
  73+ 9317 2B           	dec hl
  74+ 9318 24           	inc h
  75+ 9319 7C               ld a,h
  76+ 931A E6 07            and 7
  77+ 931C 20 0A            jr nz,2F
  78+ 931E 7D               ld a,l
  79+ 931F C6 20            add a,$20
  80+ 9321 6F               ld l,a
  81+ 9322 38 04            jr c,2F
  82+ 9324 7C               ld a,h
  83+ 9325 D6 08            sub 8
  84+ 9327 67               ld h,a
  85+ 9328 7C           2 ld a,h
  86+ 9329 FE 58            cp $58
  87+ 932B 28 25            jr z,4F
  88+ 932D 7A               ld a,d
  89+ 932E AE               xor (hl)
  90+ 932F 77               ld (hl),a
  91+ 9330 D1           	pop de
  92+ 9331 23           	inc hl
  93+ 9332 7B               ld a,e
  94+ 9333 AE               xor (hl)
  95+ 9334 77           	ld (hl),a
  96+ 9335 23           	inc hl
  97+ 9336 7A               ld a,d
  98+ 9337 AE               xor (hl)
  99+ 9338 77           	ld (hl),a
 100+ 9339 2B           	dec hl
 101+ 933A 2B           	dec hl
 102+ 933B 24           	inc h
 103+ 933C 7C               ld a,h
 104+ 933D E6 07            and 7
 105+ 933F 20 0A            jr nz,3F
 106+ 9341 7D               ld a,l
 107+ 9342 C6 20            add a,$20
 108+ 9344 6F               ld l,a
 109+ 9345 38 04            jr c,3F
 110+ 9347 7C               ld a,h
 111+ 9348 D6 08            sub 8
 112+ 934A 67               ld h,a
 113+ 934B 7C           3 ld a,h
 114+ 934C FE 58            cp $58
 115+ 934E 28 02            jr z,4F
 116+ 9350 10 B7            djnz 1B
 117+ 9352 ED 7B A1 89  4 ld sp,(Stack)
 118+ 9356 C9           	ret
 119+ 9357
 120+ 9357              ; ---------------------------------------------------
 121+ 9357
 122+ 9357 ED 73 A1 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 935B FD F9        	ld sp,iy
 124+ 935D
 125+ 935D              ; >>>
 126+ 935D
 127+ 935D 06 10            ld b,16
 128+ 935F D1           1 pop de
 129+ 9360 7A           	ld a,d
 130+ 9361 AE           	xor (hl)
 131+ 9362 77           	ld (hl),a
 132+ 9363 24           	inc h
 133+ 9364 7C               ld a,h
 134+ 9365 E6 07            and 7
 135+ 9367 20 0C            jr nz,2F
 136+ 9369 7D               ld a,l
 137+ 936A C6 20            add a,$20
 138+ 936C 6F               ld l,a
 139+ 936D 38 06            jr c,2F
 140+ 936F 7C               ld a,h
 141+ 9370 D6 08            sub 8
 142+ 9372 67               ld h,a
 143+ 9373 18 00            jr 2F
 144+ 9375 7C           2 ld a,h
 145+ 9376 FE 58            cp $58
 146+ 9378 28 02            jr z,3F
 147+ 937A 10 E3            djnz 1B
 148+ 937C ED 7B A1 89  3 ld sp,(Stack)
 149+ 9380 C9           	ret
 150+ 9381
 151+ 9381 ED 73 A1 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9385 FD F9        	ld sp,iy
 153+ 9387
 154+ 9387              ; >>>
 155+ 9387
 156+ 9387 06 10            ld b,16
 157+ 9389 D1           1 pop de
 158+ 938A 7B           	ld a,e
 159+ 938B AE           	xor (hl)
 160+ 938C 77           	ld (hl),a
 161+ 938D 24           	inc h
 162+ 938E 7C               ld a,h
 163+ 938F E6 07            and 7
 164+ 9391 20 0C            jr nz,2F
 165+ 9393 7D               ld a,l
 166+ 9394 C6 20            add a,$20
 167+ 9396 6F               ld l,a
 168+ 9397 38 06            jr c,2F
 169+ 9399 7C               ld a,h
 170+ 939A D6 08            sub 8
 171+ 939C 67               ld h,a
 172+ 939D 18 00            jr 2F
 173+ 939F 7C           2 ld a,h
 174+ 93A0 FE 58            cp $58
 175+ 93A2 28 02            jr z,3F
 176+ 93A4 10 E3            djnz 1B
 177+ 93A6 ED 7B A1 89  3 ld sp,(Stack)
 178+ 93AA C9           	ret
 179+ 93AB
 180+ 93AB              ; ---------------------------------------------------
 181+ 93AB
 182+ 93AB ED 73 A1 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93AF FD F9        	ld sp,iy
 184+ 93B1 06 08            ld b,8
 185+ 93B3 D1           1 pop de
 186+ 93B4 7A           	ld a,d
 187+ 93B5 AE           	xor (hl)
 188+ 93B6 77           	ld (hl),a
 189+ 93B7 23           	inc hl
 190+ 93B8 D1           	pop de
 191+ 93B9 7B           	ld a,e
 192+ 93BA AE           	xor (hl)
 193+ 93BB 77           	ld (hl),a
 194+ 93BC 2B           	dec hl
 195+ 93BD 24            	inc h
 196+ 93BE 7C               ld a,h
 197+ 93BF E6 07            and 7
 198+ 93C1 20 0A            jr nz,2F
 199+ 93C3 7D               ld a,l
 200+ 93C4 C6 20            add a,$20
 201+ 93C6 6F               ld l,a
 202+ 93C7 38 04            jr c,2F
 203+ 93C9 7C               ld a,h
 204+ 93CA D6 08            sub 8
 205+ 93CC 67               ld h,a
 206+ 93CD 7C           2 ld a,h
 207+ 93CE FE 58            cp $58
 208+ 93D0 28 20            jr z,4F
 209+ 93D2 D1               pop de
 210+ 93D3 7B           	ld a,e
 211+ 93D4 AE           	xor (hl)
 212+ 93D5 77           	ld (hl),a
 213+ 93D6 23           	inc hl
 214+ 93D7 7A           	ld a,d
 215+ 93D8 AE           	xor (hl)
 216+ 93D9 77           	ld (hl),a
 217+ 93DA 2B           	dec hl
 218+ 93DB 24           	inc h
 219+ 93DC 7C               ld a,h
 220+ 93DD E6 07            and 7
 221+ 93DF 20 0A            jr nz,3F
 222+ 93E1 7D               ld a,l
 223+ 93E2 C6 20            add a,$20
 224+ 93E4 6F               ld l,a
 225+ 93E5 38 04            jr c,3F
 226+ 93E7 7C               ld a,h
 227+ 93E8 D6 08            sub 8
 228+ 93EA 67               ld h,a
 229+ 93EB 7C           3 ld a,h
 230+ 93EC FE 58            cp $58
 231+ 93EE 28 02            jr z,4F
 232+ 93F0 10 C1            djnz 1B
 233+ 93F2 ED 7B A1 89  4 ld sp,(Stack)
 234+ 93F6 C9           	ret
 235+ 93F7
 236+ 93F7 ED 73 A1 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 93FB FD F9        	ld sp,iy
 238+ 93FD 06 08            ld b,8
 239+ 93FF D1           1 pop de
 240+ 9400 D1           	pop de
 241+ 9401 7B           	ld a,e
 242+ 9402 AE           	xor (hl)
 243+ 9403 77           	ld (hl),a
 244+ 9404 24            	inc h
 245+ 9405 7C               ld a,h
 246+ 9406 E6 07            and 7
 247+ 9408 20 0A            jr nz,2F
 248+ 940A 7D               ld a,l
 249+ 940B C6 20            add a,$20
 250+ 940D 6F               ld l,a
 251+ 940E 38 04            jr c,2F
 252+ 9410 7C               ld a,h
 253+ 9411 D6 08            sub 8
 254+ 9413 67               ld h,a
 255+ 9414 7C           2 ld a,h
 256+ 9415 FE 58            cp $58
 257+ 9417 28 1B            jr z,4F
 258+ 9419 D1               pop de
 259+ 941A 7A           	ld a,d
 260+ 941B AE           	xor (hl)
 261+ 941C 77           	ld (hl),a
 262+ 941D 24           	inc h
 263+ 941E 7C               ld a,h
 264+ 941F E6 07            and 7
 265+ 9421 20 0A            jr nz,3F
 266+ 9423 7D               ld a,l
 267+ 9424 C6 20            add a,$20
 268+ 9426 6F               ld l,a
 269+ 9427 38 04            jr c,3F
 270+ 9429 7C               ld a,h
 271+ 942A D6 08            sub 8
 272+ 942C 67               ld h,a
 273+ 942D 7C           3 ld a,h
 274+ 942E FE 58            cp $58
 275+ 9430 28 02            jr z,4F
 276+ 9432 10 CB            djnz 1B
 277+ 9434 ED 7B A1 89  4 ld sp,(Stack)
 278+ 9438 C9           	ret
 279+ 9439
 280+ 9439 ED 73 A1 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 943D FD F9        	ld sp,iy
 282+ 943F 06 08            ld b,8
 283+ 9441 D1           1 pop de
 284+ 9442 7B           	ld a,e
 285+ 9443 AE           	xor (hl)
 286+ 9444 77           	ld (hl),a
 287+ 9445 23           	inc hl
 288+ 9446 7A           	ld a,d
 289+ 9447 AE           	xor (hl)
 290+ 9448 77           	ld (hl),a
 291+ 9449 2B           	dec hl
 292+ 944A 24             	inc h
 293+ 944B 7C               ld a,h
 294+ 944C E6 07            and 7
 295+ 944E 20 0A            jr nz,2F
 296+ 9450 7D               ld a,l
 297+ 9451 C6 20            add a,$20
 298+ 9453 6F               ld l,a
 299+ 9454 38 04            jr c,2F
 300+ 9456 7C               ld a,h
 301+ 9457 D6 08            sub 8
 302+ 9459 67               ld h,a
 303+ 945A 7C           2 ld a,h
 304+ 945B FE 58            cp $58
 305+ 945D 28 21            jr z,4F
 306+ 945F D1               pop de
 307+ 9460 7A           	ld a,d
 308+ 9461 AE           	xor (hl)
 309+ 9462 77           	ld (hl),a
 310+ 9463 23           	inc hl
 311+ 9464 D1               pop de
 312+ 9465 7B           	ld a,e
 313+ 9466 AE           	xor (hl)
 314+ 9467 77           	ld (hl),a
 315+ 9468 2B           	dec hl
 316+ 9469 24           	inc h
 317+ 946A 7C               ld a,h
 318+ 946B E6 07            and 7
 319+ 946D 20 0A            jr nz,3F
 320+ 946F 7D               ld a,l
 321+ 9470 C6 20            add a,$20
 322+ 9472 6F               ld l,a
 323+ 9473 38 04            jr c,3F
 324+ 9475 7C               ld a,h
 325+ 9476 D6 08            sub 8
 326+ 9478 67               ld h,a
 327+ 9479 7C           3 ld a,h
 328+ 947A FE 58            cp $58
 329+ 947C 28 02            jr z,4F
 330+ 947E 10 C1            djnz 1B
 331+ 9480 ED 7B A1 89  4 ld sp,(Stack)
 332+ 9484 C9           	ret
 333+ 9485
 334+ 9485 ED 73 A1 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9489 FD F9        	ld sp,iy
 336+ 948B 06 08            ld b,8
 337+ 948D D1           1 pop de
 338+ 948E 7B           	ld a,e
 339+ 948F AE           	xor (hl)
 340+ 9490 77           	ld (hl),a
 341+ 9491 24            	inc h
 342+ 9492 7C               ld a,h
 343+ 9493 E6 07            and 7
 344+ 9495 20 0A            jr nz,2F
 345+ 9497 7D               ld a,l
 346+ 9498 C6 20            add a,$20
 347+ 949A 6F               ld l,a
 348+ 949B 38 04            jr c,2F
 349+ 949D 7C               ld a,h
 350+ 949E D6 08            sub 8
 351+ 94A0 67               ld h,a
 352+ 94A1 7C           2 ld a,h
 353+ 94A2 FE 58            cp $58
 354+ 94A4 28 1C            jr z,4F
 355+ 94A6 D1               pop de
 356+ 94A7 7A           	ld a,d
 357+ 94A8 AE           	xor (hl)
 358+ 94A9 77           	ld (hl),a
 359+ 94AA 24           	inc h
 360+ 94AB 7C               ld a,h
 361+ 94AC E6 07            and 7
 362+ 94AE 20 0A            jr nz,3F
 363+ 94B0 7D               ld a,l
 364+ 94B1 C6 20            add a,$20
 365+ 94B3 6F               ld l,a
 366+ 94B4 38 04            jr c,3F
 367+ 94B6 7C               ld a,h
 368+ 94B7 D6 08            sub 8
 369+ 94B9 67               ld h,a
 370+ 94BA 7C           3 ld a,h
 371+ 94BB FE 58            cp $58
 372+ 94BD 28 03            jr z,4F
 373+ 94BF D1               pop de
 374+ 94C0 10 CB            djnz 1B
 375+ 94C2 ED 7B A1 89  4 ld sp,(Stack)
 376+ 94C6 C9           	ret
 377+ 94C7
 378+ 94C7              ; ---------------------------------------------------
 379+ 94C7              ;
 380+ 94C7              ;   27/02/23
 381+ 94C7              ;
 382+ 94C7              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94C7              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94C7              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94C7
 386+ 94C7 ED 73 A1 89  Pinta_Disparo ld (Stack),sp
 387+ 94CB FD F9            ld sp,iy
 388+ 94CD 06 03            ld b,3
 389+ 94CF D1           1 pop de
 390+ 94D0 7B               ld a,e
 391+ 94D1 AE               xor (hl)
 392+ 94D2 77               ld (hl),a
 393+ 94D3 23               inc hl
 394+ 94D4 7A               ld a,d
 395+ 94D5 AE               xor (hl)
 396+ 94D6 77               ld (hl),a
 397+ 94D7 2B               dec hl
 398+ 94D8
 399+ 94D8 24               inc h
 400+ 94D9 7C               ld a,h
 401+ 94DA E6 07            and 7
 402+ 94DC 20 0A            jr nz,2F
 403+ 94DE 7D               ld a,l
 404+ 94DF C6 20            add a,$20
 405+ 94E1 6F               ld l,a
 406+ 94E2 38 04            jr c,2F
 407+ 94E4 7C               ld a,h
 408+ 94E5 D6 08            sub 8
 409+ 94E7 67               ld h,a
 410+ 94E8 7C           2 ld a,h
 411+ 94E9 FE 58            cp $58
 412+ 94EB 28 02            jr z,3F
 413+ 94ED
 414+ 94ED 10 E0            djnz 1B
 415+ 94EF ED 7B A1 89  3 ld sp,(Stack)
 416+ 94F3 C9               ret
 417+ 94F4
# file closed: Rutinas_de_impresion_sprites.asm
1721  94F4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94F4
   2+ 94F4              ; ******************************************************************************************************************************************************************************************
   3+ 94F4              ;
   4+ 94F4              ;   20/05/23
   5+ 94F4              ;
   6+ 94F4              ;	Recompone_posicion_inicio
   7+ 94F4              ;
   8+ 94F4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 94F4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 94F4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 94F4              ;	_ a una u otra rutina.
  12+ 94F4
  13+ 94F4              Recompone_posicion_inicio
  14+ 94F4
  15+ 94F4 2A 5F 89     	ld hl,(Posicion_inicio)
  16+ 94F7 7D           	ld a,l
  17+ 94F8 E6 1F        	and $1f
  18+ 94FA 28 16        	jr z,1F
  19+ 94FC
  20+ 94FC FE 1F        	cp $1f
  21+ 94FE 28 0D        	jr z,3F
  22+ 9500
  23+ 9500 21 74 89     	ld hl,Ctrl_2
  24+ 9503 CB C6        	set 0,(hl)
  25+ 9505 2A 51 89     	ld hl,(Puntero_objeto)
  26+ 9508 22 91 89     	ld (Repone_puntero_objeto),hl
  27+ 950B 18 08        	jr 2F
  28+ 950D
  29+ 950D CD BB 96     3 call Mov_left
  30+ 9510 18 03        	jr 2F
  31+ 9512
  32+ 9512 CD 98 95     1 call Mov_right
  33+ 9515 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9518 22 51 89     	ld (Puntero_objeto),hl
  35+ 951B C9           	ret
  36+ 951C
  37+ 951C              ; ******************************************************************************************************************************************************************************************
  38+ 951C              ;
  39+ 951C              ;   27/05/23
  40+ 951C              ;
  41+ 951C              ;	Mov_down
  42+ 951C              ;
  43+ 951C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 951C              ;
  45+ 951C              ;
  46+ 951C              Mov_down
  47+ 951C
  48+ 951C CD 86 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 951F              ;																	; _ repone (Puntero_objeto).
  50+ 951F 21 6F 89     	ld hl,Ctrl_0
  51+ 9522 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9524              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9524              ; 																	; _ en el caso de que no lo haya.
  54+ 9524 3A 79 89     	ld a,(Vel_down)
  55+ 9527 47           	ld b,a
  56+ 9528 2A 4F 89         ld hl,(Posicion_actual)
  57+ 952B CD CB 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 952E E6 02        	and 2
  59+ 9530 28 17        	jr z,1F
  60+ 9532
  61+ 9532              ; Nos encontramos en el último tercio de pantalla.
  62+ 9532              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9532
  64+ 9532 7C           	ld a,h
  65+ 9533 FE 57        	cp $57
  66+ 9535 20 12        	jr nz,1F
  67+ 9537
  68+ 9537 7D           	ld a,l
  69+ 9538 C6 20        	add $20
  70+ 953A 30 0D        	jr nc,1F
  71+ 953C
  72+ 953C              ; ------------------------------
  73+ 953C              ;
  74+ 953C              ;	12/01/24
  75+ 953C
  76+ 953C              ;	call Reaparece_arriba
  77+ 953C CD 48 98     	call Reinicio
  78+ 953F
  79+ 953F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 953F
  81+ 953F 3A AF 89     	ld a,(Ctrl_3)
  82+ 9542 CB CF        	set 1,a
  83+ 9544 32 AF 89     	ld (Ctrl_3),a
  84+ 9547
  85+ 9547 18 08        	jr 3F
  86+ 9549              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9549              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9549              ; ------------------------------
  89+ 9549
  90+ 9549 CD E1 91     1 call NextScan
  91+ 954C 22 4F 89     	ld (Posicion_actual),hl
  92+ 954F 10 DA            djnz 2B
  93+ 9551 CD E9 9E     3 call Genera_coordenadas
  94+ 9554 C9           	ret
  95+ 9555
  96+ 9555              ; ******************************************************************************************************************************************************************************************
  97+ 9555              ;
  98+ 9555              ;   27/05/23
  99+ 9555              ;
 100+ 9555              ;	Mov_up
 101+ 9555              ;
 102+ 9555              ; 	Mueve el Sprite hacia arriba.
 103+ 9555              ;
 104+ 9555              ;
 105+ 9555              Mov_up
 106+ 9555
 107+ 9555 CD 86 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9558              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9558 21 6F 89     	ld hl,Ctrl_0
 110+ 955B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 955D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 955D              ; 																		; _ en el caso de que no lo haya.
 113+ 955D 3A 78 89     	ld a,(Vel_up)
 114+ 9560 47           	ld b,a
 115+ 9561 2A 4F 89     	ld hl,(Posicion_actual)
 116+ 9564 CD CB 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9567 A7           	and a
 118+ 9568 20 10        	jr nz,1F
 119+ 956A
 120+ 956A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 956A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 956A
 123+ 956A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 956B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 956D 20 0B            jr nz,1F
 126+ 956F 7D               ld a,l
 127+ 9570 D6 20            sub $20
 128+ 9572 30 06            jr nc,1F
 129+ 9574 25               dec h
 130+ 9575
 131+ 9575              ; -----------------------------
 132+ 9575 CD 29 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9578              ;	call Reinicio
 134+ 9578              ; -----------------------------
 135+ 9578
 136+ 9578 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 957A CD F0 91     1 call PreviousScan
 138+ 957D 22 4F 89     	ld (Posicion_actual),hl
 139+ 9580 10 E2            djnz 3B
 140+ 9582 CD E9 9E     2 call Genera_coordenadas
 141+ 9585 C9           	ret
 142+ 9586
 143+ 9586              ; -----------------------------
 144+ 9586              ;
 145+ 9586              ;	27/5/23
 146+ 9586              ;
 147+ 9586              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9586              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9586              ;
 150+ 9586              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9586              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9586              ;
 153+ 9586              ;	Modifica: A y (Puntero_objeto).
 154+ 9586
 155+ 9586 3A 74 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9589 CB 47        	bit 0,a
 157+ 958B C8           	ret z
 158+ 958C CB 87        	res 0,a
 159+ 958E 32 74 89     	ld (Ctrl_2),a
 160+ 9591 2A 91 89     	ld hl,(Repone_puntero_objeto)
 161+ 9594 22 51 89     	ld (Puntero_objeto),hl
 162+ 9597 C9           	ret
 163+ 9598
 164+ 9598              ; ******************************************************************************************************************************************************************************************
 165+ 9598              ;
 166+ 9598              ;	19/10/22
 167+ 9598              ;
 168+ 9598              ;	Mov_right.
 169+ 9598              ;
 170+ 9598              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9598              ;
 172+ 9598
 173+ 9598 3A 6F 89     Mov_right ld a,(Ctrl_0)
 174+ 959B CB 77        	bit 6,a
 175+ 959D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 959F
 177+ 959F CD D7 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95A2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95A3
 180+ 95A3 21 6F 89     	ld hl,Ctrl_0
 181+ 95A6 CB E6        	set 4,(hl)
 182+ 95A8 18 52        	jr 8F
 183+ 95AA
 184+ 95AA 21 6F 89     10 ld hl,Ctrl_0
 185+ 95AD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95AF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95AF              ; 																	; _ en el caso de que no lo haya.
 188+ 95AF 3A 53 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95B2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95B4 20 46        	jr nz,8F
 191+ 95B6
 192+ 95B6 3A 55 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95B9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95BA 28 40        	jr z,8F
 195+ 95BC
 196+ 95BC              ; ---------- ---------- ----------
 197+ 95BC              ;
 198+ 95BC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95BC
 200+ 95BC 3A 77 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95BF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95C1 28 11        	jr z,1F
 203+ 95C3 38 06        	jr c,6F
 204+ 95C5 FE 04        	cp 4
 205+ 95C7 28 14        	jr z,7F
 206+ 95C9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95CB
 208+ 95CB              ; ---------- ---------- ----------
 209+ 95CB              ;
 210+ 95CB              ; Perfiles de velocidad
 211+ 95CB              ;
 212+ 95CB
 213+ 95CB 3A 55 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95CE FE FE        	cp $fe
 215+ 95D0 20 2A        	jr nz,8F
 216+ 95D2 18 10        	jr 3F
 217+ 95D4 3A 55 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95D7 FE FD        	cp $fd
 219+ 95D9 20 21        	jr nz,8F
 220+ 95DB 18 07        	jr 3F
 221+ 95DD 3A 55 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95E0 FE FB        	cp $fb
 223+ 95E2 20 18        	jr nz,8F
 224+ 95E4
 225+ 95E4              ; ---------- ---------- ----------
 226+ 95E4
 227+ 95E4              3
 228+ 95E4 CD 17 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95E7              ;	call Reinicio
 230+ 95E7
 231+ 95E7              ; ---------- ---------- ----------
 232+ 95E7              ;
 233+ 95E7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95E7
 235+ 95E7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 95E9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 95EA CD 03 96     	call DESPLZ_DER
 238+ 95ED C1           	pop bc
 239+ 95EE 10 F9        	djnz 5B
 240+ 95F0 2A 4F 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 95F3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 95F4 22 4F 89     	ld (Posicion_actual),hl
 243+ 95F7 CD E9 9E     	call Genera_coordenadas
 244+ 95FA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 95FC
 246+ 95FC              ; ---------- ---------- ----------
 247+ 95FC
 248+ 95FC 2A 4F 89     8 ld hl,(Posicion_actual)
 249+ 95FF CD 03 96     	call DESPLZ_DER
 250+ 9602 C9           2 ret
 251+ 9603
 252+ 9603              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9603              ;
 254+ 9603              ;	22/9/22
 255+ 9603              ;
 256+ 9603
 257+ 9603 CD 12 96     DESPLZ_DER call Desplaza_derecha
 258+ 9606 CD 5E 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9609 CD 87 96         call Ciclo_completo
 260+ 960C 21 6F 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 960F CB FE        	set 7,(hl)
 262+ 9611 C9           	ret
 263+ 9612
 264+ 9612              ; ******************************************************************************************************************************************************************************************
 265+ 9612              ;	15/02/23
 266+ 9612              ;
 267+ 9612
 268+ 9612 3A 77 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9615 47           	ld b,a
 270+ 9616 2A 5B 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9619 23           1 inc hl
 272+ 961A 23           	inc hl
 273+ 961B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 961D 22 5B 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9620 CD AC 8B     	call Extrae_address
 276+ 9623 22 51 89     	ld (Puntero_objeto),hl
 277+ 9626
 278+ 9626              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9626
 280+ 9626              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9626              ; Cuántos movimientos hemos hecho ??
 282+ 9626              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9626
 284+ 9626 2A 57 89     7 ld hl,(Indice_Sprite_der)
 285+ 9629 EB           	ex de,hl
 286+ 962A A7           	and a
 287+ 962B ED 52        	sbc hl,de
 288+ 962D CB 3D        	srl l
 289+ 962F 3E 08        6 ld a,8
 290+ 9631 95           	sub l
 291+ 9632 30 1E        	jr nc,3F
 292+ 9634
 293+ 9634              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9634              ; B="0".
 295+ 9634
 296+ 9634 04           4 inc b
 297+ 9635 3C           	inc a
 298+ 9636 20 FC        	jr nz,4B
 299+ 9638 78           	ld a,b
 300+ 9639 08           	ex af,af
 301+ 963A 2A 57 89     	ld hl,(Indice_Sprite_der)
 302+ 963D 23           5 inc hl
 303+ 963E 23           	inc hl
 304+ 963F 10 FC        	djnz 5B
 305+ 9641 22 5B 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9644 CD AC 8B     	call Extrae_address
 307+ 9647 22 51 89     	ld (Puntero_objeto),hl
 308+ 964A
 309+ 964A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 964A              ; _(Posicion_actual).
 311+ 964A
 312+ 964A 21 4F 89     	ld hl,Posicion_actual
 313+ 964D 34           	inc (hl)
 314+ 964E 08               ex af,af
 315+ 964F 6F           	ld l,a
 316+ 9650 18 DD        	jr 6B
 317+ 9652
 318+ 9652              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9652
 320+ 9652 47           3 ld b,a
 321+ 9653 2A 59 89     	ld hl,(Indice_Sprite_izq)
 322+ 9656 23           2 inc hl
 323+ 9657 23           	inc hl
 324+ 9658 10 FC        	djnz 2B
 325+ 965A 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 965D C9           8 ret
 327+ 965E
 328+ 965E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 965E              ;
 330+ 965E              ;	24/7/22
 331+ 965E              ;
 332+ 965E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 965E              ;
 334+ 965E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 965E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 965E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 965E
 338+ 965E 3A 55 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9661 A7           	and a
 340+ 9662 20 1F        	jr nz,1F
 341+ 9664 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9666 32 55 89         ld (CTRL_DESPLZ),a
 343+ 9669
 344+ 9669 21 4E 89     	ld hl,Columns
 345+ 966C 34           	inc (hl)
 346+ 966D 3A 61 89     	ld a,(Cuad_objeto)
 347+ 9670 E6 01        	and 1
 348+ 9672 28 0F        	jr z,1F
 349+ 9674 2A 4F 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9677 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9678 22 4F 89     	ld (Posicion_actual),hl
 352+ 967B CD E9 9E     	call Genera_coordenadas
 353+ 967E CD E3 97     	call Inc_CTRL_DESPLZ
 354+ 9681 18 03        	jr 2F
 355+ 9683 CD E3 97     1 call Inc_CTRL_DESPLZ
 356+ 9686 C9           2 ret
 357+ 9687
 358+ 9687              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9687              ;
 360+ 9687              ;	24/7/22
 361+ 9687              ;
 362+ 9687              ;	Ciclo_completo.
 363+ 9687              ;
 364+ 9687              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9687              ;
 366+ 9687              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9687              ; 	Decrementamos (Columns).
 368+ 9687              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9687              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9687
 371+ 9687
 372+ 9687 3A 55 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 968A FE FF        	cp $ff
 374+ 968C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 968E E6 F0        	and $f0
 376+ 9690 20 28        	jr nz,3F
 377+ 9692
 378+ 9692              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9692
 380+ 9692 3A 55 89     	ld a,(CTRL_DESPLZ)
 381+ 9695 47           	ld b,a
 382+ 9696 3E F8        	ld a,$f8
 383+ 9698 80           	add b
 384+ 9699 32 55 89     	ld (CTRL_DESPLZ),a
 385+ 969C 18 1C        	jr 3F
 386+ 969E 21 4E 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96A1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96A2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96A3 32 55 89     	ld (CTRL_DESPLZ),a
 390+ 96A6 3A 61 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96A9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96AB 20 0A        	jr nz,2F
 393+ 96AD 2A 4F 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96B0 23           	inc hl
 395+ 96B1 22 4F 89     	ld (Posicion_actual),hl
 396+ 96B4 CD E9 9E     	call Genera_coordenadas
 397+ 96B7
 398+ 96B7              ; Inicia el puntero de Sprite.
 399+ 96B7
 400+ 96B7 CD C1 8B     2 call Inicia_puntero_objeto_der
 401+ 96BA C9           3 ret
 402+ 96BB
 403+ 96BB              ; ******************************************************************************************************************************************************************************************
 404+ 96BB              ;
 405+ 96BB              ;	15/02/23
 406+ 96BB              ;
 407+ 96BB              ;	Mov_left.
 408+ 96BB              ;
 409+ 96BB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96BB              ;
 411+ 96BB              Mov_left
 412+ 96BB
 413+ 96BB 21 6F 89     	ld hl,Ctrl_0
 414+ 96BE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96C0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96C0              ; 																	; _ en el caso de que no lo haya.
 417+ 96C0 3A 6F 89     	ld a,(Ctrl_0)
 418+ 96C3 CB 77        	bit 6,a
 419+ 96C5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96C7
 421+ 96C7 CD DD 97     	call Stop_Amadeus_left
 422+ 96CA C8           	ret z
 423+ 96CB 20 4A        	jr nz,8F
 424+ 96CD
 425+ 96CD 3A 53 89     11 ld a,(Coordenada_X)
 426+ 96D0 A7           	and a
 427+ 96D1 20 44        	jr nz,8F
 428+ 96D3
 429+ 96D3 3A 55 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96D6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96D7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96D9
 433+ 96D9              ; ---------- ---------- ----------
 434+ 96D9
 435+ 96D9 3A 76 89     	ld a,(Vel_left)
 436+ 96DC FE 02        	cp 2
 437+ 96DE 28 0F        	jr z,1F
 438+ 96E0 38 04        	jr c,6F
 439+ 96E2 FE 04        	cp 4
 440+ 96E4 28 12        	jr z,7F
 441+ 96E6
 442+ 96E6              ; ---------- ---------- ----------
 443+ 96E6
 444+ 96E6 3A 55 89     6 ld a,(CTRL_DESPLZ)
 445+ 96E9 FE F8        	cp $f8
 446+ 96EB 20 2A        	jr nz,8F
 447+ 96ED 18 10        	jr 4F
 448+ 96EF 3A 55 89     1 ld a,(CTRL_DESPLZ)
 449+ 96F2 FE F9        	cp $f9
 450+ 96F4 20 21        	jr nz,8F
 451+ 96F6 18 07        	jr 4F
 452+ 96F8 3A 55 89     7 ld a,(CTRL_DESPLZ)
 453+ 96FB FE FB        	cp $fb
 454+ 96FD 20 18        	jr nz,8F
 455+ 96FF
 456+ 96FF              ; ---------- ---------- ----------
 457+ 96FF
 458+ 96FF              4
 459+ 96FF CD 05 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9702              ;	call Reinicio
 461+ 9702
 462+ 9702              ; ---------- ---------- ----------
 463+ 9702
 464+ 9702 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9704 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9705
 467+ 9705              ;	ld hl,(Indice_Sprite_izq)
 468+ 9705              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9705
 470+ 9705 CD 1E 97     	call DESPLZ_IZQ
 471+ 9708 C1           	pop bc
 472+ 9709 10 F9        	djnz 5B
 473+ 970B 2A 4F 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 970E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 970F 22 4F 89     	ld (Posicion_actual),hl
 476+ 9712 CD E9 9E     	call Genera_coordenadas
 477+ 9715 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9717
 479+ 9717              ; ---------- ---------- ----------
 480+ 9717
 481+ 9717              ; Movemos, no hay recolocación.
 482+ 9717
 483+ 9717 2A 4F 89     8 ld hl,(Posicion_actual)
 484+ 971A CD 1E 97     	call DESPLZ_IZQ
 485+ 971D C9           2 ret
 486+ 971E
 487+ 971E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 971E              ;
 489+ 971E              ;	22/9/22
 490+ 971E
 491+ 971E              DESPLZ_IZQ
 492+ 971E
 493+ 971E CD 2D 97     	call Desplaza_izquierda
 494+ 9721 CD 79 97         call modifica_parametros_1er_DESPLZ
 495+ 9724 CD A1 97     	call Ciclo_completo_2
 496+ 9727 21 6F 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 972A CB BE        	res 7,(hl)
 498+ 972C C9           	ret
 499+ 972D
 500+ 972D              Desplaza_izquierda
 501+ 972D
 502+ 972D 3A 76 89     	ld a,(Vel_left)
 503+ 9730 47           	ld b,a
 504+ 9731 2A 5D 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9734 23           1 inc hl
 506+ 9735 23           	inc hl
 507+ 9736 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9738 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 973B CD AC 8B     	call Extrae_address
 510+ 973E 22 51 89     	ld (Puntero_objeto),hl
 511+ 9741
 512+ 9741              ; Modifica (Puntero_DESPLZ_der).
 513+ 9741
 514+ 9741              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9741              ; Cuántos movimientos hemos hecho ??
 516+ 9741              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9741
 518+ 9741 2A 59 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9744 EB           	ex de,hl
 520+ 9745 A7           	and a
 521+ 9746 ED 52        	sbc hl,de
 522+ 9748 CB 3D        	srl l
 523+ 974A 3E 08        6 ld a,8
 524+ 974C 95           	sub l
 525+ 974D 30 1E        	jr nc,3F
 526+ 974F
 527+ 974F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 974F              ; B="0".
 529+ 974F
 530+ 974F 04           4 inc b
 531+ 9750 3C           	inc a
 532+ 9751 20 FC        	jr nz,4B
 533+ 9753 78           	ld a,b
 534+ 9754 08           	ex af,af
 535+ 9755 2A 59 89     	ld hl,(Indice_Sprite_izq)
 536+ 9758 23           5 inc hl
 537+ 9759 23           	inc hl
 538+ 975A 10 FC        	djnz 5B
 539+ 975C 22 5D 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 975F CD AC 8B     	call Extrae_address
 541+ 9762 22 51 89     	ld (Puntero_objeto),hl
 542+ 9765
 543+ 9765              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9765              ; _(Posicion_actual).
 545+ 9765
 546+ 9765 21 4F 89     	ld hl,Posicion_actual
 547+ 9768 35           	dec (hl)
 548+ 9769 08           	ex af,af
 549+ 976A 6F           	ld l,a
 550+ 976B 18 DD        	jr 6B
 551+ 976D
 552+ 976D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 976D
 554+ 976D 47           3 ld b,a
 555+ 976E 2A 57 89     	ld hl,(Indice_Sprite_der)
 556+ 9771 23           2 inc hl
 557+ 9772 23           	inc hl
 558+ 9773 10 FC        	djnz 2B
 559+ 9775 22 5B 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9778 C9           8 ret
 561+ 9779
 562+ 9779              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9779              ;
 564+ 9779              ;	modifica_parametros_1er_DESPLZ
 565+ 9779              ;
 566+ 9779              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9779              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9779              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9779
 570+ 9779 3A 55 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 977C A7           	and a
 572+ 977D 20 1E        	jr nz,1F
 573+ 977F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9780 32 55 89         ld (CTRL_DESPLZ),a
 575+ 9783 21 4E 89     	ld hl,Columns
 576+ 9786 34           	inc (hl)
 577+ 9787 3A 61 89     	ld a,(Cuad_objeto)
 578+ 978A E6 01        	and 1
 579+ 978C 20 0F        	jr nz,1F
 580+ 978E 2A 4F 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9791 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9792 22 4F 89     	ld (Posicion_actual),hl
 583+ 9795 CD E9 9E     	call Genera_coordenadas
 584+ 9798 CD F4 97     	call Dec_CTRL_DESPLZ
 585+ 979B 18 03        	jr 2F
 586+ 979D CD F4 97     1 call Dec_CTRL_DESPLZ
 587+ 97A0 C9           2 ret
 588+ 97A1
 589+ 97A1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97A1
 591+ 97A1 3A 55 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97A4 FE F7        	cp $f7
 593+ 97A6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97A8 30 2C        	jr nc,3F
 595+ 97AA
 596+ 97AA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97AA
 598+ 97AA 06 00        	ld b,0
 599+ 97AC 04           4 inc b
 600+ 97AD 3C           	inc a
 601+ 97AE FE F7        	cp $f7
 602+ 97B0 20 FA        	jr nz,4B
 603+ 97B2 3E FF        	ld a,$ff
 604+ 97B4 90           	sub b
 605+ 97B5 32 55 89     	ld (CTRL_DESPLZ),a
 606+ 97B8 18 1C        	jr 3F
 607+ 97BA
 608+ 97BA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97BA
 610+ 97BA 21 4E 89     1 ld hl,Columns
 611+ 97BD 35           	dec (hl)
 612+ 97BE AF           	xor a
 613+ 97BF 32 55 89     	ld (CTRL_DESPLZ),a
 614+ 97C2 3A 61 89     	ld a,(Cuad_objeto)
 615+ 97C5 E6 01        	and 1
 616+ 97C7 28 0A        	jr z,2F
 617+ 97C9 2A 4F 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97CC 2B           	dec hl
 619+ 97CD 22 4F 89     	ld (Posicion_actual),hl
 620+ 97D0 CD E9 9E     	call Genera_coordenadas
 621+ 97D3
 622+ 97D3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97D3
 624+ 97D3 CD D4 8B     2 call Inicia_puntero_objeto_izq
 625+ 97D6 C9           3 ret
 626+ 97D7
 627+ 97D7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97D7              ;
 629+ 97D7              ;	19/10/22
 630+ 97D7              ;
 631+ 97D7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97D7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97D7
 634+ 97D7 3A 53 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97DA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97DC C9           	ret
 637+ 97DD
 638+ 97DD              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97DD              ;
 640+ 97DD              ;	19/10/22
 641+ 97DD              ;
 642+ 97DD              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97DD              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97DD
 645+ 97DD 3A 53 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97E0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97E2 C9           	ret
 648+ 97E3
 649+ 97E3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97E3              ;
 651+ 97E3              ;	24/7/22
 652+ 97E3              ;
 653+ 97E3              ;	Inc_CTRL_DESPLZ
 654+ 97E3              ;
 655+ 97E3              ;
 656+ 97E3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97E3
 658+ 97E3 21 55 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97E6 3A 77 89     	ld a,(Vel_right)
 660+ 97E9 A7           	and a
 661+ 97EA 28 06        	jr z,1F
 662+ 97EC 47           	ld b,a
 663+ 97ED 34           3 inc (hl)
 664+ 97EE 10 FD        	djnz 3B
 665+ 97F0 18 01        	jr 2F
 666+ 97F2 34           1 inc (hl)
 667+ 97F3 C9           2 ret
 668+ 97F4
 669+ 97F4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 97F4              ;
 671+ 97F4              ;	5/2/23
 672+ 97F4              ;
 673+ 97F4              ;	Dec_CTRL_DESPLZ
 674+ 97F4              ;
 675+ 97F4              ;
 676+ 97F4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 97F4
 678+ 97F4 21 55 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 97F7 3A 76 89     	ld a,(Vel_left)
 680+ 97FA A7           	and a
 681+ 97FB 28 06        	jr z,1F
 682+ 97FD 47           	ld b,a
 683+ 97FE 35           3 dec (hl)
 684+ 97FF 10 FD        	djnz 3B
 685+ 9801 18 01        	jr 2F
 686+ 9803 35           1 dec (hl)
 687+ 9804 C9           2 ret
 688+ 9805
 689+ 9805              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9805
 691+ 9805 2A 4F 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9808 01 1F 00     	ld bc,31
 693+ 980B A7           	and a
 694+ 980C ED 4A        	adc hl,bc
 695+ 980E 22 4F 89     	ld (Posicion_actual),hl
 696+ 9811 21 6F 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9814 CB C6        	set 0,(hl)
 698+ 9816 C9           	ret
 699+ 9817
 700+ 9817              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9817
 702+ 9817 2A 4F 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 981A 01 1F 00     	ld bc,31
 704+ 981D A7           	and a
 705+ 981E ED 42        	sbc hl,bc
 706+ 9820 22 4F 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9823 21 6F 89     	ld hl,Ctrl_0
 708+ 9826 CB CE        	set 1,(hl)
 709+ 9828 C9           	ret
 710+ 9829
 711+ 9829              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9829
 713+ 9829 24           Reaparece_abajo inc h
 714+ 982A 01 E0 17     	ld bc,$17e0
 715+ 982D A7           	and a
 716+ 982E ED 4A        	adc hl,bc
 717+ 9830 22 4F 89     	ld (Posicion_actual),hl
 718+ 9833 21 6F 89     	ld hl,Ctrl_0
 719+ 9836 CB D6        	set 2,(hl)
 720+ 9838 C9           	ret
 721+ 9839
 722+ 9839              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9839
 724+ 9839 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 983C A7           	and a
 726+ 983D ED 42        	sbc hl,bc
 727+ 983F 22 4F 89     	ld (Posicion_actual),hl
 728+ 9842 21 6F 89     	ld hl,Ctrl_0
 729+ 9845 CB DE        	set 3,(hl)
 730+ 9847 C9           	ret
 731+ 9848
 732+ 9848              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9848              ;
 734+ 9848              ;	15/07/23
 735+ 9848
 736+ 9848              Reinicio
 737+ 9848
 738+ 9848              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9848
 740+ 9848 AF           	xor a
 741+ 9849 21 88 89     	ld hl,Puntero_indice_mov_bucle
 742+ 984C CD 6A 98     	call Limpia_contenido_hl
 743+ 984F
 744+ 984F 21 4F 89     	ld hl,Posicion_actual
 745+ 9852 CD 6A 98     	call Limpia_contenido_hl
 746+ 9855
 747+ 9855 CD 13 8D     	call Inicializa_Puntero_indice_mov
 748+ 9858 CD 36 99     	call Inicia_Puntero_mov
 749+ 985B
 750+ 985B 21 8A 89     	ld hl,Incrementa_puntero
 751+ 985E 06 05        	ld b,5
 752+ 9860 77           1 ld (hl),a
 753+ 9861 23           	inc hl
 754+ 9862 10 FC        	djnz 1B
 755+ 9864
 756+ 9864 21 74 89     	ld hl,Ctrl_2
 757+ 9867 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9869
 759+ 9869 C9           	ret
 760+ 986A
 761+ 986A 77           Limpia_contenido_hl	ld (hl),a
 762+ 986B 23           	inc hl
 763+ 986C 77           	ld (hl),a
 764+ 986D C9           	ret
 765+ 986E
 766+ 986E
# file closed: Direcciones.asm
1722  986E              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 986E              ; ----- ----- ----- ----- -----
   2+ 986E              ;
   3+ 986E              ;   28/12/23
   4+ 986E
   5+ 986E              Movimiento
   6+ 986E
   7+ 986E              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 986E
   9+ 986E 3A 74 89         ld a,(Ctrl_2)
  10+ 9871 CB 57            bit 2,a
  11+ 9873 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9875
  13+ 9875 2A 86 89         ld hl,(Puntero_mov)
  14+ 9878 7E               ld a,(hl)
  15+ 9879
  16+ 9879              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9879
  18+ 9879              Inicia_desplazamiento.
  19+ 9879
  20+ 9879              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9879
  22+ 9879 CD 6C 99         call Ajusta_velocidad_desplazamiento
  23+ 987C
  24+ 987C              ; Iniciamos (Repetimos_mov).
  25+ 987C
  26+ 987C 7E               ld a,(hl)
  27+ 987D E6 0F            and $0f
  28+ 987F 32 8C 89         ld (Repetimos_desplazamiento),a
  29+ 9882 32 8D 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9885
  31+ 9885              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9885
  33+ 9885 23               inc hl
  34+ 9886 7E               ld a,(hl)
  35+ 9887 32 8F 89         ld (Cola_de_desplazamiento),a
  36+ 988A 2B               dec hl
  37+ 988B
  38+ 988B 21 74 89         ld hl,Ctrl_2
  39+ 988E CB D6            set 2,(hl)
  40+ 9890
  41+ 9890              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9890              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9890
  44+ 9890              Desplazamiento_iniciado
  45+ 9890
  46+ 9890 CD 40 99         call Aplica_desplazamiento
  47+ 9893
  48+ 9893              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9893
  50+ 9893 3A AF 89         ld a,(Ctrl_3)
  51+ 9896 CB 4F            bit 1,a
  52+ 9898 C0               ret nz
  53+ 9899
  54+ 9899 21 8C 89     3 ld hl,Repetimos_desplazamiento
  55+ 989C 35               dec (hl)
  56+ 989D C0               ret nz
  57+ 989E
  58+ 989E              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 989E              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 989E              ; Analiza (Cola_de_desplazamiento).
  61+ 989E
  62+ 989E 3A 8F 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98A1 A7               and a
  64+ 98A2 CC 95 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98A5 28 30            jr z,Reinicia_el_movimiento
  66+ 98A7
  67+ 98A7 FE FF            cp $ff
  68+ 98A9 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98AB
  70+ 98AB FE FE            cp $fe
  71+ 98AD CC 1A 99         call z,Fijamos_bucle
  72+ 98B0 28 25            jr z,Reinicia_el_movimiento
  73+ 98B2
  74+ 98B2 FE FD            cp $fd
  75+ 98B4 20 11            jr nz,1F
  76+ 98B6
  77+ 98B6              ; ---
  78+ 98B6              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98B6
  80+ 98B6 3A 74 89         ld a,(Ctrl_2)
  81+ 98B9 CB 5F            bit 3,a
  82+ 98BB 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98BD
  84+ 98BD              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98BD
  86+ 98BD 21 74 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98C0 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98C2
  89+ 98C2 CD 2B 99         call Inicia_Repetimos_movimiento
  90+ 98C5 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98C7              ; ---
  92+ 98C7
  93+ 98C7 FE 01        1 cp 1
  94+ 98C9 CA 04 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98CC
  96+ 98CC 3D               dec a
  97+ 98CD 32 8F 89         ld (Cola_de_desplazamiento),a
  98+ 98D0
  99+ 98D0 3A 8D 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98D3 32 8C 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98D6              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98D6 C9               ret
 103+ 98D7
 104+ 98D7              Reinicia_el_movimiento
 105+ 98D7
 106+ 98D7 3A 74 89         ld a,(Ctrl_2)
 107+ 98DA CB 5F            bit 3,a
 108+ 98DC 28 1B            jr z,2F
 109+ 98DE
 110+ 98DE              ; (Cola_de_desplazamiento)="254".
 111+ 98DE
 112+ 98DE 21 8E 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 98E1 35               dec (hl)
 114+ 98E2 20 15            jr nz,2F
 115+ 98E4
 116+ 98E4              ; Fin de las repeticiones del último movimiento.
 117+ 98E4
 118+ 98E4 21 74 89         ld hl,Ctrl_2
 119+ 98E7 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 98E9
 121+ 98E9 2A 86 89         ld hl,(Puntero_mov)
 122+ 98EC 23               inc hl
 123+ 98ED 23               inc hl
 124+ 98EE 23               inc hl
 125+ 98EF 22 86 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 98F2              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 98F2 7E               ld a,(hl)
 128+ 98F3 32 8F 89         ld (Cola_de_desplazamiento),a
 129+ 98F6
 130+ 98F6 C3 9E 98         jp Cola
 131+ 98F9
 132+ 98F9 CD 36 99     2 call Inicia_Puntero_mov
 133+ 98FC
 134+ 98FC 21 74 89         ld hl,Ctrl_2
 135+ 98FF CB 96            res 2,(hl)
 136+ 9901
 137+ 9901 C3 6E 98         jp Movimiento
 138+ 9904
 139+ 9904              Siguiente_desplazamiento
 140+ 9904
 141+ 9904              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9904              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9904
 144+ 9904 21 74 89         ld hl,Ctrl_2
 145+ 9907 CB 96            res 2,(hl)
 146+ 9909
 147+ 9909 2A 86 89         ld hl,(Puntero_mov)
 148+ 990C 23               inc hl
 149+ 990D 23               inc hl
 150+ 990E 22 86 89         ld (Puntero_mov),hl
 151+ 9911
 152+ 9911 7E               ld a,(hl)
 153+ 9912 A7               and a
 154+ 9913 CC 95 99         call z,Incrementa_Puntero_indice_mov
 155+ 9916 CA D7 98         jp z,Reinicia_el_movimiento
 156+ 9919
 157+ 9919 C9               ret
 158+ 991A
 159+ 991A              ; Subrutinas -----------------------------------------
 160+ 991A              ; ---------- --------- --------- ---------- ----------
 161+ 991A              ;
 162+ 991A              ;   24/07/23
 163+ 991A              ;
 164+ 991A              ;   Fijamos_bucle
 165+ 991A              ;
 166+ 991A              ;
 167+ 991A
 168+ 991A              Fijamos_bucle
 169+ 991A
 170+ 991A 3A 8A 89         ld a,(Incrementa_puntero)
 171+ 991D 3C               inc a
 172+ 991E 32 8B 89         ld (Incrementa_puntero_backup),a
 173+ 9921
 174+ 9921 CD 95 99         call Incrementa_Puntero_indice_mov
 175+ 9924 2A 84 89         ld hl,(Puntero_indice_mov)
 176+ 9927 22 88 89         ld (Puntero_indice_mov_bucle),hl
 177+ 992A C9               ret
 178+ 992B
 179+ 992B              ; ---------- --------- --------- ---------- ----------
 180+ 992B              ;
 181+ 992B              ;   07/7/23
 182+ 992B              ;
 183+ 992B              ;   Inicia_Repetimos_movimiento
 184+ 992B              ;
 185+ 992B              ;
 186+ 992B
 187+ 992B              Inicia_Repetimos_movimiento
 188+ 992B
 189+ 992B              ; Iniciamos (Repetimos_movimiento).
 190+ 992B
 191+ 992B DD 2A 86 89      ld ix,(Puntero_mov)
 192+ 992F DD 7E 02         ld a,(ix+2)
 193+ 9932 32 8E 89         ld (Repetimos_movimiento),a
 194+ 9935
 195+ 9935 C9               ret
 196+ 9936
 197+ 9936              ; ---------- --------- --------- ---------- ----------
 198+ 9936              ;
 199+ 9936              ;   26/6/23
 200+ 9936              ;
 201+ 9936              ;   Inicia_Puntero_mov
 202+ 9936              ;
 203+ 9936              ;
 204+ 9936
 205+ 9936 2A 84 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9939 CD AC 8B         call Extrae_address
 207+ 993C 22 86 89         ld (Puntero_mov),hl
 208+ 993F C9               ret
 209+ 9940
 210+ 9940              ; ---------- --------- --------- ---------- ----------
 211+ 9940              ;
 212+ 9940              ;   27/06/23
 213+ 9940              ;
 214+ 9940              ;   Aplica_movimiento.
 215+ 9940
 216+ 9940              Aplica_desplazamiento
 217+ 9940
 218+ 9940              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9940
 220+ 9940 2A 86 89         ld hl, (Puntero_mov)
 221+ 9943
 222+ 9943 7E               ld a,(hl)
 223+ 9944 E6 F0            and $f0
 224+ 9946 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9947
 226+ 9947 CB 7E            bit 7,(hl)
 227+ 9949 28 03            jr z,1F
 228+ 994B CD 55 95         call Mov_up
 229+ 994E 2A 86 89     1 ld hl, (Puntero_mov)
 230+ 9951 CB 76            bit 6,(hl)
 231+ 9953 28 03            jr z,2F
 232+ 9955 CD 1C 95         call Mov_down
 233+ 9958
 234+ 9958              ; Se ha aplicado reinicio ???
 235+ 9958              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9958
 237+ 9958              ;    ld a,(Ctrl_3)
 238+ 9958              ;    bit 1,a
 239+ 9958              ;    ret nz
 240+ 9958
 241+ 9958 2A 86 89     2 ld hl, (Puntero_mov)
 242+ 995B CB 6E            bit 5,(hl)
 243+ 995D 28 03            jr z,3F
 244+ 995F CD BB 96         call Mov_left
 245+ 9962 2A 86 89     3 ld hl, (Puntero_mov)
 246+ 9965 CB 66            bit 4,(hl)
 247+ 9967 C8               ret z
 248+ 9968 CD 98 95         call Mov_right
 249+ 996B C9               ret
 250+ 996C
 251+ 996C              ; ---------- --------- --------- ---------- ----------
 252+ 996C              ;
 253+ 996C              ;   26/06/23
 254+ 996C              ;
 255+ 996C              ;   Ajusta_velocidad_desplazamiento.
 256+ 996C
 257+ 996C              Ajusta_velocidad_desplazamiento
 258+ 996C
 259+ 996C              ; 1er byte de la cadena de movimiento.
 260+ 996C              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 996C
 262+ 996C CD 8A 99         call Extrae_nibble_alto
 263+ 996F
 264+ 996F 32 78 89         ld (Vel_up),a
 265+ 9972 79               ld a,c
 266+ 9973 E6 0F            and $0f
 267+ 9975 32 79 89         ld (Vel_down),a
 268+ 9978
 269+ 9978              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9978              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9978
 272+ 9978 23               inc hl
 273+ 9979 CD 8A 99         call Extrae_nibble_alto
 274+ 997C
 275+ 997C 32 76 89         ld (Vel_left),a
 276+ 997F 79               ld a,c
 277+ 9980 E6 0F            and $0f
 278+ 9982 32 77 89         ld (Vel_right),a
 279+ 9985
 280+ 9985              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9985
 282+ 9985 23               inc hl
 283+ 9986 22 86 89         ld (Puntero_mov),hl
 284+ 9989 C9               ret
 285+ 998A
 286+ 998A 06 04        Extrae_nibble_alto ld b,4
 287+ 998C 7E               ld a,(hl)
 288+ 998D 4F               ld c,a
 289+ 998E E6 F0            and $f0
 290+ 9990 CB 3F        1 srl a
 291+ 9992 10 FC            djnz 1B
 292+ 9994 C9               ret
 293+ 9995
 294+ 9995              ; ---------- --------- --------- ---------- ----------
 295+ 9995              ;
 296+ 9995              ;   5/7/23
 297+ 9995              ;
 298+ 9995              ;   Incrementa_Puntero_indice_mov
 299+ 9995
 300+ 9995              Incrementa_Puntero_indice_mov
 301+ 9995
 302+ 9995 21 8A 89         ld hl,Incrementa_puntero
 303+ 9998 34               inc (hl)
 304+ 9999
 305+ 9999 2A 84 89         ld hl,(Puntero_indice_mov)
 306+ 999C 01 02 00         ld bc,2
 307+ 999F A7               and a
 308+ 99A0 09               add hl,bc
 309+ 99A1 22 84 89         ld (Puntero_indice_mov),hl
 310+ 99A4
 311+ 99A4 7E               ld a,(hl)
 312+ 99A5 A7               and a
 313+ 99A6
 314+ 99A6              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99A6
 316+ 99A6              ;    jr z,$
 317+ 99A6
 318+ 99A6              ;! Reinicia el Patrón de movimiento.
 319+ 99A6
 320+ 99A6 CC AB 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99A9
 322+ 99A9 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99AA
 324+ 99AA C9               ret
 325+ 99AB
 326+ 99AB              ; ---------- --------- --------- ---------- ----------
 327+ 99AB              ;
 328+ 99AB              ;   15/01/24
 329+ 99AB              ;
 330+ 99AB              ;   Inicializa_Puntero_indice_mov
 331+ 99AB
 332+ 99AB              Inicializa_Puntero_indice_mov_2
 333+ 99AB
 334+ 99AB              ; Existe etiqueta de bucle principal???
 335+ 99AB
 336+ 99AB 2A 88 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99AE 24               inc h
 338+ 99AF 25               dec h
 339+ 99B0 28 05            jr z,2F
 340+ 99B2
 341+ 99B2 22 84 89         ld (Puntero_indice_mov),hl
 342+ 99B5 18 14            jr 3F
 343+ 99B7
 344+ 99B7              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99B7
 346+ 99B7 3A 8A 89     2 ld a,(Incrementa_puntero)
 347+ 99BA 47               ld b,a
 348+ 99BB
 349+ 99BB 2A 84 89         ld hl,(Puntero_indice_mov)
 350+ 99BE 2B           1 dec hl
 351+ 99BF 2B               dec hl
 352+ 99C0 10 FC            djnz 1B
 353+ 99C2 22 84 89         ld (Puntero_indice_mov),hl
 354+ 99C5
 355+ 99C5 AF               xor a
 356+ 99C6 32 8A 89         ld (Incrementa_puntero),a
 357+ 99C9 18 06            jr 4F
 358+ 99CB
 359+ 99CB 3A 8B 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99CE 32 8A 89         ld (Incrementa_puntero),a
 361+ 99D1 C9           4 ret
 362+ 99D2
 363+ 99D2              ; ----------------------------------------------------------------------
 364+ 99D2              ;
 365+ 99D2              ;   30/01/24
 366+ 99D2              ;
 367+ 99D2              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99D2
 369+ 99D2 3A 4C 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99D5 CD 64 8E         call Calcula_salto_en_BC
 371+ 99D8 21 7A 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99DB A7               and a
 373+ 99DC ED 4A            adc hl,bc
 374+ 99DE C9               ret
 375+ 99DF
 376+ 99DF              ; ----------------------------------------------------------------------
 377+ 99DF              ;
 378+ 99DF              ;   30/01/24
 379+ 99DF              ;
 380+ 99DF              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 99DF              ;
 382+ 99DF              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 99DF
 384+ 99DF 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 99E0 23               inc hl
 386+ 99E1 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 99E2 69               ld l,c
 388+ 99E3 60               ld h,b
 389+ 99E4 22 6D 89         ld (Contador_de_mov_masticados),hl
 390+ 99E7 C9               ret
 391+ 99E8
# file closed: Movimiento.asm
1723  99E8              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 99E8              ; ******************************************************************************************************************************************************************************************
   2+ 99E8              ;
   3+ 99E8              ;   21/07/23
   4+ 99E8              ;
   5+ 99E8              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 99E8              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 99E8              ;
   8+ 99E8              ;
   9+ 99E8              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 99E8              ;
  11+ 99E8              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 99E8              ;               _ hacen las entidades hacia abajo.
  13+ 99E8              ;
  14+ 99E8              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 99E8              ;
  16+ 99E8              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 99E8              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 99E8              ;
  19+ 99E8              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 99E8              ;           _ la bala.
  21+ 99E8              ;
  22+ 99E8              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 99E8              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 99E8              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 99E8              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 99E8              ;           _ en el momento de generarse la bala)).
  27+ 99E8
  28+ 99E8              Genera_disparo
  29+ 99E8
  30+ 99E8              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 99E8              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 99E8              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 99E8              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 99E8              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 99E8              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 99E8              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 99E8
  38+ 99E8              ; Exclusiones:
  39+ 99E8
  40+ 99E8 3A 79 89         ld a,(Vel_down)
  41+ 99EB 47               ld b,a
  42+ 99EC 3A C1 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 99EF B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 99F0 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 99F1 3A 70 89         ld a,(Columnas)
  46+ 99F4 47               ld b,a
  47+ 99F5 3A 4E 89         ld a,(Columns)
  48+ 99F8 B8               cp b
  49+ 99F9 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 99FA
  51+ 99FA              ; ----- ----- -----
  52+ 99FA
  53+ 99FA 3A 6F 89         ld a,(Ctrl_0)
  54+ 99FD CB 77            bit 6,a
  55+ 99FF 20 06            jr nz,14F
  56+ 9A01
  57+ 9A01 3A 54 89         ld a,(Coordenada_y)
  58+ 9A04 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9A06 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9A07
  61+ 9A07 21 31 81     14 ld hl,Indice_disparo
  62+ 9A0A 3A 55 89         ld a,(CTRL_DESPLZ)
  63+ 9A0D 4F               ld c,a
  64+ 9A0E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9A10              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9A10              ;                                            ""        ""       "f9", B="1"
  67+ 9A10              ;                                            ""        ""       "fb", B="2"
  68+ 9A10              ;                                            ""        ""       "fb", B="3"
  69+ 9A10 A7               and a
  70+ 9A11 28 10            jr z,1F
  71+ 9A13 E6 01            and 1
  72+ 9A15 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9A16
  74+ 9A16 79               ld a,c
  75+ 9A17 16 F9            ld d,$f9
  76+ 9A19 23           2 inc hl
  77+ 9A1A 23               inc hl
  78+ 9A1B 04               inc b
  79+ 9A1C BA               cp d
  80+ 9A1D 28 04            jr z,1F
  81+ 9A1F 14               inc d
  82+ 9A20 14               inc d
  83+ 9A21 18 F6            jr 2B
  84+ 9A23
  85+ 9A23 CD AC 8B     1 call Extrae_address
  86+ 9A26 E5               push hl
  87+ 9A27 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9A29 DD 21 C7 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A2D
  90+ 9A2D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A2D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A2D
  93+ 9A2D 3A 6F 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A30 CB 77            bit 6,a
  95+ 9A32 20 04            jr nz,19F
  96+ 9A34
  97+ 9A34 AF               xor a
  98+ 9A35 32 CA 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A38
 100+ 9A38 3A 61 89     19 ld a,(Cuad_objeto)
 101+ 9A3B FE 02            cp 2
 102+ 9A3D 38 66            jr c,3F
 103+ 9A3F 28 64            jr z,3F
 104+ 9A41
 105+ 9A41              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A41
 107+ 9A41 E6 01            and 1
 108+ 9A43 28 30            jr z,4F
 109+ 9A45
 110+ 9A45              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A45              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A45              ;
 113+ 9A45              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A45              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A45              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A45
 117+ 9A45 2A 4F 89     	ld hl,(Posicion_actual)
 118+ 9A48
 119+ 9A48              ;   Amadeus o entidad ???.
 120+ 9A48
 121+ 9A48 3A 6F 89         ld a,(Ctrl_0)
 122+ 9A4B CB 77            bit 6,a
 123+ 9A4D 28 0A            jr z,8F
 124+ 9A4F
 125+ 9A4F              ; 	Dispara Amadeus.
 126+ 9A4F
 127+ 9A4F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A51 CD F0 91         call PreviousScan
 129+ 9A54 CD F0 91         call PreviousScan
 130+ 9A57
 131+ 9A57              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A57              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A57              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A57              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A57
 136+ 9A57 18 11            jr 10F
 137+ 9A59
 138+ 9A59              ; 	Dispara Entidad.
 139+ 9A59
 140+ 9A59 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A5C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A5C
 143+ 9A5C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A5C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A5C
 146+ 9A5C C5               push bc
 147+ 9A5D 06 10            ld b,16
 148+ 9A5F CD E1 91     9 call NextScan
 149+ 9A62 10 FB            djnz 9B
 150+ 9A64 C1               pop bc
 151+ 9A65 CD CF 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A68 18 06            jr 17F
 153+ 9A6A
 154+ 9A6A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A6A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A6A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A6A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A6A
 159+ 9A6A CD CF 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A6D CD 44 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A70              ;                                                      ; _al generar el disparo.
 162+ 9A70
 163+ 9A70              ; 	LLegados a este punto tendremos:
 164+ 9A70              ;
 165+ 9A70              ;       Puntero_objeto_disparo en IY.
 166+ 9A70              ;       Rutinas_de_impresion en IX.
 167+ 9A70              ;       Puntero_de_impresion en HL.
 168+ 9A70              ;       Impacto/Dirección en BC.
 169+ 9A70
 170+ 9A70 CD D7 9A     17 call Almacena_disparo
 171+ 9A73 18 52            jr 6F                                             ; RET.
 172+ 9A75
 173+ 9A75              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A75              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A75              ;
 176+ 9A75              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A75              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A75              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A75
 180+ 9A75 2A 4F 89     4 ld hl,(Posicion_actual)
 181+ 9A78
 182+ 9A78              ;   Amadeus o entidad ???.
 183+ 9A78
 184+ 9A78 3A 6F 89         ld a,(Ctrl_0)
 185+ 9A7B CB 77            bit 6,a
 186+ 9A7D 28 0A            jr z,11F
 187+ 9A7F
 188+ 9A7F              ; 	Dispara Amadeus.
 189+ 9A7F
 190+ 9A7F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9A81 CD F0 91         call PreviousScan
 192+ 9A84 CD F0 91         call PreviousScan
 193+ 9A87
 194+ 9A87              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9A87              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9A87              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9A87              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9A87
 199+ 9A87 18 11            jr 13F
 200+ 9A89
 201+ 9A89              ; 	Dispara Entidad.
 202+ 9A89
 203+ 9A89 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9A8C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9A8C
 206+ 9A8C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9A8C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9A8C
 209+ 9A8C C5               push bc
 210+ 9A8D 06 10            ld b,16
 211+ 9A8F CD E1 91     12 call NextScan
 212+ 9A92 10 FB            djnz 12B
 213+ 9A94 C1               pop bc
 214+ 9A95
 215+ 9A95 CD C8 9A         call Ajusta_disparo_parte_derecha
 216+ 9A98 18 06            jr 18F
 217+ 9A9A
 218+ 9A9A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9A9A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9A9A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9A9A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9A9A
 223+ 9A9A CD C8 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9A9D CD 44 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9AA0              ;                                                       ; _al generar el disparo.
 226+ 9AA0
 227+ 9AA0              ; LLegados a este punto tendremos:
 228+ 9AA0              ;
 229+ 9AA0              ;       Puntero_objeto_disparo en IY.
 230+ 9AA0              ;       Rutinas_de_impresion en IX.
 231+ 9AA0              ;       Puntero_de_impresion en HL.
 232+ 9AA0              ;       Impacto/Dirección en BC.
 233+ 9AA0
 234+ 9AA0 CD D7 9A     18 call Almacena_disparo
 235+ 9AA3 18 22            jr 6F                                               ; RET.
 236+ 9AA5
 237+ 9AA5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9AA5
 239+ 9AA5 28 11        3 jr z,5F
 240+ 9AA7
 241+ 9AA7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9AA7              ;
 243+ 9AA7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9AA7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9AA7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9AA7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9AA7
 248+ 9AA7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9AA7              ;	   ""        ""       "f9", B="1"
 250+ 9AA7              ;	   ""        ""       "fb", B="2"
 251+ 9AA7              ; 	   ""        ""       "fb", B="3"
 252+ 9AA7
 253+ 9AA7 2A 4F 89     	ld hl,(Posicion_actual)
 254+ 9AAA CD E1 91     	call NextScan
 255+ 9AAD
 256+ 9AAD              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9AAD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9AAD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9AAD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9AAD
 261+ 9AAD CD CF 9A         call Ajusta_disparo_parte_izquierda
 262+ 9AB0
 263+ 9AB0              ; 	No se produce impacto. B="$80"
 264+ 9AB0              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9AB0
 266+ 9AB0 01 80 80         ld bc,$8080
 267+ 9AB3
 268+ 9AB3              ; 	LLegados a este punto tendremos:
 269+ 9AB3              ;
 270+ 9AB3              ;       Puntero_objeto_disparo en IY.
 271+ 9AB3              ;       Rutinas_de_impresion en IX.
 272+ 9AB3              ;       Puntero_de_impresion en HL.
 273+ 9AB3              ;       Impacto/Dirección en BC.
 274+ 9AB3
 275+ 9AB3 CD D7 9A         call Almacena_disparo
 276+ 9AB6 18 0F            jr 6F                                           ; RET.
 277+ 9AB8
 278+ 9AB8              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9AB8              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9AB8              ;
 281+ 9AB8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9AB8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9AB8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9AB8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9AB8
 286+ 9AB8 2A 4F 89     5 ld hl,(Posicion_actual)
 287+ 9ABB CD E1 91     	call NextScan
 288+ 9ABE
 289+ 9ABE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9ABE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9ABE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9ABE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9ABE
 294+ 9ABE CD C8 9A         call Ajusta_disparo_parte_derecha
 295+ 9AC1
 296+ 9AC1              ; 	No se produce impacto. B="$80"
 297+ 9AC1              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9AC1
 299+ 9AC1 01 80 80     15 ld bc,$8080
 300+ 9AC4
 301+ 9AC4              ; 	LLegados a este punto tendremos:
 302+ 9AC4              ;
 303+ 9AC4              ;       Puntero_objeto_disparo en IY.
 304+ 9AC4              ;       Rutinas_de_impresion en IX.
 305+ 9AC4              ;       Puntero_de_impresion en HL.
 306+ 9AC4              ;       Impacto/Dirección en BC.
 307+ 9AC4
 308+ 9AC4 CD D7 9A         call Almacena_disparo
 309+ 9AC7
 310+ 9AC7 C9           6 ret
 311+ 9AC8
 312+ 9AC8              ; ----------------------------------------------------------------
 313+ 9AC8              ;
 314+ 9AC8              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9AC8              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9AC8              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9AC8
 318+ 9AC8 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9AC9 FE 02            cp 2
 320+ 9ACB 38 01            jr c,1F
 321+ 9ACD 23               inc hl
 322+ 9ACE C9           1 ret
 323+ 9ACF
 324+ 9ACF 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9AD0 FE 01        	cp 1
 326+ 9AD2 20 01        	jr nz,1F
 327+ 9AD4 2B           	dec hl
 328+ 9AD5 2B           1 dec hl
 329+ 9AD6 C9               ret
 330+ 9AD7
 331+ 9AD7              ; ----------------------------------------------------------------
 332+ 9AD7              ;
 333+ 9AD7              ;   25/02/23
 334+ 9AD7              ;
 335+ 9AD7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9AD7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9AD7              ;
 338+ 9AD7              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9AD7              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9AD7
 341+ 9AD7              Almacena_disparo
 342+ 9AD7
 343+ 9AD7 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9AD8 F1               pop af
 345+ 9AD9 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9ADA
 347+ 9ADA 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9ADB E6 01            and 1
 349+ 9ADD 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9ADF              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9ADF              ; 	Dispara AMADEUS.
 352+ 9ADF
 353+ 9ADF              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9ADF              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9ADF              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9ADF              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9ADF
 358+ 9ADF C5               push bc
 359+ 9AE0 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9AE3 2A B4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9AE6 A7               and a
 362+ 9AE7 ED 42            sbc hl,bc
 363+ 9AE9 CC 31 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9AEC C1               pop bc
 365+ 9AED 28 54            jr z,4F
 366+ 9AEF
 367+ 9AEF 2A B4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9AF2 23               inc hl
 369+ 9AF3 23               inc hl
 370+ 9AF4 22 B4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9AF7              ;                                                   ; _ Disparo_(+1).
 372+ 9AF7 18 18            jr 2F
 373+ 9AF9
 374+ 9AF9              ; Dispara una entidad.
 375+ 9AF9
 376+ 9AF9 C5           1 push bc
 377+ 9AFA 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9AFD 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9B00 A7               and a
 380+ 9B01 ED 42            sbc hl,bc
 381+ 9B03 CC 2A 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9B06 C1               pop bc
 383+ 9B07 28 3A            jr z,4F
 384+ 9B09
 385+ 9B09 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9B0C 23               inc hl
 387+ 9B0D 23               inc hl
 388+ 9B0E 22 B2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9B11              ;                                                   ; _ Disparo_(+1).
 390+ 9B11 CD AC 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9B14              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9B14              ;
 393+ 9B14              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9B14              ;                                                     Rutinas_de_impresion en IX.
 395+ 9B14              ;                                                     Puntero_de_impresion en HL.
 396+ 9B14              ;                                                     Impacto/Dirección en BC.
 397+ 9B14
 398+ 9B14 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9B15 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9B16 23               inc hl                                          ; _ al siguiente.
 401+ 9B17 A7               and a
 402+ 9B18 20 C0            jr nz,3B
 403+ 9B1A
 404+ 9B1A 08               ex af,af
 405+ 9B1B ED 73 A1 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9B1F F9               ld sp,hl
 407+ 9B20
 408+ 9B20 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9B22 F5               push af                                         ; Puntero de impresión.
 410+ 9B23 FD E5            push iy                                         ; Puntero objeto.
 411+ 9B25 C5               push bc                                         ; Control.
 412+ 9B26
 413+ 9B26 ED 7B A1 89      ld sp,(Stack)
 414+ 9B2A
 415+ 9B2A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9B2A
 417+ 9B2A 21 90 89     	ld hl,Ctrl_1
 418+ 9B2D CB C6        	set 0,(hl)
 419+ 9B2F
 420+ 9B2F DD E5        	push ix
 421+ 9B31 E1               pop hl
 422+ 9B32 F5               push af
 423+ 9B33 DD E1            pop ix
 424+ 9B35
 425+ 9B35 CD BF 80     	call Guarda_foto_registros
 426+ 9B38
 427+ 9B38 21 90 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B3B CB 86        	res 0,(hl)
 429+ 9B3D
 430+ 9B3D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B3D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B3D
 433+ 9B3D CD 31 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B40 CD 2A 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B43
 436+ 9B43 C9           4 ret
 437+ 9B44
 438+ 9B44              ; ----------------------------------------------------------------
 439+ 9B44              ;
 440+ 9B44              ;   4/3/23
 441+ 9B44              ;
 442+ 9B44              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B44              ;   _ al generarse el disparo.
 444+ 9B44              ;
 445+ 9B44              ;       "$80" ..... No se produce colisión.
 446+ 9B44              ;       "$81" ..... Se produce colisión.
 447+ 9B44              ;
 448+ 9B44              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B44              ;         _ que forman el disparo.
 450+ 9B44
 451+ 9B44
 452+ 9B44              Comprueba_Colision
 453+ 9B44
 454+ 9B44              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B44
 456+ 9B44 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B46 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B47
 459+ 9B47 CD 7D 9B         call Modifica_H_Velocidad_disparo
 460+ 9B4A
 461+ 9B4A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B4B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B4D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B4F
 465+ 9B4F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B51 CD 6D 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B54
 468+ 9B54 7B               ld a,e
 469+ 9B55 E6 01            and 1
 470+ 9B57 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B59              ;                                                  ; _ para activar IMPACTO.
 472+ 9B59 E1               pop hl
 473+ 9B5A E5               push hl
 474+ 9B5B CD E1 91         call NextScan
 475+ 9B5E
 476+ 9B5E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B5F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B61 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B63              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B63 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B65 CD 6D 9B         call Bucle_2
 482+ 9B68
 483+ 9B68 43           1 ld b,e
 484+ 9B69 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B6A FD E1            pop iy
 486+ 9B6C C9               ret
 487+ 9B6D
 488+ 9B6D              ; ---------- ----------
 489+ 9B6D
 490+ 9B6D 06 02        Bucle_2 ld b,2
 491+ 9B6F FD 7E 00     2 ld a,(iy)
 492+ 9B72 A6               and (hl)
 493+ 9B73 28 02            jr z,1F
 494+ 9B75 1E 81            ld e,$81
 495+ 9B77 23           1 inc hl
 496+ 9B78 FD 23            inc iy
 497+ 9B7A 10 F3            djnz 2B
 498+ 9B7C C9               ret
 499+ 9B7D
 500+ 9B7D              ; ---------- ----------
 501+ 9B7D              ;
 502+ 9B7D              ;   21/7/23
 503+ 9B7D
 504+ 9B7D              Modifica_H_Velocidad_disparo
 505+ 9B7D
 506+ 9B7D 3A C1 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9B80 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9B82 D0               ret nc                                         ; _ incrementamos H.
 509+ 9B83 24               inc h
 510+ 9B84
 511+ 9B84 C9               ret
 512+ 9B85
 513+ 9B85              ; -------------------------------------------------------------------------------------------------------------
 514+ 9B85              ;
 515+ 9B85              ;   04/12/23
 516+ 9B85              ;
 517+ 9B85              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9B85              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9B85              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9B85              ;
 521+ 9B85              ;   MODIFICA: HL,DE,B y A.
 522+ 9B85
 523+ 9B85              Genera_coordenadas_X
 524+ 9B85
 525+ 9B85              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9B85              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9B85
 528+ 9B85              ;   Limpiamos almacenes.
 529+ 9B85
 530+ 9B85 CD B6 9B         call Limpia_Coordenadas_X
 531+ 9B88
 532+ 9B88              ;   Almacenamos coordenadas X.
 533+ 9B88
 534+ 9B88              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9B88
 536+ 9B88 2A 69 89         ld hl,(Puntero_de_impresion)
 537+ 9B8B 11 BE 89         ld de,Coordenadas_X_Entidad
 538+ 9B8E 06 02            ld b,2
 539+ 9B90
 540+ 9B90 3A 55 89         ld a,(CTRL_DESPLZ)
 541+ 9B93 A7               and a
 542+ 9B94 28 01            jr z,1F
 543+ 9B96 04               inc b
 544+ 9B97
 545+ 9B97 CD AD 9B     1 call Guarda_coordenadas_X
 546+ 9B9A
 547+ 9B9A              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9B9A
 549+ 9B9A 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9B9D 11 BB 89         ld de,Coordenadas_X_Amadeus
 551+ 9BA0 06 02            ld b,2
 552+ 9BA2
 553+ 9BA2 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9BA5 A7               and a
 555+ 9BA6 28 01            jr z,2F
 556+ 9BA8 04               inc b
 557+ 9BA9
 558+ 9BA9 CD AD 9B     2 call Guarda_coordenadas_X
 559+ 9BAC
 560+ 9BAC              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9BAC
 562+ 9BAC C9               ret
 563+ 9BAD
 564+ 9BAD              ; ----- ----- ----- ----- -----
 565+ 9BAD
 566+ 9BAD 7D           Guarda_coordenadas_X  ld a,l
 567+ 9BAE E6 1F            and $1f
 568+ 9BB0 12           1 ld (de),a
 569+ 9BB1 3C               inc a
 570+ 9BB2 13               inc de
 571+ 9BB3 10 FB            djnz 1B
 572+ 9BB5 C9               ret
 573+ 9BB6
 574+ 9BB6 AF           Limpia_Coordenadas_X xor a
 575+ 9BB7 06 06            ld b,6
 576+ 9BB9 21 BB 89         ld hl,Coordenadas_X_Amadeus
 577+ 9BBC 77           1 ld (hl),a
 578+ 9BBD 23               inc hl
 579+ 9BBE 10 FC            djnz 1B
 580+ 9BC0 C9               ret
 581+ 9BC1
 582+ 9BC1              ; ----- ----- ----- ----- -----
 583+ 9BC1
 584+ 9BC1              Compara_coordenadas_X
 585+ 9BC1
 586+ 9BC1 06 03            ld b,3
 587+ 9BC3 11 C0 89         ld de,Coordenadas_X_Entidad+2
 588+ 9BC6
 589+ 9BC6 1A               ld a,(de)
 590+ 9BC7 A7               and a
 591+ 9BC8 20 01            jr nz,2F
 592+ 9BCA 05               dec b
 593+ 9BCB
 594+ 9BCB 1B           2 dec de
 595+ 9BCC 1B               dec de
 596+ 9BCD 21 BB 89         ld hl,Coordenadas_X_Amadeus
 597+ 9BD0
 598+ 9BD0 D5           1 push de
 599+ 9BD1 E5               push hl
 600+ 9BD2 C5               push bc
 601+ 9BD3
 602+ 9BD3 CD DD 9B         call Comparando
 603+ 9BD6
 604+ 9BD6 C1               pop bc
 605+ 9BD7 E1               pop hl
 606+ 9BD8 D1               pop de
 607+ 9BD9
 608+ 9BD9 13               inc de
 609+ 9BDA 10 F4            djnz 1B
 610+ 9BDC
 611+ 9BDC C9               ret
 612+ 9BDD
 613+ 9BDD              ; ----- ----- ----- ----- -----
 614+ 9BDD              ;
 615+ 9BDD              ;   4/12/23
 616+ 9BDD              ;
 617+ 9BDD              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9BDD
 619+ 9BDD 06 03        Comparando ld b,3
 620+ 9BDF 1A               ld a,(de)
 621+ 9BE0 4E           2 ld c,(hl)
 622+ 9BE1 B9               cp c
 623+ 9BE2 28 04            jr z,1F
 624+ 9BE4 23               inc hl
 625+ 9BE5 10 F9            djnz 2B
 626+ 9BE7 C9               ret
 627+ 9BE8
 628+ 9BE8 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9BEA 32 62 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9BED 21 B6 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9BF0 CB D6            set 2,(hl)
 632+ 9BF2 C9               ret
 633+ 9BF3
 634+ 9BF3              ; -----------------------------------------------------------------------
 635+ 9BF3              ;
 636+ 9BF3              ;   7/12/23
 637+ 9BF3              ;
 638+ 9BF3
 639+ 9BF3              Detecta_colision_nave_entidad
 640+ 9BF3
 641+ 9BF3              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9BF3
 643+ 9BF3 FD 2A 51 89      ld iy,(Puntero_objeto)
 644+ 9BF7 2A 69 89         ld hl,(Puntero_de_impresion)
 645+ 9BFA
 646+ 9BFA E5               push hl
 647+ 9BFB
 648+ 9BFB              ; ----- ----- -----
 649+ 9BFB 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9BFD 06 0A            ld b,10
 651+ 9BFF CD 2F 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9C02 7B               ld a,e
 653+ 9C03 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9C05 38 0E            jr c,3F
 655+ 9C07
 656+ 9C07              ; LLegados a este punto:
 657+ 9C07              ;
 658+ 9C07              ;   HAY COLISIÓN !!!!!.
 659+ 9C07              ;
 660+ 9C07              ;   .db (Impacto) de Amadeus a "1".
 661+ 9C07              ;   SET el bit3 de (Impacto2).
 662+ 9C07              ;
 663+ 9C07              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9C07
 665+ 9C07 21 62 89         ld hl,Impacto
 666+ 9C0A 36 01            ld (hl),1
 667+ 9C0C 21 B6 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9C0F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9C11 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9C13
 671+ 9C13 18 18            jr 1F
 672+ 9C15
 673+ 9C15              ; -----
 674+ 9C15
 675+ 9C15 E1           3 pop hl
 676+ 9C16 CD E1 91         call NextScan
 677+ 9C19 E5               push hl
 678+ 9C1A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9C1B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9C1D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9C1F 30 0C            jr nc,1F
 682+ 9C21              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9C21 10 DC            djnz 2B
 684+ 9C23
 685+ 9C23              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9C23
 687+ 9C23              ; LLegados a este punto:
 688+ 9C23              ;
 689+ 9C23              ;   NO HAY COLISIÓN !!!!!.
 690+ 9C23              ;
 691+ 9C23              ;   .db (Impacto) de Amadeus a "0".
 692+ 9C23              ;   RES el bit2 de (Impacto2).
 693+ 9C23              ;
 694+ 9C23              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9C23              ;   Lo colocamos a "0".
 696+ 9C23
 697+ 9C23 21 B6 89         ld hl,Impacto2
 698+ 9C26 CB 96            res 2,(hl)
 699+ 9C28 2A B7 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9C2B 36 00            ld (hl),0
 701+ 9C2D
 702+ 9C2D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C2E C9               ret
 704+ 9C2F
 705+ 9C2F               ; ---------- ----------
 706+ 9C2F
 707+ 9C2F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C30 3A 4E 89         ld a,(Columns)
 709+ 9C33 47               ld b,a
 710+ 9C34 FD 7E 00     2 ld a,(iy)
 711+ 9C37 BE               cp (hl)
 712+ 9C38 28 01            jr z,1F
 713+ 9C3A
 714+ 9C3A 1C               inc e
 715+ 9C3B
 716+ 9C3B 23           1 inc hl
 717+ 9C3C FD 23            inc iy
 718+ 9C3E 10 F4            djnz 2B
 719+ 9C40 C1               pop bc
 720+ 9C41 C9               ret
 721+ 9C42
 722+ 9C42              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C42              ;
 724+ 9C42              ;   13/03/23
 725+ 9C42              ;
 726+ 9C42              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C42              ;
 728+ 9C42              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C42
 730+ 9C42 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C45 7E               ld a,(hl)
 732+ 9C46 A7               and a
 733+ 9C47 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C48
 735+ 9C48 44               ld b,h
 736+ 9C49 4D               ld c,l
 737+ 9C4A 2A A9 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C4D E5               push hl
 739+ 9C4E A7               and a
 740+ 9C4F ED 42            sbc hl,bc
 741+ 9C51 E5               push hl
 742+ 9C52 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C53
 744+ 9C53 E1               pop hl
 745+ 9C54 54               ld d,h
 746+ 9C55 5D               ld e,l
 747+ 9C56 1B               dec de
 748+ 9C57 ED B8            lddr                                                ; Limpiamos.
 749+ 9C59
 750+ 9C59 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C5C 22 A9 89         ld (Stack_snapshot_disparos),hl
 752+ 9C5F
 753+ 9C5F C9               ret
 754+ 9C60
 755+ 9C60              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C60              ;
 757+ 9C60              ;   18/07/23
 758+ 9C60              ;
 759+ 9C60
 760+ 9C60              Motor_de_disparos
 761+ 9C60
 762+ 9C60              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C60
 764+ 9C60 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C63 2A B4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C66
 767+ 9C66 CD AC 8B     2 call Extrae_address
 768+ 9C69 7E               ld a,(hl)
 769+ 9C6A A7               and a
 770+ 9C6B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C6D
 772+ 9C6D              ; ----- ----- ----- ----- ----- -----
 773+ 9C6D
 774+ 9C6D C5               push bc
 775+ 9C6E CD 32 9D         call foto_disparo_a_borrar
 776+ 9C71
 777+ 9C71              ; Existe colisión con este disparo???
 778+ 9C71
 779+ 9C71 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C72 7E               ld a,(hl)
 781+ 9C73 2B               dec hl
 782+ 9C74 E6 01            and 1
 783+ 9C76 28 1D            jr z,9F
 784+ 9C78
 785+ 9C78              ;   En este punto:
 786+ 9C78              ;
 787+ 9C78              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9C78              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9C78              ;   _con la entidad).
 790+ 9C78              ;
 791+ 9C78              ;   Disparo_2A defw 0                                ; Control.
 792+ 9C78              ;    defw 0                                          ; Puntero objeto.
 793+ 9C78              ;    defw 0                                          ; Puntero de impresión.
 794+ 9C78              ;    defw 0                                          ; Rutina de impresión.
 795+ 9C78
 796+ 9C78 E5               push hl
 797+ 9C79
 798+ 9C79 06 04            ld b,4
 799+ 9C7B 23           19 inc hl
 800+ 9C7C 10 FD            djnz 19B
 801+ 9C7E
 802+ 9C7E CD AC 8B         call Extrae_address
 803+ 9C81 CD 15 9F         call Genera_coordenadas_disparo
 804+ 9C84
 805+ 9C84              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9C84
 807+ 9C84 21 B9 89         ld hl,Coordenadas_disparo_certero
 808+ 9C87 72               ld (hl),d
 809+ 9C88 23               inc hl
 810+ 9C89 73               ld (hl),e
 811+ 9C8A
 812+ 9C8A              ; Elimino el disparo de la base de datos.
 813+ 9C8A
 814+ 9C8A E1               pop hl
 815+ 9C8B CD B1 9D         call Elimina_disparo_de_base_de_datos
 816+ 9C8E 21 B6 89         ld hl,Impacto2
 817+ 9C91 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9C93
 819+ 9C93 18 06            jr 11F
 820+ 9C95
 821+ 9C95 CD 5B 9D     9 call Mueve_disparo
 822+ 9C98 CD 32 9D         call foto_disparo_a_borrar
 823+ 9C9B
 824+ 9C9B C1           11 pop bc
 825+ 9C9C 18 04            jr 7F
 826+ 9C9E
 827+ 9C9E              ; ----- ----- ----- ----- ----- -----
 828+ 9C9E
 829+ 9C9E ED 42        1 sbc hl,bc
 830+ 9CA0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9CA2
 832+ 9CA2 2A B4 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9CA5 23               inc hl
 834+ 9CA6 23               inc hl
 835+ 9CA7 22 B4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9CAA 18 BA            jr 2B
 837+ 9CAC
 838+ 9CAC CD 31 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9CAF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9CAF
 841+ 9CAF              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9CAF
 843+ 9CAF 01 9F 86         ld bc,Disparo_11
 844+ 9CB2 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9CB5
 846+ 9CB5 CD AC 8B     5 call Extrae_address
 847+ 9CB8 7E               ld a,(hl)
 848+ 9CB9 A7               and a
 849+ 9CBA 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9CBC
 851+ 9CBC              ; ----- ----- ----- ----- ----- -----
 852+ 9CBC
 853+ 9CBC C5               push bc
 854+ 9CBD CD 32 9D         call foto_disparo_a_borrar
 855+ 9CC0
 856+ 9CC0              ; Existe colisión con este disparo???
 857+ 9CC0
 858+ 9CC0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9CC1 7E               ld a,(hl)
 860+ 9CC2 2B               dec hl
 861+ 9CC3 E6 01            and 1
 862+ 9CC5 28 4D            jr z,10F
 863+ 9CC7
 864+ 9CC7              ;! La colisión se produce con Amadeus???
 865+ 9CC7              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9CC7
 867+ 9CC7 E5               push hl
 868+ 9CC8
 869+ 9CC8 06 04            ld b,4
 870+ 9CCA 23           16 inc hl
 871+ 9CCB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9CCD
 873+ 9CCD CD AC 8B         call Extrae_address
 874+ 9CD0 CD 15 9F         call Genera_coordenadas_disparo
 875+ 9CD3
 876+ 9CD3 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9CD4 FE 16            cp $16
 878+ 9CD6 38 2A            jr c,15F
 879+ 9CD8
 880+ 9CD8
 881+ 9CD8              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9CD8
 883+ 9CD8 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9CD9
 885+ 9CD9              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9CD9
 887+ 9CD9 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9CDC
 889+ 9CDC              ; Coordenada X de Amadeus en D.
 890+ 9CDC
 891+ 9CDC 7D               ld a,l
 892+ 9CDD E6 1F            and $1F
 893+ 9CDF 57               ld d,a
 894+ 9CE0
 895+ 9CE0 21 BB 86         ld hl,Amadeus_db+8
 896+ 9CE3 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9CE4
 898+ 9CE4 21 BB 89         ld hl,Coordenadas_X_Amadeus
 899+ 9CE7 CD AD 9B         call Guarda_coordenadas_X
 900+ 9CEA
 901+ 9CEA D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9CEB
 903+ 9CEB              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9CEB
 905+ 9CEB 06 02            ld b,2
 906+ 9CED C5           20 push bc
 907+ 9CEE
 908+ 9CEE 06 03            ld b,3
 909+ 9CF0 21 BB 89         ld hl,Coordenadas_X_Amadeus
 910+ 9CF3 7E           18 ld a,(hl)
 911+ 9CF4 BA               cp d
 912+ 9CF5 20 04            jr nz,17F
 913+ 9CF7
 914+ 9CF7              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9CF7
 916+ 9CF7 C1               pop bc
 917+ 9CF8 E1               pop hl
 918+ 9CF9 18 0D            jr 14F
 919+ 9CFB
 920+ 9CFB 23           17 inc hl
 921+ 9CFC 10 F5            djnz 18B
 922+ 9CFE
 923+ 9CFE 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9CFF
 925+ 9CFF C1               pop bc
 926+ 9D00 10 EB            djnz 20B
 927+ 9D02
 928+ 9D02
 929+ 9D02              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9D02              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9D02
 932+ 9D02 E1           15 pop hl
 933+ 9D03 23               inc hl
 934+ 9D04 35               dec (hl)
 935+ 9D05 2B               dec hl
 936+ 9D06 18 0C            jr 10F
 937+ 9D08
 938+ 9D08              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9D08              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9D08
 941+ 9D08 E5           14 push hl
 942+ 9D09 CD B1 9D         call Elimina_disparo_de_base_de_datos
 943+ 9D0C 21 B6 89         ld hl,Impacto2
 944+ 9D0F CB CE            set 1,(hl)
 945+ 9D11 E1               pop hl
 946+ 9D12 18 06            jr 12F
 947+ 9D14
 948+ 9D14              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9D14
 950+ 9D14 CD 5B 9D     10 call Mueve_disparo
 951+ 9D17 CD 32 9D         call foto_disparo_a_borrar
 952+ 9D1A C1           12 pop bc
 953+ 9D1B
 954+ 9D1B 18 04            jr 8F
 955+ 9D1D
 956+ 9D1D              ; ----- ----- ----- ----- ----- -----
 957+ 9D1D
 958+ 9D1D ED 42        4 sbc hl,bc
 959+ 9D1F 28 0A            jr z,6F
 960+ 9D21
 961+ 9D21 2A B2 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9D24 23               inc hl
 963+ 9D25 23               inc hl
 964+ 9D26 22 B2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9D29 18 8A            jr 5B
 966+ 9D2B
 967+ 9D2B CD 2A 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D2E CD B6 9B         call Limpia_Coordenadas_X
 969+ 9D31 C9               ret
 970+ 9D32
 971+ 9D32              ; ------------------------------------------------------------------
 972+ 9D32
 973+ 9D32              foto_disparo_a_borrar
 974+ 9D32
 975+ 9D32 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D33 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D34 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D35
 979+ 9D35 E5               push hl
 980+ 9D36 23               inc hl
 981+ 9D37 23               inc hl
 982+ 9D38 ED 73 A1 89      ld (Stack),sp
 983+ 9D3C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D3D FD E1            pop iy
 985+ 9D3F DD E1            pop ix
 986+ 9D41 E1               pop hl
 987+ 9D42 ED 7B A1 89      ld sp,(Stack)
 988+ 9D46 3A 90 89         ld a,(Ctrl_1)
 989+ 9D49 CB C7            set 0,a
 990+ 9D4B 32 90 89         ld (Ctrl_1),a
 991+ 9D4E CD BF 80         call Guarda_foto_registros
 992+ 9D51 3A 90 89         ld a,(Ctrl_1)
 993+ 9D54 CB 87            res 0,a
 994+ 9D56 32 90 89         ld (Ctrl_1),a
 995+ 9D59 E1               pop hl
 996+ 9D5A C9               ret
 997+ 9D5B
 998+ 9D5B              ;---------------------------------------------------
 999+ 9D5B              ;
1000+ 9D5B              ;   18/07/23
1001+ 9D5B              ;
1002+ 9D5B
1003+ 9D5B              Mueve_disparo
1004+ 9D5B
1005+ 9D5B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D5B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D5B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D5B
1009+ 9D5B E5               push hl
1010+ 9D5C
1011+ 9D5C 7E               ld a,(hl)
1012+ 9D5D
1013+ 9D5D 06 04            ld b,4
1014+ 9D5F 23           1 inc hl
1015+ 9D60 10 FD            djnz 1B
1016+ 9D62
1017+ 9D62              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D62
1019+ 9D62 CD AC 8B         call Extrae_address
1020+ 9D65
1021+ 9D65 E6 01            and 1
1022+ 9D67 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D69
1024+ 9D69              ; Disparo hacia arriba, (Amadeus).
1025+ 9D69
1026+ 9D69              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D69              ; _ de la dificultad.
1028+ 9D69
1029+ 9D69 CD F0 91         call PreviousScan
1030+ 9D6C CD F0 91         call PreviousScan
1031+ 9D6F CD F0 91         call PreviousScan
1032+ 9D72 CD F0 91         call PreviousScan
1033+ 9D75
1034+ 9D75              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D75
1036+ 9D75 7C               ld a,h
1037+ 9D76 FE 40            cp $40
1038+ 9D78 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9D7A
1040+ 9D7A              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9D7A
1042+ 9D7A EB               ex de,hl
1043+ 9D7B 06 04            ld b,4
1044+ 9D7D 2B           6 dec hl
1045+ 9D7E 10 FD            djnz 6B
1046+ 9D80
1047+ 9D80 CD B1 9D         call Elimina_disparo_de_base_de_datos
1048+ 9D83 E1               pop hl
1049+ 9D84 18 10            jr 7F
1050+ 9D86
1051+ 9D86              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9D86              ; HL contiene el puntero de impresión del disparo.
1053+ 9D86              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9D86
1055+ 9D86 D5           3 push de
1056+ 9D87 C5               push bc
1057+ 9D88
1058+ 9D88 CD 44 9B         call Comprueba_Colision
1059+ 9D8B
1060+ 9D8B              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9D8B
1062+ 9D8B 78               ld a,b
1063+ 9D8C
1064+ 9D8C C1               pop bc
1065+ 9D8D D1               pop de
1066+ 9D8E
1067+ 9D8E EB               ex de,hl
1068+ 9D8F
1069+ 9D8F 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9D90 23               inc hl                                      ; _ movimiento.
1071+ 9D91 72               ld (hl),d
1072+ 9D92
1073+ 9D92 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9D93
1075+ 9D93 23               inc hl                                      ; _ en curso.
1076+ 9D94 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9D95 2B               dec hl
1078+ 9D96
1079+ 9D96 C9           7 ret
1080+ 9D97
1081+ 9D97              ; Disparo hacia abajo, (Entidad).
1082+ 9D97
1083+ 9D97 3A C1 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9D9A 47               ld b,a
1085+ 9D9B
1086+ 9D9B CD E1 91     4 call NextScan
1087+ 9D9E 10 FB            djnz 4B
1088+ 9DA0
1089+ 9DA0              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9DA0
1091+ 9DA0 7C               ld a,h
1092+ 9DA1 FE 58            cp $58
1093+ 9DA3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9DA5
1095+ 9DA5 EB               ex de,hl
1096+ 9DA6 06 04            ld b,4
1097+ 9DA8 2B           5 dec hl
1098+ 9DA9 10 FD            djnz 5B
1099+ 9DAB
1100+ 9DAB CD B1 9D         call Elimina_disparo_de_base_de_datos
1101+ 9DAE E1               pop hl
1102+ 9DAF 18 E5            jr 7B
1103+ 9DB1
1104+ 9DB1              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9DB1
1106+ 9DB1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9DB4 AF               xor a
1108+ 9DB5 77               ld (hl),a
1109+ 9DB6 54               ld d,h
1110+ 9DB7 5D               ld e,l
1111+ 9DB8 13               inc de
1112+ 9DB9 ED B0            ldir
1113+ 9DBB C9               ret
1114+ 9DBC
1115+ 9DBC              ; -----------------------------------------------------------------
1116+ 9DBC              ;
1117+ 9DBC              ;   7/12/23
1118+ 9DBC              ;
1119+ 9DBC
1120+ 9DBC 3A B6 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9DBF A7               and a
1122+ 9DC0 C8               ret z
1123+ 9DC1
1124+ 9DC1              ; Analizamos si hay impacto por disparos.
1125+ 9DC1
1126+ 9DC1              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9DC1
1128+ 9DC1 CB 4F            bit 1,a
1129+ 9DC3 28 07            jr z,1F
1130+ 9DC5
1131+ 9DC5 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9DC8 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9DCA 18 08            jr 2F
1134+ 9DCC
1135+ 9DCC CB 47        1 bit 0,a
1136+ 9DCE C8               ret z
1137+ 9DCF
1138+ 9DCF              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9DCF
1140+ 9DCF 21 90 89         ld hl,Ctrl_1
1141+ 9DD2 CB D6            set 2,(hl)
1142+ 9DD4
1143+ 9DD4 C9           2 ret
1144+ 9DD5
1145+ 9DD5              ; -----------------------------------------------------------------
1146+ 9DD5              ;
1147+ 9DD5              ;   25/04/23
1148+ 9DD5              ;
1149+ 9DD5
1150+ 9DD5              Determina_resultado_comparativa
1151+ 9DD5
1152+ 9DD5              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9DD5              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9DD5              ;
1155+ 9DD5              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9DD5              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9DD5              ;
1158+ 9DD5              ;   SBC HL,DE
1159+ 9DD5
1160+ 9DD5              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9DD5              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9DD5
1163+ 9DD5              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9DD5              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9DD5
1166+ 9DD5
1167+ 9DD5 3A 61 89         ld a,(Cuad_objeto)
1168+ 9DD8 FE 02            cp 2
1169+ 9DDA 28 26            jr z,2F
1170+ 9DDC 38 24            jr c,2F
1171+ 9DDE
1172+ 9DDE              ; Cuadrantes 3º y 4º
1173+ 9DDE
1174+ 9DDE E6 01            and 1
1175+ 9DE0 28 10            jr z,4F
1176+ 9DE2
1177+ 9DE2              ; Cuadrante 3º
1178+ 9DE2
1179+ 9DE2 7C               ld a,h
1180+ 9DE3 06 00            ld b,0
1181+ 9DE5
1182+ 9DE5 CD 70 9E         call Compara_cositas_H3
1183+ 9DE8
1184+ 9DE8 04               inc b
1185+ 9DE9 05               dec b
1186+ 9DEA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9DEB
1188+ 9DEB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9DEC 06 00            ld b,0
1190+ 9DEE
1191+ 9DEE CD 82 9E         call Compara_cositas_L3
1192+ 9DF1 C9               ret
1193+ 9DF2
1194+ 9DF2              ; Cuadrante 4º
1195+ 9DF2
1196+ 9DF2 7C           4 ld a,h
1197+ 9DF3 06 00            ld b,0
1198+ 9DF5
1199+ 9DF5 CD 94 9E         call Compara_cositas_H4
1200+ 9DF8
1201+ 9DF8 04               inc b
1202+ 9DF9 05               dec b
1203+ 9DFA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9DFB
1205+ 9DFB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9DFC 06 00            ld b,0
1207+ 9DFE
1208+ 9DFE CD AA 9E         call Compara_cositas_L4
1209+ 9E01 C9               ret
1210+ 9E02
1211+ 9E02              ; Cuadrantes 1º y 2º.
1212+ 9E02
1213+ 9E02 28 10        2 jr z,3F
1214+ 9E04
1215+ 9E04              ; 1er Cuadrante
1216+ 9E04
1217+ 9E04 7C               ld a,h
1218+ 9E05 06 00            ld b,0
1219+ 9E07
1220+ 9E07 CD 48 9E         call Compara_cositas_H1
1221+ 9E0A
1222+ 9E0A 04               inc b
1223+ 9E0B 05               dec b
1224+ 9E0C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9E0D
1226+ 9E0D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9E0E 06 00            ld b,0
1228+ 9E10
1229+ 9E10 CD 5E 9E         call Compara_cositas_L1
1230+ 9E13 C9               ret
1231+ 9E14
1232+ 9E14
1233+ 9E14              ; 2º Cuadrante
1234+ 9E14
1235+ 9E14 7C           3 ld a,h
1236+ 9E15 06 00            ld b,0
1237+ 9E17
1238+ 9E17 CD 24 9E         call Compara_cositas_H2
1239+ 9E1A
1240+ 9E1A 04               inc b
1241+ 9E1B 05               dec b
1242+ 9E1C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9E1D
1244+ 9E1D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9E1E 06 00            ld b,0
1246+ 9E20
1247+ 9E20 CD 36 9E         call Compara_cositas_L2
1248+ 9E23 C9               ret
1249+ 9E24
1250+ 9E24 A7           Compara_cositas_H2 and a
1251+ 9E25 28 0D            jr z,1F
1252+ 9E27              ;    cp $fd
1253+ 9E27              ;    jr z,1F
1254+ 9E27              ;    cp $fe
1255+ 9E27              ;    jr z,1F
1256+ 9E27 FE FF            cp $ff
1257+ 9E29 28 09            jr z,1F
1258+ 9E2B FE 01            cp $01
1259+ 9E2D 28 05            jr z,1F
1260+ 9E2F FE 02            cp $02
1261+ 9E31 28 01            jr z,1F
1262+ 9E33 C0               ret nz
1263+ 9E34 04           1 inc b
1264+ 9E35 C9               ret
1265+ 9E36
1266+ 9E36 A7           Compara_cositas_L2 and a
1267+ 9E37 28 0D            jr z,1F
1268+ 9E39              ;    cp $fd
1269+ 9E39              ;    jr z,1F
1270+ 9E39 FE FE            cp $fe
1271+ 9E3B 28 09            jr z,1F
1272+ 9E3D FE FF            cp $ff
1273+ 9E3F 28 05            jr z,1F
1274+ 9E41 FE 01            cp $01
1275+ 9E43 28 01            jr z,1F
1276+ 9E45              ;    cp $02
1277+ 9E45              ;    jr z,1F
1278+ 9E45 C0               ret nz
1279+ 9E46 04           1 inc b
1280+ 9E47 C9               ret
1281+ 9E48
1282+ 9E48 A7           Compara_cositas_H1 and a
1283+ 9E49 28 11            jr z,1F
1284+ 9E4B              ;    cp $fd
1285+ 9E4B              ;    jr z,1F
1286+ 9E4B              ;    cp $fe
1287+ 9E4B              ;    jr z,1F
1288+ 9E4B FE FF            cp $ff
1289+ 9E4D 28 0D            jr z,1F
1290+ 9E4F FE 01            cp $01
1291+ 9E51 28 09            jr z,1F
1292+ 9E53 FE 02            cp $02
1293+ 9E55 28 05            jr z,1F
1294+ 9E57 FE 03            cp $03
1295+ 9E59 28 01            jr z,1F
1296+ 9E5B C0               ret nz
1297+ 9E5C 04           1 inc b
1298+ 9E5D C9               ret
1299+ 9E5E
1300+ 9E5E A7           Compara_cositas_L1 and a
1301+ 9E5F 28 0D            jr z,1F
1302+ 9E61              ;    cp $fd
1303+ 9E61              ;    jr z,1F
1304+ 9E61              ;    cp $fe
1305+ 9E61              ;    jr z,1F
1306+ 9E61              ;    cp $ff
1307+ 9E61              ;    jr z,1F
1308+ 9E61 FE 01            cp $01
1309+ 9E63 28 09            jr z,1F
1310+ 9E65 FE 02            cp $02
1311+ 9E67 28 05            jr z,1F
1312+ 9E69 FE 03            cp $03
1313+ 9E6B 28 01            jr z,1F
1314+ 9E6D C0               ret nz
1315+ 9E6E 04           1 inc b
1316+ 9E6F C9               ret
1317+ 9E70
1318+ 9E70 A7           Compara_cositas_H3 and a
1319+ 9E71 28 0D            jr z,1F
1320+ 9E73              ;    cp $fd
1321+ 9E73              ;    jr z,1F
1322+ 9E73 FE FE            cp $fe
1323+ 9E75 28 09            jr z,1F
1324+ 9E77 FE FF            cp $ff
1325+ 9E79 28 05            jr z,1F
1326+ 9E7B FE 01            cp $01
1327+ 9E7D 28 01            jr z,1F
1328+ 9E7F              ;    cp $02
1329+ 9E7F              ;    jr z,1F
1330+ 9E7F              ;    cp $03
1331+ 9E7F              ;    jr z,1F
1332+ 9E7F C0               ret nz
1333+ 9E80 04           1 inc b
1334+ 9E81 C9               ret
1335+ 9E82
1336+ 9E82 A7           Compara_cositas_L3 and a
1337+ 9E83 28 0D            jr z,1F
1338+ 9E85              ;    cp $fd
1339+ 9E85              ;    jr z,1F
1340+ 9E85              ;    cp $fe
1341+ 9E85              ;    jr z,1F
1342+ 9E85              ;    cp $ff
1343+ 9E85              ;    jr z,1F
1344+ 9E85 FE 01            cp $01
1345+ 9E87 28 09            jr z,1F
1346+ 9E89 FE 02            cp $02
1347+ 9E8B 28 05            jr z,1F
1348+ 9E8D FE 03            cp $03
1349+ 9E8F 28 01            jr z,1F
1350+ 9E91 C0               ret nz
1351+ 9E92 04           1 inc b
1352+ 9E93 C9               ret
1353+ 9E94
1354+ 9E94 A7           Compara_cositas_H4 and a
1355+ 9E95 28 11            jr z,1F
1356+ 9E97 FE FD            cp $fd
1357+ 9E99 28 0D            jr z,1F
1358+ 9E9B FE FE            cp $fe
1359+ 9E9D 28 09            jr z,1F
1360+ 9E9F FE FF            cp $ff
1361+ 9EA1 28 05            jr z,1F
1362+ 9EA3 FE 01            cp $01
1363+ 9EA5 28 01            jr z,1F
1364+ 9EA7              ;    cp $02
1365+ 9EA7              ;    jr z,1F
1366+ 9EA7              ;    cp $03
1367+ 9EA7              ;    jr z,1F
1368+ 9EA7 C0               ret nz
1369+ 9EA8 04           1 inc b
1370+ 9EA9 C9               ret
1371+ 9EAA
1372+ 9EAA A7           Compara_cositas_L4 and a
1373+ 9EAB 28 0D            jr z,1F
1374+ 9EAD              ;    cp $fd
1375+ 9EAD              ;    jr z,1F
1376+ 9EAD FE FE            cp $fe
1377+ 9EAF 28 09            jr z,1F
1378+ 9EB1 FE FF            cp $ff
1379+ 9EB3 28 05            jr z,1F
1380+ 9EB5 FE 01            cp $01
1381+ 9EB7 28 01            jr z,1F
1382+ 9EB9              ;    cp $02
1383+ 9EB9              ;    jr z,1F
1384+ 9EB9              ;    cp $03
1385+ 9EB9              ;    jr z,1F
1386+ 9EB9 C0               ret nz
1387+ 9EBA 04           1 inc b
1388+ 9EBB C9               ret
# file closed: Disparo.asm
1724  9EBC              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9EBC              ; Relojes y temporizaciones.
   2+ 9EBC
   3+ 9EBC              ; ------------------------------------------------------
   4+ 9EBC              ;
   5+ 9EBC              ;	16/7/23
   6+ 9EBC              ;
   7+ 9EBC              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9EBC              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9EBC              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9EBC              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9EBC              ;
  12+ 9EBC              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9EBC              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9EBC
  15+ 9EBC              ; Disparo_entidad db 1
  16+ 9EBC              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9EBC              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9EBC
  19+ 9EBC              Habilita_disparos
  20+ 9EBC
  21+ 9EBC 7E           	ld a,(hl)
  22+ 9EBD A7           	and a
  23+ 9EBE C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9EBF
  25+ 9EBF EB           	ex de,hl
  26+ 9EC0
  27+ 9EC0 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9EC1 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9EC2
  30+ 9EC2              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9EC2
  32+ 9EC2 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9EC3 7E           	ld a,(hl)
  34+ 9EC4 23           	inc hl
  35+ 9EC5 77           	ld (hl),a
  36+ 9EC6
  37+ 9EC6 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9EC7 3E 01        	ld a,1
  39+ 9EC9 77           	ld (hl),a
  40+ 9ECA C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1725  9ECB              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9ECB              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9ECB              ;
   3+ 9ECB              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9ECB              ;
   5+ 9ECB              ; *****************************************************************************************************************************************************************************************
   6+ 9ECB              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9ECB
   8+ 9ECB 7C           calcula_tercio ld a,h
   9+ 9ECC E6 18        	and $18
  10+ 9ECE CB 2F        	sra a
  11+ 9ED0 CB 2F        	sra a
  12+ 9ED2 CB 2F        	sra a
  13+ 9ED4 C9           	ret
  14+ 9ED5
# file closed: calcula_tercio.asm
1726  9ED5              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9ED5              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9ED5              ;
   3+ 9ED5              ;
   4+ 9ED5              ;	CLS.
   5+ 9ED5              ;
   6+ 9ED5              ;	Limpia la pantalla y define sus atributos.
   7+ 9ED5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9ED5              ;
   9+ 9ED5              ;	COLORES: 0 ..... NEGRO
  10+ 9ED5              ;    		 1 ..... AZUL
  11+ 9ED5              ; 			 2 ..... ROJO
  12+ 9ED5              ;			 3 ..... MAGENTA
  13+ 9ED5              ; 			 4 ..... VERDE
  14+ 9ED5              ; 			 5 ..... CIAN
  15+ 9ED5              ;			 6 ..... AMARILLO
  16+ 9ED5              ; 			 7 ..... BLANCO
  17+ 9ED5              ;
  18+ 9ED5              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9ED5              ;
  20+ 9ED5              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9ED5
  22+ 9ED5
  23+ 9ED5 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9ED8 11 01 40     	LD DE,$4001
  25+ 9EDB 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9EDE 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9EE0 ED B0        	LDIR
  28+ 9EE2 01 FF 02     	LD BC,767
  29+ 9EE5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9EE6 ED B0        	LDIR
  31+ 9EE8 C9           	ret
  32+ 9EE9
# file closed: Cls.asm
1727  9EE9              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9EE9              ; ------------------------------------------------------------------------
   2+ 9EE9              ;
   3+ 9EE9              ;	30/1/24
   4+ 9EE9              ;
   5+ 9EE9              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9EE9              ;	Fila superior "0", Columna izquierda "0".
   7+ 9EE9              ;
   8+ 9EE9              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9EE9              ;
  10+ 9EE9              ;	Modifica: A,BC y DE.
  11+ 9EE9
  12+ 9EE9 7D           Genera_coordenadas ld a,l
  13+ 9EEA E6 1F        	and $1f
  14+ 9EEC 32 53 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9EEF
  16+ 9EEF 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9EF0 FE 40        	cp $40
  18+ 9EF2 38 1C        	jr c,4F
  19+ 9EF4
  20+ 9EF4 CD CB 9E     	call calcula_tercio
  21+ 9EF7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9EF8
  23+ 9EF8 1E 00        	ld e,0
  24+ 9EFA 7D           	ld a,l
  25+ 9EFB E6 E0        	and $e0
  26+ 9EFD 28 01        	jr z,1F
  27+ 9EFF 04           	inc b
  28+ 9F00
  29+ 9F00 04           1 inc b
  30+ 9F01 05           	dec b
  31+ 9F02 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9F04              ;														; _ , salimos.
  33+ 9F04 1C           3 inc e
  34+ 9F05 D6 20        	sub 32
  35+ 9F07 20 FB        	jr nz,3B
  36+ 9F09 10 F5        	djnz 1B
  37+ 9F0B
  38+ 9F0B 7B           2 ld a,e
  39+ 9F0C 32 54 89     	ld (Coordenada_y),a
  40+ 9F0F C9           	ret
  41+ 9F10
  42+ 9F10 AF           4 xor a
  43+ 9F11 32 54 89     	ld (Coordenada_y),a
  44+ 9F14 C9           	ret
  45+ 9F15
  46+ 9F15              ; ------------------------------------------------------------------------
  47+ 9F15              ;	28/05/23
  48+ 9F15              ;
  49+ 9F15              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9F15              ;	Fila superior "0", Columna izquierda "0".
  51+ 9F15              ;
  52+ 9F15              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9F15              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9F15              ;
  55+ 9F15              ;		DE="$120d"
  56+ 9F15              ;
  57+ 9F15              ;		D, (Coordenada_X), Columnas, $12
  58+ 9F15              ;		E, (Coordenada_y), Filas, $0d
  59+ 9F15              ;
  60+ 9F15              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9F15
  62+ 9F15              ;	Modifica: A,BC y DE.
  63+ 9F15
  64+ 9F15
  65+ 9F15              Genera_coordenadas_disparo
  66+ 9F15
  67+ 9F15              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9F15
  69+ 9F15 7D           	ld a,l
  70+ 9F16 E6 1F        	and $1f
  71+ 9F18 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9F19 CD CB 9E     	call calcula_tercio
  73+ 9F1C 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9F1D 1E 00        	ld e,0
  75+ 9F1F 7D           	ld a,l
  76+ 9F20 E6 E0        	and $e0
  77+ 9F22 28 01        	jr z,1F
  78+ 9F24 04           	inc b
  79+ 9F25 1C           1 inc e
  80+ 9F26 D6 20        	sub 32
  81+ 9F28 20 FB        	jr nz,1B
  82+ 9F2A 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F2C C9           	ret
  84+ 9F2D
# file closed: Genera_coordenadas.asm
1728  9F2D              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F2D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F2D              ;
   3+ 9F2D              ;	12/12/23
   4+ 9F2D              ;
   5+ 9F2D              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F2D
   7+ 9F2D              ;	ADC HL,SP	LD (addr),SP
   8+ 9F2D              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F2D              ;	ADD IX,SP	LD SP,nn
  10+ 9F2D              ; 	ADD IY,SP	LD SP,HL
  11+ 9F2D              ;				LD SP,IX
  12+ 9F2D              ;	DEC SP		LD SP,IY
  13+ 9F2D
  14+ 9F2D              ;	EX (SP),HL
  15+ 9F2D              ;	EX (SP),IX
  16+ 9F2D              ;	EX (SP),IY
  17+ 9F2D
  18+ 9F2D              ;	INC SP
  19+ 9F2D
  20+ 9F2D                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 A1 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 69 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 6B 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 90 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A A9 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 6F 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A AD 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A7 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 90 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 A9 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 6F 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 AD 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B A1 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A7 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B A1 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A7 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A7 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1729  8131
1730  8131              	SAVESNA "Pruebas.sna", START
1731  8131
1732  8131
1733  8131
1734  8131
# file closed: Banco_de_pruebas.asm
