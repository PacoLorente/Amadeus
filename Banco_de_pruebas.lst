# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F2 82        	defw $82f2															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8284	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $828c	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82bf	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82f2
  60  82F2
  61  82F2 F5           	push af
  62  82F3 E5           	push hl
  63  82F4
  64  82F4              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82F4 21 31 8C     	ld hl,Ctrl_3
  66  82F7 CB 46        	bit 0,(hl)
  67  82F9 28 FE        	jr z,$
  68  82FB              ;! -------------------
  69  82FB
  70  82FB              ; Disparos.
  71  82FB
  72  82FB CD 94 A1     	call Pinta_disparos_Amadeus
  73  82FE CD 1F 9F     	call Pinta_disparos_Entidades
  74  8301
  75  8301              ; Shield -----------------------
  76  8301
  77  8301              Temporizacion_shield
  78  8301
  79  8301 21 5B 8C     	ld hl,Shield
  80  8304 7E           	ld a,(hl)
  81  8305 A7           	and a
  82  8306 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8308
  84  8308 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8309
  86  8309 23           	inc hl
  87  830A 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  830B
  89  830B 20 17        	jr nz,Incrementa_FRAMES
  90  830D
  91  830D              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  830D
  93  830D              Cambio_de_estado
  94  830D
  95  830D              ;	Indica cambio de estado.
  96  830D
  97  830D 23           	inc hl						;	Sitúa en (Shield_3).
  98  830E
  99  830E CB 5E        	bit 3,(hl)
 100  8310 28 05        	jr z,2F
 101  8312
 102  8312 CD 2F 91     	call Inicia_Shield
 103  8315
 104  8315 18 0D        	jr Incrementa_FRAMES
 105  8317
 106  8317 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8319
 108  8319              ;	Carga en (Shield_2) la siguiente temporización.
 109  8319
 110  8319 2A 59 8C     	ld hl,(Puntero_datos_shield)
 111  831C 23           	inc hl
 112  831D 22 59 8C     	ld (Puntero_datos_shield),hl
 113  8320 7E           	ld a,(hl)
 114  8321 32 5C 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  8324
 116  8324              Incrementa_FRAMES
 117  8324
 118  8324 2A 78 5C     	ld hl,(FRAMES)
 119  8327 23           	inc hl
 120  8328 22 78 5C     	ld (FRAMES),hl
 121  832B
 122  832B 7C           	ld a,h
 123  832C B5           	or l
 124  832D 20 04        	jr nz,1F
 125  832F
 126  832F 21 7A 5C     	ld hl,FRAMES_3
 127  8332 34           	inc (hl)
 128  8333
 129  8333 D5           1 push de
 130  8334 C5           	push bc
 131  8335
 132  8335 CD 3F 91     	call Actualiza_pantalla
 133  8338
 134  8338 C1           	pop bc
 135  8339 D1           	pop de
 136  833A E1           	pop hl
 137  833B F1           	pop af
 138  833C
 139  833C FB           	ei
 140  833D
 141  833D C9           	ret
 142  833E
 143  833E              ; --------------------------------------------------------------------------------
 144  833E
 145  833E              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833E              ;
   3+ 833E              ;	17/02/23
   4+ 833E              ;
   5+ 833E              ;	Sprites e índices.
   6+ 833E
   7+ 833E              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 148  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AB 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 03           Nivel_1 db 3									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BAB
  19+ 8BAB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAC 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB4 01 02
  22+ 8BB6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBA 01 02
  23+ 8BBC
# file closed: Niveles.asm
 149  8BBC
 150  8BBC              ; --------------------------------------------------------------------------------
 151  8BBC              ;
 152  8BBC              ; 12/05/24
 153  8BBC              ;
 154  8BBC              ; Parámetros DRAW.
 155  8BBC              ;
 156  8BBC
 157  8BBC              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BBC
 159  8BBC 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BBD              ;															- Patrón de movimiento.
 161  8BBD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BBE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BBF
 164  8BBF 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BC0              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BC0
 167  8BC0              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BC0              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BC0              ; Ejemplos.
 170  8BC0
 171  8BC0              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BC0              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BC0              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BC0              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BC0              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BC0
 177  8BC0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BC1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BC1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BC1
 181  8BC1 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BC3              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BC3
 184  8BC3 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC5
 186  8BC5              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC5
 188  8BC5 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BC7              ;														; _palabras que componen el "movimiento_masticado".
 190  8BC7
 191  8BC7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BC7
 193  8BC7 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BC8              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BC8              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BC8              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BC8              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BC8
 199  8BC8 00           Ctrl_2 db 0
 200  8BC9              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BC9              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BC9              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BC9              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BC9              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BC9              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BC9              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BC9              ;
 208  8BC9              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BC9              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BC9              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BC9              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BC9              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BC9              ;														BIT 4, ???
 214  8BC9              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BC9
 216  8BC9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BCA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BCA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BCA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BCA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BCA              ;
 222  8BCA              ; 														DESCRIPCIÖN:
 223  8BCA              ;
 224  8BCA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BCA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BCA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BCA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BCA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BCA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BCA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BCA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BCA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BCA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BCA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BCA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BCA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BCA              ;
 238  8BCA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BCA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BCA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BCA
 242  8BCA              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BCA
 244  8BCA 00           Filas db 0												; Filas. [DRAW]
 245  8BCB 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BCC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BCE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BD0
 249  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BD0
 251  8BD0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BD1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BD1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BD1
 255  8BD1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BD1
 257  8BD1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BD1              ;
 259  8BD1              ;	COLORES: 0 ..... NEGRO
 260  8BD1              ;    		 1 ..... AZUL
 261  8BD1              ; 			 2 ..... ROJO
 262  8BD1              ;			 3 ..... MAGENTA
 263  8BD1              ; 			 4 ..... VERDE
 264  8BD1              ; 			 5 ..... CIAN
 265  8BD1              ;			 6 ..... AMARILLO
 266  8BD1              ; 			 7 ..... BLANCO
 267  8BD1
 268  8BD1 00 00        Indice_Sprite_der defw 0
 269  8BD3 00 00        Indice_Sprite_izq defw 0
 270  8BD5 00 00        Puntero_DESPLZ_der defw 0
 271  8BD7 00 00        Puntero_DESPLZ_izq defw 0
 272  8BD9
 273  8BD9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BDB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BDC 00           Columnas db 0
 276  8BDD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BDF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BDF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BE0
 280  8BE0              ; variables de control general.
 281  8BE0
 282  8BE0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BE1
 284  8BE1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BE1
 286  8BE1              Perfiles_de_velocidad
 287  8BE1
 288  8BE1 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BE2 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BE3 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE4 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE5
 293  8BE5              ; Contadores de 16 bits.
 294  8BE5
 295  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BE9 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BEB 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BED
 300  8BED              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BED
 302  8BED 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BEF 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BF1 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BF3              ;
 306  8BF3              ;
 307  8BF3 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF4              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF4              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF4 00           Incrementa_puntero_backup db 0
 311  8BF5 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF6              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF6 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BF7 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BF8 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BF9              ;
 317  8BF9              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BF9              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BF9              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BF9              ;
 321  8BF9              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BF9              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BF9              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BF9              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BF9              ;
 326  8BF9              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BF9              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BF9              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BF9
 330  8BF9 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BFA
 332  8BFA              ;														DESCRIPCIÓN:
 333  8BFA              ;
 334  8BFA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BFA              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BFA              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BFA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BFA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BFA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BFA
 341  8BFA              ;														BIT 3, Recarga de nueva oleada.
 342  8BFA              ;														BIT 4, Recarga de nueva oleada.
 343  8BFA              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BFA              ;														BIT 6, **** Frame completo.
 345  8BFA              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BFA
 347  8BFA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BFC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BFC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BFC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BFC
 352  8BFC              ; Gestión de ENTIDADES y CAJAS.
 353  8BFC
 354  8BFC 00 00        Puntero_store_caja defw 0
 355  8BFE 00 00        Puntero_restore_caja defw 0
 356  8C00 00 00        Indice_restore_caja defw 0
 357  8C02 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8C03 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C04 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C05
 361  8C05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C09              ;														; _ puntero (Indice_entidades).
 364  8C09
 365  8C09              ;---------------------------------------------------------------------------------------------------------------
 366  8C09              ;
 367  8C09              ;	13/10/24
 368  8C09              ;
 369  8C09              ;	Álbumes.
 370  8C09
 371  8C09 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C0B              ;														; _variable para almacenar lo posición del puntero_
 373  8C0B              ; 														; _de pila, SP.
 374  8C0B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C0D              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C0D
 377  8C0D              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C0D
 379  8C0D 00 00        Album_de_pintado defw 0
 380  8C0F 00 00        Album_de_borrado defw 0
 381  8C11 00 00        Album_de_pintado_Amadeus defw 0
 382  8C13 00 00        Album_de_borrado_Amadeus defw 0
 383  8C15
 384  8C15 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C17 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C19
 387  8C19 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C1B 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C1D
 390  8C1D
 391  8C1D 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C1F
 393  8C1F 00           Num_de_bytes_album_de_disparos db 0
 394  8C20 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C21
 396  8C21 07           Numero_de_disparos_de_entidades db 7
 397  8C22
 398  8C22 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C23 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C24
 401  8C24 00 00        Techo_Scanlines_album defw 0
 402  8C26 00 00        Techo_Scanlines_album_2 defw 0
 403  8C28 00           Switch db 0
 404  8C29 00 00        Techo defw 0
 405  8C2B 00 00        Scanlines_album_SP defw 0
 406  8C2D 00 89        India_SP defw Tabla_de_pintado
 407  8C2F 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C31
 409  8C31 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C32              ;
 411  8C32              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C32              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C32              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C32              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C32              ;																Habilita el borrado/pintado de sprites.
 416  8C32              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C32              ;																_ a la baja.
 418  8C32              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C32              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C32              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C32              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C32              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C32              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C32
 425  8C32 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C33              ;
 427  8C33              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C33              ;
 429  8C33              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C33              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C33              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C33              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C33              ;
 434  8C33              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C33              ;															_ masticados ya generados.
 436  8C33              ;
 437  8C33              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C33              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C33              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C33              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C33
 442  8C33 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C34
 444  8C34
 445  8C34              ; Gestión de Disparos.
 446  8C34
 447  8C34 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 448  8C36 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 449  8C38 00           Impacto2 db 0											; Byte de control de impactos.
 450  8C39
 451  8C39              ;
 452  8C39              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 453  8C39              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 454  8C39              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 455  8C39              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 456  8C39
 457  8C39
 458  8C39
 459  8C39
 460  8C39
 461  8C39
 462  8C39
 463  8C39 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 464  8C3B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 465  8C3B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 466  8C3B
 467  8C3B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 468  8C3D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 469  8C3D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C40              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 471  8C40 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8C43              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 473  8C43
 474  8C43              ;---------------------------------------------------------------------------------------------------------------
 475  8C43
 476  8C43              ; Relojes y temporizaciones.
 477  8C43
 478  8C43 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 479  8C44 05           Clock_explosion_Amadeus db 5
 480  8C45 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 481  8C46
 482  8C46 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 483  8C48 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 484  8C4A 00           Numero_rnd_disparos db 0
 485  8C4B
 486  8C4B 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 487  8C4D 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 488  8C4E              ;														; Repite la oleada de entidades.
 489  8C4E A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 490  8C4F A0           CLOCK_disparos_de_entidades db $a0
 491  8C50
 492  8C50              ;---------------------------------------------------------------------------------------------------------------
 493  8C50
 494  8C50              ; Gestión de NIVELES.
 495  8C50
 496  8C50 00           Nivel db 0												; Nivel actual del juego.
 497  8C51 00 00        Puntero_indice_NIVELES defw 0
 498  8C53 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 499  8C55              ; 														; _ que definen el NIVEL.
 500  8C55
 501  8C55              ; ---------------------------------------------------------------------------------------------------------------
 502  8C55
 503  8C55              ; Temporizaciones Shield.
 504  8C55
 505  8C55 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 506  8C59 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 507  8C5B 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 508  8C5C 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 509  8C5D 00           Shield_3 db 0
 510  8C5E
 511  8C5E 06           Lives db 6
 512  8C5F
 513  8C5F              ; 	INICIO  *************************************************************************************************************************************************************************
 514  8C5F              ;
 515  8C5F              ;	5/1/24
 516  8C5F
 517  8C5F              START
 518  8C5F
 519  8C5F 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 520  8C62 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 521  8C64 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 522  8C66 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 523  8C68 F3           	DI
 524  8C69
 525  8C69              ; Limpiamos pantalla.
 526  8C69
 527  8C69 3E 07        	ld a,%00000111
 528  8C6B CD CC 94     	call Cls
 529  8C6E CD 24 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 530  8C71
 531  8C71              ; INICIALIZACIÓN.
 532  8C71
 533  8C71 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 534  8C73 CD 71 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 535  8C76
 536  8C76 CD B9 8E     	call Extrae_numero_aleatorio_y_avanza
 537  8C79
 538  8C79 6F           	ld l,a
 539  8C7A 26 00        	ld h,0
 540  8C7C 22 4B 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 541  8C7F
 542  8C7F              ;	Inicializa 1er Nivel.
 543  8C7F
 544  8C7F 21 9B 8B     	ld hl,Indice_de_niveles
 545  8C82 22 51 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 546  8C85 CD A1 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 547  8C88              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 548  8C88              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 549  8C88              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 550  8C88
 551  8C88              ;	Inicia los álbumes de líneas.
 552  8C88
 553  8C88 CD 72 90     	call Inicia_albumes_de_lineas
 554  8C8B              ;
 555  8C8B CD 82 90     	call Inicia_albumes_de_lineas_Amadeus
 556  8C8E CD 8F 90     	call Inicia_albumes_de_disparos
 557  8C91
 558  8C91 CD E6 92     4 call Inicia_Entidades
 559  8C94 CD 49 93     	call Inicia_Amadeus
 560  8C97
 561  8C97              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 562  8C97              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 563  8C97              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 564  8C97
 565  8C97 11 74 89     	ld de,Amadeus_BOX
 566  8C9A CD 9C 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 567  8C9D CD 8C 93     	call Limpiamos_bandeja_DRAW
 568  8CA0
 569  8CA0              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 570  8CA0
 571  8CA0 06 3C        	ld b,60
 572  8CA2 CD 72 9D     2 call Amadeus_a_izquierda
 573  8CA5 10 FB        	djnz 2B
 574  8CA7
 575  8CA7 CD 50 90     	call Genera_datos_de_impresion_Amadeus
 576  8CAA
 577  8CAA              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 578  8CAA
 579  8CAA CD AB 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 580  8CAD
 581  8CAD CD 2F 91     	call Inicia_Shield
 582  8CB0
 583  8CB0 2A 2B 8C     6 ld hl,(Scanlines_album_SP)
 584  8CB3 22 24 8C     	ld (Techo_Scanlines_album),hl
 585  8CB6
 586  8CB6 2A 0F 8C     	ld hl,(Album_de_borrado)
 587  8CB9 22 2B 8C     	ld (Scanlines_album_SP),hl
 588  8CBC
 589  8CBC 21 00 89     	ld hl,Tabla_de_pintado
 590  8CBF 22 2D 8C     	ld (India_SP),hl
 591  8CC2
 592  8CC2 21 31 8C     	ld hl,Ctrl_3
 593  8CC5 CB C6        	set 0,(hl) 											; Indica Frame completo.
 594  8CC7 CB D6        	set 2,(hl)
 595  8CC9 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 596  8CCB
 597  8CCB FB           	ei 													; Ha de apuntar a $5c3a.
 598  8CCC
 599  8CCC 76           	halt
 600  8CCD
 601  8CCD              ; ------------------------------------
 602  8CCD
 603  8CCD              Main
 604  8CCD              ;
 605  8CCD              ; 20/09/24
 606  8CCD
 607  8CCD 3A 21 8C         ld a,(Numero_de_disparos_de_entidades)
 608  8CD0 A7               and a
 609  8CD1 F3               di
 610  8CD2 28 FE            jr z,$
 611  8CD4 FB               ei
 612  8CD5
 613  8CD5              ; Gestión de disparos.
 614  8CD5
 615  8CD5 CD 94 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 616  8CD8 CD 6B 9F     	call Motor_de_disparos_entidades
 617  8CDB CD 40 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 618  8CDE
 619  8CDE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 620  8CDE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 621  8CDE              ; Este hecho lo indica el bit2 de (Impacto2).
 622  8CDE
 623  8CDE CD DD A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 624  8CE1
 625  8CE1              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 626  8CE1
 627  8CE1 21 4F 8C     	ld hl,CLOCK_disparos_de_entidades
 628  8CE4 35           	dec (hl)
 629  8CE5 CC DD 8D     	call z,Autoriza_disparo_de_entidades
 630  8CE8
 631  8CE8 2A 4B 8C     	ld hl,(Clock_next_entity)
 632  8CEB ED 4B 78 5C  	ld bc,(FRAMES)
 633  8CEF A7           	and a
 634  8CF0 ED 42        	sbc hl,bc
 635  8CF2 20 16        	jr nz,1F
 636  8CF4
 637  8CF4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 638  8CF4              ; _ (Clock_next_entity) para la siguiente entidad.
 639  8CF4
 640  8CF4 3A 03 8C     	ld a,(Numero_parcial_de_entidades)
 641  8CF7 47           	ld b,a
 642  8CF8 3A 04 8C     	ld a,(Entidades_en_curso)
 643  8CFB B8           	cp b
 644  8CFC 28 0C        	jr z,1F
 645  8CFE 30 0A        	jr nc,1F
 646  8D00
 647  8D00 3C           	inc a
 648  8D01 32 04 8C     	ld (Entidades_en_curso),a
 649  8D04
 650  8D04              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 651  8D04
 652  8D04 CD B9 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 653  8D07 CD D5 8E     	call Define_Clock_next_entity
 654  8D0A
 655  8D0A 3A 04 8C     1 ld a,(Entidades_en_curso)
 656  8D0D A7           	and a
 657  8D0E CA 88 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 658  8D11 47           	ld b,a												; No hay entidades que gestionar.
 659  8D12
 660  8D12              ; ( Código que ejecutamos con cada entidad: ).
 661  8D12
 662  8D12              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 663  8D12              ;
 664  8D12              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 665  8D12
 666  8D12 21 00 89     	ld hl,Tabla_de_pintado
 667  8D15 22 2D 8C     	ld (India_SP),hl
 668  8D18
 669  8D18 21 31 8C     	ld hl,Ctrl_3
 670  8D1B CB D6        	set 2,(hl)
 671  8D1D CD 69 8E     	call Change
 672  8D20
 673  8D20 C5           2 push bc 												; Nº de entidades en curso.
 674  8D21
 675  8D21 CD FC 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 676  8D24 ED 5B 2B 8C  	ld de,(Scanlines_album_SP)
 677  8D28
 678  8D28              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 679  8D28
 680  8D28              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 681  8D28              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 682  8D28
 683  8D28 3A 38 8C     	ld a,(Impacto2)
 684  8D2B CB 5F        	bit 3,a
 685  8D2D C4 DC A0     	call nz,Compara_con_coordenadas_de_disparo
 686  8D30
 687  8D30 3A C0 8B     	ld a,(Impacto)
 688  8D33 CB 4F        	bit 1,a
 689  8D35 C4 0C 92     	call nz,Genera_explosion
 690  8D38 20 31        	jr nz,Gestiona_siguiente_entidad
 691  8D3A
 692  8D3A 3A C0 8B     	ld a,(Impacto)
 693  8D3D A7           	and a
 694  8D3E 28 0C        	jr z,3F
 695  8D40
 696  8D40              ; IMPACTO en entidad por colisión con Amadeus.
 697  8D40
 698  8D40              ; 5/7/24
 699  8D40              ; Nota importante:
 700  8D40              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 701  8D40              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 702  8D40              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 703  8D40
 704  8D40 3A 78 89     	ld a,(Impacto_Amadeus)
 705  8D43 A7           	and a
 706  8D44 C4 0C 92     	call nz,Genera_explosion
 707  8D47 20 22        	jr nz,Gestiona_siguiente_entidad
 708  8D49
 709  8D49              ; Falsa colisión !!!
 710  8D49
 711  8D49 32 C0 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 712  8D4C
 713  8D4C              ; -------------------------------------------
 714  8D4C
 715  8D4C CD 19 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 716  8D4F CD 49 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 717  8D52 CD 09 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 718  8D55 CD 0C 95     	call Genera_datos_de_impresion
 719  8D58 CD AF 93     	call Decrementa_Contador_de_mov_masticados
 720  8D5B
 721  8D5B              ; -------------------------------------------
 722  8D5B
 723  8D5B              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 724  8D5B
 725  8D5B 2A C1 8B     	ld hl,(Puntero_de_impresion)
 726  8D5E CD E0 94     	call Genera_coordenadas
 727  8D61
 728  8D61              ; TODO: Generamos disparo ???
 729  8D61
 730  8D61 3A 23 8C     	ld a,(Permiso_de_disparo_Entidades)
 731  8D64 A7           	and a
 732  8D65 C4 F2 8D     	call nz,Entidad_genera_disparo_si_procede
 733  8D68
 734  8D68 CD 5B A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 735  8D6B
 736  8D6B              Gestiona_siguiente_entidad
 737  8D6B
 738  8D6B CD 81 93      	call Store_Restore_cajas
 739  8D6E C1           	pop bc
 740  8D6F 10 AF        	djnz 2B
 741  8D71
 742  8D71              ; Hemos gestionado todas las entidades.
 743  8D71              ; ----- ----- -----
 744  8D71
 745  8D71 CD 2D 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 746  8D74 CD 44 8F     	call Ordena_tabla_de_impresion
 747  8D77 CD AB 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 748  8D7A
 749  8D7A CD EA 8E     	call Borra_diferencia
 750  8D7D
 751  8D7D 3A 31 8C     	ld a,(Ctrl_3)
 752  8D80 CB 5F        	bit 3,a
 753  8D82 20 04        	jr nz,Gestion_de_Amadeus
 754  8D84
 755  8D84 EB           	ex de,hl
 756  8D85 71           	ld (hl),c
 757  8D86 2C           	inc l
 758  8D87 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 759  8D88
 760  8D88              ;! GESTIONA AMADEUS !!!!!!!!!!
 761  8D88
 762  8D88              Gestion_de_Amadeus
 763  8D88
 764  8D88 21 31 8C     	ld hl,Ctrl_3
 765  8D8B CB 76        	bit 6,(hl)
 766  8D8D 28 13        	jr z,Amadeus_vivo
 767  8D8F
 768  8D8F              ; Amadeus ha sido destruido.
 769  8D8F              ; Decrementa (Temp_new_live).
 770  8D8F
 771  8D8F 21 45 8C     	ld hl,Temp_new_live
 772  8D92 35           	dec (hl)
 773  8D93 20 26        	jr nz,End_frame
 774  8D95
 775  8D95              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 776  8D95
 777  8D95 21 5E 8C     	ld hl,Lives
 778  8D98 35           	dec (hl)
 779  8D99
 780  8D99              ;! Fin del juego
 781  8D99
 782  8D99 F3           	di
 783  8D9A 28 FE        	jr z,$
 784  8D9C FB           	ei
 785  8D9D
 786  8D9D              ; Nueva nave.
 787  8D9D
 788  8D9D CD 0F 8E     	call Reinicia_Amadeus
 789  8DA0 18 19        	jr End_frame
 790  8DA2
 791  8DA2              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 792  8DA2
 793  8DA2              Amadeus_vivo
 794  8DA2
 795  8DA2 3A 78 89     	ld a,(Impacto_Amadeus)
 796  8DA5 A7           	and a
 797  8DA6 C4 3C 92     	call nz, Genera_explosion_Amadeus
 798  8DA9 20 10        	jr nz, End_frame
 799  8DAB
 800  8DAB CD E9 91     	call Teclado
 801  8DAE 21 31 8C     	ld hl,Ctrl_3
 802  8DB1
 803  8DB1 CB 6E        	bit 5,(hl)
 804  8DB3 28 06        	jr z,End_frame
 805  8DB5
 806  8DB5              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 807  8DB5
 808  8DB5 CD 84 8E     	call Change_Amadeus
 809  8DB8 CD 50 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 810  8DBB
 811  8DBB              End_frame
 812  8DBB
 813  8DBB              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 814  8DBB              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 815  8DBB
 816  8DBB CD FF 9F     	call Genera_datos_de_impresion_disparos_Entidades
 817  8DBE CD C6 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 818  8DC1 CD 21 A1     	call Calcula_bytes_pintado_disparos
 819  8DC4 CD 2E A1     	call Limpia_album_de_pintado_disparos_entidades
 820  8DC7
 821  8DC7              ; ------------ ------------- --------------
 822  8DC7
 823  8DC7 2A 0F 8C     	ld hl,(Album_de_borrado)
 824  8DCA 22 2B 8C     	ld (Scanlines_album_SP),hl
 825  8DCD
 826  8DCD 21 31 8C     	ld hl,Ctrl_3
 827  8DD0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 828  8DD2 CB 9E        	res 3,(hl)
 829  8DD4 CB A6        	res 4,(hl)
 830  8DD6
 831  8DD6 AF           	xor a
 832  8DD7 D3 FE        	out ($fe),a
 833  8DD9
 834  8DD9 76           	halt
 835  8DDA
 836  8DDA              ; ----------------------------------------
 837  8DDA
 838  8DDA              ;	ld a,(Ctrl_1) 										; Existe Loop?
 839  8DDA              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 840  8DDA CA CD 8C     	jp z,Main
 841  8DDD
 842  8DDD              ;------------------------------------------
 843  8DDD              ;
 844  8DDD              ;	2/10/24
 845  8DDD
 846  8DDD              Autoriza_disparo_de_entidades
 847  8DDD
 848  8DDD 3E 01        	ld a,1
 849  8DDF 32 23 8C     	ld (Permiso_de_disparo_Entidades),a
 850  8DE2
 851  8DE2 3A 4E 8C     	ld a,(Repone_CLOCK_disparos)
 852  8DE5 FE 19        	cp 25
 853  8DE7 38 02        	jr c,1F
 854  8DE9
 855  8DE9 D6 05        	sub 5
 856  8DEB
 857  8DEB 32 4E 8C     1 ld (Repone_CLOCK_disparos),a
 858  8DEE 32 4F 8C     	ld (CLOCK_disparos_de_entidades),a
 859  8DF1
 860  8DF1 C9           	ret
 861  8DF2
 862  8DF2              ;------------------------------------------
 863  8DF2              ;
 864  8DF2              ;	14/09/24
 865  8DF2              ;
 866  8DF2              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 867  8DF2
 868  8DF2              Entidad_genera_disparo_si_procede
 869  8DF2
 870  8DF2 2A 48 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 871  8DF5 CB 06        	rlc (hl)
 872  8DF7
 873  8DF7 DC 51 A0     	call c,Genera_disparo_de_entidad_maldosa
 874  8DFA
 875  8DFA C9           	ret
 876  8DFB
 877  8DFB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 878  8DFB              ;
 879  8DFB              ;	30/09/24
 880  8DFB
 881  8DFB              Actuaiza_sp_de_disparos_de_entidades
 882  8DFB
 883  8DFB 2A 48 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 884  8DFE 23           	inc hl
 885  8DFF 22 48 8C     	ld (Puntero_num_aleatorios_disparos),hl
 886  8E02
 887  8E02 11 FD 88     	ld de,Numeros_aleatorios+7
 888  8E05 7B           	ld a,e
 889  8E06 95           	sub l
 890  8E07 C0           	ret nz
 891  8E08
 892  8E08 21 F6 88     1 ld hl,Numeros_aleatorios
 893  8E0B 22 48 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 894  8E0E C9           	ret
 895  8E0F
 896  8E0F              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 897  8E0F              ;
 898  8E0F              ;	24/07/24
 899  8E0F
 900  8E0F              Reinicia_Amadeus
 901  8E0F
 902  8E0F              ;	Reinicia posición y estado.
 903  8E0F
 904  8E0F 21 CF 50     	ld hl,$50cf
 905  8E12 22 79 89     	ld (p.imp.amadeus),hl
 906  8E15 21 F0 E0     	ld hl,$e0f0
 907  8E18 22 7B 89     	ld (Pamm_Amadeus),hl
 908  8E1B 21 3D 00     	ld hl,$003d
 909  8E1E 22 7D 89     	ld (Comm_Amadeus),hl
 910  8E21
 911  8E21              ;	limpiamos el álbum de borrado.
 912  8E21
 913  8E21 2A 13 8C     	ld hl,(Album_de_borrado_Amadeus)
 914  8E24
 915  8E24 AF           	xor a
 916  8E25 77           	ld (hl),a
 917  8E26
 918  8E26 E5           	push hl
 919  8E27 D1           	pop de
 920  8E28 13           	inc de
 921  8E29
 922  8E29 01 23 00     	ld bc,35
 923  8E2C ED B0        	ldir
 924  8E2E
 925  8E2E CD 50 90     	call Genera_datos_de_impresion_Amadeus
 926  8E31
 927  8E31              ;	Reinicia temporizaciones.
 928  8E31
 929  8E31 CD 2F 91     	call Inicia_Shield
 930  8E34
 931  8E34 3E 5A        	ld a,90
 932  8E36 32 5B 8C     	ld (Shield),a
 933  8E39
 934  8E39 3E 64        	ld a,100
 935  8E3B 32 45 8C     	ld (Temp_new_live),a
 936  8E3E
 937  8E3E              ; 	Restauramos el FLAG: Amadeus vivo.
 938  8E3E
 939  8E3E 21 31 8C     	ld hl,Ctrl_3
 940  8E41 CB B6        	res 6,(hl)
 941  8E43
 942  8E43              ;	Fuerza la impresión de la nave en el siguiente frame.
 943  8E43
 944  8E43 21 31 8C      	ld hl,Ctrl_3
 945  8E46 CB EE        	set 5,(hl)
 946  8E48
 947  8E48 C9           	ret
 948  8E49
 949  8E49              ; --------------------------------------------------------------------------------------------------------------
 950  8E49              ;
 951  8E49              ;	12/05/24
 952  8E49
 953  8E49 3A C7 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 954  8E4C CB 27        	sla a
 955  8E4E 32 C7 8B     	ld (Velocidad),a
 956  8E51 E6 10        	and $10
 957  8E53 C8           	ret z
 958  8E54
 959  8E54              ; Restaura (Velocidad) a razón del nº de vueltas.
 960  8E54
 961  8E54 3A BF 8B     	ld a,(Contador_de_vueltas)
 962  8E57 CB 2F        	sra a
 963  8E59 CB 2F        	sra a
 964  8E5B 32 C7 8B     	ld (Velocidad),a
 965  8E5E
 966  8E5E 2A C3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 967  8E61 23           	inc hl
 968  8E62 23           	inc hl
 969  8E63 23           	inc hl
 970  8E64 23           	inc hl
 971  8E65 22 C3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 972  8E68
 973  8E68 C9           	ret
 974  8E69
 975  8E69              ; --------------------------------------------------------------------------------------------------------------
 976  8E69              ;
 977  8E69              ;	25/08/24
 978  8E69
 979  8E69              Change
 980  8E69
 981  8E69 3A 28 8C     	ld a,(Switch)
 982  8E6C EE 01        	xor 1
 983  8E6E 32 28 8C     	ld (Switch),a
 984  8E71 2A 0D 8C     	ld hl,(Album_de_pintado)
 985  8E74 ED 5B 0F 8C  	ld de,(Album_de_borrado)
 986  8E78 EB           	ex de,hl
 987  8E79 22 0D 8C     	ld (Album_de_pintado),hl
 988  8E7C 22 2B 8C     	ld (Scanlines_album_SP),hl
 989  8E7F ED 53 0F 8C  	ld (Album_de_borrado),de
 990  8E83 C9           	ret
 991  8E84
 992  8E84              Change_Amadeus
 993  8E84
 994  8E84 2A 11 8C     	ld hl,(Album_de_pintado_Amadeus)
 995  8E87 ED 5B 13 8C  	ld de,(Album_de_borrado_Amadeus)
 996  8E8B EB           	ex de,hl
 997  8E8C 22 11 8C     	ld (Album_de_pintado_Amadeus),hl
 998  8E8F ED 53 13 8C  	ld (Album_de_borrado_Amadeus),de
 999  8E93 C9           	ret
1000  8E94
1001  8E94              Change_Disparos
1002  8E94
1003  8E94              ; Álbumes de Amadeus.
1004  8E94
1005  8E94 2A 15 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1006  8E97 ED 5B 17 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1007  8E9B EB           	ex de,hl
1008  8E9C 22 15 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1009  8E9F ED 53 17 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1010  8EA3 CD 16 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1011  8EA6
1012  8EA6              ; Álbumes de entidades.
1013  8EA6
1014  8EA6 2A 19 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1015  8EA9 ED 5B 1B 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1016  8EAD EB           	ex de,hl
1017  8EAE 22 19 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1018  8EB1 ED 53 1B 8C  	ld (Album_de_borrado_disparos_Entidades),de
1019  8EB5 22 1D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1020  8EB8
1021  8EB8              ;	ld a,(Num_de_bytes_album_de_disparos)
1022  8EB8              ;	ld (Num_de_bytes_album_de_disparos_borrado),a
1023  8EB8
1024  8EB8 C9           	ret
1025  8EB9
1026  8EB9              ; ------------------------------------
1027  8EB9              ;
1028  8EB9              ; 1/05/24
1029  8EB9
1030  8EB9              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1031  8EB9              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1032  8EB9
1033  8EB9              ;	DESTRUYE: HL,DE,A
1034  8EB9              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1035  8EB9
1036  8EB9              ;	Variables implicadas: (RND_SP).
1037  8EB9
1038  8EB9              Extrae_numero_aleatorio_y_avanza
1039  8EB9
1040  8EB9 21 00 89     	ld hl,Tabla_de_pintado
1041  8EBC EB           	ex de,hl
1042  8EBD 2A 46 8C     	ld hl,(RND_SP)
1043  8EC0 EB           	ex de,hl
1044  8EC1 A7           	and a
1045  8EC2 ED 52        	sbc hl,de
1046  8EC4
1047  8EC4 2A 46 8C     	ld hl,(RND_SP)
1048  8EC7 20 06        	jr nz,1F
1049  8EC9
1050  8EC9              ; Sitúa HL al principio de la tabla de nº aleatorios.
1051  8EC9
1052  8EC9 21 F6 88     	ld hl,Numeros_aleatorios
1053  8ECC 22 46 8C     	ld (RND_SP),HL
1054  8ECF
1055  8ECF              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1056  8ECF
1057  8ECF 7E           1 ld a,(hl)
1058  8ED0 23           	inc hl
1059  8ED1 22 46 8C     	ld (RND_SP),hl
1060  8ED4 C9           	ret
1061  8ED5
1062  8ED5              ; ------------------------------------
1063  8ED5              ;
1064  8ED5              ; 1/05/24
1065  8ED5
1066  8ED5              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1067  8ED5              ; (1 a 4 segundos).
1068  8ED5              ; Actualizamos (Clock_next_entity) con A.
1069  8ED5
1070  8ED5              ;	DESTRUYE: A y B.
1071  8ED5              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1072  8ED5              ;			 Actualiza (Clock_next_entity) con A.
1073  8ED5
1074  8ED5              ;	Variables implicadas: (Clock_next_entity).
1075  8ED5
1076  8ED5              ; Notas:
1077  8ED5
1078  8ED5              ; 	$32 1 seg.
1079  8ED5              ; 	$64 2 seg.
1080  8ED5              ; 	$96 3 seg.
1081  8ED5              ; 	$c8 4 seg.
1082  8ED5              ; 	$fa 5 seg.
1083  8ED5
1084  8ED5              ; $ffff 1310,7 seg, 22 minutos.
1085  8ED5
1086  8ED5              ;	$0100  5 seg. aproximadamente.
1087  8ED5              ;	$0200 10 seg. aproximadamente.
1088  8ED5              ;	$0300 15 seg. aproximadamente.
1089  8ED5              ;	$0400 20 seg. aproximadamente.
1090  8ED5              ;	$0500 25 seg. aproximadamente.
1091  8ED5              ;	$0600 30 seg. aproximadamente.
1092  8ED5
1093  8ED5              Define_Clock_next_entity
1094  8ED5
1095  8ED5 FE 34        	cp $34
1096  8ED7 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1097  8ED9
1098  8ED9              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1099  8ED9
1100  8ED9 4F           3 ld c,a
1101  8EDA 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1102  8EDC 2A 78 5C     	ld hl,(FRAMES)
1103  8EDF A7           	and a
1104  8EE0 ED 4A        	adc hl,bc
1105  8EE2 22 4B 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1106  8EE5 C9           	ret
1107  8EE6
1108  8EE6 3E 34        1 ld a,$34
1109  8EE8 18 EF        	jr 3B
1110  8EEA
1111  8EEA              ; ------------------------------------
1112  8EEA              ;
1113  8EEA              ; 18/03/24
1114  8EEA
1115  8EEA              Borra_diferencia
1116  8EEA
1117  8EEA ED 4B 2B 8C  	ld bc,(Scanlines_album_SP)
1118  8EEE
1119  8EEE 3A 28 8C     	ld a,(Switch)
1120  8EF1 A7           	and a
1121  8EF2 28 08        	jr z,2F
1122  8EF4
1123  8EF4 2A 26 8C     	ld hl,(Techo_Scanlines_album_2)
1124  8EF7 11 26 8C     	ld de,Techo_Scanlines_album_2
1125  8EFA 18 06        	jr 3F
1126  8EFC
1127  8EFC 2A 24 8C     2 ld hl,(Techo_Scanlines_album)
1128  8EFF 11 24 8C     	ld de,Techo_Scanlines_album
1129  8F02
1130  8F02              ; Diferencia.
1131  8F02
1132  8F02 ED 42        3 sbc hl,bc
1133  8F04
1134  8F04 C8           	ret z
1135  8F05 D8           	ret c
1136  8F06
1137  8F06              ; Nuevo techo, (más bajo que el anterior).
1138  8F06              ; Fijamos nuevo techo y borramos bytes sobrantes.
1139  8F06
1140  8F06 EB           	ex de,hl
1141  8F07
1142  8F07 71           	ld (hl),c
1143  8F08 2C           	inc l
1144  8F09 70           	ld (hl),b
1145  8F0A
1146  8F0A AF           	xor a
1147  8F0B 43           	ld b,e
1148  8F0C
1149  8F0C 2A 2B 8C     	ld hl,(Scanlines_album_SP)
1150  8F0F
1151  8F0F 77           1 ld (hl),a
1152  8F10 23           	inc hl
1153  8F11 10 FC        	djnz 1B
1154  8F13
1155  8F13              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1156  8F13
1157  8F13 21 31 8C     	ld hl,Ctrl_3
1158  8F16 CB DE        	set 3,(hl)
1159  8F18
1160  8F18 C9           	ret
1161  8F19
1162  8F19              ; --------------------------------------------------------------------------------------------------------------
1163  8F19              ;
1164  8F19              ;	26/3/24
1165  8F19
1166  8F19              Recauda_informacion_de_entidad_en_curso
1167  8F19
1168  8F19              ; Almacena la Coordenada Y de la entidad en curso.
1169  8F19
1170  8F19              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1171  8F19
1172  8F19 3A BE 8B     	ld a,(Coordenada_y)
1173  8F1C 2A 2D 8C     	ld hl,(India_SP)
1174  8F1F 77           	ld (hl),a
1175  8F20 2C           	inc l
1176  8F21
1177  8F21              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1178  8F21
1179  8F21 ED 5B 2B 8C  	ld de,(Scanlines_album_SP)
1180  8F25
1181  8F25 73           	ld (hl),e
1182  8F26 2C           	inc l
1183  8F27 72           	ld (hl),d
1184  8F28 2C           	inc l
1185  8F29
1186  8F29 22 2D 8C     	ld (India_SP),hl
1187  8F2C
1188  8F2C C9           	ret
1189  8F2D
1190  8F2D              ; --------------------------------------------------------------------------------------------------------------
1191  8F2D              ;
1192  8F2D              ;	27/03/24
1193  8F2D              ;
1194  8F2D
1195  8F2D              Inicializa_India_y_limpia_Tabla_de_impresion
1196  8F2D
1197  8F2D 2A 2D 8C     	ld hl,(India_SP)
1198  8F30 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1199  8F33
1200  8F33 79           	ld a,c
1201  8F34 95           	sub l
1202  8F35 28 06        	jr z,2F
1203  8F37 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1204  8F38              ;														; _ y pasamos a inicializar (India_SP).
1205  8F38 AF           	xor a
1206  8F39
1207  8F39 77           1 ld (hl),a
1208  8F3A 2C           	inc l
1209  8F3B 10 FC        	djnz 1B												; Limpia Tabla.
1210  8F3D
1211  8F3D 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1212  8F40 22 2D 8C     	ld (India_SP),hl
1213  8F43
1214  8F43 C9           	ret
1215  8F44
1216  8F44              ; --------------------------------------------------------------------------------------------------------------
1217  8F44              ;
1218  8F44              ;	31/3/24
1219  8F44
1220  8F44              Ordena_tabla_de_impresion
1221  8F44
1222  8F44              ; 5794 T/states.
1223  8F44              ; 6278 T/states.
1224  8F44              ; 5310 T/states.
1225  8F44
1226  8F44              ; Inicializamos punteros (India_SP) e (India_2_SP).
1227  8F44              ; Inicializamos contador de comparaciones, [C].
1228  8F44              ; Cargamos los registros A y B para efectuar comparación.
1229  8F44
1230  8F44 FD 2E 00     	ld iyl,0
1231  8F47
1232  8F47 3A 04 8C     	ld a,(Entidades_en_curso)
1233  8F4A FE 04        	cp 4 	;	4
1234  8F4C D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1235  8F4D
1236  8F4D 3D           	dec a
1237  8F4E 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1238  8F4F 51           	ld d,c 										; Copia de respaldo.
1239  8F50
1240  8F50 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1241  8F51
1242  8F51 21 03 89     	ld hl,Tabla_de_pintado+3
1243  8F54 46           	ld b,(hl)
1244  8F55 22 2F 8C     	ld (India_2_SP),hl
1245  8F58
1246  8F58 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1247  8F59 DC 81 8F     	call c, Avanza_India_2_SP
1248  8F5C CC 81 8F     	call z, Avanza_India_2_SP
1249  8F5F
1250  8F5F FD 2D        	dec iyl
1251  8F61 28 18        	jr z,2F
1252  8F63
1253  8F63
1254  8F63              ; --------------------------------------------------------------------------------------------------------------
1255  8F63              ;
1256  8F63              ;	7/4/24
1257  8F63
1258  8F63              Trueque
1259  8F63
1260  8F63              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1261  8F63              ;  			A contiene en nº de fila de (India_SP).
1262  8F63              ;			HL contiene (India_2_SP).
1263  8F63
1264  8F63 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1265  8F64 E5           	push hl										; Preservo (India_2_SP).
1266  8F65
1267  8F65 ED 5B 2D 8C  	ld de,(India_SP)
1268  8F69 EB           	ex de,hl
1269  8F6A 70           	ld (hl),b
1270  8F6B 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1271  8F6C
1272  8F6C CD AD 8F     	call Intercambia_1_byte
1273  8F6F CD AD 8F     	call Intercambia_1_byte
1274  8F72
1275  8F72
1276  8F72              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1277  8F72              ; Recuperamos (India_2_SP) en HL.
1278  8F72
1279  8F72 2A 2D 8C     	ld hl,(India_SP)
1280  8F75 7E           	ld a,(hl)
1281  8F76
1282  8F76 E1           	pop hl
1283  8F77 D1           	pop de
1284  8F78
1285  8F78              ; --------------------------------------------------------------------------------------------------------------
1286  8F78
1287  8F78 CD 81 8F     	call Avanza_India_2_SP
1288  8F7B
1289  8F7B 14           2 inc d
1290  8F7C 15           	dec d
1291  8F7D C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1292  8F7E 18 D8        	jr 1B
1293  8F80
1294  8F80 C9           	ret
1295  8F81
1296  8F81              ; ----- ----- ----- ----- -----
1297  8F81
1298  8F81              Avanza_India_2_SP
1299  8F81
1300  8F81 0D           	dec c
1301  8F82 28 0A        	jr z,Avanza_punteros_indios
1302  8F84
1303  8F84 FD 2C        	inc iyl
1304  8F86
1305  8F86 2C           	inc l
1306  8F87 2C           	inc l
1307  8F88 2C           	inc l
1308  8F89
1309  8F89 46           	ld b,(hl)
1310  8F8A 22 2F 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1311  8F8D
1312  8F8D C9           	ret
1313  8F8E
1314  8F8E              ; ----- ----- ----- ----- -----
1315  8F8E
1316  8F8E              Avanza_punteros_indios
1317  8F8E
1318  8F8E 15           	dec d
1319  8F8F 28 15        	jr z,Prepara_salida
1320  8F91
1321  8F91 4A           	ld c,d
1322  8F92
1323  8F92 2A 2D 8C     	ld hl,(India_SP)
1324  8F95 2C           	inc l
1325  8F96 2C           	inc l
1326  8F97 2C           	inc l
1327  8F98 7E           	ld a,(hl)
1328  8F99 22 2D 8C     	ld (India_SP),hl
1329  8F9C
1330  8F9C 2C           	inc l
1331  8F9D 2C           	inc l
1332  8F9E 2C           	inc l
1333  8F9F 46           	ld b,(hl)
1334  8FA0 22 2F 8C     	ld (India_2_SP),hl
1335  8FA3
1336  8FA3 FD 2C        	inc iyl
1337  8FA5
1338  8FA5 C9           	ret
1339  8FA6
1340  8FA6              Prepara_salida
1341  8FA6
1342  8FA6 21 00 89     	ld hl,Tabla_de_pintado
1343  8FA9 22 2D 8C     	ld (India_SP),hl
1344  8FAC C9           	ret
1345  8FAD
1346  8FAD
1347  8FAD 2C           Intercambia_1_byte inc l
1348  8FAE 1C           	inc e
1349  8FAF 46           	ld b,(hl)
1350  8FB0 1A           	ld a,(de)
1351  8FB1 EB           	ex de,hl
1352  8FB2 70           	ld (hl),b
1353  8FB3 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1354  8FB4 C9           	ret
1355  8FB5
1356  8FB5              ; -----------------------------------------------------------------------------------
1357  8FB5              ;
1358  8FB5              ;	20/01/24
1359  8FB5              ;
1360  8FB5              ;
1361  8FB5
1362  8FB5              Construye_movimientos_masticados_entidad
1363  8FB5
1364  8FB5 2A C3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1365  8FB8 E5           	push hl
1366  8FB9 CD FC 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1367  8FBC              ;															; _ el (Contador_de_mov_masticados).
1368  8FBC CD C7 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1369  8FBF              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1370  8FBF CD F8 99     	call Recompone_posicion_inicio
1371  8FC2
1372  8FC2 CD 28 97     1 call Draw
1373  8FC5 CD E1 8F     	call Guarda_movimiento_masticado
1374  8FC8
1375  8FC8 CD A5 9D     	call Movimiento
1376  8FCB
1377  8FCB 3A 31 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1378  8FCE CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1379  8FD0 28 F0        	jr z,1B
1380  8FD2
1381  8FD2              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1382  8FD2              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1383  8FD2
1384  8FD2 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1385  8FD3 22 C3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1386  8FD6
1387  8FD6              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1388  8FD6
1389  8FD6 CD 09 9F     	call Situa_en_contador_general_de_mov_masticados
1390  8FD9
1391  8FD9              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1392  8FD9              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1393  8FD9
1394  8FD9 ED 4B C5 8B  	ld bc,(Contador_de_mov_masticados)
1395  8FDD
1396  8FDD 71           	ld (hl),c
1397  8FDE 23           	inc hl
1398  8FDF 70           	ld (hl),b
1399  8FE0
1400  8FE0 C9           	ret
1401  8FE1
1402  8FE1              ; -----------------------------------------------------------------------------------
1403  8FE1              ;
1404  8FE1              ;	28/12/23
1405  8FE1              ;
1406  8FE1              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1407  8FE1              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1408  8FE1
1409  8FE1              Guarda_movimiento_masticado
1410  8FE1
1411  8FE1 ED 73 09 8C  	ld (Stack),sp
1412  8FE5 ED 7B C3 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1413  8FE9
1414  8FE9 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1415  8FEB FD E5            push iy 												; Pushea Puntero_objeto.
1416  8FED
1417  8FED ED 7B 09 8C      ld sp,(Stack)
1418  8FF1
1419  8FF1 2A C5 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1420  8FF4 23           	inc hl
1421  8FF5 22 C5 8B     	ld (Contador_de_mov_masticados),hl
1422  8FF8
1423  8FF8 CD FC 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1424  8FFB              ;															; _ el (Contador_de_mov_masticados).
1425  8FFB C9               ret
1426  8FFC
1427  8FFC              ; --------------------------------------------------------------------------------------------------------------
1428  8FFC              ;
1429  8FFC              ;	12/1/24
1430  8FFC              ;
1431  8FFC              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1432  8FFC
1433  8FFC              Actualiza_Puntero_de_almacen_de_mov_masticados
1434  8FFC
1435  8FFC 2A C3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1436  8FFF 01 04 00     	ld bc,4
1437  9002 A7           	and a
1438  9003 ED 4A        	adc hl,bc
1439  9005 22 C3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1440  9008 C9           	ret
1441  9009
1442  9009              ; --------------------------------------------------------------------------------------------------------------
1443  9009              ;
1444  9009              ;	24/03/24
1445  9009              ;
1446  9009              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1447  9009              ;
1448  9009              ;	IX contiene el puntero de impresión.
1449  9009              ;	DE contiene (Puntero_objeto).
1450  9009
1451  9009
1452  9009              Cargamos_registros_con_mov_masticado
1453  9009
1454  9009 ED 73 09 8C  	ld (Stack),sp
1455  900D ED 7B C3 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1456  9011
1457  9011 D1           	pop de 															; DE contiene Puntero_objeto
1458  9012 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1459  9014
1460  9014 ED 73 C3 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1461  9018 ED 7B 09 8C  	ld sp,(Stack)
1462  901C
1463  901C 7B           	ld a,e
1464  901D 82           	add d															; Comprueba si ya no hay datos en el almacén.
1465  901E
1466  901E CC B7 93     	call z,Reinicia_entidad_maliciosa
1467  9021
1468  9021 C9           	ret
1469  9022
1470  9022              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1471  9022              ;
1472  9022              ;	22/7/24
1473  9022
1474  9022              Cargamos_registros_con_explosion
1475  9022
1476  9022
1477  9022 2A C3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1478  9025 CD C1 90     	call Extrae_address
1479  9028
1480  9028 5D           	ld e,l
1481  9029 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1482  902A
1483  902A DD 2A C1 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1484  902E
1485  902E C9           	ret
1486  902F
1487  902F
1488  902F              Cargamos_registros_con_explosion_Amadeus
1489  902F
1490  902F 2A 7B 89     	ld hl,(Pamm_Amadeus)
1491  9032 CD C1 90     	call Extrae_address
1492  9035
1493  9035 5D           	ld e,l
1494  9036 54           	ld d,h
1495  9037
1496  9037 DD 2A 79 89  	ld ix,(p.imp.amadeus)
1497  903B
1498  903B C9           	ret
1499  903C
1500  903C              ; --------------------------------------------------------------------------------------------------------------
1501  903C              ;
1502  903C              ;	17/06/24
1503  903C              ;
1504  903C              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1505  903C              ;
1506  903C              ;	IX contiene el puntero de impresión.
1507  903C              ;	DE contiene (Puntero_objeto).
1508  903C
1509  903C
1510  903C              Cargamos_registros_con_mov_masticado_Amadeus
1511  903C
1512  903C ED 73 09 8C  	ld (Stack),sp
1513  9040 ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1514  9044 D1           	pop de 															; DE contiene Puntero_objeto
1515  9045 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1516  9047 DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1517  904B ED 7B 09 8C  	ld sp,(Stack)
1518  904F C9           	ret
1519  9050
1520  9050              ; ---------------------------------------------------------------------------------------------------------------------
1521  9050              ;
1522  9050              ;	18/6/24
1523  9050              ;
1524  9050              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1525  9050
1526  9050              Genera_datos_de_impresion_Amadeus
1527  9050
1528  9050 3A 78 89     	ld a,(Impacto_Amadeus)
1529  9053 A7           	and a
1530  9054 20 03        	jr nz,1F
1531  9056
1532  9056              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1533  9056              ; _apuntando a la correspondiente explosión.
1534  9056
1535  9056 CD 3C 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1536  9059
1537  9059 DD 7D        1 ld a,ixl
1538  905B E6 1F        	and $1f
1539  905D 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1540  9060
1541  9060 2A 2B 8C     	ld hl,(Scanlines_album_SP)
1542  9063 E5           	push hl
1543  9064
1544  9064 2A 11 8C     	ld hl,(Album_de_pintado_Amadeus)
1545  9067 22 2B 8C     	ld (Scanlines_album_SP),hl
1546  906A
1547  906A CD 0C 95     	call Genera_datos_de_impresion
1548  906D
1549  906D E1           	pop hl
1550  906E 22 2B 8C     	ld (Scanlines_album_SP),hl
1551  9071
1552  9071 C9           	ret
1553  9072
1554  9072              ; ---------------------------------------------------------------------------------------------------------------------
1555  9072              ;
1556  9072              ;	13/03/24
1557  9072              ;
1558  9072              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1559  9072
1560  9072              Inicia_albumes_de_lineas
1561  9072
1562  9072 21 00 80     	ld hl,Scanlines_album
1563  9075 22 0D 8C     	ld (Album_de_pintado),hl
1564  9078 22 2B 8C     	ld (Scanlines_album_SP),hl
1565  907B
1566  907B 21 1A 81     	ld hl,Scanlines_album_2
1567  907E 22 0F 8C     	ld (Album_de_borrado),hl
1568  9081
1569  9081 C9           	ret
1570  9082
1571  9082              Inicia_albumes_de_lineas_Amadeus
1572  9082
1573  9082 21 34 82     	ld hl,Amadeus_scanlines_album
1574  9085 22 11 8C     	ld (Album_de_pintado_Amadeus),hl
1575  9088 21 58 82     	ld hl,Amadeus_scanlines_album_2
1576  908B 22 13 8C     	ld (Album_de_borrado_Amadeus),hl
1577  908E
1578  908E C9           	ret
1579  908F
1580  908F              Inicia_albumes_de_disparos
1581  908F
1582  908F 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1583  9092 22 15 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1584  9095 21 84 82     	ld hl,Amadeus_disparos_scanlines_album_2
1585  9098 22 17 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1586  909B
1587  909B 21 8C 82     	ld hl,Entidades_disparos_scanlines_album
1588  909E 22 19 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1589  90A1 22 1D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1590  90A4
1591  90A4 21 BF 82     	ld hl,Entidades_disparos_scanlines_album_2
1592  90A7 22 1B 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1593  90AA
1594  90AA C9           	ret
1595  90AB
1596  90AB              ; ---------------------------------------------------------------------------------------------------------------------
1597  90AB              ;
1598  90AB              ; 8/1/23
1599  90AB              ;
1600  90AB              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1601  90AB              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1602  90AB              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1603  90AB
1604  90AB              ; Destruye HL y DE !!!!!
1605  90AB
1606  90AB              Inicia_punteros_de_cajas
1607  90AB
1608  90AB 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1609  90AE CD C1 90         call Extrae_address
1610  90B1 22 FC 8B         ld (Puntero_store_caja),hl
1611  90B4 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1612  90B7 22 00 8C     	ld (Indice_restore_caja),hl
1613  90BA CD C1 90     	call Extrae_address
1614  90BD 22 FE 8B     	ld (Puntero_restore_caja),hl
1615  90C0 C9               ret
1616  90C1
1617  90C1              ; *************************************************************************************************************************************************************
1618  90C1
1619  90C1              ;
1620  90C1              ; 20/10/22
1621  90C1              ;
1622  90C1              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1623  90C1              ;
1624  90C1              ; Destruye el puntero y DE !!!!!
1625  90C1
1626  90C1 5E           Extrae_address ld e,(hl)
1627  90C2 23           	inc hl
1628  90C3 56           	ld d,(hl)
1629  90C4 2B           	dec hl
1630  90C5 EB           	ex de,hl
1631  90C6 C9           	ret
1632  90C7
1633  90C7              ; *************************************************************************************************************************************************************
1634  90C7              ;
1635  90C7              ;	20/1/24
1636  90C7              ;
1637  90C7              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1638  90C7              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1639  90C7              ;
1640  90C7              ;   Destruye HL y BC !!!!!,
1641  90C7              ;
1642  90C7              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1643  90C7              ;					"0" ..... Izquierda.
1644  90C7
1645  90C7              Inicia_Puntero_objeto
1646  90C7
1647  90C7 3A DB 8B     	ld a,(Cuad_objeto)
1648  90CA E6 01        	and 1
1649  90CC F5           	push af
1650  90CD CC E9 90     	call z,Inicia_puntero_objeto_izq
1651  90D0 F1           	pop af
1652  90D1 C8           	ret z
1653  90D2 CD D6 90     	call Inicia_puntero_objeto_der
1654  90D5 C9           	ret
1655  90D6
1656  90D6              ; Arrancamos desde la parte izquierda de la pantalla.
1657  90D6              ; Iniciamos (Indice_Sprite_der).
1658  90D6
1659  90D6 2A D1 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1660  90D9 22 D5 8B     	ld (Puntero_DESPLZ_der),hl
1661  90DC CD C1 90     	call Extrae_address
1662  90DF 22 CE 8B     	ld (Puntero_objeto),hl
1663  90E2
1664  90E2 2A D3 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1665  90E5 22 D7 8B     	ld (Puntero_DESPLZ_izq),hl
1666  90E8 C9           	ret
1667  90E9
1668  90E9              ; Arrancamos desde la parte derecha de la pantalla.
1669  90E9              ; Iniciamos (Indice_Sprite_izq).
1670  90E9
1671  90E9 2A D3 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1672  90EC 22 D7 8B     	ld (Puntero_DESPLZ_izq),hl
1673  90EF CD C1 90     	call Extrae_address
1674  90F2 22 CE 8B     	ld (Puntero_objeto),hl
1675  90F5
1676  90F5 2A D1 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1677  90F8 22 D5 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1678  90FB C9           	ret
1679  90FC
1680  90FC              ; **************************************************************************************************
1681  90FC              ;
1682  90FC              ;	06/07/24
1683  90FC              ;
1684  90FC              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1685  90FC
1686  90FC              Restore_entidad
1687  90FC
1688  90FC 2A FC 8B     	ld hl,(Puntero_store_caja)
1689  90FF 7E           	ld a,(hl)
1690  9100 A7           	and a
1691  9101 CC 0F 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1692  9104 28 F6        	jr z,Restore_entidad
1693  9106
1694  9106 11 BC 8B     	ld de,Bandeja_DRAW
1695  9109 01 0C 00     	ld bc,12
1696  910C ED B0        	ldir
1697  910E C9           	ret
1698  910F
1699  910F              ; **************************************************************************************************
1700  910F              ;
1701  910F              ;	08/05/23
1702  910F              ;
1703  910F              ;	Incrementamos los dos punteros de entidades. (+1).
1704  910F
1705  910F              Incrementa_punteros_de_cajas
1706  910F
1707  910F 2A FE 8B     	ld hl,(Puntero_restore_caja)
1708  9112 22 FC 8B     	ld (Puntero_store_caja),hl
1709  9115 2A 00 8C     	ld hl,(Indice_restore_caja)
1710  9118 23           	inc hl
1711  9119 23           	inc hl
1712  911A 22 00 8C     	ld (Indice_restore_caja),hl
1713  911D CD C1 90         call Extrae_address
1714  9120 22 FE 8B         ld (Puntero_restore_caja),hl
1715  9123 C9               ret
1716  9124
1717  9124              ; -----------------------------------------------------------
1718  9124
1719  9124              ; Teclado.
1720  9124
1721  9124 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1722  9126 DB FE        	in a,($fe)
1723  9128 E6 01        	and $01
1724  912A 28 02        	jr z,1f
1725  912C 18 F6        	jr Pulsa_ENTER
1726  912E C9           1 ret
1727  912F
1728  912F              ; **************************************************************************************************
1729  912F              ;
1730  912F              ; Temporización.
1731  912F
1732  912F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1733  912F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1734  912F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1735  912F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1736  912F
1737  912F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1738  912F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1739  912F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1740  912F
1741  912F              ; A partir de $4f61 no hace falta DELAY.
1742  912F
1743  912F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1744  912F
1745  912F              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1746  912F              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1747  912F              ;	LD A,B
1748  912F              ;	AND A
1749  912F              ;	JR NZ,wait
1750  912F              ;	RET
1751  912F
1752  912F              ; ---------------------------------------------------------------------------------------------------------------
1753  912F              ;
1754  912F              ;	13/07/24
1755  912F              ;
1756  912F
1757  912F              Inicia_Shield
1758  912F
1759  912F 21 55 8C     	ld hl,Datos_Shield
1760  9132 22 59 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1761  9135
1762  9135 7E           	ld a,(hl)
1763  9136 32 5C 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1764  9139
1765  9139 3E 01        	ld a,1
1766  913B 32 5D 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1767  913E
1768  913E C9           	ret
1769  913F
1770  913F              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1771  913F              ;
1772  913F              ;	4/6/24
1773  913F              ;
1774  913F              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1775  913F              ;
1776  913F              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1777  913F              ;
1778  913F
1779  913F              Actualiza_pantalla
1780  913F
1781  913F 3E 02        	ld a,2
1782  9141 D3 FE        	out ($fe),a
1783  9143
1784  9143 3A 31 8C     	ld a,(Ctrl_3)
1785  9146 CB 57        	bit 2,a
1786  9148 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1787  914A
1788  914A              Borrando_entidades
1789  914A
1790  914A 2A 2B 8C     	ld hl,(Scanlines_album_SP)
1791  914D CD C1 90     	call Extrae_address
1792  9150 24           	inc h
1793  9151 25           	dec h
1794  9152 28 05        	jr z,Pintando_entidades
1795  9154 CD 05 96     	call Pinta_Sprites
1796  9157 18 F1        	jr Borrando_entidades
1797  9159
1798  9159              Pintando_entidades
1799  9159
1800  9159 2A 2D 8C     	ld hl,(India_SP)
1801  915C 2C           	inc l
1802  915D CD C1 90     	call Extrae_address
1803  9160 24           	inc h
1804  9161 25           	dec h
1805  9162 28 0E        	jr z,Ejecuta_escudo
1806  9164 1C           	inc e
1807  9165 1C           	inc e
1808  9166 ED 53 2D 8C  	ld (India_SP),de
1809  916A CD C1 90     	call Extrae_address
1810  916D CD 05 96     	call Pinta_Sprites
1811  9170 18 E7        	jr Pintando_entidades
1812  9172
1813  9172              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1814  9172
1815  9172              Ejecuta_escudo
1816  9172
1817  9172 3A 5B 8C     	ld a,(Shield)
1818  9175 A7           	and a
1819  9176 20 2F        	jr nz,Aplica_Shield
1820  9178
1821  9178              Borrando_Amadeus
1822  9178
1823  9178 21 31 8C     	ld hl,Ctrl_3
1824  917B CB 6E        	bit 5,(hl)
1825  917D 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1826  917F
1827  917F 2A 13 8C     	ld hl,(Album_de_borrado_Amadeus)
1828  9182 CD C1 90     	call Extrae_address
1829  9185 24           	inc h
1830  9186 25           	dec h
1831  9187 28 03        	jr z,Pintando_Amadeus
1832  9189 CD 05 96     	call Pinta_Sprites
1833  918C
1834  918C              Pintando_Amadeus
1835  918C
1836  918C 2A 11 8C     	ld hl,(Album_de_pintado_Amadeus)
1837  918F CD C1 90     	call Extrae_address
1838  9192 24           	inc h
1839  9193 25           	dec h
1840  9194 28 03        	jr z,1F
1841  9196 CD 05 96     	call Pinta_Sprites
1842  9199
1843  9199              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1844  9199
1845  9199 21 31 8C     1 ld hl,Ctrl_3
1846  919C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1847  919E CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1848  91A0 CB AE        	res 5,(hl)
1849  91A2
1850  91A2 3E 01        	ld a,1												; Borde azul.
1851  91A4 D3 FE        	out ($fe),a
1852  91A6
1853  91A6 C9           	ret
1854  91A7
1855  91A7              Aplica_Shield
1856  91A7
1857  91A7              ;	Bit 1 "1" (Shield_3) Sólo borra.
1858  91A7              ;		  "0"     ""     Borra/Pinta.
1859  91A7              ;	Bit 2    ""  RET.	 No borra, no pinta.
1860  91A7
1861  91A7 21 5D 8C     	ld hl,Shield_3
1862  91AA
1863  91AA CB 5E        	bit 3,(hl)
1864  91AC 20 DE        	jr nz,Pintando_Amadeus
1865  91AE
1866  91AE CB 56        	bit 2,(hl)
1867  91B0 20 E7        	jr nz,1B
1868  91B2
1869  91B2 CB 4E        	bit 1,(hl)
1870  91B4 C4 BB 91     	call nz,Borra_Amadeus_shield
1871  91B7
1872  91B7 28 BF        	jr z,Borrando_Amadeus
1873  91B9 18 DE        	jr 1B
1874  91BB
1875  91BB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1876  91BB
1877  91BB              Borra_Amadeus_shield
1878  91BB
1879  91BB 3A 31 8C     	ld a,(Ctrl_3)
1880  91BE CB 6F        	bit 5,a
1881  91C0 28 08        	jr z,1F
1882  91C2
1883  91C2 2A 13 8C     	ld hl,(Album_de_borrado_Amadeus)
1884  91C5 CD C1 90     	call Extrae_address
1885  91C8 18 06        	jr 2F
1886  91CA
1887  91CA 2A 11 8C     1 ld hl,(Album_de_pintado_Amadeus)
1888  91CD CD C1 90     	call Extrae_address
1889  91D0
1890  91D0 CD 05 96     2 call Pinta_Sprites
1891  91D3
1892  91D3 AF           	xor a
1893  91D4 3C           	inc a											; Asegura NZ en la salida de la rutina.
1894  91D5
1895  91D5 C9           	ret
1896  91D6
1897  91D6              Pinta_Amadeus_shield
1898  91D6
1899  91D6 2A 11 8C     	ld hl,(Album_de_pintado_Amadeus)
1900  91D9 CD C1 90     	call Extrae_address
1901  91DC CD 05 96     	call Pinta_Sprites
1902  91DF
1903  91DF AF           	xor a
1904  91E0 3C           	inc a											; Asegura NZ en la salida de la rutina.
1905  91E1
1906  91E1 C9           	ret
1907  91E2
1908  91E2              Borra_Pinta_Amadeus_shield
1909  91E2
1910  91E2 CD BB 91     	call Borra_Amadeus_shield
1911  91E5 CD D6 91     	call Pinta_Amadeus_shield
1912  91E8 C9           	ret
1913  91E9
1914  91E9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1915  91E9              ;
1916  91E9              ;	19/6/24
1917  91E9              ;
1918  91E9
1919  91E9              Teclado
1920  91E9
1921  91E9              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1922  91E9
1923  91E9 3E F7        	ld a,$f7												; "5" para disparar.
1924  91EB DB FE        	in a,($fe)
1925  91ED E6 10        	and $10
1926  91EF
1927  91EF CC E5 A1     	call z,Genera_disparo_Amadeus
1928  91F2
1929  91F2 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1930  91F4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1931  91F6 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1932  91F8 CC 72 9D         call z,Amadeus_a_izquierda
1933  91FB
1934  91FB 3E F7        	ld a,$f7
1935  91FD DB FE        	in a,($fe)
1936  91FF E6 01        	and $01
1937  9201 C8           	ret z
1938  9202
1939  9202 3E F7        	ld a,$f7
1940  9204 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1941  9206 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1942  9208 CC 8A 9D     	call z,Amadeus_a_derecha
1943  920B
1944  920B C9           	ret
1945  920C
1946  920C              ; ------------------------------------------------------------------------------------------------------------------------
1947  920C              ;
1948  920C              ;	06/07/24
1949  920C              ;
1950  920C
1951  920C              Genera_explosion
1952  920C
1953  920C 21 43 8C     	ld hl,Clock_explosion
1954  920F 35           	dec (hl)
1955  9210 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1956  9212
1957  9212              Borra_entidad_colisionada
1958  9212
1959  9212 CD 19 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1960  9215 CD 22 90     	call Cargamos_registros_con_explosion
1961  9218 CD 0C 95     	call Genera_datos_de_impresion
1962  921B
1963  921B AF           	xor a
1964  921C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1965  921D
1966  921D C9           	ret
1967  921E
1968  921E              Siguiente_frame_explosion
1969  921E
1970  921E 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1971  9220
1972  9220              ; Avanza Frame de explosión.
1973  9220
1974  9220 2A C3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1975  9223 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1976  9226
1977  9226 79           	ld a,c
1978  9227 95           	sub l
1979  9228 20 0B        	jr nz,1F
1980  922A
1981  922A              ; Fín de la entidad !!!!!!!!!!!!!
1982  922A
1983  922A 21 03 8C     	ld hl,Numero_parcial_de_entidades
1984  922D 35           	dec (hl)
1985  922E 23           	inc hl
1986  922F 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1987  9230
1988  9230 CD 8C 93     	call Limpiamos_bandeja_DRAW
1989  9233 18 DD        	jr Borra_entidad_colisionada
1990  9235
1991  9235 23           1 inc hl
1992  9236 23           	inc hl
1993  9237 22 C3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1994  923A 18 D6        	jr Borra_entidad_colisionada
1995  923C
1996  923C              ; ----- ----- ----- ----- -----
1997  923C
1998  923C              Genera_explosion_Amadeus
1999  923C
2000  923C 21 44 8C     	ld hl,Clock_explosion_Amadeus
2001  923F 35           	dec (hl)
2002  9240 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2003  9242
2004  9242              Borra_Amadeus_impactado
2005  9242
2006  9242 CD 84 8E     	call Change_Amadeus
2007  9245 CD 2F 90     	call Cargamos_registros_con_explosion_Amadeus
2008  9248 CD 50 90     	call Genera_datos_de_impresion_Amadeus
2009  924B
2010  924B 21 31 8C     	ld hl,Ctrl_3
2011  924E CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2012  9250
2013  9250 AF           	xor a
2014  9251 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2015  9252
2016  9252 C9           	ret
2017  9253
2018  9253              Siguiente_frame_explosion_Amadeus
2019  9253
2020  9253 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2021  9255
2022  9255              ; Avanza Frame de explosión.
2023  9255
2024  9255 2A 7B 89     	ld hl,(Pamm_Amadeus)
2025  9258 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2026  925B
2027  925B 79           	ld a,c
2028  925C 95           	sub l
2029  925D 20 0B        	jr nz,1F
2030  925F
2031  925F              ; Fín de Amadeus !!!!!!!!!!!!!
2032  925F              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2033  925F
2034  925F AF           	xor a
2035  9260 32 78 89     	ld (Impacto_Amadeus),a
2036  9263 21 31 8C     	ld hl,Ctrl_3
2037  9266 CB F6        	set 6,(hl)
2038  9268
2039  9268 18 D8        	jr Borra_Amadeus_impactado
2040  926A
2041  926A 23           1 inc hl
2042  926B 23           	inc hl
2043  926C 22 7B 89     	ld (Pamm_Amadeus),hl
2044  926F 18 D1        	jr Borra_Amadeus_impactado
2045  9271
2046  9271              ; ---------------------------------------------------------------
2047  9271
2048  9271              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9271              ; ******************************************************************************************************************************************************************************************
   2+ 9271              ;
   3+ 9271              ;   21/04/24
   4+ 9271              ;
   5+ 9271              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9271              ;   (XOR) bit a bit.
   7+ 9271              ;
   8+ 9271              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9271
  10+ 9271              Derivando_RND
  11+ 9271
  12+ 9271 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9274
  14+ 9274 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9276 C5               push bc
  16+ 9277              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9277 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 927A              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 927A
  20+ 927A A7           6 and a                                 ; Carry a "0".
  21+ 927B CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 927D 30 02            jr nc,1F
  23+ 927F
  24+ 927F CB C1            set 0,c
  25+ 9281
  26+ 9281 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9282 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9284 5F               ld e,a
  29+ 9285
  30+ 9285 7A               ld a,d
  31+ 9286 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9288 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 928A
  34+ 928A CB 3F            srl a
  35+ 928C
  36+ 928C AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 928D
  38+ 928D 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 928E 28 04            jr z,4F
  40+ 9290
  41+ 9290 CB FF            set 7,a
  42+ 9292 18 02            jr 5F
  43+ 9294
  44+ 9294 CB BF        4 res 7,a
  45+ 9296
  46+ 9296 CB 21        5 sla c
  47+ 9298 10 E0            djnz 6B
  48+ 929A
  49+ 929A 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 929B
  51+ 929B 77               ld (hl),a
  52+ 929C 23               inc hl
  53+ 929D C1               pop bc
  54+ 929E 10 D4            djnz 3B
  55+ 92A0
  56+ 92A0 C9               ret
  57+ 92A1
  58+ 92A1
  59+ 92A1
# file closed: RND_Derivando.asm
2049  92A1              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92A1              ;---------------------------------------------------------------------------------------------------------------
   2+ 92A1              ;
   3+ 92A1              ;   8/3/24
   4+ 92A1              ;
   5+ 92A1              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 92A1              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 92A1              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 92A1              ;	_ de la 1ª entidad del Nivel.
   9+ 92A1              ;
  10+ 92A1              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 92A1
  12+ 92A1              ;	MODIFICA: HL,DE y A.
  13+ 92A1              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 92A1
  15+ 92A1              Inicializa_Nivel
  16+ 92A1
  17+ 92A1 2A 51 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 92A4 CD C1 90     	call Extrae_address
  19+ 92A7 7E           	ld a,(hl)
  20+ 92A8 32 02 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92AB 23           	inc hl
  22+ 92AC CD B9 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92AF 22 53 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92B2 CD C2 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92B5
  26+ 92B5 CD D3 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92B8 C9           	ret
  28+ 92B9
  29+ 92B9              ; ----------------------
  30+ 92B9
  31+ 92B9 11 E1 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92BC 01 04 00     	ld bc,4
  33+ 92BF ED B0        	ldir
  34+ 92C1 C9           	ret
  35+ 92C2
  36+ 92C2 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92C3 CD 5D 94         call Calcula_salto_en_BC
  38+ 92C6 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92C9 A7               and a
  40+ 92CA ED 4A            adc hl,bc
  41+ 92CC CD C1 90         call Extrae_address
  42+ 92CF 22 ED 8B         ld (Puntero_indice_mov),hl
  43+ 92D2 C9               ret
  44+ 92D3
  45+ 92D3 3A BC 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92D6 CD 5D 94     	call Calcula_salto_en_BC
  47+ 92D9 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92DC A7               and a
  49+ 92DD ED 4A            adc hl,bc
  50+ 92DF CD C1 90         call Extrae_address
  51+ 92E2 22 C3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92E5 C9           	ret
  53+ 92E6
  54+ 92E6              ;---------------------------------------------------------------------------------------------------------------
  55+ 92E6              ;
  56+ 92E6              ;   5/1/24
  57+ 92E6              ;
  58+ 92E6              ;	Destruye A,BC,HL,DE
  59+ 92E6
  60+ 92E6              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92E6              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92E6
  63+ 92E6              Inicia_Entidades
  64+ 92E6
  65+ 92E6              ; Preparamos los punteros de las cajas de entidades:
  66+ 92E6
  67+ 92E6 CD AB 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92E9              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92E9 CD A5 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92EC
  71+ 92EC 2A 53 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92EF
  73+ 92EF 22 53 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92F2
  75+ 92F2 CD 0B 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92F5
  77+ 92F5 2A 53 8C     	ld hl,(Datos_de_nivel)
  78+ 92F8
  79+ 92F8              ; En este punto:
  80+ 92F8              ;
  81+ 92F8              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92F8              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92F8
  84+ 92F8 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92F9
  86+ 92F9 7E           	ld a,(hl)
  87+ 92FA CD 77 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92FD
  89+ 92FD CD 6F 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9300
  91+ 9300              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9300
  93+ 9300 CD 2D 94     	call Busca_mov_masticados_segun_tipo
  94+ 9303
  95+ 9303 A7           	and a
  96+ 9304 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9306
  98+ 9306              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9306
 100+ 9306              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9306              ;	_ de este tipo de entidad.
 102+ 9306
 103+ 9306 CD 09 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 9309 CD 16 9F     	call Transfiere_datos_de_contadores
 105+ 930C
 106+ 930C 18 06        	jr 4F
 107+ 930E
 108+ 930E CD B5 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9311
 110+ 9311              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9311              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9311              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9311              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9311              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9311
 116+ 9311 CD EB 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9314              ;																; _ Mov_masticados ya generados.
 118+ 9314
 119+ 9314 CD 09 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9317
 121+ 9317 DD E5        	push ix
 122+ 9319 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 931A
 124+ 931A D5           	push de
 125+ 931B CD E0 94     	call Genera_coordenadas
 126+ 931E
 127+ 931E ED 5B 2B 8C  	ld de,(Scanlines_album_SP)
 128+ 9322 CD 19 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9325 D1           	pop de
 130+ 9326
 131+ 9326 CD 0C 95     	call Genera_datos_de_impresion
 132+ 9329              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9329              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9329              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9329              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9329
 137+ 9329 CD AF 93     	call Decrementa_Contador_de_mov_masticados
 138+ 932C
 139+ 932C              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 932C
 141+ 932C ED 5B FC 8B  	ld de,(Puntero_store_caja)
 142+ 9330 CD 9C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9333
 144+ 9333 CD 8C 93     	call Limpiamos_bandeja_DRAW
 145+ 9336 CD 0F 91     	call Incrementa_punteros_de_cajas
 146+ 9339
 147+ 9339              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9339              ; _ entidad del Nivel.
 149+ 9339
 150+ 9339 3A 32 8C     	ld a,(Ctrl_4)
 151+ 933C E6 F0        	and $f0
 152+ 933E 32 32 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9341
 154+ 9341              ; Siguiente entidad del Nivel.
 155+ 9341
 156+ 9341 2A 53 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9344 23           	inc hl 														; _ entidad del Nivel.
 158+ 9345
 159+ 9345 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9346
 161+ 9346 10 A7        	djnz 2B
 162+ 9348
 163+ 9348 C9           	ret
 164+ 9349
 165+ 9349              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9349              ;
 167+ 9349              ;	27/5/24
 168+ 9349              ;
 169+ 9349              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9349              ;
 171+ 9349
 172+ 9349              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9349              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9349
 175+ 9349 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 934C CD 6F 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 934F
 178+ 934F
 179+ 934F              Construye_movimientos_masticados_Amadeus
 180+ 934F
 181+ 934F 2A C3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9352 CD FC 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9355              ;															; _ el (Contador_de_mov_masticados).
 184+ 9355 CD C7 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9358              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9358
 187+ 9358              ; Generamos movimientos masticados de Amadeus.
 188+ 9358
 189+ 9358 06 79        	ld b,121												; $0079, 121d.
 190+ 935A
 191+ 935A C5           1 push bc
 192+ 935B CD 28 97     	call Draw
 193+ 935E CD E1 8F     	call Guarda_movimiento_masticado
 194+ 9361
 195+ 9361 CD 9C 9A     	call Mov_right
 196+ 9364 CD 9C 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9367
 198+ 9367 C1           	pop bc
 199+ 9368 10 F0        	djnz 1B
 200+ 936A
 201+ 936A              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 936A
 203+ 936A              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 936A              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 936A
 206+ 936A 2A C3 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 936D 01 08 00     	ld bc,8
 208+ 9370 A7           	and a
 209+ 9371 ED 42        	sbc hl,bc
 210+ 9373 22 C3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9376
 212+ 9376 C9           	ret
 213+ 9377
 214+ 9377              ; ---------------------------------------------------------------------
 215+ 9377              ;
 216+ 9377              ;	10/02/24
 217+ 9377              ;
 218+ 9377              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9377              ;
 220+ 9377              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9377
 222+ 9377              Definicion_segun_tipo
 223+ 9377
 224+ 9377 CD 5D 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 937A 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 937D CD 65 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9380 C9           	ret
 228+ 9381
 229+ 9381              ; ---------------------------------------------------------------------
 230+ 9381              ;
 231+ 9381              ;	6/7/24
 232+ 9381
 233+ 9381
 234+ 9381              Store_Restore_cajas
 235+ 9381
 236+ 9381 ED 5B FC 8B  	ld de,(Puntero_store_caja)
 237+ 9385 CD 9C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9388 CD 0F 91     	call Incrementa_punteros_de_cajas
 239+ 938B C9           	ret
 240+ 938C
 241+ 938C              ; ---------------------------------------------------------------------
 242+ 938C              ;
 243+ 938C              ;	23/6/24
 244+ 938C              ;
 245+ 938C              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 938C              ;
 247+ 938C              ;	MODIFY: HL
 248+ 938C
 249+ 938C              Limpiamos_bandeja_DRAW
 250+ 938C
 251+ 938C ED 73 09 8C  	ld (Stack),sp
 252+ 9390 31 E1 8B     	ld sp,Vel_left
 253+ 9393
 254+ 9393 AF           	xor a
 255+ 9394 67           	ld h,a
 256+ 9395 6F           	ld l,a
 257+ 9396
 258+ 9396 E5           	push hl
 259+ 9397 E5           	push hl
 260+ 9398 E5           	push hl
 261+ 9399 E5           	push hl
 262+ 939A E5           	push hl
 263+ 939B E5           	push hl
 264+ 939C E5           	push hl
 265+ 939D E5           	push hl
 266+ 939E E5           	push hl
 267+ 939F E5           	push hl
 268+ 93A0 E5           	push hl
 269+ 93A1 E5           	push hl
 270+ 93A2 E5           	push hl
 271+ 93A3 E5           	push hl
 272+ 93A4 E5           	push hl
 273+ 93A5 E5           	push hl
 274+ 93A6 E5           	push hl
 275+ 93A7 E5           	push hl
 276+ 93A8
 277+ 93A8 33           	inc sp
 278+ 93A9
 279+ 93A9 E5           	push hl
 280+ 93AA ED 7B 09 8C  	ld sp,(Stack)
 281+ 93AE
 282+ 93AE C9           	ret
 283+ 93AF
 284+ 93AF              ; ---------------------------------------------------------------------
 285+ 93AF              ;
 286+ 93AF              ;	24/03/24
 287+ 93AF
 288+ 93AF 2A C5 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93B2 2B           	dec hl
 290+ 93B3 22 C5 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93B6 C9           	ret
 292+ 93B7
 293+ 93B7              ; ---------------------------------------------------------------------
 294+ 93B7              ;
 295+ 93B7              ;	8/5/24
 296+ 93B7
 297+ 93B7              Reinicia_entidad_maliciosa
 298+ 93B7
 299+ 93B7              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93B7
 301+ 93B7 CD 09 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93BA CD 16 9F     	call Transfiere_datos_de_contadores
 303+ 93BD
 304+ 93BD              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93BD
 306+ 93BD 3A BC 8B     	ld a,(Tipo)
 307+ 93C0 CD 77 93     	call Definicion_segun_tipo
 308+ 93C3
 309+ 93C3 E5           	push hl
 310+ 93C4 DD E1        	pop ix
 311+ 93C6
 312+ 93C6 DD 6E 0B     	ld l,(ix+11)
 313+ 93C9 DD 66 0C     	ld h,(ix+12)
 314+ 93CC
 315+ 93CC 22 C3 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93CF
 317+ 93CF CD 09 90     	call Cargamos_registros_con_mov_masticado
 318+ 93D2
 319+ 93D2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93D2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93D2              ; Ejemplos.
 322+ 93D2
 323+ 93D2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93D2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93D2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93D2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93D2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93D2
 329+ 93D2 21 BF 8B     	ld hl,Contador_de_vueltas
 330+ 93D5 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93D7
 332+ 93D7 7E           	ld a,(hl)
 333+ 93D8 CB 2F        	sra a
 334+ 93DA CB 2F        	sra a
 335+ 93DC
 336+ 93DC 32 C7 8B     	ld (Velocidad),a
 337+ 93DF
 338+ 93DF 3E 40        	ld a,$40
 339+ 93E1 BE           	cp (hl)
 340+ 93E2 C0           	ret nz
 341+ 93E3
 342+ 93E3              ; Límitador.
 343+ 93E3
 344+ 93E3              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93E3
 346+ 93E3 CB 2E        	sra (hl)
 347+ 93E5 21 C7 8B     	ld hl,Velocidad
 348+ 93E8 CB 2E        	sra (hl)
 349+ 93EA
 350+ 93EA C9           	ret
 351+ 93EB
 352+ 93EB              ; ---------------------------------------------------------------------
 353+ 93EB              ;
 354+ 93EB              ;	22/01/24
 355+ 93EB
 356+ 93EB 21 32 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93EE CB 46        	bit 0,(hl)
 358+ 93F0 20 0D        	jr nz,1F
 359+ 93F2 CB 4E        	bit 1,(hl)
 360+ 93F4 20 0C        	jr nz,2F
 361+ 93F6 CB 56        	bit 2,(hl)
 362+ 93F8 20 0B        	jr nz,3F
 363+ 93FA CB 5E        	bit 3,(hl)
 364+ 93FC 20 0A        	jr nz,4F
 365+ 93FE C9           	ret
 366+ 93FF
 367+ 93FF CB E6        1 set 4,(hl)
 368+ 9401 C9           	ret
 369+ 9402 CB EE        2 set 5,(hl)
 370+ 9404 C9           	ret
 371+ 9405 CB F6        3 set 6,(hl)
 372+ 9407 C9           	ret
 373+ 9408 CB FE        4 set 7,(hl)
 374+ 940A C9           	ret
 375+ 940B
 376+ 940B              ; ---------------------------------------------------------------------
 377+ 940B              ;
 378+ 940B              ;	23/01/24
 379+ 940B              ;
 380+ 940B              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 940B              ;
 382+ 940B              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 940B              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 940B              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 940B              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 940B
 387+ 940B              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 940B
 389+ 940B 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 940C 3D           	dec a
 391+ 940D 20 06        	jr nz,1F
 392+ 940F
 393+ 940F              ; --- Tipo_1
 394+ 940F
 395+ 940F 21 32 8C     	ld hl,Ctrl_4
 396+ 9412 CB C6        	set 0,(hl)
 397+ 9414 C9           	ret
 398+ 9415
 399+ 9415 3D           1 dec a
 400+ 9416 20 06        	jr nz,2F
 401+ 9418
 402+ 9418              ; --- Tipo_2
 403+ 9418
 404+ 9418 21 32 8C     	ld hl,Ctrl_4
 405+ 941B CB CE        	set 1,(hl)
 406+ 941D C9           	ret
 407+ 941E
 408+ 941E 3D           2 dec a
 409+ 941F 20 06        	jr nz,3F
 410+ 9421
 411+ 9421              ; --- Tipo_3
 412+ 9421
 413+ 9421 21 32 8C     	ld hl,Ctrl_4
 414+ 9424 CB D6        	set 2,(hl)
 415+ 9426 C9           	ret
 416+ 9427
 417+ 9427              ; --- Tipo_3
 418+ 9427
 419+ 9427 21 32 8C     3 ld hl,Ctrl_4
 420+ 942A CB D6        	set 2,(hl)
 421+ 942C C9           	ret
 422+ 942D
 423+ 942D              ; ---------------------------------------------------------------------
 424+ 942D              ;
 425+ 942D              ;	22/01/24
 426+ 942D
 427+ 942D 21 32 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9430 CB 46        	bit 0,(hl)
 429+ 9432 20 0E        	jr nz,1F
 430+ 9434
 431+ 9434 CB 4E        	bit 1,(hl)
 432+ 9436 20 10        	jr nz,2F
 433+ 9438
 434+ 9438 CB 56        	bit 2,(hl)
 435+ 943A 20 12        	jr nz,3F
 436+ 943C
 437+ 943C CB 5E        	bit 3,(hl)
 438+ 943E 20 14        	jr nz,4F
 439+ 9440 18 19        	jr 6F
 440+ 9442
 441+ 9442              ; Entidad_de_Tipo_1.
 442+ 9442
 443+ 9442 CB 66        1 bit 4,(hl)
 444+ 9444 28 15        	jr z,6F
 445+ 9446 18 10        	jr 5F
 446+ 9448
 447+ 9448              ; Entidad_de_Tipo_2.
 448+ 9448
 449+ 9448 CB 6E        2 bit 5,(hl)
 450+ 944A 28 0F        	jr z,6F
 451+ 944C 18 0A        	jr 5F
 452+ 944E
 453+ 944E              ; Entidad_de_Tipo_3.
 454+ 944E
 455+ 944E CB 76        3 bit 6,(hl)
 456+ 9450 28 09        	jr z,6F
 457+ 9452 18 04        	jr 5F
 458+ 9454
 459+ 9454              ; Entidad_de_Tipo_4.
 460+ 9454
 461+ 9454 CB 7E        4 bit 7,(hl)
 462+ 9456 28 03        	jr z,6F
 463+ 9458
 464+ 9458              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9458
 466+ 9458 AF           5 xor a
 467+ 9459 3C           	inc a
 468+ 945A C9           	ret
 469+ 945B
 470+ 945B              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 945B
 472+ 945B AF           6 xor a
 473+ 945C C9           	ret
 474+ 945D
 475+ 945D              ;	------------------------------------------------------------------------------------
 476+ 945D              ;
 477+ 945D              ;	12/01/24
 478+ 945D              ;
 479+ 945D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 945D              ;
 481+ 945D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 945D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 945D
 484+ 945D CB 27        Calcula_salto_en_BC sla a
 485+ 945F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9461 4F           	ld c,a
 487+ 9462 06 00        	ld b,0
 488+ 9464 C9           	ret
 489+ 9465
 490+ 9465              ; ------------------------------------------------------------------
 491+ 9465              ;
 492+ 9465              ;	19/1/24
 493+ 9465              ;
 494+ 9465              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9465              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9465
 497+ 9465 A7           Situa_en_datos_de_definicion and a
 498+ 9466 ED 4A        	adc hl,bc
 499+ 9468 CD C1 90     	call Extrae_address
 500+ 946B 22 07 8C         ld (Datos_de_entidad),hl
 501+ 946E C9           	ret
 502+ 946F
 503+ 946F              ; ------------------------------------------------------------------
 504+ 946F
 505+ 946F              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 946F              ; 	inc de
 507+ 946F              ; 	inc de
 508+ 946F              ; 	ex de,hl
 509+ 946F              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 946F              ; 	ret
 511+ 946F
 512+ 946F              ; ----------------------------------------------------------------------------------------------------------
 513+ 946F              ;
 514+ 946F              ;	24/6/24
 515+ 946F              ;
 516+ 946F              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 946F              ;	_ de entidad.
 518+ 946F              ;
 519+ 946F              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 946F              ;
 521+ 946F              ;
 522+ 946F              ;	MODIFICA: HL,DE y BC
 523+ 946F
 524+ 946F
 525+ 946F              Definicion_de_entidad_a_bandeja_DRAW
 526+ 946F
 527+ 946F 11 BC 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9472 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9473 12           	ld (de),a
 530+ 9474 23           	inc hl
 531+ 9475              ;
 532+ 9475 11 CA 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9478 01 02 00     	ld bc,2
 534+ 947B ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 947D              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 947D 11 BF 8B     	ld de,Contador_de_vueltas
 537+ 9480 7E           	ld a,(hl)
 538+ 9481 12           	ld (de),a
 539+ 9482 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9483
 541+ 9483 11 D1 8B     	ld de,Indice_Sprite_der
 542+ 9486 01 04 00     	ld bc,4
 543+ 9489 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 948B
 545+ 948B 11 D9 8B     	ld de,Posicion_inicio
 546+ 948E 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9491 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9493
 549+ 9493 11 C3 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9496 01 02 00     	ld bc,2
 551+ 9499 ED B0        	ldir
 552+ 949B
 553+ 949B C9           	ret
 554+ 949C
 555+ 949C              ; ----------------------------------------------------------------------------------------------------------
 556+ 949C              ;
 557+ 949C              ;	1/8/24
 558+ 949C              ;
 559+ 949C
 560+ 949C              Parametros_de_bandeja_DRAW_a_caja
 561+ 949C
 562+ 949C 21 BC 8B     	ld hl,Bandeja_DRAW
 563+ 949F 01 0C 00     	ld bc,12
 564+ 94A2 ED B0        	ldir
 565+ 94A4 C9           	ret
 566+ 94A5
 567+ 94A5              ;---------------------------------------------------------------------------------------------------------------
 568+ 94A5              ;
 569+ 94A5              ;	5/1/24
 570+ 94A5              ;
 571+ 94A5              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 94A5              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 94A5              ;
 574+ 94A5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 94A5              ;
 576+ 94A5              ;	(Numero_parcial_de_entidades)="7".
 577+ 94A5              ;
 578+ 94A5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 94A5              ;
 580+ 94A5              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 94A5              ;
 582+ 94A5              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 94A5              ;	MODIFICA: A y B.
 584+ 94A5              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 94A5
 586+ 94A5              Inicializa_Numero_parcial_de_entidades
 587+ 94A5
 588+ 94A5              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 94A5
 590+ 94A5 3A 02 8C     	ld a,(Numero_de_entidades)
 591+ 94A8 A7           	and a
 592+ 94A9
 593+ 94A9              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94A9              ;	jr z,$
 595+ 94A9              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94A9
 597+ 94A9 20 03        	jr nz,3F
 598+ 94AB
 599+ 94AB              ; ---------- ---------- ----------
 600+ 94AB
 601+ 94AB              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94AB              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94AB
 604+ 94AB CD A1 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94AE
 606+ 94AE              ; ---------- ---------- ----------
 607+ 94AE
 608+ 94AE 3A 02 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94B1 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94B3 38 08        	jr c,1F
 611+ 94B5
 612+ 94B5              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94B5              ; Actualizamos variables.
 614+ 94B5
 615+ 94B5 3E 07        	ld a,7
 616+ 94B7 32 03 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94BA 47           	ld b,a
 618+ 94BB 18 04        	jr 2F
 619+ 94BD
 620+ 94BD              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94BD              ; (Numero_de_entidades)="0".
 622+ 94BD
 623+ 94BD 32 03 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94C0 47           	ld b,a
 625+ 94C1 C9           2 ret
 626+ 94C2
# file closed: Rutinas_de_inicio_y_niveles.asm
2050  94C2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C2              ;
   3+ 94C2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C2              ;
   5+ 94C2              ; *****************************************************************************************************************************************************************************************
   6+ 94C2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C2
   8+ 94C2 7C           calcula_tercio ld a,h
   9+ 94C3 E6 18        	and $18
  10+ 94C5 CB 2F        	sra a
  11+ 94C7 CB 2F        	sra a
  12+ 94C9 CB 2F        	sra a
  13+ 94CB C9           	ret
  14+ 94CC
# file closed: calcula_tercio.asm
2051  94CC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94CC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94CC              ;
   3+ 94CC              ;
   4+ 94CC              ;	CLS.
   5+ 94CC              ;
   6+ 94CC              ;	Limpia la pantalla y define sus atributos.
   7+ 94CC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94CC              ;
   9+ 94CC              ;	COLORES: 0 ..... NEGRO
  10+ 94CC              ;    		 1 ..... AZUL
  11+ 94CC              ; 			 2 ..... ROJO
  12+ 94CC              ;			 3 ..... MAGENTA
  13+ 94CC              ; 			 4 ..... VERDE
  14+ 94CC              ; 			 5 ..... CIAN
  15+ 94CC              ;			 6 ..... AMARILLO
  16+ 94CC              ; 			 7 ..... BLANCO
  17+ 94CC              ;
  18+ 94CC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94CC              ;
  20+ 94CC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94CC
  22+ 94CC
  23+ 94CC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94CF 11 01 40     	LD DE,$4001
  25+ 94D2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D7 ED B0        	LDIR
  28+ 94D9 01 FF 02     	LD BC,767
  29+ 94DC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94DD ED B0        	LDIR
  31+ 94DF C9           	ret
  32+ 94E0
# file closed: Cls.asm
2052  94E0              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94E0              ; ------------------------------------------------------------------------
   2+ 94E0              ;
   3+ 94E0              ;	30/1/24
   4+ 94E0              ;
   5+ 94E0              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94E0              ;	Fila superior "0", Columna izquierda "0".
   7+ 94E0              ;
   8+ 94E0              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94E0              ;
  10+ 94E0              ;	Modifica: A,BC y DE.
  11+ 94E0
  12+ 94E0 7D           Genera_coordenadas ld a,l
  13+ 94E1 E6 1F        	and $1f
  14+ 94E3 32 BD 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94E6
  16+ 94E6 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94E7 FE 40        	cp $40
  18+ 94E9 38 1C        	jr c,4F
  19+ 94EB
  20+ 94EB CD C2 94     	call calcula_tercio
  21+ 94EE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94EF
  23+ 94EF 1E 00        	ld e,0
  24+ 94F1 7D           	ld a,l
  25+ 94F2 E6 E0        	and $e0
  26+ 94F4 28 01        	jr z,1F
  27+ 94F6 04           	inc b
  28+ 94F7
  29+ 94F7 04           1 inc b
  30+ 94F8 05           	dec b
  31+ 94F9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94FB              ;														; _ , salimos.
  33+ 94FB 1C           3 inc e
  34+ 94FC D6 20        	sub 32
  35+ 94FE 20 FB        	jr nz,3B
  36+ 9500 10 F5        	djnz 1B
  37+ 9502
  38+ 9502 7B           2 ld a,e
  39+ 9503 32 BE 8B     	ld (Coordenada_y),a
  40+ 9506 C9           	ret
  41+ 9507
  42+ 9507 AF           4 xor a
  43+ 9508 32 BE 8B     	ld (Coordenada_y),a
  44+ 950B C9           	ret
  45+ 950C
# file closed: Genera_coordenadas.asm
2053  950C              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 950C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 950C              ;
   3+ 950C              ;	20/09/24
   4+ 950C              ;
   5+ 950C              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 950C              ;   DE contiene Puntero_objeto.
   7+ 950C              ;   IX contiene el Puntero de impresión.
   8+ 950C
   9+ 950C              Genera_datos_de_impresion
  10+ 950C
  11+ 950C ED 73 09 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9510
  13+ 9510 31 C3 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9513 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9515
  16+ 9515 2A 2B 8C         ld hl,(Scanlines_album_SP)
  17+ 9518
  18+ 9518 3E 05            ld a,5
  19+ 951A 85               add l
  20+ 951B 6F               ld l,a
  21+ 951C
  22+ 951C F9               ld sp,hl
  23+ 951D 22 2B 8C         ld (Scanlines_album_SP),hl
  24+ 9520
  25+ 9520 21 00 00         ld hl,0
  26+ 9523
  27+ 9523 DD E5            push ix
  28+ 9525 3B               dec sp
  29+ 9526 ED 7A            adc hl,sp
  30+ 9528 D5               push de
  31+ 9529
  32+ 9529              ; Recuperamos SP.
  33+ 9529
  34+ 9529 ED 7B 09 8C      ld sp,(Stack)
  35+ 952D
  36+ 952D E5               push hl
  37+ 952E F1               pop af
  38+ 952F 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9530
  40+ 9530              ; Tenemos el encabezado listo.
  41+ 9530              ; Preparamos registros para generar los scanlines.
  42+ 9530
  43+ 9530 DD E5            push ix
  44+ 9532 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9533
  46+ 9533 ED 5B 2B 8C      ld de,(Scanlines_album_SP)
  47+ 9537
  48+ 9537              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9537              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9537
  51+ 9537 7C               ld a,h
  52+ 9538 FE 50            cp $50
  53+ 953A 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 953C
  55+ 953C 20 05            jr nz,2F
  56+ 953E
  57+ 953E 7D               ld a,l
  58+ 953F FE E0            cp $e0
  59+ 9541 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9543
  61+ 9543 7D           2 ld a,l
  62+ 9544 FE C0            cp $c0
  63+ 9546 D2 DC 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9549
  65+ 9549              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9549
  67+ 9549 CD DA 99         call NextScan
  68+ 954C EB               ex de,hl
  69+ 954D
  70+ 954D 73               ld (hl),e
  71+ 954E 23               inc hl
  72+ 954F 72               ld (hl),d
  73+ 9550 23               inc hl
  74+ 9551
  75+ 9551 EB               ex de,hl
  76+ 9552
  77+ 9552 CD DA 99         call NextScan
  78+ 9555 EB               ex de,hl
  79+ 9556
  80+ 9556 73               ld (hl),e
  81+ 9557 23               inc hl
  82+ 9558 72               ld (hl),d
  83+ 9559 23               inc hl
  84+ 955A
  85+ 955A EB               ex de,hl
  86+ 955B
  87+ 955B CD DA 99         call NextScan
  88+ 955E EB               ex de,hl
  89+ 955F
  90+ 955F 73               ld (hl),e
  91+ 9560 23               inc hl
  92+ 9561 72               ld (hl),d
  93+ 9562 23               inc hl
  94+ 9563
  95+ 9563 EB               ex de,hl
  96+ 9564
  97+ 9564 CD DA 99         call NextScan
  98+ 9567 EB               ex de,hl
  99+ 9568
 100+ 9568 73               ld (hl),e
 101+ 9569 23               inc hl
 102+ 956A 72               ld (hl),d
 103+ 956B 23               inc hl
 104+ 956C
 105+ 956C EB               ex de,hl
 106+ 956D
 107+ 956D CD DA 99         call NextScan
 108+ 9570 EB               ex de,hl
 109+ 9571
 110+ 9571 73               ld (hl),e
 111+ 9572 23               inc hl
 112+ 9573 72               ld (hl),d
 113+ 9574 23               inc hl
 114+ 9575
 115+ 9575 EB               ex de,hl
 116+ 9576
 117+ 9576 CD DA 99         call NextScan
 118+ 9579 EB               ex de,hl
 119+ 957A
 120+ 957A 73               ld (hl),e
 121+ 957B 23               inc hl
 122+ 957C 72               ld (hl),d
 123+ 957D 23               inc hl
 124+ 957E
 125+ 957E EB               ex de,hl
 126+ 957F
 127+ 957F CD DA 99         call NextScan
 128+ 9582 EB               ex de,hl
 129+ 9583
 130+ 9583 73               ld (hl),e
 131+ 9584 23               inc hl
 132+ 9585 72               ld (hl),d
 133+ 9586 23               inc hl
 134+ 9587
 135+ 9587 EB               ex de,hl
 136+ 9588
 137+ 9588 CD DA 99         call NextScan
 138+ 958B EB               ex de,hl
 139+ 958C
 140+ 958C 73               ld (hl),e
 141+ 958D 23               inc hl
 142+ 958E 72               ld (hl),d
 143+ 958F 23               inc hl
 144+ 9590
 145+ 9590 EB               ex de,hl
 146+ 9591
 147+ 9591 CD DA 99         call NextScan
 148+ 9594 EB               ex de,hl
 149+ 9595
 150+ 9595 73               ld (hl),e
 151+ 9596 23               inc hl
 152+ 9597 72               ld (hl),d
 153+ 9598 23               inc hl
 154+ 9599
 155+ 9599 EB               ex de,hl
 156+ 959A
 157+ 959A CD DA 99         call NextScan
 158+ 959D EB               ex de,hl
 159+ 959E
 160+ 959E 73               ld (hl),e
 161+ 959F 23               inc hl
 162+ 95A0 72               ld (hl),d
 163+ 95A1 23               inc hl
 164+ 95A2
 165+ 95A2 EB               ex de,hl
 166+ 95A3
 167+ 95A3 CD DA 99         call NextScan
 168+ 95A6 EB               ex de,hl
 169+ 95A7
 170+ 95A7 73               ld (hl),e
 171+ 95A8 23               inc hl
 172+ 95A9 72               ld (hl),d
 173+ 95AA 23               inc hl
 174+ 95AB
 175+ 95AB EB               ex de,hl
 176+ 95AC
 177+ 95AC CD DA 99         call NextScan
 178+ 95AF EB               ex de,hl
 179+ 95B0
 180+ 95B0 73               ld (hl),e
 181+ 95B1 23               inc hl
 182+ 95B2 72               ld (hl),d
 183+ 95B3 23               inc hl
 184+ 95B4
 185+ 95B4 EB               ex de,hl
 186+ 95B5
 187+ 95B5 CD DA 99         call NextScan
 188+ 95B8 EB               ex de,hl
 189+ 95B9
 190+ 95B9 73               ld (hl),e
 191+ 95BA 23               inc hl
 192+ 95BB 72               ld (hl),d
 193+ 95BC 23               inc hl
 194+ 95BD
 195+ 95BD EB               ex de,hl
 196+ 95BE
 197+ 95BE CD DA 99         call NextScan
 198+ 95C1 EB               ex de,hl
 199+ 95C2
 200+ 95C2 73               ld (hl),e
 201+ 95C3 23               inc hl
 202+ 95C4 72               ld (hl),d
 203+ 95C5 23               inc hl
 204+ 95C6
 205+ 95C6 EB               ex de,hl
 206+ 95C7
 207+ 95C7 CD DA 99         call NextScan
 208+ 95CA EB               ex de,hl
 209+ 95CB
 210+ 95CB              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95CB              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95CB              ;   _ generar sus scanlines.
 213+ 95CB
 214+ 95CB              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95CB
 216+ 95CB 73               ld (hl),e
 217+ 95CC 23               inc hl
 218+ 95CD 72               ld (hl),d
 219+ 95CE 23               inc hl
 220+ 95CF
 221+ 95CF              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95CF
 223+ 95CF 22 2B 8C         ld (Scanlines_album_SP),hl
 224+ 95D2
 225+ 95D2 EB               ex de,hl
 226+ 95D3
 227+ 95D3              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95D3
 229+ 95D3              ;    call NextScan
 230+ 95D3              ;    call NextScan
 231+ 95D3
 232+ 95D3 22 36 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D6
 234+ 95D6              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D6
 236+ 95D6 08               ex af,af
 237+ 95D7
 238+ 95D7 F5               push af
 239+ 95D8 E1               pop hl
 240+ 95D9
 241+ 95D9 36 10            ld (hl),16
 242+ 95DB
 243+ 95DB C9               ret
 244+ 95DC
 245+ 95DC              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95DC
 247+ 95DC              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95DC
 249+ 95DC 3E 57            ld a,$57
 250+ 95DE 94               sub h
 251+ 95DF 47               ld b,a
 252+ 95E0
 253+ 95E0 3E DF            ld a,$df
 254+ 95E2 BD               cp l
 255+ 95E3 38 04            jr c,1F
 256+ 95E5
 257+ 95E5 3E 08            ld a,8
 258+ 95E7 80               add b
 259+ 95E8 47               ld b,a
 260+ 95E9
 261+ 95E9              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E9              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E9
 264+ 95E9 48           1 ld c,b
 265+ 95EA 0C               inc c
 266+ 95EB
 267+ 95EB 04               inc b
 268+ 95EC 05               dec b
 269+ 95ED 20 02            jr nz,3F
 270+ 95EF
 271+ 95EF 18 0B            jr 6F
 272+ 95F1
 273+ 95F1 CD DA 99     3 call NextScan
 274+ 95F4 EB               ex de,hl
 275+ 95F5
 276+ 95F5 73               ld (hl),e
 277+ 95F6 23               inc hl
 278+ 95F7 72               ld (hl),d
 279+ 95F8 23               inc hl
 280+ 95F9
 281+ 95F9 EB               ex de,hl
 282+ 95FA 10 F5            djnz 3B
 283+ 95FC
 284+ 95FC ED 53 2B 8C  6 ld (Scanlines_album_SP),de
 285+ 9600
 286+ 9600 08           5 ex af,af
 287+ 9601 F5               push af
 288+ 9602 E1               pop hl
 289+ 9603
 290+ 9603 71               ld (hl),c
 291+ 9604
 292+ 9604 C9               ret
 293+ 9605
# file closed: Genera_datos_de_impresion.asm
2054  9605              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9605              ; -----------------------------------------------------------------------------
   2+ 9605              ;
   3+ 9605              ;   11/03/24
   4+ 9605              ;
   5+ 9605
   6+ 9605              Pinta_Sprites
   7+ 9605
   8+ 9605              ;    ld hl,(Scanlines_album_SP)
   9+ 9605              ;    call Extrae_address
  10+ 9605
  11+ 9605              ;    inc h
  12+ 9605              ;    dec h
  13+ 9605              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9605
  15+ 9605 ED 73 09 8C      ld (Stack),sp
  16+ 9609
  17+ 9609 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 960A              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 960A 2C               inc l
  20+ 960B 2C               inc l
  21+ 960C
  22+ 960C 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 960D
  24+ 960D 2C               inc l
  25+ 960E F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 960F
  27+ 960F              ;   Seleccionamos rutina de impresión:
  28+ 960F
  29+ 960F 3E 10            ld a,16
  30+ 9611 B8               cp b
  31+ 9612 C2 0E 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9615
  33+ 9615              ;   Rutinas:
  34+ 9615
  35+ 9615              Pinta_rapido    ;   1520 t/states.
  36+ 9615
  37+ 9615 E1               pop hl
  38+ 9616
  39+ 9616 1A               ld a,(de)
  40+ 9617 AE               xor (hl)
  41+ 9618 77               ld (hl),a
  42+ 9619 2C               inc l
  43+ 961A 1C               inc e
  44+ 961B 1A               ld a,(de)
  45+ 961C AE               xor (hl)
  46+ 961D 77               ld (hl),a
  47+ 961E 2C               inc l
  48+ 961F 1C               inc e
  49+ 9620 1A               ld a,(de)
  50+ 9621 AE               xor (hl)
  51+ 9622 77               ld (hl),a
  52+ 9623 13               inc de
  53+ 9624
  54+ 9624 E1               pop hl
  55+ 9625
  56+ 9625 1A               ld a,(de)
  57+ 9626 AE               xor (hl)
  58+ 9627 77               ld (hl),a
  59+ 9628 2C               inc l
  60+ 9629 1C               inc e
  61+ 962A 1A               ld a,(de)
  62+ 962B AE               xor (hl)
  63+ 962C 77               ld (hl),a
  64+ 962D 2C               inc l
  65+ 962E 1C               inc e
  66+ 962F 1A               ld a,(de)
  67+ 9630 AE               xor (hl)
  68+ 9631 77               ld (hl),a
  69+ 9632 13               inc de
  70+ 9633
  71+ 9633 E1               pop hl
  72+ 9634
  73+ 9634 1A               ld a,(de)
  74+ 9635 AE               xor (hl)
  75+ 9636 77               ld (hl),a
  76+ 9637 2C               inc l
  77+ 9638 1C               inc e
  78+ 9639 1A               ld a,(de)
  79+ 963A AE               xor (hl)
  80+ 963B 77               ld (hl),a
  81+ 963C 2C               inc l
  82+ 963D 1C               inc e
  83+ 963E 1A               ld a,(de)
  84+ 963F AE               xor (hl)
  85+ 9640 77               ld (hl),a
  86+ 9641 13               inc de
  87+ 9642
  88+ 9642 E1               pop hl
  89+ 9643
  90+ 9643 1A               ld a,(de)
  91+ 9644 AE               xor (hl)
  92+ 9645 77               ld (hl),a
  93+ 9646 2C               inc l
  94+ 9647 1C               inc e
  95+ 9648 1A               ld a,(de)
  96+ 9649 AE               xor (hl)
  97+ 964A 77               ld (hl),a
  98+ 964B 2C               inc l
  99+ 964C 1C               inc e
 100+ 964D 1A               ld a,(de)
 101+ 964E AE               xor (hl)
 102+ 964F 77               ld (hl),a
 103+ 9650 13               inc de
 104+ 9651
 105+ 9651 E1               pop hl
 106+ 9652
 107+ 9652 1A               ld a,(de)
 108+ 9653 AE               xor (hl)
 109+ 9654 77               ld (hl),a
 110+ 9655 2C               inc l
 111+ 9656 1C               inc e
 112+ 9657 1A               ld a,(de)
 113+ 9658 AE               xor (hl)
 114+ 9659 77               ld (hl),a
 115+ 965A 2C               inc l
 116+ 965B 1C               inc e
 117+ 965C 1A               ld a,(de)
 118+ 965D AE               xor (hl)
 119+ 965E 77               ld (hl),a
 120+ 965F 13               inc de
 121+ 9660
 122+ 9660 E1               pop hl
 123+ 9661
 124+ 9661 1A               ld a,(de)
 125+ 9662 AE               xor (hl)
 126+ 9663 77               ld (hl),a
 127+ 9664 2C               inc l
 128+ 9665 1C               inc e
 129+ 9666 1A               ld a,(de)
 130+ 9667 AE               xor (hl)
 131+ 9668 77               ld (hl),a
 132+ 9669 2C               inc l
 133+ 966A 1C               inc e
 134+ 966B 1A               ld a,(de)
 135+ 966C AE               xor (hl)
 136+ 966D 77               ld (hl),a
 137+ 966E 13               inc de
 138+ 966F
 139+ 966F E1               pop hl
 140+ 9670
 141+ 9670 1A               ld a,(de)
 142+ 9671 AE               xor (hl)
 143+ 9672 77               ld (hl),a
 144+ 9673 2C               inc l
 145+ 9674 1C               inc e
 146+ 9675 1A               ld a,(de)
 147+ 9676 AE               xor (hl)
 148+ 9677 77               ld (hl),a
 149+ 9678 2C               inc l
 150+ 9679 1C               inc e
 151+ 967A 1A               ld a,(de)
 152+ 967B AE               xor (hl)
 153+ 967C 77               ld (hl),a
 154+ 967D 13               inc de
 155+ 967E
 156+ 967E E1               pop hl
 157+ 967F
 158+ 967F 1A               ld a,(de)
 159+ 9680 AE               xor (hl)
 160+ 9681 77               ld (hl),a
 161+ 9682 2C               inc l
 162+ 9683 1C               inc e
 163+ 9684 1A               ld a,(de)
 164+ 9685 AE               xor (hl)
 165+ 9686 77               ld (hl),a
 166+ 9687 2C               inc l
 167+ 9688 1C               inc e
 168+ 9689 1A               ld a,(de)
 169+ 968A AE               xor (hl)
 170+ 968B 77               ld (hl),a
 171+ 968C 13               inc de
 172+ 968D
 173+ 968D E1               pop hl
 174+ 968E
 175+ 968E 1A               ld a,(de)
 176+ 968F AE               xor (hl)
 177+ 9690 77               ld (hl),a
 178+ 9691 2C               inc l
 179+ 9692 1C               inc e
 180+ 9693 1A               ld a,(de)
 181+ 9694 AE               xor (hl)
 182+ 9695 77               ld (hl),a
 183+ 9696 2C               inc l
 184+ 9697 1C               inc e
 185+ 9698 1A               ld a,(de)
 186+ 9699 AE               xor (hl)
 187+ 969A 77               ld (hl),a
 188+ 969B 13               inc de
 189+ 969C
 190+ 969C E1               pop hl
 191+ 969D
 192+ 969D 1A               ld a,(de)
 193+ 969E AE               xor (hl)
 194+ 969F 77               ld (hl),a
 195+ 96A0 2C               inc l
 196+ 96A1 1C               inc e
 197+ 96A2 1A               ld a,(de)
 198+ 96A3 AE               xor (hl)
 199+ 96A4 77               ld (hl),a
 200+ 96A5 2C               inc l
 201+ 96A6 1C               inc e
 202+ 96A7 1A               ld a,(de)
 203+ 96A8 AE               xor (hl)
 204+ 96A9 77               ld (hl),a
 205+ 96AA 13               inc de
 206+ 96AB
 207+ 96AB E1               pop hl
 208+ 96AC
 209+ 96AC 1A               ld a,(de)
 210+ 96AD AE               xor (hl)
 211+ 96AE 77               ld (hl),a
 212+ 96AF 2C               inc l
 213+ 96B0 1C               inc e
 214+ 96B1 1A               ld a,(de)
 215+ 96B2 AE               xor (hl)
 216+ 96B3 77               ld (hl),a
 217+ 96B4 2C               inc l
 218+ 96B5 1C               inc e
 219+ 96B6 1A               ld a,(de)
 220+ 96B7 AE               xor (hl)
 221+ 96B8 77               ld (hl),a
 222+ 96B9 13               inc de
 223+ 96BA
 224+ 96BA E1               pop hl
 225+ 96BB
 226+ 96BB 1A               ld a,(de)
 227+ 96BC AE               xor (hl)
 228+ 96BD 77               ld (hl),a
 229+ 96BE 2C               inc l
 230+ 96BF 1C               inc e
 231+ 96C0 1A               ld a,(de)
 232+ 96C1 AE               xor (hl)
 233+ 96C2 77               ld (hl),a
 234+ 96C3 2C               inc l
 235+ 96C4 1C               inc e
 236+ 96C5 1A               ld a,(de)
 237+ 96C6 AE               xor (hl)
 238+ 96C7 77               ld (hl),a
 239+ 96C8 13               inc de
 240+ 96C9
 241+ 96C9 E1               pop hl
 242+ 96CA
 243+ 96CA 1A               ld a,(de)
 244+ 96CB AE               xor (hl)
 245+ 96CC 77               ld (hl),a
 246+ 96CD 2C               inc l
 247+ 96CE 1C               inc e
 248+ 96CF 1A               ld a,(de)
 249+ 96D0 AE               xor (hl)
 250+ 96D1 77               ld (hl),a
 251+ 96D2 2C               inc l
 252+ 96D3 1C               inc e
 253+ 96D4 1A               ld a,(de)
 254+ 96D5 AE               xor (hl)
 255+ 96D6 77               ld (hl),a
 256+ 96D7 13               inc de
 257+ 96D8
 258+ 96D8 E1               pop hl
 259+ 96D9
 260+ 96D9 1A               ld a,(de)
 261+ 96DA AE               xor (hl)
 262+ 96DB 77               ld (hl),a
 263+ 96DC 2C               inc l
 264+ 96DD 1C               inc e
 265+ 96DE 1A               ld a,(de)
 266+ 96DF AE               xor (hl)
 267+ 96E0 77               ld (hl),a
 268+ 96E1 2C               inc l
 269+ 96E2 1C               inc e
 270+ 96E3 1A               ld a,(de)
 271+ 96E4 AE               xor (hl)
 272+ 96E5 77               ld (hl),a
 273+ 96E6 13               inc de
 274+ 96E7
 275+ 96E7 E1               pop hl
 276+ 96E8
 277+ 96E8 1A               ld a,(de)
 278+ 96E9 AE               xor (hl)
 279+ 96EA 77               ld (hl),a
 280+ 96EB 2C               inc l
 281+ 96EC 1C               inc e
 282+ 96ED 1A               ld a,(de)
 283+ 96EE AE               xor (hl)
 284+ 96EF 77               ld (hl),a
 285+ 96F0 2C               inc l
 286+ 96F1 1C               inc e
 287+ 96F2 1A               ld a,(de)
 288+ 96F3 AE               xor (hl)
 289+ 96F4 77               ld (hl),a
 290+ 96F5 13               inc de
 291+ 96F6
 292+ 96F6 E1               pop hl
 293+ 96F7
 294+ 96F7 1A               ld a,(de)
 295+ 96F8 AE               xor (hl)
 296+ 96F9 77               ld (hl),a
 297+ 96FA 2C               inc l
 298+ 96FB 1C               inc e
 299+ 96FC 1A               ld a,(de)
 300+ 96FD AE               xor (hl)
 301+ 96FE 77               ld (hl),a
 302+ 96FF 2C               inc l
 303+ 9700 1C               inc e
 304+ 9701 1A               ld a,(de)
 305+ 9702 AE               xor (hl)
 306+ 9703 77               ld (hl),a
 307+ 9704 13               inc de
 308+ 9705
 309+ 9705 ED 73 2B 8C      ld (Scanlines_album_SP),sp
 310+ 9709 ED 7B 09 8C      ld sp,(Stack)
 311+ 970D C9               ret
 312+ 970E
 313+ 970E              Pinta_lento
 314+ 970E
 315+ 970E E1           1 pop hl
 316+ 970F
 317+ 970F 1A               ld a,(de)
 318+ 9710 AE               xor (hl)
 319+ 9711 77               ld (hl),a
 320+ 9712 2C               inc l
 321+ 9713 1C               inc e
 322+ 9714 1A               ld a,(de)
 323+ 9715 AE               xor (hl)
 324+ 9716 77               ld (hl),a
 325+ 9717 2C               inc l
 326+ 9718 1C               inc e
 327+ 9719 1A               ld a,(de)
 328+ 971A AE               xor (hl)
 329+ 971B 77               ld (hl),a
 330+ 971C 13               inc de
 331+ 971D
 332+ 971D 10 EF            djnz 1B
 333+ 971F
 334+ 971F ED 73 2B 8C      ld (Scanlines_album_SP),sp
 335+ 9723 ED 7B 09 8C      ld sp,(Stack)
 336+ 9727 C9               ret
# file closed: Pinta_Sprites.asm
2055  9728              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9728              ; ******************************************************************************************************************************************************************************************
   2+ 9728              ;
   3+ 9728              ; 26/06/23
   4+ 9728              ;
   5+ 9728              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9728
   7+ 9728              Draw
   8+ 9728
   9+ 9728 CD CE 99     	call Prepara_draw
  10+ 972B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 972C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 972D 28 05        	jr z,2F
  13+ 972F
  14+ 972F 3A DB 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9732 18 0C        	jr 1F
  16+ 9734
  17+ 9734 2A D9 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9737 22 CC 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 973A CD C6 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 973D              ;													; _la esquina superior izquierda de la pantalla.
  21+ 973D
  22+ 973D CD 6D 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9740
  24+ 9740 3A C9 8B     1 ld a,(Ctrl_0)
  25+ 9743 CB 6F        	bit 5,a
  26+ 9745 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9747
  28+ 9747 CD 5C 97     	call Comprueba_limite_horizontal
  29+ 974A CD EC 97     	call Comprueba_limite_vertical
  30+ 974D
  31+ 974D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 974D              ; -----------------------
  33+ 974D              ; -----------------------
  34+ 974D              ; -----------------------
  35+ 974D
  36+ 974D CD 42 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9750 CD 79 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9753
  39+ 9753 3A C9 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9756 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9758 32 C9 8B     	ld (Ctrl_0),a
  42+ 975B
  43+ 975B C9           	ret
  44+ 975C
  45+ 975C              ; *******************************************************************************************************************************************************************************************
  46+ 975C              ;	21/01/23
  47+ 975C              ;
  48+ 975C              ; 	Comprueba_limite_horizontal.
  49+ 975C              ;
  50+ 975C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 975C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 975C              ;
  53+ 975C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 975C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 975C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 975C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 975C
  58+ 975C
  59+ 975C
  60+ 975C 3A C9 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 975F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9761 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9763 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9765 32 C9 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9768 18 09            jr 6F
  66+ 976A CB 5F        1 bit 3,a
  67+ 976C 28 0A            jr z,2F
  68+ 976E E6 F7            and $f7
  69+ 9770 32 C9 8B         ld (Ctrl_0),a
  70+ 9773 CD C6 98     6 call Inicializacion
  71+ 9776 18 5B            jr 5F
  72+ 9778 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9779
  74+ 9779              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9779              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9779
  77+ 9779 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 977A 2A DD 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 977D CD C2 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9780 67           	ld h,a
  81+ 9781 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9782 CD C2 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9785 67           	ld h,a
  84+ 9786 A7           	and a
  85+ 9787 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9789 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 978A 3A DB 8B     	ld a,(Cuad_objeto)
  88+ 978D FE 02        	cp 2
  89+ 978F 38 1E        	jr c,3F
  90+ 9791 28 1C        	jr z,3F
  91+ 9793 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9794 28 23            jr z,7F
  93+ 9796 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9798 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 979A E1           	pop hl
  96+ 979B
  97+ 979B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 979B              ; _para indicar con E="2" en caso necesario.
  99+ 979B
 100+ 979B E5               push hl
 101+ 979C C5               push bc
 102+ 979D CD C2 94     	call calcula_tercio
 103+ 97A0 FE 01        	cp 1
 104+ 97A2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A4 CD D4 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A7 28 26            jr z,9F
 107+ 97A9 38 24            jr c,9F
 108+ 97AB 1E 00        11 ld e,0
 109+ 97AD 18 22            jr 8F
 110+ 97AF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97B0 28 07        	jr z, 7F
 112+ 97B2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B4 1E 00         	ld e,0
 114+ 97B6 E1           	pop hl
 115+ 97B7 18 04        	jr 4F
 116+ 97B9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97BB 18 15            jr 10F
 118+ 97BD
 119+ 97BD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97BD              ; _para indicar con E="2" en caso necesario.
 121+ 97BD
 122+ 97BD E5           4 push hl
 123+ 97BE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97BF CD C2 94     	call calcula_tercio
 125+ 97C2 FE 01        	cp 1
 126+ 97C4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C6 CD D4 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C9 28 04            jr z,9F
 129+ 97CB 30 02            jr nc,9F
 130+ 97CD 18 02        	jr 8F
 131+ 97CF 1E 02        9 ld e,2
 132+ 97D1 C1           8 pop bc
 133+ 97D2 E1           10 pop hl
 134+ 97D3 C9           5 ret
 135+ 97D4
 136+ 97D4              ; --------------------
 137+ 97D4              ;
 138+ 97D4              ; 25/08/22
 139+ 97D4
 140+ 97D4 CD C2 94     Comprueba_centro call calcula_tercio
 141+ 97D7 67               ld h,a
 142+ 97D8 08           	ex af,af
 143+ 97D9 FE 02        	cp 2
 144+ 97DB 38 07        	jr c,1F
 145+ 97DD 28 05        	jr z,1F
 146+ 97DF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97E2 18 03        	jr 2F
 148+ 97E4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E7 08           2 ex af,af
 150+ 97E8 A7               and a
 151+ 97E9 ED 42            sbc hl,bc
 152+ 97EB C9               ret
 153+ 97EC
 154+ 97EC              ; *********************************************************************************************************************************************************************************************
 155+ 97EC              ;
 156+ 97EC              ;   16/8/22
 157+ 97EC              ;
 158+ 97EC              ;	Comprueba_limite_vertical
 159+ 97EC              ;
 160+ 97EC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97EC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97EC              ;
 163+ 97EC
 164+ 97EC 2A CC 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97EF 7D           	ld a,l
 166+ 97F0 E6 1F        	and $1F
 167+ 97F2 57           	ld d,a
 168+ 97F3 3A DF 8B     	ld a,(Limite_vertical)
 169+ 97F6 BA           	cp d 											; Límite - Posición.
 170+ 97F7 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F8 3A DB 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97FB CB 47        	bit 0,a
 173+ 97FD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97FF
 175+ 97FF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97FF
 177+ 97FF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9800 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9802
 180+ 9802              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9802              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9802
 183+ 9802 3A BD 8B         ld a,(Coordenada_X)
 184+ 9805 16 0F            ld d,Centro_izquierda
 185+ 9807 A7               and a
 186+ 9808 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9809 28 1E            jr z,3F
 188+ 980B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 980D              ;                                                    ; _salimos sin modificar nada.
 190+ 980D 18 0E            jr 2F
 191+ 980F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9810 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9812
 194+ 9812              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9812              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9812
 197+ 9812 3A BD 8B         ld a,(Coordenada_X)
 198+ 9815 16 10            ld d,Centro_derecha
 199+ 9817 A7               and a
 200+ 9818 92               sub d
 201+ 9819 28 0E            jr z,3F
 202+ 981B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 981D              ;                                                    ; _salimos sin modificar nada.
 204+ 981D CB 43        2 bit 0,e
 205+ 981F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9821 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9822 CD B6 98         call Modificaccionne
 208+ 9825 C1           	pop bc
 209+ 9826 CD C6 98         call Inicializacion
 210+ 9829 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 982A
 212+ 982A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 982A
 214+ 982A C5           4 push bc
 215+ 982B 01 CB 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 982E 0A           	ld a,(bc)
 217+ 982F 3D           	dec a
 218+ 9830 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9831 7D           	ld a,l
 220+ 9832 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9833 CB 47        	bit 0,a
 222+ 9835 28 03        	jr z,5F
 223+ 9837 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9838 18 2E        	jr 7F
 225+ 983A
 226+ 983A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 983A
 228+ 983A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 983B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 983C 3A C9 8B     	ld a,(Ctrl_0)
 231+ 983F CB 4F        	bit 1,a
 232+ 9841 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9843 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9844
 235+ 9844              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9844
 237+ 9844 1C               inc e
 238+ 9845 1D               dec e
 239+ 9846 20 07            jr nz,12F
 240+ 9848 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9849 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 984A 22 CC 8B     	ld (Posicion_actual),hl
 243+ 984D 18 44        13 jr 9F
 244+ 984F CB 43        12 bit 0,e
 245+ 9851 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9853              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9853 C1           	pop bc
 248+ 9854 18 D3        	jr 3B
 249+ 9856 80           14 add b
 250+ 9857 6F               ld l,a
 251+ 9858 22 CC 8B     	ld (Posicion_actual),hl
 252+ 985B CD B6 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 985E 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9860 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9862 32 C9 8B         ld (Ctrl_0),a
 256+ 9865 F1           	pop af
 257+ 9866 18 2B        	jr 9F
 258+ 9868
 259+ 9868              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9868
 261+ 9868 F5           7 push af
 262+ 9869 3A C9 8B     	ld a,(Ctrl_0)
 263+ 986C CB 47        	bit 0,a
 264+ 986E 20 1D        	jr nz,8F
 265+ 9870 F1           	pop af
 266+ 9871
 267+ 9871              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9871
 269+ 9871 1C           	inc e
 270+ 9872 1D               dec e
 271+ 9873 20 07            jr nz,10F
 272+ 9875 90           	sub b
 273+ 9876 6F               ld l,a
 274+ 9877 22 CC 8B     	ld (Posicion_actual),hl
 275+ 987A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 987C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 987C CB 43        10 bit 0,e
 278+ 987E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9880              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9880 C1           	pop bc
 281+ 9881 18 A6        	jr 3B
 282+ 9883 90           16 sub b
 283+ 9884 6F               ld l,a
 284+ 9885 22 CC 8B     	ld (Posicion_actual),hl
 285+ 9888 CD B6 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 988B 18 06            jr 9F
 287+ 988D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 988F 32 C9 8B         ld (Ctrl_0),a
 289+ 9892 F1           	pop af
 290+ 9893 C1           9 pop bc
 291+ 9894 1E 00        	ld e,0
 292+ 9896 CD C6 98         call Inicializacion
 293+ 9899 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 989A 08           	ex af,af
 295+ 989B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 989C 18 8B            jr 3B
 297+ 989E
 298+ 989E              ; --------------------
 299+ 989E
 300+ 989E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98A0 CD E9 99     1 call PreviousScan
 302+ 98A3 10 FB            djnz 1B
 303+ 98A5 22 CC 8B     	ld (Posicion_actual),hl
 304+ 98A8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A9 C9           	ret
 306+ 98AA
 307+ 98AA              ; --------------------
 308+ 98AA
 309+ 98AA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98AC CD DA 99     1 call NextScan
 311+ 98AF 10 FB            djnz 1B
 312+ 98B1 22 CC 8B     	ld (Posicion_actual),hl
 313+ 98B4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B5 C9           	ret
 315+ 98B6
 316+ 98B6              ; --------------------
 317+ 98B6              ;
 318+ 98B6              ;	22/01/23
 319+ 98B6              ;
 320+ 98B6              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B6
 324+ 98B6
 325+ 98B6              Modificaccionne
 326+ 98B6
 327+ 98B6 3A DB 8B     	ld a,(Cuad_objeto)
 328+ 98B9 FE 02        	cp 2
 329+ 98BB CC 9E 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98BE DC 9E 98         call c,Modifica_Pos_actual
 331+ 98C1 C8           	ret z
 332+ 98C2 CD AA 98         call Modifica_Pos_actual2
 333+ 98C5 C9               ret
 334+ 98C6
 335+ 98C6              ; *************************************************************************************************************************************************************************************************
 336+ 98C6              ;
 337+ 98C6              ;	13/8/22
 338+ 98C6              ;
 339+ 98C6              ;	Inicializacion
 340+ 98C6              ;
 341+ 98C6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C6              ;
 345+ 98C6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C6              ;	_ desaparece/aparece.
 348+ 98C6
 349+ 98C6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C6              ;
 352+ 98C6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C6              ; 		   [E] ="0"
 355+ 98C6
 356+ 98C6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C6
 358+ 98C6 CD C2 94     Inicializacion call calcula_tercio
 359+ 98C9 28 36        	jr z,primit
 360+ 98CB E6 02        	and 2
 361+ 98CD 20 07        	jr nz,segmit
 362+ 98CF 7D           	ld a,l
 363+ 98D0 FE 7F        	cp $7f
 364+ 98D2 38 2D        	jr c,primit
 365+ 98D4 28 2B        	jr z,primit
 366+ 98D6 CD 3C 99     segmit call column
 367+ 98D9 38 13        	jr c,tercuad
 368+ 98DB 3E 04        cuarcuad ld a,4
 369+ 98DD 32 DB 8B     	ld (Cuad_objeto),a
 370+ 98E0 21 20 48     	ld hl,$4820
 371+ 98E3 22 DD 8B     	ld (Limite_horizontal),hl
 372+ 98E6 21 DF 8B     	ld hl,Limite_vertical
 373+ 98E9 36 0D        	ld (hl),$0d
 374+ 98EB 08           	ex af,af
 375+ 98EC 18 3C        	jr 1F
 376+ 98EE              tercuad
 377+ 98EE 3E 03        	ld a,3
 378+ 98F0 32 DB 8B     	ld (Cuad_objeto),a
 379+ 98F3 21 20 48     	ld hl,$4820
 380+ 98F6 22 DD 8B     	ld (Limite_horizontal),hl
 381+ 98F9 21 DF 8B     	ld hl,Limite_vertical
 382+ 98FC 36 12        	ld (hl),$12
 383+ 98FE 08           	ex af,af
 384+ 98FF 18 29        	jr 1F
 385+ 9901 CD 3C 99     primit call column
 386+ 9904 38 13        	jr c, primcuad
 387+ 9906              segcuad
 388+ 9906 3E 02        	ld a,2
 389+ 9908 32 DB 8B     	ld (Cuad_objeto),a
 390+ 990B 21 C0 4F     	ld hl,$4fc0
 391+ 990E 22 DD 8B     	ld (Limite_horizontal),hl
 392+ 9911 21 DF 8B     	ld hl,Limite_vertical
 393+ 9914 36 0D        	ld (hl),$0d
 394+ 9916 08           	ex af,af
 395+ 9917 18 11        	jr 1F
 396+ 9919              primcuad
 397+ 9919 3E 01        	ld a,1
 398+ 991B 32 DB 8B     	ld (Cuad_objeto),a
 399+ 991E 21 C0 4F     	ld hl,$4fc0
 400+ 9921 22 DD 8B     	ld (Limite_horizontal),hl
 401+ 9924 21 DF 8B     	ld hl,Limite_vertical
 402+ 9927 36 12        	ld (hl),$12
 403+ 9929 08           	ex af,af
 404+ 992A
 405+ 992A C5           1 push bc
 406+ 992B E5           	push hl
 407+ 992C D5           	push de
 408+ 992D
 409+ 992D 2A CC 8B     	ld hl,(Posicion_actual)
 410+ 9930 CD E0 94     	call Genera_coordenadas
 411+ 9933
 412+ 9933 D1           	pop de
 413+ 9934 E1           	pop hl
 414+ 9935 C1           	pop bc
 415+ 9936
 416+ 9936 21 C9 8B     	ld hl,Ctrl_0
 417+ 9939 CB EE        	set 5,(hl)
 418+ 993B C9           	ret
 419+ 993C
 420+ 993C              ; ------------------------------------------------------------------------------------------------------------------
 421+ 993C
 422+ 993C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 993C              ;
 424+ 993C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 993C
 426+ 993C 7D           column ld a,l
 427+ 993D E6 1F        	and $1f
 428+ 993F FE 10         	cp $10
 429+ 9941 C9            	ret
 430+ 9942
 431+ 9942              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9942              ;
 433+ 9942              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9942              ;
 435+ 9942              ; 14/12/22
 436+ 9942              ;
 437+ 9942              ;	Modifica: A y BC.
 438+ 9942
 439+ 9942 3A DB 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9945 E6 01        	and 1
 441+ 9947 28 17        	jr z,1F
 442+ 9949
 443+ 9949              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9949
 445+ 9949 3A BD 8B     	ld a,(Coordenada_X)
 446+ 994C 47           	ld b,a
 447+ 994D 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 994E 79           	ld a,c
 449+ 994F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9950 38 08        	jr c,2F
 451+ 9952 47           	ld b,a
 452+ 9953 79           	ld a,c
 453+ 9954 90           	sub b
 454+ 9955 32 DC 8B     	ld (Columnas),a
 455+ 9958 18 1B        	jr 4F
 456+ 995A 79           2 ld a,c
 457+ 995B 32 DC 8B     	ld (Columnas),a
 458+ 995E 18 15        	jr 4F
 459+ 9960
 460+ 9960              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9960
 462+ 9960 3A BD 8B     1 ld a,(Coordenada_X)
 463+ 9963 81           	add c
 464+ 9964 3D           	dec a
 465+ 9965 D6 1F        	sub $1f
 466+ 9967 38 08        	jr c,3F
 467+ 9969 47           	ld b,a
 468+ 996A 79           	ld a,c
 469+ 996B 90           	sub b
 470+ 996C 32 DC 8B     	ld (Columnas),a
 471+ 996F 18 04        	jr 4F
 472+ 9971 79           3 ld a,c
 473+ 9972 32 DC 8B     	ld (Columnas),a
 474+ 9975 D9           4 exx
 475+ 9976 4F           	ld c,a
 476+ 9977 D9           	exx
 477+ 9978 C9            ret
 478+ 9979
 479+ 9979              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9979              ;
 481+ 9979              ;   19/7/23
 482+ 9979              ;
 483+ 9979              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9979              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9979              ;
 486+ 9979              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9979              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9979              ;
 489+ 9979              ;	DESTRUYE: HL,B Y A.
 490+ 9979
 491+ 9979 3A DB 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 997C FE 02        	cp 2
 493+ 997E 38 18        	jr c,1F
 494+ 9980 28 16        	jr z,1F
 495+ 9982 E6 01        	and 1
 496+ 9984 28 0D        	jr z,3F
 497+ 9986
 498+ 9986              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9986
 500+ 9986 CD C2 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9989
 502+ 9989 7D           9 ld a,l
 503+ 998A E6 1F        	and $1f
 504+ 998C 28 2A        	jr z,7F
 505+ 998E 2B           	dec hl
 506+ 998F 10 F8        	djnz 9B
 507+ 9991 18 25        	jr 7F
 508+ 9993
 509+ 9993              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9993
 511+ 9993 2A CC 8B     3 ld hl,(Posicion_actual)
 512+ 9996 18 20        	jr 7F
 513+ 9998
 514+ 9998 28 14        1 jr z,2F
 515+ 999A
 516+ 999A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 999A
 518+ 999A CD C2 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 999D
 520+ 999D 7D           4 ld a,l
 521+ 999E E6 1F        	and $1f
 522+ 99A0 28 03        	jr z,6F
 523+ 99A2 2B           	dec hl
 524+ 99A3 10 F8        	djnz 4B
 525+ 99A5 06 0F        6 ld b,15
 526+ 99A7 CD E9 99     5 call PreviousScan
 527+ 99AA 10 FB        	djnz 5B
 528+ 99AC 18 0A        	jr 7F
 529+ 99AE
 530+ 99AE              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99AE
 532+ 99AE CD C2 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99B1 06 0F        	ld b,15
 534+ 99B3 CD E9 99     8 call PreviousScan
 535+ 99B6 10 FB        	djnz 8B
 536+ 99B8
 537+ 99B8 E5           7 push hl
 538+ 99B9 DD E1        	pop ix
 539+ 99BB
 540+ 99BB 2A CE 8B     	ld hl,(Puntero_objeto)
 541+ 99BE E5           	push hl
 542+ 99BF FD E1        	pop iy
 543+ 99C1
 544+ 99C1 C9           	ret
 545+ 99C2
 546+ 99C2              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99C2              ;
 548+ 99C2              ;	2/1/23
 549+ 99C2              ;
 550+ 99C2              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99C2              ;
 552+ 99C2              ;	Tras esta rutina tenemos:
 553+ 99C2              ;
 554+ 99C2              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99C2              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99C2              ;
 557+ 99C2              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99C2
 559+ 99C2 2A CC 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C5 3A DC 8B     	ld a,(Columnas)
 561+ 99C8 3D           	dec a
 562+ 99C9 20 01        	jr nz,1F
 563+ 99CB 3C           	inc a
 564+ 99CC 47           1 ld b,a
 565+ 99CD C9           	ret
 566+ 99CE
 567+ 99CE              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99CE              ;
 569+ 99CE              ;	Prepara_draw
 570+ 99CE              ;
 571+ 99CE              ;	Es una rutina de carga.
 572+ 99CE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99CE              ;
 574+ 99CE              ;	FUNCIONAMIENTO:
 575+ 99CE              ;
 576+ 99CE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99CE              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99CE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99CE              ;
 580+ 99CE              ;	DESTRUYE:
 581+ 99CE              ;
 582+ 99CE              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99CE
 584+ 99CE 21 CA 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99D1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99D2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D3 4E           	ld c,(hl)
 588+ 99D4 2A CC 8B     	ld hl,(Posicion_actual)
 589+ 99D7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D9 C9           	ret
 591+ 99DA
 592+ 99DA              ;----------------------------------------------------------------------------------------------------------------
 593+ 99DA              ;
 594+ 99DA              ;	5/08/22
 595+ 99DA              ;
 596+ 99DA              ;   NextScan.
 597+ 99DA              ;
 598+ 99DA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99DA              ;
 600+ 99DA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99DA              ;
 602+ 99DA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99DA              ;
 604+ 99DA              ;       DESTRUIDOS: AF y HL !!!
 605+ 99DA              ;
 606+ 99DA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99DA              ;
 608+ 99DA
 609+ 99DA 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99DB 7C               ld a,h
 611+ 99DC E6 07            and 7
 612+ 99DE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99DF
 614+ 99DF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99E0 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99E2 6F               ld l,a
 617+ 99E3 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E4
 619+ 99E4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E7 67               ld h,a
 622+ 99E8 C9               ret
 623+ 99E9
 624+ 99E9              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E9              ;
 626+ 99E9              ;	5/08/22
 627+ 99E9              ;
 628+ 99E9              ;   PreviousScan.
 629+ 99E9              ;
 630+ 99E9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E9              ;
 632+ 99E9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E9              ;
 634+ 99E9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E9              ;
 636+ 99E9              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E9              ;
 638+ 99E9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E9              ;
 640+ 99E9
 641+ 99E9 7C           PreviousScan ld a,h
 642+ 99EA 25               dec h               ; Dec H.
 643+ 99EB E6 07            and 7
 644+ 99ED C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99EE
 646+ 99EE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99EF D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99F1 6F               ld l,a
 649+ 99F2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F3
 651+ 99F3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F6 67               ld h,a
 654+ 99F7 C9               ret
 655+ 99F8
 656+ 99F8
 657+ 99F8
 658+ 99F8
 659+ 99F8
 660+ 99F8
 661+ 99F8
 662+ 99F8
 663+ 99F8
 664+ 99F8
 665+ 99F8
 666+ 99F8
# file closed: Draw_XOR.asm
2056  99F8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F8
   2+ 99F8              ; ******************************************************************************************************************************************************************************************
   3+ 99F8              ;
   4+ 99F8              ;   20/05/23
   5+ 99F8              ;
   6+ 99F8              ;	Recompone_posicion_inicio
   7+ 99F8              ;
   8+ 99F8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F8              ;	_ a una u otra rutina.
  12+ 99F8
  13+ 99F8              Recompone_posicion_inicio
  14+ 99F8
  15+ 99F8 2A D9 8B     	ld hl,(Posicion_inicio)
  16+ 99FB 7D           	ld a,l
  17+ 99FC E6 1F        	and $1f
  18+ 99FE 28 16        	jr z,1F
  19+ 9A00
  20+ 9A00 FE 1F        	cp $1f
  21+ 9A02 28 0D        	jr z,3F
  22+ 9A04
  23+ 9A04 21 C8 8B     	ld hl,Ctrl_2
  24+ 9A07 CB C6        	set 0,(hl)
  25+ 9A09 2A CE 8B     	ld hl,(Puntero_objeto)
  26+ 9A0C 22 FA 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A0F 18 08        	jr 2F
  28+ 9A11
  29+ 9A11 CD BF 9B     3 call Mov_left
  30+ 9A14 18 03        	jr 2F
  31+ 9A16
  32+ 9A16 CD 9C 9A     1 call Mov_right
  33+ 9A19 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A1C 22 CE 8B     	ld (Puntero_objeto),hl
  35+ 9A1F C9           	ret
  36+ 9A20
  37+ 9A20              ; ******************************************************************************************************************************************************************************************
  38+ 9A20              ;
  39+ 9A20              ;   27/05/23
  40+ 9A20              ;
  41+ 9A20              ;	Mov_down
  42+ 9A20              ;
  43+ 9A20              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A20              ;
  45+ 9A20              ;
  46+ 9A20              Mov_down
  47+ 9A20
  48+ 9A20 CD 8A 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A23              ;																	; _ repone (Puntero_objeto).
  50+ 9A23 21 C9 8B     	ld hl,Ctrl_0
  51+ 9A26 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A28              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A28              ; 																	; _ en el caso de que no lo haya.
  54+ 9A28 3A E4 8B     	ld a,(Vel_down)
  55+ 9A2B 47           	ld b,a
  56+ 9A2C 2A CC 8B         ld hl,(Posicion_actual)
  57+ 9A2F CD C2 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A32 E6 02        	and 2
  59+ 9A34 28 17        	jr z,1F
  60+ 9A36
  61+ 9A36              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A36              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A36
  64+ 9A36 7C           	ld a,h
  65+ 9A37 FE 57        	cp $57
  66+ 9A39 20 12        	jr nz,1F
  67+ 9A3B
  68+ 9A3B 7D           	ld a,l
  69+ 9A3C C6 20        	add $20
  70+ 9A3E 30 0D        	jr nc,1F
  71+ 9A40
  72+ 9A40              ; ------------------------------
  73+ 9A40              ;
  74+ 9A40              ;	12/01/24
  75+ 9A40
  76+ 9A40              ;	call Reaparece_arriba
  77+ 9A40 CD 4C 9D     	call Reinicio
  78+ 9A43
  79+ 9A43              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A43
  81+ 9A43 3A 31 8C     	ld a,(Ctrl_3)
  82+ 9A46 CB CF        	set 1,a
  83+ 9A48 32 31 8C     	ld (Ctrl_3),a
  84+ 9A4B
  85+ 9A4B 18 08        	jr 3F
  86+ 9A4D              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A4D              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A4D              ; ------------------------------
  89+ 9A4D
  90+ 9A4D CD DA 99     1 call NextScan
  91+ 9A50 22 CC 8B     	ld (Posicion_actual),hl
  92+ 9A53 10 DA            djnz 2B
  93+ 9A55 CD E0 94     3 call Genera_coordenadas
  94+ 9A58 C9           	ret
  95+ 9A59
  96+ 9A59              ; ******************************************************************************************************************************************************************************************
  97+ 9A59              ;
  98+ 9A59              ;   27/05/23
  99+ 9A59              ;
 100+ 9A59              ;	Mov_up
 101+ 9A59              ;
 102+ 9A59              ; 	Mueve el Sprite hacia arriba.
 103+ 9A59              ;
 104+ 9A59              ;
 105+ 9A59              Mov_up
 106+ 9A59
 107+ 9A59 CD 8A 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A5C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A5C 21 C9 8B     	ld hl,Ctrl_0
 110+ 9A5F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A61              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A61              ; 																		; _ en el caso de que no lo haya.
 113+ 9A61 3A E3 8B     	ld a,(Vel_up)
 114+ 9A64 47           	ld b,a
 115+ 9A65 2A CC 8B     	ld hl,(Posicion_actual)
 116+ 9A68 CD C2 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A6B A7           	and a
 118+ 9A6C 20 10        	jr nz,1F
 119+ 9A6E
 120+ 9A6E              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A6E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A6E
 123+ 9A6E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A6F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A71 20 0B            jr nz,1F
 126+ 9A73 7D               ld a,l
 127+ 9A74 D6 20            sub $20
 128+ 9A76 30 06            jr nc,1F
 129+ 9A78 25               dec h
 130+ 9A79
 131+ 9A79              ; -----------------------------
 132+ 9A79 CD 2D 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A7C              ;	call Reinicio
 134+ 9A7C              ; -----------------------------
 135+ 9A7C
 136+ 9A7C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A7E CD E9 99     1 call PreviousScan
 138+ 9A81 22 CC 8B     	ld (Posicion_actual),hl
 139+ 9A84 10 E2            djnz 3B
 140+ 9A86 CD E0 94     2 call Genera_coordenadas
 141+ 9A89 C9           	ret
 142+ 9A8A
 143+ 9A8A              ; -----------------------------
 144+ 9A8A              ;
 145+ 9A8A              ;	27/5/23
 146+ 9A8A              ;
 147+ 9A8A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A8A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A8A              ;
 150+ 9A8A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A8A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A8A              ;
 153+ 9A8A              ;	Modifica: A y (Puntero_objeto).
 154+ 9A8A
 155+ 9A8A 3A C8 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A8D CB 47        	bit 0,a
 157+ 9A8F C8           	ret z
 158+ 9A90 CB 87        	res 0,a
 159+ 9A92 32 C8 8B     	ld (Ctrl_2),a
 160+ 9A95 2A FA 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A98 22 CE 8B     	ld (Puntero_objeto),hl
 162+ 9A9B C9           	ret
 163+ 9A9C
 164+ 9A9C              ; ******************************************************************************************************************************************************************************************
 165+ 9A9C              ;
 166+ 9A9C              ;	19/10/22
 167+ 9A9C              ;
 168+ 9A9C              ;	Mov_right.
 169+ 9A9C              ;
 170+ 9A9C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A9C              ;
 172+ 9A9C
 173+ 9A9C 3A C9 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A9F CB 77        	bit 6,a
 175+ 9AA1 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA3
 177+ 9AA3 CD DB 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA6 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA7
 180+ 9AA7 21 C9 8B     	ld hl,Ctrl_0
 181+ 9AAA CB E6        	set 4,(hl)
 182+ 9AAC 18 52        	jr 8F
 183+ 9AAE
 184+ 9AAE 21 C9 8B     10 ld hl,Ctrl_0
 185+ 9AB1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB3              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB3 3A BD 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB6 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB8 20 46        	jr nz,8F
 191+ 9ABA
 192+ 9ABA 3A D0 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9ABD A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ABE 28 40        	jr z,8F
 195+ 9AC0
 196+ 9AC0              ; ---------- ---------- ----------
 197+ 9AC0              ;
 198+ 9AC0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AC0
 200+ 9AC0 3A E2 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC5 28 11        	jr z,1F
 203+ 9AC7 38 06        	jr c,6F
 204+ 9AC9 FE 04        	cp 4
 205+ 9ACB 28 14        	jr z,7F
 206+ 9ACD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ACF
 208+ 9ACF              ; ---------- ---------- ----------
 209+ 9ACF              ;
 210+ 9ACF              ; Perfiles de velocidad
 211+ 9ACF              ;
 212+ 9ACF
 213+ 9ACF 3A D0 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AD2 FE FE        	cp $fe
 215+ 9AD4 20 2A        	jr nz,8F
 216+ 9AD6 18 10        	jr 3F
 217+ 9AD8 3A D0 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ADB FE FD        	cp $fd
 219+ 9ADD 20 21        	jr nz,8F
 220+ 9ADF 18 07        	jr 3F
 221+ 9AE1 3A D0 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE4 FE FB        	cp $fb
 223+ 9AE6 20 18        	jr nz,8F
 224+ 9AE8
 225+ 9AE8              ; ---------- ---------- ----------
 226+ 9AE8
 227+ 9AE8              3
 228+ 9AE8 CD 1B 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AEB              ;	call Reinicio
 230+ 9AEB
 231+ 9AEB              ; ---------- ---------- ----------
 232+ 9AEB              ;
 233+ 9AEB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AEB
 235+ 9AEB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AED C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AEE CD 07 9B     	call DESPLZ_DER
 238+ 9AF1 C1           	pop bc
 239+ 9AF2 10 F9        	djnz 5B
 240+ 9AF4 2A CC 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF8 22 CC 8B     	ld (Posicion_actual),hl
 243+ 9AFB CD E0 94     	call Genera_coordenadas
 244+ 9AFE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B00
 246+ 9B00              ; ---------- ---------- ----------
 247+ 9B00
 248+ 9B00 2A CC 8B     8 ld hl,(Posicion_actual)
 249+ 9B03 CD 07 9B     	call DESPLZ_DER
 250+ 9B06 C9           2 ret
 251+ 9B07
 252+ 9B07              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B07              ;
 254+ 9B07              ;	22/9/22
 255+ 9B07              ;
 256+ 9B07
 257+ 9B07 CD 16 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B0A CD 62 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B0D CD 8B 9B         call Ciclo_completo
 260+ 9B10 21 C9 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B13 CB FE        	set 7,(hl)
 262+ 9B15 C9           	ret
 263+ 9B16
 264+ 9B16              ; ******************************************************************************************************************************************************************************************
 265+ 9B16              ;	15/02/23
 266+ 9B16              ;
 267+ 9B16
 268+ 9B16 3A E2 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B19 47           	ld b,a
 270+ 9B1A 2A D5 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B1D 23           1 inc hl
 272+ 9B1E 23           	inc hl
 273+ 9B1F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B21 22 D5 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B24 CD C1 90     	call Extrae_address
 276+ 9B27 22 CE 8B     	ld (Puntero_objeto),hl
 277+ 9B2A
 278+ 9B2A              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B2A
 280+ 9B2A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B2A              ; Cuántos movimientos hemos hecho ??
 282+ 9B2A              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B2A
 284+ 9B2A 2A D1 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B2D EB           	ex de,hl
 286+ 9B2E A7           	and a
 287+ 9B2F ED 52        	sbc hl,de
 288+ 9B31 CB 3D        	srl l
 289+ 9B33 3E 08        6 ld a,8
 290+ 9B35 95           	sub l
 291+ 9B36 30 1E        	jr nc,3F
 292+ 9B38
 293+ 9B38              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B38              ; B="0".
 295+ 9B38
 296+ 9B38 04           4 inc b
 297+ 9B39 3C           	inc a
 298+ 9B3A 20 FC        	jr nz,4B
 299+ 9B3C 78           	ld a,b
 300+ 9B3D 08           	ex af,af
 301+ 9B3E 2A D1 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B41 23           5 inc hl
 303+ 9B42 23           	inc hl
 304+ 9B43 10 FC        	djnz 5B
 305+ 9B45 22 D5 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B48 CD C1 90     	call Extrae_address
 307+ 9B4B 22 CE 8B     	ld (Puntero_objeto),hl
 308+ 9B4E
 309+ 9B4E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B4E              ; _(Posicion_actual).
 311+ 9B4E
 312+ 9B4E 21 CC 8B     	ld hl,Posicion_actual
 313+ 9B51 34           	inc (hl)
 314+ 9B52 08               ex af,af
 315+ 9B53 6F           	ld l,a
 316+ 9B54 18 DD        	jr 6B
 317+ 9B56
 318+ 9B56              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B56
 320+ 9B56 47           3 ld b,a
 321+ 9B57 2A D3 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B5A 23           2 inc hl
 323+ 9B5B 23           	inc hl
 324+ 9B5C 10 FC        	djnz 2B
 325+ 9B5E 22 D7 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B61 C9           8 ret
 327+ 9B62
 328+ 9B62              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B62              ;
 330+ 9B62              ;	24/7/22
 331+ 9B62              ;
 332+ 9B62              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B62              ;
 334+ 9B62              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B62              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B62              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B62
 338+ 9B62 3A D0 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B65 A7           	and a
 340+ 9B66 20 1F        	jr nz,1F
 341+ 9B68 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B6A 32 D0 8B         ld (CTRL_DESPLZ),a
 343+ 9B6D
 344+ 9B6D 21 CB 8B     	ld hl,Columns
 345+ 9B70 34           	inc (hl)
 346+ 9B71 3A DB 8B     	ld a,(Cuad_objeto)
 347+ 9B74 E6 01        	and 1
 348+ 9B76 28 0F        	jr z,1F
 349+ 9B78 2A CC 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B7B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B7C 22 CC 8B     	ld (Posicion_actual),hl
 352+ 9B7F CD E0 94     	call Genera_coordenadas
 353+ 9B82 CD E7 9C     	call Inc_CTRL_DESPLZ
 354+ 9B85 18 03        	jr 2F
 355+ 9B87 CD E7 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B8A C9           2 ret
 357+ 9B8B
 358+ 9B8B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B8B              ;
 360+ 9B8B              ;	24/7/22
 361+ 9B8B              ;
 362+ 9B8B              ;	Ciclo_completo.
 363+ 9B8B              ;
 364+ 9B8B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B8B              ;
 366+ 9B8B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B8B              ; 	Decrementamos (Columns).
 368+ 9B8B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B8B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B8B
 371+ 9B8B
 372+ 9B8B 3A D0 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B8E FE FF        	cp $ff
 374+ 9B90 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B92 E6 F0        	and $f0
 376+ 9B94 20 28        	jr nz,3F
 377+ 9B96
 378+ 9B96              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B96
 380+ 9B96 3A D0 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B99 47           	ld b,a
 382+ 9B9A 3E F8        	ld a,$f8
 383+ 9B9C 80           	add b
 384+ 9B9D 32 D0 8B     	ld (CTRL_DESPLZ),a
 385+ 9BA0 18 1C        	jr 3F
 386+ 9BA2 21 CB 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA5 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA6 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA7 32 D0 8B     	ld (CTRL_DESPLZ),a
 390+ 9BAA 3A DB 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BAD E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BAF 20 0A        	jr nz,2F
 393+ 9BB1 2A CC 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB4 23           	inc hl
 395+ 9BB5 22 CC 8B     	ld (Posicion_actual),hl
 396+ 9BB8 CD E0 94     	call Genera_coordenadas
 397+ 9BBB
 398+ 9BBB              ; Inicia el puntero de Sprite.
 399+ 9BBB
 400+ 9BBB CD D6 90     2 call Inicia_puntero_objeto_der
 401+ 9BBE C9           3 ret
 402+ 9BBF
 403+ 9BBF              ; ******************************************************************************************************************************************************************************************
 404+ 9BBF              ;
 405+ 9BBF              ;	15/02/23
 406+ 9BBF              ;
 407+ 9BBF              ;	Mov_left.
 408+ 9BBF              ;
 409+ 9BBF              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BBF              ;
 411+ 9BBF              Mov_left
 412+ 9BBF
 413+ 9BBF 21 C9 8B     	ld hl,Ctrl_0
 414+ 9BC2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC4              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC4 3A C9 8B     	ld a,(Ctrl_0)
 418+ 9BC7 CB 77        	bit 6,a
 419+ 9BC9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BCB
 421+ 9BCB CD E1 9C     	call Stop_Amadeus_left
 422+ 9BCE C8           	ret z
 423+ 9BCF 20 4A        	jr nz,8F
 424+ 9BD1
 425+ 9BD1 3A BD 8B     11 ld a,(Coordenada_X)
 426+ 9BD4 A7           	and a
 427+ 9BD5 20 44        	jr nz,8F
 428+ 9BD7
 429+ 9BD7 3A D0 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BDA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BDB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BDD
 433+ 9BDD              ; ---------- ---------- ----------
 434+ 9BDD
 435+ 9BDD 3A E1 8B     	ld a,(Vel_left)
 436+ 9BE0 FE 02        	cp 2
 437+ 9BE2 28 0F        	jr z,1F
 438+ 9BE4 38 04        	jr c,6F
 439+ 9BE6 FE 04        	cp 4
 440+ 9BE8 28 12        	jr z,7F
 441+ 9BEA
 442+ 9BEA              ; ---------- ---------- ----------
 443+ 9BEA
 444+ 9BEA 3A D0 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BED FE F8        	cp $f8
 446+ 9BEF 20 2A        	jr nz,8F
 447+ 9BF1 18 10        	jr 4F
 448+ 9BF3 3A D0 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF6 FE F9        	cp $f9
 450+ 9BF8 20 21        	jr nz,8F
 451+ 9BFA 18 07        	jr 4F
 452+ 9BFC 3A D0 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BFF FE FB        	cp $fb
 454+ 9C01 20 18        	jr nz,8F
 455+ 9C03
 456+ 9C03              ; ---------- ---------- ----------
 457+ 9C03
 458+ 9C03              4
 459+ 9C03 CD 09 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C06              ;	call Reinicio
 461+ 9C06
 462+ 9C06              ; ---------- ---------- ----------
 463+ 9C06
 464+ 9C06 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C08 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C09
 467+ 9C09              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C09              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C09
 470+ 9C09 CD 22 9C     	call DESPLZ_IZQ
 471+ 9C0C C1           	pop bc
 472+ 9C0D 10 F9        	djnz 5B
 473+ 9C0F 2A CC 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C12 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C13 22 CC 8B     	ld (Posicion_actual),hl
 476+ 9C16 CD E0 94     	call Genera_coordenadas
 477+ 9C19 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C1B
 479+ 9C1B              ; ---------- ---------- ----------
 480+ 9C1B
 481+ 9C1B              ; Movemos, no hay recolocación.
 482+ 9C1B
 483+ 9C1B 2A CC 8B     8 ld hl,(Posicion_actual)
 484+ 9C1E CD 22 9C     	call DESPLZ_IZQ
 485+ 9C21 C9           2 ret
 486+ 9C22
 487+ 9C22              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C22              ;
 489+ 9C22              ;	22/9/22
 490+ 9C22
 491+ 9C22              DESPLZ_IZQ
 492+ 9C22
 493+ 9C22 CD 31 9C     	call Desplaza_izquierda
 494+ 9C25 CD 7D 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C28 CD A5 9C     	call Ciclo_completo_2
 496+ 9C2B 21 C9 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C2E CB BE        	res 7,(hl)
 498+ 9C30 C9           	ret
 499+ 9C31
 500+ 9C31              Desplaza_izquierda
 501+ 9C31
 502+ 9C31 3A E1 8B     	ld a,(Vel_left)
 503+ 9C34 47           	ld b,a
 504+ 9C35 2A D7 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C38 23           1 inc hl
 506+ 9C39 23           	inc hl
 507+ 9C3A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C3C 22 D7 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C3F CD C1 90     	call Extrae_address
 510+ 9C42 22 CE 8B     	ld (Puntero_objeto),hl
 511+ 9C45
 512+ 9C45              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C45
 514+ 9C45              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C45              ; Cuántos movimientos hemos hecho ??
 516+ 9C45              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C45
 518+ 9C45 2A D3 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C48 EB           	ex de,hl
 520+ 9C49 A7           	and a
 521+ 9C4A ED 52        	sbc hl,de
 522+ 9C4C CB 3D        	srl l
 523+ 9C4E 3E 08        6 ld a,8
 524+ 9C50 95           	sub l
 525+ 9C51 30 1E        	jr nc,3F
 526+ 9C53
 527+ 9C53              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C53              ; B="0".
 529+ 9C53
 530+ 9C53 04           4 inc b
 531+ 9C54 3C           	inc a
 532+ 9C55 20 FC        	jr nz,4B
 533+ 9C57 78           	ld a,b
 534+ 9C58 08           	ex af,af
 535+ 9C59 2A D3 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C5C 23           5 inc hl
 537+ 9C5D 23           	inc hl
 538+ 9C5E 10 FC        	djnz 5B
 539+ 9C60 22 D7 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C63 CD C1 90     	call Extrae_address
 541+ 9C66 22 CE 8B     	ld (Puntero_objeto),hl
 542+ 9C69
 543+ 9C69              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C69              ; _(Posicion_actual).
 545+ 9C69
 546+ 9C69 21 CC 8B     	ld hl,Posicion_actual
 547+ 9C6C 35           	dec (hl)
 548+ 9C6D 08           	ex af,af
 549+ 9C6E 6F           	ld l,a
 550+ 9C6F 18 DD        	jr 6B
 551+ 9C71
 552+ 9C71              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C71
 554+ 9C71 47           3 ld b,a
 555+ 9C72 2A D1 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C75 23           2 inc hl
 557+ 9C76 23           	inc hl
 558+ 9C77 10 FC        	djnz 2B
 559+ 9C79 22 D5 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C7C C9           8 ret
 561+ 9C7D
 562+ 9C7D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C7D              ;
 564+ 9C7D              ;	modifica_parametros_1er_DESPLZ
 565+ 9C7D              ;
 566+ 9C7D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C7D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C7D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C7D
 570+ 9C7D 3A D0 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C80 A7           	and a
 572+ 9C81 20 1E        	jr nz,1F
 573+ 9C83 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C84 32 D0 8B         ld (CTRL_DESPLZ),a
 575+ 9C87 21 CB 8B     	ld hl,Columns
 576+ 9C8A 34           	inc (hl)
 577+ 9C8B 3A DB 8B     	ld a,(Cuad_objeto)
 578+ 9C8E E6 01        	and 1
 579+ 9C90 20 0F        	jr nz,1F
 580+ 9C92 2A CC 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C95 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C96 22 CC 8B     	ld (Posicion_actual),hl
 583+ 9C99 CD E0 94     	call Genera_coordenadas
 584+ 9C9C CD F8 9C     	call Dec_CTRL_DESPLZ
 585+ 9C9F 18 03        	jr 2F
 586+ 9CA1 CD F8 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA4 C9           2 ret
 588+ 9CA5
 589+ 9CA5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA5
 591+ 9CA5 3A D0 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA8 FE F7        	cp $f7
 593+ 9CAA 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CAC 30 2C        	jr nc,3F
 595+ 9CAE
 596+ 9CAE              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CAE
 598+ 9CAE 06 00        	ld b,0
 599+ 9CB0 04           4 inc b
 600+ 9CB1 3C           	inc a
 601+ 9CB2 FE F7        	cp $f7
 602+ 9CB4 20 FA        	jr nz,4B
 603+ 9CB6 3E FF        	ld a,$ff
 604+ 9CB8 90           	sub b
 605+ 9CB9 32 D0 8B     	ld (CTRL_DESPLZ),a
 606+ 9CBC 18 1C        	jr 3F
 607+ 9CBE
 608+ 9CBE              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CBE
 610+ 9CBE 21 CB 8B     1 ld hl,Columns
 611+ 9CC1 35           	dec (hl)
 612+ 9CC2 AF           	xor a
 613+ 9CC3 32 D0 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC6 3A DB 8B     	ld a,(Cuad_objeto)
 615+ 9CC9 E6 01        	and 1
 616+ 9CCB 28 0A        	jr z,2F
 617+ 9CCD 2A CC 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CD0 2B           	dec hl
 619+ 9CD1 22 CC 8B     	ld (Posicion_actual),hl
 620+ 9CD4 CD E0 94     	call Genera_coordenadas
 621+ 9CD7
 622+ 9CD7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD7
 624+ 9CD7 CD E9 90     2 call Inicia_puntero_objeto_izq
 625+ 9CDA C9           3 ret
 626+ 9CDB
 627+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CDB              ;
 629+ 9CDB              ;	19/10/22
 630+ 9CDB              ;
 631+ 9CDB              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CDB              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CDB
 634+ 9CDB 3A BD 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CDE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CE0 C9           	ret
 637+ 9CE1
 638+ 9CE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CE1              ;
 640+ 9CE1              ;	19/10/22
 641+ 9CE1              ;
 642+ 9CE1              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CE1              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CE1
 645+ 9CE1 3A BD 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE6 C9           	ret
 648+ 9CE7
 649+ 9CE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE7              ;
 651+ 9CE7              ;	24/7/22
 652+ 9CE7              ;
 653+ 9CE7              ;	Inc_CTRL_DESPLZ
 654+ 9CE7              ;
 655+ 9CE7              ;
 656+ 9CE7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE7
 658+ 9CE7 21 D0 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CEA 3A E2 8B     	ld a,(Vel_right)
 660+ 9CED A7           	and a
 661+ 9CEE 28 06        	jr z,1F
 662+ 9CF0 47           	ld b,a
 663+ 9CF1 34           3 inc (hl)
 664+ 9CF2 10 FD        	djnz 3B
 665+ 9CF4 18 01        	jr 2F
 666+ 9CF6 34           1 inc (hl)
 667+ 9CF7 C9           2 ret
 668+ 9CF8
 669+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF8              ;
 671+ 9CF8              ;	5/2/23
 672+ 9CF8              ;
 673+ 9CF8              ;	Dec_CTRL_DESPLZ
 674+ 9CF8              ;
 675+ 9CF8              ;
 676+ 9CF8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF8
 678+ 9CF8 21 D0 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CFB 3A E1 8B     	ld a,(Vel_left)
 680+ 9CFE A7           	and a
 681+ 9CFF 28 06        	jr z,1F
 682+ 9D01 47           	ld b,a
 683+ 9D02 35           3 dec (hl)
 684+ 9D03 10 FD        	djnz 3B
 685+ 9D05 18 01        	jr 2F
 686+ 9D07 35           1 dec (hl)
 687+ 9D08 C9           2 ret
 688+ 9D09
 689+ 9D09              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D09
 691+ 9D09 2A CC 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D0C 01 1F 00     	ld bc,31
 693+ 9D0F A7           	and a
 694+ 9D10 ED 4A        	adc hl,bc
 695+ 9D12 22 CC 8B     	ld (Posicion_actual),hl
 696+ 9D15 21 C9 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D18 CB C6        	set 0,(hl)
 698+ 9D1A C9           	ret
 699+ 9D1B
 700+ 9D1B              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D1B
 702+ 9D1B 2A CC 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D1E 01 1F 00     	ld bc,31
 704+ 9D21 A7           	and a
 705+ 9D22 ED 42        	sbc hl,bc
 706+ 9D24 22 CC 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D27 21 C9 8B     	ld hl,Ctrl_0
 708+ 9D2A CB CE        	set 1,(hl)
 709+ 9D2C C9           	ret
 710+ 9D2D
 711+ 9D2D              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D2D
 713+ 9D2D 24           Reaparece_abajo inc h
 714+ 9D2E 01 E0 17     	ld bc,$17e0
 715+ 9D31 A7           	and a
 716+ 9D32 ED 4A        	adc hl,bc
 717+ 9D34 22 CC 8B     	ld (Posicion_actual),hl
 718+ 9D37 21 C9 8B     	ld hl,Ctrl_0
 719+ 9D3A CB D6        	set 2,(hl)
 720+ 9D3C C9           	ret
 721+ 9D3D
 722+ 9D3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D3D
 724+ 9D3D 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D40 A7           	and a
 726+ 9D41 ED 42        	sbc hl,bc
 727+ 9D43 22 CC 8B     	ld (Posicion_actual),hl
 728+ 9D46 21 C9 8B     	ld hl,Ctrl_0
 729+ 9D49 CB DE        	set 3,(hl)
 730+ 9D4B C9           	ret
 731+ 9D4C
 732+ 9D4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D4C              ;
 734+ 9D4C              ;	15/07/23
 735+ 9D4C
 736+ 9D4C              Reinicio
 737+ 9D4C
 738+ 9D4C              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D4C
 740+ 9D4C AF           	xor a
 741+ 9D4D 21 F1 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D50 CD 6E 9D     	call Limpia_contenido_hl
 743+ 9D53
 744+ 9D53 21 CC 8B     	ld hl,Posicion_actual
 745+ 9D56 CD 6E 9D     	call Limpia_contenido_hl
 746+ 9D59
 747+ 9D59 CD C2 92     	call Inicializa_Puntero_indice_mov
 748+ 9D5C CD 6D 9E     	call Inicia_Puntero_mov
 749+ 9D5F
 750+ 9D5F 21 F3 8B     	ld hl,Incrementa_puntero
 751+ 9D62 06 05        	ld b,5
 752+ 9D64 77           1 ld (hl),a
 753+ 9D65 23           	inc hl
 754+ 9D66 10 FC        	djnz 1B
 755+ 9D68
 756+ 9D68 21 C8 8B     	ld hl,Ctrl_2
 757+ 9D6B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D6D
 759+ 9D6D C9           	ret
 760+ 9D6E
 761+ 9D6E 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D6F 23           	inc hl
 763+ 9D70 77           	ld (hl),a
 764+ 9D71 C9           	ret
 765+ 9D72
 766+ 9D72              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D72              ;
 768+ 9D72              ;	18/6/24
 769+ 9D72              ;
 770+ 9D72
 771+ 9D72              Amadeus_a_izquierda
 772+ 9D72
 773+ 9D72              ;	Actualiza contador de movimientos.
 774+ 9D72
 775+ 9D72 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D75 35           	dec (hl)
 777+ 9D76 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D78
 779+ 9D78 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D7B 2B           	dec hl
 781+ 9D7C 2B           	dec hl
 782+ 9D7D 2B           	dec hl
 783+ 9D7E 2B           	dec hl
 784+ 9D7F 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D82
 786+ 9D82 21 31 8C     	ld hl,Ctrl_3
 787+ 9D85 CB EE        	set 5,(hl)
 788+ 9D87
 789+ 9D87 C9           	ret
 790+ 9D88
 791+ 9D88 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D89 C9           	ret
 793+ 9D8A
 794+ 9D8A
 795+ 9D8A              Amadeus_a_derecha
 796+ 9D8A
 797+ 9D8A              ;	Actualiza contador de movimientos.
 798+ 9D8A
 799+ 9D8A 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D8D 34           	inc (hl)
 801+ 9D8E 3E 7A        	ld a,$7a
 802+ 9D90 BE           	cp (hl)
 803+ 9D91 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D93
 805+ 9D93 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D96 23           	inc hl
 807+ 9D97 23           	inc hl
 808+ 9D98 23           	inc hl
 809+ 9D99 23           	inc hl
 810+ 9D9A 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D9D
 812+ 9D9D 21 31 8C     	ld hl,Ctrl_3
 813+ 9DA0 CB EE        	set 5,(hl)
 814+ 9DA2 C9           	ret
 815+ 9DA3
 816+ 9DA3 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA4 C9           	ret
# file closed: Direcciones.asm
2057  9DA5              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA5              ; ----- ----- ----- ----- -----
   2+ 9DA5              ;
   3+ 9DA5              ;   28/12/23
   4+ 9DA5
   5+ 9DA5              Movimiento
   6+ 9DA5
   7+ 9DA5              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA5
   9+ 9DA5 3A C8 8B         ld a,(Ctrl_2)
  10+ 9DA8 CB 57            bit 2,a
  11+ 9DAA 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DAC
  13+ 9DAC 2A EF 8B         ld hl,(Puntero_mov)
  14+ 9DAF 7E               ld a,(hl)
  15+ 9DB0
  16+ 9DB0              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DB0
  18+ 9DB0              Inicia_desplazamiento.
  19+ 9DB0
  20+ 9DB0              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DB0
  22+ 9DB0 CD A3 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB3
  24+ 9DB3              ; Iniciamos (Repetimos_mov).
  25+ 9DB3
  26+ 9DB3 7E               ld a,(hl)
  27+ 9DB4 E6 0F            and $0f
  28+ 9DB6 32 F5 8B         ld (Repetimos_desplazamiento),a
  29+ 9DB9 32 F6 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DBC
  31+ 9DBC              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DBC
  33+ 9DBC 23               inc hl
  34+ 9DBD 7E               ld a,(hl)
  35+ 9DBE 32 F8 8B         ld (Cola_de_desplazamiento),a
  36+ 9DC1 2B               dec hl
  37+ 9DC2
  38+ 9DC2 21 C8 8B         ld hl,Ctrl_2
  39+ 9DC5 CB D6            set 2,(hl)
  40+ 9DC7
  41+ 9DC7              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC7              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC7
  44+ 9DC7              Desplazamiento_iniciado
  45+ 9DC7
  46+ 9DC7 CD 77 9E         call Aplica_desplazamiento
  47+ 9DCA
  48+ 9DCA              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DCA
  50+ 9DCA 3A 31 8C         ld a,(Ctrl_3)
  51+ 9DCD CB 4F            bit 1,a
  52+ 9DCF C0               ret nz
  53+ 9DD0
  54+ 9DD0 21 F5 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DD3 35               dec (hl)
  56+ 9DD4 C0               ret nz
  57+ 9DD5
  58+ 9DD5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD5              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD5              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD5
  62+ 9DD5 3A F8 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD8 A7               and a
  64+ 9DD9 CC CC 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DDC 28 30            jr z,Reinicia_el_movimiento
  66+ 9DDE
  67+ 9DDE FE FF            cp $ff
  68+ 9DE0 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DE2
  70+ 9DE2 FE FE            cp $fe
  71+ 9DE4 CC 51 9E         call z,Fijamos_bucle
  72+ 9DE7 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE9
  74+ 9DE9 FE FD            cp $fd
  75+ 9DEB 20 11            jr nz,1F
  76+ 9DED
  77+ 9DED              ; ---
  78+ 9DED              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DED
  80+ 9DED 3A C8 8B         ld a,(Ctrl_2)
  81+ 9DF0 CB 5F            bit 3,a
  82+ 9DF2 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF4
  84+ 9DF4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF4
  86+ 9DF4 21 C8 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF9
  89+ 9DF9 CD 62 9E         call Inicia_Repetimos_movimiento
  90+ 9DFC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DFE              ; ---
  92+ 9DFE
  93+ 9DFE FE 01        1 cp 1
  94+ 9E00 CA 3B 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E03
  96+ 9E03 3D               dec a
  97+ 9E04 32 F8 8B         ld (Cola_de_desplazamiento),a
  98+ 9E07
  99+ 9E07 3A F6 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E0A 32 F5 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E0D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E0D C9               ret
 103+ 9E0E
 104+ 9E0E              Reinicia_el_movimiento
 105+ 9E0E
 106+ 9E0E 3A C8 8B         ld a,(Ctrl_2)
 107+ 9E11 CB 5F            bit 3,a
 108+ 9E13 28 1B            jr z,2F
 109+ 9E15
 110+ 9E15              ; (Cola_de_desplazamiento)="254".
 111+ 9E15
 112+ 9E15 21 F7 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E18 35               dec (hl)
 114+ 9E19 20 15            jr nz,2F
 115+ 9E1B
 116+ 9E1B              ; Fin de las repeticiones del último movimiento.
 117+ 9E1B
 118+ 9E1B 21 C8 8B         ld hl,Ctrl_2
 119+ 9E1E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E20
 121+ 9E20 2A EF 8B         ld hl,(Puntero_mov)
 122+ 9E23 23               inc hl
 123+ 9E24 23               inc hl
 124+ 9E25 23               inc hl
 125+ 9E26 22 EF 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E29              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E29 7E               ld a,(hl)
 128+ 9E2A 32 F8 8B         ld (Cola_de_desplazamiento),a
 129+ 9E2D
 130+ 9E2D C3 D5 9D         jp Cola
 131+ 9E30
 132+ 9E30 CD 6D 9E     2 call Inicia_Puntero_mov
 133+ 9E33
 134+ 9E33 21 C8 8B         ld hl,Ctrl_2
 135+ 9E36 CB 96            res 2,(hl)
 136+ 9E38
 137+ 9E38 C3 A5 9D         jp Movimiento
 138+ 9E3B
 139+ 9E3B              Siguiente_desplazamiento
 140+ 9E3B
 141+ 9E3B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E3B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E3B
 144+ 9E3B 21 C8 8B         ld hl,Ctrl_2
 145+ 9E3E CB 96            res 2,(hl)
 146+ 9E40
 147+ 9E40 2A EF 8B         ld hl,(Puntero_mov)
 148+ 9E43 23               inc hl
 149+ 9E44 23               inc hl
 150+ 9E45 22 EF 8B         ld (Puntero_mov),hl
 151+ 9E48
 152+ 9E48 7E               ld a,(hl)
 153+ 9E49 A7               and a
 154+ 9E4A CC CC 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E4D CA 0E 9E         jp z,Reinicia_el_movimiento
 156+ 9E50
 157+ 9E50 C9               ret
 158+ 9E51
 159+ 9E51              ; Subrutinas -----------------------------------------
 160+ 9E51              ; ---------- --------- --------- ---------- ----------
 161+ 9E51              ;
 162+ 9E51              ;   24/07/23
 163+ 9E51              ;
 164+ 9E51              ;   Fijamos_bucle
 165+ 9E51              ;
 166+ 9E51              ;
 167+ 9E51
 168+ 9E51              Fijamos_bucle
 169+ 9E51
 170+ 9E51 3A F3 8B         ld a,(Incrementa_puntero)
 171+ 9E54 3C               inc a
 172+ 9E55 32 F4 8B         ld (Incrementa_puntero_backup),a
 173+ 9E58
 174+ 9E58 CD CC 9E         call Incrementa_Puntero_indice_mov
 175+ 9E5B 2A ED 8B         ld hl,(Puntero_indice_mov)
 176+ 9E5E 22 F1 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E61 C9               ret
 178+ 9E62
 179+ 9E62              ; ---------- --------- --------- ---------- ----------
 180+ 9E62              ;
 181+ 9E62              ;   07/7/23
 182+ 9E62              ;
 183+ 9E62              ;   Inicia_Repetimos_movimiento
 184+ 9E62              ;
 185+ 9E62              ;
 186+ 9E62
 187+ 9E62              Inicia_Repetimos_movimiento
 188+ 9E62
 189+ 9E62              ; Iniciamos (Repetimos_movimiento).
 190+ 9E62
 191+ 9E62 DD 2A EF 8B      ld ix,(Puntero_mov)
 192+ 9E66 DD 7E 02         ld a,(ix+2)
 193+ 9E69 32 F7 8B         ld (Repetimos_movimiento),a
 194+ 9E6C
 195+ 9E6C C9               ret
 196+ 9E6D
 197+ 9E6D              ; ---------- --------- --------- ---------- ----------
 198+ 9E6D              ;
 199+ 9E6D              ;   26/6/23
 200+ 9E6D              ;
 201+ 9E6D              ;   Inicia_Puntero_mov
 202+ 9E6D              ;
 203+ 9E6D              ;
 204+ 9E6D
 205+ 9E6D 2A ED 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E70 CD C1 90         call Extrae_address
 207+ 9E73 22 EF 8B         ld (Puntero_mov),hl
 208+ 9E76 C9               ret
 209+ 9E77
 210+ 9E77              ; ---------- --------- --------- ---------- ----------
 211+ 9E77              ;
 212+ 9E77              ;   27/06/23
 213+ 9E77              ;
 214+ 9E77              ;   Aplica_movimiento.
 215+ 9E77
 216+ 9E77              Aplica_desplazamiento
 217+ 9E77
 218+ 9E77              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E77
 220+ 9E77 2A EF 8B         ld hl, (Puntero_mov)
 221+ 9E7A
 222+ 9E7A 7E               ld a,(hl)
 223+ 9E7B E6 F0            and $f0
 224+ 9E7D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E7E
 226+ 9E7E CB 7E            bit 7,(hl)
 227+ 9E80 28 03            jr z,1F
 228+ 9E82 CD 59 9A         call Mov_up
 229+ 9E85 2A EF 8B     1 ld hl, (Puntero_mov)
 230+ 9E88 CB 76            bit 6,(hl)
 231+ 9E8A 28 03            jr z,2F
 232+ 9E8C CD 20 9A         call Mov_down
 233+ 9E8F
 234+ 9E8F              ; Se ha aplicado reinicio ???
 235+ 9E8F              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E8F
 237+ 9E8F              ;    ld a,(Ctrl_3)
 238+ 9E8F              ;    bit 1,a
 239+ 9E8F              ;    ret nz
 240+ 9E8F
 241+ 9E8F 2A EF 8B     2 ld hl, (Puntero_mov)
 242+ 9E92 CB 6E            bit 5,(hl)
 243+ 9E94 28 03            jr z,3F
 244+ 9E96 CD BF 9B         call Mov_left
 245+ 9E99 2A EF 8B     3 ld hl, (Puntero_mov)
 246+ 9E9C CB 66            bit 4,(hl)
 247+ 9E9E C8               ret z
 248+ 9E9F CD 9C 9A         call Mov_right
 249+ 9EA2 C9               ret
 250+ 9EA3
 251+ 9EA3              ; ---------- --------- --------- ---------- ----------
 252+ 9EA3              ;
 253+ 9EA3              ;   26/06/23
 254+ 9EA3              ;
 255+ 9EA3              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA3
 257+ 9EA3              Ajusta_velocidad_desplazamiento
 258+ 9EA3
 259+ 9EA3              ; 1er byte de la cadena de movimiento.
 260+ 9EA3              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA3
 262+ 9EA3 CD C1 9E         call Extrae_nibble_alto
 263+ 9EA6
 264+ 9EA6 32 E3 8B         ld (Vel_up),a
 265+ 9EA9 79               ld a,c
 266+ 9EAA E6 0F            and $0f
 267+ 9EAC 32 E4 8B         ld (Vel_down),a
 268+ 9EAF
 269+ 9EAF              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EAF              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EAF
 272+ 9EAF 23               inc hl
 273+ 9EB0 CD C1 9E         call Extrae_nibble_alto
 274+ 9EB3
 275+ 9EB3 32 E1 8B         ld (Vel_left),a
 276+ 9EB6 79               ld a,c
 277+ 9EB7 E6 0F            and $0f
 278+ 9EB9 32 E2 8B         ld (Vel_right),a
 279+ 9EBC
 280+ 9EBC              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EBC
 282+ 9EBC 23               inc hl
 283+ 9EBD 22 EF 8B         ld (Puntero_mov),hl
 284+ 9EC0 C9               ret
 285+ 9EC1
 286+ 9EC1 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC3 7E               ld a,(hl)
 288+ 9EC4 4F               ld c,a
 289+ 9EC5 E6 F0            and $f0
 290+ 9EC7 CB 3F        1 srl a
 291+ 9EC9 10 FC            djnz 1B
 292+ 9ECB C9               ret
 293+ 9ECC
 294+ 9ECC              ; ---------- --------- --------- ---------- ----------
 295+ 9ECC              ;
 296+ 9ECC              ;   5/7/23
 297+ 9ECC              ;
 298+ 9ECC              ;   Incrementa_Puntero_indice_mov
 299+ 9ECC
 300+ 9ECC              Incrementa_Puntero_indice_mov
 301+ 9ECC
 302+ 9ECC 21 F3 8B         ld hl,Incrementa_puntero
 303+ 9ECF 34               inc (hl)
 304+ 9ED0
 305+ 9ED0 2A ED 8B         ld hl,(Puntero_indice_mov)
 306+ 9ED3 01 02 00         ld bc,2
 307+ 9ED6 A7               and a
 308+ 9ED7 09               add hl,bc
 309+ 9ED8 22 ED 8B         ld (Puntero_indice_mov),hl
 310+ 9EDB
 311+ 9EDB 7E               ld a,(hl)
 312+ 9EDC A7               and a
 313+ 9EDD
 314+ 9EDD              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EDD
 316+ 9EDD              ;    jr z,$
 317+ 9EDD
 318+ 9EDD              ;! Reinicia el Patrón de movimiento.
 319+ 9EDD
 320+ 9EDD CC E2 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EE0
 322+ 9EE0 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EE1
 324+ 9EE1 C9               ret
 325+ 9EE2
 326+ 9EE2              ; ---------- --------- --------- ---------- ----------
 327+ 9EE2              ;
 328+ 9EE2              ;   15/01/24
 329+ 9EE2              ;
 330+ 9EE2              ;   Inicializa_Puntero_indice_mov
 331+ 9EE2
 332+ 9EE2              Inicializa_Puntero_indice_mov_2
 333+ 9EE2
 334+ 9EE2              ; Existe etiqueta de bucle principal???
 335+ 9EE2
 336+ 9EE2 2A F1 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE5 24               inc h
 338+ 9EE6 25               dec h
 339+ 9EE7 28 05            jr z,2F
 340+ 9EE9
 341+ 9EE9 22 ED 8B         ld (Puntero_indice_mov),hl
 342+ 9EEC 18 14            jr 3F
 343+ 9EEE
 344+ 9EEE              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EEE
 346+ 9EEE 3A F3 8B     2 ld a,(Incrementa_puntero)
 347+ 9EF1 47               ld b,a
 348+ 9EF2
 349+ 9EF2 2A ED 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF5 2B           1 dec hl
 351+ 9EF6 2B               dec hl
 352+ 9EF7 10 FC            djnz 1B
 353+ 9EF9 22 ED 8B         ld (Puntero_indice_mov),hl
 354+ 9EFC
 355+ 9EFC AF               xor a
 356+ 9EFD 32 F3 8B         ld (Incrementa_puntero),a
 357+ 9F00 18 06            jr 4F
 358+ 9F02
 359+ 9F02 3A F4 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F05 32 F3 8B         ld (Incrementa_puntero),a
 361+ 9F08 C9           4 ret
 362+ 9F09
 363+ 9F09              ; ----------------------------------------------------------------------
 364+ 9F09              ;
 365+ 9F09              ;   30/01/24
 366+ 9F09              ;
 367+ 9F09              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F09
 369+ 9F09 3A BC 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F0C CD 5D 94         call Calcula_salto_en_BC
 371+ 9F0F 21 E5 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F12 A7               and a
 373+ 9F13 ED 4A            adc hl,bc
 374+ 9F15 C9               ret
 375+ 9F16
 376+ 9F16              ; ----------------------------------------------------------------------
 377+ 9F16              ;
 378+ 9F16              ;   30/01/24
 379+ 9F16              ;
 380+ 9F16              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F16              ;
 382+ 9F16              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F16
 384+ 9F16 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F17 23               inc hl
 386+ 9F18 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F19 69               ld l,c
 388+ 9F1A 60               ld h,b
 389+ 9F1B 22 C5 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F1E C9               ret
 391+ 9F1F
# file closed: Movimiento.asm
2058  9F1F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F1F              ; --------------------------------------------------------------------------------------
   2+ 9F1F              ;
   3+ 9F1F              ;   19/10/24
   4+ 9F1F              ;
   5+ 9F1F
   6+ 9F1F              Pinta_disparos_Entidades
   7+ 9F1F
   8+ 9F1F 3A 21 8C         ld a,(Numero_de_disparos_de_entidades)
   9+ 9F22 A7               and a
  10+ 9F23 F3               di
  11+ 9F24 28 FE            jr z,$
  12+ 9F26 FB               ei
  13+ 9F27
  14+ 9F27 ED 73 09 8C      ld (Stack),sp
  15+ 9F2B ED 7B 1B 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  16+ 9F2F
  17+ 9F2F 3E 02            ld a,2
  18+ 9F31 08               ex af,af
  19+ 9F32
  20+ 9F32 FD E1        3 pop iy
  21+ 9F34 C1               pop bc                          ; 1er .db IYL
  22+ 9F35              ;                                   ; 2º  .db IYH
  23+ 9F35              ;                                   ; 3er .db C.
  24+ 9F35              ;   Album vacío ???
  25+ 9F35
  26+ 9F35 FD 7D            ld a,iyl
  27+ 9F37 FD 84            add iyh
  28+ 9F39 81               add c
  29+ 9F3A 28 1F            jr z,1F
  30+ 9F3C
  31+ 9F3C              ;   Imprime album, (contiene datos).
  32+ 9F3C
  33+ 9F3C 3B               dec sp
  34+ 9F3D
  35+ 9F3D E1               pop hl                          ; Puntero de impresión en HL.
  36+ 9F3E
  37+ 9F3E              ; Imprime el 1er scanline del disparo.
  38+ 9F3E
  39+ 9F3E FD 7D            ld a,iyl
  40+ 9F40 AE               xor (hl)
  41+ 9F41 77               ld (hl),a
  42+ 9F42
  43+ 9F42 2C               inc l
  44+ 9F43
  45+ 9F43 FD 7C            ld a,iyh
  46+ 9F45 AE               xor (hl)
  47+ 9F46 77               ld (hl),a
  48+ 9F47
  49+ 9F47 2C               inc l
  50+ 9F48
  51+ 9F48 79               ld a,c
  52+ 9F49 AE               xor (hl)
  53+ 9F4A 77               ld (hl),a
  54+ 9F4B
  55+ 9F4B              ; Imprime el 2º scanline del disparo.
  56+ 9F4B
  57+ 9F4B E1               pop hl
  58+ 9F4C
  59+ 9F4C FD 7D            ld a,iyl
  60+ 9F4E AE               xor (hl)
  61+ 9F4F 77               ld (hl),a
  62+ 9F50
  63+ 9F50 2C               inc l
  64+ 9F51
  65+ 9F51 FD 7C            ld a,iyh
  66+ 9F53 AE               xor (hl)
  67+ 9F54 77               ld (hl),a
  68+ 9F55
  69+ 9F55 2C               inc l
  70+ 9F56
  71+ 9F56 79               ld a,c
  72+ 9F57 AE               xor (hl)
  73+ 9F58 77               ld (hl),a
  74+ 9F59
  75+ 9F59 18 D7            jr 3B
  76+ 9F5B
  77+ 9F5B 08           1 ex af,af
  78+ 9F5C 3D               dec a
  79+ 9F5D 20 05            jr nz,2F
  80+ 9F5F
  81+ 9F5F ED 7B 09 8C      ld sp,(Stack)
  82+ 9F63 C9               ret
  83+ 9F64
  84+ 9F64 ED 7B 19 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  85+ 9F68 08               ex af,af
  86+ 9F69 18 C7            jr 3B
  87+ 9F6B
  88+ 9F6B              ; --------------------------------------------------------------------------------------
  89+ 9F6B              ;
  90+ 9F6B              ;   15/10/24
  91+ 9F6B              ;
  92+ 9F6B
  93+ 9F6B              Motor_de_disparos_entidades
  94+ 9F6B
  95+ 9F6B 3A 21 8C         ld a,(Numero_de_disparos_de_entidades)
  96+ 9F6E FE 07            cp 7
  97+ 9F70 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  98+ 9F71
  99+ 9F71 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
 100+ 9F73 21 23 89         ld hl,Indice_de_disparos_entidades
 101+ 9F76
 102+ 9F76 CD C1 90     1 call Extrae_address
 103+ 9F79 1C               inc e
 104+ 9F7A 1C               inc e
 105+ 9F7B ED 53 34 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 106+ 9F7F
 107+ 9F7F               ; Caja vacía ???
 108+ 9F7F
 109+ 9F7F 2C               inc l
 110+ 9F80
 111+ 9F80 7E               ld a,(hl)
 112+ 9F81 A7               and a
 113+ 9F82 28 16            jr z,3F                                                              ; Caja vacía.
 114+ 9F84
 115+ 9F84              ; --- Trabajamos con caja:
 116+ 9F84
 117+ 9F84              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
 118+ 9F84
 119+ 9F84              ;    call Rota_disparo_si_procede
 120+ 9F84
 121+ 9F84              ; ------------------------------------------------------------
 122+ 9F84
 123+ 9F84 2D               dec l
 124+ 9F85 2D               dec l
 125+ 9F86 2D               dec l
 126+ 9F87
 127+ 9F87 CD C1 90         call Extrae_address
 128+ 9F8A              ;   (Puntero_de_impresion) del disparo en HL.
 129+ 9F8A
 130+ 9F8A              ;! Velocidad del disparo de entidades.
 131+ 9F8A
 132+ 9F8A CD DA 99         call NextScan
 133+ 9F8D
 134+ 9F8D              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 135+ 9F8D
 136+ 9F8D CD 9E 9F         call Fin_de_disparo_de_entidad
 137+ 9F90
 138+ 9F90 EB               ex de,hl
 139+ 9F91
 140+ 9F91 73               ld (hl),e
 141+ 9F92 23               inc hl
 142+ 9F93 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 143+ 9F94
 144+ 9F94 2A 34 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 145+ 9F97 18 02            jr 2F
 146+ 9F99
 147+ 9F99 C9               ret
 148+ 9F9A
 149+ 9F9A EB           3 ex de,hl
 150+ 9F9B 10 D9        2 djnz 1B
 151+ 9F9D
 152+ 9F9D C9               ret
 153+ 9F9E
 154+ 9F9E              ; ------------- ------------- ------------
 155+ 9F9E              ;
 156+ 9F9E              ;   25/9/24
 157+ 9F9E
 158+ 9F9E              Fin_de_disparo_de_entidad
 159+ 9F9E
 160+ 9F9E 7C               ld a,h
 161+ 9F9F FE 54            cp $54
 162+ 9FA1 D8               ret c
 163+ 9FA2
 164+ 9FA2 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 165+ 9FA3
 166+ 9FA3 5D               ld e,l
 167+ 9FA4 54               ld d,h
 168+ 9FA5
 169+ 9FA5 21 E0 57         ld hl,$57e0
 170+ 9FA8 ED 52            sbc hl,de
 171+ 9FAA
 172+ 9FAA 38 39            jr c,Elimina_disparo_entidad
 173+ 9FAC
 174+ 9FAC 6B               ld l,e
 175+ 9FAD 62               ld h,d
 176+ 9FAE
 177+ 9FAE D1               pop de
 178+ 9FAF
 179+ 9FAF C9               ret
 180+ 9FB0
 181+ 9FB0              ; ----------------------------------------------------------
 182+ 9FB0              ;
 183+ 9FB0              ;   08/10/24
 184+ 9FB0
 185+ 9FB0              Rota_disparo_si_procede
 186+ 9FB0
 187+ 9FB0              ;   Nos situamos en el byte alto de (Control).
 188+ 9FB0
 189+ 9FB0 CB 76            bit 6,(hl)
 190+ 9FB2 20 03            jr nz,Decrementa_contador_de_control_de_disparo
 191+ 9FB4 CB 7E            bit 7,(hl)
 192+ 9FB6 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 193+ 9FB7
 194+ 9FB7              Decrementa_contador_de_control_de_disparo
 195+ 9FB7
 196+ 9FB7 35               dec (hl)
 197+ 9FB8 7E               ld a,(hl)
 198+ 9FB9 E6 07            and 7
 199+ 9FBB C0               ret nz
 200+ 9FBC
 201+ 9FBC              Rotamos_disparo_segun_proceda
 202+ 9FBC
 203+ 9FBC              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 204+ 9FBC
 205+ 9FBC 3E 07            ld a,7
 206+ 9FBE 86               add (hl)
 207+ 9FBF 77               ld (hl),a                                                           ; Contador reinicializado.
 208+ 9FC0
 209+ 9FC0 CD D9 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 210+ 9FC3
 211+ 9FC3 CB 76            bit 6,(hl)
 212+ 9FC5 20 05            jr nz,Rota_a_derecha
 213+ 9FC7
 214+ 9FC7
 215+ 9FC7              Rota_a_izq
 216+ 9FC7
 217+ 9FC7 F3               di
 218+ 9FC8 18 FE            jr $
 219+ 9FCA FB               ei
 220+ 9FCB
 221+ 9FCB C9               ret
 222+ 9FCC
 223+ 9FCC              Rota_a_derecha
 224+ 9FCC
 225+ 9FCC FD CB 00 3E      srl (iy+0)
 226+ 9FD0 FD CB 01 3E      srl (iy+1)
 227+ 9FD4 FD CB 02 3E      srl (iy+2)
 228+ 9FD8
 229+ 9FD8              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 230+ 9FD8
 231+ 9FD8 C9               ret
 232+ 9FD9
 233+ 9FD9              ; ------------ ----------- ------------
 234+ 9FD9              ;
 235+ 9FD9              ;   11/10/24
 236+ 9FD9
 237+ 9FD9              Puntero_objeto_en_IY
 238+ 9FD9
 239+ 9FD9 E5               push hl
 240+ 9FDA
 241+ 9FDA 2D               dec l
 242+ 9FDB 2D               dec l
 243+ 9FDC 2D               dec l
 244+ 9FDD 2D               dec l
 245+ 9FDE 2D               dec l
 246+ 9FDF 2D               dec l
 247+ 9FE0
 248+ 9FE0 E5               push hl
 249+ 9FE1 FD E1            pop iy
 250+ 9FE3
 251+ 9FE3 E1               pop hl
 252+ 9FE4
 253+ 9FE4 C9               ret
 254+ 9FE5
 255+ 9FE5              ; ------------ ----------- ------------
 256+ 9FE5              ;
 257+ 9FE5              ;   25/9/24
 258+ 9FE5
 259+ 9FE5              Elimina_disparo_entidad
 260+ 9FE5
 261+ 9FE5 21 21 8C         ld hl,Numero_de_disparos_de_entidades
 262+ 9FE8 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 263+ 9FE9
 264+ 9FE9 E1               pop hl
 265+ 9FEA E5               push hl
 266+ 9FEB
 267+ 9FEB 2C               inc l
 268+ 9FEC 2C               inc l
 269+ 9FED 2C               inc l                                                               ; Sitúa en el 1er .db de la caja.
 270+ 9FEE
 271+ 9FEE CD F6 9F         call Borra_7_bytes
 272+ 9FF1
 273+ 9FF1 D1               pop de
 274+ 9FF2
 275+ 9FF2 21 00 00         ld hl,0
 276+ 9FF5
 277+ 9FF5 C9               ret
 278+ 9FF6
 279+ 9FF6              ; ----- ----- ----- ----- -----
 280+ 9FF6
 281+ 9FF6 16 07        Borra_7_bytes ld d,7                                                    ; Contador
 282+ 9FF8 AF               xor a                                                               ; Borrador
 283+ 9FF9 77           1 ld (hl),a
 284+ 9FFA 2D               dec l
 285+ 9FFB 15               dec d
 286+ 9FFC 20 FB            jr nz,1B
 287+ 9FFE C9               ret
 288+ 9FFF
 289+ 9FFF              ; --------------------------------------------------------------------------------------
 290+ 9FFF              ;
 291+ 9FFF              ;   12/10/24
 292+ 9FFF              ;
 293+ 9FFF
 294+ 9FFF              Genera_datos_de_impresion_disparos_Entidades
 295+ 9FFF
 296+ 9FFF              ;    ld a,(Numero_de_disparos_de_entidades)
 297+ 9FFF              ;    ld b,a
 298+ 9FFF 3E 07            ld a,7
 299+ A001              ;    sub b
 300+ A001              ;    ret z
 301+ A001
 302+ A001 08               ex af,af                                                  ;? Salimos. No hay disparos de entidades generados.                                                    ex af,af
 303+ A002
 304+ A002              ; ---------------
 305+ A002
 306+ A002              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 307+ A002
 308+ A002 21 23 89          ld hl,Indice_de_disparos_entidades
 309+ A005
 310+ A005 CD C1 90     1 call Extrae_address
 311+ A008
 312+ A008 13               inc de
 313+ A009 13               inc de
 314+ A00A
 315+ A00A ED 53 34 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 316+ A00E
 317+ A00E 2C               inc l
 318+ A00F
 319+ A00F 7E               ld a,(hl)
 320+ A010 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 321+ A011 28 35            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 322+ A013
 323+ A013              ; ----- ----- ----- -----
 324+ A013
 325+ A013 2D               dec l
 326+ A014 2D               dec l
 327+ A015 2D               dec l
 328+ A016
 329+ A016 CD C1 90         call Extrae_address
 330+ A019 E5               push hl
 331+ A01A
 332+ A01A 1D               dec e
 333+ A01B
 334+ A01B EB               ex de,hl
 335+ A01C
 336+ A01C 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 337+ A01D 2D               dec l
 338+ A01E 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 339+ A01F 2D               dec l
 340+ A020 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 341+ A021
 342+ A021 E1               pop hl                                                    ;? Puntero de impresión en HL.
 343+ A022
 344+ A022              Genera_scanlines_de_los_disparos_de_entidades.
 345+ A022
 346+ A022 FD 2A 1D 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 347+ A026 FD 73 00         ld (iy+0),e
 348+ A029 FD 70 01         ld (iy+1),b
 349+ A02C FD 71 02         ld (iy+2),c
 350+ A02F
 351+ A02F FD 75 03         ld (iy+3),l
 352+ A032 FD 74 04         ld (iy+4),h
 353+ A035
 354+ A035 CD DA 99         call NextScan
 355+ A038
 356+ A038 FD 75 05         ld (iy+5),l
 357+ A03B FD 74 06         ld (iy+6),h
 358+ A03E
 359+ A03E FD E5            push iy
 360+ A040 E1               pop hl
 361+ A041
 362+ A041 3E 07            ld a,7
 363+ A043 85               add l
 364+ A044 6F               ld l,a
 365+ A045
 366+ A045 22 1D 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 367+ A048
 368+ A048              ; ----- ----- ----- -----
 369+ A048
 370+ A048              Situa_en_siguiente_caja
 371+ A048
 372+ A048 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 373+ A049 3D               dec a
 374+ A04A C8               ret z
 375+ A04B
 376+ A04B 08               ex af,af
 377+ A04C 2A 34 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 378+ A04F 18 B4            jr 1B
 379+ A051
 380+ A051              ; --------------------------------------------------------------------------------------
 381+ A051              ;
 382+ A051              ;   12/10/24
 383+ A051              ;
 384+ A051
 385+ A051              Genera_disparo_de_entidad_maldosa
 386+ A051
 387+ A051              ;   Estructura de un disparo de entidades.
 388+ A051
 389+ A051              ;   Disparo_1 defw 0								; Puntero objeto.
 390+ A051              ; 	defw 0											; Puntero de impresión.
 391+ A051              ;	defw 0											; Control.
 392+ A051
 393+ A051              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 394+ A051              ;   _de la entidad en el momento de disparar.
 395+ A051
 396+ A051              ;   El byte alto muestra la siguiente información:
 397+ A051              ;
 398+ A051              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 399+ A051              ;                        _antes de desplazarse a derecha/izquierda.
 400+ A051              ;
 401+ A051              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 402+ A051              ;
 403+ A051              ;                        10xx ..... Izquierda.
 404+ A051              ;                        01xx ..... Derecha.
 405+ A051              ;                        00xx ..... Recto.
 406+ A051
 407+ A051              ;*  Exclusiones.
 408+ A051
 409+ A051              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 410+ A051              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 411+ A051
 412+ A051              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 413+ A051
 414+ A051 3A 21 8C         ld a,(Numero_de_disparos_de_entidades)
 415+ A054 A7               and a
 416+ A055 C8               ret z
 417+ A056
 418+ A056 3A BE 8B         ld a,(Coordenada_y)
 419+ A059 A7               and a
 420+ A05A C8               ret z
 421+ A05B
 422+ A05B 3D               dec a
 423+ A05C C8               ret z
 424+ A05D
 425+ A05D FE 10            cp 16
 426+ A05F D0               ret nc
 427+ A060
 428+ A060              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 429+ A060              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 430+ A060              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 431+ A060
 432+ A060 21 23 8C         ld hl,Permiso_de_disparo_Entidades
 433+ A063 35               dec (hl)                                            ; No más disparos en este FRAME.
 434+ A064
 435+ A064              ;   Decrementa el numero de disparos de entidades.
 436+ A064
 437+ A064 21 21 8C         ld hl,Numero_de_disparos_de_entidades
 438+ A067 35               dec (hl)
 439+ A068
 440+ A068 21 23 89         ld hl,Indice_de_disparos_entidades
 441+ A06B
 442+ A06B CD C1 90     1 call Extrae_address
 443+ A06E
 444+ A06E 13               inc de
 445+ A06F 13               inc de
 446+ A070
 447+ A070 ED 53 34 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 448+ A074
 449+ A074              ;   Comprobamos si la caja está vacía.
 450+ A074
 451+ A074 2C               inc l
 452+ A075
 453+ A075 7E               ld a,(hl)
 454+ A076 A7               and a
 455+ A077 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 456+ A079
 457+ A079              ;   Caja vacía, vamos a generar un disparo.
 458+ A079              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 459+ A079
 460+ A079 CD 9F A0         call Genera_byte_inclinacion
 461+ A07C
 462+ A07C 7E               ld a,(hl)
 463+ A07D 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 464+ A07E
 465+ A07E 2D               dec l
 466+ A07F
 467+ A07F              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 468+ A07F
 469+ A07F 3A C7 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 470+ A082 77               ld (hl),a
 471+ A083
 472+ A083 2D               dec l
 473+ A084
 474+ A084 CD BD A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 475+ A087
 476+ A087 70               ld (hl),b
 477+ A088 2D               dec l
 478+ A089 71               ld (hl),c
 479+ A08A
 480+ A08A 2D               dec l
 481+ A08B
 482+ A08B              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 483+ A08B
 484+ A08B FD 7E 02         ld a,(iy+02)
 485+ A08E 77               ld (hl),a
 486+ A08F 2D               dec l
 487+ A090
 488+ A090 FD 7E 01         ld a,(iy+01)
 489+ A093 77               ld (hl),a
 490+ A094 2D               dec l
 491+ A095
 492+ A095 FD 7E 00         ld a,(iy+00)
 493+ A098 77               ld (hl),a
 494+ A099
 495+ A099 C9               ret
 496+ A09A
 497+ A09A              ;   --- --- ---
 498+ A09A
 499+ A09A              Situa_en_siguiente_disparo
 500+ A09A
 501+ A09A 2A 34 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 502+ A09D 18 CC            jr 1B
 503+ A09F
 504+ A09F              ; --------------------------------------------------------------------------------------
 505+ A09F              ;
 506+ A09F              ;   09/10/24
 507+ A09F              ;
 508+ A09F
 509+ A09F              Genera_byte_inclinacion
 510+ A09F
 511+ A09F 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 512+ A0A1
 513+ A0A1              ; Determina tendencia del disparo.
 514+ A0A1
 515+ A0A1 3A 75 89         ld a,(CX_Amadeus)
 516+ A0A4 47               ld b,a
 517+ A0A5 3A BD 8B         ld a,(Coordenada_X)
 518+ A0A8 90               sub b
 519+ A0A9 38 07            jr c,Disparo_a_derecha
 520+ A0AB
 521+ A0AB FE 04        Disparo_a_izquierda cp 4
 522+ A0AD
 523+ A0AD D8               ret c
 524+ A0AE C8               ret z
 525+ A0AF
 526+ A0AF CB FE            set 7,(hl)
 527+ A0B1 C9               ret
 528+ A0B2
 529+ A0B2 47           Disparo_a_derecha ld b,a
 530+ A0B3 3E FF            ld a,$ff
 531+ A0B5 90               sub b
 532+ A0B6
 533+ A0B6 FE 04            cp 4
 534+ A0B8
 535+ A0B8 D8               ret c
 536+ A0B9 C8               ret z
 537+ A0BA
 538+ A0BA CB F6            set 6,(hl)
 539+ A0BC C9               ret
 540+ A0BD
 541+ A0BD              ; --------------------------------------------------------------------------------------
 542+ A0BD              ;
 543+ A0BD              ;   09/10/24
 544+ A0BD              ;
 545+ A0BD
 546+ A0BD              Modifica_puntero_de_impresion
 547+ A0BD
 548+ A0BD              ;   Puntero de impresión del disparo en BC.
 549+ A0BD
 550+ A0BD E5               push hl
 551+ A0BE
 552+ A0BE 2A 36 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 553+ A0C1 CD DA 99         call NextScan
 554+ A0C4
 555+ A0C4 4D               ld c,l
 556+ A0C5 44               ld b,h
 557+ A0C6
 558+ A0C6 E1               pop hl
 559+ A0C7
 560+ A0C7 08               ex af,af
 561+ A0C8 CB 77            bit 6,a
 562+ A0CA 28 06            jr z,1F
 563+ A0CC
 564+ A0CC FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 565+ A0D0 0C               inc c
 566+ A0D1 C9               ret
 567+ A0D2
 568+ A0D2 CB 7F        1 bit 7,a
 569+ A0D4 28 F6            jr z,2B
 570+ A0D6
 571+ A0D6 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 572+ A0DA 0D               dec c
 573+ A0DB
 574+ A0DB C9               ret
 575+ A0DC
 576+ A0DC              ; --------------------------------------------------------------------------------------
 577+ A0DC              ;
 578+ A0DC              ;   31/08/24
 579+ A0DC              ;
 580+ A0DC
 581+ A0DC              Compara_con_coordenadas_de_disparo
 582+ A0DC
 583+ A0DC 3A BE 8B         ld a,(Coordenada_y)
 584+ A0DF 47               ld b,a
 585+ A0E0 3A 3B 8C         ld a,(Coordenadas_disparo_certero)
 586+ A0E3 90               sub b
 587+ A0E4
 588+ A0E4              ; A = "0" ok
 589+ A0E4              ; A = "1" ok
 590+ A0E4
 591+ A0E4 28 08            jr z,Comprueba_coordenada_X
 592+ A0E6 3D               dec a
 593+ A0E7 28 05            jr z,Comprueba_coordenada_X
 594+ A0E9
 595+ A0E9              ; A = "$ff" ok
 596+ A0E9
 597+ A0E9 FE FE            cp $fe
 598+ A0EB 28 01            jr z,Comprueba_coordenada_X
 599+ A0ED
 600+ A0ED C9               ret
 601+ A0EE
 602+ A0EE              Comprueba_coordenada_X
 603+ A0EE
 604+ A0EE 3A BD 8B         ld a,(Coordenada_X)
 605+ A0F1 47               ld b,a
 606+ A0F2 21 3C 8C         ld hl,Coordenadas_disparo_certero+1
 607+ A0F5 7E               ld a,(hl)
 608+ A0F6 90               sub b
 609+ A0F7
 610+ A0F7              ; A = "0" ok
 611+ A0F7              ; A = "1" ok
 612+ A0F7
 613+ A0F7 28 09            jr z,Activa_Impacto_en_entidad
 614+ A0F9 3D               dec a
 615+ A0FA 28 06            jr z,Activa_Impacto_en_entidad
 616+ A0FC
 617+ A0FC              ; A = "2" ok
 618+ A0FC
 619+ A0FC 3D               dec a
 620+ A0FD 28 03            jr z,Activa_Impacto_en_entidad
 621+ A0FF
 622+ A0FF              ; A = "$ff"
 623+ A0FF
 624+ A0FF FE FD            cp $fd
 625+ A101 C0               ret nz
 626+ A102
 627+ A102              Activa_Impacto_en_entidad
 628+ A102
 629+ A102              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 630+ A102
 631+ A102 3E 02            ld a,2
 632+ A104 32 C0 8B         ld (Impacto),a
 633+ A107
 634+ A107              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 635+ A107
 636+ A107 11 C0 87         ld de,Indice_Explosion_entidades
 637+ A10A 21 C3 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 638+ A10D
 639+ A10D 73               ld (hl),e
 640+ A10E 23               inc hl
 641+ A10F 72               ld (hl),d
 642+ A110
 643+ A110              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 644+ A110
 645+ A110 21 38 8C         ld hl,Impacto2
 646+ A113 CB 9E            res 3,(hl)
 647+ A115
 648+ A115 C9               ret
 649+ A116
 650+ A116              ; --------------------------------------------------------------------------------------
 651+ A116              ;
 652+ A116              ;   13/10/24
 653+ A116              ;
 654+ A116
 655+ A116              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 656+ A116
 657+ A116              Limpia_album_de_pintado_disparos_Amadeus
 658+ A116
 659+ A116 2A 15 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 660+ A119 06 06            ld b,6
 661+ A11B AF               xor a
 662+ A11C 77           1 ld (hl),a
 663+ A11D 2C               inc l
 664+ A11E 10 FC            djnz 1B
 665+ A120
 666+ A120 C9               ret
 667+ A121
 668+ A121              ; --------------------------------------------------------------------------------------
 669+ A121              ;
 670+ A121              ;   29/09/24
 671+ A121              ;
 672+ A121
 673+ A121              Calcula_bytes_pintado_disparos
 674+ A121
 675+ A121 2A 19 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 676+ A124 45               ld b,l
 677+ A125 2A 1D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 678+ A128 7D               ld a,l
 679+ A129
 680+ A129 90               sub b
 681+ A12A 32 1F 8C         ld (Num_de_bytes_album_de_disparos),a
 682+ A12D
 683+ A12D C9               ret
 684+ A12E
 685+ A12E              ; --------------------------------------------------------------------------------------
 686+ A12E              ;
 687+ A12E              ;   29/09/24
 688+ A12E              ;
 689+ A12E              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 690+ A12E              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 691+ A12E              ;   _disparos que el álbum del FRAME actual).
 692+ A12E
 693+ A12E              Limpia_album_de_pintado_disparos_entidades
 694+ A12E
 695+ A12E              ;    ld a,(Numero_de_disparos_de_entidades)
 696+ A12E              ;    and a
 697+ A12E              ;    di
 698+ A12E              ;    jr z,$
 699+ A12E              ;    ei
 700+ A12E
 701+ A12E 3A 1F 8C         ld a,(Num_de_bytes_album_de_disparos)
 702+ A131 47               ld b,a
 703+ A132
 704+ A132 3E 31            ld a,$31
 705+ A134 90               sub b
 706+ A135 C8               ret z
 707+ A136
 708+ A136 47               ld b,a
 709+ A137
 710+ A137 AF           2 xor a
 711+ A138 2A 1D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 712+ A13B 77           1 ld (hl),a
 713+ A13C 23               inc hl
 714+ A13D 10 FC            djnz 1B
 715+ A13F C9               ret
 716+ A140
 717+ A140              ; --------------------------------------------------------------------------------------
 718+ A140              ;
 719+ A140              ;   29/09/24
 720+ A140              ;
 721+ A140
 722+ A140              Motor_Disparos_Amadeus
 723+ A140
 724+ A140 21 20 89         ld hl,Disparo_Amad+1
 725+ A143
 726+ A143 34               inc (hl)
 727+ A144 35               dec (hl)
 728+ A145
 729+ A145 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 730+ A146
 731+ A146              ;   Esta caja contiene un disparo.
 732+ A146
 733+ A146 CD 4D A1         call Consulta_Impacto
 734+ A149 CC 66 A1         call z,Mueve_disparo_Amadeus
 735+ A14C
 736+ A14C C9               ret
 737+ A14D
 738+ A14D              ; ----------------------
 739+ A14D              ;
 740+ A14D              ;
 741+ A14D              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 742+ A14D              ;
 743+ A14D              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 744+ A14D
 745+ A14D
 746+ A14D              Consulta_Impacto
 747+ A14D
 748+ A14D              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 749+ A14D              ;   _sea lo más coherente posible.
 750+ A14D
 751+ A14D E5               push hl
 752+ A14E 2B               dec hl
 753+ A14F CD 42 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 754+ A152 E1               pop hl
 755+ A153 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 756+ A154
 757+ A154 C8               ret z
 758+ A155
 759+ A155 3A 38 8C         ld a,(Impacto2)
 760+ A158 CB DF            set 3,a
 761+ A15A 32 38 8C         ld (Impacto2),a
 762+ A15D
 763+ A15D E5               push hl
 764+ A15E CD 2F A2         call Genera_coordenadas_de_disparo_Amadeus
 765+ A161 E1               pop hl
 766+ A162 CD 7F A1         call Elimina_disparo_Amadeus
 767+ A165
 768+ A165 C9               ret
 769+ A166
 770+ A166              ; ----------------------
 771+ A166              ;
 772+ A166              ;
 773+ A166              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 774+ A166
 775+ A166              Mueve_disparo_Amadeus
 776+ A166
 777+ A166 CD C1 90         call Extrae_address
 778+ A169
 779+ A169 CD E9 99         call PreviousScan
 780+ A16C CD E9 99         call PreviousScan
 781+ A16F CD E9 99         call PreviousScan
 782+ A172 CD E9 99         call PreviousScan
 783+ A175
 784+ A175              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 785+ A175
 786+ A175 7C               ld a,h
 787+ A176 D6 40            sub $40
 788+ A178 EB               ex de,hl
 789+ A179 38 04            jr c,Elimina_disparo_Amadeus
 790+ A17B
 791+ A17B               ; Introduce nuevo puntero_de_impresión en la caja.
 792+ A17B
 793+ A17B 73               ld (hl),e
 794+ A17C 23               inc hl
 795+ A17D 72               ld (hl),d
 796+ A17E
 797+ A17E C9               ret
 798+ A17F
 799+ A17F              ; ----------------------
 800+ A17F              ;
 801+ A17F              ;   29/9/24
 802+ A17F
 803+ A17F              Elimina_disparo_Amadeus
 804+ A17F
 805+ A17F              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 806+ A17F              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 807+ A17F
 808+ A17F              ;   Disparo_1A defw 0									; Puntero objeto.
 809+ A17F              ;   	defw 0											; Puntero de impresión.
 810+ A17F
 811+ A17F 2B               dec hl
 812+ A180 2B               dec hl
 813+ A181
 814+ A181 AF               xor a
 815+ A182 77               ld (hl),a
 816+ A183 23               inc hl
 817+ A184 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 818+ A185
 819+ A185 23               inc hl
 820+ A186 77               ld (hl),a
 821+ A187 23               inc hl
 822+ A188 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 823+ A189
 824+ A189 3E 01            ld a,1
 825+ A18B 32 22 8C         ld (Permiso_de_disparo_Amadeus),a
 826+ A18E
 827+ A18E CD 16 A1         call Limpia_album_de_pintado_disparos_Amadeus
 828+ A191
 829+ A191 AF               xor a
 830+ A192 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 831+ A193
 832+ A193 C9               ret
 833+ A194
 834+ A194              ; --------------------------------------------------------------------------------------
 835+ A194              ;
 836+ A194              ;   13/10/24
 837+ A194              ;
 838+ A194
 839+ A194              Pinta_disparos_Amadeus
 840+ A194
 841+ A194 06 02            ld b,2
 842+ A196 ED 73 09 8C      ld (Stack),sp
 843+ A19A ED 7B 17 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 844+ A19E D1           3 pop de
 845+ A19F 14               inc d
 846+ A1A0 15               dec d
 847+ A1A1 28 1C            jr z,1F
 848+ A1A3 E1               pop hl
 849+ A1A4
 850+ A1A4              Imprime_scanlines_en_pantalla
 851+ A1A4
 852+ A1A4              ; 1er scanline
 853+ A1A4
 854+ A1A4 1A               ld a,(de)
 855+ A1A5 AE               xor (hl)
 856+ A1A6 77               ld (hl),a
 857+ A1A7
 858+ A1A7 1C               inc e
 859+ A1A8 2C               inc l
 860+ A1A9
 861+ A1A9 1A               ld a,(de)
 862+ A1AA AE               xor (hl)
 863+ A1AB 77               ld (hl),a
 864+ A1AC
 865+ A1AC 1D               dec e
 866+ A1AD E1               pop hl
 867+ A1AE
 868+ A1AE              ; 2º scanline
 869+ A1AE
 870+ A1AE 1A               ld a,(de)
 871+ A1AF AE               xor (hl)
 872+ A1B0 77               ld (hl),a
 873+ A1B1
 874+ A1B1 1C               inc e
 875+ A1B2 2C               inc l
 876+ A1B3
 877+ A1B3 1A               ld a,(de)
 878+ A1B4 AE               xor (hl)
 879+ A1B5 77               ld (hl),a
 880+ A1B6
 881+ A1B6 1D               dec e
 882+ A1B7
 883+ A1B7 18 06            jr 1F
 884+ A1B9
 885+ A1B9 ED 7B 15 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 886+ A1BD 18 DF            jr 3B
 887+ A1BF 10 F8        1 djnz 2B
 888+ A1C1 ED 7B 09 8C      ld sp,(Stack)
 889+ A1C5 C9               ret
 890+ A1C6
 891+ A1C6              ; --------------------------------------------------------------------------------------
 892+ A1C6              ;
 893+ A1C6              ;   13/10/24
 894+ A1C6              ;
 895+ A1C6              ;   Modifica: HL,BC y DE.
 896+ A1C6
 897+ A1C6
 898+ A1C6              Genera_datos_de_impresion_disparos_Amadeus
 899+ A1C6
 900+ A1C6 ED 73 09 8C      ld (Stack),sp
 901+ A1CA 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 902+ A1CD D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 903+ A1CE
 904+ A1CE 14               inc d                                                     ;? Salimos si no hay disparo.
 905+ A1CF 15               dec d
 906+ A1D0
 907+ A1D0 28 0E            jr z,Salida
 908+ A1D2
 909+ A1D2              Genera_scanlines_de_disparo_Amadeus
 910+ A1D2
 911+ A1D2 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 912+ A1D3              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 913+ A1D3 ED 7B 15 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 914+ A1D7
 915+ A1D7 C1               pop bc
 916+ A1D8 C1               pop bc
 917+ A1D9 C1               pop bc
 918+ A1DA
 919+ A1DA E5               push hl                                                   ;? Sube 2º scanline al álbum.
 920+ A1DB CD E9 99         call PreviousScan
 921+ A1DE E5               push hl                                                   ;? Sube 1er scanline al álbum.
 922+ A1DF D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 923+ A1E0
 924+ A1E0              Salida
 925+ A1E0
 926+ A1E0 ED 7B 09 8C      ld sp,(Stack)
 927+ A1E4
 928+ A1E4 C9               ret
 929+ A1E5
 930+ A1E5              ; --------------------------------------------------------------------------------------
 931+ A1E5              ;
 932+ A1E5              ;   12/09/24
 933+ A1E5              ;
 934+ A1E5
 935+ A1E5              Genera_disparo_Amadeus
 936+ A1E5
 937+ A1E5              ;*  Exclusiones.
 938+ A1E5
 939+ A1E5 3A 22 8C         ld a,(Permiso_de_disparo_Amadeus)
 940+ A1E8 A7               and a
 941+ A1E9 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 942+ A1EA
 943+ A1EA 3D               dec a
 944+ A1EB 32 22 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 945+ A1EE
 946+ A1EE              Define_puntero_objeto_disparo
 947+ A1EE
 948+ A1EE              ;   Inicializamos contador.
 949+ A1EE
 950+ A1EE 06 00            ld b,0
 951+ A1F0
 952+ A1F0 2A 79 89         ld hl,(p.imp.amadeus)
 953+ A1F3 2C               inc l
 954+ A1F4
 955+ A1F4 3E 80            ld a,$80
 956+ A1F6 BE               cp (hl)
 957+ A1F7 28 0D            jr z,1F
 958+ A1F9
 959+ A1F9 04               inc b
 960+ A1FA
 961+ A1FA 3E 60            ld a,$60
 962+ A1FC BE               cp (hl)
 963+ A1FD 28 07            jr z,1F
 964+ A1FF
 965+ A1FF
 966+ A1FF 04               inc b
 967+ A200
 968+ A200 3E 18            ld a,$18
 969+ A202 BE               cp (hl)
 970+ A203 28 01            jr z,1F
 971+ A205
 972+ A205 04               inc b
 973+ A206
 974+ A206              ;   Calcula el Puntero_de_impresión del disparo.
 975+ A206
 976+ A206              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 977+ A206
 978+ A206 CD E9 99     1 call PreviousScan
 979+ A209
 980+ A209 78               ld a,b
 981+ A20A CB 3F            srl a
 982+ A20C 28 03            jr z,4F
 983+ A20E
 984+ A20E              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 985+ A20E E5               push hl
 986+ A20F 18 02            jr 5F
 987+ A211 2D           4 dec l
 988+ A212 E5               push hl
 989+ A213              ; ---
 990+ A213
 991+ A213              ;   Calcula el Puntero_objeto del disparo.
 992+ A213
 993+ A213 21 76 83     5 ld hl,Indice_disparo_Amadeus
 994+ A216 04               inc b
 995+ A217 05               dec b
 996+ A218 28 04            jr z,2F
 997+ A21A
 998+ A21A              ;   Nos desplazamos por el índice de disparos.
 999+ A21A
1000+ A21A 2C           3 inc l
1001+ A21B 2C               inc l
1002+ A21C 10 FC            djnz 3B
1003+ A21E
1004+ A21E              ; --- Guarda el Puntero_objeto del disparo en la pila.
1005+ A21E CD C1 90     2 call Extrae_address
1006+ A221 E5               push hl
1007+ A222              ; ---
1008+ A222
1009+ A222              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1010+ A222              ; HL en el 1er .db de la caja.
1011+ A222
1012+ A222 21 1F 89         ld hl,Disparo_Amad
1013+ A225
1014+ A225 06 02            ld b,2
1015+ A227
1016+ A227 D1           6 pop de
1017+ A228 73               ld (hl),e
1018+ A229 23               inc hl
1019+ A22A 72               ld (hl),d
1020+ A22B 23               inc hl
1021+ A22C
1022+ A22C 10 F9            djnz 6B
1023+ A22E
1024+ A22E C9               ret
1025+ A22F
1026+ A22F              Genera_coordenadas_de_disparo_Amadeus
1027+ A22F
1028+ A22F              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1029+ A22F              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1030+ A22F              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1031+ A22F
1032+ A22F CD C1 90         call Extrae_address
1033+ A232 CD E0 94         call Genera_coordenadas
1034+ A235
1035+ A235 3D               dec a
1036+ A236
1037+ A236 21 3B 8C         ld hl,Coordenadas_disparo_certero
1038+ A239 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1039+ A23A 23               inc hl
1040+ A23B 3A BD 8B         ld a,(Coordenada_X)
1041+ A23E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1042+ A23F
1043+ A23F AF               xor a
1044+ A240 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1045+ A241
1046+ A241 C9               ret
1047+ A242
1048+ A242              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1049+ A242              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1050+ A242              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1051+ A242
1052+ A242              ; ----------------------------------------------
1053+ A242              ;
1054+ A242              ;   27/08/24
1055+ A242              ;
1056+ A242              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1057+ A242              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1058+ A242
1059+ A242              Detecta_impacto_en_disparo_de_Amadeus
1060+ A242
1061+ A242              Extraccion_de_datos
1062+ A242
1063+ A242 13               inc de
1064+ A243 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1065+ A244
1066+ A244 5E               ld e,(hl)
1067+ A245 23               inc hl
1068+ A246 56               ld d,(hl)
1069+ A247
1070+ A247 23               inc hl
1071+ A248
1072+ A248 4E               ld c,(hl)
1073+ A249 23               inc hl
1074+ A24A 46               ld b,(hl)
1075+ A24B
1076+ A24B C5               push bc
1077+ A24C E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1078+ A24D
1079+ A24D              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1080+ A24D
1081+ A24D CD E9 99         call PreviousScan
1082+ A250 CD E9 99         call PreviousScan
1083+ A253
1084+ A253              Detecta_impacto_
1085+ A253
1086+ A253 1A               ld a,(de)
1087+ A254 A6               and (hl)
1088+ A255 C0               ret nz
1089+ A256
1090+ A256 13               inc de
1091+ A257 23               inc hl
1092+ A258
1093+ A258 1A               ld a,(de)
1094+ A259 A6               and (hl)
1095+ A25A C9               ret
1096+ A25B
1097+ A25B              ; -------------------------------------------------------------------------------------------------------------
1098+ A25B              ;
1099+ A25B              ;   8/8/24
1100+ A25B              ;
1101+ A25B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1102+ A25B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1103+ A25B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1104+ A25B              ;
1105+ A25B              ;   MODIFICA: HL,DE,BC y A.
1106+ A25B              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1107+ A25B              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1108+ A25B
1109+ A25B              Colision_Entidad_Amadeus
1110+ A25B
1111+ A25B              ; Posible contacto de entidad con Amadeus. ?????
1112+ A25B
1113+ A25B              ; Exclusiones:
1114+ A25B
1115+ A25B 3A 5B 8C         ld a,(Shield)
1116+ A25E A7               and a
1117+ A25F C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1118+ A260
1119+ A260 21 31 8C         ld hl,Ctrl_3
1120+ A263 CB 76            bit 6,(hl)
1121+ A265 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1122+ A266
1123+ A266 21 38 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1124+ A269 CB 56            bit 2,(hl)
1125+ A26B C0               ret nz
1126+ A26C
1127+ A26C 3A BE 8B     	ld a,(Coordenada_y)
1128+ A26F FE 14        	cp $14
1129+ A271 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1130+ A272
1131+ A272 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1132+ A275 A7               and a
1133+ A276 C0               ret nz
1134+ A277
1135+ A277              Genera_coordenadas_X
1136+ A277
1137+ A277              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1138+ A277              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1139+ A277
1140+ A277              ;   Limpiamos almacenes.
1141+ A277
1142+ A277              ;    call Limpia_Coordenadas_X
1143+ A277
1144+ A277              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1145+ A277
1146+ A277 21 3D 8C         ld hl,Coordenadas_X_Entidad
1147+ A27A 3A BD 8B         ld a,(Coordenada_X)
1148+ A27D CD 9F A2         call Guarda_coordenadas_X
1149+ A280
1150+ A280              ;   Almacenamos las coordenadas X de Amadeus.
1151+ A280
1152+ A280 3A 75 89         ld a,(CX_Amadeus)
1153+ A283 CD 9F A2         call Guarda_coordenadas_X
1154+ A286 CD B3 A2         call Compara_coordenadas_X
1155+ A289 C0               ret nz
1156+ A28A
1157+ A28A 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1158+ A28C 32 C0 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1159+ A28F
1160+ A28F 2A FC 8B         ld hl,(Puntero_store_caja)
1161+ A292 2C               inc l
1162+ A293 2C               inc l
1163+ A294 2C               inc l
1164+ A295 2C               inc l
1165+ A296 22 39 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1166+ A299
1167+ A299 21 38 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1168+ A29C CB D6            set 2,(hl)
1169+ A29E
1170+ A29E C9               ret
1171+ A29F
1172+ A29F               ; ----- ----- ----- ----- -----
1173+ A29F
1174+ A29F 77           Guarda_coordenadas_X ld (hl),a
1175+ A2A0 3C               inc a
1176+ A2A1 2C               inc l
1177+ A2A2 77               ld (hl),a
1178+ A2A3 3C               inc a
1179+ A2A4 2C               inc l
1180+ A2A5 77               ld (hl),a
1181+ A2A6 2C               inc l
1182+ A2A7 C9               ret
1183+ A2A8
1184+ A2A8 AF           Limpia_Coordenadas_X xor a
1185+ A2A9 06 06            ld b,6
1186+ A2AB 21 40 8C         ld hl,Coordenadas_X_Amadeus
1187+ A2AE 77           1 ld (hl),a
1188+ A2AF 23               inc hl
1189+ A2B0 10 FC            djnz 1B
1190+ A2B2 C9               ret
1191+ A2B3
1192+ A2B3              ; ----- ----- ----- ----- -----
1193+ A2B3
1194+ A2B3              Compara_coordenadas_X
1195+ A2B3
1196+ A2B3 DD 21 3D 8C      ld ix,Coordenadas_X_Entidad
1197+ A2B7 DD 7E 00         ld a,(ix+0)
1198+ A2BA CD C8 A2         call Comparando
1199+ A2BD C8               ret z
1200+ A2BE
1201+ A2BE 3C               inc a
1202+ A2BF CD D7 A2         call Comparando_1
1203+ A2C2 C8               ret z
1204+ A2C3
1205+ A2C3 3C               inc a
1206+ A2C4 CD D7 A2         call Comparando_1
1207+ A2C7 C9               ret
1208+ A2C8
1209+ A2C8              ; ----- ----- ----- ----- -----
1210+ A2C8              ;
1211+ A2C8              ;   4/12/23
1212+ A2C8              ;
1213+ A2C8              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1214+ A2C8
1215+ A2C8              Comparando
1216+ A2C8
1217+ A2C8 DD 2C            inc ixl
1218+ A2CA DD 2C            inc ixl
1219+ A2CC DD 2C            inc ixl
1220+ A2CE
1221+ A2CE DD 46 00         ld b,(ix+0)
1222+ A2D1 DD 4E 01         ld c,(ix+1)
1223+ A2D4 DD 56 02         ld d,(ix+2)
1224+ A2D7
1225+ A2D7 B8           Comparando_1 cp b
1226+ A2D8 C8               ret z
1227+ A2D9 B9               cp c
1228+ A2DA C8               ret z
1229+ A2DB BA               cp d
1230+ A2DC C9               ret
1231+ A2DD
1232+ A2DD              ; -----------------------------------------------------------------------
1233+ A2DD              ;
1234+ A2DD              ;   04/7/24
1235+ A2DD              ;
1236+ A2DD
1237+ A2DD              Detecta_colision_nave_entidad
1238+ A2DD
1239+ A2DD              ; Exclusiones:
1240+ A2DD
1241+ A2DD              ; Salimos de la rutina si no hay advertencia de posible colisión.
1242+ A2DD
1243+ A2DD 21 38 8C     	ld hl,Impacto2
1244+ A2E0 CB 56        	bit 2,(hl)
1245+ A2E2 C8           	ret z
1246+ A2E3
1247+ A2E3              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1248+ A2E3
1249+ A2E3 2A 7B 89         ld hl,(Pamm_Amadeus)
1250+ A2E6 CD C1 90         call Extrae_address
1251+ A2E9 54               ld d,h
1252+ A2EA 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1253+ A2EB
1254+ A2EB 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1255+ A2EE 06 10            ld b,16                                        ; Contador de scanlines en B.
1256+ A2F0 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1257+ A2F3
1258+ A2F3 C5           1 push bc
1259+ A2F4 06 03            ld b,3
1260+ A2F6 E5               push hl
1261+ A2F7
1262+ A2F7              ; .db
1263+ A2F7
1264+ A2F7 1A           3 ld a,(de)
1265+ A2F8 A7               and a
1266+ A2F9 20 03            jr nz,4F
1267+ A2FB
1268+ A2FB 2C               inc l
1269+ A2FC 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1270+ A2FE
1271+ A2FE ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1272+ A300 28 04            jr z,2F
1273+ A302
1274+ A302              ; Impacto.
1275+ A302 FD 2D            dec iyl
1276+ A304 28 22            jr z,5F
1277+ A306
1278+ A306 1C           2 inc e
1279+ A307 10 EE            djnz 3B
1280+ A309
1281+ A309 E1               pop hl
1282+ A30A
1283+ A30A              ; Hay salto de línea en el puntero de impresión ???
1284+ A30A
1285+ A30A 7C               ld a,h
1286+ A30B D6 57            sub $57
1287+ A30D 20 0A            jr nz,6F
1288+ A30F
1289+ A30F              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1290+ A30F
1291+ A30F 2A 79 89         ld hl,(p.imp.amadeus)
1292+ A312 3E 20            ld a,$20
1293+ A314 A7               and a
1294+ A315 85               add l
1295+ A316 6F               ld l,a
1296+ A317 18 01            jr 7F
1297+ A319
1298+ A319 24           6 inc h
1299+ A31A
1300+ A31A C1           7 pop bc
1301+ A31B 10 D6            djnz 1B
1302+ A31D
1303+ A31D              ;   Fin de la comparativa.
1304+ A31D
1305+ A31D              ;   NO HAY COLISIÓN !!!!!.
1306+ A31D              ;
1307+ A31D              ;   .db (Impacto) de Amadeus a "0".
1308+ A31D              ;   RES el bit2 de (Impacto2).
1309+ A31D              ;
1310+ A31D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1311+ A31D              ;   Lo colocamos a "0".
1312+ A31D
1313+ A31D 21 38 8C         ld hl,Impacto2
1314+ A320 CB 96            res 2,(hl)
1315+ A322 2A 39 8C         ld hl,(Entidad_sospechosa_de_colision)
1316+ A325 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1317+ A327 C9               ret
1318+ A328
1319+ A328              ;   COLISIÓN !!!!!.
1320+ A328              ;
1321+ A328              ;   .db (Impacto) de Amadeus a "1".
1322+ A328              ;   SET el bit3 de (Impacto2).
1323+ A328              ;
1324+ A328              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1325+ A328
1326+ A328 E1           5 pop hl
1327+ A329 C1               pop bc
1328+ A32A
1329+ A32A 21 78 89         ld hl,Impacto_Amadeus
1330+ A32D 36 01            ld (hl),1
1331+ A32F 21 38 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1332+ A332 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1333+ A334
1334+ A334 11 C0 87         ld de,Indice_Explosion_entidades
1335+ A337 2A 39 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1336+ A33A
1337+ A33A 23               inc hl
1338+ A33B 23               inc hl
1339+ A33C 23               inc hl
1340+ A33D
1341+ A33D 73               ld (hl),e
1342+ A33E 23               inc hl
1343+ A33F 72               ld (hl),d
1344+ A340
1345+ A340              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1346+ A340
1347+ A340 11 60 88         ld de,Indice_Explosion_Amadeus
1348+ A343 21 7B 89         ld hl,Pamm_Amadeus
1349+ A346
1350+ A346 73               ld (hl),e
1351+ A347 23               inc hl
1352+ A348 72               ld (hl),d
1353+ A349
1354+ A349 C9               ret
1355+ A34A
1356+ A34A
1357+ A34A
# file closed: Disparo.asm
2059  A34A
2060  A34A              	SAVESNA "Pruebas.sna", START
2061  A34A
2062  A34A
2063  A34A
2064  A34A
# file closed: Banco_de_pruebas.asm
