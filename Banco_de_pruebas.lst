# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 26 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD B0 A0     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 4E 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD 1C 91     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 4C 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD 2C 91     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 143  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 144  8BB3
 145  8BB3              ; --------------------------------------------------------------------------------
 146  8BB3              ;
 147  8BB3              ; 12/05/24
 148  8BB3              ;
 149  8BB3              ; Parámetros DRAW.
 150  8BB3              ;
 151  8BB3
 152  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB3
 154  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BB4              ;															- Patrón de movimiento.
 156  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BB6
 159  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BB7
 162  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BB7              ; Ejemplos.
 165  8BB7
 166  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BB7
 172  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BB8
 176  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BBA
 179  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BBC
 181  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BBC
 183  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 185  8BBE
 186  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BBE
 188  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BBF
 194  8BBF 00           Ctrl_2 db 0
 195  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC0              ;
 203  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC0              ;														BIT 4, ???
 209  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC0
 211  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC1              ;
 217  8BC1              ; 														DESCRIPCIÖN:
 218  8BC1              ;
 219  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC1              ;
 233  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC1
 237  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC1
 239  8BC1 00           Filas db 0												; Filas. [DRAW]
 240  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BC7
 244  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BC7
 246  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BC8
 250  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BC8
 252  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BC8              ;
 254  8BC8              ;	COLORES: 0 ..... NEGRO
 255  8BC8              ;    		 1 ..... AZUL
 256  8BC8              ; 			 2 ..... ROJO
 257  8BC8              ;			 3 ..... MAGENTA
 258  8BC8              ; 			 4 ..... VERDE
 259  8BC8              ; 			 5 ..... CIAN
 260  8BC8              ;			 6 ..... AMARILLO
 261  8BC8              ; 			 7 ..... BLANCO
 262  8BC8
 263  8BC8 00 00        Indice_Sprite_der defw 0
 264  8BCA 00 00        Indice_Sprite_izq defw 0
 265  8BCC 00 00        Puntero_DESPLZ_der defw 0
 266  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD0
 268  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD3 00           Columnas db 0
 271  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD7
 275  8BD7              ; variables de control general.
 276  8BD7
 277  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BD8
 279  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BD8
 281  8BD8              Perfiles_de_velocidad
 282  8BD8
 283  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BDC
 288  8BDC              ; Contadores de 16 bits.
 289  8BDC
 290  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BE4
 295  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BE4
 297  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BEA              ;
 301  8BEA              ;
 302  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BEB 00           Incrementa_puntero_backup db 0
 306  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF0              ;
 312  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF0              ;
 316  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF0              ;
 321  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF0
 325  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF1
 327  8BF1              ;														DESCRIPCIÓN:
 328  8BF1              ;
 329  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF1
 336  8BF1              ;														BIT 3, Recarga de nueva oleada.
 337  8BF1              ;														BIT 4, Recarga de nueva oleada.
 338  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF1              ;														BIT 6, **** Frame completo.
 340  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF1
 342  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF3
 347  8BF3              ; Gestión de ENTIDADES y CAJAS.
 348  8BF3
 349  8BF3 00 00        Puntero_store_caja defw 0
 350  8BF5 00 00        Puntero_restore_caja defw 0
 351  8BF7 00 00        Indice_restore_caja defw 0
 352  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8BFC
 356  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C00              ;														; _ puntero (Indice_entidades).
 359  8C00
 360  8C00              ;---------------------------------------------------------------------------------------------------------------
 361  8C00              ;
 362  8C00              ;	11/09/24
 363  8C00              ;
 364  8C00              ;	Álbumes.
 365  8C00
 366  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C02              ;														; _variable para almacenar lo posición del puntero_
 368  8C02              ; 														; _de pila, SP.
 369  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C04
 372  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C04
 374  8C04 00 00        Album_de_pintado defw 0
 375  8C06 00 00        Album_de_borrado defw 0
 376  8C08 00 00        Album_de_pintado_Amadeus defw 0
 377  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 378  8C0C 00 00        Album_de_pintado_disparos defw 0
 379  8C0E 00 00        Album_de_borrado_disparos defw 0
 380  8C10
 381  8C10 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C12 00           Num_de_bytes_album_de_disparos db 0
 383  8C13 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C14
 385  8C14 07           Numero_de_disparos_de_entidades db 7
 386  8C15
 387  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C17
 390  8C17 00 00        Puntero_rancio_disparos_album defw 0
 391  8C19
 392  8C19 00 00        Techo_Scanlines_album defw 0
 393  8C1B 00 00        Techo_Scanlines_album_2 defw 0
 394  8C1D 00           Switch db 0
 395  8C1E 00 00        Techo defw 0
 396  8C20 00 00        Scanlines_album_SP defw 0
 397  8C22 00 89        India_SP defw Tabla_de_pintado
 398  8C24 03 89        India_2_SP defw Tabla_de_pintado+3
 399  8C26
 400  8C26 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  8C27              ;
 402  8C27              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  8C27              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  8C27              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  8C27              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 406  8C27              ;																Habilita el borrado/pintado de sprites.
 407  8C27              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 408  8C27              ;																_ a la baja.
 409  8C27              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 410  8C27              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 411  8C27              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 412  8C27              ; 																_ el último frame de la explosión de nuestra nave.
 413  8C27              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 414  8C27              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 415  8C27
 416  8C27 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  8C28              ;
 418  8C28              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  8C28              ;
 420  8C28              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  8C28              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  8C28              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  8C28              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  8C28              ;
 425  8C28              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  8C28              ;															_ masticados ya generados.
 427  8C28              ;
 428  8C28              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  8C28              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  8C28              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  8C28              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  8C28
 433  8C28 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 434  8C29              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 435  8C29              ;                                                           BIT 2, "1" DEBUG !! Indica que se ha generado un disparo de entidad.
 436  8C29
 437  8C29
 438  8C29
 439  8C29
 440  8C29
 441  8C29              ; Gestión de Disparos.
 442  8C29
 443  8C29 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 444  8C2B
 445  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 446  8C2C
 447  8C2C              ;
 448  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 449  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 450  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 451  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 452  8C2C
 453  8C2C
 454  8C2C
 455  8C2C
 456  8C2C
 457  8C2C
 458  8C2C
 459  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 460  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 461  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 462  8C2E
 463  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 464  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 465  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 467  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 468  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 469  8C36
 470  8C36              ;---------------------------------------------------------------------------------------------------------------
 471  8C36
 472  8C36              ; Relojes y temporizaciones.
 473  8C36
 474  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 475  8C37 05           Clock_explosion_Amadeus db 5
 476  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 477  8C39
 478  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 479  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 480  8C3D 00           DB_RND_disparos db 0
 481  8C3E
 482  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 483  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 484  8C41              ;														; Repite la oleada de entidades.
 485  8C41 90           CLOCK_disparo_entidad_MASTER db $90						; Reloj, decreciente.
 486  8C42 90           CLOCK_disparo_entidad db $90
 487  8C43
 488  8C43              ;---------------------------------------------------------------------------------------------------------------
 489  8C43
 490  8C43              ; Gestión de NIVELES.
 491  8C43
 492  8C43 00           Nivel db 0												; Nivel actual del juego.
 493  8C44 00 00        Puntero_indice_NIVELES defw 0
 494  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 495  8C48              ; 														; _ que definen el NIVEL.
 496  8C48
 497  8C48              ; ---------------------------------------------------------------------------------------------------------------
 498  8C48
 499  8C48              ; Temporizaciones Shield.
 500  8C48
 501  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 502  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 503  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 504  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 505  8C50 00           Shield_3 db 0
 506  8C51
 507  8C51 06           Lives db 6
 508  8C52
 509  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 510  8C52              ;
 511  8C52              ;	5/1/24
 512  8C52
 513  8C52              START
 514  8C52
 515  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 516  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 517  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 518  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 519  8C5B F3           	DI
 520  8C5C
 521  8C5C              ; Limpiamos pantalla.
 522  8C5C
 523  8C5C 3E 07        	ld a,%00000111
 524  8C5E CD B9 94     	call Cls
 525  8C61 CD 11 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 526  8C64
 527  8C64              ; INICIALIZACIÓN.
 528  8C64
 529  8C64 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 530  8C66 CD 5E 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 531  8C69 CD A8 8E     	call Extrae_numero_aleatorio_y_avanza
 532  8C6C
 533  8C6C 6F           	ld l,a
 534  8C6D 26 00        	ld h,0
 535  8C6F 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 536  8C72
 537  8C72              ;	Inicializa 1er Nivel.
 538  8C72
 539  8C72 21 94 8B     	ld hl,Indice_de_niveles
 540  8C75 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 541  8C78 CD 8E 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 542  8C7B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 543  8C7B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 544  8C7B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 545  8C7B
 546  8C7B              ;	Inicia los álbumes de líneas.
 547  8C7B
 548  8C7B CD 61 90     	call Inicia_albumes_de_lineas
 549  8C7E              ;
 550  8C7E CD 71 90     	call Inicia_albumes_de_lineas_Amadeus
 551  8C81 CD 7E 90     	call Inicia_albumes_de_disparos
 552  8C84
 553  8C84 CD A7 90     	call Inicia_Puntero_Disparo_Entidades
 554  8C87
 555  8C87 CD D3 92     4 call Inicia_Entidades
 556  8C8A CD 36 93     	call Inicia_Amadeus
 557  8C8D
 558  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 559  8C8D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 560  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 561  8C8D
 562  8C8D 11 6D 89     	ld de,Amadeus_BOX
 563  8C90 CD 89 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 564  8C93 CD 79 93     	call Limpiamos_bandeja_DRAW
 565  8C96
 566  8C96              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 567  8C96
 568  8C96 06 3C        	ld b,60
 569  8C98 CD 5B 9D     2 call Amadeus_a_izquierda
 570  8C9B 10 FB        	djnz 2B
 571  8C9D
 572  8C9D CD 3F 90     	call Genera_datos_de_impresion_Amadeus
 573  8CA0
 574  8CA0              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 575  8CA0
 576  8CA0 CD 91 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 577  8CA3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 578  8CA3
 579  8CA3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 580  8CA3              ; (Esto se dá cuando se inicia una nueva oleada).
 581  8CA3
 582  8CA3              ;	ld a,(Ctrl_1)
 583  8CA3              ;	bit 3,a
 584  8CA3              ;	jr nz,5F											 ; Loop
 585  8CA3
 586  8CA3              ;	ld de,Amadeus_db
 587  8CA3              ;	call Store_Amadeus
 588  8CA3
 589  8CA3              ; 	INICIA DISPAROS !!!!!
 590  8CA3
 591  8CA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA3
 593  8CA3              ;5 call Inicia_punteros_de_cajas
 594  8CA3              ;	call Restore_entidad
 595  8CA3
 596  8CA3              ;	ld a,(Ctrl_1)
 597  8CA3              ;	bit 3,a
 598  8CA3              ;	jr z,6F
 599  8CA3
 600  8CA3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA3
 602  8CA3              ;	ld hl,Ctrl_1
 603  8CA3              ;	res 3,(hl)
 604  8CA3              ;	jr Main
 605  8CA3
 606  8CA3              ; Damos por concluida la construcción del FRAME.
 607  8CA3              ;
 608  8CA3
 609  8CA3 CD 1C 91     	call Inicia_Shield
 610  8CA6
 611  8CA6
 612  8CA6 2A 20 8C     6 ld hl,(Scanlines_album_SP)
 613  8CA9 22 19 8C     	ld (Techo_Scanlines_album),hl
 614  8CAC
 615  8CAC 2A 06 8C     	ld hl,(Album_de_borrado)
 616  8CAF 22 20 8C     	ld (Scanlines_album_SP),hl
 617  8CB2
 618  8CB2 21 00 89     	ld hl,Tabla_de_pintado
 619  8CB5 22 22 8C     	ld (India_SP),hl
 620  8CB8
 621  8CB8 21 26 8C     	ld hl,Ctrl_3
 622  8CBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CBD CB D6        	set 2,(hl)
 624  8CBF CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC1
 626  8CC1 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC2
 628  8CC2 76           	halt
 629  8CC3
 630  8CC3              ; ------------------------------------
 631  8CC3
 632  8CC3              Main
 633  8CC3              ;
 634  8CC3              ; 22/08/24
 635  8CC3
 636  8CC3              ; Gestión de disparos.
 637  8CC3
 638  8CC3 CD 1E A0     	call Limpia_album_de_borrado_disparos
 639  8CC6 CD 8F 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CC9 CD 5A A0     	call Motor_Disparos_Amadeus
 641  8CCC CD 08 9F     	call Motor_de_disparos_entidades
 642  8CCF
 643  8CCF              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 644  8CCF              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 645  8CCF              ; Este hecho lo indica el bit2 de (Impacto2).
 646  8CCF
 647  8CCF CD FC A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 648  8CD2
 649  8CD2              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 650  8CD2
 651  8CD2 21 42 8C     	ld hl,CLOCK_disparo_entidad
 652  8CD5 35           	dec (hl)
 653  8CD6 CC D2 8D     	call z,Autoriza_disparo_de_entidades
 654  8CD9
 655  8CD9 2A 3E 8C     	ld hl,(Clock_next_entity)
 656  8CDC ED 4B 78 5C  	ld bc,(FRAMES)
 657  8CE0 A7           	and a
 658  8CE1 ED 42        	sbc hl,bc
 659  8CE3 20 16        	jr nz,1F
 660  8CE5
 661  8CE5              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 662  8CE5              ; _ (Clock_next_entity) para la siguiente entidad.
 663  8CE5
 664  8CE5 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 665  8CE8 47           	ld b,a
 666  8CE9 3A FB 8B     	ld a,(Entidades_en_curso)
 667  8CEC B8           	cp b
 668  8CED 28 0C        	jr z,1F
 669  8CEF 30 0A        	jr nc,1F
 670  8CF1
 671  8CF1 3C           	inc a
 672  8CF2 32 FB 8B     	ld (Entidades_en_curso),a
 673  8CF5
 674  8CF5              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 675  8CF5
 676  8CF5 CD A8 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 677  8CF8 CD C4 8E     	call Define_Clock_next_entity
 678  8CFB
 679  8CFB 3A FB 8B     1 ld a,(Entidades_en_curso)
 680  8CFE A7           	and a
 681  8CFF CA 79 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 682  8D02 47           	ld b,a												; No hay entidades que gestionar.
 683  8D03
 684  8D03              ; ( Código que ejecutamos con cada entidad: ).
 685  8D03
 686  8D03              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 687  8D03              ;
 688  8D03              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 689  8D03
 690  8D03 21 00 89     	ld hl,Tabla_de_pintado
 691  8D06 22 22 8C     	ld (India_SP),hl
 692  8D09
 693  8D09 21 26 8C     	ld hl,Ctrl_3
 694  8D0C CB D6        	set 2,(hl)
 695  8D0E CD 64 8E     	call Change
 696  8D11
 697  8D11 C5           2 push bc 												; Nº de entidades en curso.
 698  8D12
 699  8D12 CD E9 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 700  8D15 ED 5B 20 8C  	ld de,(Scanlines_album_SP)
 701  8D19
 702  8D19              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 703  8D19
 704  8D19              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 705  8D19              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 706  8D19
 707  8D19 3A 2B 8C     	ld a,(Impacto2)
 708  8D1C CB 5F        	bit 3,a
 709  8D1E C4 E4 9F     	call nz,Compara_con_coordenadas_de_disparo
 710  8D21
 711  8D21 3A B7 8B     	ld a,(Impacto)
 712  8D24 CB 4F        	bit 1,a
 713  8D26 C4 F9 91     	call nz,Genera_explosion
 714  8D29 20 31        	jr nz,Gestiona_siguiente_entidad
 715  8D2B
 716  8D2B 3A B7 8B     	ld a,(Impacto)
 717  8D2E A7           	and a
 718  8D2F 28 0C        	jr z,3F
 719  8D31
 720  8D31              ; IMPACTO en entidad por colisión con Amadeus.
 721  8D31
 722  8D31              ; 5/7/24
 723  8D31              ; Nota importante:
 724  8D31              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 725  8D31              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 726  8D31              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 727  8D31
 728  8D31 3A 71 89     	ld a,(Impacto_Amadeus)
 729  8D34 A7           	and a
 730  8D35 C4 F9 91     	call nz,Genera_explosion
 731  8D38 20 22        	jr nz,Gestiona_siguiente_entidad
 732  8D3A
 733  8D3A              ; Falsa colisión !!!
 734  8D3A
 735  8D3A 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 736  8D3D
 737  8D3D              ; -------------------------------------------
 738  8D3D
 739  8D3D CD 08 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 740  8D40 CD 44 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 741  8D43 CD F8 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 742  8D46 CD F9 94     	call Genera_datos_de_impresion
 743  8D49 CD 9C 93     	call Decrementa_Contador_de_mov_masticados
 744  8D4C
 745  8D4C              ; -------------------------------------------
 746  8D4C
 747  8D4C              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 748  8D4C
 749  8D4C 2A B8 8B     	ld hl,(Puntero_de_impresion)
 750  8D4F CD CD 94     	call Genera_coordenadas
 751  8D52
 752  8D52              ; TODO: Generamos disparo ???
 753  8D52
 754  8D52 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 755  8D55 A7           	and a
 756  8D56 C4 F4 8D     	call nz,Entidad_genera_disparo_si_procede
 757  8D59
 758  8D59 CD 7A A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 759  8D5C
 760  8D5C              Gestiona_siguiente_entidad
 761  8D5C
 762  8D5C CD 6E 93      	call Store_Restore_cajas
 763  8D5F C1           	pop bc
 764  8D60 10 AF        	djnz 2B
 765  8D62
 766  8D62              ; Hemos gestionado todas las entidades.
 767  8D62              ; ----- ----- -----
 768  8D62
 769  8D62 CD 1C 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 770  8D65 CD 33 8F     	call Ordena_tabla_de_impresion
 771  8D68 CD 91 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 772  8D6B
 773  8D6B              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 774  8D6B              ; Hemos gestionado todas las unidades.
 775  8D6B              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 776  8D6B
 777  8D6B              ;	ld hl,Ctrl_1
 778  8D6B              ;	res 2,(hl)
 779  8D6B
 780  8D6B CD D9 8E     	call Borra_diferencia
 781  8D6E
 782  8D6E 3A 26 8C     	ld a,(Ctrl_3)
 783  8D71 CB 5F        	bit 3,a
 784  8D73 20 04        	jr nz,Gestion_de_Amadeus
 785  8D75
 786  8D75 EB           	ex de,hl
 787  8D76 71           	ld (hl),c
 788  8D77 2C           	inc l
 789  8D78 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 790  8D79
 791  8D79              ;! GESTIONA AMADEUS !!!!!!!!!!
 792  8D79
 793  8D79              Gestion_de_Amadeus
 794  8D79
 795  8D79 AF           	xor a
 796  8D7A 32 16 8C     	ld (Permiso_de_disparo_Entidades),a							; Volvemos a deshabilitar el permiso de disparo para las entidades hasta que (CLOCK_disparo_entidad) llegue a "0".
 797  8D7D CD 43 9F     	call Genera_datos_de_impresion_disparos_Entidades
 798  8D80
 799  8D80 21 26 8C     	ld hl,Ctrl_3
 800  8D83 CB 76        	bit 6,(hl)
 801  8D85 28 13        	jr z,Amadeus_vivo
 802  8D87
 803  8D87              ; Amadeus ha sido destruido.
 804  8D87              ; Decrementa (Temp_new_live).
 805  8D87
 806  8D87 21 38 8C     	ld hl,Temp_new_live
 807  8D8A 35           	dec (hl)
 808  8D8B 20 26        	jr nz,End_frame
 809  8D8D
 810  8D8D              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 811  8D8D
 812  8D8D 21 51 8C     	ld hl,Lives
 813  8D90 35           	dec (hl)
 814  8D91
 815  8D91              ;! Fin del juego
 816  8D91
 817  8D91 F3           	di
 818  8D92 28 FE        	jr z,$
 819  8D94 FB           	ei
 820  8D95
 821  8D95              ; Nueva nave.
 822  8D95
 823  8D95 CD 0A 8E     	call Reinicia_Amadeus
 824  8D98 18 19        	jr End_frame
 825  8D9A
 826  8D9A              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 827  8D9A
 828  8D9A              Amadeus_vivo
 829  8D9A
 830  8D9A 3A 71 89     	ld a,(Impacto_Amadeus)
 831  8D9D A7           	and a
 832  8D9E C4 29 92     	call nz, Genera_explosion_Amadeus
 833  8DA1 20 10        	jr nz, End_frame
 834  8DA3
 835  8DA3 CD D6 91     	call Teclado
 836  8DA6
 837  8DA6 21 26 8C     	ld hl,Ctrl_3
 838  8DA9 CB 6E        	bit 5,(hl)
 839  8DAB 28 06        	jr z,End_frame
 840  8DAD
 841  8DAD              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 842  8DAD
 843  8DAD CD 7F 8E     	call Change_Amadeus
 844  8DB0 CD 3F 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 845  8DB3
 846  8DB3              End_frame
 847  8DB3
 848  8DB3              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 849  8DB3              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 850  8DB3
 851  8DB3 CD E1 A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 852  8DB6 CD 34 A0     	call Calcula_bytes_pintado_disparos
 853  8DB9 CD 41 A0     	call Limpia_album_de_pintado_disparos
 854  8DBC
 855  8DBC              ; ------------ ------------- --------------
 856  8DBC
 857  8DBC 2A 06 8C     	ld hl,(Album_de_borrado)
 858  8DBF 22 20 8C     	ld (Scanlines_album_SP),hl
 859  8DC2
 860  8DC2 21 26 8C     	ld hl,Ctrl_3
 861  8DC5 CB C6        	set 0,(hl) 											; Indica Frame completo.
 862  8DC7 CB 9E        	res 3,(hl)
 863  8DC9 CB A6        	res 4,(hl)
 864  8DCB
 865  8DCB AF           	xor a
 866  8DCC D3 FE        	out ($fe),a
 867  8DCE
 868  8DCE 76           	halt
 869  8DCF
 870  8DCF              ; ----------------------------------------
 871  8DCF
 872  8DCF              ;	ld a,(Ctrl_1) 										; Existe Loop?
 873  8DCF              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 874  8DCF CA C3 8C     	jp z,Main
 875  8DD2
 876  8DD2              ;------------------------------------------
 877  8DD2              ;
 878  8DD2              ;	14/09/24
 879  8DD2
 880  8DD2              Autoriza_disparo_de_entidades
 881  8DD2
 882  8DD2 3E 01        	ld a,1
 883  8DD4 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 884  8DD7
 885  8DD7 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 886  8DDA 32 42 8C     	ld (CLOCK_disparo_entidad),a
 887  8DDD
 888  8DDD 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 889  8DE0
 890  8DE0 7E           2 ld a,(hl)
 891  8DE1 A7           	and a
 892  8DE2 28 08        	jr z,1F
 893  8DE4
 894  8DE4 32 3D 8C     	ld (DB_RND_disparos),a
 895  8DE7 23           	inc hl
 896  8DE8 22 3B 8C     	ld (RND_SP_Disparos),hl
 897  8DEB
 898  8DEB C9           	ret
 899  8DEC
 900  8DEC 21 F6 88     1	ld hl,Numeros_aleatorios
 901  8DEF 22 3B 8C     	ld (RND_SP_Disparos),hl
 902  8DF2 18 EC        	jr 2B
 903  8DF4
 904  8DF4              ;------------------------------------------
 905  8DF4              ;
 906  8DF4              ;	14/09/24
 907  8DF4              ;
 908  8DF4              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 909  8DF4
 910  8DF4              Entidad_genera_disparo_si_procede
 911  8DF4
 912  8DF4 3A FB 8B     	ld a,(Entidades_en_curso)
 913  8DF7 A7           	and a
 914  8DF8 C8           	ret z
 915  8DF9
 916  8DF9 3A 3D 8C     	ld a,(DB_RND_disparos)
 917  8DFC CB 4F        	bit 1,a
 918  8DFE F5           	push af											; Guardamos FLAGS.
 919  8DFF
 920  8DFF 17           	rla
 921  8E00 17           	rla
 922  8E01
 923  8E01 32 3D 8C     	ld (DB_RND_disparos),a
 924  8E04
 925  8E04 F1           	pop af
 926  8E05 C4 7F 9F     	call nz,Genera_disparo_de_entidad_maldosa
 927  8E08
 928  8E08 C9           	ret
 929  8E09
 930  8E09
 931  8E09              ; RECARGA DE NUEVA OLEADA.
 932  8E09
 933  8E09              ;	ld a,(Contador_de_frames)
 934  8E09              ;	ld b,a
 935  8E09              ;	ld a,(Activa_recarga_cajas)
 936  8E09              ;	cp b
 937  8E09              ;	jr z,20F
 938  8E09
 939  8E09              ;	ld hl,Ctrl_1
 940  8E09              ;	set 4,(hl)
 941  8E09              ;	jp Main
 942  8E09
 943  8E09              ;20 ld hl,Ctrl_1
 944  8E09              ;	res 4,(hl)
 945  8E09
 946  8E09              ;	ld a,(Contador_de_frames)
 947  8E09
 948  8E09              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 949  8E09              ;! _ IMPREDECIBLE !!!!
 950  8E09
 951  8E09              ;	add 10
 952  8E09              ;	ld (Clock_next_entity),a
 953  8E09
 954  8E09              ;	jp 4B
 955  8E09
 956  8E09 C9           	ret
 957  8E0A
 958  8E0A              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 959  8E0A              ;
 960  8E0A              ;	16/11/23
 961  8E0A
 962  8E0A              ;;Gestiona_Amadeus
 963  8E0A
 964  8E0A              ;! Activa/desactiva impacto con Amadeus.
 965  8E0A
 966  8E0A              ;	ld a,(Impacto)
 967  8E0A              ;	and a
 968  8E0A              ;	jr nz,2F
 969  8E0A
 970  8E0A              ;;	call Mov_Amadeus
 971  8E0A
 972  8E0A              ;;2 ld a,(Ctrl_0)
 973  8E0A              ;;	bit 4,a
 974  8E0A              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 975  8E0A
 976  8E0A              ;;	call Guarda_foto_entidad_a_pintar
 977  8E0A              ;;	call Guarda_datos_de_borrado_Amadeus
 978  8E0A
 979  8E0A              ;;1 ld hl,Ctrl_0
 980  8E0A              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 981  8E0A
 982  8E0A              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 983  8E0A
 984  8E0A              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 985  8E0A
 986  8E0A              ;	call Calcula_numero_de_disparotes
 987  8E0A
 988  8E0A              ;;	ret
 989  8E0A
 990  8E0A              ; -----------------------------
 991  8E0A              ;
 992  8E0A              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 993  8E0A              ;
 994  8E0A              ;	INPUTS: B a de estar a "0".
 995  8E0A
 996  8E0A              ;Prepara_Borra_sprites
 997  8E0A
 998  8E0A              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 999  8E0A              ;	ld a,l
1000  8E0A              ;	ret z
1001  8E0A
1002  8E0A              ;	srl a
1003  8E0A
1004  8E0A              ;2 sub 16
1005  8E0A              ;	jr z,1F
1006  8E0A              ;	inc b
1007  8E0A              ;	jr 2B
1008  8E0A
1009  8E0A              ;1 inc b
1010  8E0A
1011  8E0A              ;	exx
1012  8E0A              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1013  8E0A              ;	exx
1014  8E0A
1015  8E0A              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1016  8E0A              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1017  8E0A
1018  8E0A              ;	ret
1019  8E0A
1020  8E0A              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1021  8E0A              ;
1022  8E0A              ;	24/07/24
1023  8E0A
1024  8E0A              Reinicia_Amadeus
1025  8E0A
1026  8E0A              ;	Reinicia posición y estado.
1027  8E0A
1028  8E0A 21 CF 50     	ld hl,$50cf
1029  8E0D 22 72 89     	ld (p.imp.amadeus),hl
1030  8E10 21 F0 E0     	ld hl,$e0f0
1031  8E13 22 74 89     	ld (Pamm_Amadeus),hl
1032  8E16 21 3D 00     	ld hl,$003d
1033  8E19 22 76 89     	ld (Comm_Amadeus),hl
1034  8E1C
1035  8E1C              ;	limpiamos el álbum de borrado.
1036  8E1C
1037  8E1C 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1038  8E1F
1039  8E1F AF           	xor a
1040  8E20 77           	ld (hl),a
1041  8E21
1042  8E21 E5           	push hl
1043  8E22 D1           	pop de
1044  8E23 13           	inc de
1045  8E24
1046  8E24 01 23 00     	ld bc,35
1047  8E27 ED B0        	ldir
1048  8E29
1049  8E29 CD 3F 90     	call Genera_datos_de_impresion_Amadeus
1050  8E2C
1051  8E2C              ;	Reinicia temporizaciones.
1052  8E2C
1053  8E2C CD 1C 91     	call Inicia_Shield
1054  8E2F
1055  8E2F 3E 5A        	ld a,90
1056  8E31 32 4E 8C     	ld (Shield),a
1057  8E34
1058  8E34 3E 64        	ld a,100
1059  8E36 32 38 8C     	ld (Temp_new_live),a
1060  8E39
1061  8E39              ; 	Restauramos el FLAG: Amadeus vivo.
1062  8E39
1063  8E39 21 26 8C     	ld hl,Ctrl_3
1064  8E3C CB B6        	res 6,(hl)
1065  8E3E
1066  8E3E              ;	Fuerza la impresión de la nave en el siguiente frame.
1067  8E3E
1068  8E3E 21 26 8C      	ld hl,Ctrl_3
1069  8E41 CB EE        	set 5,(hl)
1070  8E43
1071  8E43 C9           	ret
1072  8E44
1073  8E44              ; --------------------------------------------------------------------------------------------------------------
1074  8E44              ;
1075  8E44              ;	12/05/24
1076  8E44
1077  8E44 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1078  8E47 CB 27        	sla a
1079  8E49 32 BE 8B     	ld (Velocidad),a
1080  8E4C E6 10        	and $10
1081  8E4E C8           	ret z
1082  8E4F
1083  8E4F              ; Restaura (Velocidad) a razón del nº de vueltas.
1084  8E4F
1085  8E4F 3A B6 8B     	ld a,(Contador_de_vueltas)
1086  8E52 CB 2F        	sra a
1087  8E54 CB 2F        	sra a
1088  8E56 32 BE 8B     	ld (Velocidad),a
1089  8E59
1090  8E59 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1091  8E5C 23           	inc hl
1092  8E5D 23           	inc hl
1093  8E5E 23           	inc hl
1094  8E5F 23           	inc hl
1095  8E60 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1096  8E63
1097  8E63 C9           	ret
1098  8E64
1099  8E64              ; --------------------------------------------------------------------------------------------------------------
1100  8E64              ;
1101  8E64              ;	25/08/24
1102  8E64
1103  8E64              Change
1104  8E64
1105  8E64 3A 1D 8C     	ld a,(Switch)
1106  8E67 EE 01        	xor 1
1107  8E69 32 1D 8C     	ld (Switch),a
1108  8E6C 2A 04 8C     	ld hl,(Album_de_pintado)
1109  8E6F ED 5B 06 8C  	ld de,(Album_de_borrado)
1110  8E73 EB           	ex de,hl
1111  8E74 22 04 8C     	ld (Album_de_pintado),hl
1112  8E77 22 20 8C     	ld (Scanlines_album_SP),hl
1113  8E7A ED 53 06 8C  	ld (Album_de_borrado),de
1114  8E7E C9           	ret
1115  8E7F
1116  8E7F              Change_Amadeus
1117  8E7F
1118  8E7F 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1119  8E82 ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
1120  8E86 EB           	ex de,hl
1121  8E87 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1122  8E8A ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
1123  8E8E C9           	ret
1124  8E8F
1125  8E8F              Change_Disparos
1126  8E8F
1127  8E8F 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
1128  8E92 ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos)
1129  8E96 EB           	ex de,hl
1130  8E97 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1131  8E9A ED 53 0E 8C  	ld (Album_de_borrado_disparos),de
1132  8E9E 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1133  8EA1
1134  8EA1 3A 12 8C     	ld a,(Num_de_bytes_album_de_disparos)
1135  8EA4 32 13 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1136  8EA7
1137  8EA7 C9           	ret
1138  8EA8
1139  8EA8              ; ------------------------------------
1140  8EA8              ;
1141  8EA8              ; 1/05/24
1142  8EA8
1143  8EA8              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1144  8EA8              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1145  8EA8
1146  8EA8              ;	DESTRUYE: HL,DE,A
1147  8EA8              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1148  8EA8
1149  8EA8              ;	Variables implicadas: (RND_SP).
1150  8EA8
1151  8EA8              Extrae_numero_aleatorio_y_avanza
1152  8EA8
1153  8EA8 21 00 89     	ld hl,Tabla_de_pintado
1154  8EAB EB           	ex de,hl
1155  8EAC 2A 39 8C     	ld hl,(RND_SP)
1156  8EAF EB           	ex de,hl
1157  8EB0 A7           	and a
1158  8EB1 ED 52        	sbc hl,de
1159  8EB3
1160  8EB3 2A 39 8C     	ld hl,(RND_SP)
1161  8EB6 20 06        	jr nz,1F
1162  8EB8
1163  8EB8              ; Sitúa HL al principio de la tabla de nº aleatorios.
1164  8EB8
1165  8EB8 21 F6 88     	ld hl,Numeros_aleatorios
1166  8EBB 22 39 8C     	ld (RND_SP),HL
1167  8EBE
1168  8EBE              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1169  8EBE
1170  8EBE 7E           1 ld a,(hl)
1171  8EBF 23           	inc hl
1172  8EC0 22 39 8C     	ld (RND_SP),hl
1173  8EC3 C9           	ret
1174  8EC4
1175  8EC4              ; ------------------------------------
1176  8EC4              ;
1177  8EC4              ; 1/05/24
1178  8EC4
1179  8EC4              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1180  8EC4              ; (1 a 4 segundos).
1181  8EC4              ; Actualizamos (Clock_next_entity) con A.
1182  8EC4
1183  8EC4              ;	DESTRUYE: A y B.
1184  8EC4              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1185  8EC4              ;			 Actualiza (Clock_next_entity) con A.
1186  8EC4
1187  8EC4              ;	Variables implicadas: (Clock_next_entity).
1188  8EC4
1189  8EC4              ; Notas:
1190  8EC4
1191  8EC4              ; 	$32 1 seg.
1192  8EC4              ; 	$64 2 seg.
1193  8EC4              ; 	$96 3 seg.
1194  8EC4              ; 	$c8 4 seg.
1195  8EC4              ; 	$fa 5 seg.
1196  8EC4
1197  8EC4              ; $ffff 1310,7 seg, 22 minutos.
1198  8EC4
1199  8EC4              ;	$0100  5 seg. aproximadamente.
1200  8EC4              ;	$0200 10 seg. aproximadamente.
1201  8EC4              ;	$0300 15 seg. aproximadamente.
1202  8EC4              ;	$0400 20 seg. aproximadamente.
1203  8EC4              ;	$0500 25 seg. aproximadamente.
1204  8EC4              ;	$0600 30 seg. aproximadamente.
1205  8EC4
1206  8EC4              Define_Clock_next_entity
1207  8EC4
1208  8EC4 FE 34        	cp $34
1209  8EC6 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1210  8EC8
1211  8EC8              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1212  8EC8
1213  8EC8 4F           3 ld c,a
1214  8EC9 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1215  8ECB 2A 78 5C     	ld hl,(FRAMES)
1216  8ECE A7           	and a
1217  8ECF ED 4A        	adc hl,bc
1218  8ED1 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1219  8ED4 C9           	ret
1220  8ED5
1221  8ED5 3E 34        1 ld a,$34
1222  8ED7 18 EF        	jr 3B
1223  8ED9
1224  8ED9              ; ------------------------------------
1225  8ED9              ;
1226  8ED9              ; 18/03/24
1227  8ED9
1228  8ED9              Borra_diferencia
1229  8ED9
1230  8ED9 ED 4B 20 8C  	ld bc,(Scanlines_album_SP)
1231  8EDD
1232  8EDD 3A 1D 8C     	ld a,(Switch)
1233  8EE0 A7           	and a
1234  8EE1 28 08        	jr z,2F
1235  8EE3
1236  8EE3 2A 1B 8C     	ld hl,(Techo_Scanlines_album_2)
1237  8EE6 11 1B 8C     	ld de,Techo_Scanlines_album_2
1238  8EE9 18 06        	jr 3F
1239  8EEB
1240  8EEB 2A 19 8C     2 ld hl,(Techo_Scanlines_album)
1241  8EEE 11 19 8C     	ld de,Techo_Scanlines_album
1242  8EF1
1243  8EF1              ; Diferencia.
1244  8EF1
1245  8EF1 ED 42        3 sbc hl,bc
1246  8EF3
1247  8EF3 C8           	ret z
1248  8EF4 D8           	ret c
1249  8EF5
1250  8EF5              ; Nuevo techo, (más bajo que el anterior).
1251  8EF5              ; Fijamos nuevo techo y borramos bytes sobrantes.
1252  8EF5
1253  8EF5 EB           	ex de,hl
1254  8EF6
1255  8EF6 71           	ld (hl),c
1256  8EF7 2C           	inc l
1257  8EF8 70           	ld (hl),b
1258  8EF9
1259  8EF9 AF           	xor a
1260  8EFA 43           	ld b,e
1261  8EFB
1262  8EFB 2A 20 8C     	ld hl,(Scanlines_album_SP)
1263  8EFE
1264  8EFE 77           1 ld (hl),a
1265  8EFF 23           	inc hl
1266  8F00 10 FC        	djnz 1B
1267  8F02
1268  8F02              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1269  8F02
1270  8F02 21 26 8C     	ld hl,Ctrl_3
1271  8F05 CB DE        	set 3,(hl)
1272  8F07
1273  8F07 C9           	ret
1274  8F08
1275  8F08              ; --------------------------------------------------------------------------------------------------------------
1276  8F08              ;
1277  8F08              ;	26/3/24
1278  8F08
1279  8F08              Recauda_informacion_de_entidad_en_curso
1280  8F08
1281  8F08              ; Almacena la Coordenada Y de la entidad en curso.
1282  8F08
1283  8F08              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1284  8F08
1285  8F08 3A B5 8B     	ld a,(Coordenada_y)
1286  8F0B 2A 22 8C     	ld hl,(India_SP)
1287  8F0E 77           	ld (hl),a
1288  8F0F 2C           	inc l
1289  8F10
1290  8F10              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1291  8F10
1292  8F10 ED 5B 20 8C  	ld de,(Scanlines_album_SP)
1293  8F14
1294  8F14 73           	ld (hl),e
1295  8F15 2C           	inc l
1296  8F16 72           	ld (hl),d
1297  8F17 2C           	inc l
1298  8F18
1299  8F18 22 22 8C     	ld (India_SP),hl
1300  8F1B
1301  8F1B C9           	ret
1302  8F1C
1303  8F1C              ; --------------------------------------------------------------------------------------------------------------
1304  8F1C              ;
1305  8F1C              ;	27/03/24
1306  8F1C              ;
1307  8F1C
1308  8F1C              Inicializa_India_y_limpia_Tabla_de_impresion
1309  8F1C
1310  8F1C 2A 22 8C     	ld hl,(India_SP)
1311  8F1F 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1312  8F22
1313  8F22 79           	ld a,c
1314  8F23 95           	sub l
1315  8F24 28 06        	jr z,2F
1316  8F26 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1317  8F27              ;														; _ y pasamos a inicializar (India_SP).
1318  8F27 AF           	xor a
1319  8F28
1320  8F28 77           1 ld (hl),a
1321  8F29 2C           	inc l
1322  8F2A 10 FC        	djnz 1B												; Limpia Tabla.
1323  8F2C
1324  8F2C 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1325  8F2F 22 22 8C     	ld (India_SP),hl
1326  8F32
1327  8F32 C9           	ret
1328  8F33
1329  8F33              ; --------------------------------------------------------------------------------------------------------------
1330  8F33              ;
1331  8F33              ;	31/3/24
1332  8F33
1333  8F33              Ordena_tabla_de_impresion
1334  8F33
1335  8F33              ; 5794 T/states.
1336  8F33              ; 6278 T/states.
1337  8F33              ; 5310 T/states.
1338  8F33
1339  8F33              ; Inicializamos punteros (India_SP) e (India_2_SP).
1340  8F33              ; Inicializamos contador de comparaciones, [C].
1341  8F33              ; Cargamos los registros A y B para efectuar comparación.
1342  8F33
1343  8F33 FD 2E 00     	ld iyl,0
1344  8F36
1345  8F36 3A FB 8B     	ld a,(Entidades_en_curso)
1346  8F39 FE 04        	cp 4 	;	4
1347  8F3B D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1348  8F3C
1349  8F3C 3D           	dec a
1350  8F3D 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1351  8F3E 51           	ld d,c 										; Copia de respaldo.
1352  8F3F
1353  8F3F 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1354  8F40
1355  8F40 21 03 89     	ld hl,Tabla_de_pintado+3
1356  8F43 46           	ld b,(hl)
1357  8F44 22 24 8C     	ld (India_2_SP),hl
1358  8F47
1359  8F47 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1360  8F48 DC 70 8F     	call c, Avanza_India_2_SP
1361  8F4B CC 70 8F     	call z, Avanza_India_2_SP
1362  8F4E
1363  8F4E FD 2D        	dec iyl
1364  8F50 28 18        	jr z,2F
1365  8F52
1366  8F52
1367  8F52              ; --------------------------------------------------------------------------------------------------------------
1368  8F52              ;
1369  8F52              ;	7/4/24
1370  8F52
1371  8F52              Trueque
1372  8F52
1373  8F52              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1374  8F52              ;  			A contiene en nº de fila de (India_SP).
1375  8F52              ;			HL contiene (India_2_SP).
1376  8F52
1377  8F52 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1378  8F53 E5           	push hl										; Preservo (India_2_SP).
1379  8F54
1380  8F54 ED 5B 22 8C  	ld de,(India_SP)
1381  8F58 EB           	ex de,hl
1382  8F59 70           	ld (hl),b
1383  8F5A 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1384  8F5B
1385  8F5B CD 9C 8F     	call Intercambia_1_byte
1386  8F5E CD 9C 8F     	call Intercambia_1_byte
1387  8F61
1388  8F61
1389  8F61              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1390  8F61              ; Recuperamos (India_2_SP) en HL.
1391  8F61
1392  8F61 2A 22 8C     	ld hl,(India_SP)
1393  8F64 7E           	ld a,(hl)
1394  8F65
1395  8F65 E1           	pop hl
1396  8F66 D1           	pop de
1397  8F67
1398  8F67              ; --------------------------------------------------------------------------------------------------------------
1399  8F67
1400  8F67 CD 70 8F     	call Avanza_India_2_SP
1401  8F6A
1402  8F6A 14           2 inc d
1403  8F6B 15           	dec d
1404  8F6C C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1405  8F6D 18 D8        	jr 1B
1406  8F6F
1407  8F6F C9           	ret
1408  8F70
1409  8F70              ; ----- ----- ----- ----- -----
1410  8F70
1411  8F70              Avanza_India_2_SP
1412  8F70
1413  8F70 0D           	dec c
1414  8F71 28 0A        	jr z,Avanza_punteros_indios
1415  8F73
1416  8F73 FD 2C        	inc iyl
1417  8F75
1418  8F75 2C           	inc l
1419  8F76 2C           	inc l
1420  8F77 2C           	inc l
1421  8F78
1422  8F78 46           	ld b,(hl)
1423  8F79 22 24 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1424  8F7C
1425  8F7C C9           	ret
1426  8F7D
1427  8F7D              ; ----- ----- ----- ----- -----
1428  8F7D
1429  8F7D              Avanza_punteros_indios
1430  8F7D
1431  8F7D 15           	dec d
1432  8F7E 28 15        	jr z,Prepara_salida
1433  8F80
1434  8F80 4A           	ld c,d
1435  8F81
1436  8F81 2A 22 8C     	ld hl,(India_SP)
1437  8F84 2C           	inc l
1438  8F85 2C           	inc l
1439  8F86 2C           	inc l
1440  8F87 7E           	ld a,(hl)
1441  8F88 22 22 8C     	ld (India_SP),hl
1442  8F8B
1443  8F8B 2C           	inc l
1444  8F8C 2C           	inc l
1445  8F8D 2C           	inc l
1446  8F8E 46           	ld b,(hl)
1447  8F8F 22 24 8C     	ld (India_2_SP),hl
1448  8F92
1449  8F92 FD 2C        	inc iyl
1450  8F94
1451  8F94 C9           	ret
1452  8F95
1453  8F95              Prepara_salida
1454  8F95
1455  8F95 21 00 89     	ld hl,Tabla_de_pintado
1456  8F98 22 22 8C     	ld (India_SP),hl
1457  8F9B C9           	ret
1458  8F9C
1459  8F9C
1460  8F9C 2C           Intercambia_1_byte inc l
1461  8F9D 1C           	inc e
1462  8F9E 46           	ld b,(hl)
1463  8F9F 1A           	ld a,(de)
1464  8FA0 EB           	ex de,hl
1465  8FA1 70           	ld (hl),b
1466  8FA2 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1467  8FA3 C9           	ret
1468  8FA4
1469  8FA4              ; -----------------------------------------------------------------------------------
1470  8FA4              ;
1471  8FA4              ;	20/01/24
1472  8FA4              ;
1473  8FA4              ;
1474  8FA4
1475  8FA4              Construye_movimientos_masticados_entidad
1476  8FA4
1477  8FA4 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1478  8FA7 E5           	push hl
1479  8FA8 CD EB 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1480  8FAB              ;															; _ el (Contador_de_mov_masticados).
1481  8FAB CD B4 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1482  8FAE              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1483  8FAE CD E1 99     	call Recompone_posicion_inicio
1484  8FB1
1485  8FB1 CD 11 97     1 call Draw
1486  8FB4 CD D0 8F     	call Guarda_movimiento_masticado
1487  8FB7
1488  8FB7 CD 8E 9D     	call Movimiento
1489  8FBA
1490  8FBA 3A 26 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1491  8FBD CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1492  8FBF 28 F0        	jr z,1B
1493  8FC1
1494  8FC1              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1495  8FC1              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1496  8FC1
1497  8FC1 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1498  8FC2 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1499  8FC5
1500  8FC5              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1501  8FC5
1502  8FC5 CD F2 9E     	call Situa_en_contador_general_de_mov_masticados
1503  8FC8
1504  8FC8              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1505  8FC8              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1506  8FC8
1507  8FC8 ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1508  8FCC
1509  8FCC 71           	ld (hl),c
1510  8FCD 23           	inc hl
1511  8FCE 70           	ld (hl),b
1512  8FCF
1513  8FCF C9           	ret
1514  8FD0
1515  8FD0              ; -----------------------------------------------------------------------------------
1516  8FD0              ;
1517  8FD0              ;	28/12/23
1518  8FD0              ;
1519  8FD0              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1520  8FD0              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1521  8FD0
1522  8FD0              Guarda_movimiento_masticado
1523  8FD0
1524  8FD0 ED 73 00 8C  	ld (Stack),sp
1525  8FD4 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1526  8FD8
1527  8FD8 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1528  8FDA FD E5            push iy 												; Pushea Puntero_objeto.
1529  8FDC
1530  8FDC ED 7B 00 8C      ld sp,(Stack)
1531  8FE0
1532  8FE0 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1533  8FE3 23           	inc hl
1534  8FE4 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1535  8FE7
1536  8FE7 CD EB 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1537  8FEA              ;															; _ el (Contador_de_mov_masticados).
1538  8FEA C9               ret
1539  8FEB
1540  8FEB              ; --------------------------------------------------------------------------------------------------------------
1541  8FEB              ;
1542  8FEB              ;	12/1/24
1543  8FEB              ;
1544  8FEB              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1545  8FEB
1546  8FEB              Actualiza_Puntero_de_almacen_de_mov_masticados
1547  8FEB
1548  8FEB 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1549  8FEE 01 04 00     	ld bc,4
1550  8FF1 A7           	and a
1551  8FF2 ED 4A        	adc hl,bc
1552  8FF4 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1553  8FF7 C9           	ret
1554  8FF8
1555  8FF8              ; --------------------------------------------------------------------------------------------------------------
1556  8FF8              ;
1557  8FF8              ;	24/03/24
1558  8FF8              ;
1559  8FF8              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1560  8FF8              ;
1561  8FF8              ;	IX contiene el puntero de impresión.
1562  8FF8              ;	DE contiene (Puntero_objeto).
1563  8FF8
1564  8FF8
1565  8FF8              Cargamos_registros_con_mov_masticado
1566  8FF8
1567  8FF8 ED 73 00 8C  	ld (Stack),sp
1568  8FFC ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1569  9000
1570  9000 D1           	pop de 															; DE contiene Puntero_objeto
1571  9001 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1572  9003
1573  9003 ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1574  9007 ED 7B 00 8C  	ld sp,(Stack)
1575  900B
1576  900B 7B           	ld a,e
1577  900C 82           	add d															; Comprueba si ya no hay datos en el almacén.
1578  900D
1579  900D CC A4 93     	call z,Reinicia_entidad_maliciosa
1580  9010
1581  9010 C9           	ret
1582  9011
1583  9011              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1584  9011              ;
1585  9011              ;	22/7/24
1586  9011
1587  9011              Cargamos_registros_con_explosion
1588  9011
1589  9011
1590  9011 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1591  9014 CD AE 90     	call Extrae_address
1592  9017
1593  9017 5D           	ld e,l
1594  9018 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1595  9019
1596  9019 DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1597  901D
1598  901D C9           	ret
1599  901E
1600  901E
1601  901E              Cargamos_registros_con_explosion_Amadeus
1602  901E
1603  901E 2A 74 89     	ld hl,(Pamm_Amadeus)
1604  9021 CD AE 90     	call Extrae_address
1605  9024
1606  9024 5D           	ld e,l
1607  9025 54           	ld d,h
1608  9026
1609  9026 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1610  902A
1611  902A C9           	ret
1612  902B
1613  902B              ; --------------------------------------------------------------------------------------------------------------
1614  902B              ;
1615  902B              ;	17/06/24
1616  902B              ;
1617  902B              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1618  902B              ;
1619  902B              ;	IX contiene el puntero de impresión.
1620  902B              ;	DE contiene (Puntero_objeto).
1621  902B
1622  902B
1623  902B              Cargamos_registros_con_mov_masticado_Amadeus
1624  902B
1625  902B ED 73 00 8C  	ld (Stack),sp
1626  902F ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1627  9033 D1           	pop de 															; DE contiene Puntero_objeto
1628  9034 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1629  9036 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1630  903A ED 7B 00 8C  	ld sp,(Stack)
1631  903E C9           	ret
1632  903F
1633  903F              ; ---------------------------------------------------------------------------------------------------------------------
1634  903F              ;
1635  903F              ;	18/6/24
1636  903F              ;
1637  903F              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1638  903F
1639  903F              Genera_datos_de_impresion_Amadeus
1640  903F
1641  903F 3A 71 89     	ld a,(Impacto_Amadeus)
1642  9042 A7           	and a
1643  9043 20 03        	jr nz,1F
1644  9045
1645  9045              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1646  9045              ; _apuntando a la correspondiente explosión.
1647  9045
1648  9045 CD 2B 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1649  9048
1650  9048 DD 7D        1 ld a,ixl
1651  904A E6 1F        	and $1f
1652  904C 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1653  904F
1654  904F 2A 20 8C     	ld hl,(Scanlines_album_SP)
1655  9052 E5           	push hl
1656  9053
1657  9053 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1658  9056 22 20 8C     	ld (Scanlines_album_SP),hl
1659  9059
1660  9059 CD F9 94     	call Genera_datos_de_impresion
1661  905C
1662  905C E1           	pop hl
1663  905D 22 20 8C     	ld (Scanlines_album_SP),hl
1664  9060
1665  9060 C9           	ret
1666  9061
1667  9061              ; ---------------------------------------------------------------------------------------------------------------------
1668  9061              ;
1669  9061              ;	13/03/24
1670  9061              ;
1671  9061              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1672  9061
1673  9061              Inicia_albumes_de_lineas
1674  9061
1675  9061 21 00 80     	ld hl,Scanlines_album
1676  9064 22 04 8C     	ld (Album_de_pintado),hl
1677  9067 22 20 8C     	ld (Scanlines_album_SP),hl
1678  906A
1679  906A 21 1A 81     	ld hl,Scanlines_album_2
1680  906D 22 06 8C     	ld (Album_de_borrado),hl
1681  9070
1682  9070 C9           	ret
1683  9071
1684  9071              Inicia_albumes_de_lineas_Amadeus
1685  9071
1686  9071 21 34 82     	ld hl,Amadeus_scanlines_album
1687  9074 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1688  9077 21 58 82     	ld hl,Amadeus_scanlines_album_2
1689  907A 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1690  907D
1691  907D C9           	ret
1692  907E
1693  907E              Inicia_albumes_de_disparos
1694  907E
1695  907E 21 7C 82     	ld hl,Disparos_scanlines_album
1696  9081 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1697  9084 21 B8 82     	ld hl,Disparos_scanlines_album_2
1698  9087 22 0E 8C     	ld (Album_de_borrado_disparos),hl
1699  908A
1700  908A 21 7C 82     	ld hl,Disparos_scanlines_album
1701  908D 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1702  9090
1703  9090 C9           	ret
1704  9091
1705  9091              ; ---------------------------------------------------------------------------------------------------------------------
1706  9091              ;
1707  9091              ; 8/1/23
1708  9091              ;
1709  9091              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1710  9091              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1711  9091              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1712  9091
1713  9091              ; Destruye HL y DE !!!!!
1714  9091
1715  9091              Inicia_punteros_de_cajas
1716  9091
1717  9091 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1718  9094 CD AE 90         call Extrae_address
1719  9097 22 F3 8B         ld (Puntero_store_caja),hl
1720  909A 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1721  909D 22 F7 8B     	ld (Indice_restore_caja),hl
1722  90A0 CD AE 90     	call Extrae_address
1723  90A3 22 F5 8B     	ld (Puntero_restore_caja),hl
1724  90A6 C9               ret
1725  90A7
1726  90A7              ; *************************************************************************************************************************************************************
1727  90A7              ;
1728  90A7              ; 8/1/23
1729  90A7              ;
1730  90A7              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1731  90A7
1732  90A7 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1733  90AA 22 29 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1734  90AD C9           	ret
1735  90AE
1736  90AE              ; *************************************************************************************************************************************************************
1737  90AE              ;
1738  90AE              ; 20/10/22
1739  90AE              ;
1740  90AE              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1741  90AE              ;
1742  90AE              ; Destruye el puntero y DE !!!!!
1743  90AE
1744  90AE 5E           Extrae_address ld e,(hl)
1745  90AF 23           	inc hl
1746  90B0 56           	ld d,(hl)
1747  90B1 2B           	dec hl
1748  90B2 EB           	ex de,hl
1749  90B3 C9           	ret
1750  90B4
1751  90B4              ; *************************************************************************************************************************************************************
1752  90B4              ;
1753  90B4              ;	20/1/24
1754  90B4              ;
1755  90B4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1756  90B4              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1757  90B4              ;
1758  90B4              ;   Destruye HL y BC !!!!!,
1759  90B4              ;
1760  90B4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1761  90B4              ;					"0" ..... Izquierda.
1762  90B4
1763  90B4              Inicia_Puntero_objeto
1764  90B4
1765  90B4 3A D2 8B     	ld a,(Cuad_objeto)
1766  90B7 E6 01        	and 1
1767  90B9 F5           	push af
1768  90BA CC D6 90     	call z,Inicia_puntero_objeto_izq
1769  90BD F1           	pop af
1770  90BE C8           	ret z
1771  90BF CD C3 90     	call Inicia_puntero_objeto_der
1772  90C2 C9           	ret
1773  90C3
1774  90C3              ; Arrancamos desde la parte izquierda de la pantalla.
1775  90C3              ; Iniciamos (Indice_Sprite_der).
1776  90C3
1777  90C3 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1778  90C6 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1779  90C9 CD AE 90     	call Extrae_address
1780  90CC 22 C5 8B     	ld (Puntero_objeto),hl
1781  90CF
1782  90CF 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1783  90D2 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1784  90D5 C9           	ret
1785  90D6
1786  90D6              ; Arrancamos desde la parte derecha de la pantalla.
1787  90D6              ; Iniciamos (Indice_Sprite_izq).
1788  90D6
1789  90D6 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1790  90D9 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1791  90DC CD AE 90     	call Extrae_address
1792  90DF 22 C5 8B     	ld (Puntero_objeto),hl
1793  90E2
1794  90E2 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1795  90E5 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1796  90E8 C9           	ret
1797  90E9
1798  90E9              ; **************************************************************************************************
1799  90E9              ;
1800  90E9              ;	06/07/24
1801  90E9              ;
1802  90E9              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1803  90E9
1804  90E9              Restore_entidad
1805  90E9
1806  90E9 2A F3 8B     	ld hl,(Puntero_store_caja)
1807  90EC 7E           	ld a,(hl)
1808  90ED A7           	and a
1809  90EE CC FC 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1810  90F1 28 F6        	jr z,Restore_entidad
1811  90F3
1812  90F3 11 B3 8B     	ld de,Bandeja_DRAW
1813  90F6 01 0C 00     	ld bc,12
1814  90F9 ED B0        	ldir
1815  90FB C9           	ret
1816  90FC
1817  90FC              ; **************************************************************************************************
1818  90FC              ;
1819  90FC              ;	08/05/23
1820  90FC              ;
1821  90FC              ;	Incrementamos los dos punteros de entidades. (+1).
1822  90FC
1823  90FC              Incrementa_punteros_de_cajas
1824  90FC
1825  90FC 2A F5 8B     	ld hl,(Puntero_restore_caja)
1826  90FF 22 F3 8B     	ld (Puntero_store_caja),hl
1827  9102 2A F7 8B     	ld hl,(Indice_restore_caja)
1828  9105 23           	inc hl
1829  9106 23           	inc hl
1830  9107 22 F7 8B     	ld (Indice_restore_caja),hl
1831  910A CD AE 90         call Extrae_address
1832  910D 22 F5 8B         ld (Puntero_restore_caja),hl
1833  9110 C9               ret
1834  9111
1835  9111              ; -----------------------------------------------------------
1836  9111
1837  9111              ; Teclado.
1838  9111
1839  9111 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1840  9113 DB FE        	in a,($fe)
1841  9115 E6 01        	and $01
1842  9117 28 02        	jr z,1f
1843  9119 18 F6        	jr Pulsa_ENTER
1844  911B C9           1 ret
1845  911C
1846  911C              ; **************************************************************************************************
1847  911C              ;
1848  911C              ; Temporización.
1849  911C
1850  911C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1851  911C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1852  911C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1853  911C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1854  911C
1855  911C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1856  911C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1857  911C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1858  911C
1859  911C              ; A partir de $4f61 no hace falta DELAY.
1860  911C
1861  911C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1862  911C
1863  911C              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1864  911C              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1865  911C              ;	LD A,B
1866  911C              ;	AND A
1867  911C              ;	JR NZ,wait
1868  911C              ;	RET
1869  911C
1870  911C              ; ---------------------------------------------------------------------------------------------------------------
1871  911C              ;
1872  911C              ;	13/07/24
1873  911C              ;
1874  911C
1875  911C              Inicia_Shield
1876  911C
1877  911C 21 48 8C     	ld hl,Datos_Shield
1878  911F 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1879  9122
1880  9122 7E           	ld a,(hl)
1881  9123 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1882  9126
1883  9126 3E 01        	ld a,1
1884  9128 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1885  912B
1886  912B C9           	ret
1887  912C
1888  912C              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1889  912C              ;
1890  912C              ;	4/6/24
1891  912C              ;
1892  912C              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1893  912C              ;
1894  912C              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1895  912C              ;
1896  912C
1897  912C              Actualiza_pantalla
1898  912C
1899  912C 3E 02        	ld a,2
1900  912E D3 FE        	out ($fe),a
1901  9130
1902  9130 3A 26 8C     	ld a,(Ctrl_3)
1903  9133 CB 57        	bit 2,a
1904  9135 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1905  9137
1906  9137              Borrando_entidades
1907  9137
1908  9137 2A 20 8C     	ld hl,(Scanlines_album_SP)
1909  913A CD AE 90     	call Extrae_address
1910  913D 24           	inc h
1911  913E 25           	dec h
1912  913F 28 05        	jr z,Pintando_entidades
1913  9141 CD EE 95     	call Pinta_Sprites
1914  9144 18 F1        	jr Borrando_entidades
1915  9146
1916  9146              Pintando_entidades
1917  9146
1918  9146 2A 22 8C     	ld hl,(India_SP)
1919  9149 2C           	inc l
1920  914A CD AE 90     	call Extrae_address
1921  914D 24           	inc h
1922  914E 25           	dec h
1923  914F 28 0E        	jr z,Ejecuta_escudo
1924  9151 1C           	inc e
1925  9152 1C           	inc e
1926  9153 ED 53 22 8C  	ld (India_SP),de
1927  9157 CD AE 90     	call Extrae_address
1928  915A CD EE 95     	call Pinta_Sprites
1929  915D 18 E7        	jr Pintando_entidades
1930  915F
1931  915F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1932  915F
1933  915F              Ejecuta_escudo
1934  915F
1935  915F 3A 4E 8C     	ld a,(Shield)
1936  9162 A7           	and a
1937  9163 20 2F        	jr nz,Aplica_Shield
1938  9165
1939  9165              Borrando_Amadeus
1940  9165
1941  9165 21 26 8C     	ld hl,Ctrl_3
1942  9168 CB 6E        	bit 5,(hl)
1943  916A 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1944  916C
1945  916C 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1946  916F CD AE 90     	call Extrae_address
1947  9172 24           	inc h
1948  9173 25           	dec h
1949  9174 28 03        	jr z,Pintando_Amadeus
1950  9176 CD EE 95     	call Pinta_Sprites
1951  9179
1952  9179              Pintando_Amadeus
1953  9179
1954  9179 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1955  917C CD AE 90     	call Extrae_address
1956  917F 24           	inc h
1957  9180 25           	dec h
1958  9181 28 03        	jr z,1F
1959  9183 CD EE 95     	call Pinta_Sprites
1960  9186
1961  9186              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1962  9186
1963  9186 21 26 8C     1 ld hl,Ctrl_3
1964  9189 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1965  918B CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1966  918D CB AE        	res 5,(hl)
1967  918F
1968  918F 3E 01        	ld a,1												; Borde azul.
1969  9191 D3 FE        	out ($fe),a
1970  9193
1971  9193 C9           	ret
1972  9194
1973  9194              Aplica_Shield
1974  9194
1975  9194              ;	Bit 1 "1" (Shield_3) Sólo borra.
1976  9194              ;		  "0"     ""     Borra/Pinta.
1977  9194              ;	Bit 2    ""  RET.	 No borra, no pinta.
1978  9194
1979  9194 21 50 8C     	ld hl,Shield_3
1980  9197
1981  9197 CB 5E        	bit 3,(hl)
1982  9199 20 DE        	jr nz,Pintando_Amadeus
1983  919B
1984  919B CB 56        	bit 2,(hl)
1985  919D 20 E7        	jr nz,1B
1986  919F
1987  919F CB 4E        	bit 1,(hl)
1988  91A1 C4 A8 91     	call nz,Borra_Amadeus_shield
1989  91A4
1990  91A4 28 BF        	jr z,Borrando_Amadeus
1991  91A6 18 DE        	jr 1B
1992  91A8
1993  91A8              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1994  91A8
1995  91A8              Borra_Amadeus_shield
1996  91A8
1997  91A8 3A 26 8C     	ld a,(Ctrl_3)
1998  91AB CB 6F        	bit 5,a
1999  91AD 28 08        	jr z,1F
2000  91AF
2001  91AF 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
2002  91B2 CD AE 90     	call Extrae_address
2003  91B5 18 06        	jr 2F
2004  91B7
2005  91B7 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
2006  91BA CD AE 90     	call Extrae_address
2007  91BD
2008  91BD CD EE 95     2 call Pinta_Sprites
2009  91C0
2010  91C0 AF           	xor a
2011  91C1 3C           	inc a											; Asegura NZ en la salida de la rutina.
2012  91C2
2013  91C2 C9           	ret
2014  91C3
2015  91C3              Pinta_Amadeus_shield
2016  91C3
2017  91C3 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
2018  91C6 CD AE 90     	call Extrae_address
2019  91C9 CD EE 95     	call Pinta_Sprites
2020  91CC
2021  91CC AF           	xor a
2022  91CD 3C           	inc a											; Asegura NZ en la salida de la rutina.
2023  91CE
2024  91CE C9           	ret
2025  91CF
2026  91CF              Borra_Pinta_Amadeus_shield
2027  91CF
2028  91CF CD A8 91     	call Borra_Amadeus_shield
2029  91D2 CD C3 91     	call Pinta_Amadeus_shield
2030  91D5 C9           	ret
2031  91D6
2032  91D6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2033  91D6              ;
2034  91D6              ;	19/6/24
2035  91D6              ;
2036  91D6
2037  91D6              Teclado
2038  91D6
2039  91D6              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2040  91D6
2041  91D6 3E F7        	ld a,$f7												; "5" para disparar.
2042  91D8 DB FE        	in a,($fe)
2043  91DA E6 10        	and $10
2044  91DC
2045  91DC CC 04 A1     	call z,Genera_disparo_Amadeus
2046  91DF
2047  91DF 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2048  91E1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2049  91E3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2050  91E5 CC 5B 9D         call z,Amadeus_a_izquierda
2051  91E8
2052  91E8 3E F7        	ld a,$f7
2053  91EA DB FE        	in a,($fe)
2054  91EC E6 01        	and $01
2055  91EE C8           	ret z
2056  91EF
2057  91EF 3E F7        	ld a,$f7
2058  91F1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2059  91F3 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2060  91F5 CC 73 9D     	call z,Amadeus_a_derecha
2061  91F8
2062  91F8 C9           	ret
2063  91F9
2064  91F9              ; ------------------------------------------------------------------------------------------------------------------------
2065  91F9              ;
2066  91F9              ;	06/07/24
2067  91F9              ;
2068  91F9
2069  91F9              Genera_explosion
2070  91F9
2071  91F9 21 36 8C     	ld hl,Clock_explosion
2072  91FC 35           	dec (hl)
2073  91FD 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2074  91FF
2075  91FF              Borra_entidad_colisionada
2076  91FF
2077  91FF CD 08 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2078  9202 CD 11 90     	call Cargamos_registros_con_explosion
2079  9205 CD F9 94     	call Genera_datos_de_impresion
2080  9208
2081  9208 AF           	xor a
2082  9209 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2083  920A
2084  920A C9           	ret
2085  920B
2086  920B              Siguiente_frame_explosion
2087  920B
2088  920B 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2089  920D
2090  920D              ; Avanza Frame de explosión.
2091  920D
2092  920D 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2093  9210 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2094  9213
2095  9213 79           	ld a,c
2096  9214 95           	sub l
2097  9215 20 0B        	jr nz,1F
2098  9217
2099  9217              ; Fín de la entidad !!!!!!!!!!!!!
2100  9217
2101  9217 21 FA 8B     	ld hl,Numero_parcial_de_entidades
2102  921A 35           	dec (hl)
2103  921B 23           	inc hl
2104  921C 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2105  921D
2106  921D CD 79 93     	call Limpiamos_bandeja_DRAW
2107  9220 18 DD        	jr Borra_entidad_colisionada
2108  9222
2109  9222 23           1 inc hl
2110  9223 23           	inc hl
2111  9224 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2112  9227 18 D6        	jr Borra_entidad_colisionada
2113  9229
2114  9229              ; ----- ----- ----- ----- -----
2115  9229
2116  9229              Genera_explosion_Amadeus
2117  9229
2118  9229 21 37 8C     	ld hl,Clock_explosion_Amadeus
2119  922C 35           	dec (hl)
2120  922D 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2121  922F
2122  922F              Borra_Amadeus_impactado
2123  922F
2124  922F CD 7F 8E     	call Change_Amadeus
2125  9232 CD 1E 90     	call Cargamos_registros_con_explosion_Amadeus
2126  9235 CD 3F 90     	call Genera_datos_de_impresion_Amadeus
2127  9238
2128  9238 21 26 8C     	ld hl,Ctrl_3
2129  923B CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2130  923D
2131  923D AF           	xor a
2132  923E 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2133  923F
2134  923F C9           	ret
2135  9240
2136  9240              Siguiente_frame_explosion_Amadeus
2137  9240
2138  9240 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2139  9242
2140  9242              ; Avanza Frame de explosión.
2141  9242
2142  9242 2A 74 89     	ld hl,(Pamm_Amadeus)
2143  9245 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2144  9248
2145  9248 79           	ld a,c
2146  9249 95           	sub l
2147  924A 20 0B        	jr nz,1F
2148  924C
2149  924C              ; Fín de Amadeus !!!!!!!!!!!!!
2150  924C              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2151  924C
2152  924C AF           	xor a
2153  924D 32 71 89     	ld (Impacto_Amadeus),a
2154  9250 21 26 8C     	ld hl,Ctrl_3
2155  9253 CB F6        	set 6,(hl)
2156  9255
2157  9255 18 D8        	jr Borra_Amadeus_impactado
2158  9257
2159  9257 23           1 inc hl
2160  9258 23           	inc hl
2161  9259 22 74 89     	ld (Pamm_Amadeus),hl
2162  925C 18 D1        	jr Borra_Amadeus_impactado
2163  925E
2164  925E              ; ---------------------------------------------------------------
2165  925E
2166  925E              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 925E              ; ******************************************************************************************************************************************************************************************
   2+ 925E              ;
   3+ 925E              ;   21/04/24
   4+ 925E              ;
   5+ 925E              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 925E              ;   (XOR) bit a bit.
   7+ 925E              ;
   8+ 925E              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 925E
  10+ 925E              Derivando_RND
  11+ 925E
  12+ 925E 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9261
  14+ 9261 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9263 C5               push bc
  16+ 9264              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9264 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9267              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9267
  20+ 9267 A7           6 and a                                 ; Carry a "0".
  21+ 9268 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 926A 30 02            jr nc,1F
  23+ 926C
  24+ 926C CB C1            set 0,c
  25+ 926E
  26+ 926E 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 926F E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9271 5F               ld e,a
  29+ 9272
  30+ 9272 7A               ld a,d
  31+ 9273 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9275 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9277
  34+ 9277 CB 3F            srl a
  35+ 9279
  36+ 9279 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 927A
  38+ 927A 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 927B 28 04            jr z,4F
  40+ 927D
  41+ 927D CB FF            set 7,a
  42+ 927F 18 02            jr 5F
  43+ 9281
  44+ 9281 CB BF        4 res 7,a
  45+ 9283
  46+ 9283 CB 21        5 sla c
  47+ 9285 10 E0            djnz 6B
  48+ 9287
  49+ 9287 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9288
  51+ 9288 77               ld (hl),a
  52+ 9289 23               inc hl
  53+ 928A C1               pop bc
  54+ 928B 10 D4            djnz 3B
  55+ 928D
  56+ 928D C9               ret
  57+ 928E
  58+ 928E
  59+ 928E
# file closed: RND_Derivando.asm
2167  928E              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 928E              ;---------------------------------------------------------------------------------------------------------------
   2+ 928E              ;
   3+ 928E              ;   8/3/24
   4+ 928E              ;
   5+ 928E              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 928E              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 928E              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 928E              ;	_ de la 1ª entidad del Nivel.
   9+ 928E              ;
  10+ 928E              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 928E
  12+ 928E              ;	MODIFICA: HL,DE y A.
  13+ 928E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 928E
  15+ 928E              Inicializa_Nivel
  16+ 928E
  17+ 928E 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9291 CD AE 90     	call Extrae_address
  19+ 9294 7E           	ld a,(hl)
  20+ 9295 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9298 23           	inc hl
  22+ 9299 CD A6 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 929C 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 929F CD AF 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92A2
  26+ 92A2 CD C0 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92A5 C9           	ret
  28+ 92A6
  29+ 92A6              ; ----------------------
  30+ 92A6
  31+ 92A6 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92A9 01 04 00     	ld bc,4
  33+ 92AC ED B0        	ldir
  34+ 92AE C9           	ret
  35+ 92AF
  36+ 92AF 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92B0 CD 4A 94         call Calcula_salto_en_BC
  38+ 92B3 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92B6 A7               and a
  40+ 92B7 ED 4A            adc hl,bc
  41+ 92B9 CD AE 90         call Extrae_address
  42+ 92BC 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 92BF C9               ret
  44+ 92C0
  45+ 92C0 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92C3 CD 4A 94     	call Calcula_salto_en_BC
  47+ 92C6 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92C9 A7               and a
  49+ 92CA ED 4A            adc hl,bc
  50+ 92CC CD AE 90         call Extrae_address
  51+ 92CF 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92D2 C9           	ret
  53+ 92D3
  54+ 92D3              ;---------------------------------------------------------------------------------------------------------------
  55+ 92D3              ;
  56+ 92D3              ;   5/1/24
  57+ 92D3              ;
  58+ 92D3              ;	Destruye A,BC,HL,DE
  59+ 92D3
  60+ 92D3              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92D3              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92D3
  63+ 92D3              Inicia_Entidades
  64+ 92D3
  65+ 92D3              ; Preparamos los punteros de las cajas de entidades:
  66+ 92D3
  67+ 92D3 CD 91 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92D6              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92D6 CD 92 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92D9
  71+ 92D9 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92DC
  73+ 92DC 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92DF
  75+ 92DF CD F8 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92E2
  77+ 92E2 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92E5
  79+ 92E5              ; En este punto:
  80+ 92E5              ;
  81+ 92E5              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92E5              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92E5
  84+ 92E5 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92E6
  86+ 92E6 7E           	ld a,(hl)
  87+ 92E7 CD 64 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92EA
  89+ 92EA CD 5C 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92ED
  91+ 92ED              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92ED
  93+ 92ED CD 1A 94     	call Busca_mov_masticados_segun_tipo
  94+ 92F0
  95+ 92F0 A7           	and a
  96+ 92F1 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92F3
  98+ 92F3              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92F3
 100+ 92F3              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92F3              ;	_ de este tipo de entidad.
 102+ 92F3
 103+ 92F3 CD F2 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92F6 CD FF 9E     	call Transfiere_datos_de_contadores
 105+ 92F9
 106+ 92F9 18 06        	jr 4F
 107+ 92FB
 108+ 92FB CD A4 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92FE
 110+ 92FE              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92FE              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92FE              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92FE              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92FE              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92FE
 116+ 92FE CD D8 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9301              ;																; _ Mov_masticados ya generados.
 118+ 9301
 119+ 9301 CD F8 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9304
 121+ 9304 DD E5        	push ix
 122+ 9306 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9307
 124+ 9307 D5           	push de
 125+ 9308 CD CD 94     	call Genera_coordenadas
 126+ 930B
 127+ 930B ED 5B 20 8C  	ld de,(Scanlines_album_SP)
 128+ 930F CD 08 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9312 D1           	pop de
 130+ 9313
 131+ 9313 CD F9 94     	call Genera_datos_de_impresion
 132+ 9316              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9316              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9316              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9316              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9316
 137+ 9316 CD 9C 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9319
 139+ 9319              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9319
 141+ 9319 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 931D CD 89 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9320
 144+ 9320 CD 79 93     	call Limpiamos_bandeja_DRAW
 145+ 9323 CD FC 90     	call Incrementa_punteros_de_cajas
 146+ 9326
 147+ 9326              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9326              ; _ entidad del Nivel.
 149+ 9326
 150+ 9326 3A 27 8C     	ld a,(Ctrl_4)
 151+ 9329 E6 F0        	and $f0
 152+ 932B 32 27 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 932E
 154+ 932E              ; Siguiente entidad del Nivel.
 155+ 932E
 156+ 932E 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9331 23           	inc hl 														; _ entidad del Nivel.
 158+ 9332
 159+ 9332 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9333
 161+ 9333 10 A7        	djnz 2B
 162+ 9335
 163+ 9335 C9           	ret
 164+ 9336
 165+ 9336              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9336              ;
 167+ 9336              ;	27/5/24
 168+ 9336              ;
 169+ 9336              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9336              ;
 171+ 9336
 172+ 9336              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9336              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9336
 175+ 9336 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9339 CD 5C 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 933C
 178+ 933C
 179+ 933C              Construye_movimientos_masticados_Amadeus
 180+ 933C
 181+ 933C 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 933F CD EB 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9342              ;															; _ el (Contador_de_mov_masticados).
 184+ 9342 CD B4 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9345              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9345
 187+ 9345              ; Generamos movimientos masticados de Amadeus.
 188+ 9345
 189+ 9345 06 79        	ld b,121												; $0079, 121d.
 190+ 9347
 191+ 9347 C5           1 push bc
 192+ 9348 CD 11 97     	call Draw
 193+ 934B CD D0 8F     	call Guarda_movimiento_masticado
 194+ 934E
 195+ 934E CD 85 9A     	call Mov_right
 196+ 9351 CD 85 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9354
 198+ 9354 C1           	pop bc
 199+ 9355 10 F0        	djnz 1B
 200+ 9357
 201+ 9357              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9357
 203+ 9357              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9357              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9357
 206+ 9357 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 935A 01 08 00     	ld bc,8
 208+ 935D A7           	and a
 209+ 935E ED 42        	sbc hl,bc
 210+ 9360 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9363
 212+ 9363 C9           	ret
 213+ 9364
 214+ 9364              ; ---------------------------------------------------------------------
 215+ 9364              ;
 216+ 9364              ;	10/02/24
 217+ 9364              ;
 218+ 9364              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9364              ;
 220+ 9364              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9364
 222+ 9364              Definicion_segun_tipo
 223+ 9364
 224+ 9364 CD 4A 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9367 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 936A CD 52 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 936D C9           	ret
 228+ 936E
 229+ 936E              ; ---------------------------------------------------------------------
 230+ 936E              ;
 231+ 936E              ;	6/7/24
 232+ 936E
 233+ 936E
 234+ 936E              Store_Restore_cajas
 235+ 936E
 236+ 936E ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 9372 CD 89 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9375 CD FC 90     	call Incrementa_punteros_de_cajas
 239+ 9378 C9           	ret
 240+ 9379
 241+ 9379              ; ---------------------------------------------------------------------
 242+ 9379              ;
 243+ 9379              ;	23/6/24
 244+ 9379              ;
 245+ 9379              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9379              ;
 247+ 9379              ;	MODIFY: HL
 248+ 9379
 249+ 9379              Limpiamos_bandeja_DRAW
 250+ 9379
 251+ 9379 ED 73 00 8C  	ld (Stack),sp
 252+ 937D 31 D8 8B     	ld sp,Vel_left
 253+ 9380
 254+ 9380 AF           	xor a
 255+ 9381 67           	ld h,a
 256+ 9382 6F           	ld l,a
 257+ 9383
 258+ 9383 E5           	push hl
 259+ 9384 E5           	push hl
 260+ 9385 E5           	push hl
 261+ 9386 E5           	push hl
 262+ 9387 E5           	push hl
 263+ 9388 E5           	push hl
 264+ 9389 E5           	push hl
 265+ 938A E5           	push hl
 266+ 938B E5           	push hl
 267+ 938C E5           	push hl
 268+ 938D E5           	push hl
 269+ 938E E5           	push hl
 270+ 938F E5           	push hl
 271+ 9390 E5           	push hl
 272+ 9391 E5           	push hl
 273+ 9392 E5           	push hl
 274+ 9393 E5           	push hl
 275+ 9394 E5           	push hl
 276+ 9395
 277+ 9395 33           	inc sp
 278+ 9396
 279+ 9396 E5           	push hl
 280+ 9397 ED 7B 00 8C  	ld sp,(Stack)
 281+ 939B
 282+ 939B C9           	ret
 283+ 939C
 284+ 939C              ; ---------------------------------------------------------------------
 285+ 939C              ;
 286+ 939C              ;	24/03/24
 287+ 939C
 288+ 939C 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 939F 2B           	dec hl
 290+ 93A0 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93A3 C9           	ret
 292+ 93A4
 293+ 93A4              ; ---------------------------------------------------------------------
 294+ 93A4              ;
 295+ 93A4              ;	8/5/24
 296+ 93A4
 297+ 93A4              Reinicia_entidad_maliciosa
 298+ 93A4
 299+ 93A4              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93A4
 301+ 93A4 CD F2 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93A7 CD FF 9E     	call Transfiere_datos_de_contadores
 303+ 93AA
 304+ 93AA              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93AA
 306+ 93AA 3A B3 8B     	ld a,(Tipo)
 307+ 93AD CD 64 93     	call Definicion_segun_tipo
 308+ 93B0
 309+ 93B0 E5           	push hl
 310+ 93B1 DD E1        	pop ix
 311+ 93B3
 312+ 93B3 DD 6E 0B     	ld l,(ix+11)
 313+ 93B6 DD 66 0C     	ld h,(ix+12)
 314+ 93B9
 315+ 93B9 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93BC
 317+ 93BC CD F8 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93BF
 319+ 93BF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93BF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93BF              ; Ejemplos.
 322+ 93BF
 323+ 93BF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93BF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93BF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93BF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93BF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93BF
 329+ 93BF 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 93C2 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93C4
 332+ 93C4 7E           	ld a,(hl)
 333+ 93C5 CB 2F        	sra a
 334+ 93C7 CB 2F        	sra a
 335+ 93C9
 336+ 93C9 32 BE 8B     	ld (Velocidad),a
 337+ 93CC
 338+ 93CC 3E 40        	ld a,$40
 339+ 93CE BE           	cp (hl)
 340+ 93CF C0           	ret nz
 341+ 93D0
 342+ 93D0              ; Límitador.
 343+ 93D0
 344+ 93D0              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93D0
 346+ 93D0 CB 2E        	sra (hl)
 347+ 93D2 21 BE 8B     	ld hl,Velocidad
 348+ 93D5 CB 2E        	sra (hl)
 349+ 93D7
 350+ 93D7 C9           	ret
 351+ 93D8
 352+ 93D8              ; ---------------------------------------------------------------------
 353+ 93D8              ;
 354+ 93D8              ;	22/01/24
 355+ 93D8
 356+ 93D8 21 27 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93DB CB 46        	bit 0,(hl)
 358+ 93DD 20 0D        	jr nz,1F
 359+ 93DF CB 4E        	bit 1,(hl)
 360+ 93E1 20 0C        	jr nz,2F
 361+ 93E3 CB 56        	bit 2,(hl)
 362+ 93E5 20 0B        	jr nz,3F
 363+ 93E7 CB 5E        	bit 3,(hl)
 364+ 93E9 20 0A        	jr nz,4F
 365+ 93EB C9           	ret
 366+ 93EC
 367+ 93EC CB E6        1 set 4,(hl)
 368+ 93EE C9           	ret
 369+ 93EF CB EE        2 set 5,(hl)
 370+ 93F1 C9           	ret
 371+ 93F2 CB F6        3 set 6,(hl)
 372+ 93F4 C9           	ret
 373+ 93F5 CB FE        4 set 7,(hl)
 374+ 93F7 C9           	ret
 375+ 93F8
 376+ 93F8              ; ---------------------------------------------------------------------
 377+ 93F8              ;
 378+ 93F8              ;	23/01/24
 379+ 93F8              ;
 380+ 93F8              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93F8              ;
 382+ 93F8              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93F8              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93F8              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93F8              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93F8
 387+ 93F8              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93F8
 389+ 93F8 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93F9 3D           	dec a
 391+ 93FA 20 06        	jr nz,1F
 392+ 93FC
 393+ 93FC              ; --- Tipo_1
 394+ 93FC
 395+ 93FC 21 27 8C     	ld hl,Ctrl_4
 396+ 93FF CB C6        	set 0,(hl)
 397+ 9401 C9           	ret
 398+ 9402
 399+ 9402 3D           1 dec a
 400+ 9403 20 06        	jr nz,2F
 401+ 9405
 402+ 9405              ; --- Tipo_2
 403+ 9405
 404+ 9405 21 27 8C     	ld hl,Ctrl_4
 405+ 9408 CB CE        	set 1,(hl)
 406+ 940A C9           	ret
 407+ 940B
 408+ 940B 3D           2 dec a
 409+ 940C 20 06        	jr nz,3F
 410+ 940E
 411+ 940E              ; --- Tipo_3
 412+ 940E
 413+ 940E 21 27 8C     	ld hl,Ctrl_4
 414+ 9411 CB D6        	set 2,(hl)
 415+ 9413 C9           	ret
 416+ 9414
 417+ 9414              ; --- Tipo_3
 418+ 9414
 419+ 9414 21 27 8C     3 ld hl,Ctrl_4
 420+ 9417 CB D6        	set 2,(hl)
 421+ 9419 C9           	ret
 422+ 941A
 423+ 941A              ; ---------------------------------------------------------------------
 424+ 941A              ;
 425+ 941A              ;	22/01/24
 426+ 941A
 427+ 941A 21 27 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 941D CB 46        	bit 0,(hl)
 429+ 941F 20 0E        	jr nz,1F
 430+ 9421
 431+ 9421 CB 4E        	bit 1,(hl)
 432+ 9423 20 10        	jr nz,2F
 433+ 9425
 434+ 9425 CB 56        	bit 2,(hl)
 435+ 9427 20 12        	jr nz,3F
 436+ 9429
 437+ 9429 CB 5E        	bit 3,(hl)
 438+ 942B 20 14        	jr nz,4F
 439+ 942D 18 19        	jr 6F
 440+ 942F
 441+ 942F              ; Entidad_de_Tipo_1.
 442+ 942F
 443+ 942F CB 66        1 bit 4,(hl)
 444+ 9431 28 15        	jr z,6F
 445+ 9433 18 10        	jr 5F
 446+ 9435
 447+ 9435              ; Entidad_de_Tipo_2.
 448+ 9435
 449+ 9435 CB 6E        2 bit 5,(hl)
 450+ 9437 28 0F        	jr z,6F
 451+ 9439 18 0A        	jr 5F
 452+ 943B
 453+ 943B              ; Entidad_de_Tipo_3.
 454+ 943B
 455+ 943B CB 76        3 bit 6,(hl)
 456+ 943D 28 09        	jr z,6F
 457+ 943F 18 04        	jr 5F
 458+ 9441
 459+ 9441              ; Entidad_de_Tipo_4.
 460+ 9441
 461+ 9441 CB 7E        4 bit 7,(hl)
 462+ 9443 28 03        	jr z,6F
 463+ 9445
 464+ 9445              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9445
 466+ 9445 AF           5 xor a
 467+ 9446 3C           	inc a
 468+ 9447 C9           	ret
 469+ 9448
 470+ 9448              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9448
 472+ 9448 AF           6 xor a
 473+ 9449 C9           	ret
 474+ 944A
 475+ 944A              ;	------------------------------------------------------------------------------------
 476+ 944A              ;
 477+ 944A              ;	12/01/24
 478+ 944A              ;
 479+ 944A              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 944A              ;
 481+ 944A              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 944A              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 944A
 484+ 944A CB 27        Calcula_salto_en_BC sla a
 485+ 944C D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 944E 4F           	ld c,a
 487+ 944F 06 00        	ld b,0
 488+ 9451 C9           	ret
 489+ 9452
 490+ 9452              ; ------------------------------------------------------------------
 491+ 9452              ;
 492+ 9452              ;	19/1/24
 493+ 9452              ;
 494+ 9452              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9452              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9452
 497+ 9452 A7           Situa_en_datos_de_definicion and a
 498+ 9453 ED 4A        	adc hl,bc
 499+ 9455 CD AE 90     	call Extrae_address
 500+ 9458 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 945B C9           	ret
 502+ 945C
 503+ 945C              ; ------------------------------------------------------------------
 504+ 945C
 505+ 945C              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 945C              ; 	inc de
 507+ 945C              ; 	inc de
 508+ 945C              ; 	ex de,hl
 509+ 945C              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 945C              ; 	ret
 511+ 945C
 512+ 945C              ; ----------------------------------------------------------------------------------------------------------
 513+ 945C              ;
 514+ 945C              ;	24/6/24
 515+ 945C              ;
 516+ 945C              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 945C              ;	_ de entidad.
 518+ 945C              ;
 519+ 945C              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 945C              ;
 521+ 945C              ;
 522+ 945C              ;	MODIFICA: HL,DE y BC
 523+ 945C
 524+ 945C
 525+ 945C              Definicion_de_entidad_a_bandeja_DRAW
 526+ 945C
 527+ 945C 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 945F 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9460 12           	ld (de),a
 530+ 9461 23           	inc hl
 531+ 9462              ;
 532+ 9462 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9465 01 02 00     	ld bc,2
 534+ 9468 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 946A              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 946A 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 946D 7E           	ld a,(hl)
 538+ 946E 12           	ld (de),a
 539+ 946F 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9470
 541+ 9470 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 9473 01 04 00     	ld bc,4
 543+ 9476 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9478
 545+ 9478 11 D0 8B     	ld de,Posicion_inicio
 546+ 947B 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 947E ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9480
 549+ 9480 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9483 01 02 00     	ld bc,2
 551+ 9486 ED B0        	ldir
 552+ 9488
 553+ 9488 C9           	ret
 554+ 9489
 555+ 9489              ; ----------------------------------------------------------------------------------------------------------
 556+ 9489              ;
 557+ 9489              ;	1/8/24
 558+ 9489              ;
 559+ 9489
 560+ 9489              Parametros_de_bandeja_DRAW_a_caja
 561+ 9489
 562+ 9489 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 948C 01 0C 00     	ld bc,12
 564+ 948F ED B0        	ldir
 565+ 9491 C9           	ret
 566+ 9492
 567+ 9492              ;---------------------------------------------------------------------------------------------------------------
 568+ 9492              ;
 569+ 9492              ;	5/1/24
 570+ 9492              ;
 571+ 9492              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9492              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9492              ;
 574+ 9492              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9492              ;
 576+ 9492              ;	(Numero_parcial_de_entidades)="7".
 577+ 9492              ;
 578+ 9492              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9492              ;
 580+ 9492              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9492              ;
 582+ 9492              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9492              ;	MODIFICA: A y B.
 584+ 9492              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9492
 586+ 9492              Inicializa_Numero_parcial_de_entidades
 587+ 9492
 588+ 9492              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9492
 590+ 9492 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 9495 A7           	and a
 592+ 9496
 593+ 9496              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9496              ;	jr z,$
 595+ 9496              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9496
 597+ 9496 20 03        	jr nz,3F
 598+ 9498
 599+ 9498              ; ---------- ---------- ----------
 600+ 9498
 601+ 9498              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9498              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9498
 604+ 9498 CD 8E 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 949B
 606+ 949B              ; ---------- ---------- ----------
 607+ 949B
 608+ 949B 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 949E FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94A0 38 08        	jr c,1F
 611+ 94A2
 612+ 94A2              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94A2              ; Actualizamos variables.
 614+ 94A2
 615+ 94A2 3E 07        	ld a,7
 616+ 94A4 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94A7 47           	ld b,a
 618+ 94A8 18 04        	jr 2F
 619+ 94AA
 620+ 94AA              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94AA              ; (Numero_de_entidades)="0".
 622+ 94AA
 623+ 94AA 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94AD 47           	ld b,a
 625+ 94AE C9           2 ret
 626+ 94AF
# file closed: Rutinas_de_inicio_y_niveles.asm
2168  94AF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94AF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94AF              ;
   3+ 94AF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94AF              ;
   5+ 94AF              ; *****************************************************************************************************************************************************************************************
   6+ 94AF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94AF
   8+ 94AF 7C           calcula_tercio ld a,h
   9+ 94B0 E6 18        	and $18
  10+ 94B2 CB 2F        	sra a
  11+ 94B4 CB 2F        	sra a
  12+ 94B6 CB 2F        	sra a
  13+ 94B8 C9           	ret
  14+ 94B9
# file closed: calcula_tercio.asm
2169  94B9              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94B9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94B9              ;
   3+ 94B9              ;
   4+ 94B9              ;	CLS.
   5+ 94B9              ;
   6+ 94B9              ;	Limpia la pantalla y define sus atributos.
   7+ 94B9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94B9              ;
   9+ 94B9              ;	COLORES: 0 ..... NEGRO
  10+ 94B9              ;    		 1 ..... AZUL
  11+ 94B9              ; 			 2 ..... ROJO
  12+ 94B9              ;			 3 ..... MAGENTA
  13+ 94B9              ; 			 4 ..... VERDE
  14+ 94B9              ; 			 5 ..... CIAN
  15+ 94B9              ;			 6 ..... AMARILLO
  16+ 94B9              ; 			 7 ..... BLANCO
  17+ 94B9              ;
  18+ 94B9              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94B9              ;
  20+ 94B9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94B9
  22+ 94B9
  23+ 94B9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94BC 11 01 40     	LD DE,$4001
  25+ 94BF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94C2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94C4 ED B0        	LDIR
  28+ 94C6 01 FF 02     	LD BC,767
  29+ 94C9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94CA ED B0        	LDIR
  31+ 94CC C9           	ret
  32+ 94CD
# file closed: Cls.asm
2170  94CD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94CD              ; ------------------------------------------------------------------------
   2+ 94CD              ;
   3+ 94CD              ;	30/1/24
   4+ 94CD              ;
   5+ 94CD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94CD              ;	Fila superior "0", Columna izquierda "0".
   7+ 94CD              ;
   8+ 94CD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94CD              ;
  10+ 94CD              ;	Modifica: A,BC y DE.
  11+ 94CD
  12+ 94CD 7D           Genera_coordenadas ld a,l
  13+ 94CE E6 1F        	and $1f
  14+ 94D0 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94D3
  16+ 94D3 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94D4 FE 40        	cp $40
  18+ 94D6 38 1C        	jr c,4F
  19+ 94D8
  20+ 94D8 CD AF 94     	call calcula_tercio
  21+ 94DB 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94DC
  23+ 94DC 1E 00        	ld e,0
  24+ 94DE 7D           	ld a,l
  25+ 94DF E6 E0        	and $e0
  26+ 94E1 28 01        	jr z,1F
  27+ 94E3 04           	inc b
  28+ 94E4
  29+ 94E4 04           1 inc b
  30+ 94E5 05           	dec b
  31+ 94E6 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94E8              ;														; _ , salimos.
  33+ 94E8 1C           3 inc e
  34+ 94E9 D6 20        	sub 32
  35+ 94EB 20 FB        	jr nz,3B
  36+ 94ED 10 F5        	djnz 1B
  37+ 94EF
  38+ 94EF 7B           2 ld a,e
  39+ 94F0 32 B5 8B     	ld (Coordenada_y),a
  40+ 94F3 C9           	ret
  41+ 94F4
  42+ 94F4 AF           4 xor a
  43+ 94F5 32 B5 8B     	ld (Coordenada_y),a
  44+ 94F8 C9           	ret
  45+ 94F9
# file closed: Genera_coordenadas.asm
2171  94F9              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94F9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94F9              ;
   3+ 94F9              ;	11/03/24
   4+ 94F9              ;
   5+ 94F9              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94F9              ;   DE contiene Puntero_objeto.
   7+ 94F9              ;   IX contiene el Puntero de impresión.
   8+ 94F9
   9+ 94F9              Genera_datos_de_impresion
  10+ 94F9
  11+ 94F9 ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94FD
  13+ 94FD 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9500 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9502
  16+ 9502 2A 20 8C         ld hl,(Scanlines_album_SP)
  17+ 9505
  18+ 9505 3E 05            ld a,5
  19+ 9507 85               add l
  20+ 9508 6F               ld l,a
  21+ 9509
  22+ 9509 F9               ld sp,hl
  23+ 950A 22 20 8C         ld (Scanlines_album_SP),hl
  24+ 950D
  25+ 950D 21 00 00         ld hl,0
  26+ 9510
  27+ 9510 DD E5            push ix
  28+ 9512 3B               dec sp
  29+ 9513 ED 7A            adc hl,sp
  30+ 9515 D5               push de
  31+ 9516
  32+ 9516              ; Recuperamos SP.
  33+ 9516
  34+ 9516 ED 7B 00 8C      ld sp,(Stack)
  35+ 951A
  36+ 951A E5               push hl
  37+ 951B F1               pop af
  38+ 951C 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 951D
  40+ 951D              ; Tenemos el encabezado listo.
  41+ 951D              ; Preparamos registros para generar los scanlines.
  42+ 951D
  43+ 951D DD E5            push ix
  44+ 951F E1               pop hl                                          ; 1er scanline en HL.
  45+ 9520
  46+ 9520 ED 5B 20 8C      ld de,(Scanlines_album_SP)
  47+ 9524
  48+ 9524              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9524              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9524
  51+ 9524 7C               ld a,h
  52+ 9525 FE 50            cp $50
  53+ 9527 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9529
  55+ 9529 20 05            jr nz,2F
  56+ 952B
  57+ 952B 7D               ld a,l
  58+ 952C FE E0            cp $e0
  59+ 952E 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9530
  61+ 9530 7D           2 ld a,l
  62+ 9531 FE C0            cp $c0
  63+ 9533 D2 C5 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9536
  65+ 9536              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9536
  67+ 9536 CD C3 99         call NextScan
  68+ 9539 EB               ex de,hl
  69+ 953A
  70+ 953A 73               ld (hl),e
  71+ 953B 23               inc hl
  72+ 953C 72               ld (hl),d
  73+ 953D 23               inc hl
  74+ 953E
  75+ 953E EB               ex de,hl
  76+ 953F
  77+ 953F CD C3 99         call NextScan
  78+ 9542 EB               ex de,hl
  79+ 9543
  80+ 9543 73               ld (hl),e
  81+ 9544 23               inc hl
  82+ 9545 72               ld (hl),d
  83+ 9546 23               inc hl
  84+ 9547
  85+ 9547 EB               ex de,hl
  86+ 9548
  87+ 9548 CD C3 99         call NextScan
  88+ 954B EB               ex de,hl
  89+ 954C
  90+ 954C 73               ld (hl),e
  91+ 954D 23               inc hl
  92+ 954E 72               ld (hl),d
  93+ 954F 23               inc hl
  94+ 9550
  95+ 9550 EB               ex de,hl
  96+ 9551
  97+ 9551 CD C3 99         call NextScan
  98+ 9554 EB               ex de,hl
  99+ 9555
 100+ 9555 73               ld (hl),e
 101+ 9556 23               inc hl
 102+ 9557 72               ld (hl),d
 103+ 9558 23               inc hl
 104+ 9559
 105+ 9559 EB               ex de,hl
 106+ 955A
 107+ 955A CD C3 99         call NextScan
 108+ 955D EB               ex de,hl
 109+ 955E
 110+ 955E 73               ld (hl),e
 111+ 955F 23               inc hl
 112+ 9560 72               ld (hl),d
 113+ 9561 23               inc hl
 114+ 9562
 115+ 9562 EB               ex de,hl
 116+ 9563
 117+ 9563 CD C3 99         call NextScan
 118+ 9566 EB               ex de,hl
 119+ 9567
 120+ 9567 73               ld (hl),e
 121+ 9568 23               inc hl
 122+ 9569 72               ld (hl),d
 123+ 956A 23               inc hl
 124+ 956B
 125+ 956B EB               ex de,hl
 126+ 956C
 127+ 956C CD C3 99         call NextScan
 128+ 956F EB               ex de,hl
 129+ 9570
 130+ 9570 73               ld (hl),e
 131+ 9571 23               inc hl
 132+ 9572 72               ld (hl),d
 133+ 9573 23               inc hl
 134+ 9574
 135+ 9574 EB               ex de,hl
 136+ 9575
 137+ 9575 CD C3 99         call NextScan
 138+ 9578 EB               ex de,hl
 139+ 9579
 140+ 9579 73               ld (hl),e
 141+ 957A 23               inc hl
 142+ 957B 72               ld (hl),d
 143+ 957C 23               inc hl
 144+ 957D
 145+ 957D EB               ex de,hl
 146+ 957E
 147+ 957E CD C3 99         call NextScan
 148+ 9581 EB               ex de,hl
 149+ 9582
 150+ 9582 73               ld (hl),e
 151+ 9583 23               inc hl
 152+ 9584 72               ld (hl),d
 153+ 9585 23               inc hl
 154+ 9586
 155+ 9586 EB               ex de,hl
 156+ 9587
 157+ 9587 CD C3 99         call NextScan
 158+ 958A EB               ex de,hl
 159+ 958B
 160+ 958B 73               ld (hl),e
 161+ 958C 23               inc hl
 162+ 958D 72               ld (hl),d
 163+ 958E 23               inc hl
 164+ 958F
 165+ 958F EB               ex de,hl
 166+ 9590
 167+ 9590 CD C3 99         call NextScan
 168+ 9593 EB               ex de,hl
 169+ 9594
 170+ 9594 73               ld (hl),e
 171+ 9595 23               inc hl
 172+ 9596 72               ld (hl),d
 173+ 9597 23               inc hl
 174+ 9598
 175+ 9598 EB               ex de,hl
 176+ 9599
 177+ 9599 CD C3 99         call NextScan
 178+ 959C EB               ex de,hl
 179+ 959D
 180+ 959D 73               ld (hl),e
 181+ 959E 23               inc hl
 182+ 959F 72               ld (hl),d
 183+ 95A0 23               inc hl
 184+ 95A1
 185+ 95A1 EB               ex de,hl
 186+ 95A2
 187+ 95A2 CD C3 99         call NextScan
 188+ 95A5 EB               ex de,hl
 189+ 95A6
 190+ 95A6 73               ld (hl),e
 191+ 95A7 23               inc hl
 192+ 95A8 72               ld (hl),d
 193+ 95A9 23               inc hl
 194+ 95AA
 195+ 95AA EB               ex de,hl
 196+ 95AB
 197+ 95AB CD C3 99         call NextScan
 198+ 95AE EB               ex de,hl
 199+ 95AF
 200+ 95AF 73               ld (hl),e
 201+ 95B0 23               inc hl
 202+ 95B1 72               ld (hl),d
 203+ 95B2 23               inc hl
 204+ 95B3
 205+ 95B3 EB               ex de,hl
 206+ 95B4
 207+ 95B4 CD C3 99         call NextScan
 208+ 95B7 EB               ex de,hl
 209+ 95B8
 210+ 95B8 73               ld (hl),e
 211+ 95B9 23               inc hl
 212+ 95BA 72               ld (hl),d
 213+ 95BB 23               inc hl
 214+ 95BC
 215+ 95BC              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 95BC
 217+ 95BC 22 20 8C         ld (Scanlines_album_SP),hl
 218+ 95BF
 219+ 95BF              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 95BF
 221+ 95BF 08               ex af,af
 222+ 95C0
 223+ 95C0 F5               push af
 224+ 95C1 E1               pop hl
 225+ 95C2
 226+ 95C2 36 10            ld (hl),16
 227+ 95C4
 228+ 95C4 C9               ret
 229+ 95C5
 230+ 95C5              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 95C5
 232+ 95C5              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 95C5
 234+ 95C5 3E 57            ld a,$57
 235+ 95C7 94               sub h
 236+ 95C8 47               ld b,a
 237+ 95C9
 238+ 95C9 3E DF            ld a,$df
 239+ 95CB BD               cp l
 240+ 95CC 38 04            jr c,1F
 241+ 95CE
 242+ 95CE 3E 08            ld a,8
 243+ 95D0 80               add b
 244+ 95D1 47               ld b,a
 245+ 95D2
 246+ 95D2              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95D2              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95D2
 249+ 95D2 48           1 ld c,b
 250+ 95D3 0C               inc c
 251+ 95D4
 252+ 95D4 04               inc b
 253+ 95D5 05               dec b
 254+ 95D6 20 02            jr nz,3F
 255+ 95D8
 256+ 95D8 18 0B            jr 6F
 257+ 95DA
 258+ 95DA CD C3 99     3 call NextScan
 259+ 95DD EB               ex de,hl
 260+ 95DE
 261+ 95DE 73               ld (hl),e
 262+ 95DF 23               inc hl
 263+ 95E0 72               ld (hl),d
 264+ 95E1 23               inc hl
 265+ 95E2
 266+ 95E2 EB               ex de,hl
 267+ 95E3 10 F5            djnz 3B
 268+ 95E5
 269+ 95E5 ED 53 20 8C  6 ld (Scanlines_album_SP),de
 270+ 95E9
 271+ 95E9 08           5 ex af,af
 272+ 95EA F5               push af
 273+ 95EB E1               pop hl
 274+ 95EC
 275+ 95EC 71               ld (hl),c
 276+ 95ED
 277+ 95ED C9               ret
 278+ 95EE
# file closed: Genera_datos_de_impresion.asm
2172  95EE              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95EE              ; -----------------------------------------------------------------------------
   2+ 95EE              ;
   3+ 95EE              ;   11/03/24
   4+ 95EE              ;
   5+ 95EE
   6+ 95EE              Pinta_Sprites
   7+ 95EE
   8+ 95EE              ;    ld hl,(Scanlines_album_SP)
   9+ 95EE              ;    call Extrae_address
  10+ 95EE
  11+ 95EE              ;    inc h
  12+ 95EE              ;    dec h
  13+ 95EE              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95EE
  15+ 95EE ED 73 00 8C      ld (Stack),sp
  16+ 95F2
  17+ 95F2 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95F3              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95F3 2C               inc l
  20+ 95F4 2C               inc l
  21+ 95F5
  22+ 95F5 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95F6
  24+ 95F6 2C               inc l
  25+ 95F7 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95F8
  27+ 95F8              ;   Seleccionamos rutina de impresión:
  28+ 95F8
  29+ 95F8 3E 10            ld a,16
  30+ 95FA B8               cp b
  31+ 95FB C2 F7 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95FE
  33+ 95FE              ;   Rutinas:
  34+ 95FE
  35+ 95FE              Pinta_rapido    ;   1520 t/states.
  36+ 95FE
  37+ 95FE E1               pop hl
  38+ 95FF
  39+ 95FF 1A               ld a,(de)
  40+ 9600 AE               xor (hl)
  41+ 9601 77               ld (hl),a
  42+ 9602 2C               inc l
  43+ 9603 1C               inc e
  44+ 9604 1A               ld a,(de)
  45+ 9605 AE               xor (hl)
  46+ 9606 77               ld (hl),a
  47+ 9607 2C               inc l
  48+ 9608 1C               inc e
  49+ 9609 1A               ld a,(de)
  50+ 960A AE               xor (hl)
  51+ 960B 77               ld (hl),a
  52+ 960C 13               inc de
  53+ 960D
  54+ 960D E1               pop hl
  55+ 960E
  56+ 960E 1A               ld a,(de)
  57+ 960F AE               xor (hl)
  58+ 9610 77               ld (hl),a
  59+ 9611 2C               inc l
  60+ 9612 1C               inc e
  61+ 9613 1A               ld a,(de)
  62+ 9614 AE               xor (hl)
  63+ 9615 77               ld (hl),a
  64+ 9616 2C               inc l
  65+ 9617 1C               inc e
  66+ 9618 1A               ld a,(de)
  67+ 9619 AE               xor (hl)
  68+ 961A 77               ld (hl),a
  69+ 961B 13               inc de
  70+ 961C
  71+ 961C E1               pop hl
  72+ 961D
  73+ 961D 1A               ld a,(de)
  74+ 961E AE               xor (hl)
  75+ 961F 77               ld (hl),a
  76+ 9620 2C               inc l
  77+ 9621 1C               inc e
  78+ 9622 1A               ld a,(de)
  79+ 9623 AE               xor (hl)
  80+ 9624 77               ld (hl),a
  81+ 9625 2C               inc l
  82+ 9626 1C               inc e
  83+ 9627 1A               ld a,(de)
  84+ 9628 AE               xor (hl)
  85+ 9629 77               ld (hl),a
  86+ 962A 13               inc de
  87+ 962B
  88+ 962B E1               pop hl
  89+ 962C
  90+ 962C 1A               ld a,(de)
  91+ 962D AE               xor (hl)
  92+ 962E 77               ld (hl),a
  93+ 962F 2C               inc l
  94+ 9630 1C               inc e
  95+ 9631 1A               ld a,(de)
  96+ 9632 AE               xor (hl)
  97+ 9633 77               ld (hl),a
  98+ 9634 2C               inc l
  99+ 9635 1C               inc e
 100+ 9636 1A               ld a,(de)
 101+ 9637 AE               xor (hl)
 102+ 9638 77               ld (hl),a
 103+ 9639 13               inc de
 104+ 963A
 105+ 963A E1               pop hl
 106+ 963B
 107+ 963B 1A               ld a,(de)
 108+ 963C AE               xor (hl)
 109+ 963D 77               ld (hl),a
 110+ 963E 2C               inc l
 111+ 963F 1C               inc e
 112+ 9640 1A               ld a,(de)
 113+ 9641 AE               xor (hl)
 114+ 9642 77               ld (hl),a
 115+ 9643 2C               inc l
 116+ 9644 1C               inc e
 117+ 9645 1A               ld a,(de)
 118+ 9646 AE               xor (hl)
 119+ 9647 77               ld (hl),a
 120+ 9648 13               inc de
 121+ 9649
 122+ 9649 E1               pop hl
 123+ 964A
 124+ 964A 1A               ld a,(de)
 125+ 964B AE               xor (hl)
 126+ 964C 77               ld (hl),a
 127+ 964D 2C               inc l
 128+ 964E 1C               inc e
 129+ 964F 1A               ld a,(de)
 130+ 9650 AE               xor (hl)
 131+ 9651 77               ld (hl),a
 132+ 9652 2C               inc l
 133+ 9653 1C               inc e
 134+ 9654 1A               ld a,(de)
 135+ 9655 AE               xor (hl)
 136+ 9656 77               ld (hl),a
 137+ 9657 13               inc de
 138+ 9658
 139+ 9658 E1               pop hl
 140+ 9659
 141+ 9659 1A               ld a,(de)
 142+ 965A AE               xor (hl)
 143+ 965B 77               ld (hl),a
 144+ 965C 2C               inc l
 145+ 965D 1C               inc e
 146+ 965E 1A               ld a,(de)
 147+ 965F AE               xor (hl)
 148+ 9660 77               ld (hl),a
 149+ 9661 2C               inc l
 150+ 9662 1C               inc e
 151+ 9663 1A               ld a,(de)
 152+ 9664 AE               xor (hl)
 153+ 9665 77               ld (hl),a
 154+ 9666 13               inc de
 155+ 9667
 156+ 9667 E1               pop hl
 157+ 9668
 158+ 9668 1A               ld a,(de)
 159+ 9669 AE               xor (hl)
 160+ 966A 77               ld (hl),a
 161+ 966B 2C               inc l
 162+ 966C 1C               inc e
 163+ 966D 1A               ld a,(de)
 164+ 966E AE               xor (hl)
 165+ 966F 77               ld (hl),a
 166+ 9670 2C               inc l
 167+ 9671 1C               inc e
 168+ 9672 1A               ld a,(de)
 169+ 9673 AE               xor (hl)
 170+ 9674 77               ld (hl),a
 171+ 9675 13               inc de
 172+ 9676
 173+ 9676 E1               pop hl
 174+ 9677
 175+ 9677 1A               ld a,(de)
 176+ 9678 AE               xor (hl)
 177+ 9679 77               ld (hl),a
 178+ 967A 2C               inc l
 179+ 967B 1C               inc e
 180+ 967C 1A               ld a,(de)
 181+ 967D AE               xor (hl)
 182+ 967E 77               ld (hl),a
 183+ 967F 2C               inc l
 184+ 9680 1C               inc e
 185+ 9681 1A               ld a,(de)
 186+ 9682 AE               xor (hl)
 187+ 9683 77               ld (hl),a
 188+ 9684 13               inc de
 189+ 9685
 190+ 9685 E1               pop hl
 191+ 9686
 192+ 9686 1A               ld a,(de)
 193+ 9687 AE               xor (hl)
 194+ 9688 77               ld (hl),a
 195+ 9689 2C               inc l
 196+ 968A 1C               inc e
 197+ 968B 1A               ld a,(de)
 198+ 968C AE               xor (hl)
 199+ 968D 77               ld (hl),a
 200+ 968E 2C               inc l
 201+ 968F 1C               inc e
 202+ 9690 1A               ld a,(de)
 203+ 9691 AE               xor (hl)
 204+ 9692 77               ld (hl),a
 205+ 9693 13               inc de
 206+ 9694
 207+ 9694 E1               pop hl
 208+ 9695
 209+ 9695 1A               ld a,(de)
 210+ 9696 AE               xor (hl)
 211+ 9697 77               ld (hl),a
 212+ 9698 2C               inc l
 213+ 9699 1C               inc e
 214+ 969A 1A               ld a,(de)
 215+ 969B AE               xor (hl)
 216+ 969C 77               ld (hl),a
 217+ 969D 2C               inc l
 218+ 969E 1C               inc e
 219+ 969F 1A               ld a,(de)
 220+ 96A0 AE               xor (hl)
 221+ 96A1 77               ld (hl),a
 222+ 96A2 13               inc de
 223+ 96A3
 224+ 96A3 E1               pop hl
 225+ 96A4
 226+ 96A4 1A               ld a,(de)
 227+ 96A5 AE               xor (hl)
 228+ 96A6 77               ld (hl),a
 229+ 96A7 2C               inc l
 230+ 96A8 1C               inc e
 231+ 96A9 1A               ld a,(de)
 232+ 96AA AE               xor (hl)
 233+ 96AB 77               ld (hl),a
 234+ 96AC 2C               inc l
 235+ 96AD 1C               inc e
 236+ 96AE 1A               ld a,(de)
 237+ 96AF AE               xor (hl)
 238+ 96B0 77               ld (hl),a
 239+ 96B1 13               inc de
 240+ 96B2
 241+ 96B2 E1               pop hl
 242+ 96B3
 243+ 96B3 1A               ld a,(de)
 244+ 96B4 AE               xor (hl)
 245+ 96B5 77               ld (hl),a
 246+ 96B6 2C               inc l
 247+ 96B7 1C               inc e
 248+ 96B8 1A               ld a,(de)
 249+ 96B9 AE               xor (hl)
 250+ 96BA 77               ld (hl),a
 251+ 96BB 2C               inc l
 252+ 96BC 1C               inc e
 253+ 96BD 1A               ld a,(de)
 254+ 96BE AE               xor (hl)
 255+ 96BF 77               ld (hl),a
 256+ 96C0 13               inc de
 257+ 96C1
 258+ 96C1 E1               pop hl
 259+ 96C2
 260+ 96C2 1A               ld a,(de)
 261+ 96C3 AE               xor (hl)
 262+ 96C4 77               ld (hl),a
 263+ 96C5 2C               inc l
 264+ 96C6 1C               inc e
 265+ 96C7 1A               ld a,(de)
 266+ 96C8 AE               xor (hl)
 267+ 96C9 77               ld (hl),a
 268+ 96CA 2C               inc l
 269+ 96CB 1C               inc e
 270+ 96CC 1A               ld a,(de)
 271+ 96CD AE               xor (hl)
 272+ 96CE 77               ld (hl),a
 273+ 96CF 13               inc de
 274+ 96D0
 275+ 96D0 E1               pop hl
 276+ 96D1
 277+ 96D1 1A               ld a,(de)
 278+ 96D2 AE               xor (hl)
 279+ 96D3 77               ld (hl),a
 280+ 96D4 2C               inc l
 281+ 96D5 1C               inc e
 282+ 96D6 1A               ld a,(de)
 283+ 96D7 AE               xor (hl)
 284+ 96D8 77               ld (hl),a
 285+ 96D9 2C               inc l
 286+ 96DA 1C               inc e
 287+ 96DB 1A               ld a,(de)
 288+ 96DC AE               xor (hl)
 289+ 96DD 77               ld (hl),a
 290+ 96DE 13               inc de
 291+ 96DF
 292+ 96DF E1               pop hl
 293+ 96E0
 294+ 96E0 1A               ld a,(de)
 295+ 96E1 AE               xor (hl)
 296+ 96E2 77               ld (hl),a
 297+ 96E3 2C               inc l
 298+ 96E4 1C               inc e
 299+ 96E5 1A               ld a,(de)
 300+ 96E6 AE               xor (hl)
 301+ 96E7 77               ld (hl),a
 302+ 96E8 2C               inc l
 303+ 96E9 1C               inc e
 304+ 96EA 1A               ld a,(de)
 305+ 96EB AE               xor (hl)
 306+ 96EC 77               ld (hl),a
 307+ 96ED 13               inc de
 308+ 96EE
 309+ 96EE ED 73 20 8C      ld (Scanlines_album_SP),sp
 310+ 96F2 ED 7B 00 8C      ld sp,(Stack)
 311+ 96F6 C9               ret
 312+ 96F7
 313+ 96F7              Pinta_lento
 314+ 96F7
 315+ 96F7 E1           1 pop hl
 316+ 96F8
 317+ 96F8 1A               ld a,(de)
 318+ 96F9 AE               xor (hl)
 319+ 96FA 77               ld (hl),a
 320+ 96FB 2C               inc l
 321+ 96FC 1C               inc e
 322+ 96FD 1A               ld a,(de)
 323+ 96FE AE               xor (hl)
 324+ 96FF 77               ld (hl),a
 325+ 9700 2C               inc l
 326+ 9701 1C               inc e
 327+ 9702 1A               ld a,(de)
 328+ 9703 AE               xor (hl)
 329+ 9704 77               ld (hl),a
 330+ 9705 13               inc de
 331+ 9706
 332+ 9706 10 EF            djnz 1B
 333+ 9708
 334+ 9708 ED 73 20 8C      ld (Scanlines_album_SP),sp
 335+ 970C ED 7B 00 8C      ld sp,(Stack)
 336+ 9710 C9               ret
# file closed: Pinta_Sprites.asm
2173  9711              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9711              ; ******************************************************************************************************************************************************************************************
   2+ 9711              ;
   3+ 9711              ; 26/06/23
   4+ 9711              ;
   5+ 9711              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9711
   7+ 9711              Draw
   8+ 9711
   9+ 9711 CD B7 99     	call Prepara_draw
  10+ 9714 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9715 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9716 28 05        	jr z,2F
  13+ 9718
  14+ 9718 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 971B 18 0C        	jr 1F
  16+ 971D
  17+ 971D 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9720 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9723 CD AF 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9726              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9726
  22+ 9726 CD 56 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9729
  24+ 9729 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 972C CB 6F        	bit 5,a
  26+ 972E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9730
  28+ 9730 CD 45 97     	call Comprueba_limite_horizontal
  29+ 9733 CD D5 97     	call Comprueba_limite_vertical
  30+ 9736
  31+ 9736              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9736              ; -----------------------
  33+ 9736              ; -----------------------
  34+ 9736              ; -----------------------
  35+ 9736
  36+ 9736 CD 2B 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9739 CD 62 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 973C
  39+ 973C 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 973F CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9741 32 C0 8B     	ld (Ctrl_0),a
  42+ 9744
  43+ 9744 C9           	ret
  44+ 9745
  45+ 9745              ; *******************************************************************************************************************************************************************************************
  46+ 9745              ;	21/01/23
  47+ 9745              ;
  48+ 9745              ; 	Comprueba_limite_horizontal.
  49+ 9745              ;
  50+ 9745              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9745              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9745              ;
  53+ 9745              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9745              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9745              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9745              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9745
  58+ 9745
  59+ 9745
  60+ 9745 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9748 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 974A 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 974C E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 974E 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9751 18 09            jr 6F
  66+ 9753 CB 5F        1 bit 3,a
  67+ 9755 28 0A            jr z,2F
  68+ 9757 E6 F7            and $f7
  69+ 9759 32 C0 8B         ld (Ctrl_0),a
  70+ 975C CD AF 98     6 call Inicializacion
  71+ 975F 18 5B            jr 5F
  72+ 9761 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9762
  74+ 9762              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9762              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9762
  77+ 9762 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9763 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9766 CD AF 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9769 67           	ld h,a
  81+ 976A EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 976B CD AF 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 976E 67           	ld h,a
  84+ 976F A7           	and a
  85+ 9770 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9772 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9773 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 9776 FE 02        	cp 2
  89+ 9778 38 1E        	jr c,3F
  90+ 977A 28 1C        	jr z,3F
  91+ 977C 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 977D 28 23            jr z,7F
  93+ 977F 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9781 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9783 E1           	pop hl
  96+ 9784
  97+ 9784              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9784              ; _para indicar con E="2" en caso necesario.
  99+ 9784
 100+ 9784 E5               push hl
 101+ 9785 C5               push bc
 102+ 9786 CD AF 94     	call calcula_tercio
 103+ 9789 FE 01        	cp 1
 104+ 978B 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 978D CD BD 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9790 28 26            jr z,9F
 107+ 9792 38 24            jr c,9F
 108+ 9794 1E 00        11 ld e,0
 109+ 9796 18 22            jr 8F
 110+ 9798 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9799 28 07        	jr z, 7F
 112+ 979B 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 979D 1E 00         	ld e,0
 114+ 979F E1           	pop hl
 115+ 97A0 18 04        	jr 4F
 116+ 97A2 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97A4 18 15            jr 10F
 118+ 97A6
 119+ 97A6              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97A6              ; _para indicar con E="2" en caso necesario.
 121+ 97A6
 122+ 97A6 E5           4 push hl
 123+ 97A7 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97A8 CD AF 94     	call calcula_tercio
 125+ 97AB FE 01        	cp 1
 126+ 97AD 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97AF CD BD 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97B2 28 04            jr z,9F
 129+ 97B4 30 02            jr nc,9F
 130+ 97B6 18 02        	jr 8F
 131+ 97B8 1E 02        9 ld e,2
 132+ 97BA C1           8 pop bc
 133+ 97BB E1           10 pop hl
 134+ 97BC C9           5 ret
 135+ 97BD
 136+ 97BD              ; --------------------
 137+ 97BD              ;
 138+ 97BD              ; 25/08/22
 139+ 97BD
 140+ 97BD CD AF 94     Comprueba_centro call calcula_tercio
 141+ 97C0 67               ld h,a
 142+ 97C1 08           	ex af,af
 143+ 97C2 FE 02        	cp 2
 144+ 97C4 38 07        	jr c,1F
 145+ 97C6 28 05        	jr z,1F
 146+ 97C8 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97CB 18 03        	jr 2F
 148+ 97CD 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97D0 08           2 ex af,af
 150+ 97D1 A7               and a
 151+ 97D2 ED 42            sbc hl,bc
 152+ 97D4 C9               ret
 153+ 97D5
 154+ 97D5              ; *********************************************************************************************************************************************************************************************
 155+ 97D5              ;
 156+ 97D5              ;   16/8/22
 157+ 97D5              ;
 158+ 97D5              ;	Comprueba_limite_vertical
 159+ 97D5              ;
 160+ 97D5              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97D5              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97D5              ;
 163+ 97D5
 164+ 97D5 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97D8 7D           	ld a,l
 166+ 97D9 E6 1F        	and $1F
 167+ 97DB 57           	ld d,a
 168+ 97DC 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97DF BA           	cp d 											; Límite - Posición.
 170+ 97E0 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97E1 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97E4 CB 47        	bit 0,a
 173+ 97E6 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97E8
 175+ 97E8              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97E8
 177+ 97E8 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97E9 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97EB
 180+ 97EB              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97EB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97EB
 183+ 97EB 3A B4 8B         ld a,(Coordenada_X)
 184+ 97EE 16 0F            ld d,Centro_izquierda
 185+ 97F0 A7               and a
 186+ 97F1 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97F2 28 1E            jr z,3F
 188+ 97F4 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97F6              ;                                                    ; _salimos sin modificar nada.
 190+ 97F6 18 0E            jr 2F
 191+ 97F8 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97F9 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97FB
 194+ 97FB              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97FB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97FB
 197+ 97FB 3A B4 8B         ld a,(Coordenada_X)
 198+ 97FE 16 10            ld d,Centro_derecha
 199+ 9800 A7               and a
 200+ 9801 92               sub d
 201+ 9802 28 0E            jr z,3F
 202+ 9804 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9806              ;                                                    ; _salimos sin modificar nada.
 204+ 9806 CB 43        2 bit 0,e
 205+ 9808 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 980A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 980B CD 9F 98         call Modificaccionne
 208+ 980E C1           	pop bc
 209+ 980F CD AF 98         call Inicializacion
 210+ 9812 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9813
 212+ 9813              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9813
 214+ 9813 C5           4 push bc
 215+ 9814 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9817 0A           	ld a,(bc)
 217+ 9818 3D           	dec a
 218+ 9819 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 981A 7D           	ld a,l
 220+ 981B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 981C CB 47        	bit 0,a
 222+ 981E 28 03        	jr z,5F
 223+ 9820 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9821 18 2E        	jr 7F
 225+ 9823
 226+ 9823              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9823
 228+ 9823 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9824 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9825 3A C0 8B     	ld a,(Ctrl_0)
 231+ 9828 CB 4F        	bit 1,a
 232+ 982A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 982C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 982D
 235+ 982D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 982D
 237+ 982D 1C               inc e
 238+ 982E 1D               dec e
 239+ 982F 20 07            jr nz,12F
 240+ 9831 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9832 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9833 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9836 18 44        13 jr 9F
 244+ 9838 CB 43        12 bit 0,e
 245+ 983A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 983C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 983C C1           	pop bc
 248+ 983D 18 D3        	jr 3B
 249+ 983F 80           14 add b
 250+ 9840 6F               ld l,a
 251+ 9841 22 C3 8B     	ld (Posicion_actual),hl
 252+ 9844 CD 9F 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9847 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9849 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 984B 32 C0 8B         ld (Ctrl_0),a
 256+ 984E F1           	pop af
 257+ 984F 18 2B        	jr 9F
 258+ 9851
 259+ 9851              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9851
 261+ 9851 F5           7 push af
 262+ 9852 3A C0 8B     	ld a,(Ctrl_0)
 263+ 9855 CB 47        	bit 0,a
 264+ 9857 20 1D        	jr nz,8F
 265+ 9859 F1           	pop af
 266+ 985A
 267+ 985A              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 985A
 269+ 985A 1C           	inc e
 270+ 985B 1D               dec e
 271+ 985C 20 07            jr nz,10F
 272+ 985E 90           	sub b
 273+ 985F 6F               ld l,a
 274+ 9860 22 C3 8B     	ld (Posicion_actual),hl
 275+ 9863 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9865              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9865 CB 43        10 bit 0,e
 278+ 9867 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9869              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9869 C1           	pop bc
 281+ 986A 18 A6        	jr 3B
 282+ 986C 90           16 sub b
 283+ 986D 6F               ld l,a
 284+ 986E 22 C3 8B     	ld (Posicion_actual),hl
 285+ 9871 CD 9F 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9874 18 06            jr 9F
 287+ 9876 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9878 32 C0 8B         ld (Ctrl_0),a
 289+ 987B F1           	pop af
 290+ 987C C1           9 pop bc
 291+ 987D 1E 00        	ld e,0
 292+ 987F CD AF 98         call Inicializacion
 293+ 9882 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9883 08           	ex af,af
 295+ 9884 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9885 18 8B            jr 3B
 297+ 9887
 298+ 9887              ; --------------------
 299+ 9887
 300+ 9887 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9889 CD D2 99     1 call PreviousScan
 302+ 988C 10 FB            djnz 1B
 303+ 988E 22 C3 8B     	ld (Posicion_actual),hl
 304+ 9891 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9892 C9           	ret
 306+ 9893
 307+ 9893              ; --------------------
 308+ 9893
 309+ 9893 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9895 CD C3 99     1 call NextScan
 311+ 9898 10 FB            djnz 1B
 312+ 989A 22 C3 8B     	ld (Posicion_actual),hl
 313+ 989D AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 989E C9           	ret
 315+ 989F
 316+ 989F              ; --------------------
 317+ 989F              ;
 318+ 989F              ;	22/01/23
 319+ 989F              ;
 320+ 989F              ;	E="1". Hemos cambiado de cuadrante.
 321+ 989F              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 989F              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 989F
 324+ 989F
 325+ 989F              Modificaccionne
 326+ 989F
 327+ 989F 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 98A2 FE 02        	cp 2
 329+ 98A4 CC 87 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98A7 DC 87 98         call c,Modifica_Pos_actual
 331+ 98AA C8           	ret z
 332+ 98AB CD 93 98         call Modifica_Pos_actual2
 333+ 98AE C9               ret
 334+ 98AF
 335+ 98AF              ; *************************************************************************************************************************************************************************************************
 336+ 98AF              ;
 337+ 98AF              ;	13/8/22
 338+ 98AF              ;
 339+ 98AF              ;	Inicializacion
 340+ 98AF              ;
 341+ 98AF              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98AF              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98AF              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98AF              ;
 345+ 98AF              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98AF              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98AF              ;	_ desaparece/aparece.
 348+ 98AF
 349+ 98AF              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98AF              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98AF              ;
 352+ 98AF              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98AF              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98AF              ; 		   [E] ="0"
 355+ 98AF
 356+ 98AF              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98AF
 358+ 98AF CD AF 94     Inicializacion call calcula_tercio
 359+ 98B2 28 36        	jr z,primit
 360+ 98B4 E6 02        	and 2
 361+ 98B6 20 07        	jr nz,segmit
 362+ 98B8 7D           	ld a,l
 363+ 98B9 FE 7F        	cp $7f
 364+ 98BB 38 2D        	jr c,primit
 365+ 98BD 28 2B        	jr z,primit
 366+ 98BF CD 25 99     segmit call column
 367+ 98C2 38 13        	jr c,tercuad
 368+ 98C4 3E 04        cuarcuad ld a,4
 369+ 98C6 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98C9 21 20 48     	ld hl,$4820
 371+ 98CC 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98CF 21 D6 8B     	ld hl,Limite_vertical
 373+ 98D2 36 0D        	ld (hl),$0d
 374+ 98D4 08           	ex af,af
 375+ 98D5 18 3C        	jr 1F
 376+ 98D7              tercuad
 377+ 98D7 3E 03        	ld a,3
 378+ 98D9 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98DC 21 20 48     	ld hl,$4820
 380+ 98DF 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98E2 21 D6 8B     	ld hl,Limite_vertical
 382+ 98E5 36 12        	ld (hl),$12
 383+ 98E7 08           	ex af,af
 384+ 98E8 18 29        	jr 1F
 385+ 98EA CD 25 99     primit call column
 386+ 98ED 38 13        	jr c, primcuad
 387+ 98EF              segcuad
 388+ 98EF 3E 02        	ld a,2
 389+ 98F1 32 D2 8B     	ld (Cuad_objeto),a
 390+ 98F4 21 C0 4F     	ld hl,$4fc0
 391+ 98F7 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 98FA 21 D6 8B     	ld hl,Limite_vertical
 393+ 98FD 36 0D        	ld (hl),$0d
 394+ 98FF 08           	ex af,af
 395+ 9900 18 11        	jr 1F
 396+ 9902              primcuad
 397+ 9902 3E 01        	ld a,1
 398+ 9904 32 D2 8B     	ld (Cuad_objeto),a
 399+ 9907 21 C0 4F     	ld hl,$4fc0
 400+ 990A 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 990D 21 D6 8B     	ld hl,Limite_vertical
 402+ 9910 36 12        	ld (hl),$12
 403+ 9912 08           	ex af,af
 404+ 9913
 405+ 9913 C5           1 push bc
 406+ 9914 E5           	push hl
 407+ 9915 D5           	push de
 408+ 9916
 409+ 9916 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 9919 CD CD 94     	call Genera_coordenadas
 411+ 991C
 412+ 991C D1           	pop de
 413+ 991D E1           	pop hl
 414+ 991E C1           	pop bc
 415+ 991F
 416+ 991F 21 C0 8B     	ld hl,Ctrl_0
 417+ 9922 CB EE        	set 5,(hl)
 418+ 9924 C9           	ret
 419+ 9925
 420+ 9925              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9925
 422+ 9925              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9925              ;
 424+ 9925              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9925
 426+ 9925 7D           column ld a,l
 427+ 9926 E6 1F        	and $1f
 428+ 9928 FE 10         	cp $10
 429+ 992A C9            	ret
 430+ 992B
 431+ 992B              ; --------------------------------------------------------------------------------------------------------------------
 432+ 992B              ;
 433+ 992B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 992B              ;
 435+ 992B              ; 14/12/22
 436+ 992B              ;
 437+ 992B              ;	Modifica: A y BC.
 438+ 992B
 439+ 992B 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 992E E6 01        	and 1
 441+ 9930 28 17        	jr z,1F
 442+ 9932
 443+ 9932              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9932
 445+ 9932 3A B4 8B     	ld a,(Coordenada_X)
 446+ 9935 47           	ld b,a
 447+ 9936 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9937 79           	ld a,c
 449+ 9938 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9939 38 08        	jr c,2F
 451+ 993B 47           	ld b,a
 452+ 993C 79           	ld a,c
 453+ 993D 90           	sub b
 454+ 993E 32 D3 8B     	ld (Columnas),a
 455+ 9941 18 1B        	jr 4F
 456+ 9943 79           2 ld a,c
 457+ 9944 32 D3 8B     	ld (Columnas),a
 458+ 9947 18 15        	jr 4F
 459+ 9949
 460+ 9949              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9949
 462+ 9949 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 994C 81           	add c
 464+ 994D 3D           	dec a
 465+ 994E D6 1F        	sub $1f
 466+ 9950 38 08        	jr c,3F
 467+ 9952 47           	ld b,a
 468+ 9953 79           	ld a,c
 469+ 9954 90           	sub b
 470+ 9955 32 D3 8B     	ld (Columnas),a
 471+ 9958 18 04        	jr 4F
 472+ 995A 79           3 ld a,c
 473+ 995B 32 D3 8B     	ld (Columnas),a
 474+ 995E D9           4 exx
 475+ 995F 4F           	ld c,a
 476+ 9960 D9           	exx
 477+ 9961 C9            ret
 478+ 9962
 479+ 9962              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9962              ;
 481+ 9962              ;   19/7/23
 482+ 9962              ;
 483+ 9962              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9962              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9962              ;
 486+ 9962              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9962              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9962              ;
 489+ 9962              ;	DESTRUYE: HL,B Y A.
 490+ 9962
 491+ 9962 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9965 FE 02        	cp 2
 493+ 9967 38 18        	jr c,1F
 494+ 9969 28 16        	jr z,1F
 495+ 996B E6 01        	and 1
 496+ 996D 28 0D        	jr z,3F
 497+ 996F
 498+ 996F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 996F
 500+ 996F CD AB 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9972
 502+ 9972 7D           9 ld a,l
 503+ 9973 E6 1F        	and $1f
 504+ 9975 28 2A        	jr z,7F
 505+ 9977 2B           	dec hl
 506+ 9978 10 F8        	djnz 9B
 507+ 997A 18 25        	jr 7F
 508+ 997C
 509+ 997C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 997C
 511+ 997C 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 997F 18 20        	jr 7F
 513+ 9981
 514+ 9981 28 14        1 jr z,2F
 515+ 9983
 516+ 9983              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9983
 518+ 9983 CD AB 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9986
 520+ 9986 7D           4 ld a,l
 521+ 9987 E6 1F        	and $1f
 522+ 9989 28 03        	jr z,6F
 523+ 998B 2B           	dec hl
 524+ 998C 10 F8        	djnz 4B
 525+ 998E 06 0F        6 ld b,15
 526+ 9990 CD D2 99     5 call PreviousScan
 527+ 9993 10 FB        	djnz 5B
 528+ 9995 18 0A        	jr 7F
 529+ 9997
 530+ 9997              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9997
 532+ 9997 CD AB 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 999A 06 0F        	ld b,15
 534+ 999C CD D2 99     8 call PreviousScan
 535+ 999F 10 FB        	djnz 8B
 536+ 99A1
 537+ 99A1 E5           7 push hl
 538+ 99A2 DD E1        	pop ix
 539+ 99A4
 540+ 99A4 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 99A7 E5           	push hl
 542+ 99A8 FD E1        	pop iy
 543+ 99AA
 544+ 99AA C9           	ret
 545+ 99AB
 546+ 99AB              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99AB              ;
 548+ 99AB              ;	2/1/23
 549+ 99AB              ;
 550+ 99AB              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99AB              ;
 552+ 99AB              ;	Tras esta rutina tenemos:
 553+ 99AB              ;
 554+ 99AB              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99AB              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99AB              ;
 557+ 99AB              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99AB
 559+ 99AB 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 99AE 3A D3 8B     	ld a,(Columnas)
 561+ 99B1 3D           	dec a
 562+ 99B2 20 01        	jr nz,1F
 563+ 99B4 3C           	inc a
 564+ 99B5 47           1 ld b,a
 565+ 99B6 C9           	ret
 566+ 99B7
 567+ 99B7              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99B7              ;
 569+ 99B7              ;	Prepara_draw
 570+ 99B7              ;
 571+ 99B7              ;	Es una rutina de carga.
 572+ 99B7              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99B7              ;
 574+ 99B7              ;	FUNCIONAMIENTO:
 575+ 99B7              ;
 576+ 99B7              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99B7              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99B7              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99B7              ;
 580+ 99B7              ;	DESTRUYE:
 581+ 99B7              ;
 582+ 99B7              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99B7
 584+ 99B7 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99BA 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99BB 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99BC 4E           	ld c,(hl)
 588+ 99BD 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99C0 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99C2 C9           	ret
 591+ 99C3
 592+ 99C3              ;----------------------------------------------------------------------------------------------------------------
 593+ 99C3              ;
 594+ 99C3              ;	5/08/22
 595+ 99C3              ;
 596+ 99C3              ;   NextScan.
 597+ 99C3              ;
 598+ 99C3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99C3              ;
 600+ 99C3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99C3              ;
 602+ 99C3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99C3              ;
 604+ 99C3              ;       DESTRUIDOS: AF y HL !!!
 605+ 99C3              ;
 606+ 99C3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99C3              ;
 608+ 99C3
 609+ 99C3 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99C4 7C               ld a,h
 611+ 99C5 E6 07            and 7
 612+ 99C7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99C8
 614+ 99C8 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99C9 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99CB 6F               ld l,a
 617+ 99CC D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99CD
 619+ 99CD 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99CE D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99D0 67               ld h,a
 622+ 99D1 C9               ret
 623+ 99D2
 624+ 99D2              ;----------------------------------------------------------------------------------------------------------------
 625+ 99D2              ;
 626+ 99D2              ;	5/08/22
 627+ 99D2              ;
 628+ 99D2              ;   PreviousScan.
 629+ 99D2              ;
 630+ 99D2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99D2              ;
 632+ 99D2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99D2              ;
 634+ 99D2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99D2              ;
 636+ 99D2              ;       DESTRUIDOS: AF y HL !!!
 637+ 99D2              ;
 638+ 99D2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99D2              ;
 640+ 99D2
 641+ 99D2 7C           PreviousScan ld a,h
 642+ 99D3 25               dec h               ; Dec H.
 643+ 99D4 E6 07            and 7
 644+ 99D6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99D7
 646+ 99D7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99D8 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99DA 6F               ld l,a
 649+ 99DB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99DC
 651+ 99DC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99DD C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99DF 67               ld h,a
 654+ 99E0 C9               ret
 655+ 99E1
 656+ 99E1
 657+ 99E1
 658+ 99E1
 659+ 99E1
 660+ 99E1
 661+ 99E1
 662+ 99E1
 663+ 99E1
 664+ 99E1
 665+ 99E1
 666+ 99E1
# file closed: Draw_XOR.asm
2174  99E1              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E1
   2+ 99E1              ; ******************************************************************************************************************************************************************************************
   3+ 99E1              ;
   4+ 99E1              ;   20/05/23
   5+ 99E1              ;
   6+ 99E1              ;	Recompone_posicion_inicio
   7+ 99E1              ;
   8+ 99E1              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99E1              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99E1              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99E1              ;	_ a una u otra rutina.
  12+ 99E1
  13+ 99E1              Recompone_posicion_inicio
  14+ 99E1
  15+ 99E1 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99E4 7D           	ld a,l
  17+ 99E5 E6 1F        	and $1f
  18+ 99E7 28 16        	jr z,1F
  19+ 99E9
  20+ 99E9 FE 1F        	cp $1f
  21+ 99EB 28 0D        	jr z,3F
  22+ 99ED
  23+ 99ED 21 BF 8B     	ld hl,Ctrl_2
  24+ 99F0 CB C6        	set 0,(hl)
  25+ 99F2 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 99F5 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 99F8 18 08        	jr 2F
  28+ 99FA
  29+ 99FA CD A8 9B     3 call Mov_left
  30+ 99FD 18 03        	jr 2F
  31+ 99FF
  32+ 99FF CD 85 9A     1 call Mov_right
  33+ 9A02 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A05 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 9A08 C9           	ret
  36+ 9A09
  37+ 9A09              ; ******************************************************************************************************************************************************************************************
  38+ 9A09              ;
  39+ 9A09              ;   27/05/23
  40+ 9A09              ;
  41+ 9A09              ;	Mov_down
  42+ 9A09              ;
  43+ 9A09              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A09              ;
  45+ 9A09              ;
  46+ 9A09              Mov_down
  47+ 9A09
  48+ 9A09 CD 73 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A0C              ;																	; _ repone (Puntero_objeto).
  50+ 9A0C 21 C0 8B     	ld hl,Ctrl_0
  51+ 9A0F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A11              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A11              ; 																	; _ en el caso de que no lo haya.
  54+ 9A11 3A DB 8B     	ld a,(Vel_down)
  55+ 9A14 47           	ld b,a
  56+ 9A15 2A C3 8B         ld hl,(Posicion_actual)
  57+ 9A18 CD AF 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A1B E6 02        	and 2
  59+ 9A1D 28 17        	jr z,1F
  60+ 9A1F
  61+ 9A1F              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A1F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A1F
  64+ 9A1F 7C           	ld a,h
  65+ 9A20 FE 57        	cp $57
  66+ 9A22 20 12        	jr nz,1F
  67+ 9A24
  68+ 9A24 7D           	ld a,l
  69+ 9A25 C6 20        	add $20
  70+ 9A27 30 0D        	jr nc,1F
  71+ 9A29
  72+ 9A29              ; ------------------------------
  73+ 9A29              ;
  74+ 9A29              ;	12/01/24
  75+ 9A29
  76+ 9A29              ;	call Reaparece_arriba
  77+ 9A29 CD 35 9D     	call Reinicio
  78+ 9A2C
  79+ 9A2C              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A2C
  81+ 9A2C 3A 26 8C     	ld a,(Ctrl_3)
  82+ 9A2F CB CF        	set 1,a
  83+ 9A31 32 26 8C     	ld (Ctrl_3),a
  84+ 9A34
  85+ 9A34 18 08        	jr 3F
  86+ 9A36              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A36              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A36              ; ------------------------------
  89+ 9A36
  90+ 9A36 CD C3 99     1 call NextScan
  91+ 9A39 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A3C 10 DA            djnz 2B
  93+ 9A3E CD CD 94     3 call Genera_coordenadas
  94+ 9A41 C9           	ret
  95+ 9A42
  96+ 9A42              ; ******************************************************************************************************************************************************************************************
  97+ 9A42              ;
  98+ 9A42              ;   27/05/23
  99+ 9A42              ;
 100+ 9A42              ;	Mov_up
 101+ 9A42              ;
 102+ 9A42              ; 	Mueve el Sprite hacia arriba.
 103+ 9A42              ;
 104+ 9A42              ;
 105+ 9A42              Mov_up
 106+ 9A42
 107+ 9A42 CD 73 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A45              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A45 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A48 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A4A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A4A              ; 																		; _ en el caso de que no lo haya.
 113+ 9A4A 3A DA 8B     	ld a,(Vel_up)
 114+ 9A4D 47           	ld b,a
 115+ 9A4E 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A51 CD AF 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A54 A7           	and a
 118+ 9A55 20 10        	jr nz,1F
 119+ 9A57
 120+ 9A57              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A57              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A57
 123+ 9A57 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A58 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A5A 20 0B            jr nz,1F
 126+ 9A5C 7D               ld a,l
 127+ 9A5D D6 20            sub $20
 128+ 9A5F 30 06            jr nc,1F
 129+ 9A61 25               dec h
 130+ 9A62
 131+ 9A62              ; -----------------------------
 132+ 9A62 CD 16 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A65              ;	call Reinicio
 134+ 9A65              ; -----------------------------
 135+ 9A65
 136+ 9A65 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A67 CD D2 99     1 call PreviousScan
 138+ 9A6A 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A6D 10 E2            djnz 3B
 140+ 9A6F CD CD 94     2 call Genera_coordenadas
 141+ 9A72 C9           	ret
 142+ 9A73
 143+ 9A73              ; -----------------------------
 144+ 9A73              ;
 145+ 9A73              ;	27/5/23
 146+ 9A73              ;
 147+ 9A73              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A73              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A73              ;
 150+ 9A73              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A73              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A73              ;
 153+ 9A73              ;	Modifica: A y (Puntero_objeto).
 154+ 9A73
 155+ 9A73 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A76 CB 47        	bit 0,a
 157+ 9A78 C8           	ret z
 158+ 9A79 CB 87        	res 0,a
 159+ 9A7B 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A7E 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A81 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A84 C9           	ret
 163+ 9A85
 164+ 9A85              ; ******************************************************************************************************************************************************************************************
 165+ 9A85              ;
 166+ 9A85              ;	19/10/22
 167+ 9A85              ;
 168+ 9A85              ;	Mov_right.
 169+ 9A85              ;
 170+ 9A85              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A85              ;
 172+ 9A85
 173+ 9A85 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A88 CB 77        	bit 6,a
 175+ 9A8A 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A8C
 177+ 9A8C CD C4 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A8F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A90
 180+ 9A90 21 C0 8B     	ld hl,Ctrl_0
 181+ 9A93 CB E6        	set 4,(hl)
 182+ 9A95 18 52        	jr 8F
 183+ 9A97
 184+ 9A97 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9A9A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A9C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A9C              ; 																	; _ en el caso de que no lo haya.
 188+ 9A9C 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A9F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AA1 20 46        	jr nz,8F
 191+ 9AA3
 192+ 9AA3 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AA6 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AA7 28 40        	jr z,8F
 195+ 9AA9
 196+ 9AA9              ; ---------- ---------- ----------
 197+ 9AA9              ;
 198+ 9AA9              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AA9
 200+ 9AA9 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AAC FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AAE 28 11        	jr z,1F
 203+ 9AB0 38 06        	jr c,6F
 204+ 9AB2 FE 04        	cp 4
 205+ 9AB4 28 14        	jr z,7F
 206+ 9AB6 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AB8
 208+ 9AB8              ; ---------- ---------- ----------
 209+ 9AB8              ;
 210+ 9AB8              ; Perfiles de velocidad
 211+ 9AB8              ;
 212+ 9AB8
 213+ 9AB8 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ABB FE FE        	cp $fe
 215+ 9ABD 20 2A        	jr nz,8F
 216+ 9ABF 18 10        	jr 3F
 217+ 9AC1 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AC4 FE FD        	cp $fd
 219+ 9AC6 20 21        	jr nz,8F
 220+ 9AC8 18 07        	jr 3F
 221+ 9ACA 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ACD FE FB        	cp $fb
 223+ 9ACF 20 18        	jr nz,8F
 224+ 9AD1
 225+ 9AD1              ; ---------- ---------- ----------
 226+ 9AD1
 227+ 9AD1              3
 228+ 9AD1 CD 04 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AD4              ;	call Reinicio
 230+ 9AD4
 231+ 9AD4              ; ---------- ---------- ----------
 232+ 9AD4              ;
 233+ 9AD4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AD4
 235+ 9AD4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AD6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AD7 CD F0 9A     	call DESPLZ_DER
 238+ 9ADA C1           	pop bc
 239+ 9ADB 10 F9        	djnz 5B
 240+ 9ADD 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AE0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AE1 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9AE4 CD CD 94     	call Genera_coordenadas
 244+ 9AE7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AE9
 246+ 9AE9              ; ---------- ---------- ----------
 247+ 9AE9
 248+ 9AE9 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AEC CD F0 9A     	call DESPLZ_DER
 250+ 9AEF C9           2 ret
 251+ 9AF0
 252+ 9AF0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AF0              ;
 254+ 9AF0              ;	22/9/22
 255+ 9AF0              ;
 256+ 9AF0
 257+ 9AF0 CD FF 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AF3 CD 4B 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AF6 CD 74 9B         call Ciclo_completo
 260+ 9AF9 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AFC CB FE        	set 7,(hl)
 262+ 9AFE C9           	ret
 263+ 9AFF
 264+ 9AFF              ; ******************************************************************************************************************************************************************************************
 265+ 9AFF              ;	15/02/23
 266+ 9AFF              ;
 267+ 9AFF
 268+ 9AFF 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B02 47           	ld b,a
 270+ 9B03 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B06 23           1 inc hl
 272+ 9B07 23           	inc hl
 273+ 9B08 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B0A 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B0D CD AE 90     	call Extrae_address
 276+ 9B10 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9B13
 278+ 9B13              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B13
 280+ 9B13              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B13              ; Cuántos movimientos hemos hecho ??
 282+ 9B13              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B13
 284+ 9B13 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B16 EB           	ex de,hl
 286+ 9B17 A7           	and a
 287+ 9B18 ED 52        	sbc hl,de
 288+ 9B1A CB 3D        	srl l
 289+ 9B1C 3E 08        6 ld a,8
 290+ 9B1E 95           	sub l
 291+ 9B1F 30 1E        	jr nc,3F
 292+ 9B21
 293+ 9B21              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B21              ; B="0".
 295+ 9B21
 296+ 9B21 04           4 inc b
 297+ 9B22 3C           	inc a
 298+ 9B23 20 FC        	jr nz,4B
 299+ 9B25 78           	ld a,b
 300+ 9B26 08           	ex af,af
 301+ 9B27 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B2A 23           5 inc hl
 303+ 9B2B 23           	inc hl
 304+ 9B2C 10 FC        	djnz 5B
 305+ 9B2E 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B31 CD AE 90     	call Extrae_address
 307+ 9B34 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B37
 309+ 9B37              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B37              ; _(Posicion_actual).
 311+ 9B37
 312+ 9B37 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B3A 34           	inc (hl)
 314+ 9B3B 08               ex af,af
 315+ 9B3C 6F           	ld l,a
 316+ 9B3D 18 DD        	jr 6B
 317+ 9B3F
 318+ 9B3F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B3F
 320+ 9B3F 47           3 ld b,a
 321+ 9B40 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B43 23           2 inc hl
 323+ 9B44 23           	inc hl
 324+ 9B45 10 FC        	djnz 2B
 325+ 9B47 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B4A C9           8 ret
 327+ 9B4B
 328+ 9B4B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B4B              ;
 330+ 9B4B              ;	24/7/22
 331+ 9B4B              ;
 332+ 9B4B              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B4B              ;
 334+ 9B4B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B4B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B4B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B4B
 338+ 9B4B 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B4E A7           	and a
 340+ 9B4F 20 1F        	jr nz,1F
 341+ 9B51 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B53 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B56
 344+ 9B56 21 C2 8B     	ld hl,Columns
 345+ 9B59 34           	inc (hl)
 346+ 9B5A 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B5D E6 01        	and 1
 348+ 9B5F 28 0F        	jr z,1F
 349+ 9B61 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B64 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B65 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B68 CD CD 94     	call Genera_coordenadas
 353+ 9B6B CD D0 9C     	call Inc_CTRL_DESPLZ
 354+ 9B6E 18 03        	jr 2F
 355+ 9B70 CD D0 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B73 C9           2 ret
 357+ 9B74
 358+ 9B74              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B74              ;
 360+ 9B74              ;	24/7/22
 361+ 9B74              ;
 362+ 9B74              ;	Ciclo_completo.
 363+ 9B74              ;
 364+ 9B74              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B74              ;
 366+ 9B74              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B74              ; 	Decrementamos (Columns).
 368+ 9B74              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B74              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B74
 371+ 9B74
 372+ 9B74 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B77 FE FF        	cp $ff
 374+ 9B79 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B7B E6 F0        	and $f0
 376+ 9B7D 20 28        	jr nz,3F
 377+ 9B7F
 378+ 9B7F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B7F
 380+ 9B7F 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B82 47           	ld b,a
 382+ 9B83 3E F8        	ld a,$f8
 383+ 9B85 80           	add b
 384+ 9B86 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B89 18 1C        	jr 3F
 386+ 9B8B 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B8E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B8F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B90 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9B93 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B96 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B98 20 0A        	jr nz,2F
 393+ 9B9A 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B9D 23           	inc hl
 395+ 9B9E 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9BA1 CD CD 94     	call Genera_coordenadas
 397+ 9BA4
 398+ 9BA4              ; Inicia el puntero de Sprite.
 399+ 9BA4
 400+ 9BA4 CD C3 90     2 call Inicia_puntero_objeto_der
 401+ 9BA7 C9           3 ret
 402+ 9BA8
 403+ 9BA8              ; ******************************************************************************************************************************************************************************************
 404+ 9BA8              ;
 405+ 9BA8              ;	15/02/23
 406+ 9BA8              ;
 407+ 9BA8              ;	Mov_left.
 408+ 9BA8              ;
 409+ 9BA8              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BA8              ;
 411+ 9BA8              Mov_left
 412+ 9BA8
 413+ 9BA8 21 C0 8B     	ld hl,Ctrl_0
 414+ 9BAB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BAD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BAD              ; 																	; _ en el caso de que no lo haya.
 417+ 9BAD 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9BB0 CB 77        	bit 6,a
 419+ 9BB2 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BB4
 421+ 9BB4 CD CA 9C     	call Stop_Amadeus_left
 422+ 9BB7 C8           	ret z
 423+ 9BB8 20 4A        	jr nz,8F
 424+ 9BBA
 425+ 9BBA 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BBD A7           	and a
 427+ 9BBE 20 44        	jr nz,8F
 428+ 9BC0
 429+ 9BC0 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BC3 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BC4 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BC6
 433+ 9BC6              ; ---------- ---------- ----------
 434+ 9BC6
 435+ 9BC6 3A D8 8B     	ld a,(Vel_left)
 436+ 9BC9 FE 02        	cp 2
 437+ 9BCB 28 0F        	jr z,1F
 438+ 9BCD 38 04        	jr c,6F
 439+ 9BCF FE 04        	cp 4
 440+ 9BD1 28 12        	jr z,7F
 441+ 9BD3
 442+ 9BD3              ; ---------- ---------- ----------
 443+ 9BD3
 444+ 9BD3 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BD6 FE F8        	cp $f8
 446+ 9BD8 20 2A        	jr nz,8F
 447+ 9BDA 18 10        	jr 4F
 448+ 9BDC 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BDF FE F9        	cp $f9
 450+ 9BE1 20 21        	jr nz,8F
 451+ 9BE3 18 07        	jr 4F
 452+ 9BE5 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BE8 FE FB        	cp $fb
 454+ 9BEA 20 18        	jr nz,8F
 455+ 9BEC
 456+ 9BEC              ; ---------- ---------- ----------
 457+ 9BEC
 458+ 9BEC              4
 459+ 9BEC CD F2 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BEF              ;	call Reinicio
 461+ 9BEF
 462+ 9BEF              ; ---------- ---------- ----------
 463+ 9BEF
 464+ 9BEF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BF1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BF2
 467+ 9BF2              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BF2              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BF2
 470+ 9BF2 CD 0B 9C     	call DESPLZ_IZQ
 471+ 9BF5 C1           	pop bc
 472+ 9BF6 10 F9        	djnz 5B
 473+ 9BF8 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BFB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BFC 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9BFF CD CD 94     	call Genera_coordenadas
 477+ 9C02 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C04
 479+ 9C04              ; ---------- ---------- ----------
 480+ 9C04
 481+ 9C04              ; Movemos, no hay recolocación.
 482+ 9C04
 483+ 9C04 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9C07 CD 0B 9C     	call DESPLZ_IZQ
 485+ 9C0A C9           2 ret
 486+ 9C0B
 487+ 9C0B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C0B              ;
 489+ 9C0B              ;	22/9/22
 490+ 9C0B
 491+ 9C0B              DESPLZ_IZQ
 492+ 9C0B
 493+ 9C0B CD 1A 9C     	call Desplaza_izquierda
 494+ 9C0E CD 66 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C11 CD 8E 9C     	call Ciclo_completo_2
 496+ 9C14 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C17 CB BE        	res 7,(hl)
 498+ 9C19 C9           	ret
 499+ 9C1A
 500+ 9C1A              Desplaza_izquierda
 501+ 9C1A
 502+ 9C1A 3A D8 8B     	ld a,(Vel_left)
 503+ 9C1D 47           	ld b,a
 504+ 9C1E 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C21 23           1 inc hl
 506+ 9C22 23           	inc hl
 507+ 9C23 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C25 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C28 CD AE 90     	call Extrae_address
 510+ 9C2B 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C2E
 512+ 9C2E              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C2E
 514+ 9C2E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C2E              ; Cuántos movimientos hemos hecho ??
 516+ 9C2E              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C2E
 518+ 9C2E 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C31 EB           	ex de,hl
 520+ 9C32 A7           	and a
 521+ 9C33 ED 52        	sbc hl,de
 522+ 9C35 CB 3D        	srl l
 523+ 9C37 3E 08        6 ld a,8
 524+ 9C39 95           	sub l
 525+ 9C3A 30 1E        	jr nc,3F
 526+ 9C3C
 527+ 9C3C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C3C              ; B="0".
 529+ 9C3C
 530+ 9C3C 04           4 inc b
 531+ 9C3D 3C           	inc a
 532+ 9C3E 20 FC        	jr nz,4B
 533+ 9C40 78           	ld a,b
 534+ 9C41 08           	ex af,af
 535+ 9C42 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C45 23           5 inc hl
 537+ 9C46 23           	inc hl
 538+ 9C47 10 FC        	djnz 5B
 539+ 9C49 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C4C CD AE 90     	call Extrae_address
 541+ 9C4F 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C52
 543+ 9C52              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C52              ; _(Posicion_actual).
 545+ 9C52
 546+ 9C52 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C55 35           	dec (hl)
 548+ 9C56 08           	ex af,af
 549+ 9C57 6F           	ld l,a
 550+ 9C58 18 DD        	jr 6B
 551+ 9C5A
 552+ 9C5A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C5A
 554+ 9C5A 47           3 ld b,a
 555+ 9C5B 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C5E 23           2 inc hl
 557+ 9C5F 23           	inc hl
 558+ 9C60 10 FC        	djnz 2B
 559+ 9C62 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C65 C9           8 ret
 561+ 9C66
 562+ 9C66              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C66              ;
 564+ 9C66              ;	modifica_parametros_1er_DESPLZ
 565+ 9C66              ;
 566+ 9C66              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C66              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C66              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C66
 570+ 9C66 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C69 A7           	and a
 572+ 9C6A 20 1E        	jr nz,1F
 573+ 9C6C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C6D 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C70 21 C2 8B     	ld hl,Columns
 576+ 9C73 34           	inc (hl)
 577+ 9C74 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C77 E6 01        	and 1
 579+ 9C79 20 0F        	jr nz,1F
 580+ 9C7B 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C7E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C7F 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C82 CD CD 94     	call Genera_coordenadas
 584+ 9C85 CD E1 9C     	call Dec_CTRL_DESPLZ
 585+ 9C88 18 03        	jr 2F
 586+ 9C8A CD E1 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C8D C9           2 ret
 588+ 9C8E
 589+ 9C8E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C8E
 591+ 9C8E 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C91 FE F7        	cp $f7
 593+ 9C93 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C95 30 2C        	jr nc,3F
 595+ 9C97
 596+ 9C97              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C97
 598+ 9C97 06 00        	ld b,0
 599+ 9C99 04           4 inc b
 600+ 9C9A 3C           	inc a
 601+ 9C9B FE F7        	cp $f7
 602+ 9C9D 20 FA        	jr nz,4B
 603+ 9C9F 3E FF        	ld a,$ff
 604+ 9CA1 90           	sub b
 605+ 9CA2 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9CA5 18 1C        	jr 3F
 607+ 9CA7
 608+ 9CA7              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CA7
 610+ 9CA7 21 C2 8B     1 ld hl,Columns
 611+ 9CAA 35           	dec (hl)
 612+ 9CAB AF           	xor a
 613+ 9CAC 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9CAF 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9CB2 E6 01        	and 1
 616+ 9CB4 28 0A        	jr z,2F
 617+ 9CB6 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CB9 2B           	dec hl
 619+ 9CBA 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CBD CD CD 94     	call Genera_coordenadas
 621+ 9CC0
 622+ 9CC0              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CC0
 624+ 9CC0 CD D6 90     2 call Inicia_puntero_objeto_izq
 625+ 9CC3 C9           3 ret
 626+ 9CC4
 627+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CC4              ;
 629+ 9CC4              ;	19/10/22
 630+ 9CC4              ;
 631+ 9CC4              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CC4              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CC4
 634+ 9CC4 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CC7 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CC9 C9           	ret
 637+ 9CCA
 638+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CCA              ;
 640+ 9CCA              ;	19/10/22
 641+ 9CCA              ;
 642+ 9CCA              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CCA              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CCA
 645+ 9CCA 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CCD FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CCF C9           	ret
 648+ 9CD0
 649+ 9CD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CD0              ;
 651+ 9CD0              ;	24/7/22
 652+ 9CD0              ;
 653+ 9CD0              ;	Inc_CTRL_DESPLZ
 654+ 9CD0              ;
 655+ 9CD0              ;
 656+ 9CD0              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CD0
 658+ 9CD0 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CD3 3A D9 8B     	ld a,(Vel_right)
 660+ 9CD6 A7           	and a
 661+ 9CD7 28 06        	jr z,1F
 662+ 9CD9 47           	ld b,a
 663+ 9CDA 34           3 inc (hl)
 664+ 9CDB 10 FD        	djnz 3B
 665+ 9CDD 18 01        	jr 2F
 666+ 9CDF 34           1 inc (hl)
 667+ 9CE0 C9           2 ret
 668+ 9CE1
 669+ 9CE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CE1              ;
 671+ 9CE1              ;	5/2/23
 672+ 9CE1              ;
 673+ 9CE1              ;	Dec_CTRL_DESPLZ
 674+ 9CE1              ;
 675+ 9CE1              ;
 676+ 9CE1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CE1
 678+ 9CE1 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CE4 3A D8 8B     	ld a,(Vel_left)
 680+ 9CE7 A7           	and a
 681+ 9CE8 28 06        	jr z,1F
 682+ 9CEA 47           	ld b,a
 683+ 9CEB 35           3 dec (hl)
 684+ 9CEC 10 FD        	djnz 3B
 685+ 9CEE 18 01        	jr 2F
 686+ 9CF0 35           1 dec (hl)
 687+ 9CF1 C9           2 ret
 688+ 9CF2
 689+ 9CF2              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CF2
 691+ 9CF2 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CF5 01 1F 00     	ld bc,31
 693+ 9CF8 A7           	and a
 694+ 9CF9 ED 4A        	adc hl,bc
 695+ 9CFB 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9CFE 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D01 CB C6        	set 0,(hl)
 698+ 9D03 C9           	ret
 699+ 9D04
 700+ 9D04              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D04
 702+ 9D04 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D07 01 1F 00     	ld bc,31
 704+ 9D0A A7           	and a
 705+ 9D0B ED 42        	sbc hl,bc
 706+ 9D0D 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D10 21 C0 8B     	ld hl,Ctrl_0
 708+ 9D13 CB CE        	set 1,(hl)
 709+ 9D15 C9           	ret
 710+ 9D16
 711+ 9D16              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D16
 713+ 9D16 24           Reaparece_abajo inc h
 714+ 9D17 01 E0 17     	ld bc,$17e0
 715+ 9D1A A7           	and a
 716+ 9D1B ED 4A        	adc hl,bc
 717+ 9D1D 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D20 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D23 CB D6        	set 2,(hl)
 720+ 9D25 C9           	ret
 721+ 9D26
 722+ 9D26              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D26
 724+ 9D26 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D29 A7           	and a
 726+ 9D2A ED 42        	sbc hl,bc
 727+ 9D2C 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D2F 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D32 CB DE        	set 3,(hl)
 730+ 9D34 C9           	ret
 731+ 9D35
 732+ 9D35              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D35              ;
 734+ 9D35              ;	15/07/23
 735+ 9D35
 736+ 9D35              Reinicio
 737+ 9D35
 738+ 9D35              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D35
 740+ 9D35 AF           	xor a
 741+ 9D36 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D39 CD 57 9D     	call Limpia_contenido_hl
 743+ 9D3C
 744+ 9D3C 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D3F CD 57 9D     	call Limpia_contenido_hl
 746+ 9D42
 747+ 9D42 CD AF 92     	call Inicializa_Puntero_indice_mov
 748+ 9D45 CD 56 9E     	call Inicia_Puntero_mov
 749+ 9D48
 750+ 9D48 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D4B 06 05        	ld b,5
 752+ 9D4D 77           1 ld (hl),a
 753+ 9D4E 23           	inc hl
 754+ 9D4F 10 FC        	djnz 1B
 755+ 9D51
 756+ 9D51 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D54 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D56
 759+ 9D56 C9           	ret
 760+ 9D57
 761+ 9D57 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D58 23           	inc hl
 763+ 9D59 77           	ld (hl),a
 764+ 9D5A C9           	ret
 765+ 9D5B
 766+ 9D5B              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D5B              ;
 768+ 9D5B              ;	18/6/24
 769+ 9D5B              ;
 770+ 9D5B
 771+ 9D5B              Amadeus_a_izquierda
 772+ 9D5B
 773+ 9D5B              ;	Actualiza contador de movimientos.
 774+ 9D5B
 775+ 9D5B 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D5E 35           	dec (hl)
 777+ 9D5F 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D61
 779+ 9D61 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D64 2B           	dec hl
 781+ 9D65 2B           	dec hl
 782+ 9D66 2B           	dec hl
 783+ 9D67 2B           	dec hl
 784+ 9D68 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D6B
 786+ 9D6B 21 26 8C     	ld hl,Ctrl_3
 787+ 9D6E CB EE        	set 5,(hl)
 788+ 9D70
 789+ 9D70 C9           	ret
 790+ 9D71
 791+ 9D71 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D72 C9           	ret
 793+ 9D73
 794+ 9D73
 795+ 9D73              Amadeus_a_derecha
 796+ 9D73
 797+ 9D73              ;	Actualiza contador de movimientos.
 798+ 9D73
 799+ 9D73 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D76 34           	inc (hl)
 801+ 9D77 3E 7A        	ld a,$7a
 802+ 9D79 BE           	cp (hl)
 803+ 9D7A 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D7C
 805+ 9D7C 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D7F 23           	inc hl
 807+ 9D80 23           	inc hl
 808+ 9D81 23           	inc hl
 809+ 9D82 23           	inc hl
 810+ 9D83 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D86
 812+ 9D86 21 26 8C     	ld hl,Ctrl_3
 813+ 9D89 CB EE        	set 5,(hl)
 814+ 9D8B C9           	ret
 815+ 9D8C
 816+ 9D8C 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D8D C9           	ret
# file closed: Direcciones.asm
2175  9D8E              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D8E              ; ----- ----- ----- ----- -----
   2+ 9D8E              ;
   3+ 9D8E              ;   28/12/23
   4+ 9D8E
   5+ 9D8E              Movimiento
   6+ 9D8E
   7+ 9D8E              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D8E
   9+ 9D8E 3A BF 8B         ld a,(Ctrl_2)
  10+ 9D91 CB 57            bit 2,a
  11+ 9D93 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D95
  13+ 9D95 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9D98 7E               ld a,(hl)
  15+ 9D99
  16+ 9D99              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D99
  18+ 9D99              Inicia_desplazamiento.
  19+ 9D99
  20+ 9D99              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D99
  22+ 9D99 CD 8C 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D9C
  24+ 9D9C              ; Iniciamos (Repetimos_mov).
  25+ 9D9C
  26+ 9D9C 7E               ld a,(hl)
  27+ 9D9D E6 0F            and $0f
  28+ 9D9F 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9DA2 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DA5
  31+ 9DA5              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DA5
  33+ 9DA5 23               inc hl
  34+ 9DA6 7E               ld a,(hl)
  35+ 9DA7 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9DAA 2B               dec hl
  37+ 9DAB
  38+ 9DAB 21 BF 8B         ld hl,Ctrl_2
  39+ 9DAE CB D6            set 2,(hl)
  40+ 9DB0
  41+ 9DB0              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DB0              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DB0
  44+ 9DB0              Desplazamiento_iniciado
  45+ 9DB0
  46+ 9DB0 CD 60 9E         call Aplica_desplazamiento
  47+ 9DB3
  48+ 9DB3              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DB3
  50+ 9DB3 3A 26 8C         ld a,(Ctrl_3)
  51+ 9DB6 CB 4F            bit 1,a
  52+ 9DB8 C0               ret nz
  53+ 9DB9
  54+ 9DB9 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DBC 35               dec (hl)
  56+ 9DBD C0               ret nz
  57+ 9DBE
  58+ 9DBE              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DBE              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DBE              ; Analiza (Cola_de_desplazamiento).
  61+ 9DBE
  62+ 9DBE 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DC1 A7               and a
  64+ 9DC2 CC B5 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DC5 28 30            jr z,Reinicia_el_movimiento
  66+ 9DC7
  67+ 9DC7 FE FF            cp $ff
  68+ 9DC9 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DCB
  70+ 9DCB FE FE            cp $fe
  71+ 9DCD CC 3A 9E         call z,Fijamos_bucle
  72+ 9DD0 28 25            jr z,Reinicia_el_movimiento
  73+ 9DD2
  74+ 9DD2 FE FD            cp $fd
  75+ 9DD4 20 11            jr nz,1F
  76+ 9DD6
  77+ 9DD6              ; ---
  78+ 9DD6              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DD6
  80+ 9DD6 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DD9 CB 5F            bit 3,a
  82+ 9DDB 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DDD
  84+ 9DDD              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DDD
  86+ 9DDD 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DE0 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DE2
  89+ 9DE2 CD 4B 9E         call Inicia_Repetimos_movimiento
  90+ 9DE5 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DE7              ; ---
  92+ 9DE7
  93+ 9DE7 FE 01        1 cp 1
  94+ 9DE9 CA 24 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DEC
  96+ 9DEC 3D               dec a
  97+ 9DED 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9DF0
  99+ 9DF0 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DF3 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DF6              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DF6 C9               ret
 103+ 9DF7
 104+ 9DF7              Reinicia_el_movimiento
 105+ 9DF7
 106+ 9DF7 3A BF 8B         ld a,(Ctrl_2)
 107+ 9DFA CB 5F            bit 3,a
 108+ 9DFC 28 1B            jr z,2F
 109+ 9DFE
 110+ 9DFE              ; (Cola_de_desplazamiento)="254".
 111+ 9DFE
 112+ 9DFE 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E01 35               dec (hl)
 114+ 9E02 20 15            jr nz,2F
 115+ 9E04
 116+ 9E04              ; Fin de las repeticiones del último movimiento.
 117+ 9E04
 118+ 9E04 21 BF 8B         ld hl,Ctrl_2
 119+ 9E07 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E09
 121+ 9E09 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9E0C 23               inc hl
 123+ 9E0D 23               inc hl
 124+ 9E0E 23               inc hl
 125+ 9E0F 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E12              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E12 7E               ld a,(hl)
 128+ 9E13 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9E16
 130+ 9E16 C3 BE 9D         jp Cola
 131+ 9E19
 132+ 9E19 CD 56 9E     2 call Inicia_Puntero_mov
 133+ 9E1C
 134+ 9E1C 21 BF 8B         ld hl,Ctrl_2
 135+ 9E1F CB 96            res 2,(hl)
 136+ 9E21
 137+ 9E21 C3 8E 9D         jp Movimiento
 138+ 9E24
 139+ 9E24              Siguiente_desplazamiento
 140+ 9E24
 141+ 9E24              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E24              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E24
 144+ 9E24 21 BF 8B         ld hl,Ctrl_2
 145+ 9E27 CB 96            res 2,(hl)
 146+ 9E29
 147+ 9E29 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E2C 23               inc hl
 149+ 9E2D 23               inc hl
 150+ 9E2E 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E31
 152+ 9E31 7E               ld a,(hl)
 153+ 9E32 A7               and a
 154+ 9E33 CC B5 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E36 CA F7 9D         jp z,Reinicia_el_movimiento
 156+ 9E39
 157+ 9E39 C9               ret
 158+ 9E3A
 159+ 9E3A              ; Subrutinas -----------------------------------------
 160+ 9E3A              ; ---------- --------- --------- ---------- ----------
 161+ 9E3A              ;
 162+ 9E3A              ;   24/07/23
 163+ 9E3A              ;
 164+ 9E3A              ;   Fijamos_bucle
 165+ 9E3A              ;
 166+ 9E3A              ;
 167+ 9E3A
 168+ 9E3A              Fijamos_bucle
 169+ 9E3A
 170+ 9E3A 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E3D 3C               inc a
 172+ 9E3E 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E41
 174+ 9E41 CD B5 9E         call Incrementa_Puntero_indice_mov
 175+ 9E44 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E47 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E4A C9               ret
 178+ 9E4B
 179+ 9E4B              ; ---------- --------- --------- ---------- ----------
 180+ 9E4B              ;
 181+ 9E4B              ;   07/7/23
 182+ 9E4B              ;
 183+ 9E4B              ;   Inicia_Repetimos_movimiento
 184+ 9E4B              ;
 185+ 9E4B              ;
 186+ 9E4B
 187+ 9E4B              Inicia_Repetimos_movimiento
 188+ 9E4B
 189+ 9E4B              ; Iniciamos (Repetimos_movimiento).
 190+ 9E4B
 191+ 9E4B DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E4F DD 7E 02         ld a,(ix+2)
 193+ 9E52 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E55
 195+ 9E55 C9               ret
 196+ 9E56
 197+ 9E56              ; ---------- --------- --------- ---------- ----------
 198+ 9E56              ;
 199+ 9E56              ;   26/6/23
 200+ 9E56              ;
 201+ 9E56              ;   Inicia_Puntero_mov
 202+ 9E56              ;
 203+ 9E56              ;
 204+ 9E56
 205+ 9E56 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E59 CD AE 90         call Extrae_address
 207+ 9E5C 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E5F C9               ret
 209+ 9E60
 210+ 9E60              ; ---------- --------- --------- ---------- ----------
 211+ 9E60              ;
 212+ 9E60              ;   27/06/23
 213+ 9E60              ;
 214+ 9E60              ;   Aplica_movimiento.
 215+ 9E60
 216+ 9E60              Aplica_desplazamiento
 217+ 9E60
 218+ 9E60              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E60
 220+ 9E60 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E63
 222+ 9E63 7E               ld a,(hl)
 223+ 9E64 E6 F0            and $f0
 224+ 9E66 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E67
 226+ 9E67 CB 7E            bit 7,(hl)
 227+ 9E69 28 03            jr z,1F
 228+ 9E6B CD 42 9A         call Mov_up
 229+ 9E6E 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E71 CB 76            bit 6,(hl)
 231+ 9E73 28 03            jr z,2F
 232+ 9E75 CD 09 9A         call Mov_down
 233+ 9E78
 234+ 9E78              ; Se ha aplicado reinicio ???
 235+ 9E78              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E78
 237+ 9E78              ;    ld a,(Ctrl_3)
 238+ 9E78              ;    bit 1,a
 239+ 9E78              ;    ret nz
 240+ 9E78
 241+ 9E78 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E7B CB 6E            bit 5,(hl)
 243+ 9E7D 28 03            jr z,3F
 244+ 9E7F CD A8 9B         call Mov_left
 245+ 9E82 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E85 CB 66            bit 4,(hl)
 247+ 9E87 C8               ret z
 248+ 9E88 CD 85 9A         call Mov_right
 249+ 9E8B C9               ret
 250+ 9E8C
 251+ 9E8C              ; ---------- --------- --------- ---------- ----------
 252+ 9E8C              ;
 253+ 9E8C              ;   26/06/23
 254+ 9E8C              ;
 255+ 9E8C              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E8C
 257+ 9E8C              Ajusta_velocidad_desplazamiento
 258+ 9E8C
 259+ 9E8C              ; 1er byte de la cadena de movimiento.
 260+ 9E8C              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E8C
 262+ 9E8C CD AA 9E         call Extrae_nibble_alto
 263+ 9E8F
 264+ 9E8F 32 DA 8B         ld (Vel_up),a
 265+ 9E92 79               ld a,c
 266+ 9E93 E6 0F            and $0f
 267+ 9E95 32 DB 8B         ld (Vel_down),a
 268+ 9E98
 269+ 9E98              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E98              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E98
 272+ 9E98 23               inc hl
 273+ 9E99 CD AA 9E         call Extrae_nibble_alto
 274+ 9E9C
 275+ 9E9C 32 D8 8B         ld (Vel_left),a
 276+ 9E9F 79               ld a,c
 277+ 9EA0 E6 0F            and $0f
 278+ 9EA2 32 D9 8B         ld (Vel_right),a
 279+ 9EA5
 280+ 9EA5              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EA5
 282+ 9EA5 23               inc hl
 283+ 9EA6 22 E6 8B         ld (Puntero_mov),hl
 284+ 9EA9 C9               ret
 285+ 9EAA
 286+ 9EAA 06 04        Extrae_nibble_alto ld b,4
 287+ 9EAC 7E               ld a,(hl)
 288+ 9EAD 4F               ld c,a
 289+ 9EAE E6 F0            and $f0
 290+ 9EB0 CB 3F        1 srl a
 291+ 9EB2 10 FC            djnz 1B
 292+ 9EB4 C9               ret
 293+ 9EB5
 294+ 9EB5              ; ---------- --------- --------- ---------- ----------
 295+ 9EB5              ;
 296+ 9EB5              ;   5/7/23
 297+ 9EB5              ;
 298+ 9EB5              ;   Incrementa_Puntero_indice_mov
 299+ 9EB5
 300+ 9EB5              Incrementa_Puntero_indice_mov
 301+ 9EB5
 302+ 9EB5 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9EB8 34               inc (hl)
 304+ 9EB9
 305+ 9EB9 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9EBC 01 02 00         ld bc,2
 307+ 9EBF A7               and a
 308+ 9EC0 09               add hl,bc
 309+ 9EC1 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9EC4
 311+ 9EC4 7E               ld a,(hl)
 312+ 9EC5 A7               and a
 313+ 9EC6
 314+ 9EC6              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EC6
 316+ 9EC6              ;    jr z,$
 317+ 9EC6
 318+ 9EC6              ;! Reinicia el Patrón de movimiento.
 319+ 9EC6
 320+ 9EC6 CC CB 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EC9
 322+ 9EC9 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ECA
 324+ 9ECA C9               ret
 325+ 9ECB
 326+ 9ECB              ; ---------- --------- --------- ---------- ----------
 327+ 9ECB              ;
 328+ 9ECB              ;   15/01/24
 329+ 9ECB              ;
 330+ 9ECB              ;   Inicializa_Puntero_indice_mov
 331+ 9ECB
 332+ 9ECB              Inicializa_Puntero_indice_mov_2
 333+ 9ECB
 334+ 9ECB              ; Existe etiqueta de bucle principal???
 335+ 9ECB
 336+ 9ECB 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ECE 24               inc h
 338+ 9ECF 25               dec h
 339+ 9ED0 28 05            jr z,2F
 340+ 9ED2
 341+ 9ED2 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9ED5 18 14            jr 3F
 343+ 9ED7
 344+ 9ED7              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ED7
 346+ 9ED7 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9EDA 47               ld b,a
 348+ 9EDB
 349+ 9EDB 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9EDE 2B           1 dec hl
 351+ 9EDF 2B               dec hl
 352+ 9EE0 10 FC            djnz 1B
 353+ 9EE2 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9EE5
 355+ 9EE5 AF               xor a
 356+ 9EE6 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9EE9 18 06            jr 4F
 358+ 9EEB
 359+ 9EEB 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EEE 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9EF1 C9           4 ret
 362+ 9EF2
 363+ 9EF2              ; ----------------------------------------------------------------------
 364+ 9EF2              ;
 365+ 9EF2              ;   30/01/24
 366+ 9EF2              ;
 367+ 9EF2              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EF2
 369+ 9EF2 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EF5 CD 4A 94         call Calcula_salto_en_BC
 371+ 9EF8 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EFB A7               and a
 373+ 9EFC ED 4A            adc hl,bc
 374+ 9EFE C9               ret
 375+ 9EFF
 376+ 9EFF              ; ----------------------------------------------------------------------
 377+ 9EFF              ;
 378+ 9EFF              ;   30/01/24
 379+ 9EFF              ;
 380+ 9EFF              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EFF              ;
 382+ 9EFF              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EFF
 384+ 9EFF 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F00 23               inc hl
 386+ 9F01 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F02 69               ld l,c
 388+ 9F03 60               ld h,b
 389+ 9F04 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F07 C9               ret
 391+ 9F08
# file closed: Movimiento.asm
2176  9F08              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F08              Motor_de_disparos_entidades
   2+ 9F08
   3+ 9F08 3A 14 8C      ld a,(Numero_de_disparos_de_entidades)
   4+ 9F0B FE 07            cp 7
   5+ 9F0D C8               ret z
   6+ 9F0E
   7+ 9F0E 06 07            ld b,7                                                               ; Contador de disparos.
   8+ 9F10 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F13
  10+ 9F13 CD AE 90     1 call Extrae_address
  11+ 9F16 13               inc de
  12+ 9F17 13               inc de
  13+ 9F18 ED 53 17 8C      ld (Puntero_rancio_disparos_album),de
  14+ 9F1C
  15+ 9F1C 23               inc hl
  16+ 9F1D
  17+ 9F1D 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F1E 35               dec (hl)
  19+ 9F1F 28 1E            jr z,3F
  20+ 9F21
  21+ 9F21 23               inc hl
  22+ 9F22
  23+ 9F22              ;;;Mueve_disparo_Entidad
  24+ 9F22
  25+ 9F22              ;    ld a,(Ctrl_5)
  26+ 9F22              ;    bit 2,a
  27+ 9F22              ;    di
  28+ 9F22              ;    jr nz,$
  29+ 9F22              ;    ei
  30+ 9F22
  31+ 9F22 CD AE 90         call Extrae_address
  32+ 9F25 CD C3 99         call NextScan
  33+ 9F28 CD C3 99         call NextScan
  34+ 9F2B              ;    call NextScan
  35+ 9F2B              ;    call NextScan
  36+ 9F2B
  37+ 9F2B              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  38+ 9F2B
  39+ 9F2B D5               push de
  40+ 9F2C
  41+ 9F2C E5               push hl
  42+ 9F2D D1               pop de
  43+ 9F2E
  44+ 9F2E A7               and a
  45+ 9F2F 21 FF 57         ld hl,$57ff
  46+ 9F32 ED 52            sbc hl,de
  47+ 9F34
  48+ 9F34 F3               di
  49+ 9F35 38 FE            jr c,$
  50+ 9F37 FB               ei
  51+ 9F38
  52+ 9F38 EB               ex de,hl
  53+ 9F39 D1               pop de
  54+ 9F3A
  55+ 9F3A              ;    jr c,Elimina_disparo
  56+ 9F3A
  57+ 9F3A EB               ex de,hl
  58+ 9F3B
  59+ 9F3B 73               ld (hl),e
  60+ 9F3C 23               inc hl
  61+ 9F3D 72               ld (hl),d
  62+ 9F3E
  63+ 9F3E C9               ret
  64+ 9F3F
  65+ 9F3F
  66+ 9F3F EB           3 ex de,hl
  67+ 9F40 10 D1            djnz 1B
  68+ 9F42
  69+ 9F42 C9               ret
  70+ 9F43
  71+ 9F43
  72+ 9F43              ; --------------------------------------------------------------------------------------
  73+ 9F43              ;
  74+ 9F43              ;   19/09/24
  75+ 9F43              ;
  76+ 9F43
  77+ 9F43              Genera_datos_de_impresion_disparos_Entidades
  78+ 9F43
  79+ 9F43              ;*  Exclusiones.
  80+ 9F43
  81+ 9F43 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
  82+ 9F46 FE 07            cp 7
  83+ 9F48 C8               ret z                                                     ;? Salimos si no hay generado ningún disparo de entidad.
  84+ 9F49
  85+ 9F49              ; ---------------
  86+ 9F49
  87+ 9F49              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
  88+ 9F49
  89+ 9F49 3E 07            ld a,7
  90+ 9F4B 08               ex af,af                                                  ;? 7 Cajas como 7 soles. Contador de cajas alojado en A´.
  91+ 9F4C
  92+ 9F4C 2A 29 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  93+ 9F4F CD AE 90     1 call Extrae_address
  94+ 9F52
  95+ 9F52 23               inc hl
  96+ 9F53 7E               ld a,(hl)
  97+ 9F54 A7               and a
  98+ 9F55
  99+ 9F55 28 19            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 100+ 9F57
 101+ 9F57 2B               dec hl
 102+ 9F58
 103+ 9F58 ED 73 00 8C      ld (Stack),sp
 104+ 9F5C F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 105+ 9F5D
 106+ 9F5D              Genera_scanlines_de_los_disparos_de_entidades.
 107+ 9F5D
 108+ 9F5D C1               pop bc
 109+ 9F5E E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 110+ 9F5F              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 111+ 9F5F ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 112+ 9F63
 113+ 9F63 F1               pop af
 114+ 9F64 F1               pop af
 115+ 9F65 F1               pop af
 116+ 9F66
 117+ 9F66 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 118+ 9F6A
 119+ 9F6A E5               push hl                                                   ;? Sube 2º scanline al álbum.
 120+ 9F6B CD C3 99         call NextScan
 121+ 9F6E E5               push hl                                                   ;? Sube 1er scanline al álbum.
 122+ 9F6F C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 123+ 9F70
 124+ 9F70              Situa_en_siguiente_caja
 125+ 9F70
 126+ 9F70 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 127+ 9F71 3D               dec a
 128+ 9F72 28 06            jr z,2F
 129+ 9F74 08               ex af,af
 130+ 9F75
 131+ 9F75 13               inc de
 132+ 9F76 13               inc de
 133+ 9F77
 134+ 9F77 EB               ex de,hl
 135+ 9F78 18 D5            jr 1B
 136+ 9F7A
 137+ 9F7A ED 7B 00 8C  2 ld sp,(Stack)
 138+ 9F7E
 139+ 9F7E C9               ret
 140+ 9F7F
 141+ 9F7F              ; --------------------------------------------------------------------------------------
 142+ 9F7F              ;
 143+ 9F7F              ;   18/09/24
 144+ 9F7F              ;
 145+ 9F7F
 146+ 9F7F              Genera_disparo_de_entidad_maldosa
 147+ 9F7F
 148+ 9F7F              ;   Estructura de un disparo de entidades.
 149+ 9F7F
 150+ 9F7F              ;   Disparo_1 defw 0								; Puntero objeto.
 151+ 9F7F              ; 	defw 0											; Puntero de impresión.
 152+ 9F7F              ;	defw 0											; Control.
 153+ 9F7F
 154+ 9F7F              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 155+ 9F7F              ;   _de la entidad en el momento de disparar.
 156+ 9F7F
 157+ 9F7F              ;   El byte alto muestra la siguiente información:
 158+ 9F7F              ;
 159+ 9F7F              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 160+ 9F7F              ;                        _antes de desplazarse a derecha/izquierda.
 161+ 9F7F              ;
 162+ 9F7F              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 163+ 9F7F              ;
 164+ 9F7F              ;                        10xx ..... Izquierda.
 165+ 9F7F              ;                        01xx ..... Derecha.
 166+ 9F7F              ;                        00xx ..... Recto.
 167+ 9F7F
 168+ 9F7F              ;*  Exclusiones.
 169+ 9F7F
 170+ 9F7F              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
 171+ 9F7F              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 172+ 9F7F
 173+ 9F7F 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 174+ 9F82 A7               and a
 175+ 9F83 C8               ret z
 176+ 9F84
 177+ 9F84 3A B5 8B         ld a,(Coordenada_y)
 178+ 9F87 A7               and a
 179+ 9F88 C8               ret z
 180+ 9F89
 181+ 9F89 3D               dec a
 182+ 9F8A C8               ret z
 183+ 9F8B
 184+ 9F8B FE 0E            cp 14
 185+ 9F8D D0               ret nc
 186+ 9F8E
 187+ 9F8E              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 188+ 9F8E              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 189+ 9F8E              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 190+ 9F8E              ;
 191+ 9F8E FD 21 70 83      ld iy,Disparo_entidad
 192+ 9F92
 193+ 9F92 06 11            ld b,17
 194+ 9F94 CD C3 99     3 call NextScan
 195+ 9F97 10 FB            djnz 3B
 196+ 9F99
 197+ 9F99 4D               ld c,l
 198+ 9F9A 44               ld b,h
 199+ 9F9B
 200+ 9F9B              ;   Decrementa el numero de disparos de entidades.
 201+ 9F9B
 202+ 9F9B 21 28 8C         ld hl,Ctrl_5
 203+ 9F9E CB D6            set 2,(hl)
 204+ 9FA0
 205+ 9FA0 21 14 8C         ld hl,Numero_de_disparos_de_entidades
 206+ 9FA3 35               dec (hl)
 207+ 9FA4
 208+ 9FA4              ;   Puntero de impresión del disparo en BC , (1 scanline libre entre la entidad y el disparo).
 209+ 9FA4
 210+ 9FA4 2A 29 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 211+ 9FA7 CD AE 90     1 call Extrae_address
 212+ 9FAA
 213+ 9FAA              ;   Comprobamos si la caja está vacía.
 214+ 9FAA
 215+ 9FAA 23               inc hl
 216+ 9FAB 7E               ld a,(hl)
 217+ 9FAC A7               and a
 218+ 9FAD
 219+ 9FAD 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 220+ 9FAF
 221+ 9FAF              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 222+ 9FAF
 223+ 9FAF 2B               dec hl
 224+ 9FB0
 225+ 9FB0 FD 7D            ld a,iyl
 226+ 9FB2 77               ld (hl),a
 227+ 9FB3 23               inc hl
 228+ 9FB4 FD 7C            ld a,iyh
 229+ 9FB6 77               ld (hl),a
 230+ 9FB7 23               inc hl                                              ; Guarda el puntero objeto del disparo en la caja.
 231+ 9FB8
 232+ 9FB8 71               ld (hl),c
 233+ 9FB9 23               inc hl
 234+ 9FBA 70               ld (hl),b
 235+ 9FBB 23               inc hl                                              ; Guarda el puntero de impresión.
 236+ 9FBC
 237+ 9FBC 3A BE 8B         ld a,(Velocidad)                                    ; Byte bajo de Control guarda la velocidad de la entidad/disparo.
 238+ 9FBF 77               ld (hl),a
 239+ 9FC0
 240+ 9FC0 23               inc hl
 241+ 9FC1
 242+ 9FC1              ;! Ajusta el grado de inclinación del disparo.
 243+ 9FC1
 244+ 9FC1 36 07            ld (hl),7
 245+ 9FC3
 246+ 9FC3              ; Determina tendencia del disparo.
 247+ 9FC3
 248+ 9FC3 3A 6E 89         ld a,(CX_Amadeus)
 249+ 9FC6 47               ld b,a
 250+ 9FC7 3A B4 8B         ld a,(Coordenada_X)
 251+ 9FCA 90               sub b
 252+ 9FCB 38 07            jr c,Disparo_a_derecha
 253+ 9FCD
 254+ 9FCD FE 04        Disparo_a_izquierda cp 4
 255+ 9FCF
 256+ 9FCF D8               ret c
 257+ 9FD0 C8               ret z
 258+ 9FD1
 259+ 9FD1 CB FE            set 7,(hl)
 260+ 9FD3 C9               ret
 261+ 9FD4
 262+ 9FD4 47           Disparo_a_derecha ld b,a
 263+ 9FD5 3E FF            ld a,$ff
 264+ 9FD7 90               sub b
 265+ 9FD8
 266+ 9FD8 FE 04            cp 4
 267+ 9FDA
 268+ 9FDA D8               ret c
 269+ 9FDB C8               ret z
 270+ 9FDC
 271+ 9FDC CB F6            set 6,(hl)
 272+ 9FDE C9               ret
 273+ 9FDF
 274+ 9FDF              ;   --- --- ---
 275+ 9FDF
 276+ 9FDF              Situa_en_siguiente_disparo
 277+ 9FDF
 278+ 9FDF 13               inc de
 279+ 9FE0 13               inc de
 280+ 9FE1
 281+ 9FE1 EB               ex de,hl
 282+ 9FE2 18 C3            jr 1B
 283+ 9FE4
 284+ 9FE4              ; --------------------------------------------------------------------------------------
 285+ 9FE4              ;
 286+ 9FE4              ;   31/08/24
 287+ 9FE4              ;
 288+ 9FE4
 289+ 9FE4              Compara_con_coordenadas_de_disparo
 290+ 9FE4
 291+ 9FE4 3A B5 8B         ld a,(Coordenada_y)
 292+ 9FE7 47               ld b,a
 293+ 9FE8 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 294+ 9FEB 90               sub b
 295+ 9FEC
 296+ 9FEC              ; A = "0" ok
 297+ 9FEC              ; A = "1" ok
 298+ 9FEC
 299+ 9FEC 28 08            jr z,Comprueba_coordenada_X
 300+ 9FEE 3D               dec a
 301+ 9FEF 28 05            jr z,Comprueba_coordenada_X
 302+ 9FF1
 303+ 9FF1              ; A = "$ff" ok
 304+ 9FF1
 305+ 9FF1 FE FE            cp $fe
 306+ 9FF3 28 01            jr z,Comprueba_coordenada_X
 307+ 9FF5
 308+ 9FF5 C9               ret
 309+ 9FF6
 310+ 9FF6              Comprueba_coordenada_X
 311+ 9FF6
 312+ 9FF6 3A B4 8B         ld a,(Coordenada_X)
 313+ 9FF9 47               ld b,a
 314+ 9FFA 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 315+ 9FFD 7E               ld a,(hl)
 316+ 9FFE 90               sub b
 317+ 9FFF
 318+ 9FFF              ; A = "0" ok
 319+ 9FFF              ; A = "1" ok
 320+ 9FFF
 321+ 9FFF 28 09            jr z,Activa_Impacto_en_entidad
 322+ A001 3D               dec a
 323+ A002 28 06            jr z,Activa_Impacto_en_entidad
 324+ A004
 325+ A004              ; A = "2" ok
 326+ A004
 327+ A004 3D               dec a
 328+ A005 28 03            jr z,Activa_Impacto_en_entidad
 329+ A007
 330+ A007              ; A = "$ff"
 331+ A007
 332+ A007 FE FD            cp $fd
 333+ A009 C0               ret nz
 334+ A00A
 335+ A00A              Activa_Impacto_en_entidad
 336+ A00A
 337+ A00A              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 338+ A00A
 339+ A00A 3E 02            ld a,2
 340+ A00C 32 B7 8B         ld (Impacto),a
 341+ A00F
 342+ A00F              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 343+ A00F
 344+ A00F 11 C0 87         ld de,Indice_Explosion_entidades
 345+ A012 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 346+ A015
 347+ A015 73               ld (hl),e
 348+ A016 23               inc hl
 349+ A017 72               ld (hl),d
 350+ A018
 351+ A018              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 352+ A018
 353+ A018 21 2B 8C         ld hl,Impacto2
 354+ A01B CB 9E            res 3,(hl)
 355+ A01D
 356+ A01D C9               ret
 357+ A01E
 358+ A01E              ; --------------------------------------------------------------------------------------
 359+ A01E              ;
 360+ A01E              ;   11/09/24
 361+ A01E              ;
 362+ A01E
 363+ A01E              Limpia_album_de_borrado_disparos
 364+ A01E
 365+ A01E 21 28 8C         ld hl,Ctrl_5
 366+ A021 CB 46            bit 0,(hl)
 367+ A023 C8               ret z
 368+ A024 CB 86            res 0,(hl)
 369+ A026
 370+ A026              Limpiando
 371+ A026
 372+ A026 AF               xor a
 373+ A027 2A 0E 8C         ld hl,(Album_de_borrado_disparos)
 374+ A02A 77               ld (hl),a
 375+ A02B 5D               ld e,l
 376+ A02C 54               ld d,h
 377+ A02D 1C               inc e                                           ; DE = HL+1
 378+ A02E 01 3A 00         ld bc,$003a
 379+ A031 ED B0            ldir
 380+ A033
 381+ A033 C9               ret
 382+ A034
 383+ A034
 384+ A034              ; --------------------------------------------------------------------------------------
 385+ A034              ;
 386+ A034              ;   26/08/24
 387+ A034              ;
 388+ A034
 389+ A034              Calcula_bytes_pintado_disparos
 390+ A034
 391+ A034 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 392+ A037 45               ld b,l
 393+ A038 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 394+ A03B 7D               ld a,l
 395+ A03C
 396+ A03C 90               sub b
 397+ A03D 32 12 8C         ld (Num_de_bytes_album_de_disparos),a
 398+ A040
 399+ A040 C9               ret
 400+ A041
 401+ A041              ; --------------------------------------------------------------------------------------
 402+ A041              ;
 403+ A041              ;   11/09/24
 404+ A041              ;
 405+ A041              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 406+ A041              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 407+ A041              ;   _disparos que el álbum del FRAME actual).
 408+ A041
 409+ A041              Limpia_album_de_pintado_disparos
 410+ A041
 411+ A041              ;*   Exclusiones.
 412+ A041
 413+ A041 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 414+ A044 A7               and a
 415+ A045 C8               ret z
 416+ A046
 417+ A046              ; -----
 418+ A046
 419+ A046 3A 12 8C         ld a,(Num_de_bytes_album_de_disparos)
 420+ A049 47               ld b,a
 421+ A04A 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 422+ A04D
 423+ A04D 90               sub b
 424+ A04E
 425+ A04E C8               ret z
 426+ A04F D8               ret c
 427+ A050
 428+ A050 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 429+ A053 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 430+ A054 AF               xor a                                                               ; "0".
 431+ A055
 432+ A055 77           1 ld (hl),a
 433+ A056 2C               inc l
 434+ A057 10 FC            djnz 1B
 435+ A059
 436+ A059 C9               ret
 437+ A05A
 438+ A05A              ; --------------------------------------------------------------------------------------
 439+ A05A              ;
 440+ A05A              ;   27/08/24
 441+ A05A              ;
 442+ A05A
 443+ A05A              Motor_Disparos_Amadeus
 444+ A05A
 445+ A05A              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 446+ A05A
 447+ A05A 21 20 89         ld hl,Disparo_Amad+1
 448+ A05D
 449+ A05D 34               inc (hl)
 450+ A05E 35               dec (hl)
 451+ A05F
 452+ A05F C8               ret z
 453+ A060
 454+ A060              ;   Esta caja contiene un disparo.
 455+ A060
 456+ A060 CD 67 A0         call Consulta_Impacto
 457+ A063 CC 80 A0         call z,Mueve_disparo_Amadeus
 458+ A066
 459+ A066 C9               ret
 460+ A067
 461+ A067              ; ----------------------
 462+ A067              ;
 463+ A067              ;
 464+ A067              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 465+ A067              ;
 466+ A067              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 467+ A067
 468+ A067
 469+ A067              Consulta_Impacto
 470+ A067
 471+ A067              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 472+ A067              ;   _sea lo más coherente posible.
 473+ A067
 474+ A067 E5               push hl
 475+ A068 2B               dec hl
 476+ A069 CD 61 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 477+ A06C E1               pop hl
 478+ A06D 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 479+ A06E
 480+ A06E C8               ret z
 481+ A06F
 482+ A06F 3A 2B 8C         ld a,(Impacto2)
 483+ A072 CB DF            set 3,a
 484+ A074 32 2B 8C         ld (Impacto2),a
 485+ A077
 486+ A077 E5               push hl
 487+ A078 CD 4E A1         call Genera_coordenadas_de_disparo_Amadeus
 488+ A07B E1               pop hl
 489+ A07C CD 99 A0         call Elimina_disparo
 490+ A07F
 491+ A07F C9               ret
 492+ A080
 493+ A080              ; ----------------------
 494+ A080              ;
 495+ A080              ;
 496+ A080              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 497+ A080
 498+ A080              Mueve_disparo_Amadeus
 499+ A080
 500+ A080 CD AE 90         call Extrae_address
 501+ A083
 502+ A083 CD D2 99         call PreviousScan
 503+ A086 CD D2 99         call PreviousScan
 504+ A089 CD D2 99         call PreviousScan
 505+ A08C CD D2 99         call PreviousScan
 506+ A08F
 507+ A08F              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 508+ A08F
 509+ A08F 7C               ld a,h
 510+ A090 D6 40            sub $40
 511+ A092 EB               ex de,hl
 512+ A093 38 04            jr c,Elimina_disparo
 513+ A095
 514+ A095               ; Introduce nuevo puntero_de_impresión en la caja.
 515+ A095
 516+ A095 73               ld (hl),e
 517+ A096 23               inc hl
 518+ A097 72               ld (hl),d
 519+ A098
 520+ A098 C9               ret
 521+ A099
 522+ A099              ; ----------------------
 523+ A099              ;
 524+ A099              ;   11/9/24
 525+ A099
 526+ A099              Elimina_disparo
 527+ A099
 528+ A099              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 529+ A099              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 530+ A099
 531+ A099              ;   Disparo_1A defw 0									; Puntero objeto.
 532+ A099              ;   	defw 0											; Puntero de impresión.
 533+ A099
 534+ A099 2B               dec hl
 535+ A09A 2B               dec hl
 536+ A09B
 537+ A09B AF               xor a
 538+ A09C 77               ld (hl),a
 539+ A09D 23               inc hl
 540+ A09E 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 541+ A09F
 542+ A09F 23               inc hl
 543+ A0A0 77               ld (hl),a
 544+ A0A1 23               inc hl
 545+ A0A2 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 546+ A0A3
 547+ A0A3 3E 01            ld a,1
 548+ A0A5 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 549+ A0A8
 550+ A0A8 21 28 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 551+ A0AB CB C6            set 0,(hl)
 552+ A0AD
 553+ A0AD AF               xor a
 554+ A0AE 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 555+ A0AF
 556+ A0AF C9               ret
 557+ A0B0
 558+ A0B0              ; --------------------------------------------------------------------------------------
 559+ A0B0              ;
 560+ A0B0              ;   21/8/24
 561+ A0B0              ;
 562+ A0B0
 563+ A0B0              Pinta_disparos
 564+ A0B0
 565+ A0B0 ED 73 00 8C      ld (Stack),sp
 566+ A0B4 06 02            ld b,2
 567+ A0B6
 568+ A0B6 ED 7B 0E 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 569+ A0BA
 570+ A0BA D1           2 pop de
 571+ A0BB
 572+ A0BB 14               inc d
 573+ A0BC 15               dec d
 574+ A0BD
 575+ A0BD 28 1B            jr z,1F
 576+ A0BF
 577+ A0BF              Imprime_scanlines_de_disparo
 578+ A0BF
 579+ A0BF E1               pop hl
 580+ A0C0
 581+ A0C0              ; Puntero objeto en DE.
 582+ A0C0              ; Puntero_de_impresión en HL.
 583+ A0C0
 584+ A0C0              ; 1er scanline.
 585+ A0C0
 586+ A0C0 1A               ld a,(de)
 587+ A0C1 AE               xor (hl)
 588+ A0C2 77               ld (hl),a
 589+ A0C3
 590+ A0C3 13               inc de
 591+ A0C4 2C               inc l
 592+ A0C5
 593+ A0C5 1A               ld a,(de)
 594+ A0C6 AE               xor (hl)
 595+ A0C7 77               ld (hl),a
 596+ A0C8
 597+ A0C8              ; 2º scanline.
 598+ A0C8
 599+ A0C8 E1               pop hl
 600+ A0C9 1B               dec de
 601+ A0CA
 602+ A0CA 1A               ld a,(de)
 603+ A0CB AE               xor (hl)
 604+ A0CC 77               ld (hl),a
 605+ A0CD
 606+ A0CD 13               inc de
 607+ A0CE 2C               inc l
 608+ A0CF
 609+ A0CF 1A               ld a,(de)
 610+ A0D0 AE               xor (hl)
 611+ A0D1 77               ld (hl),a
 612+ A0D2
 613+ A0D2              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 614+ A0D2
 615+ A0D2 18 E6            jr 2B
 616+ A0D4
 617+ A0D4 ED 7B 0C 8C  3 ld sp,(Album_de_pintado_disparos)
 618+ A0D8 18 E0            jr 2B
 619+ A0DA
 620+ A0DA 10 F8        1 djnz 3B
 621+ A0DC ED 7B 00 8C      ld sp,(Stack)
 622+ A0E0 C9               ret
 623+ A0E1
 624+ A0E1              ; --------------------------------------------------------------------------------------
 625+ A0E1              ;
 626+ A0E1              ;   14/09/24
 627+ A0E1              ;
 628+ A0E1              ;   Modifica: HL y DE.
 629+ A0E1
 630+ A0E1
 631+ A0E1              Genera_datos_de_impresion_disparos_Amadeus
 632+ A0E1
 633+ A0E1 ED 73 00 8C      ld (Stack),sp
 634+ A0E5 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 635+ A0E8 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 636+ A0E9
 637+ A0E9 14               inc d                                                     ;? Salimos si no hay disparo.
 638+ A0EA 15               dec d
 639+ A0EB
 640+ A0EB 28 12            jr z,Salida
 641+ A0ED
 642+ A0ED              Genera_scanlines_de_disparo_Amadeus
 643+ A0ED
 644+ A0ED E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 645+ A0EE              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 646+ A0EE ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 647+ A0F2
 648+ A0F2 C1               pop bc
 649+ A0F3 C1               pop bc
 650+ A0F4 C1               pop bc
 651+ A0F5
 652+ A0F5 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 653+ A0F9
 654+ A0F9 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 655+ A0FA CD D2 99         call PreviousScan
 656+ A0FD E5               push hl                                                   ;? Sube 1er scanline al álbum.
 657+ A0FE D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 658+ A0FF
 659+ A0FF              Salida
 660+ A0FF
 661+ A0FF ED 7B 00 8C      ld sp,(Stack)
 662+ A103 C9               ret
 663+ A104
 664+ A104              ; --------------------------------------------------------------------------------------
 665+ A104              ;
 666+ A104              ;   12/09/24
 667+ A104              ;
 668+ A104
 669+ A104              Genera_disparo_Amadeus
 670+ A104
 671+ A104              ;*  Exclusiones.
 672+ A104
 673+ A104 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 674+ A107 A7               and a
 675+ A108 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 676+ A109
 677+ A109 3D               dec a
 678+ A10A 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 679+ A10D
 680+ A10D              Define_puntero_objeto_disparo
 681+ A10D
 682+ A10D              ;   Inicializamos contador.
 683+ A10D
 684+ A10D 06 00            ld b,0
 685+ A10F
 686+ A10F 2A 72 89         ld hl,(p.imp.amadeus)
 687+ A112 2C               inc l
 688+ A113
 689+ A113 3E 80            ld a,$80
 690+ A115 BE               cp (hl)
 691+ A116 28 0D            jr z,1F
 692+ A118
 693+ A118 04               inc b
 694+ A119
 695+ A119 3E 60            ld a,$60
 696+ A11B BE               cp (hl)
 697+ A11C 28 07            jr z,1F
 698+ A11E
 699+ A11E
 700+ A11E 04               inc b
 701+ A11F
 702+ A11F 3E 18            ld a,$18
 703+ A121 BE               cp (hl)
 704+ A122 28 01            jr z,1F
 705+ A124
 706+ A124 04               inc b
 707+ A125
 708+ A125              ;   Calcula el Puntero_de_impresión del disparo.
 709+ A125
 710+ A125              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 711+ A125
 712+ A125 CD D2 99     1 call PreviousScan
 713+ A128
 714+ A128 78               ld a,b
 715+ A129 CB 3F            srl a
 716+ A12B 28 03            jr z,4F
 717+ A12D
 718+ A12D              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 719+ A12D E5               push hl
 720+ A12E 18 02            jr 5F
 721+ A130 2D           4 dec l
 722+ A131 E5               push hl
 723+ A132              ; ---
 724+ A132
 725+ A132              ;   Calcula el Puntero_objeto del disparo.
 726+ A132
 727+ A132 21 72 83     5 ld hl,Indice_disparo_Amadeus
 728+ A135 04               inc b
 729+ A136 05               dec b
 730+ A137 28 04            jr z,2F
 731+ A139
 732+ A139              ;   Nos desplazamos por el índice de disparos.
 733+ A139
 734+ A139 2C           3 inc l
 735+ A13A 2C               inc l
 736+ A13B 10 FC            djnz 3B
 737+ A13D
 738+ A13D              ; --- Guarda el Puntero_objeto del disparo en la pila.
 739+ A13D CD AE 90     2 call Extrae_address
 740+ A140 E5               push hl
 741+ A141              ; ---
 742+ A141
 743+ A141              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 744+ A141              ; HL en el 1er .db de la caja.
 745+ A141
 746+ A141 21 1F 89         ld hl,Disparo_Amad
 747+ A144
 748+ A144 06 02            ld b,2
 749+ A146
 750+ A146 D1           6 pop de
 751+ A147 73               ld (hl),e
 752+ A148 23               inc hl
 753+ A149 72               ld (hl),d
 754+ A14A 23               inc hl
 755+ A14B
 756+ A14B 10 F9            djnz 6B
 757+ A14D
 758+ A14D C9               ret
 759+ A14E
 760+ A14E              Genera_coordenadas_de_disparo_Amadeus
 761+ A14E
 762+ A14E              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 763+ A14E              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 764+ A14E              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 765+ A14E
 766+ A14E CD AE 90         call Extrae_address
 767+ A151 CD CD 94         call Genera_coordenadas
 768+ A154
 769+ A154 3D               dec a
 770+ A155
 771+ A155 21 2E 8C         ld hl,Coordenadas_disparo_certero
 772+ A158 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 773+ A159 23               inc hl
 774+ A15A 3A B4 8B         ld a,(Coordenada_X)
 775+ A15D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 776+ A15E
 777+ A15E AF               xor a
 778+ A15F 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 779+ A160
 780+ A160 C9               ret
 781+ A161
 782+ A161              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 783+ A161              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 784+ A161              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 785+ A161
 786+ A161              ; ----------------------------------------------
 787+ A161              ;
 788+ A161              ;   27/08/24
 789+ A161              ;
 790+ A161              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 791+ A161              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 792+ A161
 793+ A161              Detecta_impacto_en_disparo_de_Amadeus
 794+ A161
 795+ A161              Extraccion_de_datos
 796+ A161
 797+ A161 13               inc de
 798+ A162 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 799+ A163
 800+ A163 5E               ld e,(hl)
 801+ A164 23               inc hl
 802+ A165 56               ld d,(hl)
 803+ A166
 804+ A166 23               inc hl
 805+ A167
 806+ A167 4E               ld c,(hl)
 807+ A168 23               inc hl
 808+ A169 46               ld b,(hl)
 809+ A16A
 810+ A16A C5               push bc
 811+ A16B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 812+ A16C
 813+ A16C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 814+ A16C
 815+ A16C CD D2 99         call PreviousScan
 816+ A16F CD D2 99         call PreviousScan
 817+ A172
 818+ A172              Detecta_impacto_
 819+ A172
 820+ A172 1A               ld a,(de)
 821+ A173 A6               and (hl)
 822+ A174 C0               ret nz
 823+ A175
 824+ A175 13               inc de
 825+ A176 23               inc hl
 826+ A177
 827+ A177 1A               ld a,(de)
 828+ A178 A6               and (hl)
 829+ A179 C9               ret
 830+ A17A
 831+ A17A              ; -------------------------------------------------------------------------------------------------------------
 832+ A17A              ;
 833+ A17A              ;   8/8/24
 834+ A17A              ;
 835+ A17A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 836+ A17A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 837+ A17A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 838+ A17A              ;
 839+ A17A              ;   MODIFICA: HL,DE,BC y A.
 840+ A17A              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 841+ A17A              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 842+ A17A
 843+ A17A              Colision_Entidad_Amadeus
 844+ A17A
 845+ A17A              ; Posible contacto de entidad con Amadeus. ?????
 846+ A17A
 847+ A17A              ; Exclusiones:
 848+ A17A
 849+ A17A 3A 4E 8C         ld a,(Shield)
 850+ A17D A7               and a
 851+ A17E C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 852+ A17F
 853+ A17F 21 26 8C         ld hl,Ctrl_3
 854+ A182 CB 76            bit 6,(hl)
 855+ A184 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 856+ A185
 857+ A185 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 858+ A188 CB 56            bit 2,(hl)
 859+ A18A C0               ret nz
 860+ A18B
 861+ A18B 3A B5 8B     	ld a,(Coordenada_y)
 862+ A18E FE 14        	cp $14
 863+ A190 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 864+ A191
 865+ A191 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 866+ A194 A7               and a
 867+ A195 C0               ret nz
 868+ A196
 869+ A196              Genera_coordenadas_X
 870+ A196
 871+ A196              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 872+ A196              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 873+ A196
 874+ A196              ;   Limpiamos almacenes.
 875+ A196
 876+ A196              ;    call Limpia_Coordenadas_X
 877+ A196
 878+ A196              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 879+ A196
 880+ A196 21 30 8C         ld hl,Coordenadas_X_Entidad
 881+ A199 3A B4 8B         ld a,(Coordenada_X)
 882+ A19C CD BE A1         call Guarda_coordenadas_X
 883+ A19F
 884+ A19F              ;   Almacenamos las coordenadas X de Amadeus.
 885+ A19F
 886+ A19F 3A 6E 89         ld a,(CX_Amadeus)
 887+ A1A2 CD BE A1         call Guarda_coordenadas_X
 888+ A1A5 CD D2 A1         call Compara_coordenadas_X
 889+ A1A8 C0               ret nz
 890+ A1A9
 891+ A1A9 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 892+ A1AB 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 893+ A1AE
 894+ A1AE 2A F3 8B         ld hl,(Puntero_store_caja)
 895+ A1B1 2C               inc l
 896+ A1B2 2C               inc l
 897+ A1B3 2C               inc l
 898+ A1B4 2C               inc l
 899+ A1B5 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 900+ A1B8
 901+ A1B8 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 902+ A1BB CB D6            set 2,(hl)
 903+ A1BD
 904+ A1BD C9               ret
 905+ A1BE
 906+ A1BE               ; ----- ----- ----- ----- -----
 907+ A1BE
 908+ A1BE 77           Guarda_coordenadas_X ld (hl),a
 909+ A1BF 3C               inc a
 910+ A1C0 2C               inc l
 911+ A1C1 77               ld (hl),a
 912+ A1C2 3C               inc a
 913+ A1C3 2C               inc l
 914+ A1C4 77               ld (hl),a
 915+ A1C5 2C               inc l
 916+ A1C6 C9               ret
 917+ A1C7
 918+ A1C7 AF           Limpia_Coordenadas_X xor a
 919+ A1C8 06 06            ld b,6
 920+ A1CA 21 33 8C         ld hl,Coordenadas_X_Amadeus
 921+ A1CD 77           1 ld (hl),a
 922+ A1CE 23               inc hl
 923+ A1CF 10 FC            djnz 1B
 924+ A1D1 C9               ret
 925+ A1D2
 926+ A1D2              ; ----- ----- ----- ----- -----
 927+ A1D2
 928+ A1D2              Compara_coordenadas_X
 929+ A1D2
 930+ A1D2 DD 21 30 8C      ld ix,Coordenadas_X_Entidad
 931+ A1D6 DD 7E 00         ld a,(ix+0)
 932+ A1D9 CD E7 A1         call Comparando
 933+ A1DC C8               ret z
 934+ A1DD
 935+ A1DD 3C               inc a
 936+ A1DE CD F6 A1         call Comparando_1
 937+ A1E1 C8               ret z
 938+ A1E2
 939+ A1E2 3C               inc a
 940+ A1E3 CD F6 A1         call Comparando_1
 941+ A1E6 C9               ret
 942+ A1E7
 943+ A1E7              ; ----- ----- ----- ----- -----
 944+ A1E7              ;
 945+ A1E7              ;   4/12/23
 946+ A1E7              ;
 947+ A1E7              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 948+ A1E7
 949+ A1E7              Comparando
 950+ A1E7
 951+ A1E7 DD 2C            inc ixl
 952+ A1E9 DD 2C            inc ixl
 953+ A1EB DD 2C            inc ixl
 954+ A1ED
 955+ A1ED DD 46 00         ld b,(ix+0)
 956+ A1F0 DD 4E 01         ld c,(ix+1)
 957+ A1F3 DD 56 02         ld d,(ix+2)
 958+ A1F6
 959+ A1F6 B8           Comparando_1 cp b
 960+ A1F7 C8               ret z
 961+ A1F8 B9               cp c
 962+ A1F9 C8               ret z
 963+ A1FA BA               cp d
 964+ A1FB C9               ret
 965+ A1FC
 966+ A1FC              ; -----------------------------------------------------------------------
 967+ A1FC              ;
 968+ A1FC              ;   04/7/24
 969+ A1FC              ;
 970+ A1FC
 971+ A1FC              Detecta_colision_nave_entidad
 972+ A1FC
 973+ A1FC              ; Exclusiones:
 974+ A1FC
 975+ A1FC              ; Salimos de la rutina si no hay advertencia de posible colisión.
 976+ A1FC
 977+ A1FC 21 2B 8C     	ld hl,Impacto2
 978+ A1FF CB 56        	bit 2,(hl)
 979+ A201 C8           	ret z
 980+ A202
 981+ A202              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 982+ A202
 983+ A202 2A 74 89         ld hl,(Pamm_Amadeus)
 984+ A205 CD AE 90         call Extrae_address
 985+ A208 54               ld d,h
 986+ A209 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 987+ A20A
 988+ A20A 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 989+ A20D 06 10            ld b,16                                        ; Contador de scanlines en B.
 990+ A20F FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 991+ A212
 992+ A212 C5           1 push bc
 993+ A213 06 03            ld b,3
 994+ A215 E5               push hl
 995+ A216
 996+ A216              ; .db
 997+ A216
 998+ A216 1A           3 ld a,(de)
 999+ A217 A7               and a
1000+ A218 20 03            jr nz,4F
1001+ A21A
1002+ A21A 2C               inc l
1003+ A21B 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1004+ A21D
1005+ A21D ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1006+ A21F 28 04            jr z,2F
1007+ A221
1008+ A221              ; Impacto.
1009+ A221 FD 2D            dec iyl
1010+ A223 28 22            jr z,5F
1011+ A225
1012+ A225 1C           2 inc e
1013+ A226 10 EE            djnz 3B
1014+ A228
1015+ A228 E1               pop hl
1016+ A229
1017+ A229              ; Hay salto de línea en el puntero de impresión ???
1018+ A229
1019+ A229 7C               ld a,h
1020+ A22A D6 57            sub $57
1021+ A22C 20 0A            jr nz,6F
1022+ A22E
1023+ A22E              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1024+ A22E
1025+ A22E 2A 72 89         ld hl,(p.imp.amadeus)
1026+ A231 3E 20            ld a,$20
1027+ A233 A7               and a
1028+ A234 85               add l
1029+ A235 6F               ld l,a
1030+ A236 18 01            jr 7F
1031+ A238
1032+ A238 24           6 inc h
1033+ A239
1034+ A239 C1           7 pop bc
1035+ A23A 10 D6            djnz 1B
1036+ A23C
1037+ A23C              ;   Fin de la comparativa.
1038+ A23C
1039+ A23C              ;   NO HAY COLISIÓN !!!!!.
1040+ A23C              ;
1041+ A23C              ;   .db (Impacto) de Amadeus a "0".
1042+ A23C              ;   RES el bit2 de (Impacto2).
1043+ A23C              ;
1044+ A23C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1045+ A23C              ;   Lo colocamos a "0".
1046+ A23C
1047+ A23C 21 2B 8C         ld hl,Impacto2
1048+ A23F CB 96            res 2,(hl)
1049+ A241 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
1050+ A244 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1051+ A246 C9               ret
1052+ A247
1053+ A247              ;   COLISIÓN !!!!!.
1054+ A247              ;
1055+ A247              ;   .db (Impacto) de Amadeus a "1".
1056+ A247              ;   SET el bit3 de (Impacto2).
1057+ A247              ;
1058+ A247              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1059+ A247
1060+ A247 E1           5 pop hl
1061+ A248 C1               pop bc
1062+ A249
1063+ A249 21 71 89         ld hl,Impacto_Amadeus
1064+ A24C 36 01            ld (hl),1
1065+ A24E 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1066+ A251 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1067+ A253
1068+ A253 11 C0 87         ld de,Indice_Explosion_entidades
1069+ A256 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1070+ A259
1071+ A259 23               inc hl
1072+ A25A 23               inc hl
1073+ A25B 23               inc hl
1074+ A25C
1075+ A25C 73               ld (hl),e
1076+ A25D 23               inc hl
1077+ A25E 72               ld (hl),d
1078+ A25F
1079+ A25F              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1080+ A25F
1081+ A25F 11 60 88         ld de,Indice_Explosion_Amadeus
1082+ A262 21 74 89         ld hl,Pamm_Amadeus
1083+ A265
1084+ A265 73               ld (hl),e
1085+ A266 23               inc hl
1086+ A267 72               ld (hl),d
1087+ A268
1088+ A268 C9               ret
1089+ A269
1090+ A269
1091+ A269
# file closed: Disparo.asm
2177  A269
2178  A269              	SAVESNA "Pruebas.sna", START
2179  A269
2180  A269
2181  A269
2182  A269
# file closed: Banco_de_pruebas.asm
