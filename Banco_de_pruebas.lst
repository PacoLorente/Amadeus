# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 66 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 63 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 34 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 90 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 88 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8E 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8E 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 91 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 98 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	10/11/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas).
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6B
  98+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A73 08 00
 100+ 8A75
 101+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7D 0F FE
 103+ 8A7F
 104+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB3
 118+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABB 06 00
 120+ 8ABD
 121+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC5 02 00
 123+ 8AC7
 124+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACF 04 00
 126+ 8AD1
 127+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD9 08 00
 129+ 8ADB
 130+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE3 02 00
 132+ 8AE5
 133+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AED 06 00
 135+ 8AEF
 136+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF7 06 00
 138+ 8AF9
 139+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF9
 141+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B29
 154+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5D
 168+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B65 06 00
 170+ 8B67
 171+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6F 02 00
 173+ 8B71
 174+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B79 04 00
 176+ 8B7B
 177+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B83 08 00
 179+ 8B85
 180+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8D 02 00
 182+ 8B8F
 183+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B97 06 00
 185+ 8B99
 186+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA1 06 00
 188+ 8BA3
 189+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD3
 202+ 8BD3
 203+ 8BD3
 204+ 8BD3
 205+ 8BD3
 206+ 8BD3
 207+ 8BD3
 208+ 8BD3
 209+ 8BD3
 210+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 E2 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1,1	 							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01 01
  17+ 8BE2
  18+ 8BE2 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE7 01 02
  20+ 8BE9 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BED 01 02
  21+ 8BEF
# file closed: Niveles.asm
 150  8BEF
 151  8BEF              ; --------------------------------------------------------------------------------
 152  8BEF              ;
 153  8BEF              ; 12/05/24
 154  8BEF              ;
 155  8BEF              ; Parámetros DRAW.
 156  8BEF              ;
 157  8BEF
 158  8BEF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEF
 160  8BEF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BF0              ;															- Patrón de movimiento.
 162  8BF0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF2
 165  8BF2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF3
 168  8BF3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF3              ; Ejemplos.
 171  8BF3
 172  8BF3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF3
 178  8BF3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF4
 182  8BF4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF6
 185  8BF6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF8
 187  8BF8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF8
 189  8BF8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BFA              ;														; _palabras que componen el "movimiento_masticado".
 191  8BFA
 192  8BFA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BFA
 194  8BFA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFB
 200  8BFB 00           Ctrl_2 db 0
 201  8BFC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFC              ;
 209  8BFC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFC              ;														BIT 4, ???
 215  8BFC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFC
 217  8BFC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFD              ;
 223  8BFD              ; 														DESCRIPCIÖN:
 224  8BFD              ;
 225  8BFD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFD              ;
 239  8BFD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFD
 243  8BFD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFD
 245  8BFD 00           Filas db 0												; Filas. [DRAW]
 246  8BFE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C01 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C03
 250  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C03
 252  8C03 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C04              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C04              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C04
 256  8C04              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C04
 258  8C04              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C04              ;
 260  8C04              ;	COLORES: 0 ..... NEGRO
 261  8C04              ;    		 1 ..... AZUL
 262  8C04              ; 			 2 ..... ROJO
 263  8C04              ;			 3 ..... MAGENTA
 264  8C04              ; 			 4 ..... VERDE
 265  8C04              ; 			 5 ..... CIAN
 266  8C04              ;			 6 ..... AMARILLO
 267  8C04              ; 			 7 ..... BLANCO
 268  8C04
 269  8C04 00 00        Indice_Sprite_der defw 0
 270  8C06 00 00        Indice_Sprite_izq defw 0
 271  8C08 00 00        Puntero_DESPLZ_der defw 0
 272  8C0A 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0C
 274  8C0C 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0E 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0F 00           Columnas db 0
 277  8C10 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C12              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C12 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C13
 281  8C13              ; variables de control general.
 282  8C13
 283  8C13 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C14
 285  8C14              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C14
 287  8C14              Perfiles_de_velocidad
 288  8C14
 289  8C14 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C15 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C16 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C17 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C18
 294  8C18              ; Contadores de 16 bits.
 295  8C18
 296  8C18 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C1A 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1C 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1E 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C20
 301  8C20              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C20
 303  8C20 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C22 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C24 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C26              ;
 307  8C26              ;
 308  8C26 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C27              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C27              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C27 00           Incrementa_puntero_backup db 0
 312  8C28 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C29              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C29 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C2A 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2B 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2C              ;
 318  8C2C              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2C              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2C              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2C              ;
 322  8C2C              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2C              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2C              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2C              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2C              ;
 327  8C2C              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2C              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2C              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2C
 331  8C2C 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2D
 333  8C2D              ;														DESCRIPCIÓN:
 334  8C2D              ;
 335  8C2D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2D              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2D              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2D
 342  8C2D              ;														BIT 3, Recarga de nueva oleada.
 343  8C2D              ;														BIT 4, Recarga de nueva oleada.
 344  8C2D              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2D              ;														BIT 6, **** Frame completo.
 346  8C2D              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2D
 348  8C2D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2F
 353  8C2F              ; Gestión de ENTIDADES y CAJAS.
 354  8C2F
 355  8C2F 00 00        Puntero_store_caja defw 0
 356  8C31 00 00        Puntero_restore_caja defw 0
 357  8C33 00 00        Indice_restore_caja defw 0
 358  8C35 00 00        Puntero_indice_master defw 0
 359  8C37
 360  8C37 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C38 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C39 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C3A
 364  8C3A 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3C 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3E              ;														; _ puntero (Indice_entidades).
 367  8C3E
 368  8C3E              ;---------------------------------------------------------------------------------------------------------------
 369  8C3E              ;
 370  8C3E              ;	13/10/24
 371  8C3E              ;
 372  8C3E              ;	Álbumes.
 373  8C3E
 374  8C3E 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C40              ;														; _variable para almacenar lo posición del puntero_
 376  8C40              ; 														; _de pila, SP.
 377  8C40 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C42              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C42
 380  8C42              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C42
 382  8C42 00 00        Album_de_pintado defw 0
 383  8C44 00 00        Album_de_borrado defw 0
 384  8C46 00 00        Album_de_pintado_Amadeus defw 0
 385  8C48 00 00        Album_de_borrado_Amadeus defw 0
 386  8C4A
 387  8C4A 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4C 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4E
 390  8C4E 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C50 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C52
 393  8C52
 394  8C52 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C54
 396  8C54 00           Num_de_bytes_album_de_disparos db 0
 397  8C55 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C56
 399  8C56 07           Numero_de_disparos_de_entidades db 7
 400  8C57
 401  8C57 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C58 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C59
 404  8C59 00 00        Techo_Scanlines_album defw 0
 405  8C5B 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5D 00           Switch db 0
 407  8C5E 00 00        Techo defw 0
 408  8C60 00 00        Scanlines_album_SP defw 0
 409  8C62 00 89        India_SP defw Tabla_de_pintado
 410  8C64 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C66
 412  8C66 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C67              ;
 414  8C67              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C67              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C67              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C67              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C67              ;																Habilita el borrado/pintado de sprites.
 419  8C67              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C67              ;																_ a la baja.
 421  8C67              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C67              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C67              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C67              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C67              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C67              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C67
 428  8C67 00           Ctrl_4 db 0
 429  8C68 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C69              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C69              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C69
 433  8C69              ; Gestión de Disparos.
 434  8C69
 435  8C69 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6B 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6D 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6E
 439  8C6E              ;
 440  8C6E              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6E              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6E              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6E              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6E
 445  8C6E
 446  8C6E
 447  8C6E
 448  8C6E
 449  8C6E
 450  8C6E
 451  8C6E 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C70              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C70              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C70
 455  8C70 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C72              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C72 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C75              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C75 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C78              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C78
 462  8C78              ;---------------------------------------------------------------------------------------------------------------
 463  8C78
 464  8C78              ; Relojes y temporizaciones.
 465  8C78
 466  8C78 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C79 05           Clock_explosion_Amadeus db 5
 468  8C7A 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7B
 470  8C7B F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7D F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7F 00           Numero_rnd_disparos db 0
 473  8C80
 474  8C80 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C82 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C83              ;																		; Repite la oleada de entidades.
 477  8C83 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C84 A0           CLOCK_disparos_de_entidades db $a0
 479  8C85
 480  8C85              ;---------------------------------------------------------------------------------------------------------------
 481  8C85
 482  8C85              ; Gestión de NIVELES.
 483  8C85
 484  8C85 00           Nivel db 0												; Nivel actual del juego.
 485  8C86 00 00        Puntero_indice_NIVELES defw 0
 486  8C88 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C8A              ; 														; _ que definen el NIVEL.
 488  8C8A
 489  8C8A              ; ---------------------------------------------------------------------------------------------------------------
 490  8C8A
 491  8C8A              ; Temporizaciones Shield.
 492  8C8A
 493  8C8A 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8E 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C90 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C91 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C92 00           Shield_3 db 0
 498  8C93
 499  8C93 07           Lives db 7
 500  8C94
 501  8C94              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C94              ;
 503  8C94              ;	13/11/24
 504  8C94
 505  8C94              START
 506  8C94
 507  8C94 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C97 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C99 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9D F3           	DI
 512  8C9E
 513  8C9E              ; Limpiamos pantalla.
 514  8C9E
 515  8C9E 3E 07        	ld a,%00000111
 516  8CA0 CD E5 94     	call Cls
 517  8CA3 CD 7D 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA6
 519  8CA6              INICIALIZACION
 520  8CA6
 521  8CA6 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA8 CD DE 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAB CD FC 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAE 6F           	ld l,a
 525  8CAF 26 00        	ld h,0
 526  8CB1 22 80 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB4
 528  8CB4              ;	Inicia los álbumes de líneas.
 529  8CB4
 530  8CB4 CD CF 90     	call Inicia_albumes_de_lineas
 531  8CB7 CD DF 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CBA CD EC 90     	call Inicia_albumes_de_disparos
 533  8CBD
 534  8CBD              ;	Inicia 1er Nivel.
 535  8CBD
 536  8CBD CD 40 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CC0 CD 0E 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC3              ;														   _reponiendo entidades eliminadas.
 539  8CC3 CD 74 93     	call Prepara_Cajas_de_Entidades
 540  8CC6
 541  8CC6              4
 542  8CC6
 543  8CC6              ;	call Inicia_Entidades
 544  8CC6 CD C5 93     	call Inicia_Amadeus
 545  8CC9
 546  8CC9              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC9              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC9              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC9
 550  8CC9 11 AE 89     	ld de,Amadeus_BOX
 551  8CCC CD B4 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCF CD 08 94     	call Limpiamos_bandeja_DRAW
 553  8CD2
 554  8CD2              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD2
 556  8CD2 06 3C        	ld b,60
 557  8CD4 CD 86 9D     2 call Amadeus_a_izquierda
 558  8CD7 10 FB        	djnz 2B
 559  8CD9
 560  8CD9 CD AD 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDC
 562  8CDC              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDC
 564  8CDC CD 08 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDF
 566  8CDF CD 88 91     	call Inicia_Shield
 567  8CE2
 568  8CE2 2A 60 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE5 22 59 8C     	ld (Techo_Scanlines_album),hl
 570  8CE8
 571  8CE8 2A 44 8C     	ld hl,(Album_de_borrado)
 572  8CEB 22 60 8C     	ld (Scanlines_album_SP),hl
 573  8CEE
 574  8CEE 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF1 22 62 8C     	ld (India_SP),hl
 576  8CF4
 577  8CF4 21 66 8C     	ld hl,Ctrl_3
 578  8CF7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF9 CB D6        	set 2,(hl)
 580  8CFB CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFD
 582  8CFD FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFE
 584  8CFE 76           	halt
 585  8CFF
 586  8CFF              ; ------------------------------------
 587  8CFF
 588  8CFF              Main
 589  8CFF              ;
 590  8CFF              ; 07/11/24.
 591  8CFF
 592  8CFF              ; Gestión de disparos.
 593  8CFF
 594  8CFF CD D1 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D02 CD 7A 9F     	call Motor_de_disparos_entidades
 596  8D05 CD 0F A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D08
 598  8D08              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D08              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D08              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D08
 602  8D08 CD B0 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0B
 604  8D0B              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0B
 606  8D0B 21 84 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0E 35           	dec (hl)
 608  8D0F CC 12 8E     	call z,Autoriza_disparo_de_entidades
 609  8D12
 610  8D12 2A 80 8C     	ld hl,(Clock_next_entity)
 611  8D15 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D19 A7           	and a
 613  8D1A ED 42        	sbc hl,bc
 614  8D1C 20 16        	jr nz,1F
 615  8D1E
 616  8D1E              ; GESTIÓN DE ENTIDADES.
 617  8D1E
 618  8D1E              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1E              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1E
 621  8D1E              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1E              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1E              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1E
 625  8D1E 21 38 8C     	ld hl,Numero_parcial_de_entidades
 626  8D21 46           	ld b,(hl)
 627  8D22 3A 39 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D25 B8           	cp b
 629  8D26 28 0C        	jr z,1F
 630  8D28 30 0A        	jr nc,1F
 631  8D2A
 632  8D2A              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D2A
 634  8D2A 3C           	inc a
 635  8D2B 32 39 8C     	ld (Entidades_en_curso),a
 636  8D2E
 637  8D2E              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2E
 639  8D2E CD FC 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D31 CD 18 8F     	call Define_Clock_next_entity
 641  8D34
 642  8D34 3A 39 8C     1 ld a,(Entidades_en_curso)
 643  8D37 A7           	and a
 644  8D38 CA BD 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3B 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3C
 647  8D3C              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3C
 649  8D3C              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3C              ;
 651  8D3C              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3C
 653  8D3C 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3F 22 62 8C     	ld (India_SP),hl
 655  8D42
 656  8D42 21 66 8C     	ld hl,Ctrl_3
 657  8D45 CB D6        	set 2,(hl)
 658  8D47 CD A6 8E     	call Change
 659  8D4A
 660  8D4A C5           2 push bc 												; Nº de entidades en curso.
 661  8D4B
 662  8D4B              ;	di
 663  8D4B              ;	ld hl,Ctrl_4
 664  8D4B              ;	bit 0,(hl)
 665  8D4B              ;	jr nz,$
 666  8D4B              ;	ei
 667  8D4B
 668  8D4B DD 2A 2F 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 669  8D4F CD 59 91     	call Salta_caja_de_entidades_vacia
 670  8D52
 671  8D52              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 672  8D52              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 673  8D52
 674  8D52 3A 6D 8C     	ld a,(Impacto2)
 675  8D55 CB 5F        	bit 3,a
 676  8D57 C4 A6 A1     	call nz,Compara_con_coordenadas_de_disparo
 677  8D5A
 678  8D5A              ; Existe colisión entre esta entidad y Amadeus ???
 679  8D5A
 680  8D5A DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 681  8D5D CB 4F        	bit 1,a
 682  8D5F C4 65 92     	call nz,Genera_explosion
 683  8D62 20 3C        	jr nz,Gestiona_siguiente_entidad
 684  8D64
 685  8D64 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 686  8D67 A7           	and a
 687  8D68 28 0C        	jr z,3F
 688  8D6A
 689  8D6A              ; IMPACTO en entidad por colisión con Amadeus.
 690  8D6A
 691  8D6A              ; 5/7/24
 692  8D6A              ; Nota importante:
 693  8D6A              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 694  8D6A              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 695  8D6A              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 696  8D6A
 697  8D6A 3A B2 89     	ld a,(Impacto_Amadeus)
 698  8D6D A7           	and a
 699  8D6E C4 65 92     	call nz,Genera_explosion
 700  8D71 20 2D        	jr nz,Gestiona_siguiente_entidad
 701  8D73
 702  8D73              ; Falsa colisión !!!
 703  8D73
 704  8D73 32 F3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 705  8D76
 706  8D76              ; -------------------------------------------
 707  8D76
 708  8D76 CD 5C 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 709  8D79 CD 7E 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 710  8D7C CD 4C 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 711  8D7F
 712  8D7F DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 713  8D81 DD 2A F4 8B  	ld ix,(Puntero_de_impresion)
 714  8D85 CD 25 95     	call Genera_datos_de_impresion
 715  8D88 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 716  8D8A
 717  8D8A CD 2B 94     	call Decrementa_Contador_de_mov_masticados
 718  8D8D
 719  8D8D              ; -------------------------------------------
 720  8D8D
 721  8D8D              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 722  8D8D
 723  8D8D 2A F4 8B     	ld hl,(Puntero_de_impresion)
 724  8D90 CD F9 94     	call Genera_coordenadas
 725  8D93
 726  8D93 ED 4B F0 8B  	ld bc,(Coordenada_X)
 727  8D97
 728  8D97 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 729  8D9A DD 70 02     	ld (ix+2),b
 730  8D9D
 731  8D9D              ; TODO: Generamos disparo ???
 732  8D9D
 733  8D9D              ;	ld a,(Permiso_de_disparo_Entidades)
 734  8D9D              ;	and a
 735  8D9D              ;	call nz,Entidad_genera_disparo_si_procede
 736  8D9D
 737  8D9D CD 2A A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 738  8DA0
 739  8DA0              Gestiona_siguiente_entidad
 740  8DA0
 741  8DA0 CD 68 91     	call Incrementa_punteros_de_cajas
 742  8DA3
 743  8DA3 C1           	pop bc
 744  8DA4 10 A4        	djnz 2B
 745  8DA6
 746  8DA6              ; Hemos gestionado todas las entidades.
 747  8DA6              ; ----- ----- -----
 748  8DA6
 749  8DA6 CD 70 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 750  8DA9 CD 87 8F     	call Ordena_tabla_de_impresion
 751  8DAC CD 08 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 752  8DAF
 753  8DAF CD 2D 8F     	call Borra_diferencia
 754  8DB2
 755  8DB2 3A 66 8C     	ld a,(Ctrl_3)
 756  8DB5 CB 5F        	bit 3,a
 757  8DB7 20 04        	jr nz,Gestion_de_Amadeus
 758  8DB9
 759  8DB9 EB           	ex de,hl
 760  8DBA 71           	ld (hl),c
 761  8DBB 2C           	inc l
 762  8DBC 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 763  8DBD
 764  8DBD              ;! GESTIONA AMADEUS !!!!!!!!!!
 765  8DBD
 766  8DBD              Gestion_de_Amadeus
 767  8DBD
 768  8DBD 21 66 8C     	ld hl,Ctrl_3
 769  8DC0 CB 76        	bit 6,(hl)
 770  8DC2 28 13        	jr z,Amadeus_vivo
 771  8DC4
 772  8DC4              ; Amadeus ha sido destruido.
 773  8DC4              ; Decrementa (Temp_new_live).
 774  8DC4
 775  8DC4 21 7A 8C     	ld hl,Temp_new_live
 776  8DC7 35           	dec (hl)
 777  8DC8 20 26        	jr nz,End_frame
 778  8DCA
 779  8DCA              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 780  8DCA
 781  8DCA 21 93 8C     	ld hl,Lives
 782  8DCD 35           	dec (hl)
 783  8DCE
 784  8DCE              ;! Fin del juego
 785  8DCE
 786  8DCE F3           	di
 787  8DCF 28 FE        	jr z,$
 788  8DD1 FB           	ei
 789  8DD2
 790  8DD2              ; Nueva nave.
 791  8DD2
 792  8DD2 CD 44 8E     	call Reinicia_Amadeus
 793  8DD5 18 19        	jr End_frame
 794  8DD7
 795  8DD7              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 796  8DD7
 797  8DD7              Amadeus_vivo
 798  8DD7
 799  8DD7 3A B2 89     	ld a,(Impacto_Amadeus)
 800  8DDA A7           	and a
 801  8DDB C4 A9 92     	call nz, Genera_explosion_Amadeus
 802  8DDE 20 10        	jr nz, End_frame
 803  8DE0
 804  8DE0 CD 42 92     	call Teclado
 805  8DE3 21 66 8C     	ld hl,Ctrl_3
 806  8DE6
 807  8DE6 CB 6E        	bit 5,(hl)
 808  8DE8 28 06        	jr z,End_frame
 809  8DEA
 810  8DEA              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 811  8DEA
 812  8DEA CD C1 8E     	call Change_Amadeus
 813  8DED CD AD 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 814  8DF0
 815  8DF0              End_frame
 816  8DF0
 817  8DF0              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 818  8DF0              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 819  8DF0
 820  8DF0 CD D1 A0     	call Genera_datos_de_impresion_disparos_Entidades
 821  8DF3 CD 95 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 822  8DF6 CD EB A1     	call Calcula_bytes_pintado_disparos
 823  8DF9 CD F8 A1     	call Limpia_album_de_pintado_disparos_entidades
 824  8DFC
 825  8DFC              ; ------------ ------------- --------------
 826  8DFC
 827  8DFC 2A 44 8C     	ld hl,(Album_de_borrado)
 828  8DFF 22 60 8C     	ld (Scanlines_album_SP),hl
 829  8E02
 830  8E02 21 66 8C     	ld hl,Ctrl_3
 831  8E05 CB C6        	set 0,(hl) 											; Indica Frame completo.
 832  8E07 CB 9E        	res 3,(hl)
 833  8E09 CB A6        	res 4,(hl)
 834  8E0B
 835  8E0B AF           	xor a
 836  8E0C D3 FE        	out ($fe),a
 837  8E0E
 838  8E0E 76           	halt
 839  8E0F
 840  8E0F              ; ----------------------------------------
 841  8E0F
 842  8E0F              ;	ld a,(Ctrl_1) 										; Existe Loop?
 843  8E0F              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 844  8E0F CA FF 8C     	jp z,Main
 845  8E12
 846  8E12              ;------------------------------------------
 847  8E12              ;
 848  8E12              ;	07/11/24
 849  8E12
 850  8E12              Autoriza_disparo_de_entidades
 851  8E12
 852  8E12 3E 01        	ld a,1
 853  8E14 32 58 8C     	ld (Permiso_de_disparo_Entidades),a
 854  8E17
 855  8E17 3A 83 8C     	ld a,(Repone_CLOCK_disparos)
 856  8E1A FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 857  8E1C 38 02        	jr c,1F
 858  8E1E
 859  8E1E              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 860  8E1E              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 861  8E1E              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 862  8E1E
 863  8E1E D6 03        	sub 3
 864  8E20
 865  8E20 32 83 8C     1 ld (Repone_CLOCK_disparos),a
 866  8E23 32 84 8C     	ld (CLOCK_disparos_de_entidades),a
 867  8E26
 868  8E26 C9           	ret
 869  8E27
 870  8E27              ;------------------------------------------
 871  8E27              ;
 872  8E27              ;	14/09/24
 873  8E27              ;
 874  8E27              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 875  8E27
 876  8E27              Entidad_genera_disparo_si_procede
 877  8E27
 878  8E27 2A 7D 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 879  8E2A CB 06        	rlc (hl)
 880  8E2C
 881  8E2C DC 21 A1     	call c,Genera_disparo_de_entidad_maldosa
 882  8E2F
 883  8E2F C9           	ret
 884  8E30
 885  8E30              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 886  8E30              ;
 887  8E30              ;	30/09/24
 888  8E30
 889  8E30              Actuaiza_sp_de_disparos_de_entidades
 890  8E30
 891  8E30 2A 7D 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 892  8E33 23           	inc hl
 893  8E34 22 7D 8C     	ld (Puntero_num_aleatorios_disparos),hl
 894  8E37
 895  8E37 11 FD 88     	ld de,Numeros_aleatorios+7
 896  8E3A 7B           	ld a,e
 897  8E3B 95           	sub l
 898  8E3C C0           	ret nz
 899  8E3D
 900  8E3D 21 F6 88     1 ld hl,Numeros_aleatorios
 901  8E40 22 7D 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 902  8E43 C9           	ret
 903  8E44
 904  8E44              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 905  8E44              ;
 906  8E44              ;	24/07/24
 907  8E44
 908  8E44              Reinicia_Amadeus
 909  8E44
 910  8E44              ;	Reinicia posición y estado.
 911  8E44
 912  8E44 21 CF 50     	ld hl,$50cf
 913  8E47 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 914  8E4A 21 CC DC     	ld hl,$dccc
 915  8E4D 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 916  8E50 21 3D 00     	ld hl,$003d
 917  8E53 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 918  8E56
 919  8E56              ;	limpiamos el álbum de borrado.
 920  8E56
 921  8E56 2A 48 8C     	ld hl,(Album_de_borrado_Amadeus)
 922  8E59
 923  8E59 AF           	xor a
 924  8E5A 77           	ld (hl),a
 925  8E5B
 926  8E5B E5           	push hl
 927  8E5C D1           	pop de
 928  8E5D 13           	inc de
 929  8E5E
 930  8E5E 01 23 00     	ld bc,35
 931  8E61 ED B0        	ldir
 932  8E63
 933  8E63 CD AD 90     	call Genera_datos_de_impresion_Amadeus
 934  8E66
 935  8E66              ;	Reinicia temporizaciones.
 936  8E66
 937  8E66 CD 88 91     	call Inicia_Shield
 938  8E69
 939  8E69 3E 5A        	ld a,90
 940  8E6B 32 90 8C     	ld (Shield),a
 941  8E6E
 942  8E6E 3E 64        	ld a,100
 943  8E70 32 7A 8C     	ld (Temp_new_live),a
 944  8E73
 945  8E73              ; 	Restauramos el FLAG: Amadeus vivo.
 946  8E73
 947  8E73 21 66 8C     	ld hl,Ctrl_3
 948  8E76 CB B6        	res 6,(hl)
 949  8E78
 950  8E78              ;	Fuerza la impresión de la nave en el siguiente frame.
 951  8E78
 952  8E78 21 66 8C      	ld hl,Ctrl_3
 953  8E7B CB EE        	set 5,(hl)
 954  8E7D
 955  8E7D C9           	ret
 956  8E7E
 957  8E7E              ; --------------------------------------------------------------------------------------------------------------
 958  8E7E              ;
 959  8E7E              ;	23/11/24
 960  8E7E
 961  8E7E              Ajusta_velocidad_entidad
 962  8E7E
 963  8E7E DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 964  8E81 A7           	and a
 965  8E82 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 966  8E83              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 967  8E83              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 968  8E83
 969  8E83
 970  8E83              ; Incrementa (Contador_de_vueltas)x2.
 971  8E83              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 972  8E83
 973  8E83              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 974  8E83              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 975  8E83              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 976  8E83              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 977  8E83              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 978  8E83
 979  8E83
 980  8E83 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 981  8E85 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 982  8E88 E6 10        	and $10
 983  8E8A C8           	ret z
 984  8E8B
 985  8E8B              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 986  8E8B
 987  8E8B DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 988  8E8E CB 2F        	sra a
 989  8E90 CB 2F        	sra a
 990  8E92 DD 77 0B     	ld (ix+11),a
 991  8E95
 992  8E95 DD 6E 07     	ld l,(ix+7)
 993  8E98 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 994  8E9B
 995  8E9B              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 996  8E9B 23           	inc hl
 997  8E9C 23           	inc hl
 998  8E9D 23           	inc hl
 999  8E9E 23           	inc hl
1000  8E9F              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1001  8E9F
1002  8E9F DD 75 07     	ld (ix+7),l
1003  8EA2 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1004  8EA5
1005  8EA5 C9           	ret
1006  8EA6
1007  8EA6              ; --------------------------------------------------------------------------------------------------------------
1008  8EA6              ;
1009  8EA6              ;	25/08/24
1010  8EA6
1011  8EA6              Change
1012  8EA6
1013  8EA6 3A 5D 8C     	ld a,(Switch)
1014  8EA9 EE 01        	xor 1
1015  8EAB 32 5D 8C     	ld (Switch),a
1016  8EAE 2A 42 8C     	ld hl,(Album_de_pintado)
1017  8EB1 ED 5B 44 8C  	ld de,(Album_de_borrado)
1018  8EB5 EB           	ex de,hl
1019  8EB6 22 42 8C     	ld (Album_de_pintado),hl
1020  8EB9 22 60 8C     	ld (Scanlines_album_SP),hl
1021  8EBC ED 53 44 8C  	ld (Album_de_borrado),de
1022  8EC0 C9           	ret
1023  8EC1
1024  8EC1              Change_Amadeus
1025  8EC1
1026  8EC1 2A 46 8C     	ld hl,(Album_de_pintado_Amadeus)
1027  8EC4 ED 5B 48 8C  	ld de,(Album_de_borrado_Amadeus)
1028  8EC8 EB           	ex de,hl
1029  8EC9 22 46 8C     	ld (Album_de_pintado_Amadeus),hl
1030  8ECC ED 53 48 8C  	ld (Album_de_borrado_Amadeus),de
1031  8ED0 C9           	ret
1032  8ED1
1033  8ED1              Change_Disparos
1034  8ED1
1035  8ED1              ; Álbumes de Amadeus.
1036  8ED1
1037  8ED1 2A 4A 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1038  8ED4 ED 5B 4C 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1039  8ED8 EB           	ex de,hl
1040  8ED9 22 4A 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1041  8EDC ED 53 4C 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1042  8EE0 CD E0 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1043  8EE3
1044  8EE3              ; Álbumes de entidades.
1045  8EE3
1046  8EE3 2A 4E 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1047  8EE6 ED 5B 50 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1048  8EEA EB           	ex de,hl
1049  8EEB 22 4E 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1050  8EEE ED 53 50 8C  	ld (Album_de_borrado_disparos_Entidades),de
1051  8EF2 22 52 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1052  8EF5
1053  8EF5 3A 54 8C     	ld a,(Num_de_bytes_album_de_disparos)
1054  8EF8 32 55 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1055  8EFB
1056  8EFB C9           	ret
1057  8EFC
1058  8EFC              ; ------------------------------------
1059  8EFC              ;
1060  8EFC              ; 1/05/24
1061  8EFC
1062  8EFC              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1063  8EFC              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1064  8EFC
1065  8EFC              ;	DESTRUYE: HL,DE,A
1066  8EFC              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1067  8EFC
1068  8EFC              ;	Variables implicadas: (RND_SP).
1069  8EFC
1070  8EFC              Extrae_numero_aleatorio_y_avanza
1071  8EFC
1072  8EFC 21 00 89     	ld hl,Tabla_de_pintado
1073  8EFF EB           	ex de,hl
1074  8F00 2A 7B 8C     	ld hl,(RND_SP)
1075  8F03 EB           	ex de,hl
1076  8F04 A7           	and a
1077  8F05 ED 52        	sbc hl,de
1078  8F07
1079  8F07 2A 7B 8C     	ld hl,(RND_SP)
1080  8F0A 20 06        	jr nz,1F
1081  8F0C
1082  8F0C              ; Sitúa HL al principio de la tabla de nº aleatorios.
1083  8F0C
1084  8F0C 21 F6 88     	ld hl,Numeros_aleatorios
1085  8F0F 22 7B 8C     	ld (RND_SP),HL
1086  8F12
1087  8F12              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1088  8F12
1089  8F12 7E           1 ld a,(hl)
1090  8F13 23           	inc hl
1091  8F14 22 7B 8C     	ld (RND_SP),hl
1092  8F17 C9           	ret
1093  8F18
1094  8F18              ; ------------------------------------
1095  8F18              ;
1096  8F18              ; 1/05/24
1097  8F18
1098  8F18              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1099  8F18              ; (1 a 4 segundos).
1100  8F18              ; Actualizamos (Clock_next_entity) con A.
1101  8F18
1102  8F18              ;	DESTRUYE: A y B.
1103  8F18              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1104  8F18              ;			 Actualiza (Clock_next_entity) con A.
1105  8F18
1106  8F18              ;	Variables implicadas: (Clock_next_entity).
1107  8F18
1108  8F18              ; Notas:
1109  8F18
1110  8F18              ; 	$32 1 seg.
1111  8F18              ; 	$64 2 seg.
1112  8F18              ; 	$96 3 seg.
1113  8F18              ; 	$c8 4 seg.
1114  8F18              ; 	$fa 5 seg.
1115  8F18
1116  8F18              ; $ffff 1310,7 seg, 22 minutos.
1117  8F18
1118  8F18              ;	$0100  5 seg. aproximadamente.
1119  8F18              ;	$0200 10 seg. aproximadamente.
1120  8F18              ;	$0300 15 seg. aproximadamente.
1121  8F18              ;	$0400 20 seg. aproximadamente.
1122  8F18              ;	$0500 25 seg. aproximadamente.
1123  8F18              ;	$0600 30 seg. aproximadamente.
1124  8F18
1125  8F18              Define_Clock_next_entity
1126  8F18
1127  8F18 FE 34        	cp $34
1128  8F1A 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1129  8F1C
1130  8F1C              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1131  8F1C
1132  8F1C 4F           3 ld c,a
1133  8F1D 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1134  8F1F 2A 78 5C     	ld hl,(FRAMES)
1135  8F22 A7           	and a
1136  8F23 ED 4A        	adc hl,bc
1137  8F25 22 80 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1138  8F28 C9           	ret
1139  8F29
1140  8F29 3E 34        1 ld a,$34
1141  8F2B 18 EF        	jr 3B
1142  8F2D
1143  8F2D              ; ------------------------------------
1144  8F2D              ;
1145  8F2D              ; 18/03/24
1146  8F2D
1147  8F2D              Borra_diferencia
1148  8F2D
1149  8F2D ED 4B 60 8C  	ld bc,(Scanlines_album_SP)
1150  8F31
1151  8F31 3A 5D 8C     	ld a,(Switch)
1152  8F34 A7           	and a
1153  8F35 28 08        	jr z,2F
1154  8F37
1155  8F37 2A 5B 8C     	ld hl,(Techo_Scanlines_album_2)
1156  8F3A 11 5B 8C     	ld de,Techo_Scanlines_album_2
1157  8F3D 18 06        	jr 3F
1158  8F3F
1159  8F3F 2A 59 8C     2 ld hl,(Techo_Scanlines_album)
1160  8F42 11 59 8C     	ld de,Techo_Scanlines_album
1161  8F45
1162  8F45              ; Diferencia.
1163  8F45
1164  8F45 ED 42        3 sbc hl,bc
1165  8F47
1166  8F47 C8           	ret z
1167  8F48 D8           	ret c
1168  8F49
1169  8F49              ; Nuevo techo, (más bajo que el anterior).
1170  8F49              ; Fijamos nuevo techo y borramos bytes sobrantes.
1171  8F49
1172  8F49 EB           	ex de,hl
1173  8F4A
1174  8F4A 71           	ld (hl),c
1175  8F4B 2C           	inc l
1176  8F4C 70           	ld (hl),b
1177  8F4D
1178  8F4D AF           	xor a
1179  8F4E 43           	ld b,e
1180  8F4F
1181  8F4F 2A 60 8C     	ld hl,(Scanlines_album_SP)
1182  8F52
1183  8F52 77           1 ld (hl),a
1184  8F53 23           	inc hl
1185  8F54 10 FC        	djnz 1B
1186  8F56
1187  8F56              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1188  8F56
1189  8F56 21 66 8C     	ld hl,Ctrl_3
1190  8F59 CB DE        	set 3,(hl)
1191  8F5B
1192  8F5B C9           	ret
1193  8F5C
1194  8F5C              ; --------------------------------------------------------------------------------------------------------------
1195  8F5C              ;
1196  8F5C              ;	23/11/24
1197  8F5C              ;
1198  8F5C              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1199  8F5C
1200  8F5C              Entidad_a_Tabla_de_pintado
1201  8F5C
1202  8F5C              ; Almacena la Coordenada Y de la entidad en curso.
1203  8F5C
1204  8F5C              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1205  8F5C
1206  8F5C DD 7E 02     	ld a,(ix+2)
1207  8F5F 2A 62 8C     	ld hl,(India_SP)
1208  8F62 77           	ld (hl),a
1209  8F63 2C           	inc l
1210  8F64
1211  8F64              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1212  8F64
1213  8F64 ED 5B 60 8C  	ld de,(Scanlines_album_SP)
1214  8F68
1215  8F68 73           	ld (hl),e
1216  8F69 2C           	inc l
1217  8F6A 72           	ld (hl),d
1218  8F6B 2C           	inc l
1219  8F6C
1220  8F6C 22 62 8C     	ld (India_SP),hl
1221  8F6F
1222  8F6F C9           	ret
1223  8F70
1224  8F70              ; --------------------------------------------------------------------------------------------------------------
1225  8F70              ;
1226  8F70              ;	27/03/24
1227  8F70              ;
1228  8F70
1229  8F70              Inicializa_India_y_limpia_Tabla_de_impresion
1230  8F70
1231  8F70 2A 62 8C     	ld hl,(India_SP)
1232  8F73 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1233  8F76
1234  8F76 79           	ld a,c
1235  8F77 95           	sub l
1236  8F78 28 06        	jr z,2F
1237  8F7A 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1238  8F7B              ;														; _ y pasamos a inicializar (India_SP).
1239  8F7B AF           	xor a
1240  8F7C
1241  8F7C 77           1 ld (hl),a
1242  8F7D 2C           	inc l
1243  8F7E 10 FC        	djnz 1B												; Limpia Tabla.
1244  8F80
1245  8F80 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1246  8F83 22 62 8C     	ld (India_SP),hl
1247  8F86
1248  8F86 C9           	ret
1249  8F87
1250  8F87              ; --------------------------------------------------------------------------------------------------------------
1251  8F87              ;
1252  8F87              ;	31/3/24
1253  8F87
1254  8F87              Ordena_tabla_de_impresion
1255  8F87
1256  8F87              ; 5794 T/states.
1257  8F87              ; 6278 T/states.
1258  8F87              ; 5310 T/states.
1259  8F87
1260  8F87              ; Inicializamos punteros (India_SP) e (India_2_SP).
1261  8F87              ; Inicializamos contador de comparaciones, [C].
1262  8F87              ; Cargamos los registros A y B para efectuar comparación.
1263  8F87
1264  8F87 FD 2E 00     	ld iyl,0
1265  8F8A
1266  8F8A 3A 39 8C     	ld a,(Entidades_en_curso)
1267  8F8D FE 04        	cp 4 	;	4
1268  8F8F D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1269  8F90
1270  8F90 3D           	dec a
1271  8F91 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1272  8F92 51           	ld d,c 										; Copia de respaldo.
1273  8F93
1274  8F93 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1275  8F94
1276  8F94 21 03 89     	ld hl,Tabla_de_pintado+3
1277  8F97 46           	ld b,(hl)
1278  8F98 22 64 8C     	ld (India_2_SP),hl
1279  8F9B
1280  8F9B B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1281  8F9C DC C4 8F     	call c, Avanza_India_2_SP
1282  8F9F CC C4 8F     	call z, Avanza_India_2_SP
1283  8FA2
1284  8FA2 FD 2D        	dec iyl
1285  8FA4 28 18        	jr z,2F
1286  8FA6
1287  8FA6
1288  8FA6              ; --------------------------------------------------------------------------------------------------------------
1289  8FA6              ;
1290  8FA6              ;	7/4/24
1291  8FA6
1292  8FA6              Trueque
1293  8FA6
1294  8FA6              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1295  8FA6              ;  			A contiene en nº de fila de (India_SP).
1296  8FA6              ;			HL contiene (India_2_SP).
1297  8FA6
1298  8FA6 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1299  8FA7 E5           	push hl										; Preservo (India_2_SP).
1300  8FA8
1301  8FA8 ED 5B 62 8C  	ld de,(India_SP)
1302  8FAC EB           	ex de,hl
1303  8FAD 70           	ld (hl),b
1304  8FAE 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1305  8FAF
1306  8FAF CD F0 8F     	call Intercambia_1_byte
1307  8FB2 CD F0 8F     	call Intercambia_1_byte
1308  8FB5
1309  8FB5
1310  8FB5              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1311  8FB5              ; Recuperamos (India_2_SP) en HL.
1312  8FB5
1313  8FB5 2A 62 8C     	ld hl,(India_SP)
1314  8FB8 7E           	ld a,(hl)
1315  8FB9
1316  8FB9 E1           	pop hl
1317  8FBA D1           	pop de
1318  8FBB
1319  8FBB              ; --------------------------------------------------------------------------------------------------------------
1320  8FBB
1321  8FBB CD C4 8F     	call Avanza_India_2_SP
1322  8FBE
1323  8FBE 14           2 inc d
1324  8FBF 15           	dec d
1325  8FC0 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1326  8FC1 18 D8        	jr 1B
1327  8FC3
1328  8FC3 C9           	ret
1329  8FC4
1330  8FC4              ; ----- ----- ----- ----- -----
1331  8FC4
1332  8FC4              Avanza_India_2_SP
1333  8FC4
1334  8FC4 0D           	dec c
1335  8FC5 28 0A        	jr z,Avanza_punteros_indios
1336  8FC7
1337  8FC7 FD 2C        	inc iyl
1338  8FC9
1339  8FC9 2C           	inc l
1340  8FCA 2C           	inc l
1341  8FCB 2C           	inc l
1342  8FCC
1343  8FCC 46           	ld b,(hl)
1344  8FCD 22 64 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1345  8FD0
1346  8FD0 C9           	ret
1347  8FD1
1348  8FD1              ; ----- ----- ----- ----- -----
1349  8FD1
1350  8FD1              Avanza_punteros_indios
1351  8FD1
1352  8FD1 15           	dec d
1353  8FD2 28 15        	jr z,Prepara_salida
1354  8FD4
1355  8FD4 4A           	ld c,d
1356  8FD5
1357  8FD5 2A 62 8C     	ld hl,(India_SP)
1358  8FD8 2C           	inc l
1359  8FD9 2C           	inc l
1360  8FDA 2C           	inc l
1361  8FDB 7E           	ld a,(hl)
1362  8FDC 22 62 8C     	ld (India_SP),hl
1363  8FDF
1364  8FDF 2C           	inc l
1365  8FE0 2C           	inc l
1366  8FE1 2C           	inc l
1367  8FE2 46           	ld b,(hl)
1368  8FE3 22 64 8C     	ld (India_2_SP),hl
1369  8FE6
1370  8FE6 FD 2C        	inc iyl
1371  8FE8
1372  8FE8 C9           	ret
1373  8FE9
1374  8FE9              Prepara_salida
1375  8FE9
1376  8FE9 21 00 89     	ld hl,Tabla_de_pintado
1377  8FEC 22 62 8C     	ld (India_SP),hl
1378  8FEF C9           	ret
1379  8FF0
1380  8FF0
1381  8FF0 2C           Intercambia_1_byte inc l
1382  8FF1 1C           	inc e
1383  8FF2 46           	ld b,(hl)
1384  8FF3 1A           	ld a,(de)
1385  8FF4 EB           	ex de,hl
1386  8FF5 70           	ld (hl),b
1387  8FF6 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1388  8FF7 C9           	ret
1389  8FF8
1390  8FF8              ; -----------------------------------------------------------------------------------
1391  8FF8              ;
1392  8FF8              ;	20/01/24
1393  8FF8              ;
1394  8FF8              ;
1395  8FF8
1396  8FF8              Construye_movimientos_masticados_entidad
1397  8FF8
1398  8FF8 2A F6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1399  8FFB E5           	push hl
1400  8FFC CD 3F 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1401  8FFF              ;															; _ el (Contador_de_mov_masticados).
1402  8FFF CD 24 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1403  9002              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1404  9002 CD 0C 9A     	call Recompone_posicion_inicio
1405  9005
1406  9005 CD 3C 97     1 call Draw
1407  9008 CD 24 90     	call Guarda_movimiento_masticado
1408  900B
1409  900B CD B9 9D     	call Movimiento
1410  900E
1411  900E 3A 66 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1412  9011 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1413  9013 28 F0        	jr z,1B
1414  9015
1415  9015              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1416  9015              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1417  9015
1418  9015 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1419  9016 22 F6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1420  9019
1421  9019              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1422  9019
1423  9019 CD 1D 9F     	call Situa_en_contador_general_de_mov_masticados
1424  901C
1425  901C              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1426  901C              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1427  901C
1428  901C ED 4B F8 8B  	ld bc,(Contador_de_mov_masticados)
1429  9020
1430  9020 71           	ld (hl),c
1431  9021 23           	inc hl
1432  9022 70           	ld (hl),b
1433  9023
1434  9023 C9           	ret
1435  9024
1436  9024              ; -----------------------------------------------------------------------------------
1437  9024              ;
1438  9024              ;	28/12/23
1439  9024              ;
1440  9024              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1441  9024              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1442  9024
1443  9024              Guarda_movimiento_masticado
1444  9024
1445  9024 ED 73 3E 8C  	ld (Stack),sp
1446  9028 ED 7B F6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1447  902C
1448  902C DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1449  902E FD E5            push iy 												; Pushea Puntero_objeto.
1450  9030
1451  9030 ED 7B 3E 8C      ld sp,(Stack)
1452  9034
1453  9034 2A F8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1454  9037 23           	inc hl
1455  9038 22 F8 8B     	ld (Contador_de_mov_masticados),hl
1456  903B
1457  903B CD 3F 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1458  903E              ;															; _ el (Contador_de_mov_masticados).
1459  903E C9               ret
1460  903F
1461  903F              ; --------------------------------------------------------------------------------------------------------------
1462  903F              ;
1463  903F              ;	12/1/24
1464  903F              ;
1465  903F              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1466  903F
1467  903F              Actualiza_Puntero_de_almacen_de_mov_masticados
1468  903F
1469  903F 2A F6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1470  9042 01 04 00     	ld bc,4
1471  9045 A7           	and a
1472  9046 ED 4A        	adc hl,bc
1473  9048 22 F6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1474  904B C9           	ret
1475  904C
1476  904C              ; ------------------------------------------
1477  904C              ;
1478  904C              ;	23/11/24
1479  904C              ;
1480  904C              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1481  904C
1482  904C
1483  904C              Obtenemos_puntero_de_impresion
1484  904C
1485  904C DD 6E 07     	ld l,(ix+7)
1486  904F DD 66 08     	ld h,(ix+8)
1487  9052
1488  9052              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1489  9052
1490  9052 ED 73 3E 8C  	ld (Stack),sp
1491  9056 F9           	ld sp,hl
1492  9057
1493  9057 AF           	xor a
1494  9058 67           	ld h,a
1495  9059 6C           	ld l,h															; ld hl,"0"
1496  905A
1497  905A D1           	pop de															; (Puntero_objeto) en DE.
1498  905B C1           	pop bc
1499  905C
1500  905C              ; 	Almacena (Puntero_de_impresion) en caja.
1501  905C
1502  905C DD 71 05     	ld (ix+5),c
1503  905F DD 70 06     	ld (ix+6),b
1504  9062
1505  9062 ED 43 F4 8B  	ld (Puntero_de_impresion),bc
1506  9066
1507  9066              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1508  9066
1509  9066 39           	add hl,sp
1510  9067 DD 75 07     	ld (ix+7),l
1511  906A DD 74 08     	ld (ix+8),h
1512  906D
1513  906D C1           	pop bc
1514  906E
1515  906E 79           	ld a,c
1516  906F 80           	add b															; Comprueba si ya no hay datos en el almacén.
1517  9070
1518  9070 ED 7B 3E 8C  	ld sp,(Stack)
1519  9074
1520  9074 CC 39 94     	call z,Reinicia_entidad_maliciosa
1521  9077
1522  9077 C9           	ret
1523  9078
1524  9078              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1525  9078              ;
1526  9078              ;	25/11/24
1527  9078
1528  9078              Cargamos_registros_con_explosion
1529  9078
1530  9078 DD 6E 07     	ld l,(ix+7)
1531  907B DD 66 08     	ld h,(ix+8)
1532  907E CD 1E 91     	call Extrae_address
1533  9081 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1534  9082
1535  9082 DD 6E 05     	ld l,(ix+5)
1536  9085 DD 66 06     	ld h,(ix+6)
1537  9088
1538  9088 E5           	push hl
1539  9089 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1540  908B
1541  908B C9           	ret
1542  908C
1543  908C
1544  908C              Cargamos_registros_con_explosion_Amadeus
1545  908C
1546  908C 2A B5 89     	ld hl,(Pamm_Amadeus)
1547  908F CD 1E 91     	call Extrae_address
1548  9092
1549  9092 5D           	ld e,l
1550  9093 54           	ld d,h
1551  9094
1552  9094 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1553  9098
1554  9098 C9           	ret
1555  9099
1556  9099              ; --------------------------------------------------------------------------------------------------------------
1557  9099              ;
1558  9099              ;	17/06/24
1559  9099              ;
1560  9099              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1561  9099              ;
1562  9099              ;	IX contiene el puntero de impresión.
1563  9099              ;	DE contiene (Puntero_objeto).
1564  9099
1565  9099
1566  9099              Cargamos_registros_con_mov_masticado_Amadeus
1567  9099
1568  9099 ED 73 3E 8C  	ld (Stack),sp
1569  909D ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1570  90A1 D1           	pop de 															; DE contiene Puntero_objeto
1571  90A2 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1572  90A4 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1573  90A8 ED 7B 3E 8C  	ld sp,(Stack)
1574  90AC C9           	ret
1575  90AD
1576  90AD              ; ---------------------------------------------------------------------------------------------------------------------
1577  90AD              ;
1578  90AD              ;	18/6/24
1579  90AD              ;
1580  90AD              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1581  90AD
1582  90AD              Genera_datos_de_impresion_Amadeus
1583  90AD
1584  90AD 3A B2 89     	ld a,(Impacto_Amadeus)
1585  90B0 A7           	and a
1586  90B1 20 03        	jr nz,1F
1587  90B3
1588  90B3              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1589  90B3              ; _apuntando a la correspondiente explosión.
1590  90B3
1591  90B3 CD 99 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1592  90B6
1593  90B6 DD 7D        1 ld a,ixl
1594  90B8 E6 1F        	and $1f
1595  90BA 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1596  90BD
1597  90BD 2A 60 8C     	ld hl,(Scanlines_album_SP)
1598  90C0 E5           	push hl
1599  90C1
1600  90C1 2A 46 8C     	ld hl,(Album_de_pintado_Amadeus)
1601  90C4 22 60 8C     	ld (Scanlines_album_SP),hl
1602  90C7
1603  90C7 CD 25 95     	call Genera_datos_de_impresion
1604  90CA
1605  90CA E1           	pop hl
1606  90CB 22 60 8C     	ld (Scanlines_album_SP),hl
1607  90CE
1608  90CE C9           	ret
1609  90CF
1610  90CF              ; ---------------------------------------------------------------------------------------------------------------------
1611  90CF              ;
1612  90CF              ;	13/03/24
1613  90CF              ;
1614  90CF              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1615  90CF
1616  90CF              Inicia_albumes_de_lineas
1617  90CF
1618  90CF 21 00 80     	ld hl,Scanlines_album
1619  90D2 22 42 8C     	ld (Album_de_pintado),hl
1620  90D5 22 60 8C     	ld (Scanlines_album_SP),hl
1621  90D8
1622  90D8 21 1A 81     	ld hl,Scanlines_album_2
1623  90DB 22 44 8C     	ld (Album_de_borrado),hl
1624  90DE
1625  90DE C9           	ret
1626  90DF
1627  90DF              Inicia_albumes_de_lineas_Amadeus
1628  90DF
1629  90DF 21 34 82     	ld hl,Amadeus_scanlines_album
1630  90E2 22 46 8C     	ld (Album_de_pintado_Amadeus),hl
1631  90E5 21 58 82     	ld hl,Amadeus_scanlines_album_2
1632  90E8 22 48 8C     	ld (Album_de_borrado_Amadeus),hl
1633  90EB
1634  90EB C9           	ret
1635  90EC
1636  90EC              Inicia_albumes_de_disparos
1637  90EC
1638  90EC 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1639  90EF 22 4A 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1640  90F2 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1641  90F5 22 4C 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1642  90F8
1643  90F8 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1644  90FB 22 4E 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1645  90FE 22 52 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1646  9101
1647  9101 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1648  9104 22 50 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1649  9107
1650  9107 C9           	ret
1651  9108
1652  9108              ; ---------------------------------------------------------------------------------------------------------------------
1653  9108              ;
1654  9108              ; 8/1/23
1655  9108              ;
1656  9108              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1657  9108              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1658  9108              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1659  9108
1660  9108              ; Destruye HL y DE !!!!!
1661  9108
1662  9108              Inicia_punteros_de_cajas
1663  9108
1664  9108 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1665  910B CD 1E 91         call Extrae_address
1666  910E 22 2F 8C         ld (Puntero_store_caja),hl
1667  9111 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1668  9114 22 33 8C     	ld (Indice_restore_caja),hl
1669  9117 CD 1E 91     	call Extrae_address
1670  911A 22 31 8C     	ld (Puntero_restore_caja),hl
1671  911D C9               ret
1672  911E
1673  911E              ; *************************************************************************************************************************************************************
1674  911E
1675  911E              ;
1676  911E              ; 20/10/22
1677  911E              ;
1678  911E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1679  911E              ;
1680  911E              ; Destruye el puntero y DE !!!!!
1681  911E
1682  911E 5E           Extrae_address ld e,(hl)
1683  911F 23           	inc hl
1684  9120 56           	ld d,(hl)
1685  9121 2B           	dec hl
1686  9122 EB           	ex de,hl
1687  9123 C9           	ret
1688  9124
1689  9124              ; *************************************************************************************************************************************************************
1690  9124              ;
1691  9124              ;	20/1/24
1692  9124              ;
1693  9124              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1694  9124              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1695  9124              ;
1696  9124              ;   Destruye HL y BC !!!!!,
1697  9124              ;
1698  9124              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1699  9124              ;					"0" ..... Izquierda.
1700  9124
1701  9124              Inicia_Puntero_objeto
1702  9124
1703  9124 3A 0E 8C     	ld a,(Cuad_objeto)
1704  9127 E6 01        	and 1
1705  9129 F5           	push af
1706  912A CC 46 91     	call z,Inicia_puntero_objeto_izq
1707  912D F1           	pop af
1708  912E C8           	ret z
1709  912F CD 33 91     	call Inicia_puntero_objeto_der
1710  9132 C9           	ret
1711  9133
1712  9133              ; Arrancamos desde la parte izquierda de la pantalla.
1713  9133              ; Iniciamos (Indice_Sprite_der).
1714  9133
1715  9133 2A 04 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1716  9136 22 08 8C     	ld (Puntero_DESPLZ_der),hl
1717  9139 CD 1E 91     	call Extrae_address
1718  913C 22 01 8C     	ld (Puntero_objeto),hl
1719  913F
1720  913F 2A 06 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1721  9142 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
1722  9145 C9           	ret
1723  9146
1724  9146              ; Arrancamos desde la parte derecha de la pantalla.
1725  9146              ; Iniciamos (Indice_Sprite_izq).
1726  9146
1727  9146 2A 06 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1728  9149 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
1729  914C CD 1E 91     	call Extrae_address
1730  914F 22 01 8C     	ld (Puntero_objeto),hl
1731  9152
1732  9152 2A 04 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1733  9155 22 08 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1734  9158 C9           	ret
1735  9159
1736  9159              ; **************************************************************************************************
1737  9159              ;
1738  9159              ;	27/11/24
1739  9159              ;
1740  9159              ;	INPUT: IX contiene (Puntero_store_caja).
1741  9159              ;
1742  9159              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1743  9159
1744  9159              Salta_caja_de_entidades_vacia
1745  9159
1746  9159 DD 7E 00     	ld a,(ix+0)
1747  915C A7           	and a
1748  915D C0           	ret nz
1749  915E
1750  915E CD 68 91     	call Incrementa_punteros_de_cajas
1751  9161 DD 2A 2F 8C  	ld ix,(Puntero_store_caja)
1752  9165 18 F2        	jr Salta_caja_de_entidades_vacia
1753  9167
1754  9167 C9           	ret
1755  9168
1756  9168              ; **************************************************************************************************
1757  9168              ;
1758  9168              ;	08/05/23
1759  9168              ;
1760  9168              ;	Incrementamos los dos punteros de entidades. (+1).
1761  9168
1762  9168              Incrementa_punteros_de_cajas
1763  9168
1764  9168 2A 31 8C     	ld hl,(Puntero_restore_caja)
1765  916B 22 2F 8C     	ld (Puntero_store_caja),hl
1766  916E 2A 33 8C     	ld hl,(Indice_restore_caja)
1767  9171 23           	inc hl
1768  9172 23           	inc hl
1769  9173 22 33 8C     	ld (Indice_restore_caja),hl
1770  9176 CD 1E 91         call Extrae_address
1771  9179 22 31 8C         ld (Puntero_restore_caja),hl
1772  917C C9               ret
1773  917D
1774  917D              ; -----------------------------------------------------------
1775  917D
1776  917D              ; Teclado.
1777  917D
1778  917D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1779  917F DB FE        	in a,($fe)
1780  9181 E6 01        	and $01
1781  9183 28 02        	jr z,1f
1782  9185 18 F6        	jr Pulsa_ENTER
1783  9187 C9           1 ret
1784  9188
1785  9188              ; **************************************************************************************************
1786  9188              ;
1787  9188              ; Temporización.
1788  9188
1789  9188              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1790  9188              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1791  9188              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1792  9188              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1793  9188
1794  9188              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1795  9188              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1796  9188              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1797  9188
1798  9188              ; A partir de $4f61 no hace falta DELAY.
1799  9188
1800  9188              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1801  9188
1802  9188              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1803  9188              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1804  9188              ;	LD A,B
1805  9188              ;	AND A
1806  9188              ;	JR NZ,wait
1807  9188              ;	RET
1808  9188
1809  9188              ; ---------------------------------------------------------------------------------------------------------------
1810  9188              ;
1811  9188              ;	13/07/24
1812  9188              ;
1813  9188
1814  9188              Inicia_Shield
1815  9188
1816  9188 21 8A 8C     	ld hl,Datos_Shield
1817  918B 22 8E 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1818  918E
1819  918E 7E           	ld a,(hl)
1820  918F 32 91 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1821  9192
1822  9192 3E 01        	ld a,1
1823  9194 32 92 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1824  9197
1825  9197 C9           	ret
1826  9198
1827  9198              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1828  9198              ;
1829  9198              ;	4/6/24
1830  9198              ;
1831  9198              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1832  9198              ;
1833  9198              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1834  9198              ;
1835  9198
1836  9198              Actualiza_pantalla
1837  9198
1838  9198 3E 02        	ld a,2
1839  919A D3 FE        	out ($fe),a
1840  919C
1841  919C 3A 66 8C     	ld a,(Ctrl_3)
1842  919F CB 57        	bit 2,a
1843  91A1 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1844  91A3
1845  91A3              Borrando_entidades
1846  91A3
1847  91A3 2A 60 8C     	ld hl,(Scanlines_album_SP)
1848  91A6 CD 1E 91     	call Extrae_address
1849  91A9 24           	inc h
1850  91AA 25           	dec h
1851  91AB 28 05        	jr z,Pintando_entidades
1852  91AD CD 19 96     	call Pinta_Sprites
1853  91B0 18 F1        	jr Borrando_entidades
1854  91B2
1855  91B2              Pintando_entidades
1856  91B2
1857  91B2 2A 62 8C     	ld hl,(India_SP)
1858  91B5 2C           	inc l
1859  91B6 CD 1E 91     	call Extrae_address
1860  91B9 24           	inc h
1861  91BA 25           	dec h
1862  91BB 28 0E        	jr z,Ejecuta_escudo
1863  91BD 1C           	inc e
1864  91BE 1C           	inc e
1865  91BF ED 53 62 8C  	ld (India_SP),de
1866  91C3 CD 1E 91     	call Extrae_address
1867  91C6 CD 19 96     	call Pinta_Sprites
1868  91C9 18 E7        	jr Pintando_entidades
1869  91CB
1870  91CB              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1871  91CB
1872  91CB              Ejecuta_escudo
1873  91CB
1874  91CB 3A 90 8C     	ld a,(Shield)
1875  91CE A7           	and a
1876  91CF 20 2F        	jr nz,Aplica_Shield
1877  91D1
1878  91D1              Borrando_Amadeus
1879  91D1
1880  91D1 21 66 8C     	ld hl,Ctrl_3
1881  91D4 CB 6E        	bit 5,(hl)
1882  91D6 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1883  91D8
1884  91D8 2A 48 8C     	ld hl,(Album_de_borrado_Amadeus)
1885  91DB CD 1E 91     	call Extrae_address
1886  91DE 24           	inc h
1887  91DF 25           	dec h
1888  91E0 28 03        	jr z,Pintando_Amadeus
1889  91E2 CD 19 96     	call Pinta_Sprites
1890  91E5
1891  91E5              Pintando_Amadeus
1892  91E5
1893  91E5 2A 46 8C     	ld hl,(Album_de_pintado_Amadeus)
1894  91E8 CD 1E 91     	call Extrae_address
1895  91EB 24           	inc h
1896  91EC 25           	dec h
1897  91ED 28 03        	jr z,1F
1898  91EF CD 19 96     	call Pinta_Sprites
1899  91F2
1900  91F2              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1901  91F2
1902  91F2 21 66 8C     1 ld hl,Ctrl_3
1903  91F5 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1904  91F7 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1905  91F9 CB AE        	res 5,(hl)
1906  91FB
1907  91FB 3E 01        	ld a,1												; Borde azul.
1908  91FD D3 FE        	out ($fe),a
1909  91FF
1910  91FF C9           	ret
1911  9200
1912  9200              Aplica_Shield
1913  9200
1914  9200              ;	Bit 1 "1" (Shield_3) Sólo borra.
1915  9200              ;		  "0"     ""     Borra/Pinta.
1916  9200              ;	Bit 2    ""  RET.	 No borra, no pinta.
1917  9200
1918  9200 21 92 8C     	ld hl,Shield_3
1919  9203
1920  9203 CB 5E        	bit 3,(hl)
1921  9205 20 DE        	jr nz,Pintando_Amadeus
1922  9207
1923  9207 CB 56        	bit 2,(hl)
1924  9209 20 E7        	jr nz,1B
1925  920B
1926  920B CB 4E        	bit 1,(hl)
1927  920D C4 14 92     	call nz,Borra_Amadeus_shield
1928  9210
1929  9210 28 BF        	jr z,Borrando_Amadeus
1930  9212 18 DE        	jr 1B
1931  9214
1932  9214              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1933  9214
1934  9214              Borra_Amadeus_shield
1935  9214
1936  9214 3A 66 8C     	ld a,(Ctrl_3)
1937  9217 CB 6F        	bit 5,a
1938  9219 28 08        	jr z,1F
1939  921B
1940  921B 2A 48 8C     	ld hl,(Album_de_borrado_Amadeus)
1941  921E CD 1E 91     	call Extrae_address
1942  9221 18 06        	jr 2F
1943  9223
1944  9223 2A 46 8C     1 ld hl,(Album_de_pintado_Amadeus)
1945  9226 CD 1E 91     	call Extrae_address
1946  9229
1947  9229 CD 19 96     2 call Pinta_Sprites
1948  922C
1949  922C AF           	xor a
1950  922D 3C           	inc a											; Asegura NZ en la salida de la rutina.
1951  922E
1952  922E C9           	ret
1953  922F
1954  922F              Pinta_Amadeus_shield
1955  922F
1956  922F 2A 46 8C     	ld hl,(Album_de_pintado_Amadeus)
1957  9232 CD 1E 91     	call Extrae_address
1958  9235 CD 19 96     	call Pinta_Sprites
1959  9238
1960  9238 AF           	xor a
1961  9239 3C           	inc a											; Asegura NZ en la salida de la rutina.
1962  923A
1963  923A C9           	ret
1964  923B
1965  923B              Borra_Pinta_Amadeus_shield
1966  923B
1967  923B CD 14 92     	call Borra_Amadeus_shield
1968  923E CD 2F 92     	call Pinta_Amadeus_shield
1969  9241 C9           	ret
1970  9242
1971  9242              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1972  9242              ;
1973  9242              ;	19/6/24
1974  9242              ;
1975  9242
1976  9242              Teclado
1977  9242
1978  9242              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1979  9242
1980  9242 3E F7        	ld a,$f7												; "5" para disparar.
1981  9244 DB FE        	in a,($fe)
1982  9246 E6 10        	and $10
1983  9248
1984  9248 CC B4 A2     	call z,Genera_disparo_Amadeus
1985  924B
1986  924B 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1987  924D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1988  924F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1989  9251 CC 86 9D         call z,Amadeus_a_izquierda
1990  9254
1991  9254 3E F7        	ld a,$f7
1992  9256 DB FE        	in a,($fe)
1993  9258 E6 01        	and $01
1994  925A C8           	ret z
1995  925B
1996  925B 3E F7        	ld a,$f7
1997  925D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1998  925F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1999  9261 CC 9E 9D     	call z,Amadeus_a_derecha
2000  9264
2001  9264 C9           	ret
2002  9265
2003  9265              ; ------------------------------------------------------------------------------------------------------------------------
2004  9265              ;
2005  9265              ;	06/07/24
2006  9265              ;
2007  9265
2008  9265              Genera_explosion
2009  9265
2010  9265 21 78 8C     	ld hl,Clock_explosion
2011  9268 35           	dec (hl)
2012  9269 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2013  926B
2014  926B              Borra_entidad_colisionada
2015  926B
2016  926B CD 5C 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2017  926E
2018  926E DD E5        	push ix
2019  9270 CD 78 90     	call Cargamos_registros_con_explosion
2020  9273 CD 25 95     	call Genera_datos_de_impresion
2021  9276 DD E1        	pop ix
2022  9278
2023  9278 AF           	xor a
2024  9279 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2025  927A
2026  927A C9           	ret
2027  927B
2028  927B              Siguiente_frame_explosion
2029  927B
2030  927B 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2031  927D
2032  927D              ; Avanza Frame de explosión.
2033  927D
2034  927D DD 6E 07     	ld l,(ix+7)
2035  9280 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2036  9283
2037  9283 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2038  9286
2039  9286 79           	ld a,c
2040  9287 95           	sub l
2041  9288 20 15        	jr nz,1F
2042  928A
2043  928A              ; Fín de la entidad !!!!!!!!!!!!!
2044  928A
2045  928A 21 38 8C     	ld hl,Numero_parcial_de_entidades
2046  928D 35           	dec (hl)
2047  928E 23           	inc hl
2048  928F 35           	dec (hl)														; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso)
2049  9290
2050  9290              ; !! Provisional. Limpia la caja de entidades.
2051  9290
2052  9290 DD E5        	push ix
2053  9292 E1           	pop hl
2054  9293 AF           	xor a
2055  9294 77           	ld (hl),a
2056  9295 5D           	ld e,l
2057  9296 54           	ld d,h
2058  9297 1C           	inc e
2059  9298 01 0B 00     	ld bc,11
2060  929B ED B0        	ldir
2061  929D
2062  929D 18 CC        	jr Borra_entidad_colisionada
2063  929F
2064  929F 23           1 inc hl
2065  92A0 23           	inc hl
2066  92A1
2067  92A1 DD 75 07     	ld (ix+7),l
2068  92A4 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2069  92A7
2070  92A7 18 C2        	jr Borra_entidad_colisionada
2071  92A9
2072  92A9              ; ----- ----- ----- ----- -----
2073  92A9
2074  92A9              Genera_explosion_Amadeus
2075  92A9
2076  92A9 21 79 8C     	ld hl,Clock_explosion_Amadeus
2077  92AC 35           	dec (hl)
2078  92AD 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2079  92AF
2080  92AF              Borra_Amadeus_impactado
2081  92AF
2082  92AF CD C1 8E     	call Change_Amadeus
2083  92B2 CD 8C 90     	call Cargamos_registros_con_explosion_Amadeus
2084  92B5 CD AD 90     	call Genera_datos_de_impresion_Amadeus
2085  92B8
2086  92B8 21 66 8C     	ld hl,Ctrl_3
2087  92BB CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2088  92BD
2089  92BD AF           	xor a
2090  92BE 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2091  92BF
2092  92BF C9           	ret
2093  92C0
2094  92C0              Siguiente_frame_explosion_Amadeus
2095  92C0
2096  92C0 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2097  92C2
2098  92C2              ; Avanza Frame de explosión.
2099  92C2
2100  92C2 2A B5 89     	ld hl,(Pamm_Amadeus)
2101  92C5 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2102  92C8
2103  92C8 79           	ld a,c
2104  92C9 95           	sub l
2105  92CA 20 0B        	jr nz,1F
2106  92CC
2107  92CC              ; Fín de Amadeus !!!!!!!!!!!!!
2108  92CC              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2109  92CC
2110  92CC AF           	xor a
2111  92CD 32 B2 89     	ld (Impacto_Amadeus),a
2112  92D0 21 66 8C     	ld hl,Ctrl_3
2113  92D3 CB F6        	set 6,(hl)
2114  92D5
2115  92D5 18 D8        	jr Borra_Amadeus_impactado
2116  92D7
2117  92D7 23           1 inc hl
2118  92D8 23           	inc hl
2119  92D9 22 B5 89     	ld (Pamm_Amadeus),hl
2120  92DC 18 D1        	jr Borra_Amadeus_impactado
2121  92DE
2122  92DE              ; ---------------------------------------------------------------
2123  92DE
2124  92DE              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92DE              ; ******************************************************************************************************************************************************************************************
   2+ 92DE              ;
   3+ 92DE              ;   21/04/24
   4+ 92DE              ;
   5+ 92DE              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92DE              ;   (XOR) bit a bit.
   7+ 92DE              ;
   8+ 92DE              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92DE
  10+ 92DE              Derivando_RND
  11+ 92DE
  12+ 92DE 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92E1
  14+ 92E1 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92E3 C5               push bc
  16+ 92E4              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92E4 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92E7              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92E7
  20+ 92E7 A7           6 and a                                 ; Carry a "0".
  21+ 92E8 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92EA 30 02            jr nc,1F
  23+ 92EC
  24+ 92EC CB C1            set 0,c
  25+ 92EE
  26+ 92EE 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92EF E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92F1 5F               ld e,a
  29+ 92F2
  30+ 92F2 7A               ld a,d
  31+ 92F3 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92F5 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92F7
  34+ 92F7 CB 3F            srl a
  35+ 92F9
  36+ 92F9 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92FA
  38+ 92FA 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92FB 28 04            jr z,4F
  40+ 92FD
  41+ 92FD CB FF            set 7,a
  42+ 92FF 18 02            jr 5F
  43+ 9301
  44+ 9301 CB BF        4 res 7,a
  45+ 9303
  46+ 9303 CB 21        5 sla c
  47+ 9305 10 E0            djnz 6B
  48+ 9307
  49+ 9307 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9308
  51+ 9308 77               ld (hl),a
  52+ 9309 23               inc hl
  53+ 930A C1               pop bc
  54+ 930B 10 D4            djnz 3B
  55+ 930D
  56+ 930D C9               ret
  57+ 930E
  58+ 930E
  59+ 930E
# file closed: RND_Derivando.asm
2125  930E              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 930E              ;---------------------------------------------------------------------------------------------------------------
   2+ 930E              ;
   3+ 930E              ;   13/11/24
   4+ 930E
   5+ 930E              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 930E
   7+ 930E              Genera_movimientos_masticados_del_nivel
   8+ 930E
   9+ 930E              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 930E
  11+ 930E              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 930E              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 930E              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 930E
  15+ 930E 2D           	dec l
  16+ 930F 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9310 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9311 4E           	ld c,(hl)
  19+ 9312
  20+ 9312 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9313 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9314
  23+ 9314              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9314
  25+ 9314 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9315
  27+ 9315 CD 53 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9318
  29+ 9318              ;	Caja Master inicializada ???
  30+ 9318
  31+ 9318 7E           	ld a,(hl)
  32+ 9319 A7           	and a
  33+ 931A 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 931C
  35+ 931C              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 931C
  37+ 931C C1           	pop bc
  38+ 931D 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 931E C5           	push bc
  40+ 931F
  41+ 931F CD F3 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9322 CD 87 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9325
  44+ 9325 3A EF 8B     	ld a,(Tipo)
  45+ 9328 CD 63 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 932B
  47+ 932B              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 932B
  49+ 932B              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 932B              ;	ld a,(hl)
  51+ 932B              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 932B
  53+ 932B              ;	ld hl,Posicion_inicio
  54+ 932B              ;	ld (hl),a
  55+ 932B
  56+ 932B              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 932B              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 932B
  59+ 932B CD F8 8F     	call Construye_movimientos_masticados_entidad
  60+ 932E
  61+ 932E 2A 35 8C     	ld hl,(Puntero_indice_master)
  62+ 9331 CD 1E 91     	call Extrae_address
  63+ 9334
  64+ 9334 5D           	ld e,l
  65+ 9335 54           	ld d,h
  66+ 9336
  67+ 9336 CD B4 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9339
  69+ 9339              Movimientos_masticados_construidos
  70+ 9339
  71+ 9339 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 933A
  73+ 933A E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 933B 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 933C
  76+ 933C 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 933D 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 933F
  79+ 933F C9           	ret
  80+ 9340
  81+ 9340              ;---------------------------------------------------------------------------------------------------------------
  82+ 9340              ;
  83+ 9340              ;   9/11/24
  84+ 9340              ;
  85+ 9340              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9340              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9340              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9340              ;	_ de la 1ª entidad del Nivel.
  89+ 9340              ;
  90+ 9340              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9340
  92+ 9340              ;	MODIFICA: HL,DE y A.
  93+ 9340              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9340
  95+ 9340              Inicializa_1er_Nivel
  96+ 9340
  97+ 9340              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9340
  99+ 9340 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 9343 CD 1E 91     	call Extrae_address
 101+ 9346 ED 53 86 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 934A
 103+ 934A 7E           	ld a,(hl)
 104+ 934B 32 37 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 934E
 106+ 934E 2C           	inc l
 107+ 934F 22 88 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9352
 109+ 9352 C9           	ret
 110+ 9353
 111+ 9353              ; ----------------------
 112+ 9353              ;
 113+ 9353              ;	13/11/24
 114+ 9353              ;
 115+ 9353
 116+ 9353              Situa_en_Caja_Master
 117+ 9353
 118+ 9353 CD 72 94         call Calcula_salto_en_BC
 119+ 9356 21 58 89         ld hl,Indice_de_cajas_master
 120+ 9359 A7               and a
 121+ 935A ED 4A            adc hl,bc
 122+ 935C 22 35 8C       	ld (Puntero_indice_master),hl
 123+ 935F CD 1E 91     	call Extrae_address
 124+ 9362 C9           	ret
 125+ 9363
 126+ 9363              ; ----------------------
 127+ 9363
 128+ 9363              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9363              ; 	ld bc,4
 130+ 9363              ; 	ldir
 131+ 9363              ; 	ret
 132+ 9363
 133+ 9363 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9364 CD 72 94         call Calcula_salto_en_BC
 135+ 9367 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 936A A7               and a
 137+ 936B ED 4A            adc hl,bc
 138+ 936D CD 1E 91         call Extrae_address
 139+ 9370 22 20 8C         ld (Puntero_indice_mov),hl
 140+ 9373 C9               ret
 141+ 9374
 142+ 9374              ;---------------------------------------------------------------------------------------------------------------
 143+ 9374              ;
 144+ 9374              ;   13/11/24
 145+ 9374              ;
 146+ 9374              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9374
 148+ 9374
 149+ 9374              Prepara_Cajas_de_Entidades
 150+ 9374
 151+ 9374              ; Preparamos los punteros de las cajas de entidades:
 152+ 9374
 153+ 9374 CD 08 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9377              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9377 CD BD 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 937A
 157+ 937A 2A 88 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 937D
 159+ 937D              ; En este punto:
 160+ 937D              ;
 161+ 937D              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 937D              ; B contiene (Numero_parcial_de_entidades).
 163+ 937D
 164+ 937D C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 937E
 166+ 937E 7E           	ld a,(hl)
 167+ 937F
 168+ 937F CD 53 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9382
 170+ 9382 ED 5B 2F 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9386
 172+ 9386 D5           	push de
 173+ 9387 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 9389
 175+ 9389 01 0C 00     	ld bc,12
 176+ 938C ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 938E              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 938E
 179+ 938E              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 938E              ;
 181+ 938E              ;
 182+ 938E              ; ------------------------------------------------------ IX
 183+ 938E              ; ------------------------------------------------------ IX
 184+ 938E              ; ------------------------------------------------------ IX
 185+ 938E              ; ------------------------------------------------------ IX
 186+ 938E
 187+ 938E DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 9390
 189+ 9390 CD 4C 90     	call Obtenemos_puntero_de_impresion
 190+ 9393
 191+ 9393 DD 6E 05     	ld l,(ix+5)
 192+ 9396 2C           	inc l
 193+ 9397 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 939A
 195+ 939A D5           	push de														; Push (Puntero_objeto).
 196+ 939B E5           	push hl														; Push (Puntero_de_impresion).
 197+ 939C
 198+ 939C CD F9 94     	call Genera_coordenadas
 199+ 939F
 200+ 939F ED 4B F0 8B  	ld bc,(Coordenada_X)
 201+ 93A3
 202+ 93A3 DD 71 01     	ld (ix+1),c
 203+ 93A6 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 93A9
 205+ 93A9 CD 5C 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 93AC
 207+ 93AC DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 93AE D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 93AF
 210+ 93AF CD 25 95     	call Genera_datos_de_impresion
 211+ 93B2
 212+ 93B2 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 93B4
 214+ 93B4              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 93B4
 216+ 93B4 CD 2B 94     	call Decrementa_Contador_de_mov_masticados
 217+ 93B7 CD 08 94     	call Limpiamos_bandeja_DRAW
 218+ 93BA CD 68 91     	call Incrementa_punteros_de_cajas
 219+ 93BD
 220+ 93BD              ; Siguiente entidad del Nivel.
 221+ 93BD
 222+ 93BD 2A 88 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 93C0 23           	inc hl 														; _ entidad del Nivel.
 224+ 93C1
 225+ 93C1 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 93C2
 227+ 93C2 10 B9        	djnz 1B
 228+ 93C4
 229+ 93C4 C9           	ret
 230+ 93C5
 231+ 93C5              ; -------------------------------------------------------------------------------------------------------------------
 232+ 93C5              ;
 233+ 93C5              ;	27/5/24
 234+ 93C5              ;
 235+ 93C5              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 93C5              ;
 237+ 93C5
 238+ 93C5              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 93C5              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 93C5
 241+ 93C5 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 93C8 CD 87 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 93CB
 244+ 93CB
 245+ 93CB              Construye_movimientos_masticados_Amadeus
 246+ 93CB
 247+ 93CB 2A F6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 93CE CD 3F 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 93D1              ;															; _ el (Contador_de_mov_masticados).
 250+ 93D1 CD 24 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 93D4              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 93D4
 253+ 93D4              ; Generamos movimientos masticados de Amadeus.
 254+ 93D4
 255+ 93D4 06 79        	ld b,121												; $0079, 121d.
 256+ 93D6
 257+ 93D6 C5           1 push bc
 258+ 93D7 CD 3C 97     	call Draw
 259+ 93DA CD 24 90     	call Guarda_movimiento_masticado
 260+ 93DD
 261+ 93DD CD B0 9A     	call Mov_right
 262+ 93E0 CD B0 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 93E3
 264+ 93E3 C1           	pop bc
 265+ 93E4 10 F0        	djnz 1B
 266+ 93E6
 267+ 93E6              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 93E6
 269+ 93E6              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 93E6              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 93E6
 272+ 93E6 2A F6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 93E9 01 08 00     	ld bc,8
 274+ 93EC A7           	and a
 275+ 93ED ED 42        	sbc hl,bc
 276+ 93EF 22 F6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 93F2
 278+ 93F2 C9           	ret
 279+ 93F3
 280+ 93F3              ; ---------------------------------------------------------------------
 281+ 93F3              ;
 282+ 93F3              ;	10/02/24
 283+ 93F3              ;
 284+ 93F3              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 93F3              ;
 286+ 93F3              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 93F3
 288+ 93F3              Definicion_segun_tipo
 289+ 93F3
 290+ 93F3 CD 72 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 93F6 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 93F9 CD 7D 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 93FC C9           	ret
 294+ 93FD
 295+ 93FD              ; ---------------------------------------------------------------------
 296+ 93FD              ;
 297+ 93FD              ;	6/7/24
 298+ 93FD
 299+ 93FD
 300+ 93FD              Store_Restore_cajas
 301+ 93FD
 302+ 93FD ED 5B 2F 8C  	ld de,(Puntero_store_caja)
 303+ 9401 CD B4 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 9404 CD 68 91     	call Incrementa_punteros_de_cajas
 305+ 9407 C9           	ret
 306+ 9408
 307+ 9408              ; ---------------------------------------------------------------------
 308+ 9408              ;
 309+ 9408              ;	23/6/24
 310+ 9408              ;
 311+ 9408              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9408              ;
 313+ 9408              ;	MODIFY: HL
 314+ 9408
 315+ 9408              Limpiamos_bandeja_DRAW
 316+ 9408
 317+ 9408 ED 73 3E 8C  	ld (Stack),sp
 318+ 940C 31 14 8C     	ld sp,Vel_left
 319+ 940F
 320+ 940F AF           	xor a
 321+ 9410 67           	ld h,a
 322+ 9411 6F           	ld l,a
 323+ 9412
 324+ 9412 E5           	push hl
 325+ 9413 E5           	push hl
 326+ 9414 E5           	push hl
 327+ 9415 E5           	push hl
 328+ 9416 E5           	push hl
 329+ 9417 E5           	push hl
 330+ 9418 E5           	push hl
 331+ 9419 E5           	push hl
 332+ 941A E5           	push hl
 333+ 941B E5           	push hl
 334+ 941C E5           	push hl
 335+ 941D E5           	push hl
 336+ 941E E5           	push hl
 337+ 941F E5           	push hl
 338+ 9420 E5           	push hl
 339+ 9421 E5           	push hl
 340+ 9422 E5           	push hl
 341+ 9423 E5           	push hl
 342+ 9424
 343+ 9424 33           	inc sp
 344+ 9425
 345+ 9425 E5           	push hl
 346+ 9426 ED 7B 3E 8C  	ld sp,(Stack)
 347+ 942A
 348+ 942A C9           	ret
 349+ 942B
 350+ 942B              ; ---------------------------------------------------------------------
 351+ 942B              ;
 352+ 942B              ;	23/11/24
 353+ 942B              ;
 354+ 942B              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 942B
 356+ 942B              Decrementa_Contador_de_mov_masticados
 357+ 942B
 358+ 942B DD 6E 09     	ld l,(ix+9)
 359+ 942E DD 66 0A     	ld h,(ix+10)
 360+ 9431
 361+ 9431 2B           	dec hl
 362+ 9432
 363+ 9432 DD 75 09     	ld (ix+9),l
 364+ 9435 DD 74 0A     	ld (ix+10),h
 365+ 9438
 366+ 9438 C9           	ret
 367+ 9439
 368+ 9439              ; ---------------------------------------------------------------------
 369+ 9439              ;
 370+ 9439              ;	24/11/24
 371+ 9439
 372+ 9439              Reinicia_entidad_maliciosa
 373+ 9439
 374+ 9439              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 9439
 376+ 9439 CD 1D 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 943C CD 2A 9F     	call Transfiere_datos_de_contadores
 378+ 943F
 379+ 943F              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 943F
 381+ 943F DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 9442 CD F3 93     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 9445
 384+ 9445 7D           	ld a,l
 385+ 9446 C6 0B        	add 11
 386+ 9448 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 9449
 388+ 9449 CD 1E 91     	call Extrae_address
 389+ 944C
 390+ 944C DD 75 07     	ld (ix+7),l
 391+ 944F DD 74 08     	ld (ix+8),h
 392+ 9452
 393+ 9452 CD 4C 90     	call Obtenemos_puntero_de_impresion
 394+ 9455
 395+ 9455              ; Incrementa (Contador_de_vueltas)x2.
 396+ 9455              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 9455
 398+ 9455              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 9455              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 9455              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 9455              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 9455              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 9455
 404+ 9455 DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 9459
 406+ 9459 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 945C CB 2F        	sra a
 408+ 945E CB 2F        	sra a
 409+ 9460
 410+ 9460 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 9463
 412+ 9463 3E 40        	ld a,$40
 413+ 9465 DD BE 03     	cp (ix+3)
 414+ 9468 C0           	ret nz
 415+ 9469
 416+ 9469              ; Límitador.
 417+ 9469
 418+ 9469              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 9469
 420+ 9469 DD CB 03 2E  	sra (ix+3)
 421+ 946D DD CB 0B 2E  	sra (ix+11)
 422+ 9471
 423+ 9471 C9           	ret
 424+ 9472
 425+ 9472              ;	------------------------------------------------------------------------------------
 426+ 9472              ;
 427+ 9472              ;	09/11/24
 428+ 9472              ;
 429+ 9472              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 9472              ;
 431+ 9472              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 9472              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 9472
 434+ 9472 A7           Calcula_salto_en_BC and a
 435+ 9473 28 04        	jr z,1F
 436+ 9475 CB 27        	sla a
 437+ 9477 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 9479 4F           1 ld c,a
 439+ 947A 06 00        	ld b,0
 440+ 947C C9           	ret
 441+ 947D
 442+ 947D              ; ------------------------------------------------------------------
 443+ 947D              ;
 444+ 947D              ;	19/1/24
 445+ 947D              ;
 446+ 947D              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 947D              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 947D
 449+ 947D A7           Situa_en_datos_de_definicion and a
 450+ 947E ED 4A        	adc hl,bc
 451+ 9480 CD 1E 91     	call Extrae_address
 452+ 9483 22 3C 8C         ld (Datos_de_entidad),hl
 453+ 9486 C9           	ret
 454+ 9487
 455+ 9487              ; ----------------------------------------------------------------------------------------------------------
 456+ 9487              ;
 457+ 9487              ;	24/6/24
 458+ 9487              ;
 459+ 9487              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 9487              ;	_ de entidad.
 461+ 9487              ;
 462+ 9487              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 9487              ;
 464+ 9487              ;
 465+ 9487              ;	MODIFICA: HL,DE y BC
 466+ 9487
 467+ 9487
 468+ 9487              Definicion_de_entidad_a_bandeja_DRAW
 469+ 9487
 470+ 9487 11 EF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 948A 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 948B 12           	ld (de),a
 473+ 948C 23           	inc hl
 474+ 948D              ;
 475+ 948D 11 FD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 9490 01 02 00     	ld bc,2
 477+ 9493 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 9495              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 9495 11 F2 8B     	ld de,Contador_de_vueltas
 480+ 9498 7E           	ld a,(hl)
 481+ 9499 12           	ld (de),a
 482+ 949A 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 949B
 484+ 949B 11 04 8C     	ld de,Indice_Sprite_der
 485+ 949E 01 04 00     	ld bc,4
 486+ 94A1 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 94A3
 488+ 94A3 11 0C 8C     	ld de,Posicion_inicio
 489+ 94A6 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 94A9 ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 94AB
 492+ 94AB 11 F6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 94AE 01 02 00     	ld bc,2
 494+ 94B1 ED B0        	ldir
 495+ 94B3
 496+ 94B3 C9           	ret
 497+ 94B4
 498+ 94B4              ; ----------------------------------------------------------------------------------------------------------
 499+ 94B4              ;
 500+ 94B4              ;	1/8/24
 501+ 94B4              ;
 502+ 94B4
 503+ 94B4              Parametros_de_bandeja_DRAW_a_caja
 504+ 94B4
 505+ 94B4 21 EF 8B     	ld hl,Bandeja_DRAW
 506+ 94B7 01 0C 00     	ld bc,12
 507+ 94BA ED B0        	ldir
 508+ 94BC C9           	ret
 509+ 94BD
 510+ 94BD              ;---------------------------------------------------------------------------------------------------------------
 511+ 94BD              ;
 512+ 94BD              ;	13/11/24
 513+ 94BD              ;
 514+ 94BD              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 94BD              ;
 516+ 94BD              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 94BD              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 94BD
 519+ 94BD              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 94BD              ;			- Actualiza (Numero_de_entidades).
 521+ 94BD
 522+ 94BD              ;	MODIFICA: A y B.
 523+ 94BD
 524+ 94BD
 525+ 94BD              Inicializa_Numero_parcial_de_entidades
 526+ 94BD
 527+ 94BD 3A 37 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 94C0 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 94C2 38 0E        	jr c,1F
 530+ 94C4 28 0C        	jr z,1F
 531+ 94C6
 532+ 94C6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 94C6              ; Actualizamos variables.
 534+ 94C6
 535+ 94C6 D6 06        	sub 6
 536+ 94C8 32 37 8C     	ld (Numero_de_entidades),a
 537+ 94CB 3E 06        	ld a,6
 538+ 94CD 32 38 8C     	ld (Numero_parcial_de_entidades),a
 539+ 94D0 47           	ld b,a
 540+ 94D1 C9           	ret
 541+ 94D2
 542+ 94D2              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 94D2              ; (Numero_de_entidades)="0".
 544+ 94D2
 545+ 94D2 32 38 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 94D5 47           	ld b,a
 547+ 94D6 AF           	xor a
 548+ 94D7 32 37 8C     	ld (Numero_de_entidades),a
 549+ 94DA C9           	ret
 550+ 94DB
# file closed: Rutinas_de_inicio_y_niveles.asm
2126  94DB              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94DB              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94DB              ;
   3+ 94DB              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94DB              ;
   5+ 94DB              ; *****************************************************************************************************************************************************************************************
   6+ 94DB              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94DB
   8+ 94DB 7C           calcula_tercio ld a,h
   9+ 94DC E6 18        	and $18
  10+ 94DE CB 2F        	sra a
  11+ 94E0 CB 2F        	sra a
  12+ 94E2 CB 2F        	sra a
  13+ 94E4 C9           	ret
  14+ 94E5
# file closed: calcula_tercio.asm
2127  94E5              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94E5              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94E5              ;
   3+ 94E5              ;
   4+ 94E5              ;	CLS.
   5+ 94E5              ;
   6+ 94E5              ;	Limpia la pantalla y define sus atributos.
   7+ 94E5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94E5              ;
   9+ 94E5              ;	COLORES: 0 ..... NEGRO
  10+ 94E5              ;    		 1 ..... AZUL
  11+ 94E5              ; 			 2 ..... ROJO
  12+ 94E5              ;			 3 ..... MAGENTA
  13+ 94E5              ; 			 4 ..... VERDE
  14+ 94E5              ; 			 5 ..... CIAN
  15+ 94E5              ;			 6 ..... AMARILLO
  16+ 94E5              ; 			 7 ..... BLANCO
  17+ 94E5              ;
  18+ 94E5              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94E5              ;
  20+ 94E5              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94E5
  22+ 94E5
  23+ 94E5 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94E8 11 01 40     	LD DE,$4001
  25+ 94EB 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94EE 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94F0 ED B0        	LDIR
  28+ 94F2 01 FF 02     	LD BC,767
  29+ 94F5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94F6 ED B0        	LDIR
  31+ 94F8 C9           	ret
  32+ 94F9
# file closed: Cls.asm
2128  94F9              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94F9              ; ------------------------------------------------------------------------
   2+ 94F9              ;
   3+ 94F9              ;	30/1/24
   4+ 94F9              ;
   5+ 94F9              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94F9              ;	Fila superior "0", Columna izquierda "0".
   7+ 94F9              ;
   8+ 94F9              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94F9              ;
  10+ 94F9              ;	Modifica: A,BC y DE.
  11+ 94F9
  12+ 94F9              Genera_coordenadas
  13+ 94F9
  14+ 94F9 7D           	ld a,l
  15+ 94FA E6 1F        	and $1f
  16+ 94FC
  17+ 94FC 32 F0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 94FF
  19+ 94FF 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9500 FE 40        	cp $40
  21+ 9502 38 1C        	jr c,4F
  22+ 9504
  23+ 9504 CD DB 94     	call calcula_tercio
  24+ 9507 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9508
  26+ 9508 1E 00        	ld e,0
  27+ 950A 7D           	ld a,l
  28+ 950B E6 E0        	and $e0
  29+ 950D 28 01        	jr z,1F
  30+ 950F 04           	inc b
  31+ 9510
  32+ 9510 04           1 inc b
  33+ 9511 05           	dec b
  34+ 9512 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9514              ;														; _ , salimos.
  36+ 9514 1C           3 inc e
  37+ 9515 D6 20        	sub 32
  38+ 9517 20 FB        	jr nz,3B
  39+ 9519 10 F5        	djnz 1B
  40+ 951B
  41+ 951B 7B           2 ld a,e
  42+ 951C 32 F1 8B     	ld (Coordenada_y),a
  43+ 951F C9           	ret
  44+ 9520
  45+ 9520 AF           4 xor a
  46+ 9521 32 F1 8B     	ld (Coordenada_y),a
  47+ 9524 C9           	ret
  48+ 9525
# file closed: Genera_coordenadas.asm
2129  9525              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9525              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9525              ;
   3+ 9525              ;	20/09/24
   4+ 9525              ;
   5+ 9525              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9525              ;   DE contiene Puntero_objeto.
   7+ 9525              ;   IX contiene el Puntero de impresión.
   8+ 9525
   9+ 9525              Genera_datos_de_impresion
  10+ 9525
  11+ 9525 ED 73 3E 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9529
  13+ 9529 2A 60 8C         ld hl,(Scanlines_album_SP)
  14+ 952C
  15+ 952C 3E 05            ld a,5
  16+ 952E 85               add l
  17+ 952F 6F               ld l,a
  18+ 9530
  19+ 9530 F9               ld sp,hl
  20+ 9531 22 60 8C         ld (Scanlines_album_SP),hl
  21+ 9534
  22+ 9534 21 00 00         ld hl,0
  23+ 9537
  24+ 9537 DD E5            push ix
  25+ 9539 3B               dec sp
  26+ 953A ED 7A            adc hl,sp
  27+ 953C D5               push de
  28+ 953D
  29+ 953D              ; Recuperamos SP.
  30+ 953D
  31+ 953D ED 7B 3E 8C      ld sp,(Stack)
  32+ 9541
  33+ 9541 E5               push hl
  34+ 9542 F1               pop af
  35+ 9543 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9544
  37+ 9544              ; Tenemos el encabezado listo.
  38+ 9544              ; Preparamos registros para generar los scanlines.
  39+ 9544
  40+ 9544 DD E5            push ix
  41+ 9546 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9547
  43+ 9547 ED 5B 60 8C      ld de,(Scanlines_album_SP)
  44+ 954B
  45+ 954B              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 954B              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 954B
  48+ 954B 7C               ld a,h
  49+ 954C FE 50            cp $50
  50+ 954E 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9550
  52+ 9550 20 05            jr nz,2F
  53+ 9552
  54+ 9552 7D               ld a,l
  55+ 9553 FE E0            cp $e0
  56+ 9555 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9557
  58+ 9557 7D           2 ld a,l
  59+ 9558 FE C0            cp $c0
  60+ 955A D2 F0 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 955D
  62+ 955D              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 955D
  64+ 955D CD EE 99         call NextScan
  65+ 9560 EB               ex de,hl
  66+ 9561
  67+ 9561 73               ld (hl),e
  68+ 9562 23               inc hl
  69+ 9563 72               ld (hl),d
  70+ 9564 23               inc hl
  71+ 9565
  72+ 9565 EB               ex de,hl
  73+ 9566
  74+ 9566 CD EE 99         call NextScan
  75+ 9569 EB               ex de,hl
  76+ 956A
  77+ 956A 73               ld (hl),e
  78+ 956B 23               inc hl
  79+ 956C 72               ld (hl),d
  80+ 956D 23               inc hl
  81+ 956E
  82+ 956E EB               ex de,hl
  83+ 956F
  84+ 956F CD EE 99         call NextScan
  85+ 9572 EB               ex de,hl
  86+ 9573
  87+ 9573 73               ld (hl),e
  88+ 9574 23               inc hl
  89+ 9575 72               ld (hl),d
  90+ 9576 23               inc hl
  91+ 9577
  92+ 9577 EB               ex de,hl
  93+ 9578
  94+ 9578 CD EE 99         call NextScan
  95+ 957B EB               ex de,hl
  96+ 957C
  97+ 957C 73               ld (hl),e
  98+ 957D 23               inc hl
  99+ 957E 72               ld (hl),d
 100+ 957F 23               inc hl
 101+ 9580
 102+ 9580 EB               ex de,hl
 103+ 9581
 104+ 9581 CD EE 99         call NextScan
 105+ 9584 EB               ex de,hl
 106+ 9585
 107+ 9585 73               ld (hl),e
 108+ 9586 23               inc hl
 109+ 9587 72               ld (hl),d
 110+ 9588 23               inc hl
 111+ 9589
 112+ 9589 EB               ex de,hl
 113+ 958A
 114+ 958A CD EE 99         call NextScan
 115+ 958D EB               ex de,hl
 116+ 958E
 117+ 958E 73               ld (hl),e
 118+ 958F 23               inc hl
 119+ 9590 72               ld (hl),d
 120+ 9591 23               inc hl
 121+ 9592
 122+ 9592 EB               ex de,hl
 123+ 9593
 124+ 9593 CD EE 99         call NextScan
 125+ 9596 EB               ex de,hl
 126+ 9597
 127+ 9597 73               ld (hl),e
 128+ 9598 23               inc hl
 129+ 9599 72               ld (hl),d
 130+ 959A 23               inc hl
 131+ 959B
 132+ 959B EB               ex de,hl
 133+ 959C
 134+ 959C CD EE 99         call NextScan
 135+ 959F EB               ex de,hl
 136+ 95A0
 137+ 95A0 73               ld (hl),e
 138+ 95A1 23               inc hl
 139+ 95A2 72               ld (hl),d
 140+ 95A3 23               inc hl
 141+ 95A4
 142+ 95A4 EB               ex de,hl
 143+ 95A5
 144+ 95A5 CD EE 99         call NextScan
 145+ 95A8 EB               ex de,hl
 146+ 95A9
 147+ 95A9 73               ld (hl),e
 148+ 95AA 23               inc hl
 149+ 95AB 72               ld (hl),d
 150+ 95AC 23               inc hl
 151+ 95AD
 152+ 95AD EB               ex de,hl
 153+ 95AE
 154+ 95AE CD EE 99         call NextScan
 155+ 95B1 EB               ex de,hl
 156+ 95B2
 157+ 95B2 73               ld (hl),e
 158+ 95B3 23               inc hl
 159+ 95B4 72               ld (hl),d
 160+ 95B5 23               inc hl
 161+ 95B6
 162+ 95B6 EB               ex de,hl
 163+ 95B7
 164+ 95B7 CD EE 99         call NextScan
 165+ 95BA EB               ex de,hl
 166+ 95BB
 167+ 95BB 73               ld (hl),e
 168+ 95BC 23               inc hl
 169+ 95BD 72               ld (hl),d
 170+ 95BE 23               inc hl
 171+ 95BF
 172+ 95BF EB               ex de,hl
 173+ 95C0
 174+ 95C0 CD EE 99         call NextScan
 175+ 95C3 EB               ex de,hl
 176+ 95C4
 177+ 95C4 73               ld (hl),e
 178+ 95C5 23               inc hl
 179+ 95C6 72               ld (hl),d
 180+ 95C7 23               inc hl
 181+ 95C8
 182+ 95C8 EB               ex de,hl
 183+ 95C9
 184+ 95C9 CD EE 99         call NextScan
 185+ 95CC EB               ex de,hl
 186+ 95CD
 187+ 95CD 73               ld (hl),e
 188+ 95CE 23               inc hl
 189+ 95CF 72               ld (hl),d
 190+ 95D0 23               inc hl
 191+ 95D1
 192+ 95D1 EB               ex de,hl
 193+ 95D2
 194+ 95D2 CD EE 99         call NextScan
 195+ 95D5 EB               ex de,hl
 196+ 95D6
 197+ 95D6 73               ld (hl),e
 198+ 95D7 23               inc hl
 199+ 95D8 72               ld (hl),d
 200+ 95D9 23               inc hl
 201+ 95DA
 202+ 95DA EB               ex de,hl
 203+ 95DB
 204+ 95DB CD EE 99         call NextScan
 205+ 95DE EB               ex de,hl
 206+ 95DF
 207+ 95DF              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 95DF              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 95DF              ;   _ generar sus scanlines.
 210+ 95DF
 211+ 95DF              ;    ld (Puntero_de_impresion_disparo),de
 212+ 95DF
 213+ 95DF 73               ld (hl),e
 214+ 95E0 23               inc hl
 215+ 95E1 72               ld (hl),d
 216+ 95E2 23               inc hl
 217+ 95E3
 218+ 95E3              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 95E3
 220+ 95E3 22 60 8C         ld (Scanlines_album_SP),hl
 221+ 95E6
 222+ 95E6 EB               ex de,hl
 223+ 95E7
 224+ 95E7              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 95E7
 226+ 95E7              ;    call NextScan
 227+ 95E7              ;    call NextScan
 228+ 95E7
 229+ 95E7 22 6B 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 95EA
 231+ 95EA              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 95EA
 233+ 95EA 08               ex af,af
 234+ 95EB
 235+ 95EB F5               push af
 236+ 95EC E1               pop hl
 237+ 95ED
 238+ 95ED 36 10            ld (hl),16
 239+ 95EF
 240+ 95EF C9               ret
 241+ 95F0
 242+ 95F0              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 95F0
 244+ 95F0              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 95F0
 246+ 95F0 3E 57            ld a,$57
 247+ 95F2 94               sub h
 248+ 95F3 47               ld b,a
 249+ 95F4
 250+ 95F4 3E DF            ld a,$df
 251+ 95F6 BD               cp l
 252+ 95F7 38 04            jr c,1F
 253+ 95F9
 254+ 95F9 3E 08            ld a,8
 255+ 95FB 80               add b
 256+ 95FC 47               ld b,a
 257+ 95FD
 258+ 95FD              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 95FD              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 95FD
 261+ 95FD 48           1 ld c,b
 262+ 95FE 0C               inc c
 263+ 95FF
 264+ 95FF 04               inc b
 265+ 9600 05               dec b
 266+ 9601 20 02            jr nz,3F
 267+ 9603
 268+ 9603 18 0B            jr 6F
 269+ 9605
 270+ 9605 CD EE 99     3 call NextScan
 271+ 9608 EB               ex de,hl
 272+ 9609
 273+ 9609 73               ld (hl),e
 274+ 960A 23               inc hl
 275+ 960B 72               ld (hl),d
 276+ 960C 23               inc hl
 277+ 960D
 278+ 960D EB               ex de,hl
 279+ 960E 10 F5            djnz 3B
 280+ 9610
 281+ 9610 ED 53 60 8C  6 ld (Scanlines_album_SP),de
 282+ 9614
 283+ 9614 08           5 ex af,af
 284+ 9615 F5               push af
 285+ 9616 E1               pop hl
 286+ 9617
 287+ 9617 71               ld (hl),c
 288+ 9618
 289+ 9618 C9               ret
 290+ 9619
# file closed: Genera_datos_de_impresion.asm
2130  9619              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9619              ; -----------------------------------------------------------------------------
   2+ 9619              ;
   3+ 9619              ;   11/03/24
   4+ 9619              ;
   5+ 9619
   6+ 9619              Pinta_Sprites
   7+ 9619
   8+ 9619              ;    ld hl,(Scanlines_album_SP)
   9+ 9619              ;    call Extrae_address
  10+ 9619
  11+ 9619              ;    inc h
  12+ 9619              ;    dec h
  13+ 9619              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9619
  15+ 9619 ED 73 3E 8C      ld (Stack),sp
  16+ 961D
  17+ 961D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 961E              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 961E 2C               inc l
  20+ 961F 2C               inc l
  21+ 9620
  22+ 9620 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9621
  24+ 9621 2C               inc l
  25+ 9622 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9623
  27+ 9623              ;   Seleccionamos rutina de impresión:
  28+ 9623
  29+ 9623 3E 10            ld a,16
  30+ 9625 B8               cp b
  31+ 9626 C2 22 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9629
  33+ 9629              ;   Rutinas:
  34+ 9629
  35+ 9629              Pinta_rapido    ;   1520 t/states.
  36+ 9629
  37+ 9629 E1               pop hl
  38+ 962A
  39+ 962A 1A               ld a,(de)
  40+ 962B AE               xor (hl)
  41+ 962C 77               ld (hl),a
  42+ 962D 2C               inc l
  43+ 962E 1C               inc e
  44+ 962F 1A               ld a,(de)
  45+ 9630 AE               xor (hl)
  46+ 9631 77               ld (hl),a
  47+ 9632 2C               inc l
  48+ 9633 1C               inc e
  49+ 9634 1A               ld a,(de)
  50+ 9635 AE               xor (hl)
  51+ 9636 77               ld (hl),a
  52+ 9637 13               inc de
  53+ 9638
  54+ 9638 E1               pop hl
  55+ 9639
  56+ 9639 1A               ld a,(de)
  57+ 963A AE               xor (hl)
  58+ 963B 77               ld (hl),a
  59+ 963C 2C               inc l
  60+ 963D 1C               inc e
  61+ 963E 1A               ld a,(de)
  62+ 963F AE               xor (hl)
  63+ 9640 77               ld (hl),a
  64+ 9641 2C               inc l
  65+ 9642 1C               inc e
  66+ 9643 1A               ld a,(de)
  67+ 9644 AE               xor (hl)
  68+ 9645 77               ld (hl),a
  69+ 9646 13               inc de
  70+ 9647
  71+ 9647 E1               pop hl
  72+ 9648
  73+ 9648 1A               ld a,(de)
  74+ 9649 AE               xor (hl)
  75+ 964A 77               ld (hl),a
  76+ 964B 2C               inc l
  77+ 964C 1C               inc e
  78+ 964D 1A               ld a,(de)
  79+ 964E AE               xor (hl)
  80+ 964F 77               ld (hl),a
  81+ 9650 2C               inc l
  82+ 9651 1C               inc e
  83+ 9652 1A               ld a,(de)
  84+ 9653 AE               xor (hl)
  85+ 9654 77               ld (hl),a
  86+ 9655 13               inc de
  87+ 9656
  88+ 9656 E1               pop hl
  89+ 9657
  90+ 9657 1A               ld a,(de)
  91+ 9658 AE               xor (hl)
  92+ 9659 77               ld (hl),a
  93+ 965A 2C               inc l
  94+ 965B 1C               inc e
  95+ 965C 1A               ld a,(de)
  96+ 965D AE               xor (hl)
  97+ 965E 77               ld (hl),a
  98+ 965F 2C               inc l
  99+ 9660 1C               inc e
 100+ 9661 1A               ld a,(de)
 101+ 9662 AE               xor (hl)
 102+ 9663 77               ld (hl),a
 103+ 9664 13               inc de
 104+ 9665
 105+ 9665 E1               pop hl
 106+ 9666
 107+ 9666 1A               ld a,(de)
 108+ 9667 AE               xor (hl)
 109+ 9668 77               ld (hl),a
 110+ 9669 2C               inc l
 111+ 966A 1C               inc e
 112+ 966B 1A               ld a,(de)
 113+ 966C AE               xor (hl)
 114+ 966D 77               ld (hl),a
 115+ 966E 2C               inc l
 116+ 966F 1C               inc e
 117+ 9670 1A               ld a,(de)
 118+ 9671 AE               xor (hl)
 119+ 9672 77               ld (hl),a
 120+ 9673 13               inc de
 121+ 9674
 122+ 9674 E1               pop hl
 123+ 9675
 124+ 9675 1A               ld a,(de)
 125+ 9676 AE               xor (hl)
 126+ 9677 77               ld (hl),a
 127+ 9678 2C               inc l
 128+ 9679 1C               inc e
 129+ 967A 1A               ld a,(de)
 130+ 967B AE               xor (hl)
 131+ 967C 77               ld (hl),a
 132+ 967D 2C               inc l
 133+ 967E 1C               inc e
 134+ 967F 1A               ld a,(de)
 135+ 9680 AE               xor (hl)
 136+ 9681 77               ld (hl),a
 137+ 9682 13               inc de
 138+ 9683
 139+ 9683 E1               pop hl
 140+ 9684
 141+ 9684 1A               ld a,(de)
 142+ 9685 AE               xor (hl)
 143+ 9686 77               ld (hl),a
 144+ 9687 2C               inc l
 145+ 9688 1C               inc e
 146+ 9689 1A               ld a,(de)
 147+ 968A AE               xor (hl)
 148+ 968B 77               ld (hl),a
 149+ 968C 2C               inc l
 150+ 968D 1C               inc e
 151+ 968E 1A               ld a,(de)
 152+ 968F AE               xor (hl)
 153+ 9690 77               ld (hl),a
 154+ 9691 13               inc de
 155+ 9692
 156+ 9692 E1               pop hl
 157+ 9693
 158+ 9693 1A               ld a,(de)
 159+ 9694 AE               xor (hl)
 160+ 9695 77               ld (hl),a
 161+ 9696 2C               inc l
 162+ 9697 1C               inc e
 163+ 9698 1A               ld a,(de)
 164+ 9699 AE               xor (hl)
 165+ 969A 77               ld (hl),a
 166+ 969B 2C               inc l
 167+ 969C 1C               inc e
 168+ 969D 1A               ld a,(de)
 169+ 969E AE               xor (hl)
 170+ 969F 77               ld (hl),a
 171+ 96A0 13               inc de
 172+ 96A1
 173+ 96A1 E1               pop hl
 174+ 96A2
 175+ 96A2 1A               ld a,(de)
 176+ 96A3 AE               xor (hl)
 177+ 96A4 77               ld (hl),a
 178+ 96A5 2C               inc l
 179+ 96A6 1C               inc e
 180+ 96A7 1A               ld a,(de)
 181+ 96A8 AE               xor (hl)
 182+ 96A9 77               ld (hl),a
 183+ 96AA 2C               inc l
 184+ 96AB 1C               inc e
 185+ 96AC 1A               ld a,(de)
 186+ 96AD AE               xor (hl)
 187+ 96AE 77               ld (hl),a
 188+ 96AF 13               inc de
 189+ 96B0
 190+ 96B0 E1               pop hl
 191+ 96B1
 192+ 96B1 1A               ld a,(de)
 193+ 96B2 AE               xor (hl)
 194+ 96B3 77               ld (hl),a
 195+ 96B4 2C               inc l
 196+ 96B5 1C               inc e
 197+ 96B6 1A               ld a,(de)
 198+ 96B7 AE               xor (hl)
 199+ 96B8 77               ld (hl),a
 200+ 96B9 2C               inc l
 201+ 96BA 1C               inc e
 202+ 96BB 1A               ld a,(de)
 203+ 96BC AE               xor (hl)
 204+ 96BD 77               ld (hl),a
 205+ 96BE 13               inc de
 206+ 96BF
 207+ 96BF E1               pop hl
 208+ 96C0
 209+ 96C0 1A               ld a,(de)
 210+ 96C1 AE               xor (hl)
 211+ 96C2 77               ld (hl),a
 212+ 96C3 2C               inc l
 213+ 96C4 1C               inc e
 214+ 96C5 1A               ld a,(de)
 215+ 96C6 AE               xor (hl)
 216+ 96C7 77               ld (hl),a
 217+ 96C8 2C               inc l
 218+ 96C9 1C               inc e
 219+ 96CA 1A               ld a,(de)
 220+ 96CB AE               xor (hl)
 221+ 96CC 77               ld (hl),a
 222+ 96CD 13               inc de
 223+ 96CE
 224+ 96CE E1               pop hl
 225+ 96CF
 226+ 96CF 1A               ld a,(de)
 227+ 96D0 AE               xor (hl)
 228+ 96D1 77               ld (hl),a
 229+ 96D2 2C               inc l
 230+ 96D3 1C               inc e
 231+ 96D4 1A               ld a,(de)
 232+ 96D5 AE               xor (hl)
 233+ 96D6 77               ld (hl),a
 234+ 96D7 2C               inc l
 235+ 96D8 1C               inc e
 236+ 96D9 1A               ld a,(de)
 237+ 96DA AE               xor (hl)
 238+ 96DB 77               ld (hl),a
 239+ 96DC 13               inc de
 240+ 96DD
 241+ 96DD E1               pop hl
 242+ 96DE
 243+ 96DE 1A               ld a,(de)
 244+ 96DF AE               xor (hl)
 245+ 96E0 77               ld (hl),a
 246+ 96E1 2C               inc l
 247+ 96E2 1C               inc e
 248+ 96E3 1A               ld a,(de)
 249+ 96E4 AE               xor (hl)
 250+ 96E5 77               ld (hl),a
 251+ 96E6 2C               inc l
 252+ 96E7 1C               inc e
 253+ 96E8 1A               ld a,(de)
 254+ 96E9 AE               xor (hl)
 255+ 96EA 77               ld (hl),a
 256+ 96EB 13               inc de
 257+ 96EC
 258+ 96EC E1               pop hl
 259+ 96ED
 260+ 96ED 1A               ld a,(de)
 261+ 96EE AE               xor (hl)
 262+ 96EF 77               ld (hl),a
 263+ 96F0 2C               inc l
 264+ 96F1 1C               inc e
 265+ 96F2 1A               ld a,(de)
 266+ 96F3 AE               xor (hl)
 267+ 96F4 77               ld (hl),a
 268+ 96F5 2C               inc l
 269+ 96F6 1C               inc e
 270+ 96F7 1A               ld a,(de)
 271+ 96F8 AE               xor (hl)
 272+ 96F9 77               ld (hl),a
 273+ 96FA 13               inc de
 274+ 96FB
 275+ 96FB E1               pop hl
 276+ 96FC
 277+ 96FC 1A               ld a,(de)
 278+ 96FD AE               xor (hl)
 279+ 96FE 77               ld (hl),a
 280+ 96FF 2C               inc l
 281+ 9700 1C               inc e
 282+ 9701 1A               ld a,(de)
 283+ 9702 AE               xor (hl)
 284+ 9703 77               ld (hl),a
 285+ 9704 2C               inc l
 286+ 9705 1C               inc e
 287+ 9706 1A               ld a,(de)
 288+ 9707 AE               xor (hl)
 289+ 9708 77               ld (hl),a
 290+ 9709 13               inc de
 291+ 970A
 292+ 970A E1               pop hl
 293+ 970B
 294+ 970B 1A               ld a,(de)
 295+ 970C AE               xor (hl)
 296+ 970D 77               ld (hl),a
 297+ 970E 2C               inc l
 298+ 970F 1C               inc e
 299+ 9710 1A               ld a,(de)
 300+ 9711 AE               xor (hl)
 301+ 9712 77               ld (hl),a
 302+ 9713 2C               inc l
 303+ 9714 1C               inc e
 304+ 9715 1A               ld a,(de)
 305+ 9716 AE               xor (hl)
 306+ 9717 77               ld (hl),a
 307+ 9718 13               inc de
 308+ 9719
 309+ 9719 ED 73 60 8C      ld (Scanlines_album_SP),sp
 310+ 971D ED 7B 3E 8C      ld sp,(Stack)
 311+ 9721 C9               ret
 312+ 9722
 313+ 9722              Pinta_lento
 314+ 9722
 315+ 9722 E1           1 pop hl
 316+ 9723
 317+ 9723 1A               ld a,(de)
 318+ 9724 AE               xor (hl)
 319+ 9725 77               ld (hl),a
 320+ 9726 2C               inc l
 321+ 9727 1C               inc e
 322+ 9728 1A               ld a,(de)
 323+ 9729 AE               xor (hl)
 324+ 972A 77               ld (hl),a
 325+ 972B 2C               inc l
 326+ 972C 1C               inc e
 327+ 972D 1A               ld a,(de)
 328+ 972E AE               xor (hl)
 329+ 972F 77               ld (hl),a
 330+ 9730 13               inc de
 331+ 9731
 332+ 9731 10 EF            djnz 1B
 333+ 9733
 334+ 9733 ED 73 60 8C      ld (Scanlines_album_SP),sp
 335+ 9737 ED 7B 3E 8C      ld sp,(Stack)
 336+ 973B C9               ret
# file closed: Pinta_Sprites.asm
2131  973C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 973C              ; ******************************************************************************************************************************************************************************************
   2+ 973C              ;
   3+ 973C              ; 26/06/23
   4+ 973C              ;
   5+ 973C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 973C
   7+ 973C              Draw
   8+ 973C
   9+ 973C CD E2 99     	call Prepara_draw
  10+ 973F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9740 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9741 28 05        	jr z,2F
  13+ 9743
  14+ 9743 3A 0E 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9746 18 0C        	jr 1F
  16+ 9748
  17+ 9748 2A 0C 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 974B 22 FF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 974E CD DA 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9751              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9751
  22+ 9751 CD 81 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9754
  24+ 9754 3A FC 8B     1 ld a,(Ctrl_0)
  25+ 9757 CB 6F        	bit 5,a
  26+ 9759 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 975B
  28+ 975B CD 70 97     	call Comprueba_limite_horizontal
  29+ 975E CD 00 98     	call Comprueba_limite_vertical
  30+ 9761
  31+ 9761              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9761              ; -----------------------
  33+ 9761              ; -----------------------
  34+ 9761              ; -----------------------
  35+ 9761
  36+ 9761 CD 56 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9764 CD 8D 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9767
  39+ 9767 3A FC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 976A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 976C 32 FC 8B     	ld (Ctrl_0),a
  42+ 976F
  43+ 976F C9           	ret
  44+ 9770
  45+ 9770              ; *******************************************************************************************************************************************************************************************
  46+ 9770              ;	21/01/23
  47+ 9770              ;
  48+ 9770              ; 	Comprueba_limite_horizontal.
  49+ 9770              ;
  50+ 9770              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9770              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9770              ;
  53+ 9770              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9770              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9770              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9770              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9770
  58+ 9770
  59+ 9770
  60+ 9770 3A FC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9773 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9775 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9777 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9779 32 FC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 977C 18 09            jr 6F
  66+ 977E CB 5F        1 bit 3,a
  67+ 9780 28 0A            jr z,2F
  68+ 9782 E6 F7            and $f7
  69+ 9784 32 FC 8B         ld (Ctrl_0),a
  70+ 9787 CD DA 98     6 call Inicializacion
  71+ 978A 18 5B            jr 5F
  72+ 978C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 978D
  74+ 978D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 978D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 978D
  77+ 978D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 978E 2A 10 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9791 CD DB 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9794 67           	ld h,a
  81+ 9795 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9796 CD DB 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9799 67           	ld h,a
  84+ 979A A7           	and a
  85+ 979B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 979D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 979E 3A 0E 8C     	ld a,(Cuad_objeto)
  88+ 97A1 FE 02        	cp 2
  89+ 97A3 38 1E        	jr c,3F
  90+ 97A5 28 1C        	jr z,3F
  91+ 97A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 97A8 28 23            jr z,7F
  93+ 97AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97AE E1           	pop hl
  96+ 97AF
  97+ 97AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97AF              ; _para indicar con E="2" en caso necesario.
  99+ 97AF
 100+ 97AF E5               push hl
 101+ 97B0 C5               push bc
 102+ 97B1 CD DB 94     	call calcula_tercio
 103+ 97B4 FE 01        	cp 1
 104+ 97B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97B8 CD E8 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97BB 28 26            jr z,9F
 107+ 97BD 38 24            jr c,9F
 108+ 97BF 1E 00        11 ld e,0
 109+ 97C1 18 22            jr 8F
 110+ 97C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97C4 28 07        	jr z, 7F
 112+ 97C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97C8 1E 00         	ld e,0
 114+ 97CA E1           	pop hl
 115+ 97CB 18 04        	jr 4F
 116+ 97CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97CF 18 15            jr 10F
 118+ 97D1
 119+ 97D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97D1              ; _para indicar con E="2" en caso necesario.
 121+ 97D1
 122+ 97D1 E5           4 push hl
 123+ 97D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97D3 CD DB 94     	call calcula_tercio
 125+ 97D6 FE 01        	cp 1
 126+ 97D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97DA CD E8 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97DD 28 04            jr z,9F
 129+ 97DF 30 02            jr nc,9F
 130+ 97E1 18 02        	jr 8F
 131+ 97E3 1E 02        9 ld e,2
 132+ 97E5 C1           8 pop bc
 133+ 97E6 E1           10 pop hl
 134+ 97E7 C9           5 ret
 135+ 97E8
 136+ 97E8              ; --------------------
 137+ 97E8              ;
 138+ 97E8              ; 25/08/22
 139+ 97E8
 140+ 97E8 CD DB 94     Comprueba_centro call calcula_tercio
 141+ 97EB 67               ld h,a
 142+ 97EC 08           	ex af,af
 143+ 97ED FE 02        	cp 2
 144+ 97EF 38 07        	jr c,1F
 145+ 97F1 28 05        	jr z,1F
 146+ 97F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97F6 18 03        	jr 2F
 148+ 97F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97FB 08           2 ex af,af
 150+ 97FC A7               and a
 151+ 97FD ED 42            sbc hl,bc
 152+ 97FF C9               ret
 153+ 9800
 154+ 9800              ; *********************************************************************************************************************************************************************************************
 155+ 9800              ;
 156+ 9800              ;   16/8/22
 157+ 9800              ;
 158+ 9800              ;	Comprueba_limite_vertical
 159+ 9800              ;
 160+ 9800              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9800              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9800              ;
 163+ 9800
 164+ 9800 2A FF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9803 7D           	ld a,l
 166+ 9804 E6 1F        	and $1F
 167+ 9806 57           	ld d,a
 168+ 9807 3A 12 8C     	ld a,(Limite_vertical)
 169+ 980A BA           	cp d 											; Límite - Posición.
 170+ 980B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 980C 3A 0E 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 980F CB 47        	bit 0,a
 173+ 9811 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9813
 175+ 9813              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9813
 177+ 9813 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9814 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9816
 180+ 9816              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9816              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9816
 183+ 9816 3A F0 8B         ld a,(Coordenada_X)
 184+ 9819 16 0F            ld d,Centro_izquierda
 185+ 981B A7               and a
 186+ 981C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 981D 28 1E            jr z,3F
 188+ 981F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9821              ;                                                    ; _salimos sin modificar nada.
 190+ 9821 18 0E            jr 2F
 191+ 9823 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9824 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9826
 194+ 9826              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9826              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9826
 197+ 9826 3A F0 8B         ld a,(Coordenada_X)
 198+ 9829 16 10            ld d,Centro_derecha
 199+ 982B A7               and a
 200+ 982C 92               sub d
 201+ 982D 28 0E            jr z,3F
 202+ 982F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9831              ;                                                    ; _salimos sin modificar nada.
 204+ 9831 CB 43        2 bit 0,e
 205+ 9833 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9835 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9836 CD CA 98         call Modificaccionne
 208+ 9839 C1           	pop bc
 209+ 983A CD DA 98         call Inicializacion
 210+ 983D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 983E
 212+ 983E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 983E
 214+ 983E C5           4 push bc
 215+ 983F 01 FE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9842 0A           	ld a,(bc)
 217+ 9843 3D           	dec a
 218+ 9844 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9845 7D           	ld a,l
 220+ 9846 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9847 CB 47        	bit 0,a
 222+ 9849 28 03        	jr z,5F
 223+ 984B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 984C 18 2E        	jr 7F
 225+ 984E
 226+ 984E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 984E
 228+ 984E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 984F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9850 3A FC 8B     	ld a,(Ctrl_0)
 231+ 9853 CB 4F        	bit 1,a
 232+ 9855 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9857 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9858
 235+ 9858              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9858
 237+ 9858 1C               inc e
 238+ 9859 1D               dec e
 239+ 985A 20 07            jr nz,12F
 240+ 985C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 985D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 985E 22 FF 8B     	ld (Posicion_actual),hl
 243+ 9861 18 44        13 jr 9F
 244+ 9863 CB 43        12 bit 0,e
 245+ 9865 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9867              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9867 C1           	pop bc
 248+ 9868 18 D3        	jr 3B
 249+ 986A 80           14 add b
 250+ 986B 6F               ld l,a
 251+ 986C 22 FF 8B     	ld (Posicion_actual),hl
 252+ 986F CD CA 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9872 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9874 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9876 32 FC 8B         ld (Ctrl_0),a
 256+ 9879 F1           	pop af
 257+ 987A 18 2B        	jr 9F
 258+ 987C
 259+ 987C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 987C
 261+ 987C F5           7 push af
 262+ 987D 3A FC 8B     	ld a,(Ctrl_0)
 263+ 9880 CB 47        	bit 0,a
 264+ 9882 20 1D        	jr nz,8F
 265+ 9884 F1           	pop af
 266+ 9885
 267+ 9885              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9885
 269+ 9885 1C           	inc e
 270+ 9886 1D               dec e
 271+ 9887 20 07            jr nz,10F
 272+ 9889 90           	sub b
 273+ 988A 6F               ld l,a
 274+ 988B 22 FF 8B     	ld (Posicion_actual),hl
 275+ 988E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9890              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9890 CB 43        10 bit 0,e
 278+ 9892 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9894              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9894 C1           	pop bc
 281+ 9895 18 A6        	jr 3B
 282+ 9897 90           16 sub b
 283+ 9898 6F               ld l,a
 284+ 9899 22 FF 8B     	ld (Posicion_actual),hl
 285+ 989C CD CA 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 989F 18 06            jr 9F
 287+ 98A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 98A3 32 FC 8B         ld (Ctrl_0),a
 289+ 98A6 F1           	pop af
 290+ 98A7 C1           9 pop bc
 291+ 98A8 1E 00        	ld e,0
 292+ 98AA CD DA 98         call Inicializacion
 293+ 98AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98AE 08           	ex af,af
 295+ 98AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98B0 18 8B            jr 3B
 297+ 98B2
 298+ 98B2              ; --------------------
 299+ 98B2
 300+ 98B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98B4 CD FD 99     1 call PreviousScan
 302+ 98B7 10 FB            djnz 1B
 303+ 98B9 22 FF 8B     	ld (Posicion_actual),hl
 304+ 98BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98BD C9           	ret
 306+ 98BE
 307+ 98BE              ; --------------------
 308+ 98BE
 309+ 98BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98C0 CD EE 99     1 call NextScan
 311+ 98C3 10 FB            djnz 1B
 312+ 98C5 22 FF 8B     	ld (Posicion_actual),hl
 313+ 98C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98C9 C9           	ret
 315+ 98CA
 316+ 98CA              ; --------------------
 317+ 98CA              ;
 318+ 98CA              ;	22/01/23
 319+ 98CA              ;
 320+ 98CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98CA
 324+ 98CA
 325+ 98CA              Modificaccionne
 326+ 98CA
 327+ 98CA 3A 0E 8C     	ld a,(Cuad_objeto)
 328+ 98CD FE 02        	cp 2
 329+ 98CF CC B2 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98D2 DC B2 98         call c,Modifica_Pos_actual
 331+ 98D5 C8           	ret z
 332+ 98D6 CD BE 98         call Modifica_Pos_actual2
 333+ 98D9 C9               ret
 334+ 98DA
 335+ 98DA              ; *************************************************************************************************************************************************************************************************
 336+ 98DA              ;
 337+ 98DA              ;	13/8/22
 338+ 98DA              ;
 339+ 98DA              ;	Inicializacion
 340+ 98DA              ;
 341+ 98DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98DA              ;
 345+ 98DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98DA              ;	_ desaparece/aparece.
 348+ 98DA
 349+ 98DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98DA              ;
 352+ 98DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98DA              ; 		   [E] ="0"
 355+ 98DA
 356+ 98DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98DA
 358+ 98DA CD DB 94     Inicializacion call calcula_tercio
 359+ 98DD 28 36        	jr z,primit
 360+ 98DF E6 02        	and 2
 361+ 98E1 20 07        	jr nz,segmit
 362+ 98E3 7D           	ld a,l
 363+ 98E4 FE 7F        	cp $7f
 364+ 98E6 38 2D        	jr c,primit
 365+ 98E8 28 2B        	jr z,primit
 366+ 98EA CD 50 99     segmit call column
 367+ 98ED 38 13        	jr c,tercuad
 368+ 98EF 3E 04        cuarcuad ld a,4
 369+ 98F1 32 0E 8C     	ld (Cuad_objeto),a
 370+ 98F4 21 20 48     	ld hl,$4820
 371+ 98F7 22 10 8C     	ld (Limite_horizontal),hl
 372+ 98FA 21 12 8C     	ld hl,Limite_vertical
 373+ 98FD 36 0D        	ld (hl),$0d
 374+ 98FF 08           	ex af,af
 375+ 9900 18 3C        	jr 1F
 376+ 9902              tercuad
 377+ 9902 3E 03        	ld a,3
 378+ 9904 32 0E 8C     	ld (Cuad_objeto),a
 379+ 9907 21 20 48     	ld hl,$4820
 380+ 990A 22 10 8C     	ld (Limite_horizontal),hl
 381+ 990D 21 12 8C     	ld hl,Limite_vertical
 382+ 9910 36 12        	ld (hl),$12
 383+ 9912 08           	ex af,af
 384+ 9913 18 29        	jr 1F
 385+ 9915 CD 50 99     primit call column
 386+ 9918 38 13        	jr c, primcuad
 387+ 991A              segcuad
 388+ 991A 3E 02        	ld a,2
 389+ 991C 32 0E 8C     	ld (Cuad_objeto),a
 390+ 991F 21 C0 4F     	ld hl,$4fc0
 391+ 9922 22 10 8C     	ld (Limite_horizontal),hl
 392+ 9925 21 12 8C     	ld hl,Limite_vertical
 393+ 9928 36 0D        	ld (hl),$0d
 394+ 992A 08           	ex af,af
 395+ 992B 18 11        	jr 1F
 396+ 992D              primcuad
 397+ 992D 3E 01        	ld a,1
 398+ 992F 32 0E 8C     	ld (Cuad_objeto),a
 399+ 9932 21 C0 4F     	ld hl,$4fc0
 400+ 9935 22 10 8C     	ld (Limite_horizontal),hl
 401+ 9938 21 12 8C     	ld hl,Limite_vertical
 402+ 993B 36 12        	ld (hl),$12
 403+ 993D 08           	ex af,af
 404+ 993E
 405+ 993E C5           1 push bc
 406+ 993F E5           	push hl
 407+ 9940 D5           	push de
 408+ 9941
 409+ 9941 2A FF 8B     	ld hl,(Posicion_actual)
 410+ 9944 CD F9 94     	call Genera_coordenadas
 411+ 9947
 412+ 9947 D1           	pop de
 413+ 9948 E1           	pop hl
 414+ 9949 C1           	pop bc
 415+ 994A
 416+ 994A 21 FC 8B     	ld hl,Ctrl_0
 417+ 994D CB EE        	set 5,(hl)
 418+ 994F C9           	ret
 419+ 9950
 420+ 9950              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9950
 422+ 9950              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9950              ;
 424+ 9950              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9950
 426+ 9950 7D           column ld a,l
 427+ 9951 E6 1F        	and $1f
 428+ 9953 FE 10         	cp $10
 429+ 9955 C9            	ret
 430+ 9956
 431+ 9956              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9956              ;
 433+ 9956              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9956              ;
 435+ 9956              ; 14/12/22
 436+ 9956              ;
 437+ 9956              ;	Modifica: A y BC.
 438+ 9956
 439+ 9956 3A 0E 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9959 E6 01        	and 1
 441+ 995B 28 17        	jr z,1F
 442+ 995D
 443+ 995D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 995D
 445+ 995D 3A F0 8B     	ld a,(Coordenada_X)
 446+ 9960 47           	ld b,a
 447+ 9961 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9962 79           	ld a,c
 449+ 9963 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9964 38 08        	jr c,2F
 451+ 9966 47           	ld b,a
 452+ 9967 79           	ld a,c
 453+ 9968 90           	sub b
 454+ 9969 32 0F 8C     	ld (Columnas),a
 455+ 996C 18 1B        	jr 4F
 456+ 996E 79           2 ld a,c
 457+ 996F 32 0F 8C     	ld (Columnas),a
 458+ 9972 18 15        	jr 4F
 459+ 9974
 460+ 9974              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9974
 462+ 9974 3A F0 8B     1 ld a,(Coordenada_X)
 463+ 9977 81           	add c
 464+ 9978 3D           	dec a
 465+ 9979 D6 1F        	sub $1f
 466+ 997B 38 08        	jr c,3F
 467+ 997D 47           	ld b,a
 468+ 997E 79           	ld a,c
 469+ 997F 90           	sub b
 470+ 9980 32 0F 8C     	ld (Columnas),a
 471+ 9983 18 04        	jr 4F
 472+ 9985 79           3 ld a,c
 473+ 9986 32 0F 8C     	ld (Columnas),a
 474+ 9989 D9           4 exx
 475+ 998A 4F           	ld c,a
 476+ 998B D9           	exx
 477+ 998C C9            ret
 478+ 998D
 479+ 998D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 998D              ;
 481+ 998D              ;   19/7/23
 482+ 998D              ;
 483+ 998D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 998D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 998D              ;
 486+ 998D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 998D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 998D              ;
 489+ 998D              ;	DESTRUYE: HL,B Y A.
 490+ 998D
 491+ 998D 3A 0E 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9990 FE 02        	cp 2
 493+ 9992 38 18        	jr c,1F
 494+ 9994 28 16        	jr z,1F
 495+ 9996 E6 01        	and 1
 496+ 9998 28 0D        	jr z,3F
 497+ 999A
 498+ 999A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 999A
 500+ 999A CD D6 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 999D
 502+ 999D 7D           9 ld a,l
 503+ 999E E6 1F        	and $1f
 504+ 99A0 28 2A        	jr z,7F
 505+ 99A2 2B           	dec hl
 506+ 99A3 10 F8        	djnz 9B
 507+ 99A5 18 25        	jr 7F
 508+ 99A7
 509+ 99A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 99A7
 511+ 99A7 2A FF 8B     3 ld hl,(Posicion_actual)
 512+ 99AA 18 20        	jr 7F
 513+ 99AC
 514+ 99AC 28 14        1 jr z,2F
 515+ 99AE
 516+ 99AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99AE
 518+ 99AE CD D6 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99B1
 520+ 99B1 7D           4 ld a,l
 521+ 99B2 E6 1F        	and $1f
 522+ 99B4 28 03        	jr z,6F
 523+ 99B6 2B           	dec hl
 524+ 99B7 10 F8        	djnz 4B
 525+ 99B9 06 0F        6 ld b,15
 526+ 99BB CD FD 99     5 call PreviousScan
 527+ 99BE 10 FB        	djnz 5B
 528+ 99C0 18 0A        	jr 7F
 529+ 99C2
 530+ 99C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99C2
 532+ 99C2 CD D6 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99C5 06 0F        	ld b,15
 534+ 99C7 CD FD 99     8 call PreviousScan
 535+ 99CA 10 FB        	djnz 8B
 536+ 99CC
 537+ 99CC E5           7 push hl
 538+ 99CD DD E1        	pop ix
 539+ 99CF
 540+ 99CF 2A 01 8C     	ld hl,(Puntero_objeto)
 541+ 99D2 E5           	push hl
 542+ 99D3 FD E1        	pop iy
 543+ 99D5
 544+ 99D5 C9           	ret
 545+ 99D6
 546+ 99D6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99D6              ;
 548+ 99D6              ;	2/1/23
 549+ 99D6              ;
 550+ 99D6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99D6              ;
 552+ 99D6              ;	Tras esta rutina tenemos:
 553+ 99D6              ;
 554+ 99D6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99D6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99D6              ;
 557+ 99D6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99D6
 559+ 99D6 2A FF 8B     Operandos ld hl,(Posicion_actual)
 560+ 99D9 3A 0F 8C     	ld a,(Columnas)
 561+ 99DC 3D           	dec a
 562+ 99DD 20 01        	jr nz,1F
 563+ 99DF 3C           	inc a
 564+ 99E0 47           1 ld b,a
 565+ 99E1 C9           	ret
 566+ 99E2
 567+ 99E2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99E2              ;
 569+ 99E2              ;	Prepara_draw
 570+ 99E2              ;
 571+ 99E2              ;	Es una rutina de carga.
 572+ 99E2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99E2              ;
 574+ 99E2              ;	FUNCIONAMIENTO:
 575+ 99E2              ;
 576+ 99E2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99E2              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99E2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99E2              ;
 580+ 99E2              ;	DESTRUYE:
 581+ 99E2              ;
 582+ 99E2              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99E2
 584+ 99E2 21 FD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99E5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99E6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99E7 4E           	ld c,(hl)
 588+ 99E8 2A FF 8B     	ld hl,(Posicion_actual)
 589+ 99EB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99ED C9           	ret
 591+ 99EE
 592+ 99EE              ;----------------------------------------------------------------------------------------------------------------
 593+ 99EE              ;
 594+ 99EE              ;	5/08/22
 595+ 99EE              ;
 596+ 99EE              ;   NextScan.
 597+ 99EE              ;
 598+ 99EE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99EE              ;
 600+ 99EE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99EE              ;
 602+ 99EE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99EE              ;
 604+ 99EE              ;       DESTRUIDOS: AF y HL !!!
 605+ 99EE              ;
 606+ 99EE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99EE              ;
 608+ 99EE
 609+ 99EE 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99EF 7C               ld a,h
 611+ 99F0 E6 07            and 7
 612+ 99F2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99F3
 614+ 99F3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99F4 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99F6 6F               ld l,a
 617+ 99F7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99F8
 619+ 99F8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99F9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99FB 67               ld h,a
 622+ 99FC C9               ret
 623+ 99FD
 624+ 99FD              ;----------------------------------------------------------------------------------------------------------------
 625+ 99FD              ;
 626+ 99FD              ;	5/08/22
 627+ 99FD              ;
 628+ 99FD              ;   PreviousScan.
 629+ 99FD              ;
 630+ 99FD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99FD              ;
 632+ 99FD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99FD              ;
 634+ 99FD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99FD              ;
 636+ 99FD              ;       DESTRUIDOS: AF y HL !!!
 637+ 99FD              ;
 638+ 99FD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99FD              ;
 640+ 99FD
 641+ 99FD 7C           PreviousScan ld a,h
 642+ 99FE 25               dec h               ; Dec H.
 643+ 99FF E6 07            and 7
 644+ 9A01 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A02
 646+ 9A02 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A03 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A05 6F               ld l,a
 649+ 9A06 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A07
 651+ 9A07 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A08 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A0A 67               ld h,a
 654+ 9A0B C9               ret
 655+ 9A0C
 656+ 9A0C
 657+ 9A0C
 658+ 9A0C
 659+ 9A0C
 660+ 9A0C
 661+ 9A0C
 662+ 9A0C
 663+ 9A0C
 664+ 9A0C
 665+ 9A0C
 666+ 9A0C
# file closed: Draw_XOR.asm
2132  9A0C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A0C
   2+ 9A0C              ; ******************************************************************************************************************************************************************************************
   3+ 9A0C              ;
   4+ 9A0C              ;   20/05/23
   5+ 9A0C              ;
   6+ 9A0C              ;	Recompone_posicion_inicio
   7+ 9A0C              ;
   8+ 9A0C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A0C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A0C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A0C              ;	_ a una u otra rutina.
  12+ 9A0C
  13+ 9A0C              Recompone_posicion_inicio
  14+ 9A0C
  15+ 9A0C 2A 0C 8C     	ld hl,(Posicion_inicio)
  16+ 9A0F 7D           	ld a,l
  17+ 9A10 E6 1F        	and $1f
  18+ 9A12 28 16        	jr z,1F
  19+ 9A14
  20+ 9A14 FE 1F        	cp $1f
  21+ 9A16 28 0D        	jr z,3F
  22+ 9A18
  23+ 9A18 21 FB 8B     	ld hl,Ctrl_2
  24+ 9A1B CB C6        	set 0,(hl)
  25+ 9A1D 2A 01 8C     	ld hl,(Puntero_objeto)
  26+ 9A20 22 2D 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A23 18 08        	jr 2F
  28+ 9A25
  29+ 9A25 CD D3 9B     3 call Mov_left
  30+ 9A28 18 03        	jr 2F
  31+ 9A2A
  32+ 9A2A CD B0 9A     1 call Mov_right
  33+ 9A2D 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A30 22 01 8C     	ld (Puntero_objeto),hl
  35+ 9A33 C9           	ret
  36+ 9A34
  37+ 9A34              ; ******************************************************************************************************************************************************************************************
  38+ 9A34              ;
  39+ 9A34              ;   27/05/23
  40+ 9A34              ;
  41+ 9A34              ;	Mov_down
  42+ 9A34              ;
  43+ 9A34              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A34              ;
  45+ 9A34              ;
  46+ 9A34              Mov_down
  47+ 9A34
  48+ 9A34 CD 9E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A37              ;																	; _ repone (Puntero_objeto).
  50+ 9A37 21 FC 8B     	ld hl,Ctrl_0
  51+ 9A3A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A3C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A3C              ; 																	; _ en el caso de que no lo haya.
  54+ 9A3C 3A 17 8C     	ld a,(Vel_down)
  55+ 9A3F 47           	ld b,a
  56+ 9A40 2A FF 8B         ld hl,(Posicion_actual)
  57+ 9A43 CD DB 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A46 E6 02        	and 2
  59+ 9A48 28 17        	jr z,1F
  60+ 9A4A
  61+ 9A4A              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A4A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A4A
  64+ 9A4A 7C           	ld a,h
  65+ 9A4B FE 57        	cp $57
  66+ 9A4D 20 12        	jr nz,1F
  67+ 9A4F
  68+ 9A4F 7D           	ld a,l
  69+ 9A50 C6 20        	add $20
  70+ 9A52 30 0D        	jr nc,1F
  71+ 9A54
  72+ 9A54              ; ------------------------------
  73+ 9A54              ;
  74+ 9A54              ;	12/01/24
  75+ 9A54
  76+ 9A54              ;	call Reaparece_arriba
  77+ 9A54 CD 60 9D     	call Reinicio
  78+ 9A57
  79+ 9A57              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A57
  81+ 9A57 3A 66 8C     	ld a,(Ctrl_3)
  82+ 9A5A CB CF        	set 1,a
  83+ 9A5C 32 66 8C     	ld (Ctrl_3),a
  84+ 9A5F
  85+ 9A5F 18 08        	jr 3F
  86+ 9A61              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A61              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A61              ; ------------------------------
  89+ 9A61
  90+ 9A61 CD EE 99     1 call NextScan
  91+ 9A64 22 FF 8B     	ld (Posicion_actual),hl
  92+ 9A67 10 DA            djnz 2B
  93+ 9A69 CD F9 94     3 call Genera_coordenadas
  94+ 9A6C C9           	ret
  95+ 9A6D
  96+ 9A6D              ; ******************************************************************************************************************************************************************************************
  97+ 9A6D              ;
  98+ 9A6D              ;   27/05/23
  99+ 9A6D              ;
 100+ 9A6D              ;	Mov_up
 101+ 9A6D              ;
 102+ 9A6D              ; 	Mueve el Sprite hacia arriba.
 103+ 9A6D              ;
 104+ 9A6D              ;
 105+ 9A6D              Mov_up
 106+ 9A6D
 107+ 9A6D CD 9E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A70              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A70 21 FC 8B     	ld hl,Ctrl_0
 110+ 9A73 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A75              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A75              ; 																		; _ en el caso de que no lo haya.
 113+ 9A75 3A 16 8C     	ld a,(Vel_up)
 114+ 9A78 47           	ld b,a
 115+ 9A79 2A FF 8B     	ld hl,(Posicion_actual)
 116+ 9A7C CD DB 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A7F A7           	and a
 118+ 9A80 20 10        	jr nz,1F
 119+ 9A82
 120+ 9A82              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A82              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A82
 123+ 9A82 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A83 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A85 20 0B            jr nz,1F
 126+ 9A87 7D               ld a,l
 127+ 9A88 D6 20            sub $20
 128+ 9A8A 30 06            jr nc,1F
 129+ 9A8C 25               dec h
 130+ 9A8D
 131+ 9A8D              ; -----------------------------
 132+ 9A8D CD 41 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A90              ;	call Reinicio
 134+ 9A90              ; -----------------------------
 135+ 9A90
 136+ 9A90 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A92 CD FD 99     1 call PreviousScan
 138+ 9A95 22 FF 8B     	ld (Posicion_actual),hl
 139+ 9A98 10 E2            djnz 3B
 140+ 9A9A CD F9 94     2 call Genera_coordenadas
 141+ 9A9D C9           	ret
 142+ 9A9E
 143+ 9A9E              ; -----------------------------
 144+ 9A9E              ;
 145+ 9A9E              ;	27/5/23
 146+ 9A9E              ;
 147+ 9A9E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A9E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A9E              ;
 150+ 9A9E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A9E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A9E              ;
 153+ 9A9E              ;	Modifica: A y (Puntero_objeto).
 154+ 9A9E
 155+ 9A9E 3A FB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9AA1 CB 47        	bit 0,a
 157+ 9AA3 C8           	ret z
 158+ 9AA4 CB 87        	res 0,a
 159+ 9AA6 32 FB 8B     	ld (Ctrl_2),a
 160+ 9AA9 2A 2D 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9AAC 22 01 8C     	ld (Puntero_objeto),hl
 162+ 9AAF C9           	ret
 163+ 9AB0
 164+ 9AB0              ; ******************************************************************************************************************************************************************************************
 165+ 9AB0              ;
 166+ 9AB0              ;	19/10/22
 167+ 9AB0              ;
 168+ 9AB0              ;	Mov_right.
 169+ 9AB0              ;
 170+ 9AB0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AB0              ;
 172+ 9AB0
 173+ 9AB0 3A FC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AB3 CB 77        	bit 6,a
 175+ 9AB5 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AB7
 177+ 9AB7 CD EF 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9ABA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9ABB
 180+ 9ABB 21 FC 8B     	ld hl,Ctrl_0
 181+ 9ABE CB E6        	set 4,(hl)
 182+ 9AC0 18 52        	jr 8F
 183+ 9AC2
 184+ 9AC2 21 FC 8B     10 ld hl,Ctrl_0
 185+ 9AC5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AC7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AC7              ; 																	; _ en el caso de que no lo haya.
 188+ 9AC7 3A F0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9ACA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9ACC 20 46        	jr nz,8F
 191+ 9ACE
 192+ 9ACE 3A 03 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AD1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AD2 28 40        	jr z,8F
 195+ 9AD4
 196+ 9AD4              ; ---------- ---------- ----------
 197+ 9AD4              ;
 198+ 9AD4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AD4
 200+ 9AD4 3A 15 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AD7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AD9 28 11        	jr z,1F
 203+ 9ADB 38 06        	jr c,6F
 204+ 9ADD FE 04        	cp 4
 205+ 9ADF 28 14        	jr z,7F
 206+ 9AE1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AE3
 208+ 9AE3              ; ---------- ---------- ----------
 209+ 9AE3              ;
 210+ 9AE3              ; Perfiles de velocidad
 211+ 9AE3              ;
 212+ 9AE3
 213+ 9AE3 3A 03 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AE6 FE FE        	cp $fe
 215+ 9AE8 20 2A        	jr nz,8F
 216+ 9AEA 18 10        	jr 3F
 217+ 9AEC 3A 03 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AEF FE FD        	cp $fd
 219+ 9AF1 20 21        	jr nz,8F
 220+ 9AF3 18 07        	jr 3F
 221+ 9AF5 3A 03 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AF8 FE FB        	cp $fb
 223+ 9AFA 20 18        	jr nz,8F
 224+ 9AFC
 225+ 9AFC              ; ---------- ---------- ----------
 226+ 9AFC
 227+ 9AFC              3
 228+ 9AFC CD 2F 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AFF              ;	call Reinicio
 230+ 9AFF
 231+ 9AFF              ; ---------- ---------- ----------
 232+ 9AFF              ;
 233+ 9AFF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AFF
 235+ 9AFF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B01 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B02 CD 1B 9B     	call DESPLZ_DER
 238+ 9B05 C1           	pop bc
 239+ 9B06 10 F9        	djnz 5B
 240+ 9B08 2A FF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B0B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B0C 22 FF 8B     	ld (Posicion_actual),hl
 243+ 9B0F CD F9 94     	call Genera_coordenadas
 244+ 9B12 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B14
 246+ 9B14              ; ---------- ---------- ----------
 247+ 9B14
 248+ 9B14 2A FF 8B     8 ld hl,(Posicion_actual)
 249+ 9B17 CD 1B 9B     	call DESPLZ_DER
 250+ 9B1A C9           2 ret
 251+ 9B1B
 252+ 9B1B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B1B              ;
 254+ 9B1B              ;	22/9/22
 255+ 9B1B              ;
 256+ 9B1B
 257+ 9B1B CD 2A 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B1E CD 76 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B21 CD 9F 9B         call Ciclo_completo
 260+ 9B24 21 FC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B27 CB FE        	set 7,(hl)
 262+ 9B29 C9           	ret
 263+ 9B2A
 264+ 9B2A              ; ******************************************************************************************************************************************************************************************
 265+ 9B2A              ;	15/02/23
 266+ 9B2A              ;
 267+ 9B2A
 268+ 9B2A 3A 15 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B2D 47           	ld b,a
 270+ 9B2E 2A 08 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B31 23           1 inc hl
 272+ 9B32 23           	inc hl
 273+ 9B33 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B35 22 08 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B38 CD 1E 91     	call Extrae_address
 276+ 9B3B 22 01 8C     	ld (Puntero_objeto),hl
 277+ 9B3E
 278+ 9B3E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B3E
 280+ 9B3E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B3E              ; Cuántos movimientos hemos hecho ??
 282+ 9B3E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B3E
 284+ 9B3E 2A 04 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B41 EB           	ex de,hl
 286+ 9B42 A7           	and a
 287+ 9B43 ED 52        	sbc hl,de
 288+ 9B45 CB 3D        	srl l
 289+ 9B47 3E 08        6 ld a,8
 290+ 9B49 95           	sub l
 291+ 9B4A 30 1E        	jr nc,3F
 292+ 9B4C
 293+ 9B4C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B4C              ; B="0".
 295+ 9B4C
 296+ 9B4C 04           4 inc b
 297+ 9B4D 3C           	inc a
 298+ 9B4E 20 FC        	jr nz,4B
 299+ 9B50 78           	ld a,b
 300+ 9B51 08           	ex af,af
 301+ 9B52 2A 04 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B55 23           5 inc hl
 303+ 9B56 23           	inc hl
 304+ 9B57 10 FC        	djnz 5B
 305+ 9B59 22 08 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B5C CD 1E 91     	call Extrae_address
 307+ 9B5F 22 01 8C     	ld (Puntero_objeto),hl
 308+ 9B62
 309+ 9B62              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B62              ; _(Posicion_actual).
 311+ 9B62
 312+ 9B62 21 FF 8B     	ld hl,Posicion_actual
 313+ 9B65 34           	inc (hl)
 314+ 9B66 08               ex af,af
 315+ 9B67 6F           	ld l,a
 316+ 9B68 18 DD        	jr 6B
 317+ 9B6A
 318+ 9B6A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B6A
 320+ 9B6A 47           3 ld b,a
 321+ 9B6B 2A 06 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B6E 23           2 inc hl
 323+ 9B6F 23           	inc hl
 324+ 9B70 10 FC        	djnz 2B
 325+ 9B72 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B75 C9           8 ret
 327+ 9B76
 328+ 9B76              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B76              ;
 330+ 9B76              ;	24/7/22
 331+ 9B76              ;
 332+ 9B76              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B76              ;
 334+ 9B76              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B76              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B76              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B76
 338+ 9B76 3A 03 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B79 A7           	and a
 340+ 9B7A 20 1F        	jr nz,1F
 341+ 9B7C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B7E 32 03 8C         ld (CTRL_DESPLZ),a
 343+ 9B81
 344+ 9B81 21 FE 8B     	ld hl,Columns
 345+ 9B84 34           	inc (hl)
 346+ 9B85 3A 0E 8C     	ld a,(Cuad_objeto)
 347+ 9B88 E6 01        	and 1
 348+ 9B8A 28 0F        	jr z,1F
 349+ 9B8C 2A FF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B8F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B90 22 FF 8B     	ld (Posicion_actual),hl
 352+ 9B93 CD F9 94     	call Genera_coordenadas
 353+ 9B96 CD FB 9C     	call Inc_CTRL_DESPLZ
 354+ 9B99 18 03        	jr 2F
 355+ 9B9B CD FB 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B9E C9           2 ret
 357+ 9B9F
 358+ 9B9F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B9F              ;
 360+ 9B9F              ;	24/7/22
 361+ 9B9F              ;
 362+ 9B9F              ;	Ciclo_completo.
 363+ 9B9F              ;
 364+ 9B9F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B9F              ;
 366+ 9B9F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B9F              ; 	Decrementamos (Columns).
 368+ 9B9F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B9F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B9F
 371+ 9B9F
 372+ 9B9F 3A 03 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9BA2 FE FF        	cp $ff
 374+ 9BA4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9BA6 E6 F0        	and $f0
 376+ 9BA8 20 28        	jr nz,3F
 377+ 9BAA
 378+ 9BAA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9BAA
 380+ 9BAA 3A 03 8C     	ld a,(CTRL_DESPLZ)
 381+ 9BAD 47           	ld b,a
 382+ 9BAE 3E F8        	ld a,$f8
 383+ 9BB0 80           	add b
 384+ 9BB1 32 03 8C     	ld (CTRL_DESPLZ),a
 385+ 9BB4 18 1C        	jr 3F
 386+ 9BB6 21 FE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BB9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BBA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BBB 32 03 8C     	ld (CTRL_DESPLZ),a
 390+ 9BBE 3A 0E 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BC1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BC3 20 0A        	jr nz,2F
 393+ 9BC5 2A FF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BC8 23           	inc hl
 395+ 9BC9 22 FF 8B     	ld (Posicion_actual),hl
 396+ 9BCC CD F9 94     	call Genera_coordenadas
 397+ 9BCF
 398+ 9BCF              ; Inicia el puntero de Sprite.
 399+ 9BCF
 400+ 9BCF CD 33 91     2 call Inicia_puntero_objeto_der
 401+ 9BD2 C9           3 ret
 402+ 9BD3
 403+ 9BD3              ; ******************************************************************************************************************************************************************************************
 404+ 9BD3              ;
 405+ 9BD3              ;	15/02/23
 406+ 9BD3              ;
 407+ 9BD3              ;	Mov_left.
 408+ 9BD3              ;
 409+ 9BD3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BD3              ;
 411+ 9BD3              Mov_left
 412+ 9BD3
 413+ 9BD3 21 FC 8B     	ld hl,Ctrl_0
 414+ 9BD6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BD8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BD8              ; 																	; _ en el caso de que no lo haya.
 417+ 9BD8 3A FC 8B     	ld a,(Ctrl_0)
 418+ 9BDB CB 77        	bit 6,a
 419+ 9BDD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BDF
 421+ 9BDF CD F5 9C     	call Stop_Amadeus_left
 422+ 9BE2 C8           	ret z
 423+ 9BE3 20 4A        	jr nz,8F
 424+ 9BE5
 425+ 9BE5 3A F0 8B     11 ld a,(Coordenada_X)
 426+ 9BE8 A7           	and a
 427+ 9BE9 20 44        	jr nz,8F
 428+ 9BEB
 429+ 9BEB 3A 03 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BEE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BEF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BF1
 433+ 9BF1              ; ---------- ---------- ----------
 434+ 9BF1
 435+ 9BF1 3A 14 8C     	ld a,(Vel_left)
 436+ 9BF4 FE 02        	cp 2
 437+ 9BF6 28 0F        	jr z,1F
 438+ 9BF8 38 04        	jr c,6F
 439+ 9BFA FE 04        	cp 4
 440+ 9BFC 28 12        	jr z,7F
 441+ 9BFE
 442+ 9BFE              ; ---------- ---------- ----------
 443+ 9BFE
 444+ 9BFE 3A 03 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C01 FE F8        	cp $f8
 446+ 9C03 20 2A        	jr nz,8F
 447+ 9C05 18 10        	jr 4F
 448+ 9C07 3A 03 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C0A FE F9        	cp $f9
 450+ 9C0C 20 21        	jr nz,8F
 451+ 9C0E 18 07        	jr 4F
 452+ 9C10 3A 03 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C13 FE FB        	cp $fb
 454+ 9C15 20 18        	jr nz,8F
 455+ 9C17
 456+ 9C17              ; ---------- ---------- ----------
 457+ 9C17
 458+ 9C17              4
 459+ 9C17 CD 1D 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C1A              ;	call Reinicio
 461+ 9C1A
 462+ 9C1A              ; ---------- ---------- ----------
 463+ 9C1A
 464+ 9C1A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C1C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C1D
 467+ 9C1D              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C1D              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C1D
 470+ 9C1D CD 36 9C     	call DESPLZ_IZQ
 471+ 9C20 C1           	pop bc
 472+ 9C21 10 F9        	djnz 5B
 473+ 9C23 2A FF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C26 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C27 22 FF 8B     	ld (Posicion_actual),hl
 476+ 9C2A CD F9 94     	call Genera_coordenadas
 477+ 9C2D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C2F
 479+ 9C2F              ; ---------- ---------- ----------
 480+ 9C2F
 481+ 9C2F              ; Movemos, no hay recolocación.
 482+ 9C2F
 483+ 9C2F 2A FF 8B     8 ld hl,(Posicion_actual)
 484+ 9C32 CD 36 9C     	call DESPLZ_IZQ
 485+ 9C35 C9           2 ret
 486+ 9C36
 487+ 9C36              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C36              ;
 489+ 9C36              ;	22/9/22
 490+ 9C36
 491+ 9C36              DESPLZ_IZQ
 492+ 9C36
 493+ 9C36 CD 45 9C     	call Desplaza_izquierda
 494+ 9C39 CD 91 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C3C CD B9 9C     	call Ciclo_completo_2
 496+ 9C3F 21 FC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C42 CB BE        	res 7,(hl)
 498+ 9C44 C9           	ret
 499+ 9C45
 500+ 9C45              Desplaza_izquierda
 501+ 9C45
 502+ 9C45 3A 14 8C     	ld a,(Vel_left)
 503+ 9C48 47           	ld b,a
 504+ 9C49 2A 0A 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C4C 23           1 inc hl
 506+ 9C4D 23           	inc hl
 507+ 9C4E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C50 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C53 CD 1E 91     	call Extrae_address
 510+ 9C56 22 01 8C     	ld (Puntero_objeto),hl
 511+ 9C59
 512+ 9C59              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C59
 514+ 9C59              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C59              ; Cuántos movimientos hemos hecho ??
 516+ 9C59              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C59
 518+ 9C59 2A 06 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C5C EB           	ex de,hl
 520+ 9C5D A7           	and a
 521+ 9C5E ED 52        	sbc hl,de
 522+ 9C60 CB 3D        	srl l
 523+ 9C62 3E 08        6 ld a,8
 524+ 9C64 95           	sub l
 525+ 9C65 30 1E        	jr nc,3F
 526+ 9C67
 527+ 9C67              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C67              ; B="0".
 529+ 9C67
 530+ 9C67 04           4 inc b
 531+ 9C68 3C           	inc a
 532+ 9C69 20 FC        	jr nz,4B
 533+ 9C6B 78           	ld a,b
 534+ 9C6C 08           	ex af,af
 535+ 9C6D 2A 06 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C70 23           5 inc hl
 537+ 9C71 23           	inc hl
 538+ 9C72 10 FC        	djnz 5B
 539+ 9C74 22 0A 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C77 CD 1E 91     	call Extrae_address
 541+ 9C7A 22 01 8C     	ld (Puntero_objeto),hl
 542+ 9C7D
 543+ 9C7D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C7D              ; _(Posicion_actual).
 545+ 9C7D
 546+ 9C7D 21 FF 8B     	ld hl,Posicion_actual
 547+ 9C80 35           	dec (hl)
 548+ 9C81 08           	ex af,af
 549+ 9C82 6F           	ld l,a
 550+ 9C83 18 DD        	jr 6B
 551+ 9C85
 552+ 9C85              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C85
 554+ 9C85 47           3 ld b,a
 555+ 9C86 2A 04 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C89 23           2 inc hl
 557+ 9C8A 23           	inc hl
 558+ 9C8B 10 FC        	djnz 2B
 559+ 9C8D 22 08 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C90 C9           8 ret
 561+ 9C91
 562+ 9C91              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C91              ;
 564+ 9C91              ;	modifica_parametros_1er_DESPLZ
 565+ 9C91              ;
 566+ 9C91              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C91              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C91              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C91
 570+ 9C91 3A 03 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C94 A7           	and a
 572+ 9C95 20 1E        	jr nz,1F
 573+ 9C97 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C98 32 03 8C         ld (CTRL_DESPLZ),a
 575+ 9C9B 21 FE 8B     	ld hl,Columns
 576+ 9C9E 34           	inc (hl)
 577+ 9C9F 3A 0E 8C     	ld a,(Cuad_objeto)
 578+ 9CA2 E6 01        	and 1
 579+ 9CA4 20 0F        	jr nz,1F
 580+ 9CA6 2A FF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9CA9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9CAA 22 FF 8B     	ld (Posicion_actual),hl
 583+ 9CAD CD F9 94     	call Genera_coordenadas
 584+ 9CB0 CD 0C 9D     	call Dec_CTRL_DESPLZ
 585+ 9CB3 18 03        	jr 2F
 586+ 9CB5 CD 0C 9D     1 call Dec_CTRL_DESPLZ
 587+ 9CB8 C9           2 ret
 588+ 9CB9
 589+ 9CB9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CB9
 591+ 9CB9 3A 03 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CBC FE F7        	cp $f7
 593+ 9CBE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CC0 30 2C        	jr nc,3F
 595+ 9CC2
 596+ 9CC2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CC2
 598+ 9CC2 06 00        	ld b,0
 599+ 9CC4 04           4 inc b
 600+ 9CC5 3C           	inc a
 601+ 9CC6 FE F7        	cp $f7
 602+ 9CC8 20 FA        	jr nz,4B
 603+ 9CCA 3E FF        	ld a,$ff
 604+ 9CCC 90           	sub b
 605+ 9CCD 32 03 8C     	ld (CTRL_DESPLZ),a
 606+ 9CD0 18 1C        	jr 3F
 607+ 9CD2
 608+ 9CD2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CD2
 610+ 9CD2 21 FE 8B     1 ld hl,Columns
 611+ 9CD5 35           	dec (hl)
 612+ 9CD6 AF           	xor a
 613+ 9CD7 32 03 8C     	ld (CTRL_DESPLZ),a
 614+ 9CDA 3A 0E 8C     	ld a,(Cuad_objeto)
 615+ 9CDD E6 01        	and 1
 616+ 9CDF 28 0A        	jr z,2F
 617+ 9CE1 2A FF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CE4 2B           	dec hl
 619+ 9CE5 22 FF 8B     	ld (Posicion_actual),hl
 620+ 9CE8 CD F9 94     	call Genera_coordenadas
 621+ 9CEB
 622+ 9CEB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CEB
 624+ 9CEB CD 46 91     2 call Inicia_puntero_objeto_izq
 625+ 9CEE C9           3 ret
 626+ 9CEF
 627+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CEF              ;
 629+ 9CEF              ;	19/10/22
 630+ 9CEF              ;
 631+ 9CEF              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CEF              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CEF
 634+ 9CEF 3A F0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CF2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CF4 C9           	ret
 637+ 9CF5
 638+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CF5              ;
 640+ 9CF5              ;	19/10/22
 641+ 9CF5              ;
 642+ 9CF5              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CF5              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CF5
 645+ 9CF5 3A F0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CF8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CFA C9           	ret
 648+ 9CFB
 649+ 9CFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CFB              ;
 651+ 9CFB              ;	24/7/22
 652+ 9CFB              ;
 653+ 9CFB              ;	Inc_CTRL_DESPLZ
 654+ 9CFB              ;
 655+ 9CFB              ;
 656+ 9CFB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CFB
 658+ 9CFB 21 03 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CFE 3A 15 8C     	ld a,(Vel_right)
 660+ 9D01 A7           	and a
 661+ 9D02 28 06        	jr z,1F
 662+ 9D04 47           	ld b,a
 663+ 9D05 34           3 inc (hl)
 664+ 9D06 10 FD        	djnz 3B
 665+ 9D08 18 01        	jr 2F
 666+ 9D0A 34           1 inc (hl)
 667+ 9D0B C9           2 ret
 668+ 9D0C
 669+ 9D0C              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D0C              ;
 671+ 9D0C              ;	5/2/23
 672+ 9D0C              ;
 673+ 9D0C              ;	Dec_CTRL_DESPLZ
 674+ 9D0C              ;
 675+ 9D0C              ;
 676+ 9D0C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D0C
 678+ 9D0C 21 03 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D0F 3A 14 8C     	ld a,(Vel_left)
 680+ 9D12 A7           	and a
 681+ 9D13 28 06        	jr z,1F
 682+ 9D15 47           	ld b,a
 683+ 9D16 35           3 dec (hl)
 684+ 9D17 10 FD        	djnz 3B
 685+ 9D19 18 01        	jr 2F
 686+ 9D1B 35           1 dec (hl)
 687+ 9D1C C9           2 ret
 688+ 9D1D
 689+ 9D1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D1D
 691+ 9D1D 2A FF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D20 01 1F 00     	ld bc,31
 693+ 9D23 A7           	and a
 694+ 9D24 ED 4A        	adc hl,bc
 695+ 9D26 22 FF 8B     	ld (Posicion_actual),hl
 696+ 9D29 21 FC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D2C CB C6        	set 0,(hl)
 698+ 9D2E C9           	ret
 699+ 9D2F
 700+ 9D2F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D2F
 702+ 9D2F 2A FF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D32 01 1F 00     	ld bc,31
 704+ 9D35 A7           	and a
 705+ 9D36 ED 42        	sbc hl,bc
 706+ 9D38 22 FF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D3B 21 FC 8B     	ld hl,Ctrl_0
 708+ 9D3E CB CE        	set 1,(hl)
 709+ 9D40 C9           	ret
 710+ 9D41
 711+ 9D41              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D41
 713+ 9D41 24           Reaparece_abajo inc h
 714+ 9D42 01 E0 17     	ld bc,$17e0
 715+ 9D45 A7           	and a
 716+ 9D46 ED 4A        	adc hl,bc
 717+ 9D48 22 FF 8B     	ld (Posicion_actual),hl
 718+ 9D4B 21 FC 8B     	ld hl,Ctrl_0
 719+ 9D4E CB D6        	set 2,(hl)
 720+ 9D50 C9           	ret
 721+ 9D51
 722+ 9D51              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D51
 724+ 9D51 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D54 A7           	and a
 726+ 9D55 ED 42        	sbc hl,bc
 727+ 9D57 22 FF 8B     	ld (Posicion_actual),hl
 728+ 9D5A 21 FC 8B     	ld hl,Ctrl_0
 729+ 9D5D CB DE        	set 3,(hl)
 730+ 9D5F C9           	ret
 731+ 9D60
 732+ 9D60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D60              ;
 734+ 9D60              ;	15/07/23
 735+ 9D60
 736+ 9D60              Reinicio
 737+ 9D60
 738+ 9D60              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D60
 740+ 9D60 AF           	xor a
 741+ 9D61 21 24 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D64 CD 82 9D     	call Limpia_contenido_hl
 743+ 9D67
 744+ 9D67 21 FF 8B     	ld hl,Posicion_actual
 745+ 9D6A CD 82 9D     	call Limpia_contenido_hl
 746+ 9D6D
 747+ 9D6D CD 63 93     	call Situa_Puntero_indice_mov
 748+ 9D70 CD 81 9E     	call Inicia_Puntero_mov
 749+ 9D73
 750+ 9D73 21 26 8C     	ld hl,Incrementa_puntero
 751+ 9D76 06 05        	ld b,5
 752+ 9D78 77           1 ld (hl),a
 753+ 9D79 23           	inc hl
 754+ 9D7A 10 FC        	djnz 1B
 755+ 9D7C
 756+ 9D7C 21 FB 8B     	ld hl,Ctrl_2
 757+ 9D7F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D81
 759+ 9D81 C9           	ret
 760+ 9D82
 761+ 9D82 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D83 23           	inc hl
 763+ 9D84 77           	ld (hl),a
 764+ 9D85 C9           	ret
 765+ 9D86
 766+ 9D86              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D86              ;
 768+ 9D86              ;	18/6/24
 769+ 9D86              ;
 770+ 9D86
 771+ 9D86              Amadeus_a_izquierda
 772+ 9D86
 773+ 9D86              ;	Actualiza contador de movimientos.
 774+ 9D86
 775+ 9D86 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9D89 35           	dec (hl)
 777+ 9D8A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D8C
 779+ 9D8C 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D8F 2B           	dec hl
 781+ 9D90 2B           	dec hl
 782+ 9D91 2B           	dec hl
 783+ 9D92 2B           	dec hl
 784+ 9D93 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D96
 786+ 9D96 21 66 8C     	ld hl,Ctrl_3
 787+ 9D99 CB EE        	set 5,(hl)
 788+ 9D9B
 789+ 9D9B C9           	ret
 790+ 9D9C
 791+ 9D9C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D9D C9           	ret
 793+ 9D9E
 794+ 9D9E
 795+ 9D9E              Amadeus_a_derecha
 796+ 9D9E
 797+ 9D9E              ;	Actualiza contador de movimientos.
 798+ 9D9E
 799+ 9D9E 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9DA1 34           	inc (hl)
 801+ 9DA2 3E 7A        	ld a,$7a
 802+ 9DA4 BE           	cp (hl)
 803+ 9DA5 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9DA7
 805+ 9DA7 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9DAA 23           	inc hl
 807+ 9DAB 23           	inc hl
 808+ 9DAC 23           	inc hl
 809+ 9DAD 23           	inc hl
 810+ 9DAE 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DB1
 812+ 9DB1 21 66 8C     	ld hl,Ctrl_3
 813+ 9DB4 CB EE        	set 5,(hl)
 814+ 9DB6 C9           	ret
 815+ 9DB7
 816+ 9DB7 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DB8 C9           	ret
# file closed: Direcciones.asm
2133  9DB9              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DB9              ; ----- ----- ----- ----- -----
   2+ 9DB9              ;
   3+ 9DB9              ;   28/12/23
   4+ 9DB9
   5+ 9DB9              Movimiento
   6+ 9DB9
   7+ 9DB9              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DB9
   9+ 9DB9 3A FB 8B         ld a,(Ctrl_2)
  10+ 9DBC CB 57            bit 2,a
  11+ 9DBE 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DC0
  13+ 9DC0 2A 22 8C         ld hl,(Puntero_mov)
  14+ 9DC3 7E               ld a,(hl)
  15+ 9DC4
  16+ 9DC4              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DC4
  18+ 9DC4              Inicia_desplazamiento.
  19+ 9DC4
  20+ 9DC4              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DC4
  22+ 9DC4 CD B7 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DC7
  24+ 9DC7              ; Iniciamos (Repetimos_mov).
  25+ 9DC7
  26+ 9DC7 7E               ld a,(hl)
  27+ 9DC8 E6 0F            and $0f
  28+ 9DCA 32 28 8C         ld (Repetimos_desplazamiento),a
  29+ 9DCD 32 29 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DD0
  31+ 9DD0              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DD0
  33+ 9DD0 23               inc hl
  34+ 9DD1 7E               ld a,(hl)
  35+ 9DD2 32 2B 8C         ld (Cola_de_desplazamiento),a
  36+ 9DD5 2B               dec hl
  37+ 9DD6
  38+ 9DD6 21 FB 8B         ld hl,Ctrl_2
  39+ 9DD9 CB D6            set 2,(hl)
  40+ 9DDB
  41+ 9DDB              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DDB              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DDB
  44+ 9DDB              Desplazamiento_iniciado
  45+ 9DDB
  46+ 9DDB CD 8B 9E         call Aplica_desplazamiento
  47+ 9DDE
  48+ 9DDE              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DDE
  50+ 9DDE 3A 66 8C         ld a,(Ctrl_3)
  51+ 9DE1 CB 4F            bit 1,a
  52+ 9DE3 C0               ret nz
  53+ 9DE4
  54+ 9DE4 21 28 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DE7 35               dec (hl)
  56+ 9DE8 C0               ret nz
  57+ 9DE9
  58+ 9DE9              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DE9              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DE9              ; Analiza (Cola_de_desplazamiento).
  61+ 9DE9
  62+ 9DE9 3A 2B 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DEC A7               and a
  64+ 9DED CC E0 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DF0 28 30            jr z,Reinicia_el_movimiento
  66+ 9DF2
  67+ 9DF2 FE FF            cp $ff
  68+ 9DF4 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DF6
  70+ 9DF6 FE FE            cp $fe
  71+ 9DF8 CC 65 9E         call z,Fijamos_bucle
  72+ 9DFB 28 25            jr z,Reinicia_el_movimiento
  73+ 9DFD
  74+ 9DFD FE FD            cp $fd
  75+ 9DFF 20 11            jr nz,1F
  76+ 9E01
  77+ 9E01              ; ---
  78+ 9E01              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E01
  80+ 9E01 3A FB 8B         ld a,(Ctrl_2)
  81+ 9E04 CB 5F            bit 3,a
  82+ 9E06 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E08
  84+ 9E08              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E08
  86+ 9E08 21 FB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E0B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E0D
  89+ 9E0D CD 76 9E         call Inicia_Repetimos_movimiento
  90+ 9E10 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E12              ; ---
  92+ 9E12
  93+ 9E12 FE 01        1 cp 1
  94+ 9E14 CA 4F 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E17
  96+ 9E17 3D               dec a
  97+ 9E18 32 2B 8C         ld (Cola_de_desplazamiento),a
  98+ 9E1B
  99+ 9E1B 3A 29 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E1E 32 28 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E21              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E21 C9               ret
 103+ 9E22
 104+ 9E22              Reinicia_el_movimiento
 105+ 9E22
 106+ 9E22 3A FB 8B         ld a,(Ctrl_2)
 107+ 9E25 CB 5F            bit 3,a
 108+ 9E27 28 1B            jr z,2F
 109+ 9E29
 110+ 9E29              ; (Cola_de_desplazamiento)="254".
 111+ 9E29
 112+ 9E29 21 2A 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E2C 35               dec (hl)
 114+ 9E2D 20 15            jr nz,2F
 115+ 9E2F
 116+ 9E2F              ; Fin de las repeticiones del último movimiento.
 117+ 9E2F
 118+ 9E2F 21 FB 8B         ld hl,Ctrl_2
 119+ 9E32 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E34
 121+ 9E34 2A 22 8C         ld hl,(Puntero_mov)
 122+ 9E37 23               inc hl
 123+ 9E38 23               inc hl
 124+ 9E39 23               inc hl
 125+ 9E3A 22 22 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E3D              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E3D 7E               ld a,(hl)
 128+ 9E3E 32 2B 8C         ld (Cola_de_desplazamiento),a
 129+ 9E41
 130+ 9E41 C3 E9 9D         jp Cola
 131+ 9E44
 132+ 9E44 CD 81 9E     2 call Inicia_Puntero_mov
 133+ 9E47
 134+ 9E47 21 FB 8B         ld hl,Ctrl_2
 135+ 9E4A CB 96            res 2,(hl)
 136+ 9E4C
 137+ 9E4C C3 B9 9D         jp Movimiento
 138+ 9E4F
 139+ 9E4F              Siguiente_desplazamiento
 140+ 9E4F
 141+ 9E4F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E4F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E4F
 144+ 9E4F 21 FB 8B         ld hl,Ctrl_2
 145+ 9E52 CB 96            res 2,(hl)
 146+ 9E54
 147+ 9E54 2A 22 8C         ld hl,(Puntero_mov)
 148+ 9E57 23               inc hl
 149+ 9E58 23               inc hl
 150+ 9E59 22 22 8C         ld (Puntero_mov),hl
 151+ 9E5C
 152+ 9E5C 7E               ld a,(hl)
 153+ 9E5D A7               and a
 154+ 9E5E CC E0 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E61 CA 22 9E         jp z,Reinicia_el_movimiento
 156+ 9E64
 157+ 9E64 C9               ret
 158+ 9E65
 159+ 9E65              ; Subrutinas -----------------------------------------
 160+ 9E65              ; ---------- --------- --------- ---------- ----------
 161+ 9E65              ;
 162+ 9E65              ;   24/07/23
 163+ 9E65              ;
 164+ 9E65              ;   Fijamos_bucle
 165+ 9E65              ;
 166+ 9E65              ;
 167+ 9E65
 168+ 9E65              Fijamos_bucle
 169+ 9E65
 170+ 9E65 3A 26 8C         ld a,(Incrementa_puntero)
 171+ 9E68 3C               inc a
 172+ 9E69 32 27 8C         ld (Incrementa_puntero_backup),a
 173+ 9E6C
 174+ 9E6C CD E0 9E         call Incrementa_Puntero_indice_mov
 175+ 9E6F 2A 20 8C         ld hl,(Puntero_indice_mov)
 176+ 9E72 22 24 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E75 C9               ret
 178+ 9E76
 179+ 9E76              ; ---------- --------- --------- ---------- ----------
 180+ 9E76              ;
 181+ 9E76              ;   07/7/23
 182+ 9E76              ;
 183+ 9E76              ;   Inicia_Repetimos_movimiento
 184+ 9E76              ;
 185+ 9E76              ;
 186+ 9E76
 187+ 9E76              Inicia_Repetimos_movimiento
 188+ 9E76
 189+ 9E76              ; Iniciamos (Repetimos_movimiento).
 190+ 9E76
 191+ 9E76 DD 2A 22 8C      ld ix,(Puntero_mov)
 192+ 9E7A DD 7E 02         ld a,(ix+2)
 193+ 9E7D 32 2A 8C         ld (Repetimos_movimiento),a
 194+ 9E80
 195+ 9E80 C9               ret
 196+ 9E81
 197+ 9E81              ; ---------- --------- --------- ---------- ----------
 198+ 9E81              ;
 199+ 9E81              ;   26/6/23
 200+ 9E81              ;
 201+ 9E81              ;   Inicia_Puntero_mov
 202+ 9E81              ;
 203+ 9E81              ;
 204+ 9E81
 205+ 9E81 2A 20 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E84 CD 1E 91         call Extrae_address
 207+ 9E87 22 22 8C         ld (Puntero_mov),hl
 208+ 9E8A C9               ret
 209+ 9E8B
 210+ 9E8B              ; ---------- --------- --------- ---------- ----------
 211+ 9E8B              ;
 212+ 9E8B              ;   27/06/23
 213+ 9E8B              ;
 214+ 9E8B              ;   Aplica_movimiento.
 215+ 9E8B
 216+ 9E8B              Aplica_desplazamiento
 217+ 9E8B
 218+ 9E8B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E8B
 220+ 9E8B 2A 22 8C         ld hl, (Puntero_mov)
 221+ 9E8E
 222+ 9E8E 7E               ld a,(hl)
 223+ 9E8F E6 F0            and $f0
 224+ 9E91 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E92
 226+ 9E92 CB 7E            bit 7,(hl)
 227+ 9E94 28 03            jr z,1F
 228+ 9E96 CD 6D 9A         call Mov_up
 229+ 9E99 2A 22 8C     1 ld hl, (Puntero_mov)
 230+ 9E9C CB 76            bit 6,(hl)
 231+ 9E9E 28 03            jr z,2F
 232+ 9EA0 CD 34 9A         call Mov_down
 233+ 9EA3
 234+ 9EA3              ; Se ha aplicado reinicio ???
 235+ 9EA3              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9EA3
 237+ 9EA3              ;    ld a,(Ctrl_3)
 238+ 9EA3              ;    bit 1,a
 239+ 9EA3              ;    ret nz
 240+ 9EA3
 241+ 9EA3 2A 22 8C     2 ld hl, (Puntero_mov)
 242+ 9EA6 CB 6E            bit 5,(hl)
 243+ 9EA8 28 03            jr z,3F
 244+ 9EAA CD D3 9B         call Mov_left
 245+ 9EAD 2A 22 8C     3 ld hl, (Puntero_mov)
 246+ 9EB0 CB 66            bit 4,(hl)
 247+ 9EB2 C8               ret z
 248+ 9EB3 CD B0 9A         call Mov_right
 249+ 9EB6 C9               ret
 250+ 9EB7
 251+ 9EB7              ; ---------- --------- --------- ---------- ----------
 252+ 9EB7              ;
 253+ 9EB7              ;   26/06/23
 254+ 9EB7              ;
 255+ 9EB7              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EB7
 257+ 9EB7              Ajusta_velocidad_desplazamiento
 258+ 9EB7
 259+ 9EB7              ; 1er byte de la cadena de movimiento.
 260+ 9EB7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EB7
 262+ 9EB7 CD D5 9E         call Extrae_nibble_alto
 263+ 9EBA
 264+ 9EBA 32 16 8C         ld (Vel_up),a
 265+ 9EBD 79               ld a,c
 266+ 9EBE E6 0F            and $0f
 267+ 9EC0 32 17 8C         ld (Vel_down),a
 268+ 9EC3
 269+ 9EC3              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EC3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EC3
 272+ 9EC3 23               inc hl
 273+ 9EC4 CD D5 9E         call Extrae_nibble_alto
 274+ 9EC7
 275+ 9EC7 32 14 8C         ld (Vel_left),a
 276+ 9ECA 79               ld a,c
 277+ 9ECB E6 0F            and $0f
 278+ 9ECD 32 15 8C         ld (Vel_right),a
 279+ 9ED0
 280+ 9ED0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9ED0
 282+ 9ED0 23               inc hl
 283+ 9ED1 22 22 8C         ld (Puntero_mov),hl
 284+ 9ED4 C9               ret
 285+ 9ED5
 286+ 9ED5 06 04        Extrae_nibble_alto ld b,4
 287+ 9ED7 7E               ld a,(hl)
 288+ 9ED8 4F               ld c,a
 289+ 9ED9 E6 F0            and $f0
 290+ 9EDB CB 3F        1 srl a
 291+ 9EDD 10 FC            djnz 1B
 292+ 9EDF C9               ret
 293+ 9EE0
 294+ 9EE0              ; ---------- --------- --------- ---------- ----------
 295+ 9EE0              ;
 296+ 9EE0              ;   5/7/23
 297+ 9EE0              ;
 298+ 9EE0              ;   Incrementa_Puntero_indice_mov
 299+ 9EE0
 300+ 9EE0              Incrementa_Puntero_indice_mov
 301+ 9EE0
 302+ 9EE0 21 26 8C         ld hl,Incrementa_puntero
 303+ 9EE3 34               inc (hl)
 304+ 9EE4
 305+ 9EE4 2A 20 8C         ld hl,(Puntero_indice_mov)
 306+ 9EE7 01 02 00         ld bc,2
 307+ 9EEA A7               and a
 308+ 9EEB 09               add hl,bc
 309+ 9EEC 22 20 8C         ld (Puntero_indice_mov),hl
 310+ 9EEF
 311+ 9EEF 7E               ld a,(hl)
 312+ 9EF0 A7               and a
 313+ 9EF1
 314+ 9EF1              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EF1
 316+ 9EF1              ;    jr z,$
 317+ 9EF1
 318+ 9EF1              ;! Reinicia el Patrón de movimiento.
 319+ 9EF1
 320+ 9EF1 CC F6 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EF4
 322+ 9EF4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EF5
 324+ 9EF5 C9               ret
 325+ 9EF6
 326+ 9EF6              ; ---------- --------- --------- ---------- ----------
 327+ 9EF6              ;
 328+ 9EF6              ;   15/01/24
 329+ 9EF6              ;
 330+ 9EF6              ;   Inicializa_Puntero_indice_mov
 331+ 9EF6
 332+ 9EF6              Inicializa_Puntero_indice_mov_2
 333+ 9EF6
 334+ 9EF6              ; Existe etiqueta de bucle principal???
 335+ 9EF6
 336+ 9EF6 2A 24 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EF9 24               inc h
 338+ 9EFA 25               dec h
 339+ 9EFB 28 05            jr z,2F
 340+ 9EFD
 341+ 9EFD 22 20 8C         ld (Puntero_indice_mov),hl
 342+ 9F00 18 14            jr 3F
 343+ 9F02
 344+ 9F02              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F02
 346+ 9F02 3A 26 8C     2 ld a,(Incrementa_puntero)
 347+ 9F05 47               ld b,a
 348+ 9F06
 349+ 9F06 2A 20 8C         ld hl,(Puntero_indice_mov)
 350+ 9F09 2B           1 dec hl
 351+ 9F0A 2B               dec hl
 352+ 9F0B 10 FC            djnz 1B
 353+ 9F0D 22 20 8C         ld (Puntero_indice_mov),hl
 354+ 9F10
 355+ 9F10 AF               xor a
 356+ 9F11 32 26 8C         ld (Incrementa_puntero),a
 357+ 9F14 18 06            jr 4F
 358+ 9F16
 359+ 9F16 3A 27 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F19 32 26 8C         ld (Incrementa_puntero),a
 361+ 9F1C C9           4 ret
 362+ 9F1D
 363+ 9F1D              ; ----------------------------------------------------------------------
 364+ 9F1D              ;
 365+ 9F1D              ;   24/11/24
 366+ 9F1D              ;
 367+ 9F1D              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F1D
 369+ 9F1D DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F20 CD 72 94         call Calcula_salto_en_BC
 371+ 9F23 21 18 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F26 A7               and a
 373+ 9F27 ED 4A            adc hl,bc
 374+ 9F29 C9               ret
 375+ 9F2A
 376+ 9F2A              ; ----------------------------------------------------------------------
 377+ 9F2A              ;
 378+ 9F2A              ;   24/11/24
 379+ 9F2A              ;
 380+ 9F2A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F2A              ;
 382+ 9F2A              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F2A
 384+ 9F2A 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F2B 23               inc hl
 386+ 9F2C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F2D DD 71 09         ld (ix+9),c
 388+ 9F30 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F33 C9               ret
 390+ 9F34
# file closed: Movimiento.asm
2134  9F34              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F34              ; --------------------------------------------------------------------------------------
   2+ 9F34              ;
   3+ 9F34              ;   25/10/24
   4+ 9F34              ;
   5+ 9F34
   6+ 9F34              Pinta_disparos_Entidades
   7+ 9F34
   8+ 9F34 ED 73 3E 8C      ld (Stack),sp
   9+ 9F38 ED 7B 50 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F3C
  11+ 9F3C 3E 02            ld a,2
  12+ 9F3E 08               ex af,af
  13+ 9F3F
  14+ 9F3F 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F41              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F41              ;                                     _ No encontraría "0".
  17+ 9F41 FD E1        4 pop iy
  18+ 9F43 D1               pop de                          ; 1er .db IYL
  19+ 9F44              ;                                   ; 2º  .db IYH
  20+ 9F44              ;                                   ; 3er .db E.
  21+ 9F44              ;   Album vacío ???
  22+ 9F44
  23+ 9F44 FD 7D            ld a,iyl
  24+ 9F46 FD 84            add iyh
  25+ 9F48 83               add e
  26+ 9F49 28 1F            jr z,1F
  27+ 9F4B
  28+ 9F4B              ;   Imprime album, (contiene datos).
  29+ 9F4B
  30+ 9F4B 3B               dec sp
  31+ 9F4C
  32+ 9F4C E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F4D
  34+ 9F4D              ; Imprime el 1er scanline del disparo.
  35+ 9F4D
  36+ 9F4D FD 7D            ld a,iyl
  37+ 9F4F AE               xor (hl)
  38+ 9F50 77               ld (hl),a
  39+ 9F51
  40+ 9F51 2C               inc l
  41+ 9F52
  42+ 9F52 FD 7C            ld a,iyh
  43+ 9F54 AE               xor (hl)
  44+ 9F55 77               ld (hl),a
  45+ 9F56
  46+ 9F56 2C               inc l
  47+ 9F57
  48+ 9F57 7B               ld a,e
  49+ 9F58 AE               xor (hl)
  50+ 9F59 77               ld (hl),a
  51+ 9F5A
  52+ 9F5A              ; Imprime el 2º scanline del disparo.
  53+ 9F5A
  54+ 9F5A E1               pop hl
  55+ 9F5B
  56+ 9F5B FD 7D            ld a,iyl
  57+ 9F5D AE               xor (hl)
  58+ 9F5E 77               ld (hl),a
  59+ 9F5F
  60+ 9F5F 2C               inc l
  61+ 9F60
  62+ 9F60 FD 7C            ld a,iyh
  63+ 9F62 AE               xor (hl)
  64+ 9F63 77               ld (hl),a
  65+ 9F64
  66+ 9F64 2C               inc l
  67+ 9F65
  68+ 9F65 7B               ld a,e
  69+ 9F66 AE               xor (hl)
  70+ 9F67 77               ld (hl),a
  71+ 9F68
  72+ 9F68 10 D7            djnz 4B
  73+ 9F6A
  74+ 9F6A 08           1 ex af,af
  75+ 9F6B 3D               dec a
  76+ 9F6C 20 05            jr nz,2F
  77+ 9F6E
  78+ 9F6E ED 7B 3E 8C      ld sp,(Stack)
  79+ 9F72 C9               ret
  80+ 9F73
  81+ 9F73 ED 7B 4E 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F77 08               ex af,af
  83+ 9F78 18 C5            jr 3B
  84+ 9F7A
  85+ 9F7A              ; --------------------------------------------------------------------------------------
  86+ 9F7A              ;
  87+ 9F7A              ;   30/10/24
  88+ 9F7A              ;
  89+ 9F7A
  90+ 9F7A              Motor_de_disparos_entidades
  91+ 9F7A
  92+ 9F7A 3A 56 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F7D FE 07            cp 7
  94+ 9F7F C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F80
  96+ 9F80 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F82 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9F85
  99+ 9F85 CD 1E 91     1 call Extrae_address
 100+ 9F88 1C               inc e
 101+ 9F89 1C               inc e
 102+ 9F8A ED 53 69 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F8E
 104+ 9F8E               ; Caja vacía ???
 105+ 9F8E
 106+ 9F8E 2D               dec l
 107+ 9F8F 7E               ld a,(hl)
 108+ 9F90 A7               and a
 109+ 9F91 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F93
 111+ 9F93              ; --- Trabajamos con caja:
 112+ 9F93
 113+ 9F93 2C               inc l
 114+ 9F94
 115+ 9F94              ; --- Existe posibilidad de impacto ???
 116+ 9F94
 117+ 9F94 CB 46            bit 0,(hl)
 118+ 9F96 C4 D6 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F99 20 37            jr nz,3F
 120+ 9F9B
 121+ 9F9B CD 5D A0         call Rota_disparo_si_procede
 122+ 9F9E
 123+ 9F9E              ; ------------------------------------------------------------
 124+ 9F9E
 125+ 9F9E 2D               dec l
 126+ 9F9F 2D               dec l
 127+ 9FA0
 128+ 9FA0 CD 1E 91         call Extrae_address
 129+ 9FA3
 130+ 9FA3              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9FA3              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9FA3
 133+ 9FA3 3A 68 8C         ld a,(Ctrl_5)
 134+ 9FA6 CB 57            bit 2,a
 135+ 9FA8 28 09            jr z,4F
 136+ 9FAA
 137+ 9FAA CB 97            res 2,a
 138+ 9FAC 32 68 8C         ld (Ctrl_5),a
 139+ 9FAF 2C               inc l
 140+ 9FB0 2C               inc l
 141+ 9FB1 18 0C            jr 5F
 142+ 9FB3
 143+ 9FB3 CB 5F        4 bit 3,a
 144+ 9FB5 28 08            jr z,5F
 145+ 9FB7
 146+ 9FB7 CB 9F            res 3,a
 147+ 9FB9 32 68 8C         ld (Ctrl_5),a
 148+ 9FBC 2D               dec l
 149+ 9FBD 2D               dec l
 150+ 9FBE 2D               dec l
 151+ 9FBF
 152+ 9FBF              ; ---------------------------------------------------------------------
 153+ 9FBF
 154+ 9FBF              ;! Velocidad del disparo de entidades.
 155+ 9FBF
 156+ 9FBF CD EE 99     5 call NextScan
 157+ 9FC2 CD EE 99         call NextScan
 158+ 9FC5
 159+ 9FC5              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FC5
 161+ 9FC5 CD 3A A0         call Fin_de_disparo_de_entidad
 162+ 9FC8
 163+ 9FC8 EB               ex de,hl
 164+ 9FC9
 165+ 9FC9 73               ld (hl),e
 166+ 9FCA 23               inc hl
 167+ 9FCB 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FCC
 169+ 9FCC 2A 69 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FCF 18 02            jr 2F
 171+ 9FD1
 172+ 9FD1 C9               ret
 173+ 9FD2
 174+ 9FD2 EB           3 ex de,hl
 175+ 9FD3 10 B0        2 djnz 1B
 176+ 9FD5
 177+ 9FD5 C9               ret
 178+ 9FD6
 179+ 9FD6              ; ------------- ------------- ------------
 180+ 9FD6              ;
 181+ 9FD6              ;   1/11/24
 182+ 9FD6
 183+ 9FD6              Comprueba_impacto_con_Amadeus
 184+ 9FD6
 185+ 9FD6              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FD6              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FD6
 188+ 9FD6              ;   Modificamos registros, así que guardamos ...
 189+ 9FD6
 190+ 9FD6 C5               push bc
 191+ 9FD7 E5               push hl
 192+ 9FD8 D5               push de
 193+ 9FD9
 194+ 9FD9 2D               dec l
 195+ 9FDA 2D               dec l
 196+ 9FDB
 197+ 9FDB CD 1E 91         call Extrae_address
 198+ 9FDE
 199+ 9FDE 3A AF 89         ld a,(CX_Amadeus)
 200+ 9FE1 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FE2
 202+ 9FE2 7D               ld a,l
 203+ 9FE3 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FE5
 205+ 9FE5 06 03            ld b,3
 206+ 9FE7
 207+ 9FE7 B9           1 cp c
 208+ 9FE8 28 15            jr z,Coincidencia
 209+ 9FEA 0C               inc c
 210+ 9FEB 10 FA            djnz 1B
 211+ 9FED
 212+ 9FED 0D               dec c
 213+ 9FEE 0D               dec c
 214+ 9FEF 0D               dec c
 215+ 9FF0
 216+ 9FF0 3C               inc a
 217+ 9FF1 B9               cp c
 218+ 9FF2 28 0B            jr z,Coincidencia
 219+ 9FF4
 220+ 9FF4 3C               inc a
 221+ 9FF5 B9               cp c
 222+ 9FF6 28 07            jr z,Coincidencia
 223+ 9FF8
 224+ 9FF8 D1           2 pop de
 225+ 9FF9 E1               pop hl
 226+ 9FFA C1               pop bc
 227+ 9FFB
 228+ 9FFB              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FFB
 230+ 9FFB CB 86            res 0,(hl)
 231+ 9FFD AF               xor a                       ; Z before RET.
 232+ 9FFE C9               ret
 233+ 9FFF
 234+ 9FFF              Coincidencia
 235+ 9FFF
 236+ 9FFF              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FFF              ;   Existe posibilidad de impacto.
 238+ 9FFF              ;   Vamos a averiguarlo ...
 239+ 9FFF
 240+ 9FFF 1D               dec e
 241+ A000 1D               dec e
 242+ A001 1D               dec e
 243+ A002
 244+ A002              ; DE en Puntero_objeto del disparo.
 245+ A002              ; HL en Puntero_de_impresión del disparo.
 246+ A002
 247+ A002              ; Comparador:
 248+ A002
 249+ A002 06 03            ld b,3
 250+ A004
 251+ A004 1A           3 ld a,(de)
 252+ A005 4F               ld c,a
 253+ A006 A6               and (hl)
 254+ A007 B9               cp c
 255+ A008 20 06            jr nz,Amadeus_impactado
 256+ A00A
 257+ A00A 2C               inc l
 258+ A00B 1C               inc e
 259+ A00C
 260+ A00C 10 F6            djnz 3B
 261+ A00E
 262+ A00E 18 E8            jr 2B
 263+ A010
 264+ A010              Amadeus_impactado
 265+ A010
 266+ A010              ; Borramos disparo.
 267+ A010
 268+ A010 D1               pop de
 269+ A011 E1               pop hl
 270+ A012
 271+ A012 E5               push hl
 272+ A013 D5               push de
 273+ A014
 274+ A014 CD C8 A0         call Borra_6_bytes
 275+ A017
 276+ A017 21 56 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A01A 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A01B
 279+ A01B              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A01B
 281+ A01B 21 B2 89         ld hl,Impacto_Amadeus
 282+ A01E 36 01            ld (hl),1
 283+ A020
 284+ A020              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A020              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A020
 287+ A020 3A B3 89         ld a,(p.imp.amadeus)
 288+ A023 FE DE            cp $de
 289+ A025 20 04            jr nz,1F
 290+ A027
 291+ A027 3D               dec a
 292+ A028 32 B3 89         ld (p.imp.amadeus),a
 293+ A02B
 294+ A02B              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A02B
 296+ A02B 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A02E 21 B5 89         ld hl,Pamm_Amadeus
 298+ A031
 299+ A031 73               ld (hl),e
 300+ A032 23               inc hl
 301+ A033 72               ld (hl),d
 302+ A034
 303+ A034 D1               pop de
 304+ A035 E1               pop hl
 305+ A036 C1               pop bc
 306+ A037
 307+ A037 AF               xor a
 308+ A038 3C               inc a               ; NZ before RET.
 309+ A039 C9               ret
 310+ A03A
 311+ A03A              ; ------------- ------------- ------------
 312+ A03A              ;
 313+ A03A              ;   31/10/24
 314+ A03A
 315+ A03A              Fin_de_disparo_de_entidad
 316+ A03A
 317+ A03A              ; Estamos en zona de Amadeus ??
 318+ A03A
 319+ A03A 7C               ld a,h
 320+ A03B FE 54            cp $54
 321+ A03D 38 0D            jr c,1F
 322+ A03F
 323+ A03F D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A040
 325+ A040 5D               ld e,l
 326+ A041 54               ld d,h
 327+ A042
 328+ A042 21 E0 57         ld hl,$57e0
 329+ A045 ED 52            sbc hl,de
 330+ A047
 331+ A047 38 6F            jr c,Elimina_disparo_entidad
 332+ A049
 333+ A049 6B               ld l,e
 334+ A04A 62               ld h,d
 335+ A04B
 336+ A04B D1               pop de
 337+ A04C
 338+ A04C 7C           1 ld a,h
 339+ A04D FE 50            cp $50
 340+ A04F D8               ret c
 341+ A050
 342+ A050 7D               ld a,l
 343+ A051 FE C0            cp $c0
 344+ A053 D8               ret c
 345+ A054
 346+ A054              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A054              ; Así podremos comprobar si hay colisión más adelante.
 348+ A054
 349+ A054 1C               inc e
 350+ A055 1C               inc e
 351+ A056
 352+ A056 EB               ex de,hl
 353+ A057 CB C6            set 0,(hl)
 354+ A059 EB               ex de,hl
 355+ A05A
 356+ A05A 1D               dec e
 357+ A05B 1D               dec e
 358+ A05C
 359+ A05C C9               ret
 360+ A05D
 361+ A05D              ; ----------------------------------------------------------
 362+ A05D              ;
 363+ A05D              ;   08/10/24
 364+ A05D
 365+ A05D              ;   Estructura de un disparo de entidades.
 366+ A05D
 367+ A05D              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A05D              ; 	defw 0											; Puntero de impresión.
 369+ A05D              ;	defw 0											; Control.
 370+ A05D
 371+ A05D              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A05D              ;   _de la entidad en el momento de disparar.
 373+ A05D
 374+ A05D              ;   El byte alto muestra la siguiente información:
 375+ A05D              ;
 376+ A05D              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A05D              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A05D              ;
 379+ A05D              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A05D              ;
 381+ A05D              ;                        10xx ..... Izquierda.
 382+ A05D              ;                        01xx ..... Derecha.
 383+ A05D              ;                        00xx ..... Recto.
 384+ A05D
 385+ A05D              Rota_disparo_si_procede
 386+ A05D
 387+ A05D              ;   Nos situamos en el byte alto de (Control).
 388+ A05D
 389+ A05D CB 76            bit 6,(hl)
 390+ A05F 20 2D            jr nz,Rota_a_derecha
 391+ A061 CB 7E            bit 7,(hl)
 392+ A063 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A064
 394+ A064              Rota_a_izq
 395+ A064
 396+ A064 E5               push hl
 397+ A065
 398+ A065 7D               ld a,l
 399+ A066 D6 05            sub 5
 400+ A068 6F               ld l,a
 401+ A069
 402+ A069 E5               push hl
 403+ A06A FD E1            pop iy
 404+ A06C
 405+ A06C A7               and a
 406+ A06D
 407+ A06D FD CB 02 16      rl (iy+02)
 408+ A071 FD CB 01 16      rl (iy+01)
 409+ A075 FD CB 00 16      rl (iy+00)
 410+ A079
 411+ A079 30 3B            jr nc,Exit
 412+ A07B
 413+ A07B              ; Desplazamiento completo hasta Carry.
 414+ A07B              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A07B
 416+ A07B FD 36 02 03      ld (iy+02),$03
 417+ A07F FD 36 01 00      ld (iy+01),$00
 418+ A083 FD 36 00 00      ld (iy+00),$00
 419+ A087
 420+ A087 21 68 8C         ld hl,Ctrl_5
 421+ A08A CB DE            set 3,(hl)
 422+ A08C
 423+ A08C 18 28            jr Exit
 424+ A08E
 425+ A08E              Rota_a_derecha
 426+ A08E
 427+ A08E E5               push hl
 428+ A08F
 429+ A08F 7D               ld a,l
 430+ A090 D6 05            sub 5
 431+ A092 6F               ld l,a
 432+ A093
 433+ A093 E5               push hl
 434+ A094 FD E1            pop iy
 435+ A096
 436+ A096 A7               and a
 437+ A097
 438+ A097 FD CB 00 1E      rr (iy+00)
 439+ A09B FD CB 01 1E      rr (iy+01)
 440+ A09F FD CB 02 1E      rr (iy+02)
 441+ A0A3
 442+ A0A3 30 11            jr nc,Exit
 443+ A0A5
 444+ A0A5              ; Desplazamiento completo hasta Carry.
 445+ A0A5              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A0A5
 447+ A0A5 FD 36 00 01      ld (iy+00),$01
 448+ A0A9 FD 36 01 80      ld (iy+01),$80
 449+ A0AD FD 36 02 00      ld (iy+02),$00
 450+ A0B1
 451+ A0B1 21 68 8C         ld hl,Ctrl_5
 452+ A0B4 CB D6            set 2,(hl)
 453+ A0B6
 454+ A0B6 E1           Exit pop hl
 455+ A0B7 C9               ret
 456+ A0B8
 457+ A0B8              ; ------------ ----------- ------------
 458+ A0B8              ;
 459+ A0B8              ;   25/9/24
 460+ A0B8
 461+ A0B8              Elimina_disparo_entidad
 462+ A0B8
 463+ A0B8 21 56 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0BB 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0BC
 466+ A0BC E1               pop hl
 467+ A0BD E5               push hl
 468+ A0BE
 469+ A0BE 2C               inc l
 470+ A0BF 2C               inc l
 471+ A0C0
 472+ A0C0 CD C8 A0         call Borra_6_bytes
 473+ A0C3
 474+ A0C3 D1               pop de
 475+ A0C4
 476+ A0C4 21 00 00         ld hl,0
 477+ A0C7
 478+ A0C7 C9               ret
 479+ A0C8
 480+ A0C8              ; ----- ----- ----- ----- -----
 481+ A0C8
 482+ A0C8              Borra_6_bytes
 483+ A0C8
 484+ A0C8 16 06            ld d,6                                                    ; Contador
 485+ A0CA AF               xor a                                                     ; Borrador
 486+ A0CB 77           1 ld (hl),a
 487+ A0CC 2D               dec l
 488+ A0CD 15               dec d
 489+ A0CE 20 FB            jr nz,1B
 490+ A0D0
 491+ A0D0 C9               ret
 492+ A0D1
 493+ A0D1              ; --------------------------------------------------------------------------------------
 494+ A0D1              ;
 495+ A0D1              ;   12/10/24
 496+ A0D1              ;
 497+ A0D1
 498+ A0D1              Genera_datos_de_impresion_disparos_Entidades
 499+ A0D1
 500+ A0D1 3E 07            ld a,7
 501+ A0D3 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0D4
 503+ A0D4              ; ---------------
 504+ A0D4
 505+ A0D4              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0D4
 507+ A0D4 21 20 89          ld hl,Indice_de_disparos_entidades
 508+ A0D7
 509+ A0D7 CD 1E 91     1 call Extrae_address
 510+ A0DA
 511+ A0DA 13               inc de
 512+ A0DB 13               inc de
 513+ A0DC
 514+ A0DC ED 53 69 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0E0
 516+ A0E0 2D               dec l
 517+ A0E1 7E               ld a,(hl)
 518+ A0E2 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0E3 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0E5
 521+ A0E5              ; ----- ----- ----- -----
 522+ A0E5
 523+ A0E5 2D               dec l
 524+ A0E6 CD 1E 91         call Extrae_address
 525+ A0E9 E5               push hl
 526+ A0EA
 527+ A0EA 1D               dec e
 528+ A0EB
 529+ A0EB EB               ex de,hl
 530+ A0EC
 531+ A0EC 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0ED 2D               dec l
 533+ A0EE 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0EF 2D               dec l
 535+ A0F0 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0F1
 537+ A0F1 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0F2
 539+ A0F2              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0F2
 541+ A0F2 FD 2A 52 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0F6 FD 73 00         ld (iy+0),e
 543+ A0F9 FD 70 01         ld (iy+1),b
 544+ A0FC FD 71 02         ld (iy+2),c
 545+ A0FF
 546+ A0FF FD 75 03         ld (iy+3),l
 547+ A102 FD 74 04         ld (iy+4),h
 548+ A105
 549+ A105 CD EE 99         call NextScan
 550+ A108
 551+ A108 FD 75 05         ld (iy+5),l
 552+ A10B FD 74 06         ld (iy+6),h
 553+ A10E
 554+ A10E FD E5            push iy
 555+ A110 E1               pop hl
 556+ A111
 557+ A111 3E 07            ld a,7
 558+ A113 85               add l
 559+ A114 6F               ld l,a
 560+ A115
 561+ A115 22 52 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A118
 563+ A118              ; ----- ----- ----- -----
 564+ A118
 565+ A118              Situa_en_siguiente_caja
 566+ A118
 567+ A118 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A119 3D               dec a
 569+ A11A C8               ret z
 570+ A11B
 571+ A11B 08               ex af,af
 572+ A11C 2A 69 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A11F 18 B6            jr 1B
 574+ A121
 575+ A121              ; --------------------------------------------------------------------------------------
 576+ A121              ;
 577+ A121              ;   12/10/24
 578+ A121              ;
 579+ A121
 580+ A121              Genera_disparo_de_entidad_maldosa
 581+ A121
 582+ A121              ;   Estructura de un disparo de entidades.
 583+ A121
 584+ A121              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A121              ; 	defw 0											; Puntero de impresión.
 586+ A121              ;	defw 0											; Control.
 587+ A121
 588+ A121              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A121              ;   _de la entidad en el momento de disparar.
 590+ A121
 591+ A121              ;   El byte de control muestra la siguiente información:
 592+ A121
 593+ A121              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A121              ;
 595+ A121              ;                        10xx ..... Izquierda.
 596+ A121              ;                        01xx ..... Derecha.
 597+ A121              ;                        00xx ..... Recto.
 598+ A121
 599+ A121              ;*  Exclusiones.
 600+ A121
 601+ A121              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A121              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A121
 604+ A121 3A 56 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A124 A7               and a
 606+ A125 C8               ret z
 607+ A126
 608+ A126 3A F1 8B         ld a,(Coordenada_y)
 609+ A129 A7               and a
 610+ A12A C8               ret z
 611+ A12B
 612+ A12B 3D               dec a
 613+ A12C C8               ret z
 614+ A12D
 615+ A12D FE 10            cp 16
 616+ A12F D0               ret nc
 617+ A130
 618+ A130              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A130              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A130              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A130
 622+ A130 21 58 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A133 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A134
 625+ A134              ;   Decrementa el numero de disparos de entidades.
 626+ A134
 627+ A134 21 56 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A137 35               dec (hl)
 629+ A138
 630+ A138 21 20 89         ld hl,Indice_de_disparos_entidades
 631+ A13B
 632+ A13B CD 1E 91     1 call Extrae_address
 633+ A13E
 634+ A13E 13               inc de
 635+ A13F 13               inc de
 636+ A140
 637+ A140 ED 53 69 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A144
 639+ A144              ;   Comprobamos si la caja está vacía.
 640+ A144
 641+ A144 2D               dec l
 642+ A145 7E               ld a,(hl)
 643+ A146 A7               and a
 644+ A147 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A149 2C               inc l
 646+ A14A
 647+ A14A              ;   Caja vacía, vamos a generar un disparo.
 648+ A14A              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A14A
 650+ A14A CD 6B A1         call Genera_byte_inclinacion
 651+ A14D
 652+ A14D 7E               ld a,(hl)
 653+ A14E 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A14F
 655+ A14F 2D               dec l
 656+ A150
 657+ A150 CD 87 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A153
 659+ A153 70               ld (hl),b
 660+ A154 2D               dec l
 661+ A155 71               ld (hl),c
 662+ A156
 663+ A156 2D               dec l
 664+ A157
 665+ A157              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A157
 667+ A157 FD 7E 02         ld a,(iy+02)
 668+ A15A 77               ld (hl),a
 669+ A15B 2D               dec l
 670+ A15C
 671+ A15C FD 7E 01         ld a,(iy+01)
 672+ A15F 77               ld (hl),a
 673+ A160 2D               dec l
 674+ A161
 675+ A161 FD 7E 00         ld a,(iy+00)
 676+ A164 77               ld (hl),a
 677+ A165
 678+ A165 C9               ret
 679+ A166
 680+ A166              ;   --- --- ---
 681+ A166
 682+ A166              Situa_en_siguiente_disparo
 683+ A166
 684+ A166 2A 69 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A169 18 D0            jr 1B
 686+ A16B
 687+ A16B              ; --------------------------------------------------------------------------------------
 688+ A16B              ;
 689+ A16B              ;   09/10/24
 690+ A16B              ;
 691+ A16B
 692+ A16B              Genera_byte_inclinacion
 693+ A16B
 694+ A16B              ; Determina tendencia del disparo.
 695+ A16B
 696+ A16B 3A AF 89         ld a,(CX_Amadeus)
 697+ A16E 47               ld b,a
 698+ A16F 3A F0 8B         ld a,(Coordenada_X)
 699+ A172 90               sub b
 700+ A173 38 07            jr c,Disparo_a_derecha
 701+ A175
 702+ A175 FE 06        Disparo_a_izquierda cp 6
 703+ A177
 704+ A177 D8               ret c
 705+ A178 C8               ret z
 706+ A179
 707+ A179 CB FE            set 7,(hl)
 708+ A17B C9               ret
 709+ A17C
 710+ A17C 47           Disparo_a_derecha ld b,a
 711+ A17D 3E FF            ld a,$ff
 712+ A17F 90               sub b
 713+ A180
 714+ A180 FE 05            cp 5
 715+ A182
 716+ A182 D8               ret c
 717+ A183 C8               ret z
 718+ A184
 719+ A184 CB F6            set 6,(hl)
 720+ A186 C9               ret
 721+ A187
 722+ A187              ; --------------------------------------------------------------------------------------
 723+ A187              ;
 724+ A187              ;   09/10/24
 725+ A187              ;
 726+ A187
 727+ A187              Modifica_puntero_de_impresion
 728+ A187
 729+ A187              ;   Puntero de impresión del disparo en BC.
 730+ A187
 731+ A187 E5               push hl
 732+ A188
 733+ A188 2A 6B 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A18B CD EE 99         call NextScan
 735+ A18E
 736+ A18E 4D               ld c,l
 737+ A18F 44               ld b,h
 738+ A190
 739+ A190 E1               pop hl
 740+ A191
 741+ A191 08               ex af,af
 742+ A192 CB 77            bit 6,a
 743+ A194 28 06            jr z,1F
 744+ A196
 745+ A196 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A19A 0C               inc c
 747+ A19B C9               ret
 748+ A19C
 749+ A19C CB 7F        1 bit 7,a
 750+ A19E 28 F6            jr z,2B
 751+ A1A0
 752+ A1A0 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A1A4 0D               dec c
 754+ A1A5
 755+ A1A5 C9               ret
 756+ A1A6
 757+ A1A6              ; --------------------------------------------------------------------------------------
 758+ A1A6              ;
 759+ A1A6              ;   31/08/24
 760+ A1A6              ;
 761+ A1A6
 762+ A1A6              Compara_con_coordenadas_de_disparo
 763+ A1A6
 764+ A1A6 3A F1 8B         ld a,(Coordenada_y)
 765+ A1A9 47               ld b,a
 766+ A1AA 3A 70 8C         ld a,(Coordenadas_disparo_certero)
 767+ A1AD 90               sub b
 768+ A1AE
 769+ A1AE              ; A = "0" ok
 770+ A1AE              ; A = "1" ok
 771+ A1AE
 772+ A1AE 28 08            jr z,Comprueba_coordenada_X
 773+ A1B0 3D               dec a
 774+ A1B1 28 05            jr z,Comprueba_coordenada_X
 775+ A1B3
 776+ A1B3              ; A = "$ff" ok
 777+ A1B3
 778+ A1B3 FE FE            cp $fe
 779+ A1B5 28 01            jr z,Comprueba_coordenada_X
 780+ A1B7
 781+ A1B7 C9               ret
 782+ A1B8
 783+ A1B8              Comprueba_coordenada_X
 784+ A1B8
 785+ A1B8 3A F0 8B         ld a,(Coordenada_X)
 786+ A1BB 47               ld b,a
 787+ A1BC 21 71 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1BF 7E               ld a,(hl)
 789+ A1C0 90               sub b
 790+ A1C1
 791+ A1C1              ; A = "0" ok
 792+ A1C1              ; A = "1" ok
 793+ A1C1
 794+ A1C1 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1C3 3D               dec a
 796+ A1C4 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1C6
 798+ A1C6              ; A = "2" ok
 799+ A1C6
 800+ A1C6 3D               dec a
 801+ A1C7 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1C9
 803+ A1C9              ; A = "$ff"
 804+ A1C9
 805+ A1C9 FE FD            cp $fd
 806+ A1CB C0               ret nz
 807+ A1CC
 808+ A1CC              Activa_Impacto_en_entidad
 809+ A1CC
 810+ A1CC              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1CC
 812+ A1CC 3E 02            ld a,2
 813+ A1CE 32 F3 8B         ld (Impacto),a
 814+ A1D1
 815+ A1D1              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1D1
 817+ A1D1 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1D4 21 F6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1D7
 820+ A1D7 73               ld (hl),e
 821+ A1D8 23               inc hl
 822+ A1D9 72               ld (hl),d
 823+ A1DA
 824+ A1DA              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1DA
 826+ A1DA 21 6D 8C         ld hl,Impacto2
 827+ A1DD CB 9E            res 3,(hl)
 828+ A1DF
 829+ A1DF C9               ret
 830+ A1E0
 831+ A1E0              ; --------------------------------------------------------------------------------------
 832+ A1E0              ;
 833+ A1E0              ;   13/10/24
 834+ A1E0              ;
 835+ A1E0
 836+ A1E0              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1E0
 838+ A1E0              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1E0
 840+ A1E0 2A 4A 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1E3 06 06            ld b,6
 842+ A1E5 AF               xor a
 843+ A1E6 77           1 ld (hl),a
 844+ A1E7 2C               inc l
 845+ A1E8 10 FC            djnz 1B
 846+ A1EA
 847+ A1EA C9               ret
 848+ A1EB
 849+ A1EB              ; --------------------------------------------------------------------------------------
 850+ A1EB              ;
 851+ A1EB              ;   29/09/24
 852+ A1EB              ;
 853+ A1EB
 854+ A1EB              Calcula_bytes_pintado_disparos
 855+ A1EB
 856+ A1EB 2A 4E 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1EE 45               ld b,l
 858+ A1EF 2A 52 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1F2 7D               ld a,l
 860+ A1F3
 861+ A1F3 90               sub b
 862+ A1F4 32 54 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1F7
 864+ A1F7 C9               ret
 865+ A1F8
 866+ A1F8              ; --------------------------------------------------------------------------------------
 867+ A1F8              ;
 868+ A1F8              ;   26/10/24
 869+ A1F8              ;
 870+ A1F8              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1F8              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1F8              ;   _disparos que el álbum del FRAME actual).
 873+ A1F8
 874+ A1F8              Limpia_album_de_pintado_disparos_entidades
 875+ A1F8
 876+ A1F8 21 55 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1FB 7E               ld a,(hl)
 878+ A1FC 2D               dec l
 879+ A1FD 46               ld b,(hl)
 880+ A1FE 90               sub b
 881+ A1FF
 882+ A1FF D8               ret c
 883+ A200 C8               ret z
 884+ A201
 885+ A201 F5               push af
 886+ A202 80               add b
 887+ A203 77               ld (hl),a
 888+ A204 F1               pop af
 889+ A205
 890+ A205              ; Clean.
 891+ A205
 892+ A205 47           2 ld b,a
 893+ A206 AF               xor a
 894+ A207 2A 52 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A20A 77           1 ld (hl),a
 896+ A20B 23               inc hl
 897+ A20C 10 FC            djnz 1B
 898+ A20E
 899+ A20E C9               ret
 900+ A20F
 901+ A20F              ; --------------------------------------------------------------------------------------
 902+ A20F              ;
 903+ A20F              ;   29/09/24
 904+ A20F              ;
 905+ A20F
 906+ A20F              Motor_Disparos_Amadeus
 907+ A20F
 908+ A20F 21 1D 89         ld hl,Disparo_Amad+1
 909+ A212
 910+ A212 34               inc (hl)
 911+ A213 35               dec (hl)
 912+ A214
 913+ A214 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A215
 915+ A215              ;   Esta caja contiene un disparo.
 916+ A215
 917+ A215 CD 1C A2         call Consulta_Impacto
 918+ A218 CC 35 A2         call z,Mueve_disparo_Amadeus
 919+ A21B
 920+ A21B C9               ret
 921+ A21C
 922+ A21C              ; ----------------------
 923+ A21C              ;
 924+ A21C              ;
 925+ A21C              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A21C              ;
 927+ A21C              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A21C
 929+ A21C
 930+ A21C              Consulta_Impacto
 931+ A21C
 932+ A21C              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A21C              ;   _sea lo más coherente posible.
 934+ A21C
 935+ A21C E5               push hl
 936+ A21D 2B               dec hl
 937+ A21E CD 11 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A221 E1               pop hl
 939+ A222 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A223
 941+ A223 C8               ret z
 942+ A224
 943+ A224 3A 6D 8C         ld a,(Impacto2)
 944+ A227 CB DF            set 3,a
 945+ A229 32 6D 8C         ld (Impacto2),a
 946+ A22C
 947+ A22C E5               push hl
 948+ A22D CD FE A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A230 E1               pop hl
 950+ A231 CD 4E A2         call Elimina_disparo_Amadeus
 951+ A234
 952+ A234 C9               ret
 953+ A235
 954+ A235              ; ----------------------
 955+ A235              ;
 956+ A235              ;
 957+ A235              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A235
 959+ A235              Mueve_disparo_Amadeus
 960+ A235
 961+ A235 CD 1E 91         call Extrae_address
 962+ A238
 963+ A238 CD FD 99         call PreviousScan
 964+ A23B CD FD 99         call PreviousScan
 965+ A23E CD FD 99         call PreviousScan
 966+ A241 CD FD 99         call PreviousScan
 967+ A244
 968+ A244              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A244
 970+ A244 7C               ld a,h
 971+ A245 D6 40            sub $40
 972+ A247 EB               ex de,hl
 973+ A248 38 04            jr c,Elimina_disparo_Amadeus
 974+ A24A
 975+ A24A               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A24A
 977+ A24A 73               ld (hl),e
 978+ A24B 23               inc hl
 979+ A24C 72               ld (hl),d
 980+ A24D
 981+ A24D C9               ret
 982+ A24E
 983+ A24E              ; ----------------------
 984+ A24E              ;
 985+ A24E              ;   29/9/24
 986+ A24E
 987+ A24E              Elimina_disparo_Amadeus
 988+ A24E
 989+ A24E              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A24E              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A24E
 992+ A24E              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A24E              ;   	defw 0											; Puntero de impresión.
 994+ A24E
 995+ A24E 2B               dec hl
 996+ A24F 2B               dec hl
 997+ A250
 998+ A250 AF               xor a
 999+ A251 77               ld (hl),a
1000+ A252 23               inc hl
1001+ A253 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A254
1003+ A254 23               inc hl
1004+ A255 77               ld (hl),a
1005+ A256 23               inc hl
1006+ A257 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A258
1008+ A258 3E 01            ld a,1
1009+ A25A 32 57 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A25D
1011+ A25D CD E0 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A260
1013+ A260 AF               xor a
1014+ A261 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A262
1016+ A262 C9               ret
1017+ A263
1018+ A263              ; --------------------------------------------------------------------------------------
1019+ A263              ;
1020+ A263              ;   13/10/24
1021+ A263              ;
1022+ A263
1023+ A263              Pinta_disparos_Amadeus
1024+ A263
1025+ A263 06 02            ld b,2
1026+ A265 ED 73 3E 8C      ld (Stack),sp
1027+ A269 ED 7B 4C 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A26D D1           3 pop de
1029+ A26E 14               inc d
1030+ A26F 15               dec d
1031+ A270 28 1C            jr z,1F
1032+ A272 E1               pop hl
1033+ A273
1034+ A273              Imprime_scanlines_en_pantalla
1035+ A273
1036+ A273              ; 1er scanline
1037+ A273
1038+ A273 1A               ld a,(de)
1039+ A274 AE               xor (hl)
1040+ A275 77               ld (hl),a
1041+ A276
1042+ A276 1C               inc e
1043+ A277 2C               inc l
1044+ A278
1045+ A278 1A               ld a,(de)
1046+ A279 AE               xor (hl)
1047+ A27A 77               ld (hl),a
1048+ A27B
1049+ A27B 1D               dec e
1050+ A27C E1               pop hl
1051+ A27D
1052+ A27D              ; 2º scanline
1053+ A27D
1054+ A27D 1A               ld a,(de)
1055+ A27E AE               xor (hl)
1056+ A27F 77               ld (hl),a
1057+ A280
1058+ A280 1C               inc e
1059+ A281 2C               inc l
1060+ A282
1061+ A282 1A               ld a,(de)
1062+ A283 AE               xor (hl)
1063+ A284 77               ld (hl),a
1064+ A285
1065+ A285 1D               dec e
1066+ A286
1067+ A286 18 06            jr 1F
1068+ A288
1069+ A288 ED 7B 4A 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A28C 18 DF            jr 3B
1071+ A28E 10 F8        1 djnz 2B
1072+ A290 ED 7B 3E 8C      ld sp,(Stack)
1073+ A294 C9               ret
1074+ A295
1075+ A295              ; --------------------------------------------------------------------------------------
1076+ A295              ;
1077+ A295              ;   13/10/24
1078+ A295              ;
1079+ A295              ;   Modifica: HL,BC y DE.
1080+ A295
1081+ A295
1082+ A295              Genera_datos_de_impresion_disparos_Amadeus
1083+ A295
1084+ A295 ED 73 3E 8C      ld (Stack),sp
1085+ A299 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A29C D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A29D
1088+ A29D 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A29E 15               dec d
1090+ A29F
1091+ A29F 28 0E            jr z,Salida
1092+ A2A1
1093+ A2A1              Genera_scanlines_de_disparo_Amadeus
1094+ A2A1
1095+ A2A1 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A2A2              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A2A2 ED 7B 4A 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A2A6
1099+ A2A6 C1               pop bc
1100+ A2A7 C1               pop bc
1101+ A2A8 C1               pop bc
1102+ A2A9
1103+ A2A9 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A2AA CD FD 99         call PreviousScan
1105+ A2AD E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A2AE D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A2AF
1108+ A2AF              Salida
1109+ A2AF
1110+ A2AF ED 7B 3E 8C      ld sp,(Stack)
1111+ A2B3
1112+ A2B3 C9               ret
1113+ A2B4
1114+ A2B4              ; --------------------------------------------------------------------------------------
1115+ A2B4              ;
1116+ A2B4              ;   12/09/24
1117+ A2B4              ;
1118+ A2B4
1119+ A2B4              Genera_disparo_Amadeus
1120+ A2B4
1121+ A2B4              ;*  Exclusiones.
1122+ A2B4
1123+ A2B4 3A 57 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2B7 A7               and a
1125+ A2B8 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2B9
1127+ A2B9 3D               dec a
1128+ A2BA 32 57 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2BD
1130+ A2BD              Define_puntero_objeto_disparo
1131+ A2BD
1132+ A2BD              ;   Inicializamos contador.
1133+ A2BD
1134+ A2BD 06 00            ld b,0
1135+ A2BF
1136+ A2BF 2A B3 89         ld hl,(p.imp.amadeus)
1137+ A2C2 2C               inc l
1138+ A2C3
1139+ A2C3 3E 80            ld a,$80
1140+ A2C5 BE               cp (hl)
1141+ A2C6 28 0D            jr z,1F
1142+ A2C8
1143+ A2C8 04               inc b
1144+ A2C9
1145+ A2C9 3E 60            ld a,$60
1146+ A2CB BE               cp (hl)
1147+ A2CC 28 07            jr z,1F
1148+ A2CE
1149+ A2CE
1150+ A2CE 04               inc b
1151+ A2CF
1152+ A2CF 3E 18            ld a,$18
1153+ A2D1 BE               cp (hl)
1154+ A2D2 28 01            jr z,1F
1155+ A2D4
1156+ A2D4 04               inc b
1157+ A2D5
1158+ A2D5              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2D5
1160+ A2D5              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2D5
1162+ A2D5 CD FD 99     1 call PreviousScan
1163+ A2D8
1164+ A2D8 78               ld a,b
1165+ A2D9 CB 3F            srl a
1166+ A2DB 28 03            jr z,4F
1167+ A2DD
1168+ A2DD              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2DD E5               push hl
1170+ A2DE 18 02            jr 5F
1171+ A2E0 2D           4 dec l
1172+ A2E1 E5               push hl
1173+ A2E2              ; ---
1174+ A2E2
1175+ A2E2              ;   Calcula el Puntero_objeto del disparo.
1176+ A2E2
1177+ A2E2 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2E5 04               inc b
1179+ A2E6 05               dec b
1180+ A2E7 28 04            jr z,2F
1181+ A2E9
1182+ A2E9              ;   Nos desplazamos por el índice de disparos.
1183+ A2E9
1184+ A2E9 2C           3 inc l
1185+ A2EA 2C               inc l
1186+ A2EB 10 FC            djnz 3B
1187+ A2ED
1188+ A2ED              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2ED CD 1E 91     2 call Extrae_address
1190+ A2F0 E5               push hl
1191+ A2F1              ; ---
1192+ A2F1
1193+ A2F1              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2F1              ; HL en el 1er .db de la caja.
1195+ A2F1
1196+ A2F1 21 1C 89         ld hl,Disparo_Amad
1197+ A2F4
1198+ A2F4 06 02            ld b,2
1199+ A2F6
1200+ A2F6 D1           6 pop de
1201+ A2F7 73               ld (hl),e
1202+ A2F8 23               inc hl
1203+ A2F9 72               ld (hl),d
1204+ A2FA 23               inc hl
1205+ A2FB
1206+ A2FB 10 F9            djnz 6B
1207+ A2FD
1208+ A2FD C9               ret
1209+ A2FE
1210+ A2FE              Genera_coordenadas_de_disparo_Amadeus
1211+ A2FE
1212+ A2FE              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2FE              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2FE              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2FE
1216+ A2FE CD 1E 91         call Extrae_address
1217+ A301 CD F9 94         call Genera_coordenadas
1218+ A304
1219+ A304 3D               dec a
1220+ A305
1221+ A305 21 70 8C         ld hl,Coordenadas_disparo_certero
1222+ A308 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A309 23               inc hl
1224+ A30A 3A F0 8B         ld a,(Coordenada_X)
1225+ A30D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A30E
1227+ A30E AF               xor a
1228+ A30F 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A310
1230+ A310 C9               ret
1231+ A311
1232+ A311              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A311              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A311              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A311
1236+ A311              ; ----------------------------------------------
1237+ A311              ;
1238+ A311              ;   27/08/24
1239+ A311              ;
1240+ A311              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A311              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A311
1243+ A311              Detecta_impacto_en_disparo_de_Amadeus
1244+ A311
1245+ A311              Extraccion_de_datos
1246+ A311
1247+ A311 13               inc de
1248+ A312 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A313
1250+ A313 5E               ld e,(hl)
1251+ A314 23               inc hl
1252+ A315 56               ld d,(hl)
1253+ A316
1254+ A316 23               inc hl
1255+ A317
1256+ A317 4E               ld c,(hl)
1257+ A318 23               inc hl
1258+ A319 46               ld b,(hl)
1259+ A31A
1260+ A31A C5               push bc
1261+ A31B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A31C
1263+ A31C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A31C
1265+ A31C CD FD 99         call PreviousScan
1266+ A31F CD FD 99         call PreviousScan
1267+ A322
1268+ A322              Detecta_impacto_
1269+ A322
1270+ A322 1A               ld a,(de)
1271+ A323 A6               and (hl)
1272+ A324 C0               ret nz
1273+ A325
1274+ A325 13               inc de
1275+ A326 23               inc hl
1276+ A327
1277+ A327 1A               ld a,(de)
1278+ A328 A6               and (hl)
1279+ A329 C9               ret
1280+ A32A
1281+ A32A              ; -------------------------------------------------------------------------------------------------------------
1282+ A32A              ;
1283+ A32A              ;   25/11//24
1284+ A32A              ;
1285+ A32A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A32A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A32A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A32A              ;
1289+ A32A              ;   MODIFICA: HL,DE,BC y A.
1290+ A32A              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A32A              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A32A
1293+ A32A              Colision_Entidad_Amadeus
1294+ A32A
1295+ A32A              ; Posible contacto de entidad con Amadeus. ?????
1296+ A32A
1297+ A32A              ; Exclusiones:
1298+ A32A
1299+ A32A 3A 90 8C         ld a,(Shield)
1300+ A32D A7               and a
1301+ A32E C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A32F
1303+ A32F 21 66 8C         ld hl,Ctrl_3
1304+ A332 CB 76            bit 6,(hl)
1305+ A334 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A335
1307+ A335 21 6D 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A338 CB 56            bit 2,(hl)
1309+ A33A C0               ret nz
1310+ A33B
1311+ A33B DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1312+ A33E FE 14        	cp $14
1313+ A340 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A341
1315+ A341 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A344 A7               and a
1317+ A345 C0               ret nz
1318+ A346
1319+ A346              Genera_coordenadas_X
1320+ A346
1321+ A346              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A346              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A346
1324+ A346              ;   Limpiamos almacenes.
1325+ A346
1326+ A346              ;    call Limpia_Coordenadas_X
1327+ A346
1328+ A346              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A346
1330+ A346 21 72 8C         ld hl,Coordenadas_X_Entidad
1331+ A349 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1332+ A34C CD 72 A3         call Guarda_coordenadas_X
1333+ A34F
1334+ A34F              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A34F
1336+ A34F 3A AF 89         ld a,(CX_Amadeus)
1337+ A352 CD 72 A3         call Guarda_coordenadas_X
1338+ A355
1339+ A355 DD E5            push ix
1340+ A357 CD 86 A3         call Compara_coordenadas_X
1341+ A35A DD E1            pop ix
1342+ A35C
1343+ A35C C0               ret nz
1344+ A35D
1345+ A35D 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1346+ A35F DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1347+ A362
1348+ A362 DD 7D            ld a,ixl
1349+ A364 C6 04            add 4
1350+ A366 DD 6F            ld ixl,a
1351+ A368
1352+ A368 DD 22 6E 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1353+ A36C
1354+ A36C 21 6D 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1355+ A36F CB D6            set 2,(hl)
1356+ A371
1357+ A371 C9               ret
1358+ A372
1359+ A372               ; ----- ----- ----- ----- -----
1360+ A372
1361+ A372 77           Guarda_coordenadas_X ld (hl),a
1362+ A373 3C               inc a
1363+ A374 2C               inc l
1364+ A375 77               ld (hl),a
1365+ A376 3C               inc a
1366+ A377 2C               inc l
1367+ A378 77               ld (hl),a
1368+ A379 2C               inc l
1369+ A37A C9               ret
1370+ A37B
1371+ A37B AF           Limpia_Coordenadas_X xor a
1372+ A37C 06 06            ld b,6
1373+ A37E 21 75 8C         ld hl,Coordenadas_X_Amadeus
1374+ A381 77           1 ld (hl),a
1375+ A382 23               inc hl
1376+ A383 10 FC            djnz 1B
1377+ A385 C9               ret
1378+ A386
1379+ A386              ; ----- ----- ----- ----- -----
1380+ A386
1381+ A386              Compara_coordenadas_X
1382+ A386
1383+ A386 DD 21 72 8C      ld ix,Coordenadas_X_Entidad
1384+ A38A DD 7E 00         ld a,(ix+0)
1385+ A38D CD 9B A3         call Comparando
1386+ A390 C8               ret z
1387+ A391
1388+ A391 3C               inc a
1389+ A392 CD AA A3         call Comparando_1
1390+ A395 C8               ret z
1391+ A396
1392+ A396 3C               inc a
1393+ A397 CD AA A3         call Comparando_1
1394+ A39A C9               ret
1395+ A39B
1396+ A39B              ; ----- ----- ----- ----- -----
1397+ A39B              ;
1398+ A39B              ;   4/12/23
1399+ A39B              ;
1400+ A39B              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1401+ A39B
1402+ A39B              Comparando
1403+ A39B
1404+ A39B DD 2C            inc ixl
1405+ A39D DD 2C            inc ixl
1406+ A39F DD 2C            inc ixl
1407+ A3A1
1408+ A3A1 DD 46 00         ld b,(ix+0)
1409+ A3A4 DD 4E 01         ld c,(ix+1)
1410+ A3A7 DD 56 02         ld d,(ix+2)
1411+ A3AA
1412+ A3AA B8           Comparando_1 cp b
1413+ A3AB C8               ret z
1414+ A3AC B9               cp c
1415+ A3AD C8               ret z
1416+ A3AE BA               cp d
1417+ A3AF C9               ret
1418+ A3B0
1419+ A3B0              ; -----------------------------------------------------------------------
1420+ A3B0              ;
1421+ A3B0              ;   04/7/24
1422+ A3B0              ;
1423+ A3B0
1424+ A3B0              Detecta_colision_nave_entidad
1425+ A3B0
1426+ A3B0              ; Exclusiones:
1427+ A3B0
1428+ A3B0              ; Salimos de la rutina si no hay advertencia de posible colisión.
1429+ A3B0
1430+ A3B0 21 6D 8C     	ld hl,Impacto2
1431+ A3B3 CB 56        	bit 2,(hl)
1432+ A3B5 C8           	ret z
1433+ A3B6
1434+ A3B6              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1435+ A3B6
1436+ A3B6 2A B5 89         ld hl,(Pamm_Amadeus)
1437+ A3B9 CD 1E 91         call Extrae_address
1438+ A3BC 54               ld d,h
1439+ A3BD 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1440+ A3BE
1441+ A3BE 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1442+ A3C1 06 10            ld b,16                                        ; Contador de scanlines en B.
1443+ A3C3 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1444+ A3C6
1445+ A3C6 C5           1 push bc
1446+ A3C7 06 03            ld b,3
1447+ A3C9 E5               push hl
1448+ A3CA
1449+ A3CA              ; .db
1450+ A3CA
1451+ A3CA 1A           3 ld a,(de)
1452+ A3CB A7               and a
1453+ A3CC 20 03            jr nz,4F
1454+ A3CE
1455+ A3CE 2C               inc l
1456+ A3CF 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1457+ A3D1
1458+ A3D1 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1459+ A3D3 28 04            jr z,2F
1460+ A3D5
1461+ A3D5              ; Impacto.
1462+ A3D5 FD 2D            dec iyl
1463+ A3D7 28 22            jr z,5F
1464+ A3D9
1465+ A3D9 1C           2 inc e
1466+ A3DA 10 EE            djnz 3B
1467+ A3DC
1468+ A3DC E1               pop hl
1469+ A3DD
1470+ A3DD              ; Hay salto de línea en el puntero de impresión ???
1471+ A3DD
1472+ A3DD 7C               ld a,h
1473+ A3DE D6 57            sub $57
1474+ A3E0 20 0A            jr nz,6F
1475+ A3E2
1476+ A3E2              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1477+ A3E2
1478+ A3E2 2A B3 89         ld hl,(p.imp.amadeus)
1479+ A3E5 3E 20            ld a,$20
1480+ A3E7 A7               and a
1481+ A3E8 85               add l
1482+ A3E9 6F               ld l,a
1483+ A3EA 18 01            jr 7F
1484+ A3EC
1485+ A3EC 24           6 inc h
1486+ A3ED
1487+ A3ED C1           7 pop bc
1488+ A3EE 10 D6            djnz 1B
1489+ A3F0
1490+ A3F0              ;   Fin de la comparativa.
1491+ A3F0
1492+ A3F0              ;   NO HAY COLISIÓN !!!!!.
1493+ A3F0              ;
1494+ A3F0              ;   .db (Impacto) de Amadeus a "0".
1495+ A3F0              ;   RES el bit2 de (Impacto2).
1496+ A3F0              ;
1497+ A3F0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1498+ A3F0              ;   Lo colocamos a "0".
1499+ A3F0
1500+ A3F0 21 6D 8C         ld hl,Impacto2
1501+ A3F3 CB 96            res 2,(hl)
1502+ A3F5 2A 6E 8C         ld hl,(Entidad_sospechosa_de_colision)
1503+ A3F8 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1504+ A3FA C9               ret
1505+ A3FB
1506+ A3FB              ;   COLISIÓN !!!!!.
1507+ A3FB              ;
1508+ A3FB              ;   .db (Impacto) de Amadeus a "1".
1509+ A3FB              ;   SET el bit3 de (Impacto2).
1510+ A3FB              ;
1511+ A3FB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1512+ A3FB
1513+ A3FB E1           5 pop hl
1514+ A3FC C1               pop bc
1515+ A3FD
1516+ A3FD 21 B2 89         ld hl,Impacto_Amadeus
1517+ A400 36 01            ld (hl),1
1518+ A402 21 6D 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1519+ A405 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1520+ A407
1521+ A407 11 C0 87         ld de,Indice_Explosion_entidades
1522+ A40A 2A 6E 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1523+ A40D
1524+ A40D 23               inc hl
1525+ A40E 23               inc hl
1526+ A40F 23               inc hl
1527+ A410
1528+ A410 73               ld (hl),e
1529+ A411 23               inc hl
1530+ A412 72               ld (hl),d
1531+ A413
1532+ A413              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1533+ A413
1534+ A413 11 60 88         ld de,Indice_Explosion_Amadeus
1535+ A416 21 B5 89         ld hl,Pamm_Amadeus
1536+ A419
1537+ A419 73               ld (hl),e
1538+ A41A 23               inc hl
1539+ A41B 72               ld (hl),d
1540+ A41C
1541+ A41C C9               ret
1542+ A41D
1543+ A41D
1544+ A41D
# file closed: Disparo.asm
2135  A41D
2136  A41D              	SAVESNA "Pruebas.sna", START
2137  A41D
2138  A41D
2139  A41D
2140  A41D
# file closed: Banco_de_pruebas.asm
