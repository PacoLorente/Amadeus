# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 6F 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD CC A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 9D 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 98 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD B4 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 96 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 96 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 99 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD D2 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	10/11/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas).
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6B
  98+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A73 08 00
 100+ 8A75
 101+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7D 0F FE
 103+ 8A7F
 104+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB3
 118+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABB 06 00
 120+ 8ABD
 121+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC5 02 00
 123+ 8AC7
 124+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACF 04 00
 126+ 8AD1
 127+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD9 08 00
 129+ 8ADB
 130+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE3 02 00
 132+ 8AE5
 133+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AED 06 00
 135+ 8AEF
 136+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF7 06 00
 138+ 8AF9
 139+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF9
 141+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B29
 154+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5D
 168+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B65 06 00
 170+ 8B67
 171+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6F 02 00
 173+ 8B71
 174+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B79 04 00
 176+ 8B7B
 177+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B83 08 00
 179+ 8B85
 180+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8D 02 00
 182+ 8B8F
 183+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B97 06 00
 185+ 8B99
 186+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA1 06 00
 188+ 8BA3
 189+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD3
 202+ 8BD3
 203+ 8BD3
 204+ 8BD3
 205+ 8BD3
 206+ 8BD3
 207+ 8BD3
 208+ 8BD3
 209+ 8BD3
 210+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 EB 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 0F           Nivel_1 db 15									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01
  17+ 8BE1 01 01 01 01  	db 1,1,1,1,1
  17+ 8BE5 01
  18+ 8BE6 01 01 01 01  	db 1,1,1,1,1
  18+ 8BEA 01
  19+ 8BEB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BEC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 8BF0 01 02
  21+ 8BF2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 8BF6 01 02
  22+ 8BF8
# file closed: Niveles.asm
 150  8BF8
 151  8BF8              ; --------------------------------------------------------------------------------
 152  8BF8              ;
 153  8BF8              ; 12/05/24
 154  8BF8              ;
 155  8BF8              ; Parámetros DRAW.
 156  8BF8              ;
 157  8BF8
 158  8BF8              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BF8
 160  8BF8 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BF9              ;															- Patrón de movimiento.
 162  8BF9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BFB
 165  8BFB 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BFC              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BFC
 168  8BFC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BFC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BFC              ; Ejemplos.
 171  8BFC
 172  8BFC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BFC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BFC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BFC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BFC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BFC
 178  8BFC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BFD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BFD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BFD
 182  8BFD 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BFF              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BFF
 185  8BFF 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C01
 187  8C01              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C01
 189  8C01 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C03              ;														; _palabras que componen el "movimiento_masticado".
 191  8C03
 192  8C03              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C03
 194  8C03 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C04              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C04              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C04              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C04              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C04
 200  8C04 00           Ctrl_2 db 0
 201  8C05              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C05              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C05              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C05              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C05              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C05              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C05              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C05              ;
 209  8C05              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C05              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C05              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C05              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C05              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C05              ;														BIT 4, ???
 215  8C05              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C05
 217  8C05 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C06              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C06              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C06              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C06              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C06              ;
 223  8C06              ; 														DESCRIPCIÖN:
 224  8C06              ;
 225  8C06              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C06              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C06              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C06              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C06              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C06              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C06              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C06              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C06              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C06              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C06              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C06              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C06              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C06              ;
 239  8C06              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C06              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C06              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C06
 243  8C06              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C06
 245  8C06 00           Filas db 0												; Filas. [DRAW]
 246  8C07 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C08 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C0C
 250  8C0C              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C0C
 252  8C0C 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C0D              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C0D              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C0D
 256  8C0D              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C0D
 258  8C0D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C0D              ;
 260  8C0D              ;	COLORES: 0 ..... NEGRO
 261  8C0D              ;    		 1 ..... AZUL
 262  8C0D              ; 			 2 ..... ROJO
 263  8C0D              ;			 3 ..... MAGENTA
 264  8C0D              ; 			 4 ..... VERDE
 265  8C0D              ; 			 5 ..... CIAN
 266  8C0D              ;			 6 ..... AMARILLO
 267  8C0D              ; 			 7 ..... BLANCO
 268  8C0D
 269  8C0D 00 00        Indice_Sprite_der defw 0
 270  8C0F 00 00        Indice_Sprite_izq defw 0
 271  8C11 00 00        Puntero_DESPLZ_der defw 0
 272  8C13 00 00        Puntero_DESPLZ_izq defw 0
 273  8C15
 274  8C15 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C17 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C18 00           Columnas db 0
 277  8C19 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C1B              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C1B 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C1C
 281  8C1C              ; variables de control general.
 282  8C1C
 283  8C1C 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C1D
 285  8C1D              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C1D
 287  8C1D              Perfiles_de_velocidad
 288  8C1D
 289  8C1D 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C1E 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C1F 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C20 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C21
 294  8C21              ; Contadores de 16 bits.
 295  8C21
 296  8C21 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C23 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C25 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C27 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C29
 301  8C29              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C29
 303  8C29 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C2B 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C2D 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C2F              ;
 307  8C2F              ;
 308  8C2F 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C30              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C30              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C30 00           Incrementa_puntero_backup db 0
 312  8C31 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C32              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C32 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C33 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C34 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C35              ;
 318  8C35              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C35              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C35              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C35              ;
 322  8C35              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C35              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C35              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C35              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C35              ;
 327  8C35              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C35              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C35              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C35
 331  8C35 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C36
 333  8C36              ;														DESCRIPCIÓN:
 334  8C36              ;
 335  8C36              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C36              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C36              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C36              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C36              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C36              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C36
 342  8C36              ;														BIT 3, Recarga de nueva oleada.
 343  8C36              ;														BIT 4, Recarga de nueva oleada.
 344  8C36              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C36              ;														BIT 6, **** Frame completo.
 346  8C36              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C36
 348  8C36 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C38              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C38              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C38              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C38
 353  8C38              ; Gestión de ENTIDADES y CAJAS.
 354  8C38
 355  8C38 00 00        Puntero_store_caja defw 0
 356  8C3A 00 00        Puntero_restore_caja defw 0
 357  8C3C 00 00        Indice_restore_caja defw 0
 358  8C3E 00 00        Puntero_indice_master defw 0
 359  8C40
 360  8C40 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C41 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C42 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C43
 364  8C43 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C45 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C47              ;														; _ puntero (Indice_entidades).
 367  8C47
 368  8C47              ;---------------------------------------------------------------------------------------------------------------
 369  8C47              ;
 370  8C47              ;	13/10/24
 371  8C47              ;
 372  8C47              ;	Álbumes.
 373  8C47
 374  8C47 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C49              ;														; _variable para almacenar lo posición del puntero_
 376  8C49              ; 														; _de pila, SP.
 377  8C49 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C4B              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C4B
 380  8C4B              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C4B
 382  8C4B 00 00        Album_de_pintado defw 0
 383  8C4D 00 00        Album_de_borrado defw 0
 384  8C4F 00 00        Album_de_pintado_Amadeus defw 0
 385  8C51 00 00        Album_de_borrado_Amadeus defw 0
 386  8C53
 387  8C53 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C55 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C57
 390  8C57 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C59 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C5B
 393  8C5B
 394  8C5B 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C5D
 396  8C5D 00           Num_de_bytes_album_de_disparos db 0
 397  8C5E 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C5F
 399  8C5F 07           Numero_de_disparos_de_entidades db 7
 400  8C60
 401  8C60 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C61 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C62
 404  8C62 00 00        Techo_Scanlines_album defw 0
 405  8C64 00 00        Techo_Scanlines_album_2 defw 0
 406  8C66 00           Switch db 0
 407  8C67 00 00        Techo defw 0
 408  8C69 00 00        Scanlines_album_SP defw 0
 409  8C6B 00 89        India_SP defw Tabla_de_pintado
 410  8C6D 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C6F
 412  8C6F 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C70              ;
 414  8C70              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C70              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C70              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C70              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C70              ;																Habilita el borrado/pintado de sprites.
 419  8C70              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C70              ;																_ a la baja.
 421  8C70              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C70              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C70              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C70              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C70              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C70              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C70
 428  8C70 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C71              ;
 430  8C71              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C71
 432  8C71 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C72              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C72              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C72
 436  8C72              ; Gestión de Disparos.
 437  8C72
 438  8C72 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C74 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C76 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C77
 442  8C77              ;
 443  8C77              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C77              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C77              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C77              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C77
 448  8C77
 449  8C77
 450  8C77
 451  8C77
 452  8C77
 453  8C77
 454  8C77 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C79              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C79              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C79
 458  8C79 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C7B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C7B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C7E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C7E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C81              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C81
 465  8C81              ;---------------------------------------------------------------------------------------------------------------
 466  8C81
 467  8C81              ; Relojes y temporizaciones.
 468  8C81
 469  8C81 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C82 05           Clock_explosion_Amadeus db 5
 471  8C83 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C84
 473  8C84 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C86 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C88 00           Numero_rnd_disparos db 0
 476  8C89
 477  8C89 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C8B              ;Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 479  8C8B              ;																		; Repite la oleada de entidades.
 480  8C8B A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 481  8C8C A0           CLOCK_disparos_de_entidades db $a0
 482  8C8D
 483  8C8D              ;---------------------------------------------------------------------------------------------------------------
 484  8C8D
 485  8C8D              ; Gestión de NIVELES.
 486  8C8D
 487  8C8D 00           Nivel db 0												; Nivel actual del juego.
 488  8C8E 00 00        Puntero_indice_NIVELES defw 0
 489  8C90 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 490  8C92              ; 														; _ que definen el NIVEL.
 491  8C92
 492  8C92              ; ---------------------------------------------------------------------------------------------------------------
 493  8C92
 494  8C92              ; Temporizaciones Shield.
 495  8C92
 496  8C92 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 497  8C96 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 498  8C98 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 499  8C99 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 500  8C9A 00           Shield_3 db 0
 501  8C9B
 502  8C9B 07           Lives db 7
 503  8C9C
 504  8C9C              ; 	INICIO  *************************************************************************************************************************************************************************
 505  8C9C              ;
 506  8C9C              ;	13/11/24
 507  8C9C
 508  8C9C              START
 509  8C9C
 510  8C9C 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 511  8C9F 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 512  8CA1 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 513  8CA3 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 514  8CA5 F3           	DI
 515  8CA6
 516  8CA6              ; Limpiamos pantalla.
 517  8CA6
 518  8CA6 3E 07        	ld a,%00000111
 519  8CA8 CD 4E 95     	call Cls
 520  8CAB CD A9 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 521  8CAE
 522  8CAE              INICIALIZACION
 523  8CAE
 524  8CAE 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 525  8CB0 CD 47 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 526  8CB3 CD 2D 8F     	call Extrae_numero_aleatorio_y_avanza
 527  8CB6 6F           	ld l,a
 528  8CB7 26 00        	ld h,0
 529  8CB9 22 89 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 530  8CBC
 531  8CBC              ;	Inicia los álbumes de líneas.
 532  8CBC
 533  8CBC CD FB 90     	call Inicia_albumes_de_lineas
 534  8CBF CD 0B 91     	call Inicia_albumes_de_lineas_Amadeus
 535  8CC2 CD 18 91     	call Inicia_albumes_de_disparos
 536  8CC5
 537  8CC5              ;	Inicia 1er Nivel.
 538  8CC5
 539  8CC5 CD A9 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 540  8CC8 CD 77 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 541  8CCB              ;														   _reponiendo entidades eliminadas.
 542  8CCB CD DD 93     	call Prepara_Cajas_de_Entidades
 543  8CCE
 544  8CCE CD 2E 94     	call Inicia_Amadeus
 545  8CD1
 546  8CD1              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CD1              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CD1              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CD1 11 AE 89     	ld de,Amadeus_BOX
 550  8CD4 CD 1D 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 551  8CD7 CD 71 94     	call Limpiamos_bandeja_DRAW
 552  8CDA
 553  8CDA              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 554  8CDA
 555  8CDA 06 3C        	ld b,60
 556  8CDC CD EF 9D     2 call Amadeus_a_izquierda
 557  8CDF 10 FB        	djnz 2B
 558  8CE1
 559  8CE1 CD D9 90     	call Genera_datos_de_impresion_Amadeus
 560  8CE4
 561  8CE4              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 562  8CE4
 563  8CE4 CD 34 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 564  8CE7
 565  8CE7 CD B4 91     	call Inicia_Shield
 566  8CEA
 567  8CEA 2A 69 8C     6 ld hl,(Scanlines_album_SP)
 568  8CED 22 62 8C     	ld (Techo_Scanlines_album),hl
 569  8CF0
 570  8CF0 2A 4D 8C     	ld hl,(Album_de_borrado)
 571  8CF3 22 69 8C     	ld (Scanlines_album_SP),hl
 572  8CF6
 573  8CF6 21 00 89     	ld hl,Tabla_de_pintado
 574  8CF9 22 6B 8C     	ld (India_SP),hl
 575  8CFC
 576  8CFC 21 6F 8C     	ld hl,Ctrl_3
 577  8CFF CB C6        	set 0,(hl) 											; Indica Frame completo.
 578  8D01 CB D6        	set 2,(hl)
 579  8D03 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 580  8D05
 581  8D05 FB           	ei 													; Ha de apuntar a $5c3a.
 582  8D06
 583  8D06 76           	halt
 584  8D07
 585  8D07              ; ------------------------------------
 586  8D07
 587  8D07              Main
 588  8D07              ;
 589  8D07              ; 07/11/24.
 590  8D07
 591  8D07              ; Gestión de disparos.
 592  8D07
 593  8D07 CD 02 8F     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 594  8D0A CD E3 9F     	call Motor_de_disparos_entidades
 595  8D0D CD 78 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 596  8D10
 597  8D10              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 598  8D10              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 599  8D10              ; Este hecho lo indica el bit2 de (Impacto2).
 600  8D10
 601  8D10 CD 19 A4     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 602  8D13
 603  8D13              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 604  8D13
 605  8D13 21 8C 8C     	ld hl,CLOCK_disparos_de_entidades
 606  8D16 35           	dec (hl)
 607  8D17 CC 43 8E     	call z,Autoriza_disparo_de_entidades
 608  8D1A
 609  8D1A 2A 89 8C     	ld hl,(Clock_next_entity)
 610  8D1D ED 4B 78 5C  	ld bc,(FRAMES)
 611  8D21 A7           	and a
 612  8D22 ED 42        	sbc hl,bc
 613  8D24 20 1B        	jr nz,1F
 614  8D26
 615  8D26              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 616  8D26
 617  8D26 CD 2D 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 618  8D29 CD 44 8F     	call Define_Clock_next_entity
 619  8D2C
 620  8D2C              ; GESTIÓN DE ENTIDADES.
 621  8D2C
 622  8D2C              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 623  8D2C              ; _ (Clock_next_entity) para la siguiente entidad.
 624  8D2C
 625  8D2C              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 626  8D2C              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 627  8D2C              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 628  8D2C
 629  8D2C 21 41 8C     	ld hl,Numero_parcial_de_entidades
 630  8D2F 46           	ld b,(hl)
 631  8D30 3A 42 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 632  8D33 B8           	cp b
 633  8D34 28 0B        	jr z,1F
 634  8D36 30 09        	jr nc,1F
 635  8D38
 636  8D38              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 637  8D38
 638  8D38 3C           	inc a
 639  8D39 32 42 8C     	ld (Entidades_en_curso),a
 640  8D3C
 641  8D3C 21 70 8C     	ld hl,Ctrl_4
 642  8D3F CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 643  8D41
 644  8D41              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 645  8D41
 646  8D41              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 647  8D41              ;	call Define_Clock_next_entity
 648  8D41
 649  8D41 3A 42 8C     1 ld a,(Entidades_en_curso)
 650  8D44 A7           	and a
 651  8D45 CA E9 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 652  8D48 47           	ld b,a													; No hay entidades que gestionar.
 653  8D49
 654  8D49              ; ( Código que ejecutamos con cada entidad: ).
 655  8D49
 656  8D49              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 657  8D49              ;
 658  8D49              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 659  8D49
 660  8D49 21 00 89     	ld hl,Tabla_de_pintado
 661  8D4C 22 6B 8C     	ld (India_SP),hl
 662  8D4F
 663  8D4F 21 6F 8C     	ld hl,Ctrl_3
 664  8D52 CB D6        	set 2,(hl)
 665  8D54 CD D7 8E     	call Change
 666  8D57
 667  8D57 C5           2 push bc 												; Nº de entidades en curso.
 668  8D58
 669  8D58 DD 2A 38 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 670  8D5C CD 85 91     	call Salta_caja_de_entidades_vacia
 671  8D5F
 672  8D5F              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 673  8D5F
 674  8D5F DD 7E 00     	ld a,(ix+0)
 675  8D62 CB 7F        	bit 7,a
 676  8D64 28 11        	jr z,5F
 677  8D66
 678  8D66              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 679  8D66
 680  8D66 21 70 8C     	ld hl,Ctrl_4
 681  8D69 CB 46        	bit 0,(hl)
 682  8D6B CC 94 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 683  8D6E 28 E8        	jr z,6B
 684  8D70
 685  8D70 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 686  8D72 CB BF        	res 7,a
 687  8D74 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 688  8D77
 689  8D77              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 690  8D77              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 691  8D77
 692  8D77 3A 76 8C     5 ld a,(Impacto2)
 693  8D7A CB 5F        	bit 3,a
 694  8D7C C4 0F A2     	call nz,Compara_con_coordenadas_de_disparo
 695  8D7F
 696  8D7F              ; Existe colisión entre esta entidad y Amadeus ???
 697  8D7F
 698  8D7F DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 699  8D82 CB 4F        	bit 1,a
 700  8D84 C4 9F 92     	call nz,Genera_explosion
 701  8D87 20 43        	jr nz,Gestiona_siguiente_entidad
 702  8D89
 703  8D89 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 704  8D8C A7           	and a
 705  8D8D 28 0C        	jr z,3F
 706  8D8F
 707  8D8F              ; IMPACTO en entidad por colisión con Amadeus.
 708  8D8F
 709  8D8F              ; 5/7/24
 710  8D8F              ; Nota importante:
 711  8D8F              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 712  8D8F              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 713  8D8F              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 714  8D8F
 715  8D8F 3A B2 89     	ld a,(Impacto_Amadeus)
 716  8D92 A7           	and a
 717  8D93 C4 9F 92     	call nz,Genera_explosion
 718  8D96 20 34        	jr nz,Gestiona_siguiente_entidad
 719  8D98
 720  8D98              ; Falsa colisión !!!
 721  8D98
 722  8D98 32 FC 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 723  8D9B
 724  8D9B              ; -------------------------------------------
 725  8D9B
 726  8D9B CD 88 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 727  8D9E CD AF 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 728  8DA1 CD 78 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 729  8DA4
 730  8DA4 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 731  8DA6 DD 2A FD 8B  	ld ix,(Puntero_de_impresion)
 732  8DAA CD 8E 95     	call Genera_datos_de_impresion
 733  8DAD DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 734  8DAF
 735  8DAF CD 94 94     	call Decrementa_Contador_de_mov_masticados
 736  8DB2
 737  8DB2              ; -------------------------------------------
 738  8DB2
 739  8DB2              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 740  8DB2
 741  8DB2 2A FD 8B     	ld hl,(Puntero_de_impresion)
 742  8DB5 CD 62 95     	call Genera_coordenadas
 743  8DB8
 744  8DB8 ED 4B F9 8B  	ld bc,(Coordenada_X)
 745  8DBC
 746  8DBC DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 747  8DBF DD 70 02     	ld (ix+2),b
 748  8DC2
 749  8DC2              ; TODO: Generamos disparo ???
 750  8DC2
 751  8DC2 3A 61 8C     	ld a,(Permiso_de_disparo_Entidades)
 752  8DC5 A7           	and a
 753  8DC6 C4 58 8E     	call nz,Entidad_genera_disparo_si_procede
 754  8DC9
 755  8DC9 CD 93 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 756  8DCC
 757  8DCC              Gestiona_siguiente_entidad
 758  8DCC
 759  8DCC CD 94 91     	call Incrementa_punteros_de_cajas
 760  8DCF
 761  8DCF C1           	pop bc
 762  8DD0 10 85        	djnz 2B
 763  8DD2
 764  8DD2              ; Hemos gestionado todas las entidades.
 765  8DD2              ; ----- ----- -----
 766  8DD2
 767  8DD2 CD 9C 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 768  8DD5 CD B3 8F     	call Ordena_tabla_de_impresion
 769  8DD8 CD 34 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 770  8DDB
 771  8DDB CD 59 8F     	call Borra_diferencia
 772  8DDE
 773  8DDE 3A 6F 8C     	ld a,(Ctrl_3)
 774  8DE1 CB 5F        	bit 3,a
 775  8DE3 20 04        	jr nz,Gestion_de_Amadeus
 776  8DE5
 777  8DE5 EB           	ex de,hl
 778  8DE6 71           	ld (hl),c
 779  8DE7 2C           	inc l
 780  8DE8 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 781  8DE9
 782  8DE9              ;! GESTIONA AMADEUS !!!!!!!!!!
 783  8DE9
 784  8DE9              Gestion_de_Amadeus
 785  8DE9
 786  8DE9 21 6F 8C     	ld hl,Ctrl_3
 787  8DEC CB 76        	bit 6,(hl)
 788  8DEE 28 13        	jr z,Amadeus_vivo
 789  8DF0
 790  8DF0              ; Amadeus ha sido destruido.
 791  8DF0              ; Decrementa (Temp_new_live).
 792  8DF0
 793  8DF0 21 83 8C     	ld hl,Temp_new_live
 794  8DF3 35           	dec (hl)
 795  8DF4 20 26        	jr nz,End_frame
 796  8DF6
 797  8DF6              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 798  8DF6
 799  8DF6 21 9B 8C     	ld hl,Lives
 800  8DF9 35           	dec (hl)
 801  8DFA
 802  8DFA              ;! Fin del juego
 803  8DFA
 804  8DFA F3           	di
 805  8DFB 28 FE        	jr z,$
 806  8DFD FB           	ei
 807  8DFE
 808  8DFE              ; Nueva nave.
 809  8DFE
 810  8DFE CD 75 8E     	call Reinicia_Amadeus
 811  8E01 18 19        	jr End_frame
 812  8E03
 813  8E03              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 814  8E03
 815  8E03              Amadeus_vivo
 816  8E03
 817  8E03 3A B2 89     	ld a,(Impacto_Amadeus)
 818  8E06 A7           	and a
 819  8E07 C4 12 93     	call nz, Genera_explosion_Amadeus
 820  8E0A 20 10        	jr nz, End_frame
 821  8E0C
 822  8E0C CD 7C 92     	call Teclado
 823  8E0F 21 6F 8C     	ld hl,Ctrl_3
 824  8E12
 825  8E12 CB 6E        	bit 5,(hl)
 826  8E14 28 06        	jr z,End_frame
 827  8E16
 828  8E16              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 829  8E16
 830  8E16 CD F2 8E     	call Change_Amadeus
 831  8E19 CD D9 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 832  8E1C
 833  8E1C              End_frame
 834  8E1C
 835  8E1C              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 836  8E1C              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 837  8E1C
 838  8E1C CD 3A A1     	call Genera_datos_de_impresion_disparos_Entidades
 839  8E1F CD FE A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 840  8E22 CD 54 A2     	call Calcula_bytes_pintado_disparos
 841  8E25 CD 61 A2     	call Limpia_album_de_pintado_disparos_entidades
 842  8E28
 843  8E28              ; ------------ ------------- --------------
 844  8E28
 845  8E28 2A 4D 8C     	ld hl,(Album_de_borrado)
 846  8E2B 22 69 8C     	ld (Scanlines_album_SP),hl
 847  8E2E
 848  8E2E 21 6F 8C     	ld hl,Ctrl_3
 849  8E31 CB C6        	set 0,(hl) 											; Indica Frame completo.
 850  8E33 CB 9E        	res 3,(hl)
 851  8E35 CB A6        	res 4,(hl)
 852  8E37
 853  8E37 21 70 8C     	ld hl,Ctrl_4
 854  8E3A CB 86        	res 0,(hl)
 855  8E3C
 856  8E3C AF           	xor a
 857  8E3D D3 FE        	out ($fe),a
 858  8E3F
 859  8E3F 76           	halt
 860  8E40
 861  8E40              ; ----------------------------------------
 862  8E40
 863  8E40              ;	ld a,(Ctrl_1) 										; Existe Loop?
 864  8E40              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 865  8E40 CA 07 8D     	jp z,Main
 866  8E43
 867  8E43              ;------------------------------------------
 868  8E43              ;
 869  8E43              ;	07/11/24
 870  8E43
 871  8E43              Autoriza_disparo_de_entidades
 872  8E43
 873  8E43 3E 01        	ld a,1
 874  8E45 32 61 8C     	ld (Permiso_de_disparo_Entidades),a
 875  8E48
 876  8E48 3A 8B 8C     	ld a,(Repone_CLOCK_disparos)
 877  8E4B FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 878  8E4D 38 02        	jr c,1F
 879  8E4F
 880  8E4F              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 881  8E4F              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 882  8E4F              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 883  8E4F
 884  8E4F D6 03        	sub 3
 885  8E51
 886  8E51 32 8B 8C     1 ld (Repone_CLOCK_disparos),a
 887  8E54 32 8C 8C     	ld (CLOCK_disparos_de_entidades),a
 888  8E57
 889  8E57 C9           	ret
 890  8E58
 891  8E58              ;------------------------------------------
 892  8E58              ;
 893  8E58              ;	14/09/24
 894  8E58              ;
 895  8E58              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 896  8E58
 897  8E58              Entidad_genera_disparo_si_procede
 898  8E58
 899  8E58 2A 86 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 900  8E5B CB 06        	rlc (hl)
 901  8E5D
 902  8E5D DC 8A A1     	call c,Genera_disparo_de_entidad_maldosa
 903  8E60
 904  8E60 C9           	ret
 905  8E61
 906  8E61              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 907  8E61              ;
 908  8E61              ;	30/09/24
 909  8E61
 910  8E61              Actuaiza_sp_de_disparos_de_entidades
 911  8E61
 912  8E61 2A 86 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 913  8E64 23           	inc hl
 914  8E65 22 86 8C     	ld (Puntero_num_aleatorios_disparos),hl
 915  8E68
 916  8E68 11 FD 88     	ld de,Numeros_aleatorios+7
 917  8E6B 7B           	ld a,e
 918  8E6C 95           	sub l
 919  8E6D C0           	ret nz
 920  8E6E
 921  8E6E 21 F6 88     1 ld hl,Numeros_aleatorios
 922  8E71 22 86 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 923  8E74 C9           	ret
 924  8E75
 925  8E75              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 926  8E75              ;
 927  8E75              ;	24/07/24
 928  8E75
 929  8E75              Reinicia_Amadeus
 930  8E75
 931  8E75              ;	Reinicia posición y estado.
 932  8E75
 933  8E75 21 CF 50     	ld hl,$50cf
 934  8E78 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 935  8E7B 21 CC DC     	ld hl,$dccc
 936  8E7E 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 937  8E81 21 3D 00     	ld hl,$003d
 938  8E84 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 939  8E87
 940  8E87              ;	limpiamos el álbum de borrado.
 941  8E87
 942  8E87 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
 943  8E8A
 944  8E8A AF           	xor a
 945  8E8B 77           	ld (hl),a
 946  8E8C
 947  8E8C E5           	push hl
 948  8E8D D1           	pop de
 949  8E8E 13           	inc de
 950  8E8F
 951  8E8F 01 23 00     	ld bc,35
 952  8E92 ED B0        	ldir
 953  8E94
 954  8E94 CD D9 90     	call Genera_datos_de_impresion_Amadeus
 955  8E97
 956  8E97              ;	Reinicia temporizaciones.
 957  8E97
 958  8E97 CD B4 91     	call Inicia_Shield
 959  8E9A
 960  8E9A 3E 5A        	ld a,90
 961  8E9C 32 98 8C     	ld (Shield),a
 962  8E9F
 963  8E9F 3E 64        	ld a,100
 964  8EA1 32 83 8C     	ld (Temp_new_live),a
 965  8EA4
 966  8EA4              ; 	Restauramos el FLAG: Amadeus vivo.
 967  8EA4
 968  8EA4 21 6F 8C     	ld hl,Ctrl_3
 969  8EA7 CB B6        	res 6,(hl)
 970  8EA9
 971  8EA9              ;	Fuerza la impresión de la nave en el siguiente frame.
 972  8EA9
 973  8EA9 21 6F 8C      	ld hl,Ctrl_3
 974  8EAC CB EE        	set 5,(hl)
 975  8EAE
 976  8EAE C9           	ret
 977  8EAF
 978  8EAF              ; --------------------------------------------------------------------------------------------------------------
 979  8EAF              ;
 980  8EAF              ;	23/11/24
 981  8EAF
 982  8EAF              Ajusta_velocidad_entidad
 983  8EAF
 984  8EAF DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 985  8EB2 A7           	and a
 986  8EB3 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 987  8EB4              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 988  8EB4              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 989  8EB4
 990  8EB4
 991  8EB4              ; Incrementa (Contador_de_vueltas)x2.
 992  8EB4              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 993  8EB4
 994  8EB4              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 995  8EB4              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 996  8EB4              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 997  8EB4              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 998  8EB4              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 999  8EB4
1000  8EB4
1001  8EB4 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1002  8EB6 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1003  8EB9 E6 10        	and $10
1004  8EBB C8           	ret z
1005  8EBC
1006  8EBC              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1007  8EBC
1008  8EBC DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1009  8EBF CB 2F        	sra a
1010  8EC1 CB 2F        	sra a
1011  8EC3 DD 77 0B     	ld (ix+11),a
1012  8EC6
1013  8EC6 DD 6E 07     	ld l,(ix+7)
1014  8EC9 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1015  8ECC
1016  8ECC              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1017  8ECC 23           	inc hl
1018  8ECD 23           	inc hl
1019  8ECE 23           	inc hl
1020  8ECF 23           	inc hl
1021  8ED0              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1022  8ED0
1023  8ED0 DD 75 07     	ld (ix+7),l
1024  8ED3 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1025  8ED6
1026  8ED6 C9           	ret
1027  8ED7
1028  8ED7              ; --------------------------------------------------------------------------------------------------------------
1029  8ED7              ;
1030  8ED7              ;	25/08/24
1031  8ED7
1032  8ED7              Change
1033  8ED7
1034  8ED7 3A 66 8C     	ld a,(Switch)
1035  8EDA EE 01        	xor 1
1036  8EDC 32 66 8C     	ld (Switch),a
1037  8EDF 2A 4B 8C     	ld hl,(Album_de_pintado)
1038  8EE2 ED 5B 4D 8C  	ld de,(Album_de_borrado)
1039  8EE6 EB           	ex de,hl
1040  8EE7 22 4B 8C     	ld (Album_de_pintado),hl
1041  8EEA 22 69 8C     	ld (Scanlines_album_SP),hl
1042  8EED ED 53 4D 8C  	ld (Album_de_borrado),de
1043  8EF1 C9           	ret
1044  8EF2
1045  8EF2              Change_Amadeus
1046  8EF2
1047  8EF2 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1048  8EF5 ED 5B 51 8C  	ld de,(Album_de_borrado_Amadeus)
1049  8EF9 EB           	ex de,hl
1050  8EFA 22 4F 8C     	ld (Album_de_pintado_Amadeus),hl
1051  8EFD ED 53 51 8C  	ld (Album_de_borrado_Amadeus),de
1052  8F01 C9           	ret
1053  8F02
1054  8F02              Change_Disparos
1055  8F02
1056  8F02              ; Álbumes de Amadeus.
1057  8F02
1058  8F02 2A 53 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1059  8F05 ED 5B 55 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1060  8F09 EB           	ex de,hl
1061  8F0A 22 53 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1062  8F0D ED 53 55 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1063  8F11 CD 49 A2     	call Limpia_album_de_pintado_disparos_Amadeus
1064  8F14
1065  8F14              ; Álbumes de entidades.
1066  8F14
1067  8F14 2A 57 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1068  8F17 ED 5B 59 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1069  8F1B EB           	ex de,hl
1070  8F1C 22 57 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1071  8F1F ED 53 59 8C  	ld (Album_de_borrado_disparos_Entidades),de
1072  8F23 22 5B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1073  8F26
1074  8F26 3A 5D 8C     	ld a,(Num_de_bytes_album_de_disparos)
1075  8F29 32 5E 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1076  8F2C
1077  8F2C C9           	ret
1078  8F2D
1079  8F2D              ; ------------------------------------
1080  8F2D              ;
1081  8F2D              ; 1/05/24
1082  8F2D
1083  8F2D              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1084  8F2D              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1085  8F2D
1086  8F2D              ;	DESTRUYE: HL,DE,A
1087  8F2D              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1088  8F2D
1089  8F2D              ;	Variables implicadas: (RND_SP).
1090  8F2D
1091  8F2D              Extrae_numero_aleatorio_y_avanza
1092  8F2D
1093  8F2D 21 FD 88     	ld hl,Numeros_aleatorios+7
1094  8F30 EB           	ex de,hl
1095  8F31 2A 84 8C     	ld hl,(RND_SP)
1096  8F34
1097  8F34 7B           	ld a,e
1098  8F35 95           	sub l
1099  8F36 20 06        	jr nz,1F
1100  8F38
1101  8F38              ; Sitúa HL al principio de la tabla de nº aleatorios.
1102  8F38
1103  8F38 21 F6 88     	ld hl,Numeros_aleatorios
1104  8F3B 22 84 8C     	ld (RND_SP),HL
1105  8F3E
1106  8F3E              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1107  8F3E
1108  8F3E 7E           1 ld a,(hl)
1109  8F3F 23           	inc hl
1110  8F40 22 84 8C     	ld (RND_SP),hl
1111  8F43 C9           	ret
1112  8F44
1113  8F44              ; ------------------------------------
1114  8F44              ;
1115  8F44              ; 1/05/24
1116  8F44
1117  8F44              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1118  8F44              ; (1 a 4 segundos).
1119  8F44              ; Actualizamos (Clock_next_entity) con A.
1120  8F44
1121  8F44              ;	DESTRUYE: A y B.
1122  8F44              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1123  8F44              ;			 Actualiza (Clock_next_entity) con A.
1124  8F44
1125  8F44              ;	Variables implicadas: (Clock_next_entity).
1126  8F44
1127  8F44              ; Notas:
1128  8F44
1129  8F44              ; 	$32 1 seg.
1130  8F44              ; 	$64 2 seg.
1131  8F44              ; 	$96 3 seg.
1132  8F44              ; 	$c8 4 seg.
1133  8F44              ; 	$fa 5 seg.
1134  8F44
1135  8F44              ; $ffff 1310,7 seg, 22 minutos.
1136  8F44
1137  8F44              ;	$0100  5 seg. aproximadamente.
1138  8F44              ;	$0200 10 seg. aproximadamente.
1139  8F44              ;	$0300 15 seg. aproximadamente.
1140  8F44              ;	$0400 20 seg. aproximadamente.
1141  8F44              ;	$0500 25 seg. aproximadamente.
1142  8F44              ;	$0600 30 seg. aproximadamente.
1143  8F44
1144  8F44              Define_Clock_next_entity
1145  8F44
1146  8F44 FE 34        	cp $34
1147  8F46 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1148  8F48
1149  8F48              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1150  8F48
1151  8F48 4F           3 ld c,a
1152  8F49 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1153  8F4B 2A 78 5C     	ld hl,(FRAMES)
1154  8F4E A7           	and a
1155  8F4F ED 4A        	adc hl,bc
1156  8F51 22 89 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1157  8F54 C9           	ret
1158  8F55
1159  8F55 3E 34        1 ld a,$34
1160  8F57 18 EF        	jr 3B
1161  8F59
1162  8F59              ; ------------------------------------
1163  8F59              ;
1164  8F59              ; 18/03/24
1165  8F59
1166  8F59              Borra_diferencia
1167  8F59
1168  8F59 ED 4B 69 8C  	ld bc,(Scanlines_album_SP)
1169  8F5D
1170  8F5D 3A 66 8C     	ld a,(Switch)
1171  8F60 A7           	and a
1172  8F61 28 08        	jr z,2F
1173  8F63
1174  8F63 2A 64 8C     	ld hl,(Techo_Scanlines_album_2)
1175  8F66 11 64 8C     	ld de,Techo_Scanlines_album_2
1176  8F69 18 06        	jr 3F
1177  8F6B
1178  8F6B 2A 62 8C     2 ld hl,(Techo_Scanlines_album)
1179  8F6E 11 62 8C     	ld de,Techo_Scanlines_album
1180  8F71
1181  8F71              ; Diferencia.
1182  8F71
1183  8F71 ED 42        3 sbc hl,bc
1184  8F73
1185  8F73 C8           	ret z
1186  8F74 D8           	ret c
1187  8F75
1188  8F75              ; Nuevo techo, (más bajo que el anterior).
1189  8F75              ; Fijamos nuevo techo y borramos bytes sobrantes.
1190  8F75
1191  8F75 EB           	ex de,hl
1192  8F76
1193  8F76 71           	ld (hl),c
1194  8F77 2C           	inc l
1195  8F78 70           	ld (hl),b
1196  8F79
1197  8F79 AF           	xor a
1198  8F7A 43           	ld b,e
1199  8F7B
1200  8F7B 2A 69 8C     	ld hl,(Scanlines_album_SP)
1201  8F7E
1202  8F7E 77           1 ld (hl),a
1203  8F7F 23           	inc hl
1204  8F80 10 FC        	djnz 1B
1205  8F82
1206  8F82              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1207  8F82
1208  8F82 21 6F 8C     	ld hl,Ctrl_3
1209  8F85 CB DE        	set 3,(hl)
1210  8F87
1211  8F87 C9           	ret
1212  8F88
1213  8F88              ; --------------------------------------------------------------------------------------------------------------
1214  8F88              ;
1215  8F88              ;	23/11/24
1216  8F88              ;
1217  8F88              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1218  8F88
1219  8F88              Entidad_a_Tabla_de_pintado
1220  8F88
1221  8F88              ; Almacena la Coordenada Y de la entidad en curso.
1222  8F88
1223  8F88              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1224  8F88
1225  8F88 DD 7E 02     	ld a,(ix+2)
1226  8F8B 2A 6B 8C     	ld hl,(India_SP)
1227  8F8E 77           	ld (hl),a
1228  8F8F 2C           	inc l
1229  8F90
1230  8F90              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1231  8F90
1232  8F90 ED 5B 69 8C  	ld de,(Scanlines_album_SP)
1233  8F94
1234  8F94 73           	ld (hl),e
1235  8F95 2C           	inc l
1236  8F96 72           	ld (hl),d
1237  8F97 2C           	inc l
1238  8F98
1239  8F98 22 6B 8C     	ld (India_SP),hl
1240  8F9B
1241  8F9B C9           	ret
1242  8F9C
1243  8F9C              ; --------------------------------------------------------------------------------------------------------------
1244  8F9C              ;
1245  8F9C              ;	27/03/24
1246  8F9C              ;
1247  8F9C
1248  8F9C              Inicializa_India_y_limpia_Tabla_de_impresion
1249  8F9C
1250  8F9C 2A 6B 8C     	ld hl,(India_SP)
1251  8F9F 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1252  8FA2
1253  8FA2 79           	ld a,c
1254  8FA3 95           	sub l
1255  8FA4 28 06        	jr z,2F
1256  8FA6 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1257  8FA7              ;														; _ y pasamos a inicializar (India_SP).
1258  8FA7 AF           	xor a
1259  8FA8
1260  8FA8 77           1 ld (hl),a
1261  8FA9 2C           	inc l
1262  8FAA 10 FC        	djnz 1B												; Limpia Tabla.
1263  8FAC
1264  8FAC 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1265  8FAF 22 6B 8C     	ld (India_SP),hl
1266  8FB2
1267  8FB2 C9           	ret
1268  8FB3
1269  8FB3              ; --------------------------------------------------------------------------------------------------------------
1270  8FB3              ;
1271  8FB3              ;	31/3/24
1272  8FB3
1273  8FB3              Ordena_tabla_de_impresion
1274  8FB3
1275  8FB3              ; 5794 T/states.
1276  8FB3              ; 6278 T/states.
1277  8FB3              ; 5310 T/states.
1278  8FB3
1279  8FB3              ; Inicializamos punteros (India_SP) e (India_2_SP).
1280  8FB3              ; Inicializamos contador de comparaciones, [C].
1281  8FB3              ; Cargamos los registros A y B para efectuar comparación.
1282  8FB3
1283  8FB3 FD 2E 00     	ld iyl,0
1284  8FB6
1285  8FB6 3A 42 8C     	ld a,(Entidades_en_curso)
1286  8FB9 FE 04        	cp 4 	;	4
1287  8FBB D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1288  8FBC
1289  8FBC 3D           	dec a
1290  8FBD 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1291  8FBE 51           	ld d,c 										; Copia de respaldo.
1292  8FBF
1293  8FBF 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1294  8FC0
1295  8FC0 21 03 89     	ld hl,Tabla_de_pintado+3
1296  8FC3 46           	ld b,(hl)
1297  8FC4 22 6D 8C     	ld (India_2_SP),hl
1298  8FC7
1299  8FC7 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1300  8FC8 DC F0 8F     	call c, Avanza_India_2_SP
1301  8FCB CC F0 8F     	call z, Avanza_India_2_SP
1302  8FCE
1303  8FCE FD 2D        	dec iyl
1304  8FD0 28 18        	jr z,2F
1305  8FD2
1306  8FD2
1307  8FD2              ; --------------------------------------------------------------------------------------------------------------
1308  8FD2              ;
1309  8FD2              ;	7/4/24
1310  8FD2
1311  8FD2              Trueque
1312  8FD2
1313  8FD2              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1314  8FD2              ;  			A contiene en nº de fila de (India_SP).
1315  8FD2              ;			HL contiene (India_2_SP).
1316  8FD2
1317  8FD2 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1318  8FD3 E5           	push hl										; Preservo (India_2_SP).
1319  8FD4
1320  8FD4 ED 5B 6B 8C  	ld de,(India_SP)
1321  8FD8 EB           	ex de,hl
1322  8FD9 70           	ld (hl),b
1323  8FDA 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1324  8FDB
1325  8FDB CD 1C 90     	call Intercambia_1_byte
1326  8FDE CD 1C 90     	call Intercambia_1_byte
1327  8FE1
1328  8FE1
1329  8FE1              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1330  8FE1              ; Recuperamos (India_2_SP) en HL.
1331  8FE1
1332  8FE1 2A 6B 8C     	ld hl,(India_SP)
1333  8FE4 7E           	ld a,(hl)
1334  8FE5
1335  8FE5 E1           	pop hl
1336  8FE6 D1           	pop de
1337  8FE7
1338  8FE7              ; --------------------------------------------------------------------------------------------------------------
1339  8FE7
1340  8FE7 CD F0 8F     	call Avanza_India_2_SP
1341  8FEA
1342  8FEA 14           2 inc d
1343  8FEB 15           	dec d
1344  8FEC C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1345  8FED 18 D8        	jr 1B
1346  8FEF
1347  8FEF C9           	ret
1348  8FF0
1349  8FF0              ; ----- ----- ----- ----- -----
1350  8FF0
1351  8FF0              Avanza_India_2_SP
1352  8FF0
1353  8FF0 0D           	dec c
1354  8FF1 28 0A        	jr z,Avanza_punteros_indios
1355  8FF3
1356  8FF3 FD 2C        	inc iyl
1357  8FF5
1358  8FF5 2C           	inc l
1359  8FF6 2C           	inc l
1360  8FF7 2C           	inc l
1361  8FF8
1362  8FF8 46           	ld b,(hl)
1363  8FF9 22 6D 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1364  8FFC
1365  8FFC C9           	ret
1366  8FFD
1367  8FFD              ; ----- ----- ----- ----- -----
1368  8FFD
1369  8FFD              Avanza_punteros_indios
1370  8FFD
1371  8FFD 15           	dec d
1372  8FFE 28 15        	jr z,Prepara_salida
1373  9000
1374  9000 4A           	ld c,d
1375  9001
1376  9001 2A 6B 8C     	ld hl,(India_SP)
1377  9004 2C           	inc l
1378  9005 2C           	inc l
1379  9006 2C           	inc l
1380  9007 7E           	ld a,(hl)
1381  9008 22 6B 8C     	ld (India_SP),hl
1382  900B
1383  900B 2C           	inc l
1384  900C 2C           	inc l
1385  900D 2C           	inc l
1386  900E 46           	ld b,(hl)
1387  900F 22 6D 8C     	ld (India_2_SP),hl
1388  9012
1389  9012 FD 2C        	inc iyl
1390  9014
1391  9014 C9           	ret
1392  9015
1393  9015              Prepara_salida
1394  9015
1395  9015 21 00 89     	ld hl,Tabla_de_pintado
1396  9018 22 6B 8C     	ld (India_SP),hl
1397  901B C9           	ret
1398  901C
1399  901C
1400  901C 2C           Intercambia_1_byte inc l
1401  901D 1C           	inc e
1402  901E 46           	ld b,(hl)
1403  901F 1A           	ld a,(de)
1404  9020 EB           	ex de,hl
1405  9021 70           	ld (hl),b
1406  9022 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1407  9023 C9           	ret
1408  9024
1409  9024              ; -----------------------------------------------------------------------------------
1410  9024              ;
1411  9024              ;	20/01/24
1412  9024              ;
1413  9024              ;
1414  9024
1415  9024              Construye_movimientos_masticados_entidad
1416  9024
1417  9024 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1418  9027 E5           	push hl
1419  9028 CD 6B 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1420  902B              ;															; _ el (Contador_de_mov_masticados).
1421  902B CD 50 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1422  902E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1423  902E CD 75 9A     	call Recompone_posicion_inicio
1424  9031
1425  9031 CD A5 97     1 call Draw
1426  9034 CD 50 90     	call Guarda_movimiento_masticado
1427  9037
1428  9037 CD 22 9E     	call Movimiento
1429  903A
1430  903A 3A 6F 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1431  903D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1432  903F 28 F0        	jr z,1B
1433  9041
1434  9041              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1435  9041              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1436  9041
1437  9041 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1438  9042 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1439  9045
1440  9045              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1441  9045
1442  9045 CD 86 9F     	call Situa_en_contador_general_de_mov_masticados
1443  9048
1444  9048              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1445  9048              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1446  9048
1447  9048 ED 4B 01 8C  	ld bc,(Contador_de_mov_masticados)
1448  904C
1449  904C 71           	ld (hl),c
1450  904D 23           	inc hl
1451  904E 70           	ld (hl),b
1452  904F
1453  904F C9           	ret
1454  9050
1455  9050              ; -----------------------------------------------------------------------------------
1456  9050              ;
1457  9050              ;	28/12/23
1458  9050              ;
1459  9050              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1460  9050              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1461  9050
1462  9050              Guarda_movimiento_masticado
1463  9050
1464  9050 ED 73 47 8C  	ld (Stack),sp
1465  9054 ED 7B FF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1466  9058
1467  9058 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1468  905A FD E5            push iy 												; Pushea Puntero_objeto.
1469  905C
1470  905C ED 7B 47 8C      ld sp,(Stack)
1471  9060
1472  9060 2A 01 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1473  9063 23           	inc hl
1474  9064 22 01 8C     	ld (Contador_de_mov_masticados),hl
1475  9067
1476  9067 CD 6B 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1477  906A              ;															; _ el (Contador_de_mov_masticados).
1478  906A C9               ret
1479  906B
1480  906B              ; --------------------------------------------------------------------------------------------------------------
1481  906B              ;
1482  906B              ;	12/1/24
1483  906B              ;
1484  906B              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1485  906B
1486  906B              Actualiza_Puntero_de_almacen_de_mov_masticados
1487  906B
1488  906B 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1489  906E 01 04 00     	ld bc,4
1490  9071 A7           	and a
1491  9072 ED 4A        	adc hl,bc
1492  9074 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1493  9077 C9           	ret
1494  9078
1495  9078              ; ------------------------------------------
1496  9078              ;
1497  9078              ;	23/11/24
1498  9078              ;
1499  9078              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1500  9078
1501  9078
1502  9078              Obtenemos_puntero_de_impresion
1503  9078
1504  9078 DD 6E 07     	ld l,(ix+7)
1505  907B DD 66 08     	ld h,(ix+8)
1506  907E
1507  907E              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1508  907E
1509  907E ED 73 47 8C  	ld (Stack),sp
1510  9082 F9           	ld sp,hl
1511  9083
1512  9083 AF           	xor a
1513  9084 67           	ld h,a
1514  9085 6C           	ld l,h															; ld hl,"0"
1515  9086
1516  9086 D1           	pop de															; (Puntero_objeto) en DE.
1517  9087 C1           	pop bc
1518  9088
1519  9088              ; 	Almacena (Puntero_de_impresion) en caja.
1520  9088
1521  9088 DD 71 05     	ld (ix+5),c
1522  908B DD 70 06     	ld (ix+6),b
1523  908E
1524  908E ED 43 FD 8B  	ld (Puntero_de_impresion),bc
1525  9092
1526  9092              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1527  9092
1528  9092 39           	add hl,sp
1529  9093 DD 75 07     	ld (ix+7),l
1530  9096 DD 74 08     	ld (ix+8),h
1531  9099
1532  9099 C1           	pop bc
1533  909A
1534  909A 79           	ld a,c
1535  909B 80           	add b															; Comprueba si ya no hay datos en el almacén.
1536  909C
1537  909C ED 7B 47 8C  	ld sp,(Stack)
1538  90A0
1539  90A0 CC A2 94     	call z,Reinicia_entidad_maliciosa
1540  90A3
1541  90A3 C9           	ret
1542  90A4
1543  90A4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1544  90A4              ;
1545  90A4              ;	25/11/24
1546  90A4
1547  90A4              Cargamos_registros_con_explosion
1548  90A4
1549  90A4 DD 6E 07     	ld l,(ix+7)
1550  90A7 DD 66 08     	ld h,(ix+8)
1551  90AA CD 4A 91     	call Extrae_address
1552  90AD EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1553  90AE
1554  90AE DD 6E 05     	ld l,(ix+5)
1555  90B1 DD 66 06     	ld h,(ix+6)
1556  90B4
1557  90B4 E5           	push hl
1558  90B5 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1559  90B7
1560  90B7 C9           	ret
1561  90B8
1562  90B8
1563  90B8              Cargamos_registros_con_explosion_Amadeus
1564  90B8
1565  90B8 2A B5 89     	ld hl,(Pamm_Amadeus)
1566  90BB CD 4A 91     	call Extrae_address
1567  90BE
1568  90BE 5D           	ld e,l
1569  90BF 54           	ld d,h
1570  90C0
1571  90C0 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1572  90C4
1573  90C4 C9           	ret
1574  90C5
1575  90C5              ; --------------------------------------------------------------------------------------------------------------
1576  90C5              ;
1577  90C5              ;	17/06/24
1578  90C5              ;
1579  90C5              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1580  90C5              ;
1581  90C5              ;	IX contiene el puntero de impresión.
1582  90C5              ;	DE contiene (Puntero_objeto).
1583  90C5
1584  90C5
1585  90C5              Cargamos_registros_con_mov_masticado_Amadeus
1586  90C5
1587  90C5 ED 73 47 8C  	ld (Stack),sp
1588  90C9 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1589  90CD D1           	pop de 															; DE contiene Puntero_objeto
1590  90CE DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1591  90D0 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1592  90D4 ED 7B 47 8C  	ld sp,(Stack)
1593  90D8 C9           	ret
1594  90D9
1595  90D9              ; ---------------------------------------------------------------------------------------------------------------------
1596  90D9              ;
1597  90D9              ;	18/6/24
1598  90D9              ;
1599  90D9              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1600  90D9
1601  90D9              Genera_datos_de_impresion_Amadeus
1602  90D9
1603  90D9 3A B2 89     	ld a,(Impacto_Amadeus)
1604  90DC A7           	and a
1605  90DD 20 03        	jr nz,1F
1606  90DF
1607  90DF              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1608  90DF              ; _apuntando a la correspondiente explosión.
1609  90DF
1610  90DF CD C5 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1611  90E2
1612  90E2 DD 7D        1 ld a,ixl
1613  90E4 E6 1F        	and $1f
1614  90E6 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1615  90E9
1616  90E9 2A 69 8C     	ld hl,(Scanlines_album_SP)
1617  90EC E5           	push hl
1618  90ED
1619  90ED 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1620  90F0 22 69 8C     	ld (Scanlines_album_SP),hl
1621  90F3
1622  90F3 CD 8E 95     	call Genera_datos_de_impresion
1623  90F6
1624  90F6 E1           	pop hl
1625  90F7 22 69 8C     	ld (Scanlines_album_SP),hl
1626  90FA
1627  90FA C9           	ret
1628  90FB
1629  90FB              ; ---------------------------------------------------------------------------------------------------------------------
1630  90FB              ;
1631  90FB              ;	13/03/24
1632  90FB              ;
1633  90FB              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1634  90FB
1635  90FB              Inicia_albumes_de_lineas
1636  90FB
1637  90FB 21 00 80     	ld hl,Scanlines_album
1638  90FE 22 4B 8C     	ld (Album_de_pintado),hl
1639  9101 22 69 8C     	ld (Scanlines_album_SP),hl
1640  9104
1641  9104 21 1A 81     	ld hl,Scanlines_album_2
1642  9107 22 4D 8C     	ld (Album_de_borrado),hl
1643  910A
1644  910A C9           	ret
1645  910B
1646  910B              Inicia_albumes_de_lineas_Amadeus
1647  910B
1648  910B 21 34 82     	ld hl,Amadeus_scanlines_album
1649  910E 22 4F 8C     	ld (Album_de_pintado_Amadeus),hl
1650  9111 21 58 82     	ld hl,Amadeus_scanlines_album_2
1651  9114 22 51 8C     	ld (Album_de_borrado_Amadeus),hl
1652  9117
1653  9117 C9           	ret
1654  9118
1655  9118              Inicia_albumes_de_disparos
1656  9118
1657  9118 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1658  911B 22 53 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1659  911E 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1660  9121 22 55 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1661  9124
1662  9124 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1663  9127 22 57 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1664  912A 22 5B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1665  912D
1666  912D 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1667  9130 22 59 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1668  9133
1669  9133 C9           	ret
1670  9134
1671  9134              ; ---------------------------------------------------------------------------------------------------------------------
1672  9134              ;
1673  9134              ; 8/1/23
1674  9134              ;
1675  9134              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1676  9134              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1677  9134              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1678  9134
1679  9134              ; Destruye HL y DE !!!!!
1680  9134
1681  9134              Inicia_punteros_de_cajas
1682  9134
1683  9134 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1684  9137 CD 4A 91         call Extrae_address
1685  913A 22 38 8C         ld (Puntero_store_caja),hl
1686  913D 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1687  9140 22 3C 8C     	ld (Indice_restore_caja),hl
1688  9143 CD 4A 91     	call Extrae_address
1689  9146 22 3A 8C     	ld (Puntero_restore_caja),hl
1690  9149 C9               ret
1691  914A
1692  914A              ; *************************************************************************************************************************************************************
1693  914A
1694  914A              ;
1695  914A              ; 20/10/22
1696  914A              ;
1697  914A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1698  914A              ;
1699  914A              ; Destruye el puntero y DE !!!!!
1700  914A
1701  914A 5E           Extrae_address ld e,(hl)
1702  914B 23           	inc hl
1703  914C 56           	ld d,(hl)
1704  914D 2B           	dec hl
1705  914E EB           	ex de,hl
1706  914F C9           	ret
1707  9150
1708  9150              ; *************************************************************************************************************************************************************
1709  9150              ;
1710  9150              ;	20/1/24
1711  9150              ;
1712  9150              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1713  9150              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1714  9150              ;
1715  9150              ;   Destruye HL y BC !!!!!,
1716  9150              ;
1717  9150              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1718  9150              ;					"0" ..... Izquierda.
1719  9150
1720  9150              Inicia_Puntero_objeto
1721  9150
1722  9150 3A 17 8C     	ld a,(Cuad_objeto)
1723  9153 E6 01        	and 1
1724  9155 F5           	push af
1725  9156 CC 72 91     	call z,Inicia_puntero_objeto_izq
1726  9159 F1           	pop af
1727  915A C8           	ret z
1728  915B CD 5F 91     	call Inicia_puntero_objeto_der
1729  915E C9           	ret
1730  915F
1731  915F              ; Arrancamos desde la parte izquierda de la pantalla.
1732  915F              ; Iniciamos (Indice_Sprite_der).
1733  915F
1734  915F 2A 0D 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1735  9162 22 11 8C     	ld (Puntero_DESPLZ_der),hl
1736  9165 CD 4A 91     	call Extrae_address
1737  9168 22 0A 8C     	ld (Puntero_objeto),hl
1738  916B
1739  916B 2A 0F 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1740  916E 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
1741  9171 C9           	ret
1742  9172
1743  9172              ; Arrancamos desde la parte derecha de la pantalla.
1744  9172              ; Iniciamos (Indice_Sprite_izq).
1745  9172
1746  9172 2A 0F 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1747  9175 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
1748  9178 CD 4A 91     	call Extrae_address
1749  917B 22 0A 8C     	ld (Puntero_objeto),hl
1750  917E
1751  917E 2A 0D 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1752  9181 22 11 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1753  9184 C9           	ret
1754  9185
1755  9185              ; **************************************************************************************************
1756  9185              ;
1757  9185              ;	27/11/24
1758  9185              ;
1759  9185              ;	INPUT: IX contiene (Puntero_store_caja).
1760  9185              ;
1761  9185              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1762  9185
1763  9185              Salta_caja_de_entidades_vacia
1764  9185
1765  9185 DD 7E 00     	ld a,(ix+0)
1766  9188 A7           	and a
1767  9189 C0           	ret nz
1768  918A
1769  918A CD 94 91     	call Incrementa_punteros_de_cajas
1770  918D DD 2A 38 8C  	ld ix,(Puntero_store_caja)
1771  9191 18 F2        	jr Salta_caja_de_entidades_vacia
1772  9193
1773  9193 C9           	ret
1774  9194
1775  9194              ; **************************************************************************************************
1776  9194              ;
1777  9194              ;	08/05/23
1778  9194              ;
1779  9194              ;	Incrementamos los dos punteros de entidades. (+1).
1780  9194
1781  9194              Incrementa_punteros_de_cajas
1782  9194
1783  9194 2A 3A 8C     	ld hl,(Puntero_restore_caja)
1784  9197 22 38 8C     	ld (Puntero_store_caja),hl
1785  919A 2A 3C 8C     	ld hl,(Indice_restore_caja)
1786  919D 23           	inc hl
1787  919E 23           	inc hl
1788  919F 22 3C 8C     	ld (Indice_restore_caja),hl
1789  91A2 CD 4A 91         call Extrae_address
1790  91A5 22 3A 8C         ld (Puntero_restore_caja),hl
1791  91A8 C9               ret
1792  91A9
1793  91A9              ; -----------------------------------------------------------
1794  91A9
1795  91A9              ; Teclado.
1796  91A9
1797  91A9 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1798  91AB DB FE        	in a,($fe)
1799  91AD E6 01        	and $01
1800  91AF 28 02        	jr z,1f
1801  91B1 18 F6        	jr Pulsa_ENTER
1802  91B3 C9           1 ret
1803  91B4
1804  91B4              ; **************************************************************************************************
1805  91B4              ;
1806  91B4              ; Temporización.
1807  91B4
1808  91B4              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1809  91B4              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1810  91B4              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1811  91B4              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1812  91B4
1813  91B4              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1814  91B4              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1815  91B4              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1816  91B4
1817  91B4              ; A partir de $4f61 no hace falta DELAY.
1818  91B4
1819  91B4              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1820  91B4
1821  91B4              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1822  91B4              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1823  91B4              ;	LD A,B
1824  91B4              ;	AND A
1825  91B4              ;	JR NZ,wait
1826  91B4              ;	RET
1827  91B4
1828  91B4              ; ---------------------------------------------------------------------------------------------------------------
1829  91B4              ;
1830  91B4              ;	13/07/24
1831  91B4              ;
1832  91B4
1833  91B4              Inicia_Shield
1834  91B4
1835  91B4 21 92 8C     	ld hl,Datos_Shield
1836  91B7 22 96 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1837  91BA
1838  91BA 7E           	ld a,(hl)
1839  91BB 32 99 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1840  91BE
1841  91BE 3E 01        	ld a,1
1842  91C0 32 9A 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1843  91C3
1844  91C3 C9           	ret
1845  91C4
1846  91C4              ; ---------- ---------- ---------- ---------- ----------
1847  91C4              ;
1848  91C4              ;	30/11/24
1849  91C4              ;
1850  91C4              ;	Limpia la caja de entidades de una entidad eliminada.
1851  91C4              ;
1852  91C4              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1853  91C4              ;	MODIFY: A,BC,DE y HL.
1854  91C4
1855  91C4              Limpia_caja_de_entidades
1856  91C4
1857  91C4 DD E5        	push ix
1858  91C6 E1           	pop hl
1859  91C7 AF           	xor a
1860  91C8 77           	ld (hl),a
1861  91C9 5D           	ld e,l
1862  91CA 54           	ld d,h
1863  91CB 1C           	inc e
1864  91CC 01 0B 00     	ld bc,11
1865  91CF ED B0        	ldir
1866  91D1 C9           	ret
1867  91D2
1868  91D2              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1869  91D2              ;
1870  91D2              ;	4/6/24
1871  91D2              ;
1872  91D2              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1873  91D2              ;
1874  91D2              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1875  91D2              ;
1876  91D2
1877  91D2              Actualiza_pantalla
1878  91D2
1879  91D2 3E 02        	ld a,2
1880  91D4 D3 FE        	out ($fe),a
1881  91D6
1882  91D6 3A 6F 8C     	ld a,(Ctrl_3)
1883  91D9 CB 57        	bit 2,a
1884  91DB 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1885  91DD
1886  91DD              Borrando_entidades
1887  91DD
1888  91DD 2A 69 8C     	ld hl,(Scanlines_album_SP)
1889  91E0 CD 4A 91     	call Extrae_address
1890  91E3 24           	inc h
1891  91E4 25           	dec h
1892  91E5 28 05        	jr z,Pintando_entidades
1893  91E7 CD 82 96     	call Pinta_Sprites
1894  91EA 18 F1        	jr Borrando_entidades
1895  91EC
1896  91EC              Pintando_entidades
1897  91EC
1898  91EC 2A 6B 8C     	ld hl,(India_SP)
1899  91EF 2C           	inc l
1900  91F0 CD 4A 91     	call Extrae_address
1901  91F3 24           	inc h
1902  91F4 25           	dec h
1903  91F5 28 0E        	jr z,Ejecuta_escudo
1904  91F7 1C           	inc e
1905  91F8 1C           	inc e
1906  91F9 ED 53 6B 8C  	ld (India_SP),de
1907  91FD CD 4A 91     	call Extrae_address
1908  9200 CD 82 96     	call Pinta_Sprites
1909  9203 18 E7        	jr Pintando_entidades
1910  9205
1911  9205              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1912  9205
1913  9205              Ejecuta_escudo
1914  9205
1915  9205 3A 98 8C     	ld a,(Shield)
1916  9208 A7           	and a
1917  9209 20 2F        	jr nz,Aplica_Shield
1918  920B
1919  920B              Borrando_Amadeus
1920  920B
1921  920B 21 6F 8C     	ld hl,Ctrl_3
1922  920E CB 6E        	bit 5,(hl)
1923  9210 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1924  9212
1925  9212 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
1926  9215 CD 4A 91     	call Extrae_address
1927  9218 24           	inc h
1928  9219 25           	dec h
1929  921A 28 03        	jr z,Pintando_Amadeus
1930  921C CD 82 96     	call Pinta_Sprites
1931  921F
1932  921F              Pintando_Amadeus
1933  921F
1934  921F 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1935  9222 CD 4A 91     	call Extrae_address
1936  9225 24           	inc h
1937  9226 25           	dec h
1938  9227 28 03        	jr z,1F
1939  9229 CD 82 96     	call Pinta_Sprites
1940  922C
1941  922C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1942  922C
1943  922C 21 6F 8C     1 ld hl,Ctrl_3
1944  922F CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1945  9231 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1946  9233 CB AE        	res 5,(hl)
1947  9235
1948  9235 3E 01        	ld a,1												; Borde azul.
1949  9237 D3 FE        	out ($fe),a
1950  9239
1951  9239 C9           	ret
1952  923A
1953  923A              Aplica_Shield
1954  923A
1955  923A              ;	Bit 1 "1" (Shield_3) Sólo borra.
1956  923A              ;		  "0"     ""     Borra/Pinta.
1957  923A              ;	Bit 2    ""  RET.	 No borra, no pinta.
1958  923A
1959  923A 21 9A 8C     	ld hl,Shield_3
1960  923D
1961  923D CB 5E        	bit 3,(hl)
1962  923F 20 DE        	jr nz,Pintando_Amadeus
1963  9241
1964  9241 CB 56        	bit 2,(hl)
1965  9243 20 E7        	jr nz,1B
1966  9245
1967  9245 CB 4E        	bit 1,(hl)
1968  9247 C4 4E 92     	call nz,Borra_Amadeus_shield
1969  924A
1970  924A 28 BF        	jr z,Borrando_Amadeus
1971  924C 18 DE        	jr 1B
1972  924E
1973  924E              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1974  924E
1975  924E              Borra_Amadeus_shield
1976  924E
1977  924E 3A 6F 8C     	ld a,(Ctrl_3)
1978  9251 CB 6F        	bit 5,a
1979  9253 28 08        	jr z,1F
1980  9255
1981  9255 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
1982  9258 CD 4A 91     	call Extrae_address
1983  925B 18 06        	jr 2F
1984  925D
1985  925D 2A 4F 8C     1 ld hl,(Album_de_pintado_Amadeus)
1986  9260 CD 4A 91     	call Extrae_address
1987  9263
1988  9263 CD 82 96     2 call Pinta_Sprites
1989  9266
1990  9266 AF           	xor a
1991  9267 3C           	inc a											; Asegura NZ en la salida de la rutina.
1992  9268
1993  9268 C9           	ret
1994  9269
1995  9269              Pinta_Amadeus_shield
1996  9269
1997  9269 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1998  926C CD 4A 91     	call Extrae_address
1999  926F CD 82 96     	call Pinta_Sprites
2000  9272
2001  9272 AF           	xor a
2002  9273 3C           	inc a											; Asegura NZ en la salida de la rutina.
2003  9274
2004  9274 C9           	ret
2005  9275
2006  9275              Borra_Pinta_Amadeus_shield
2007  9275
2008  9275 CD 4E 92     	call Borra_Amadeus_shield
2009  9278 CD 69 92     	call Pinta_Amadeus_shield
2010  927B C9           	ret
2011  927C
2012  927C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2013  927C              ;
2014  927C              ;	19/6/24
2015  927C              ;
2016  927C
2017  927C              Teclado
2018  927C
2019  927C              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2020  927C
2021  927C 3E F7        	ld a,$f7												; "5" para disparar.
2022  927E DB FE        	in a,($fe)
2023  9280 E6 10        	and $10
2024  9282
2025  9282 CC 1D A3     	call z,Genera_disparo_Amadeus
2026  9285
2027  9285 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2028  9287 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2029  9289 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2030  928B CC EF 9D         call z,Amadeus_a_izquierda
2031  928E
2032  928E 3E F7        	ld a,$f7
2033  9290 DB FE        	in a,($fe)
2034  9292 E6 01        	and $01
2035  9294 C8           	ret z
2036  9295
2037  9295 3E F7        	ld a,$f7
2038  9297 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2039  9299 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2040  929B CC 07 9E     	call z,Amadeus_a_derecha
2041  929E
2042  929E C9           	ret
2043  929F
2044  929F              ; ------------------------------------------------------------------------------------------------------------------------
2045  929F              ;
2046  929F              ;	06/07/24
2047  929F              ;
2048  929F
2049  929F              Genera_explosion
2050  929F
2051  929F 21 81 8C     	ld hl,Clock_explosion
2052  92A2 35           	dec (hl)
2053  92A3 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2054  92A5
2055  92A5              Borra_entidad_colisionada
2056  92A5
2057  92A5 CD 88 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2058  92A8
2059  92A8 DD E5        	push ix
2060  92AA CD A4 90     	call Cargamos_registros_con_explosion
2061  92AD CD 8E 95     	call Genera_datos_de_impresion
2062  92B0 DD E1        	pop ix
2063  92B2
2064  92B2 AF           	xor a
2065  92B3 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2066  92B4
2067  92B4 C9           	ret
2068  92B5
2069  92B5              Siguiente_frame_explosion
2070  92B5
2071  92B5 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2072  92B7
2073  92B7              ; Avanza Frame de explosión.
2074  92B7
2075  92B7 DD 6E 07     	ld l,(ix+7)
2076  92BA DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2077  92BD
2078  92BD 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2079  92C0
2080  92C0 79           	ld a,c
2081  92C1 95           	sub l
2082  92C2 20 44        	jr nz,1F
2083  92C4
2084  92C4
2085  92C4              ; Fín de la entidad !!!!!!!!!!!!!
2086  92C4              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2087  92C4
2088  92C4              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2089  92C4              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2090  92C4              ; Entidades_en_curso db 0								; Entidades en pantalla.
2091  92C4
2092  92C4              ; La entidad eliminada, es la última del nivel ?
2093  92C4
2094  92C4 3A 40 8C     	ld a,(Numero_de_entidades)
2095  92C7 A7           	and a
2096  92C8 28 2F        	jr z,2F
2097  92CA
2098  92CA              ; Decrementa (Numero_de_entidades)
2099  92CA
2100  92CA 3D           	dec a
2101  92CB 32 40 8C     	ld (Numero_de_entidades),a
2102  92CE 21 42 8C     	ld hl,Entidades_en_curso
2103  92D1 35           	dec (hl)
2104  92D2
2105  92D2              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2106  92D2              ; IX apunta al 1er .db de la entidad eliminada.
2107  92D2
2108  92D2 2A 3E 8C     	ld hl,(Puntero_indice_master)
2109  92D5 CD 4A 91     	call Extrae_address
2110  92D8
2111  92D8 DD E5        	push ix
2112  92DA D1           	pop de
2113  92DB
2114  92DB 01 0C 00     	ld bc,12
2115  92DE ED B0        	ldir
2116  92E0
2117  92E0              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2118  92E0
2119  92E0 CD 78 90     	call Obtenemos_puntero_de_impresion
2120  92E3
2121  92E3 DD 6E 05     	ld l,(ix+5)
2122  92E6 2C           	inc l
2123  92E7 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2124  92EA
2125  92EA CD 62 95     	call Genera_coordenadas
2126  92ED
2127  92ED ED 4B F9 8B  	ld bc,(Coordenada_X)
2128  92F1
2129  92F1 DD 71 01     	ld (ix+1),c
2130  92F4 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2131  92F7
2132  92F7 18 AC        	jr Borra_entidad_colisionada
2133  92F9
2134  92F9              ; (Numero_de_entidades) = "0". (Numero_parcial_de_entidades)="0" ???
2135  92F9
2136  92F9 21 41 8C     2 ld hl,Numero_parcial_de_entidades
2137  92FC 35           	dec (hl)
2138  92FD
2139  92FD F3           	di
2140  92FE 28 FE        	jr z,$
2141  9300 FB           	ei																;! Nivel superado !!!!!!!!!!!!!!!
2142  9301
2143  9301              	; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2144  9301
2145  9301 23           	inc hl
2146  9302 35           	dec (hl)
2147  9303
2148  9303 CD C4 91     	call Limpia_caja_de_entidades
2149  9306 18 9D        	jr Borra_entidad_colisionada
2150  9308
2151  9308 23           1 inc hl
2152  9309 23           	inc hl
2153  930A
2154  930A DD 75 07     	ld (ix+7),l
2155  930D DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2156  9310
2157  9310 18 93        	jr Borra_entidad_colisionada
2158  9312
2159  9312              ; ----- ----- ----- ----- -----
2160  9312
2161  9312              Genera_explosion_Amadeus
2162  9312
2163  9312 21 82 8C     	ld hl,Clock_explosion_Amadeus
2164  9315 35           	dec (hl)
2165  9316 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2166  9318
2167  9318              Borra_Amadeus_impactado
2168  9318
2169  9318 CD F2 8E     	call Change_Amadeus
2170  931B CD B8 90     	call Cargamos_registros_con_explosion_Amadeus
2171  931E CD D9 90     	call Genera_datos_de_impresion_Amadeus
2172  9321
2173  9321 21 6F 8C     	ld hl,Ctrl_3
2174  9324 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2175  9326
2176  9326 AF           	xor a
2177  9327 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2178  9328
2179  9328 C9           	ret
2180  9329
2181  9329              Siguiente_frame_explosion_Amadeus
2182  9329
2183  9329 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2184  932B
2185  932B              ; Avanza Frame de explosión.
2186  932B
2187  932B 2A B5 89     	ld hl,(Pamm_Amadeus)
2188  932E 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2189  9331
2190  9331 79           	ld a,c
2191  9332 95           	sub l
2192  9333 20 0B        	jr nz,1F
2193  9335
2194  9335              ; Fín de Amadeus !!!!!!!!!!!!!
2195  9335              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2196  9335
2197  9335 AF           	xor a
2198  9336 32 B2 89     	ld (Impacto_Amadeus),a
2199  9339 21 6F 8C     	ld hl,Ctrl_3
2200  933C CB F6        	set 6,(hl)
2201  933E
2202  933E 18 D8        	jr Borra_Amadeus_impactado
2203  9340
2204  9340 23           1 inc hl
2205  9341 23           	inc hl
2206  9342 22 B5 89     	ld (Pamm_Amadeus),hl
2207  9345 18 D1        	jr Borra_Amadeus_impactado
2208  9347
2209  9347              ; ---------------------------------------------------------------
2210  9347
2211  9347              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9347              ; ******************************************************************************************************************************************************************************************
   2+ 9347              ;
   3+ 9347              ;   21/04/24
   4+ 9347              ;
   5+ 9347              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9347              ;   (XOR) bit a bit.
   7+ 9347              ;
   8+ 9347              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9347
  10+ 9347              Derivando_RND
  11+ 9347
  12+ 9347 21 F6 88         ld hl,Numeros_aleatorios
  13+ 934A
  14+ 934A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 934C C5               push bc
  16+ 934D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 934D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9350              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9350
  20+ 9350 A7           6 and a                                 ; Carry a "0".
  21+ 9351 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9353 30 02            jr nc,1F
  23+ 9355
  24+ 9355 CB C1            set 0,c
  25+ 9357
  26+ 9357 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9358 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 935A 5F               ld e,a
  29+ 935B
  30+ 935B 7A               ld a,d
  31+ 935C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 935E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9360
  34+ 9360 CB 3F            srl a
  35+ 9362
  36+ 9362 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9363
  38+ 9363 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9364 28 04            jr z,4F
  40+ 9366
  41+ 9366 CB FF            set 7,a
  42+ 9368 18 02            jr 5F
  43+ 936A
  44+ 936A CB BF        4 res 7,a
  45+ 936C
  46+ 936C CB 21        5 sla c
  47+ 936E 10 E0            djnz 6B
  48+ 9370
  49+ 9370 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9371
  51+ 9371 77               ld (hl),a
  52+ 9372 23               inc hl
  53+ 9373 C1               pop bc
  54+ 9374 10 D4            djnz 3B
  55+ 9376
  56+ 9376 C9               ret
  57+ 9377
  58+ 9377
  59+ 9377
# file closed: RND_Derivando.asm
2212  9377              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9377              ;---------------------------------------------------------------------------------------------------------------
   2+ 9377              ;
   3+ 9377              ;   13/11/24
   4+ 9377
   5+ 9377              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9377
   7+ 9377              Genera_movimientos_masticados_del_nivel
   8+ 9377
   9+ 9377              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9377
  11+ 9377              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9377              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9377              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9377
  15+ 9377 2D           	dec l
  16+ 9378 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9379 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 937A 4E           	ld c,(hl)
  19+ 937B
  20+ 937B E5           1 push hl														; Push (Datos_de_nivel).
  21+ 937C C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 937D
  23+ 937D              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 937D
  25+ 937D 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 937E
  27+ 937E CD BC 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9381
  29+ 9381              ;	Caja Master inicializada ???
  30+ 9381
  31+ 9381 7E           	ld a,(hl)
  32+ 9382 A7           	and a
  33+ 9383 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9385
  35+ 9385              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9385
  37+ 9385 C1           	pop bc
  38+ 9386 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9387 C5           	push bc
  40+ 9388
  41+ 9388 CD 5C 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 938B CD F0 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 938E
  44+ 938E 3A F8 8B     	ld a,(Tipo)
  45+ 9391 CD CC 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9394
  47+ 9394              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9394
  49+ 9394              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9394              ;	ld a,(hl)
  51+ 9394              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9394
  53+ 9394              ;	ld hl,Posicion_inicio
  54+ 9394              ;	ld (hl),a
  55+ 9394
  56+ 9394              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9394              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9394
  59+ 9394 CD 24 90     	call Construye_movimientos_masticados_entidad
  60+ 9397
  61+ 9397 2A 3E 8C     	ld hl,(Puntero_indice_master)
  62+ 939A CD 4A 91     	call Extrae_address
  63+ 939D
  64+ 939D 5D           	ld e,l
  65+ 939E 54           	ld d,h
  66+ 939F
  67+ 939F CD 1D 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 93A2
  69+ 93A2              Movimientos_masticados_construidos
  70+ 93A2
  71+ 93A2 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 93A3
  73+ 93A3 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 93A4 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 93A5
  76+ 93A5 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 93A6 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 93A8
  79+ 93A8 C9           	ret
  80+ 93A9
  81+ 93A9              ;---------------------------------------------------------------------------------------------------------------
  82+ 93A9              ;
  83+ 93A9              ;   9/11/24
  84+ 93A9              ;
  85+ 93A9              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 93A9              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 93A9              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 93A9              ;	_ de la 1ª entidad del Nivel.
  89+ 93A9              ;
  90+ 93A9              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 93A9
  92+ 93A9              ;	MODIFICA: HL,DE y A.
  93+ 93A9              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 93A9
  95+ 93A9              Inicializa_1er_Nivel
  96+ 93A9
  97+ 93A9              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 93A9
  99+ 93A9 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 93AC CD 4A 91     	call Extrae_address
 101+ 93AF ED 53 8E 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 93B3
 103+ 93B3 7E           	ld a,(hl)
 104+ 93B4 32 40 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 93B7
 106+ 93B7 2C           	inc l
 107+ 93B8 22 90 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 93BB
 109+ 93BB C9           	ret
 110+ 93BC
 111+ 93BC              ; ----------------------
 112+ 93BC              ;
 113+ 93BC              ;	13/11/24
 114+ 93BC              ;
 115+ 93BC
 116+ 93BC              Situa_en_Caja_Master
 117+ 93BC
 118+ 93BC CD DB 94         call Calcula_salto_en_BC
 119+ 93BF 21 58 89         ld hl,Indice_de_cajas_master
 120+ 93C2 A7               and a
 121+ 93C3 ED 4A            adc hl,bc
 122+ 93C5 22 3E 8C       	ld (Puntero_indice_master),hl
 123+ 93C8 CD 4A 91     	call Extrae_address
 124+ 93CB C9           	ret
 125+ 93CC
 126+ 93CC              ; ----------------------
 127+ 93CC
 128+ 93CC              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 93CC              ; 	ld bc,4
 130+ 93CC              ; 	ldir
 131+ 93CC              ; 	ret
 132+ 93CC
 133+ 93CC 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 93CD CD DB 94         call Calcula_salto_en_BC
 135+ 93D0 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 93D3 A7               and a
 137+ 93D4 ED 4A            adc hl,bc
 138+ 93D6 CD 4A 91         call Extrae_address
 139+ 93D9 22 29 8C         ld (Puntero_indice_mov),hl
 140+ 93DC C9               ret
 141+ 93DD
 142+ 93DD              ;---------------------------------------------------------------------------------------------------------------
 143+ 93DD              ;
 144+ 93DD              ;   13/11/24
 145+ 93DD              ;
 146+ 93DD              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 93DD
 148+ 93DD
 149+ 93DD              Prepara_Cajas_de_Entidades
 150+ 93DD
 151+ 93DD              ; Preparamos los punteros de las cajas de entidades:
 152+ 93DD
 153+ 93DD CD 34 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 93E0              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 93E0 CD 26 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 93E3
 157+ 93E3 2A 90 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 93E6
 159+ 93E6              ; En este punto:
 160+ 93E6              ;
 161+ 93E6              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 93E6              ; B contiene (Numero_parcial_de_entidades).
 163+ 93E6
 164+ 93E6 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 93E7
 166+ 93E7 7E           	ld a,(hl)
 167+ 93E8
 168+ 93E8 CD BC 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 93EB
 170+ 93EB ED 5B 38 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 93EF
 172+ 93EF D5           	push de
 173+ 93F0 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 93F2
 175+ 93F2 01 0C 00     	ld bc,12
 176+ 93F5 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 93F7              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 93F7
 179+ 93F7              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 93F7              ;
 181+ 93F7              ;
 182+ 93F7              ; ------------------------------------------------------ IX
 183+ 93F7              ; ------------------------------------------------------ IX
 184+ 93F7              ; ------------------------------------------------------ IX
 185+ 93F7              ; ------------------------------------------------------ IX
 186+ 93F7
 187+ 93F7 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 93F9
 189+ 93F9 CD 78 90     	call Obtenemos_puntero_de_impresion
 190+ 93FC
 191+ 93FC DD 6E 05     	ld l,(ix+5)
 192+ 93FF 2C           	inc l
 193+ 9400 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 9403
 195+ 9403 D5           	push de														; Push (Puntero_objeto).
 196+ 9404 E5           	push hl														; Push (Puntero_de_impresion).
 197+ 9405
 198+ 9405 CD 62 95     	call Genera_coordenadas
 199+ 9408
 200+ 9408 ED 4B F9 8B  	ld bc,(Coordenada_X)
 201+ 940C
 202+ 940C DD 71 01     	ld (ix+1),c
 203+ 940F DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 9412
 205+ 9412 CD 88 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 9415
 207+ 9415 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 9417 D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 9418
 210+ 9418 CD 8E 95     	call Genera_datos_de_impresion
 211+ 941B
 212+ 941B DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 941D
 214+ 941D              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 941D
 216+ 941D CD 94 94     	call Decrementa_Contador_de_mov_masticados
 217+ 9420 CD 71 94     	call Limpiamos_bandeja_DRAW
 218+ 9423 CD 94 91     	call Incrementa_punteros_de_cajas
 219+ 9426
 220+ 9426              ; Siguiente entidad del Nivel.
 221+ 9426
 222+ 9426 2A 90 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 9429 23           	inc hl 														; _ entidad del Nivel.
 224+ 942A
 225+ 942A C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 942B
 227+ 942B 10 B9        	djnz 1B
 228+ 942D
 229+ 942D C9           	ret
 230+ 942E
 231+ 942E              ; -------------------------------------------------------------------------------------------------------------------
 232+ 942E              ;
 233+ 942E              ;	27/5/24
 234+ 942E              ;
 235+ 942E              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 942E              ;
 237+ 942E
 238+ 942E              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 942E              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 942E
 241+ 942E 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 9431 CD F0 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 9434
 244+ 9434
 245+ 9434              Construye_movimientos_masticados_Amadeus
 246+ 9434
 247+ 9434 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 9437 CD 6B 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 943A              ;															; _ el (Contador_de_mov_masticados).
 250+ 943A CD 50 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 943D              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 943D
 253+ 943D              ; Generamos movimientos masticados de Amadeus.
 254+ 943D
 255+ 943D 06 79        	ld b,121												; $0079, 121d.
 256+ 943F
 257+ 943F C5           1 push bc
 258+ 9440 CD A5 97     	call Draw
 259+ 9443 CD 50 90     	call Guarda_movimiento_masticado
 260+ 9446
 261+ 9446 CD 19 9B     	call Mov_right
 262+ 9449 CD 19 9B     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 944C
 264+ 944C C1           	pop bc
 265+ 944D 10 F0        	djnz 1B
 266+ 944F
 267+ 944F              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 944F
 269+ 944F              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 944F              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 944F
 272+ 944F 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 9452 01 08 00     	ld bc,8
 274+ 9455 A7           	and a
 275+ 9456 ED 42        	sbc hl,bc
 276+ 9458 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 945B
 278+ 945B C9           	ret
 279+ 945C
 280+ 945C              ; ---------------------------------------------------------------------
 281+ 945C              ;
 282+ 945C              ;	10/02/24
 283+ 945C              ;
 284+ 945C              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 945C              ;
 286+ 945C              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 945C
 288+ 945C              Definicion_segun_tipo
 289+ 945C
 290+ 945C CD DB 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 945F 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 9462 CD E6 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 9465 C9           	ret
 294+ 9466
 295+ 9466              ; ---------------------------------------------------------------------
 296+ 9466              ;
 297+ 9466              ;	6/7/24
 298+ 9466
 299+ 9466
 300+ 9466              Store_Restore_cajas
 301+ 9466
 302+ 9466 ED 5B 38 8C  	ld de,(Puntero_store_caja)
 303+ 946A CD 1D 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 946D CD 94 91     	call Incrementa_punteros_de_cajas
 305+ 9470 C9           	ret
 306+ 9471
 307+ 9471              ; ---------------------------------------------------------------------
 308+ 9471              ;
 309+ 9471              ;	23/6/24
 310+ 9471              ;
 311+ 9471              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9471              ;
 313+ 9471              ;	MODIFY: HL
 314+ 9471
 315+ 9471              Limpiamos_bandeja_DRAW
 316+ 9471
 317+ 9471 ED 73 47 8C  	ld (Stack),sp
 318+ 9475 31 1D 8C     	ld sp,Vel_left
 319+ 9478
 320+ 9478 AF           	xor a
 321+ 9479 67           	ld h,a
 322+ 947A 6F           	ld l,a
 323+ 947B
 324+ 947B E5           	push hl
 325+ 947C E5           	push hl
 326+ 947D E5           	push hl
 327+ 947E E5           	push hl
 328+ 947F E5           	push hl
 329+ 9480 E5           	push hl
 330+ 9481 E5           	push hl
 331+ 9482 E5           	push hl
 332+ 9483 E5           	push hl
 333+ 9484 E5           	push hl
 334+ 9485 E5           	push hl
 335+ 9486 E5           	push hl
 336+ 9487 E5           	push hl
 337+ 9488 E5           	push hl
 338+ 9489 E5           	push hl
 339+ 948A E5           	push hl
 340+ 948B E5           	push hl
 341+ 948C E5           	push hl
 342+ 948D
 343+ 948D 33           	inc sp
 344+ 948E
 345+ 948E E5           	push hl
 346+ 948F ED 7B 47 8C  	ld sp,(Stack)
 347+ 9493
 348+ 9493 C9           	ret
 349+ 9494
 350+ 9494              ; ---------------------------------------------------------------------
 351+ 9494              ;
 352+ 9494              ;	23/11/24
 353+ 9494              ;
 354+ 9494              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 9494
 356+ 9494              Decrementa_Contador_de_mov_masticados
 357+ 9494
 358+ 9494 DD 6E 09     	ld l,(ix+9)
 359+ 9497 DD 66 0A     	ld h,(ix+10)
 360+ 949A
 361+ 949A 2B           	dec hl
 362+ 949B
 363+ 949B DD 75 09     	ld (ix+9),l
 364+ 949E DD 74 0A     	ld (ix+10),h
 365+ 94A1
 366+ 94A1 C9           	ret
 367+ 94A2
 368+ 94A2              ; ---------------------------------------------------------------------
 369+ 94A2              ;
 370+ 94A2              ;	24/11/24
 371+ 94A2
 372+ 94A2              Reinicia_entidad_maliciosa
 373+ 94A2
 374+ 94A2              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 94A2
 376+ 94A2 CD 86 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 94A5 CD 93 9F     	call Transfiere_datos_de_contadores
 378+ 94A8
 379+ 94A8              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 94A8
 381+ 94A8 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 94AB CD 5C 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 94AE
 384+ 94AE 7D           	ld a,l
 385+ 94AF C6 0B        	add 11
 386+ 94B1 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 94B2
 388+ 94B2 CD 4A 91     	call Extrae_address
 389+ 94B5
 390+ 94B5 DD 75 07     	ld (ix+7),l
 391+ 94B8 DD 74 08     	ld (ix+8),h
 392+ 94BB
 393+ 94BB CD 78 90     	call Obtenemos_puntero_de_impresion
 394+ 94BE
 395+ 94BE              ; Incrementa (Contador_de_vueltas)x2.
 396+ 94BE              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 94BE
 398+ 94BE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 94BE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 94BE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 94BE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 94BE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 94BE
 404+ 94BE DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 94C2
 406+ 94C2 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 94C5 CB 2F        	sra a
 408+ 94C7 CB 2F        	sra a
 409+ 94C9
 410+ 94C9 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 94CC
 412+ 94CC 3E 40        	ld a,$40
 413+ 94CE DD BE 03     	cp (ix+3)
 414+ 94D1 C0           	ret nz
 415+ 94D2
 416+ 94D2              ; Límitador.
 417+ 94D2
 418+ 94D2              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 94D2
 420+ 94D2 DD CB 03 2E  	sra (ix+3)
 421+ 94D6 DD CB 0B 2E  	sra (ix+11)
 422+ 94DA
 423+ 94DA C9           	ret
 424+ 94DB
 425+ 94DB              ;	------------------------------------------------------------------------------------
 426+ 94DB              ;
 427+ 94DB              ;	09/11/24
 428+ 94DB              ;
 429+ 94DB              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 94DB              ;
 431+ 94DB              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 94DB              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 94DB
 434+ 94DB A7           Calcula_salto_en_BC and a
 435+ 94DC 28 04        	jr z,1F
 436+ 94DE CB 27        	sla a
 437+ 94E0 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 94E2 4F           1 ld c,a
 439+ 94E3 06 00        	ld b,0
 440+ 94E5 C9           	ret
 441+ 94E6
 442+ 94E6              ; ------------------------------------------------------------------
 443+ 94E6              ;
 444+ 94E6              ;	19/1/24
 445+ 94E6              ;
 446+ 94E6              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 94E6              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 94E6
 449+ 94E6 A7           Situa_en_datos_de_definicion and a
 450+ 94E7 ED 4A        	adc hl,bc
 451+ 94E9 CD 4A 91     	call Extrae_address
 452+ 94EC 22 45 8C         ld (Datos_de_entidad),hl
 453+ 94EF C9           	ret
 454+ 94F0
 455+ 94F0              ; ----------------------------------------------------------------------------------------------------------
 456+ 94F0              ;
 457+ 94F0              ;	24/6/24
 458+ 94F0              ;
 459+ 94F0              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 94F0              ;	_ de entidad.
 461+ 94F0              ;
 462+ 94F0              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 94F0              ;
 464+ 94F0              ;
 465+ 94F0              ;	MODIFICA: HL,DE y BC
 466+ 94F0
 467+ 94F0
 468+ 94F0              Definicion_de_entidad_a_bandeja_DRAW
 469+ 94F0
 470+ 94F0 11 F8 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 94F3 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 94F4 12           	ld (de),a
 473+ 94F5 23           	inc hl
 474+ 94F6              ;
 475+ 94F6 11 06 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 94F9 01 02 00     	ld bc,2
 477+ 94FC ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 94FE              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 94FE 11 FB 8B     	ld de,Contador_de_vueltas
 480+ 9501 7E           	ld a,(hl)
 481+ 9502 12           	ld (de),a
 482+ 9503 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 9504
 484+ 9504 11 0D 8C     	ld de,Indice_Sprite_der
 485+ 9507 01 04 00     	ld bc,4
 486+ 950A ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 950C
 488+ 950C 11 15 8C     	ld de,Posicion_inicio
 489+ 950F 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 9512 ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 9514
 492+ 9514 11 FF 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 9517 01 02 00     	ld bc,2
 494+ 951A ED B0        	ldir
 495+ 951C
 496+ 951C C9           	ret
 497+ 951D
 498+ 951D              ; ----------------------------------------------------------------------------------------------------------
 499+ 951D              ;
 500+ 951D              ;	1/8/24
 501+ 951D              ;
 502+ 951D
 503+ 951D              Parametros_de_bandeja_DRAW_a_caja
 504+ 951D
 505+ 951D 21 F8 8B     	ld hl,Bandeja_DRAW
 506+ 9520 01 0C 00     	ld bc,12
 507+ 9523 ED B0        	ldir
 508+ 9525 C9           	ret
 509+ 9526
 510+ 9526              ;---------------------------------------------------------------------------------------------------------------
 511+ 9526              ;
 512+ 9526              ;	13/11/24
 513+ 9526              ;
 514+ 9526              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 9526              ;
 516+ 9526              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 9526              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 9526
 519+ 9526              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 9526              ;			- Actualiza (Numero_de_entidades).
 521+ 9526
 522+ 9526              ;	MODIFICA: A y B.
 523+ 9526
 524+ 9526
 525+ 9526              Inicializa_Numero_parcial_de_entidades
 526+ 9526
 527+ 9526 3A 40 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 9529 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 952B 38 0E        	jr c,1F
 530+ 952D 28 0C        	jr z,1F
 531+ 952F
 532+ 952F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 952F              ; Actualizamos variables.
 534+ 952F
 535+ 952F D6 06        	sub 6
 536+ 9531 32 40 8C     	ld (Numero_de_entidades),a
 537+ 9534 3E 06        	ld a,6
 538+ 9536 32 41 8C     	ld (Numero_parcial_de_entidades),a
 539+ 9539 47           	ld b,a
 540+ 953A C9           	ret
 541+ 953B
 542+ 953B              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 953B              ; (Numero_de_entidades)="0".
 544+ 953B
 545+ 953B 32 41 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 953E 47           	ld b,a
 547+ 953F AF           	xor a
 548+ 9540 32 40 8C     	ld (Numero_de_entidades),a
 549+ 9543 C9           	ret
 550+ 9544
# file closed: Rutinas_de_inicio_y_niveles.asm
2213  9544              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9544              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9544              ;
   3+ 9544              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9544              ;
   5+ 9544              ; *****************************************************************************************************************************************************************************************
   6+ 9544              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9544
   8+ 9544 7C           calcula_tercio ld a,h
   9+ 9545 E6 18        	and $18
  10+ 9547 CB 2F        	sra a
  11+ 9549 CB 2F        	sra a
  12+ 954B CB 2F        	sra a
  13+ 954D C9           	ret
  14+ 954E
# file closed: calcula_tercio.asm
2214  954E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 954E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 954E              ;
   3+ 954E              ;
   4+ 954E              ;	CLS.
   5+ 954E              ;
   6+ 954E              ;	Limpia la pantalla y define sus atributos.
   7+ 954E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 954E              ;
   9+ 954E              ;	COLORES: 0 ..... NEGRO
  10+ 954E              ;    		 1 ..... AZUL
  11+ 954E              ; 			 2 ..... ROJO
  12+ 954E              ;			 3 ..... MAGENTA
  13+ 954E              ; 			 4 ..... VERDE
  14+ 954E              ; 			 5 ..... CIAN
  15+ 954E              ;			 6 ..... AMARILLO
  16+ 954E              ; 			 7 ..... BLANCO
  17+ 954E              ;
  18+ 954E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 954E              ;
  20+ 954E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 954E
  22+ 954E
  23+ 954E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9551 11 01 40     	LD DE,$4001
  25+ 9554 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9557 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9559 ED B0        	LDIR
  28+ 955B 01 FF 02     	LD BC,767
  29+ 955E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 955F ED B0        	LDIR
  31+ 9561 C9           	ret
  32+ 9562
# file closed: Cls.asm
2215  9562              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9562              ; ------------------------------------------------------------------------
   2+ 9562              ;
   3+ 9562              ;	30/1/24
   4+ 9562              ;
   5+ 9562              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9562              ;	Fila superior "0", Columna izquierda "0".
   7+ 9562              ;
   8+ 9562              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9562              ;
  10+ 9562              ;	Modifica: A,BC y DE.
  11+ 9562
  12+ 9562              Genera_coordenadas
  13+ 9562
  14+ 9562 7D           	ld a,l
  15+ 9563 E6 1F        	and $1f
  16+ 9565
  17+ 9565 32 F9 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9568
  19+ 9568 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9569 FE 40        	cp $40
  21+ 956B 38 1C        	jr c,4F
  22+ 956D
  23+ 956D CD 44 95     	call calcula_tercio
  24+ 9570 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9571
  26+ 9571 1E 00        	ld e,0
  27+ 9573 7D           	ld a,l
  28+ 9574 E6 E0        	and $e0
  29+ 9576 28 01        	jr z,1F
  30+ 9578 04           	inc b
  31+ 9579
  32+ 9579 04           1 inc b
  33+ 957A 05           	dec b
  34+ 957B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 957D              ;														; _ , salimos.
  36+ 957D 1C           3 inc e
  37+ 957E D6 20        	sub 32
  38+ 9580 20 FB        	jr nz,3B
  39+ 9582 10 F5        	djnz 1B
  40+ 9584
  41+ 9584 7B           2 ld a,e
  42+ 9585 32 FA 8B     	ld (Coordenada_y),a
  43+ 9588 C9           	ret
  44+ 9589
  45+ 9589 AF           4 xor a
  46+ 958A 32 FA 8B     	ld (Coordenada_y),a
  47+ 958D C9           	ret
  48+ 958E
# file closed: Genera_coordenadas.asm
2216  958E              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 958E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 958E              ;
   3+ 958E              ;	20/09/24
   4+ 958E              ;
   5+ 958E              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 958E              ;   DE contiene Puntero_objeto.
   7+ 958E              ;   IX contiene el Puntero de impresión.
   8+ 958E
   9+ 958E              Genera_datos_de_impresion
  10+ 958E
  11+ 958E ED 73 47 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9592
  13+ 9592 2A 69 8C         ld hl,(Scanlines_album_SP)
  14+ 9595
  15+ 9595 3E 05            ld a,5
  16+ 9597 85               add l
  17+ 9598 6F               ld l,a
  18+ 9599
  19+ 9599 F9               ld sp,hl
  20+ 959A 22 69 8C         ld (Scanlines_album_SP),hl
  21+ 959D
  22+ 959D 21 00 00         ld hl,0
  23+ 95A0
  24+ 95A0 DD E5            push ix
  25+ 95A2 3B               dec sp
  26+ 95A3 ED 7A            adc hl,sp
  27+ 95A5 D5               push de
  28+ 95A6
  29+ 95A6              ; Recuperamos SP.
  30+ 95A6
  31+ 95A6 ED 7B 47 8C      ld sp,(Stack)
  32+ 95AA
  33+ 95AA E5               push hl
  34+ 95AB F1               pop af
  35+ 95AC 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95AD
  37+ 95AD              ; Tenemos el encabezado listo.
  38+ 95AD              ; Preparamos registros para generar los scanlines.
  39+ 95AD
  40+ 95AD DD E5            push ix
  41+ 95AF E1               pop hl                                          ; 1er scanline en HL.
  42+ 95B0
  43+ 95B0 ED 5B 69 8C      ld de,(Scanlines_album_SP)
  44+ 95B4
  45+ 95B4              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95B4              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95B4
  48+ 95B4 7C               ld a,h
  49+ 95B5 FE 50            cp $50
  50+ 95B7 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95B9
  52+ 95B9 20 05            jr nz,2F
  53+ 95BB
  54+ 95BB 7D               ld a,l
  55+ 95BC FE E0            cp $e0
  56+ 95BE 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95C0
  58+ 95C0 7D           2 ld a,l
  59+ 95C1 FE C0            cp $c0
  60+ 95C3 D2 59 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95C6
  62+ 95C6              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95C6
  64+ 95C6 CD 57 9A         call NextScan
  65+ 95C9 EB               ex de,hl
  66+ 95CA
  67+ 95CA 73               ld (hl),e
  68+ 95CB 23               inc hl
  69+ 95CC 72               ld (hl),d
  70+ 95CD 23               inc hl
  71+ 95CE
  72+ 95CE EB               ex de,hl
  73+ 95CF
  74+ 95CF CD 57 9A         call NextScan
  75+ 95D2 EB               ex de,hl
  76+ 95D3
  77+ 95D3 73               ld (hl),e
  78+ 95D4 23               inc hl
  79+ 95D5 72               ld (hl),d
  80+ 95D6 23               inc hl
  81+ 95D7
  82+ 95D7 EB               ex de,hl
  83+ 95D8
  84+ 95D8 CD 57 9A         call NextScan
  85+ 95DB EB               ex de,hl
  86+ 95DC
  87+ 95DC 73               ld (hl),e
  88+ 95DD 23               inc hl
  89+ 95DE 72               ld (hl),d
  90+ 95DF 23               inc hl
  91+ 95E0
  92+ 95E0 EB               ex de,hl
  93+ 95E1
  94+ 95E1 CD 57 9A         call NextScan
  95+ 95E4 EB               ex de,hl
  96+ 95E5
  97+ 95E5 73               ld (hl),e
  98+ 95E6 23               inc hl
  99+ 95E7 72               ld (hl),d
 100+ 95E8 23               inc hl
 101+ 95E9
 102+ 95E9 EB               ex de,hl
 103+ 95EA
 104+ 95EA CD 57 9A         call NextScan
 105+ 95ED EB               ex de,hl
 106+ 95EE
 107+ 95EE 73               ld (hl),e
 108+ 95EF 23               inc hl
 109+ 95F0 72               ld (hl),d
 110+ 95F1 23               inc hl
 111+ 95F2
 112+ 95F2 EB               ex de,hl
 113+ 95F3
 114+ 95F3 CD 57 9A         call NextScan
 115+ 95F6 EB               ex de,hl
 116+ 95F7
 117+ 95F7 73               ld (hl),e
 118+ 95F8 23               inc hl
 119+ 95F9 72               ld (hl),d
 120+ 95FA 23               inc hl
 121+ 95FB
 122+ 95FB EB               ex de,hl
 123+ 95FC
 124+ 95FC CD 57 9A         call NextScan
 125+ 95FF EB               ex de,hl
 126+ 9600
 127+ 9600 73               ld (hl),e
 128+ 9601 23               inc hl
 129+ 9602 72               ld (hl),d
 130+ 9603 23               inc hl
 131+ 9604
 132+ 9604 EB               ex de,hl
 133+ 9605
 134+ 9605 CD 57 9A         call NextScan
 135+ 9608 EB               ex de,hl
 136+ 9609
 137+ 9609 73               ld (hl),e
 138+ 960A 23               inc hl
 139+ 960B 72               ld (hl),d
 140+ 960C 23               inc hl
 141+ 960D
 142+ 960D EB               ex de,hl
 143+ 960E
 144+ 960E CD 57 9A         call NextScan
 145+ 9611 EB               ex de,hl
 146+ 9612
 147+ 9612 73               ld (hl),e
 148+ 9613 23               inc hl
 149+ 9614 72               ld (hl),d
 150+ 9615 23               inc hl
 151+ 9616
 152+ 9616 EB               ex de,hl
 153+ 9617
 154+ 9617 CD 57 9A         call NextScan
 155+ 961A EB               ex de,hl
 156+ 961B
 157+ 961B 73               ld (hl),e
 158+ 961C 23               inc hl
 159+ 961D 72               ld (hl),d
 160+ 961E 23               inc hl
 161+ 961F
 162+ 961F EB               ex de,hl
 163+ 9620
 164+ 9620 CD 57 9A         call NextScan
 165+ 9623 EB               ex de,hl
 166+ 9624
 167+ 9624 73               ld (hl),e
 168+ 9625 23               inc hl
 169+ 9626 72               ld (hl),d
 170+ 9627 23               inc hl
 171+ 9628
 172+ 9628 EB               ex de,hl
 173+ 9629
 174+ 9629 CD 57 9A         call NextScan
 175+ 962C EB               ex de,hl
 176+ 962D
 177+ 962D 73               ld (hl),e
 178+ 962E 23               inc hl
 179+ 962F 72               ld (hl),d
 180+ 9630 23               inc hl
 181+ 9631
 182+ 9631 EB               ex de,hl
 183+ 9632
 184+ 9632 CD 57 9A         call NextScan
 185+ 9635 EB               ex de,hl
 186+ 9636
 187+ 9636 73               ld (hl),e
 188+ 9637 23               inc hl
 189+ 9638 72               ld (hl),d
 190+ 9639 23               inc hl
 191+ 963A
 192+ 963A EB               ex de,hl
 193+ 963B
 194+ 963B CD 57 9A         call NextScan
 195+ 963E EB               ex de,hl
 196+ 963F
 197+ 963F 73               ld (hl),e
 198+ 9640 23               inc hl
 199+ 9641 72               ld (hl),d
 200+ 9642 23               inc hl
 201+ 9643
 202+ 9643 EB               ex de,hl
 203+ 9644
 204+ 9644 CD 57 9A         call NextScan
 205+ 9647 EB               ex de,hl
 206+ 9648
 207+ 9648              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 9648              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 9648              ;   _ generar sus scanlines.
 210+ 9648
 211+ 9648              ;    ld (Puntero_de_impresion_disparo),de
 212+ 9648
 213+ 9648 73               ld (hl),e
 214+ 9649 23               inc hl
 215+ 964A 72               ld (hl),d
 216+ 964B 23               inc hl
 217+ 964C
 218+ 964C              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 964C
 220+ 964C 22 69 8C         ld (Scanlines_album_SP),hl
 221+ 964F
 222+ 964F EB               ex de,hl
 223+ 9650
 224+ 9650              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9650
 226+ 9650              ;    call NextScan
 227+ 9650              ;    call NextScan
 228+ 9650
 229+ 9650 22 74 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9653
 231+ 9653              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9653
 233+ 9653 08               ex af,af
 234+ 9654
 235+ 9654 F5               push af
 236+ 9655 E1               pop hl
 237+ 9656
 238+ 9656 36 10            ld (hl),16
 239+ 9658
 240+ 9658 C9               ret
 241+ 9659
 242+ 9659              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9659
 244+ 9659              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9659
 246+ 9659 3E 57            ld a,$57
 247+ 965B 94               sub h
 248+ 965C 47               ld b,a
 249+ 965D
 250+ 965D 3E DF            ld a,$df
 251+ 965F BD               cp l
 252+ 9660 38 04            jr c,1F
 253+ 9662
 254+ 9662 3E 08            ld a,8
 255+ 9664 80               add b
 256+ 9665 47               ld b,a
 257+ 9666
 258+ 9666              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9666              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9666
 261+ 9666 48           1 ld c,b
 262+ 9667 0C               inc c
 263+ 9668
 264+ 9668 04               inc b
 265+ 9669 05               dec b
 266+ 966A 20 02            jr nz,3F
 267+ 966C
 268+ 966C 18 0B            jr 6F
 269+ 966E
 270+ 966E CD 57 9A     3 call NextScan
 271+ 9671 EB               ex de,hl
 272+ 9672
 273+ 9672 73               ld (hl),e
 274+ 9673 23               inc hl
 275+ 9674 72               ld (hl),d
 276+ 9675 23               inc hl
 277+ 9676
 278+ 9676 EB               ex de,hl
 279+ 9677 10 F5            djnz 3B
 280+ 9679
 281+ 9679 ED 53 69 8C  6 ld (Scanlines_album_SP),de
 282+ 967D
 283+ 967D 08           5 ex af,af
 284+ 967E F5               push af
 285+ 967F E1               pop hl
 286+ 9680
 287+ 9680 71               ld (hl),c
 288+ 9681
 289+ 9681 C9               ret
 290+ 9682
# file closed: Genera_datos_de_impresion.asm
2217  9682              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9682              ; -----------------------------------------------------------------------------
   2+ 9682              ;
   3+ 9682              ;   11/03/24
   4+ 9682              ;
   5+ 9682
   6+ 9682              Pinta_Sprites
   7+ 9682
   8+ 9682              ;    ld hl,(Scanlines_album_SP)
   9+ 9682              ;    call Extrae_address
  10+ 9682
  11+ 9682              ;    inc h
  12+ 9682              ;    dec h
  13+ 9682              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9682
  15+ 9682 ED 73 47 8C      ld (Stack),sp
  16+ 9686
  17+ 9686 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9687              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9687 2C               inc l
  20+ 9688 2C               inc l
  21+ 9689
  22+ 9689 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 968A
  24+ 968A 2C               inc l
  25+ 968B F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 968C
  27+ 968C              ;   Seleccionamos rutina de impresión:
  28+ 968C
  29+ 968C 3E 10            ld a,16
  30+ 968E B8               cp b
  31+ 968F C2 8B 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9692
  33+ 9692              ;   Rutinas:
  34+ 9692
  35+ 9692              Pinta_rapido    ;   1520 t/states.
  36+ 9692
  37+ 9692 E1               pop hl
  38+ 9693
  39+ 9693 1A               ld a,(de)
  40+ 9694 AE               xor (hl)
  41+ 9695 77               ld (hl),a
  42+ 9696 2C               inc l
  43+ 9697 1C               inc e
  44+ 9698 1A               ld a,(de)
  45+ 9699 AE               xor (hl)
  46+ 969A 77               ld (hl),a
  47+ 969B 2C               inc l
  48+ 969C 1C               inc e
  49+ 969D 1A               ld a,(de)
  50+ 969E AE               xor (hl)
  51+ 969F 77               ld (hl),a
  52+ 96A0 13               inc de
  53+ 96A1
  54+ 96A1 E1               pop hl
  55+ 96A2
  56+ 96A2 1A               ld a,(de)
  57+ 96A3 AE               xor (hl)
  58+ 96A4 77               ld (hl),a
  59+ 96A5 2C               inc l
  60+ 96A6 1C               inc e
  61+ 96A7 1A               ld a,(de)
  62+ 96A8 AE               xor (hl)
  63+ 96A9 77               ld (hl),a
  64+ 96AA 2C               inc l
  65+ 96AB 1C               inc e
  66+ 96AC 1A               ld a,(de)
  67+ 96AD AE               xor (hl)
  68+ 96AE 77               ld (hl),a
  69+ 96AF 13               inc de
  70+ 96B0
  71+ 96B0 E1               pop hl
  72+ 96B1
  73+ 96B1 1A               ld a,(de)
  74+ 96B2 AE               xor (hl)
  75+ 96B3 77               ld (hl),a
  76+ 96B4 2C               inc l
  77+ 96B5 1C               inc e
  78+ 96B6 1A               ld a,(de)
  79+ 96B7 AE               xor (hl)
  80+ 96B8 77               ld (hl),a
  81+ 96B9 2C               inc l
  82+ 96BA 1C               inc e
  83+ 96BB 1A               ld a,(de)
  84+ 96BC AE               xor (hl)
  85+ 96BD 77               ld (hl),a
  86+ 96BE 13               inc de
  87+ 96BF
  88+ 96BF E1               pop hl
  89+ 96C0
  90+ 96C0 1A               ld a,(de)
  91+ 96C1 AE               xor (hl)
  92+ 96C2 77               ld (hl),a
  93+ 96C3 2C               inc l
  94+ 96C4 1C               inc e
  95+ 96C5 1A               ld a,(de)
  96+ 96C6 AE               xor (hl)
  97+ 96C7 77               ld (hl),a
  98+ 96C8 2C               inc l
  99+ 96C9 1C               inc e
 100+ 96CA 1A               ld a,(de)
 101+ 96CB AE               xor (hl)
 102+ 96CC 77               ld (hl),a
 103+ 96CD 13               inc de
 104+ 96CE
 105+ 96CE E1               pop hl
 106+ 96CF
 107+ 96CF 1A               ld a,(de)
 108+ 96D0 AE               xor (hl)
 109+ 96D1 77               ld (hl),a
 110+ 96D2 2C               inc l
 111+ 96D3 1C               inc e
 112+ 96D4 1A               ld a,(de)
 113+ 96D5 AE               xor (hl)
 114+ 96D6 77               ld (hl),a
 115+ 96D7 2C               inc l
 116+ 96D8 1C               inc e
 117+ 96D9 1A               ld a,(de)
 118+ 96DA AE               xor (hl)
 119+ 96DB 77               ld (hl),a
 120+ 96DC 13               inc de
 121+ 96DD
 122+ 96DD E1               pop hl
 123+ 96DE
 124+ 96DE 1A               ld a,(de)
 125+ 96DF AE               xor (hl)
 126+ 96E0 77               ld (hl),a
 127+ 96E1 2C               inc l
 128+ 96E2 1C               inc e
 129+ 96E3 1A               ld a,(de)
 130+ 96E4 AE               xor (hl)
 131+ 96E5 77               ld (hl),a
 132+ 96E6 2C               inc l
 133+ 96E7 1C               inc e
 134+ 96E8 1A               ld a,(de)
 135+ 96E9 AE               xor (hl)
 136+ 96EA 77               ld (hl),a
 137+ 96EB 13               inc de
 138+ 96EC
 139+ 96EC E1               pop hl
 140+ 96ED
 141+ 96ED 1A               ld a,(de)
 142+ 96EE AE               xor (hl)
 143+ 96EF 77               ld (hl),a
 144+ 96F0 2C               inc l
 145+ 96F1 1C               inc e
 146+ 96F2 1A               ld a,(de)
 147+ 96F3 AE               xor (hl)
 148+ 96F4 77               ld (hl),a
 149+ 96F5 2C               inc l
 150+ 96F6 1C               inc e
 151+ 96F7 1A               ld a,(de)
 152+ 96F8 AE               xor (hl)
 153+ 96F9 77               ld (hl),a
 154+ 96FA 13               inc de
 155+ 96FB
 156+ 96FB E1               pop hl
 157+ 96FC
 158+ 96FC 1A               ld a,(de)
 159+ 96FD AE               xor (hl)
 160+ 96FE 77               ld (hl),a
 161+ 96FF 2C               inc l
 162+ 9700 1C               inc e
 163+ 9701 1A               ld a,(de)
 164+ 9702 AE               xor (hl)
 165+ 9703 77               ld (hl),a
 166+ 9704 2C               inc l
 167+ 9705 1C               inc e
 168+ 9706 1A               ld a,(de)
 169+ 9707 AE               xor (hl)
 170+ 9708 77               ld (hl),a
 171+ 9709 13               inc de
 172+ 970A
 173+ 970A E1               pop hl
 174+ 970B
 175+ 970B 1A               ld a,(de)
 176+ 970C AE               xor (hl)
 177+ 970D 77               ld (hl),a
 178+ 970E 2C               inc l
 179+ 970F 1C               inc e
 180+ 9710 1A               ld a,(de)
 181+ 9711 AE               xor (hl)
 182+ 9712 77               ld (hl),a
 183+ 9713 2C               inc l
 184+ 9714 1C               inc e
 185+ 9715 1A               ld a,(de)
 186+ 9716 AE               xor (hl)
 187+ 9717 77               ld (hl),a
 188+ 9718 13               inc de
 189+ 9719
 190+ 9719 E1               pop hl
 191+ 971A
 192+ 971A 1A               ld a,(de)
 193+ 971B AE               xor (hl)
 194+ 971C 77               ld (hl),a
 195+ 971D 2C               inc l
 196+ 971E 1C               inc e
 197+ 971F 1A               ld a,(de)
 198+ 9720 AE               xor (hl)
 199+ 9721 77               ld (hl),a
 200+ 9722 2C               inc l
 201+ 9723 1C               inc e
 202+ 9724 1A               ld a,(de)
 203+ 9725 AE               xor (hl)
 204+ 9726 77               ld (hl),a
 205+ 9727 13               inc de
 206+ 9728
 207+ 9728 E1               pop hl
 208+ 9729
 209+ 9729 1A               ld a,(de)
 210+ 972A AE               xor (hl)
 211+ 972B 77               ld (hl),a
 212+ 972C 2C               inc l
 213+ 972D 1C               inc e
 214+ 972E 1A               ld a,(de)
 215+ 972F AE               xor (hl)
 216+ 9730 77               ld (hl),a
 217+ 9731 2C               inc l
 218+ 9732 1C               inc e
 219+ 9733 1A               ld a,(de)
 220+ 9734 AE               xor (hl)
 221+ 9735 77               ld (hl),a
 222+ 9736 13               inc de
 223+ 9737
 224+ 9737 E1               pop hl
 225+ 9738
 226+ 9738 1A               ld a,(de)
 227+ 9739 AE               xor (hl)
 228+ 973A 77               ld (hl),a
 229+ 973B 2C               inc l
 230+ 973C 1C               inc e
 231+ 973D 1A               ld a,(de)
 232+ 973E AE               xor (hl)
 233+ 973F 77               ld (hl),a
 234+ 9740 2C               inc l
 235+ 9741 1C               inc e
 236+ 9742 1A               ld a,(de)
 237+ 9743 AE               xor (hl)
 238+ 9744 77               ld (hl),a
 239+ 9745 13               inc de
 240+ 9746
 241+ 9746 E1               pop hl
 242+ 9747
 243+ 9747 1A               ld a,(de)
 244+ 9748 AE               xor (hl)
 245+ 9749 77               ld (hl),a
 246+ 974A 2C               inc l
 247+ 974B 1C               inc e
 248+ 974C 1A               ld a,(de)
 249+ 974D AE               xor (hl)
 250+ 974E 77               ld (hl),a
 251+ 974F 2C               inc l
 252+ 9750 1C               inc e
 253+ 9751 1A               ld a,(de)
 254+ 9752 AE               xor (hl)
 255+ 9753 77               ld (hl),a
 256+ 9754 13               inc de
 257+ 9755
 258+ 9755 E1               pop hl
 259+ 9756
 260+ 9756 1A               ld a,(de)
 261+ 9757 AE               xor (hl)
 262+ 9758 77               ld (hl),a
 263+ 9759 2C               inc l
 264+ 975A 1C               inc e
 265+ 975B 1A               ld a,(de)
 266+ 975C AE               xor (hl)
 267+ 975D 77               ld (hl),a
 268+ 975E 2C               inc l
 269+ 975F 1C               inc e
 270+ 9760 1A               ld a,(de)
 271+ 9761 AE               xor (hl)
 272+ 9762 77               ld (hl),a
 273+ 9763 13               inc de
 274+ 9764
 275+ 9764 E1               pop hl
 276+ 9765
 277+ 9765 1A               ld a,(de)
 278+ 9766 AE               xor (hl)
 279+ 9767 77               ld (hl),a
 280+ 9768 2C               inc l
 281+ 9769 1C               inc e
 282+ 976A 1A               ld a,(de)
 283+ 976B AE               xor (hl)
 284+ 976C 77               ld (hl),a
 285+ 976D 2C               inc l
 286+ 976E 1C               inc e
 287+ 976F 1A               ld a,(de)
 288+ 9770 AE               xor (hl)
 289+ 9771 77               ld (hl),a
 290+ 9772 13               inc de
 291+ 9773
 292+ 9773 E1               pop hl
 293+ 9774
 294+ 9774 1A               ld a,(de)
 295+ 9775 AE               xor (hl)
 296+ 9776 77               ld (hl),a
 297+ 9777 2C               inc l
 298+ 9778 1C               inc e
 299+ 9779 1A               ld a,(de)
 300+ 977A AE               xor (hl)
 301+ 977B 77               ld (hl),a
 302+ 977C 2C               inc l
 303+ 977D 1C               inc e
 304+ 977E 1A               ld a,(de)
 305+ 977F AE               xor (hl)
 306+ 9780 77               ld (hl),a
 307+ 9781 13               inc de
 308+ 9782
 309+ 9782 ED 73 69 8C      ld (Scanlines_album_SP),sp
 310+ 9786 ED 7B 47 8C      ld sp,(Stack)
 311+ 978A C9               ret
 312+ 978B
 313+ 978B              Pinta_lento
 314+ 978B
 315+ 978B E1           1 pop hl
 316+ 978C
 317+ 978C 1A               ld a,(de)
 318+ 978D AE               xor (hl)
 319+ 978E 77               ld (hl),a
 320+ 978F 2C               inc l
 321+ 9790 1C               inc e
 322+ 9791 1A               ld a,(de)
 323+ 9792 AE               xor (hl)
 324+ 9793 77               ld (hl),a
 325+ 9794 2C               inc l
 326+ 9795 1C               inc e
 327+ 9796 1A               ld a,(de)
 328+ 9797 AE               xor (hl)
 329+ 9798 77               ld (hl),a
 330+ 9799 13               inc de
 331+ 979A
 332+ 979A 10 EF            djnz 1B
 333+ 979C
 334+ 979C ED 73 69 8C      ld (Scanlines_album_SP),sp
 335+ 97A0 ED 7B 47 8C      ld sp,(Stack)
 336+ 97A4 C9               ret
# file closed: Pinta_Sprites.asm
2218  97A5              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 97A5              ; ******************************************************************************************************************************************************************************************
   2+ 97A5              ;
   3+ 97A5              ; 26/06/23
   4+ 97A5              ;
   5+ 97A5              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 97A5
   7+ 97A5              Draw
   8+ 97A5
   9+ 97A5 CD 4B 9A     	call Prepara_draw
  10+ 97A8 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 97A9 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 97AA 28 05        	jr z,2F
  13+ 97AC
  14+ 97AC 3A 17 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 97AF 18 0C        	jr 1F
  16+ 97B1
  17+ 97B1 2A 15 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 97B4 22 08 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 97B7 CD 43 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 97BA              ;													; _la esquina superior izquierda de la pantalla.
  21+ 97BA
  22+ 97BA CD EA 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 97BD
  24+ 97BD 3A 05 8C     1 ld a,(Ctrl_0)
  25+ 97C0 CB 6F        	bit 5,a
  26+ 97C2 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 97C4
  28+ 97C4 CD D9 97     	call Comprueba_limite_horizontal
  29+ 97C7 CD 69 98     	call Comprueba_limite_vertical
  30+ 97CA
  31+ 97CA              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 97CA              ; -----------------------
  33+ 97CA              ; -----------------------
  34+ 97CA              ; -----------------------
  35+ 97CA
  36+ 97CA CD BF 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 97CD CD F6 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 97D0
  39+ 97D0 3A 05 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 97D3 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 97D5 32 05 8C     	ld (Ctrl_0),a
  42+ 97D8
  43+ 97D8 C9           	ret
  44+ 97D9
  45+ 97D9              ; *******************************************************************************************************************************************************************************************
  46+ 97D9              ;	21/01/23
  47+ 97D9              ;
  48+ 97D9              ; 	Comprueba_limite_horizontal.
  49+ 97D9              ;
  50+ 97D9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 97D9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 97D9              ;
  53+ 97D9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 97D9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 97D9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 97D9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 97D9
  58+ 97D9
  59+ 97D9
  60+ 97D9 3A 05 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 97DC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 97DE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 97E0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 97E2 32 05 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 97E5 18 09            jr 6F
  66+ 97E7 CB 5F        1 bit 3,a
  67+ 97E9 28 0A            jr z,2F
  68+ 97EB E6 F7            and $f7
  69+ 97ED 32 05 8C         ld (Ctrl_0),a
  70+ 97F0 CD 43 99     6 call Inicializacion
  71+ 97F3 18 5B            jr 5F
  72+ 97F5 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 97F6
  74+ 97F6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 97F6              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 97F6
  77+ 97F6 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 97F7 2A 19 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 97FA CD 44 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 97FD 67           	ld h,a
  81+ 97FE EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 97FF CD 44 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9802 67           	ld h,a
  84+ 9803 A7           	and a
  85+ 9804 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9806 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9807 3A 17 8C     	ld a,(Cuad_objeto)
  88+ 980A FE 02        	cp 2
  89+ 980C 38 1E        	jr c,3F
  90+ 980E 28 1C        	jr z,3F
  91+ 9810 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9811 28 23            jr z,7F
  93+ 9813 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9815 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9817 E1           	pop hl
  96+ 9818
  97+ 9818              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9818              ; _para indicar con E="2" en caso necesario.
  99+ 9818
 100+ 9818 E5               push hl
 101+ 9819 C5               push bc
 102+ 981A CD 44 95     	call calcula_tercio
 103+ 981D FE 01        	cp 1
 104+ 981F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9821 CD 51 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9824 28 26            jr z,9F
 107+ 9826 38 24            jr c,9F
 108+ 9828 1E 00        11 ld e,0
 109+ 982A 18 22            jr 8F
 110+ 982C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 982D 28 07        	jr z, 7F
 112+ 982F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9831 1E 00         	ld e,0
 114+ 9833 E1           	pop hl
 115+ 9834 18 04        	jr 4F
 116+ 9836 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9838 18 15            jr 10F
 118+ 983A
 119+ 983A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 983A              ; _para indicar con E="2" en caso necesario.
 121+ 983A
 122+ 983A E5           4 push hl
 123+ 983B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 983C CD 44 95     	call calcula_tercio
 125+ 983F FE 01        	cp 1
 126+ 9841 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9843 CD 51 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9846 28 04            jr z,9F
 129+ 9848 30 02            jr nc,9F
 130+ 984A 18 02        	jr 8F
 131+ 984C 1E 02        9 ld e,2
 132+ 984E C1           8 pop bc
 133+ 984F E1           10 pop hl
 134+ 9850 C9           5 ret
 135+ 9851
 136+ 9851              ; --------------------
 137+ 9851              ;
 138+ 9851              ; 25/08/22
 139+ 9851
 140+ 9851 CD 44 95     Comprueba_centro call calcula_tercio
 141+ 9854 67               ld h,a
 142+ 9855 08           	ex af,af
 143+ 9856 FE 02        	cp 2
 144+ 9858 38 07        	jr c,1F
 145+ 985A 28 05        	jr z,1F
 146+ 985C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 985F 18 03        	jr 2F
 148+ 9861 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9864 08           2 ex af,af
 150+ 9865 A7               and a
 151+ 9866 ED 42            sbc hl,bc
 152+ 9868 C9               ret
 153+ 9869
 154+ 9869              ; *********************************************************************************************************************************************************************************************
 155+ 9869              ;
 156+ 9869              ;   16/8/22
 157+ 9869              ;
 158+ 9869              ;	Comprueba_limite_vertical
 159+ 9869              ;
 160+ 9869              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9869              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9869              ;
 163+ 9869
 164+ 9869 2A 08 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 986C 7D           	ld a,l
 166+ 986D E6 1F        	and $1F
 167+ 986F 57           	ld d,a
 168+ 9870 3A 1B 8C     	ld a,(Limite_vertical)
 169+ 9873 BA           	cp d 											; Límite - Posición.
 170+ 9874 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9875 3A 17 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9878 CB 47        	bit 0,a
 173+ 987A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 987C
 175+ 987C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 987C
 177+ 987C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 987D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 987F
 180+ 987F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 987F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 987F
 183+ 987F 3A F9 8B         ld a,(Coordenada_X)
 184+ 9882 16 0F            ld d,Centro_izquierda
 185+ 9884 A7               and a
 186+ 9885 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9886 28 1E            jr z,3F
 188+ 9888 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 988A              ;                                                    ; _salimos sin modificar nada.
 190+ 988A 18 0E            jr 2F
 191+ 988C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 988D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 988F
 194+ 988F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 988F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 988F
 197+ 988F 3A F9 8B         ld a,(Coordenada_X)
 198+ 9892 16 10            ld d,Centro_derecha
 199+ 9894 A7               and a
 200+ 9895 92               sub d
 201+ 9896 28 0E            jr z,3F
 202+ 9898 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 989A              ;                                                    ; _salimos sin modificar nada.
 204+ 989A CB 43        2 bit 0,e
 205+ 989C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 989E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 989F CD 33 99         call Modificaccionne
 208+ 98A2 C1           	pop bc
 209+ 98A3 CD 43 99         call Inicializacion
 210+ 98A6 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 98A7
 212+ 98A7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 98A7
 214+ 98A7 C5           4 push bc
 215+ 98A8 01 07 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 98AB 0A           	ld a,(bc)
 217+ 98AC 3D           	dec a
 218+ 98AD 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 98AE 7D           	ld a,l
 220+ 98AF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 98B0 CB 47        	bit 0,a
 222+ 98B2 28 03        	jr z,5F
 223+ 98B4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 98B5 18 2E        	jr 7F
 225+ 98B7
 226+ 98B7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 98B7
 228+ 98B7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 98B8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 98B9 3A 05 8C     	ld a,(Ctrl_0)
 231+ 98BC CB 4F        	bit 1,a
 232+ 98BE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 98C0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 98C1
 235+ 98C1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 98C1
 237+ 98C1 1C               inc e
 238+ 98C2 1D               dec e
 239+ 98C3 20 07            jr nz,12F
 240+ 98C5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 98C6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 98C7 22 08 8C     	ld (Posicion_actual),hl
 243+ 98CA 18 44        13 jr 9F
 244+ 98CC CB 43        12 bit 0,e
 245+ 98CE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 98D0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 98D0 C1           	pop bc
 248+ 98D1 18 D3        	jr 3B
 249+ 98D3 80           14 add b
 250+ 98D4 6F               ld l,a
 251+ 98D5 22 08 8C     	ld (Posicion_actual),hl
 252+ 98D8 CD 33 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 98DB 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 98DD E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 98DF 32 05 8C         ld (Ctrl_0),a
 256+ 98E2 F1           	pop af
 257+ 98E3 18 2B        	jr 9F
 258+ 98E5
 259+ 98E5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 98E5
 261+ 98E5 F5           7 push af
 262+ 98E6 3A 05 8C     	ld a,(Ctrl_0)
 263+ 98E9 CB 47        	bit 0,a
 264+ 98EB 20 1D        	jr nz,8F
 265+ 98ED F1           	pop af
 266+ 98EE
 267+ 98EE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 98EE
 269+ 98EE 1C           	inc e
 270+ 98EF 1D               dec e
 271+ 98F0 20 07            jr nz,10F
 272+ 98F2 90           	sub b
 273+ 98F3 6F               ld l,a
 274+ 98F4 22 08 8C     	ld (Posicion_actual),hl
 275+ 98F7 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 98F9              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 98F9 CB 43        10 bit 0,e
 278+ 98FB 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 98FD              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 98FD C1           	pop bc
 281+ 98FE 18 A6        	jr 3B
 282+ 9900 90           16 sub b
 283+ 9901 6F               ld l,a
 284+ 9902 22 08 8C     	ld (Posicion_actual),hl
 285+ 9905 CD 33 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9908 18 06            jr 9F
 287+ 990A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 990C 32 05 8C         ld (Ctrl_0),a
 289+ 990F F1           	pop af
 290+ 9910 C1           9 pop bc
 291+ 9911 1E 00        	ld e,0
 292+ 9913 CD 43 99         call Inicializacion
 293+ 9916 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9917 08           	ex af,af
 295+ 9918 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9919 18 8B            jr 3B
 297+ 991B
 298+ 991B              ; --------------------
 299+ 991B
 300+ 991B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 991D CD 66 9A     1 call PreviousScan
 302+ 9920 10 FB            djnz 1B
 303+ 9922 22 08 8C     	ld (Posicion_actual),hl
 304+ 9925 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9926 C9           	ret
 306+ 9927
 307+ 9927              ; --------------------
 308+ 9927
 309+ 9927 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9929 CD 57 9A     1 call NextScan
 311+ 992C 10 FB            djnz 1B
 312+ 992E 22 08 8C     	ld (Posicion_actual),hl
 313+ 9931 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9932 C9           	ret
 315+ 9933
 316+ 9933              ; --------------------
 317+ 9933              ;
 318+ 9933              ;	22/01/23
 319+ 9933              ;
 320+ 9933              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9933              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9933              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9933
 324+ 9933
 325+ 9933              Modificaccionne
 326+ 9933
 327+ 9933 3A 17 8C     	ld a,(Cuad_objeto)
 328+ 9936 FE 02        	cp 2
 329+ 9938 CC 1B 99         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 993B DC 1B 99         call c,Modifica_Pos_actual
 331+ 993E C8           	ret z
 332+ 993F CD 27 99         call Modifica_Pos_actual2
 333+ 9942 C9               ret
 334+ 9943
 335+ 9943              ; *************************************************************************************************************************************************************************************************
 336+ 9943              ;
 337+ 9943              ;	13/8/22
 338+ 9943              ;
 339+ 9943              ;	Inicializacion
 340+ 9943              ;
 341+ 9943              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9943              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9943              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9943              ;
 345+ 9943              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9943              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9943              ;	_ desaparece/aparece.
 348+ 9943
 349+ 9943              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9943              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9943              ;
 352+ 9943              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9943              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9943              ; 		   [E] ="0"
 355+ 9943
 356+ 9943              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9943
 358+ 9943 CD 44 95     Inicializacion call calcula_tercio
 359+ 9946 28 36        	jr z,primit
 360+ 9948 E6 02        	and 2
 361+ 994A 20 07        	jr nz,segmit
 362+ 994C 7D           	ld a,l
 363+ 994D FE 7F        	cp $7f
 364+ 994F 38 2D        	jr c,primit
 365+ 9951 28 2B        	jr z,primit
 366+ 9953 CD B9 99     segmit call column
 367+ 9956 38 13        	jr c,tercuad
 368+ 9958 3E 04        cuarcuad ld a,4
 369+ 995A 32 17 8C     	ld (Cuad_objeto),a
 370+ 995D 21 20 48     	ld hl,$4820
 371+ 9960 22 19 8C     	ld (Limite_horizontal),hl
 372+ 9963 21 1B 8C     	ld hl,Limite_vertical
 373+ 9966 36 0D        	ld (hl),$0d
 374+ 9968 08           	ex af,af
 375+ 9969 18 3C        	jr 1F
 376+ 996B              tercuad
 377+ 996B 3E 03        	ld a,3
 378+ 996D 32 17 8C     	ld (Cuad_objeto),a
 379+ 9970 21 20 48     	ld hl,$4820
 380+ 9973 22 19 8C     	ld (Limite_horizontal),hl
 381+ 9976 21 1B 8C     	ld hl,Limite_vertical
 382+ 9979 36 12        	ld (hl),$12
 383+ 997B 08           	ex af,af
 384+ 997C 18 29        	jr 1F
 385+ 997E CD B9 99     primit call column
 386+ 9981 38 13        	jr c, primcuad
 387+ 9983              segcuad
 388+ 9983 3E 02        	ld a,2
 389+ 9985 32 17 8C     	ld (Cuad_objeto),a
 390+ 9988 21 C0 4F     	ld hl,$4fc0
 391+ 998B 22 19 8C     	ld (Limite_horizontal),hl
 392+ 998E 21 1B 8C     	ld hl,Limite_vertical
 393+ 9991 36 0D        	ld (hl),$0d
 394+ 9993 08           	ex af,af
 395+ 9994 18 11        	jr 1F
 396+ 9996              primcuad
 397+ 9996 3E 01        	ld a,1
 398+ 9998 32 17 8C     	ld (Cuad_objeto),a
 399+ 999B 21 C0 4F     	ld hl,$4fc0
 400+ 999E 22 19 8C     	ld (Limite_horizontal),hl
 401+ 99A1 21 1B 8C     	ld hl,Limite_vertical
 402+ 99A4 36 12        	ld (hl),$12
 403+ 99A6 08           	ex af,af
 404+ 99A7
 405+ 99A7 C5           1 push bc
 406+ 99A8 E5           	push hl
 407+ 99A9 D5           	push de
 408+ 99AA
 409+ 99AA 2A 08 8C     	ld hl,(Posicion_actual)
 410+ 99AD CD 62 95     	call Genera_coordenadas
 411+ 99B0
 412+ 99B0 D1           	pop de
 413+ 99B1 E1           	pop hl
 414+ 99B2 C1           	pop bc
 415+ 99B3
 416+ 99B3 21 05 8C     	ld hl,Ctrl_0
 417+ 99B6 CB EE        	set 5,(hl)
 418+ 99B8 C9           	ret
 419+ 99B9
 420+ 99B9              ; ------------------------------------------------------------------------------------------------------------------
 421+ 99B9
 422+ 99B9              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 99B9              ;
 424+ 99B9              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 99B9
 426+ 99B9 7D           column ld a,l
 427+ 99BA E6 1F        	and $1f
 428+ 99BC FE 10         	cp $10
 429+ 99BE C9            	ret
 430+ 99BF
 431+ 99BF              ; --------------------------------------------------------------------------------------------------------------------
 432+ 99BF              ;
 433+ 99BF              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 99BF              ;
 435+ 99BF              ; 14/12/22
 436+ 99BF              ;
 437+ 99BF              ;	Modifica: A y BC.
 438+ 99BF
 439+ 99BF 3A 17 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 99C2 E6 01        	and 1
 441+ 99C4 28 17        	jr z,1F
 442+ 99C6
 443+ 99C6              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 99C6
 445+ 99C6 3A F9 8B     	ld a,(Coordenada_X)
 446+ 99C9 47           	ld b,a
 447+ 99CA 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 99CB 79           	ld a,c
 449+ 99CC 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 99CD 38 08        	jr c,2F
 451+ 99CF 47           	ld b,a
 452+ 99D0 79           	ld a,c
 453+ 99D1 90           	sub b
 454+ 99D2 32 18 8C     	ld (Columnas),a
 455+ 99D5 18 1B        	jr 4F
 456+ 99D7 79           2 ld a,c
 457+ 99D8 32 18 8C     	ld (Columnas),a
 458+ 99DB 18 15        	jr 4F
 459+ 99DD
 460+ 99DD              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 99DD
 462+ 99DD 3A F9 8B     1 ld a,(Coordenada_X)
 463+ 99E0 81           	add c
 464+ 99E1 3D           	dec a
 465+ 99E2 D6 1F        	sub $1f
 466+ 99E4 38 08        	jr c,3F
 467+ 99E6 47           	ld b,a
 468+ 99E7 79           	ld a,c
 469+ 99E8 90           	sub b
 470+ 99E9 32 18 8C     	ld (Columnas),a
 471+ 99EC 18 04        	jr 4F
 472+ 99EE 79           3 ld a,c
 473+ 99EF 32 18 8C     	ld (Columnas),a
 474+ 99F2 D9           4 exx
 475+ 99F3 4F           	ld c,a
 476+ 99F4 D9           	exx
 477+ 99F5 C9            ret
 478+ 99F6
 479+ 99F6              ; --------------------------------------------------------------------------------------------------------------------
 480+ 99F6              ;
 481+ 99F6              ;   19/7/23
 482+ 99F6              ;
 483+ 99F6              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 99F6              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 99F6              ;
 486+ 99F6              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 99F6              ;			HL e IY Contienen (Puntero_objeto).
 488+ 99F6              ;
 489+ 99F6              ;	DESTRUYE: HL,B Y A.
 490+ 99F6
 491+ 99F6 3A 17 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 99F9 FE 02        	cp 2
 493+ 99FB 38 18        	jr c,1F
 494+ 99FD 28 16        	jr z,1F
 495+ 99FF E6 01        	and 1
 496+ 9A01 28 0D        	jr z,3F
 497+ 9A03
 498+ 9A03              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9A03
 500+ 9A03 CD 3F 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9A06
 502+ 9A06 7D           9 ld a,l
 503+ 9A07 E6 1F        	and $1f
 504+ 9A09 28 2A        	jr z,7F
 505+ 9A0B 2B           	dec hl
 506+ 9A0C 10 F8        	djnz 9B
 507+ 9A0E 18 25        	jr 7F
 508+ 9A10
 509+ 9A10              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9A10
 511+ 9A10 2A 08 8C     3 ld hl,(Posicion_actual)
 512+ 9A13 18 20        	jr 7F
 513+ 9A15
 514+ 9A15 28 14        1 jr z,2F
 515+ 9A17
 516+ 9A17              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9A17
 518+ 9A17 CD 3F 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9A1A
 520+ 9A1A 7D           4 ld a,l
 521+ 9A1B E6 1F        	and $1f
 522+ 9A1D 28 03        	jr z,6F
 523+ 9A1F 2B           	dec hl
 524+ 9A20 10 F8        	djnz 4B
 525+ 9A22 06 0F        6 ld b,15
 526+ 9A24 CD 66 9A     5 call PreviousScan
 527+ 9A27 10 FB        	djnz 5B
 528+ 9A29 18 0A        	jr 7F
 529+ 9A2B
 530+ 9A2B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9A2B
 532+ 9A2B CD 3F 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9A2E 06 0F        	ld b,15
 534+ 9A30 CD 66 9A     8 call PreviousScan
 535+ 9A33 10 FB        	djnz 8B
 536+ 9A35
 537+ 9A35 E5           7 push hl
 538+ 9A36 DD E1        	pop ix
 539+ 9A38
 540+ 9A38 2A 0A 8C     	ld hl,(Puntero_objeto)
 541+ 9A3B E5           	push hl
 542+ 9A3C FD E1        	pop iy
 543+ 9A3E
 544+ 9A3E C9           	ret
 545+ 9A3F
 546+ 9A3F              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9A3F              ;
 548+ 9A3F              ;	2/1/23
 549+ 9A3F              ;
 550+ 9A3F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9A3F              ;
 552+ 9A3F              ;	Tras esta rutina tenemos:
 553+ 9A3F              ;
 554+ 9A3F              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9A3F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9A3F              ;
 557+ 9A3F              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9A3F
 559+ 9A3F 2A 08 8C     Operandos ld hl,(Posicion_actual)
 560+ 9A42 3A 18 8C     	ld a,(Columnas)
 561+ 9A45 3D           	dec a
 562+ 9A46 20 01        	jr nz,1F
 563+ 9A48 3C           	inc a
 564+ 9A49 47           1 ld b,a
 565+ 9A4A C9           	ret
 566+ 9A4B
 567+ 9A4B              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9A4B              ;
 569+ 9A4B              ;	Prepara_draw
 570+ 9A4B              ;
 571+ 9A4B              ;	Es una rutina de carga.
 572+ 9A4B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9A4B              ;
 574+ 9A4B              ;	FUNCIONAMIENTO:
 575+ 9A4B              ;
 576+ 9A4B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9A4B              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9A4B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9A4B              ;
 580+ 9A4B              ;	DESTRUYE:
 581+ 9A4B              ;
 582+ 9A4B              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9A4B
 584+ 9A4B 21 06 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9A4E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9A4F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9A50 4E           	ld c,(hl)
 588+ 9A51 2A 08 8C     	ld hl,(Posicion_actual)
 589+ 9A54 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9A56 C9           	ret
 591+ 9A57
 592+ 9A57              ;----------------------------------------------------------------------------------------------------------------
 593+ 9A57              ;
 594+ 9A57              ;	5/08/22
 595+ 9A57              ;
 596+ 9A57              ;   NextScan.
 597+ 9A57              ;
 598+ 9A57              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9A57              ;
 600+ 9A57              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9A57              ;
 602+ 9A57              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9A57              ;
 604+ 9A57              ;       DESTRUIDOS: AF y HL !!!
 605+ 9A57              ;
 606+ 9A57              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9A57              ;
 608+ 9A57
 609+ 9A57 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9A58 7C               ld a,h
 611+ 9A59 E6 07            and 7
 612+ 9A5B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9A5C
 614+ 9A5C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9A5D C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A5F 6F               ld l,a
 617+ 9A60 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A61
 619+ 9A61 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A62 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A64 67               ld h,a
 622+ 9A65 C9               ret
 623+ 9A66
 624+ 9A66              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A66              ;
 626+ 9A66              ;	5/08/22
 627+ 9A66              ;
 628+ 9A66              ;   PreviousScan.
 629+ 9A66              ;
 630+ 9A66              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A66              ;
 632+ 9A66              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A66              ;
 634+ 9A66              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A66              ;
 636+ 9A66              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A66              ;
 638+ 9A66              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A66              ;
 640+ 9A66
 641+ 9A66 7C           PreviousScan ld a,h
 642+ 9A67 25               dec h               ; Dec H.
 643+ 9A68 E6 07            and 7
 644+ 9A6A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A6B
 646+ 9A6B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A6C D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A6E 6F               ld l,a
 649+ 9A6F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A70
 651+ 9A70 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A71 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A73 67               ld h,a
 654+ 9A74 C9               ret
 655+ 9A75
 656+ 9A75
 657+ 9A75
 658+ 9A75
 659+ 9A75
 660+ 9A75
 661+ 9A75
 662+ 9A75
 663+ 9A75
 664+ 9A75
 665+ 9A75
 666+ 9A75
# file closed: Draw_XOR.asm
2219  9A75              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A75
   2+ 9A75              ; ******************************************************************************************************************************************************************************************
   3+ 9A75              ;
   4+ 9A75              ;   20/05/23
   5+ 9A75              ;
   6+ 9A75              ;	Recompone_posicion_inicio
   7+ 9A75              ;
   8+ 9A75              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A75              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A75              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A75              ;	_ a una u otra rutina.
  12+ 9A75
  13+ 9A75              Recompone_posicion_inicio
  14+ 9A75
  15+ 9A75 2A 15 8C     	ld hl,(Posicion_inicio)
  16+ 9A78 7D           	ld a,l
  17+ 9A79 E6 1F        	and $1f
  18+ 9A7B 28 16        	jr z,1F
  19+ 9A7D
  20+ 9A7D FE 1F        	cp $1f
  21+ 9A7F 28 0D        	jr z,3F
  22+ 9A81
  23+ 9A81 21 04 8C     	ld hl,Ctrl_2
  24+ 9A84 CB C6        	set 0,(hl)
  25+ 9A86 2A 0A 8C     	ld hl,(Puntero_objeto)
  26+ 9A89 22 36 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A8C 18 08        	jr 2F
  28+ 9A8E
  29+ 9A8E CD 3C 9C     3 call Mov_left
  30+ 9A91 18 03        	jr 2F
  31+ 9A93
  32+ 9A93 CD 19 9B     1 call Mov_right
  33+ 9A96 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A99 22 0A 8C     	ld (Puntero_objeto),hl
  35+ 9A9C C9           	ret
  36+ 9A9D
  37+ 9A9D              ; ******************************************************************************************************************************************************************************************
  38+ 9A9D              ;
  39+ 9A9D              ;   27/05/23
  40+ 9A9D              ;
  41+ 9A9D              ;	Mov_down
  42+ 9A9D              ;
  43+ 9A9D              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A9D              ;
  45+ 9A9D              ;
  46+ 9A9D              Mov_down
  47+ 9A9D
  48+ 9A9D CD 07 9B     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9AA0              ;																	; _ repone (Puntero_objeto).
  50+ 9AA0 21 05 8C     	ld hl,Ctrl_0
  51+ 9AA3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9AA5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9AA5              ; 																	; _ en el caso de que no lo haya.
  54+ 9AA5 3A 20 8C     	ld a,(Vel_down)
  55+ 9AA8 47           	ld b,a
  56+ 9AA9 2A 08 8C         ld hl,(Posicion_actual)
  57+ 9AAC CD 44 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9AAF E6 02        	and 2
  59+ 9AB1 28 17        	jr z,1F
  60+ 9AB3
  61+ 9AB3              ; Nos encontramos en el último tercio de pantalla.
  62+ 9AB3              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9AB3
  64+ 9AB3 7C           	ld a,h
  65+ 9AB4 FE 57        	cp $57
  66+ 9AB6 20 12        	jr nz,1F
  67+ 9AB8
  68+ 9AB8 7D           	ld a,l
  69+ 9AB9 C6 20        	add $20
  70+ 9ABB 30 0D        	jr nc,1F
  71+ 9ABD
  72+ 9ABD              ; ------------------------------
  73+ 9ABD              ;
  74+ 9ABD              ;	12/01/24
  75+ 9ABD
  76+ 9ABD              ;	call Reaparece_arriba
  77+ 9ABD CD C9 9D     	call Reinicio
  78+ 9AC0
  79+ 9AC0              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9AC0
  81+ 9AC0 3A 6F 8C     	ld a,(Ctrl_3)
  82+ 9AC3 CB CF        	set 1,a
  83+ 9AC5 32 6F 8C     	ld (Ctrl_3),a
  84+ 9AC8
  85+ 9AC8 18 08        	jr 3F
  86+ 9ACA              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9ACA              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9ACA              ; ------------------------------
  89+ 9ACA
  90+ 9ACA CD 57 9A     1 call NextScan
  91+ 9ACD 22 08 8C     	ld (Posicion_actual),hl
  92+ 9AD0 10 DA            djnz 2B
  93+ 9AD2 CD 62 95     3 call Genera_coordenadas
  94+ 9AD5 C9           	ret
  95+ 9AD6
  96+ 9AD6              ; ******************************************************************************************************************************************************************************************
  97+ 9AD6              ;
  98+ 9AD6              ;   27/05/23
  99+ 9AD6              ;
 100+ 9AD6              ;	Mov_up
 101+ 9AD6              ;
 102+ 9AD6              ; 	Mueve el Sprite hacia arriba.
 103+ 9AD6              ;
 104+ 9AD6              ;
 105+ 9AD6              Mov_up
 106+ 9AD6
 107+ 9AD6 CD 07 9B     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9AD9              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9AD9 21 05 8C     	ld hl,Ctrl_0
 110+ 9ADC CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9ADE              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9ADE              ; 																		; _ en el caso de que no lo haya.
 113+ 9ADE 3A 1F 8C     	ld a,(Vel_up)
 114+ 9AE1 47           	ld b,a
 115+ 9AE2 2A 08 8C     	ld hl,(Posicion_actual)
 116+ 9AE5 CD 44 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9AE8 A7           	and a
 118+ 9AE9 20 10        	jr nz,1F
 119+ 9AEB
 120+ 9AEB              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9AEB              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9AEB
 123+ 9AEB 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9AEC FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9AEE 20 0B            jr nz,1F
 126+ 9AF0 7D               ld a,l
 127+ 9AF1 D6 20            sub $20
 128+ 9AF3 30 06            jr nc,1F
 129+ 9AF5 25               dec h
 130+ 9AF6
 131+ 9AF6              ; -----------------------------
 132+ 9AF6 CD AA 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9AF9              ;	call Reinicio
 134+ 9AF9              ; -----------------------------
 135+ 9AF9
 136+ 9AF9 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9AFB CD 66 9A     1 call PreviousScan
 138+ 9AFE 22 08 8C     	ld (Posicion_actual),hl
 139+ 9B01 10 E2            djnz 3B
 140+ 9B03 CD 62 95     2 call Genera_coordenadas
 141+ 9B06 C9           	ret
 142+ 9B07
 143+ 9B07              ; -----------------------------
 144+ 9B07              ;
 145+ 9B07              ;	27/5/23
 146+ 9B07              ;
 147+ 9B07              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9B07              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9B07              ;
 150+ 9B07              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9B07              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9B07              ;
 153+ 9B07              ;	Modifica: A y (Puntero_objeto).
 154+ 9B07
 155+ 9B07 3A 04 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9B0A CB 47        	bit 0,a
 157+ 9B0C C8           	ret z
 158+ 9B0D CB 87        	res 0,a
 159+ 9B0F 32 04 8C     	ld (Ctrl_2),a
 160+ 9B12 2A 36 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9B15 22 0A 8C     	ld (Puntero_objeto),hl
 162+ 9B18 C9           	ret
 163+ 9B19
 164+ 9B19              ; ******************************************************************************************************************************************************************************************
 165+ 9B19              ;
 166+ 9B19              ;	19/10/22
 167+ 9B19              ;
 168+ 9B19              ;	Mov_right.
 169+ 9B19              ;
 170+ 9B19              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9B19              ;
 172+ 9B19
 173+ 9B19 3A 05 8C     Mov_right ld a,(Ctrl_0)
 174+ 9B1C CB 77        	bit 6,a
 175+ 9B1E 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9B20
 177+ 9B20 CD 58 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9B23 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9B24
 180+ 9B24 21 05 8C     	ld hl,Ctrl_0
 181+ 9B27 CB E6        	set 4,(hl)
 182+ 9B29 18 52        	jr 8F
 183+ 9B2B
 184+ 9B2B 21 05 8C     10 ld hl,Ctrl_0
 185+ 9B2E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9B30              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9B30              ; 																	; _ en el caso de que no lo haya.
 188+ 9B30 3A F9 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9B33 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9B35 20 46        	jr nz,8F
 191+ 9B37
 192+ 9B37 3A 0C 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9B3A A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9B3B 28 40        	jr z,8F
 195+ 9B3D
 196+ 9B3D              ; ---------- ---------- ----------
 197+ 9B3D              ;
 198+ 9B3D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9B3D
 200+ 9B3D 3A 1E 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9B40 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9B42 28 11        	jr z,1F
 203+ 9B44 38 06        	jr c,6F
 204+ 9B46 FE 04        	cp 4
 205+ 9B48 28 14        	jr z,7F
 206+ 9B4A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9B4C
 208+ 9B4C              ; ---------- ---------- ----------
 209+ 9B4C              ;
 210+ 9B4C              ; Perfiles de velocidad
 211+ 9B4C              ;
 212+ 9B4C
 213+ 9B4C 3A 0C 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9B4F FE FE        	cp $fe
 215+ 9B51 20 2A        	jr nz,8F
 216+ 9B53 18 10        	jr 3F
 217+ 9B55 3A 0C 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9B58 FE FD        	cp $fd
 219+ 9B5A 20 21        	jr nz,8F
 220+ 9B5C 18 07        	jr 3F
 221+ 9B5E 3A 0C 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B61 FE FB        	cp $fb
 223+ 9B63 20 18        	jr nz,8F
 224+ 9B65
 225+ 9B65              ; ---------- ---------- ----------
 226+ 9B65
 227+ 9B65              3
 228+ 9B65 CD 98 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B68              ;	call Reinicio
 230+ 9B68
 231+ 9B68              ; ---------- ---------- ----------
 232+ 9B68              ;
 233+ 9B68              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B68
 235+ 9B68 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B6A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B6B CD 84 9B     	call DESPLZ_DER
 238+ 9B6E C1           	pop bc
 239+ 9B6F 10 F9        	djnz 5B
 240+ 9B71 2A 08 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B74 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B75 22 08 8C     	ld (Posicion_actual),hl
 243+ 9B78 CD 62 95     	call Genera_coordenadas
 244+ 9B7B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B7D
 246+ 9B7D              ; ---------- ---------- ----------
 247+ 9B7D
 248+ 9B7D 2A 08 8C     8 ld hl,(Posicion_actual)
 249+ 9B80 CD 84 9B     	call DESPLZ_DER
 250+ 9B83 C9           2 ret
 251+ 9B84
 252+ 9B84              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B84              ;
 254+ 9B84              ;	22/9/22
 255+ 9B84              ;
 256+ 9B84
 257+ 9B84 CD 93 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B87 CD DF 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B8A CD 08 9C         call Ciclo_completo
 260+ 9B8D 21 05 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B90 CB FE        	set 7,(hl)
 262+ 9B92 C9           	ret
 263+ 9B93
 264+ 9B93              ; ******************************************************************************************************************************************************************************************
 265+ 9B93              ;	15/02/23
 266+ 9B93              ;
 267+ 9B93
 268+ 9B93 3A 1E 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B96 47           	ld b,a
 270+ 9B97 2A 11 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B9A 23           1 inc hl
 272+ 9B9B 23           	inc hl
 273+ 9B9C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B9E 22 11 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9BA1 CD 4A 91     	call Extrae_address
 276+ 9BA4 22 0A 8C     	ld (Puntero_objeto),hl
 277+ 9BA7
 278+ 9BA7              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9BA7
 280+ 9BA7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9BA7              ; Cuántos movimientos hemos hecho ??
 282+ 9BA7              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9BA7
 284+ 9BA7 2A 0D 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9BAA EB           	ex de,hl
 286+ 9BAB A7           	and a
 287+ 9BAC ED 52        	sbc hl,de
 288+ 9BAE CB 3D        	srl l
 289+ 9BB0 3E 08        6 ld a,8
 290+ 9BB2 95           	sub l
 291+ 9BB3 30 1E        	jr nc,3F
 292+ 9BB5
 293+ 9BB5              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9BB5              ; B="0".
 295+ 9BB5
 296+ 9BB5 04           4 inc b
 297+ 9BB6 3C           	inc a
 298+ 9BB7 20 FC        	jr nz,4B
 299+ 9BB9 78           	ld a,b
 300+ 9BBA 08           	ex af,af
 301+ 9BBB 2A 0D 8C     	ld hl,(Indice_Sprite_der)
 302+ 9BBE 23           5 inc hl
 303+ 9BBF 23           	inc hl
 304+ 9BC0 10 FC        	djnz 5B
 305+ 9BC2 22 11 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9BC5 CD 4A 91     	call Extrae_address
 307+ 9BC8 22 0A 8C     	ld (Puntero_objeto),hl
 308+ 9BCB
 309+ 9BCB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9BCB              ; _(Posicion_actual).
 311+ 9BCB
 312+ 9BCB 21 08 8C     	ld hl,Posicion_actual
 313+ 9BCE 34           	inc (hl)
 314+ 9BCF 08               ex af,af
 315+ 9BD0 6F           	ld l,a
 316+ 9BD1 18 DD        	jr 6B
 317+ 9BD3
 318+ 9BD3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9BD3
 320+ 9BD3 47           3 ld b,a
 321+ 9BD4 2A 0F 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9BD7 23           2 inc hl
 323+ 9BD8 23           	inc hl
 324+ 9BD9 10 FC        	djnz 2B
 325+ 9BDB 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9BDE C9           8 ret
 327+ 9BDF
 328+ 9BDF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9BDF              ;
 330+ 9BDF              ;	24/7/22
 331+ 9BDF              ;
 332+ 9BDF              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9BDF              ;
 334+ 9BDF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9BDF              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9BDF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9BDF
 338+ 9BDF 3A 0C 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9BE2 A7           	and a
 340+ 9BE3 20 1F        	jr nz,1F
 341+ 9BE5 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9BE7 32 0C 8C         ld (CTRL_DESPLZ),a
 343+ 9BEA
 344+ 9BEA 21 07 8C     	ld hl,Columns
 345+ 9BED 34           	inc (hl)
 346+ 9BEE 3A 17 8C     	ld a,(Cuad_objeto)
 347+ 9BF1 E6 01        	and 1
 348+ 9BF3 28 0F        	jr z,1F
 349+ 9BF5 2A 08 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9BF8 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9BF9 22 08 8C     	ld (Posicion_actual),hl
 352+ 9BFC CD 62 95     	call Genera_coordenadas
 353+ 9BFF CD 64 9D     	call Inc_CTRL_DESPLZ
 354+ 9C02 18 03        	jr 2F
 355+ 9C04 CD 64 9D     1 call Inc_CTRL_DESPLZ
 356+ 9C07 C9           2 ret
 357+ 9C08
 358+ 9C08              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9C08              ;
 360+ 9C08              ;	24/7/22
 361+ 9C08              ;
 362+ 9C08              ;	Ciclo_completo.
 363+ 9C08              ;
 364+ 9C08              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9C08              ;
 366+ 9C08              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9C08              ; 	Decrementamos (Columns).
 368+ 9C08              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9C08              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9C08
 371+ 9C08
 372+ 9C08 3A 0C 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9C0B FE FF        	cp $ff
 374+ 9C0D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9C0F E6 F0        	and $f0
 376+ 9C11 20 28        	jr nz,3F
 377+ 9C13
 378+ 9C13              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9C13
 380+ 9C13 3A 0C 8C     	ld a,(CTRL_DESPLZ)
 381+ 9C16 47           	ld b,a
 382+ 9C17 3E F8        	ld a,$f8
 383+ 9C19 80           	add b
 384+ 9C1A 32 0C 8C     	ld (CTRL_DESPLZ),a
 385+ 9C1D 18 1C        	jr 3F
 386+ 9C1F 21 07 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9C22 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9C23 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9C24 32 0C 8C     	ld (CTRL_DESPLZ),a
 390+ 9C27 3A 17 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9C2A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9C2C 20 0A        	jr nz,2F
 393+ 9C2E 2A 08 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9C31 23           	inc hl
 395+ 9C32 22 08 8C     	ld (Posicion_actual),hl
 396+ 9C35 CD 62 95     	call Genera_coordenadas
 397+ 9C38
 398+ 9C38              ; Inicia el puntero de Sprite.
 399+ 9C38
 400+ 9C38 CD 5F 91     2 call Inicia_puntero_objeto_der
 401+ 9C3B C9           3 ret
 402+ 9C3C
 403+ 9C3C              ; ******************************************************************************************************************************************************************************************
 404+ 9C3C              ;
 405+ 9C3C              ;	15/02/23
 406+ 9C3C              ;
 407+ 9C3C              ;	Mov_left.
 408+ 9C3C              ;
 409+ 9C3C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9C3C              ;
 411+ 9C3C              Mov_left
 412+ 9C3C
 413+ 9C3C 21 05 8C     	ld hl,Ctrl_0
 414+ 9C3F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9C41              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9C41              ; 																	; _ en el caso de que no lo haya.
 417+ 9C41 3A 05 8C     	ld a,(Ctrl_0)
 418+ 9C44 CB 77        	bit 6,a
 419+ 9C46 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9C48
 421+ 9C48 CD 5E 9D     	call Stop_Amadeus_left
 422+ 9C4B C8           	ret z
 423+ 9C4C 20 4A        	jr nz,8F
 424+ 9C4E
 425+ 9C4E 3A F9 8B     11 ld a,(Coordenada_X)
 426+ 9C51 A7           	and a
 427+ 9C52 20 44        	jr nz,8F
 428+ 9C54
 429+ 9C54 3A 0C 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9C57 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9C58 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9C5A
 433+ 9C5A              ; ---------- ---------- ----------
 434+ 9C5A
 435+ 9C5A 3A 1D 8C     	ld a,(Vel_left)
 436+ 9C5D FE 02        	cp 2
 437+ 9C5F 28 0F        	jr z,1F
 438+ 9C61 38 04        	jr c,6F
 439+ 9C63 FE 04        	cp 4
 440+ 9C65 28 12        	jr z,7F
 441+ 9C67
 442+ 9C67              ; ---------- ---------- ----------
 443+ 9C67
 444+ 9C67 3A 0C 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C6A FE F8        	cp $f8
 446+ 9C6C 20 2A        	jr nz,8F
 447+ 9C6E 18 10        	jr 4F
 448+ 9C70 3A 0C 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C73 FE F9        	cp $f9
 450+ 9C75 20 21        	jr nz,8F
 451+ 9C77 18 07        	jr 4F
 452+ 9C79 3A 0C 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C7C FE FB        	cp $fb
 454+ 9C7E 20 18        	jr nz,8F
 455+ 9C80
 456+ 9C80              ; ---------- ---------- ----------
 457+ 9C80
 458+ 9C80              4
 459+ 9C80 CD 86 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C83              ;	call Reinicio
 461+ 9C83
 462+ 9C83              ; ---------- ---------- ----------
 463+ 9C83
 464+ 9C83 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C85 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C86
 467+ 9C86              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C86              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C86
 470+ 9C86 CD 9F 9C     	call DESPLZ_IZQ
 471+ 9C89 C1           	pop bc
 472+ 9C8A 10 F9        	djnz 5B
 473+ 9C8C 2A 08 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C8F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C90 22 08 8C     	ld (Posicion_actual),hl
 476+ 9C93 CD 62 95     	call Genera_coordenadas
 477+ 9C96 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C98
 479+ 9C98              ; ---------- ---------- ----------
 480+ 9C98
 481+ 9C98              ; Movemos, no hay recolocación.
 482+ 9C98
 483+ 9C98 2A 08 8C     8 ld hl,(Posicion_actual)
 484+ 9C9B CD 9F 9C     	call DESPLZ_IZQ
 485+ 9C9E C9           2 ret
 486+ 9C9F
 487+ 9C9F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C9F              ;
 489+ 9C9F              ;	22/9/22
 490+ 9C9F
 491+ 9C9F              DESPLZ_IZQ
 492+ 9C9F
 493+ 9C9F CD AE 9C     	call Desplaza_izquierda
 494+ 9CA2 CD FA 9C         call modifica_parametros_1er_DESPLZ
 495+ 9CA5 CD 22 9D     	call Ciclo_completo_2
 496+ 9CA8 21 05 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9CAB CB BE        	res 7,(hl)
 498+ 9CAD C9           	ret
 499+ 9CAE
 500+ 9CAE              Desplaza_izquierda
 501+ 9CAE
 502+ 9CAE 3A 1D 8C     	ld a,(Vel_left)
 503+ 9CB1 47           	ld b,a
 504+ 9CB2 2A 13 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9CB5 23           1 inc hl
 506+ 9CB6 23           	inc hl
 507+ 9CB7 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9CB9 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9CBC CD 4A 91     	call Extrae_address
 510+ 9CBF 22 0A 8C     	ld (Puntero_objeto),hl
 511+ 9CC2
 512+ 9CC2              ; Modifica (Puntero_DESPLZ_der).
 513+ 9CC2
 514+ 9CC2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9CC2              ; Cuántos movimientos hemos hecho ??
 516+ 9CC2              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9CC2
 518+ 9CC2 2A 0F 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9CC5 EB           	ex de,hl
 520+ 9CC6 A7           	and a
 521+ 9CC7 ED 52        	sbc hl,de
 522+ 9CC9 CB 3D        	srl l
 523+ 9CCB 3E 08        6 ld a,8
 524+ 9CCD 95           	sub l
 525+ 9CCE 30 1E        	jr nc,3F
 526+ 9CD0
 527+ 9CD0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9CD0              ; B="0".
 529+ 9CD0
 530+ 9CD0 04           4 inc b
 531+ 9CD1 3C           	inc a
 532+ 9CD2 20 FC        	jr nz,4B
 533+ 9CD4 78           	ld a,b
 534+ 9CD5 08           	ex af,af
 535+ 9CD6 2A 0F 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9CD9 23           5 inc hl
 537+ 9CDA 23           	inc hl
 538+ 9CDB 10 FC        	djnz 5B
 539+ 9CDD 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9CE0 CD 4A 91     	call Extrae_address
 541+ 9CE3 22 0A 8C     	ld (Puntero_objeto),hl
 542+ 9CE6
 543+ 9CE6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9CE6              ; _(Posicion_actual).
 545+ 9CE6
 546+ 9CE6 21 08 8C     	ld hl,Posicion_actual
 547+ 9CE9 35           	dec (hl)
 548+ 9CEA 08           	ex af,af
 549+ 9CEB 6F           	ld l,a
 550+ 9CEC 18 DD        	jr 6B
 551+ 9CEE
 552+ 9CEE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9CEE
 554+ 9CEE 47           3 ld b,a
 555+ 9CEF 2A 0D 8C     	ld hl,(Indice_Sprite_der)
 556+ 9CF2 23           2 inc hl
 557+ 9CF3 23           	inc hl
 558+ 9CF4 10 FC        	djnz 2B
 559+ 9CF6 22 11 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9CF9 C9           8 ret
 561+ 9CFA
 562+ 9CFA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9CFA              ;
 564+ 9CFA              ;	modifica_parametros_1er_DESPLZ
 565+ 9CFA              ;
 566+ 9CFA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9CFA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9CFA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9CFA
 570+ 9CFA 3A 0C 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9CFD A7           	and a
 572+ 9CFE 20 1E        	jr nz,1F
 573+ 9D00 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9D01 32 0C 8C         ld (CTRL_DESPLZ),a
 575+ 9D04 21 07 8C     	ld hl,Columns
 576+ 9D07 34           	inc (hl)
 577+ 9D08 3A 17 8C     	ld a,(Cuad_objeto)
 578+ 9D0B E6 01        	and 1
 579+ 9D0D 20 0F        	jr nz,1F
 580+ 9D0F 2A 08 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9D12 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9D13 22 08 8C     	ld (Posicion_actual),hl
 583+ 9D16 CD 62 95     	call Genera_coordenadas
 584+ 9D19 CD 75 9D     	call Dec_CTRL_DESPLZ
 585+ 9D1C 18 03        	jr 2F
 586+ 9D1E CD 75 9D     1 call Dec_CTRL_DESPLZ
 587+ 9D21 C9           2 ret
 588+ 9D22
 589+ 9D22              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9D22
 591+ 9D22 3A 0C 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9D25 FE F7        	cp $f7
 593+ 9D27 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9D29 30 2C        	jr nc,3F
 595+ 9D2B
 596+ 9D2B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9D2B
 598+ 9D2B 06 00        	ld b,0
 599+ 9D2D 04           4 inc b
 600+ 9D2E 3C           	inc a
 601+ 9D2F FE F7        	cp $f7
 602+ 9D31 20 FA        	jr nz,4B
 603+ 9D33 3E FF        	ld a,$ff
 604+ 9D35 90           	sub b
 605+ 9D36 32 0C 8C     	ld (CTRL_DESPLZ),a
 606+ 9D39 18 1C        	jr 3F
 607+ 9D3B
 608+ 9D3B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9D3B
 610+ 9D3B 21 07 8C     1 ld hl,Columns
 611+ 9D3E 35           	dec (hl)
 612+ 9D3F AF           	xor a
 613+ 9D40 32 0C 8C     	ld (CTRL_DESPLZ),a
 614+ 9D43 3A 17 8C     	ld a,(Cuad_objeto)
 615+ 9D46 E6 01        	and 1
 616+ 9D48 28 0A        	jr z,2F
 617+ 9D4A 2A 08 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9D4D 2B           	dec hl
 619+ 9D4E 22 08 8C     	ld (Posicion_actual),hl
 620+ 9D51 CD 62 95     	call Genera_coordenadas
 621+ 9D54
 622+ 9D54              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9D54
 624+ 9D54 CD 72 91     2 call Inicia_puntero_objeto_izq
 625+ 9D57 C9           3 ret
 626+ 9D58
 627+ 9D58              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9D58              ;
 629+ 9D58              ;	19/10/22
 630+ 9D58              ;
 631+ 9D58              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9D58              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9D58
 634+ 9D58 3A F9 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9D5B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9D5D C9           	ret
 637+ 9D5E
 638+ 9D5E              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D5E              ;
 640+ 9D5E              ;	19/10/22
 641+ 9D5E              ;
 642+ 9D5E              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D5E              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D5E
 645+ 9D5E 3A F9 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D61 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D63 C9           	ret
 648+ 9D64
 649+ 9D64              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D64              ;
 651+ 9D64              ;	24/7/22
 652+ 9D64              ;
 653+ 9D64              ;	Inc_CTRL_DESPLZ
 654+ 9D64              ;
 655+ 9D64              ;
 656+ 9D64              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D64
 658+ 9D64 21 0C 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D67 3A 1E 8C     	ld a,(Vel_right)
 660+ 9D6A A7           	and a
 661+ 9D6B 28 06        	jr z,1F
 662+ 9D6D 47           	ld b,a
 663+ 9D6E 34           3 inc (hl)
 664+ 9D6F 10 FD        	djnz 3B
 665+ 9D71 18 01        	jr 2F
 666+ 9D73 34           1 inc (hl)
 667+ 9D74 C9           2 ret
 668+ 9D75
 669+ 9D75              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D75              ;
 671+ 9D75              ;	5/2/23
 672+ 9D75              ;
 673+ 9D75              ;	Dec_CTRL_DESPLZ
 674+ 9D75              ;
 675+ 9D75              ;
 676+ 9D75              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D75
 678+ 9D75 21 0C 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D78 3A 1D 8C     	ld a,(Vel_left)
 680+ 9D7B A7           	and a
 681+ 9D7C 28 06        	jr z,1F
 682+ 9D7E 47           	ld b,a
 683+ 9D7F 35           3 dec (hl)
 684+ 9D80 10 FD        	djnz 3B
 685+ 9D82 18 01        	jr 2F
 686+ 9D84 35           1 dec (hl)
 687+ 9D85 C9           2 ret
 688+ 9D86
 689+ 9D86              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D86
 691+ 9D86 2A 08 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D89 01 1F 00     	ld bc,31
 693+ 9D8C A7           	and a
 694+ 9D8D ED 4A        	adc hl,bc
 695+ 9D8F 22 08 8C     	ld (Posicion_actual),hl
 696+ 9D92 21 05 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9D95 CB C6        	set 0,(hl)
 698+ 9D97 C9           	ret
 699+ 9D98
 700+ 9D98              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D98
 702+ 9D98 2A 08 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D9B 01 1F 00     	ld bc,31
 704+ 9D9E A7           	and a
 705+ 9D9F ED 42        	sbc hl,bc
 706+ 9DA1 22 08 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9DA4 21 05 8C     	ld hl,Ctrl_0
 708+ 9DA7 CB CE        	set 1,(hl)
 709+ 9DA9 C9           	ret
 710+ 9DAA
 711+ 9DAA              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9DAA
 713+ 9DAA 24           Reaparece_abajo inc h
 714+ 9DAB 01 E0 17     	ld bc,$17e0
 715+ 9DAE A7           	and a
 716+ 9DAF ED 4A        	adc hl,bc
 717+ 9DB1 22 08 8C     	ld (Posicion_actual),hl
 718+ 9DB4 21 05 8C     	ld hl,Ctrl_0
 719+ 9DB7 CB D6        	set 2,(hl)
 720+ 9DB9 C9           	ret
 721+ 9DBA
 722+ 9DBA              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9DBA
 724+ 9DBA 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9DBD A7           	and a
 726+ 9DBE ED 42        	sbc hl,bc
 727+ 9DC0 22 08 8C     	ld (Posicion_actual),hl
 728+ 9DC3 21 05 8C     	ld hl,Ctrl_0
 729+ 9DC6 CB DE        	set 3,(hl)
 730+ 9DC8 C9           	ret
 731+ 9DC9
 732+ 9DC9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9DC9              ;
 734+ 9DC9              ;	15/07/23
 735+ 9DC9
 736+ 9DC9              Reinicio
 737+ 9DC9
 738+ 9DC9              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9DC9
 740+ 9DC9 AF           	xor a
 741+ 9DCA 21 2D 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9DCD CD EB 9D     	call Limpia_contenido_hl
 743+ 9DD0
 744+ 9DD0 21 08 8C     	ld hl,Posicion_actual
 745+ 9DD3 CD EB 9D     	call Limpia_contenido_hl
 746+ 9DD6
 747+ 9DD6 CD CC 93     	call Situa_Puntero_indice_mov
 748+ 9DD9 CD EA 9E     	call Inicia_Puntero_mov
 749+ 9DDC
 750+ 9DDC 21 2F 8C     	ld hl,Incrementa_puntero
 751+ 9DDF 06 05        	ld b,5
 752+ 9DE1 77           1 ld (hl),a
 753+ 9DE2 23           	inc hl
 754+ 9DE3 10 FC        	djnz 1B
 755+ 9DE5
 756+ 9DE5 21 04 8C     	ld hl,Ctrl_2
 757+ 9DE8 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9DEA
 759+ 9DEA C9           	ret
 760+ 9DEB
 761+ 9DEB 77           Limpia_contenido_hl	ld (hl),a
 762+ 9DEC 23           	inc hl
 763+ 9DED 77           	ld (hl),a
 764+ 9DEE C9           	ret
 765+ 9DEF
 766+ 9DEF              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9DEF              ;
 768+ 9DEF              ;	18/6/24
 769+ 9DEF              ;
 770+ 9DEF
 771+ 9DEF              Amadeus_a_izquierda
 772+ 9DEF
 773+ 9DEF              ;	Actualiza contador de movimientos.
 774+ 9DEF
 775+ 9DEF 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9DF2 35           	dec (hl)
 777+ 9DF3 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9DF5
 779+ 9DF5 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9DF8 2B           	dec hl
 781+ 9DF9 2B           	dec hl
 782+ 9DFA 2B           	dec hl
 783+ 9DFB 2B           	dec hl
 784+ 9DFC 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9DFF
 786+ 9DFF 21 6F 8C     	ld hl,Ctrl_3
 787+ 9E02 CB EE        	set 5,(hl)
 788+ 9E04
 789+ 9E04 C9           	ret
 790+ 9E05
 791+ 9E05 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9E06 C9           	ret
 793+ 9E07
 794+ 9E07
 795+ 9E07              Amadeus_a_derecha
 796+ 9E07
 797+ 9E07              ;	Actualiza contador de movimientos.
 798+ 9E07
 799+ 9E07 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9E0A 34           	inc (hl)
 801+ 9E0B 3E 7A        	ld a,$7a
 802+ 9E0D BE           	cp (hl)
 803+ 9E0E 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9E10
 805+ 9E10 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9E13 23           	inc hl
 807+ 9E14 23           	inc hl
 808+ 9E15 23           	inc hl
 809+ 9E16 23           	inc hl
 810+ 9E17 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9E1A
 812+ 9E1A 21 6F 8C     	ld hl,Ctrl_3
 813+ 9E1D CB EE        	set 5,(hl)
 814+ 9E1F C9           	ret
 815+ 9E20
 816+ 9E20 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9E21 C9           	ret
# file closed: Direcciones.asm
2220  9E22              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E22              ; ----- ----- ----- ----- -----
   2+ 9E22              ;
   3+ 9E22              ;   28/12/23
   4+ 9E22
   5+ 9E22              Movimiento
   6+ 9E22
   7+ 9E22              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9E22
   9+ 9E22 3A 04 8C         ld a,(Ctrl_2)
  10+ 9E25 CB 57            bit 2,a
  11+ 9E27 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9E29
  13+ 9E29 2A 2B 8C         ld hl,(Puntero_mov)
  14+ 9E2C 7E               ld a,(hl)
  15+ 9E2D
  16+ 9E2D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9E2D
  18+ 9E2D              Inicia_desplazamiento.
  19+ 9E2D
  20+ 9E2D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9E2D
  22+ 9E2D CD 20 9F         call Ajusta_velocidad_desplazamiento
  23+ 9E30
  24+ 9E30              ; Iniciamos (Repetimos_mov).
  25+ 9E30
  26+ 9E30 7E               ld a,(hl)
  27+ 9E31 E6 0F            and $0f
  28+ 9E33 32 31 8C         ld (Repetimos_desplazamiento),a
  29+ 9E36 32 32 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9E39
  31+ 9E39              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9E39
  33+ 9E39 23               inc hl
  34+ 9E3A 7E               ld a,(hl)
  35+ 9E3B 32 34 8C         ld (Cola_de_desplazamiento),a
  36+ 9E3E 2B               dec hl
  37+ 9E3F
  38+ 9E3F 21 04 8C         ld hl,Ctrl_2
  39+ 9E42 CB D6            set 2,(hl)
  40+ 9E44
  41+ 9E44              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9E44              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9E44
  44+ 9E44              Desplazamiento_iniciado
  45+ 9E44
  46+ 9E44 CD F4 9E         call Aplica_desplazamiento
  47+ 9E47
  48+ 9E47              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9E47
  50+ 9E47 3A 6F 8C         ld a,(Ctrl_3)
  51+ 9E4A CB 4F            bit 1,a
  52+ 9E4C C0               ret nz
  53+ 9E4D
  54+ 9E4D 21 31 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9E50 35               dec (hl)
  56+ 9E51 C0               ret nz
  57+ 9E52
  58+ 9E52              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9E52              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9E52              ; Analiza (Cola_de_desplazamiento).
  61+ 9E52
  62+ 9E52 3A 34 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9E55 A7               and a
  64+ 9E56 CC 49 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9E59 28 30            jr z,Reinicia_el_movimiento
  66+ 9E5B
  67+ 9E5B FE FF            cp $ff
  68+ 9E5D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9E5F
  70+ 9E5F FE FE            cp $fe
  71+ 9E61 CC CE 9E         call z,Fijamos_bucle
  72+ 9E64 28 25            jr z,Reinicia_el_movimiento
  73+ 9E66
  74+ 9E66 FE FD            cp $fd
  75+ 9E68 20 11            jr nz,1F
  76+ 9E6A
  77+ 9E6A              ; ---
  78+ 9E6A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E6A
  80+ 9E6A 3A 04 8C         ld a,(Ctrl_2)
  81+ 9E6D CB 5F            bit 3,a
  82+ 9E6F 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E71
  84+ 9E71              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E71
  86+ 9E71 21 04 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E74 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E76
  89+ 9E76 CD DF 9E         call Inicia_Repetimos_movimiento
  90+ 9E79 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E7B              ; ---
  92+ 9E7B
  93+ 9E7B FE 01        1 cp 1
  94+ 9E7D CA B8 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E80
  96+ 9E80 3D               dec a
  97+ 9E81 32 34 8C         ld (Cola_de_desplazamiento),a
  98+ 9E84
  99+ 9E84 3A 32 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E87 32 31 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E8A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E8A C9               ret
 103+ 9E8B
 104+ 9E8B              Reinicia_el_movimiento
 105+ 9E8B
 106+ 9E8B 3A 04 8C         ld a,(Ctrl_2)
 107+ 9E8E CB 5F            bit 3,a
 108+ 9E90 28 1B            jr z,2F
 109+ 9E92
 110+ 9E92              ; (Cola_de_desplazamiento)="254".
 111+ 9E92
 112+ 9E92 21 33 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E95 35               dec (hl)
 114+ 9E96 20 15            jr nz,2F
 115+ 9E98
 116+ 9E98              ; Fin de las repeticiones del último movimiento.
 117+ 9E98
 118+ 9E98 21 04 8C         ld hl,Ctrl_2
 119+ 9E9B CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E9D
 121+ 9E9D 2A 2B 8C         ld hl,(Puntero_mov)
 122+ 9EA0 23               inc hl
 123+ 9EA1 23               inc hl
 124+ 9EA2 23               inc hl
 125+ 9EA3 22 2B 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9EA6              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9EA6 7E               ld a,(hl)
 128+ 9EA7 32 34 8C         ld (Cola_de_desplazamiento),a
 129+ 9EAA
 130+ 9EAA C3 52 9E         jp Cola
 131+ 9EAD
 132+ 9EAD CD EA 9E     2 call Inicia_Puntero_mov
 133+ 9EB0
 134+ 9EB0 21 04 8C         ld hl,Ctrl_2
 135+ 9EB3 CB 96            res 2,(hl)
 136+ 9EB5
 137+ 9EB5 C3 22 9E         jp Movimiento
 138+ 9EB8
 139+ 9EB8              Siguiente_desplazamiento
 140+ 9EB8
 141+ 9EB8              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9EB8              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9EB8
 144+ 9EB8 21 04 8C         ld hl,Ctrl_2
 145+ 9EBB CB 96            res 2,(hl)
 146+ 9EBD
 147+ 9EBD 2A 2B 8C         ld hl,(Puntero_mov)
 148+ 9EC0 23               inc hl
 149+ 9EC1 23               inc hl
 150+ 9EC2 22 2B 8C         ld (Puntero_mov),hl
 151+ 9EC5
 152+ 9EC5 7E               ld a,(hl)
 153+ 9EC6 A7               and a
 154+ 9EC7 CC 49 9F         call z,Incrementa_Puntero_indice_mov
 155+ 9ECA CA 8B 9E         jp z,Reinicia_el_movimiento
 156+ 9ECD
 157+ 9ECD C9               ret
 158+ 9ECE
 159+ 9ECE              ; Subrutinas -----------------------------------------
 160+ 9ECE              ; ---------- --------- --------- ---------- ----------
 161+ 9ECE              ;
 162+ 9ECE              ;   24/07/23
 163+ 9ECE              ;
 164+ 9ECE              ;   Fijamos_bucle
 165+ 9ECE              ;
 166+ 9ECE              ;
 167+ 9ECE
 168+ 9ECE              Fijamos_bucle
 169+ 9ECE
 170+ 9ECE 3A 2F 8C         ld a,(Incrementa_puntero)
 171+ 9ED1 3C               inc a
 172+ 9ED2 32 30 8C         ld (Incrementa_puntero_backup),a
 173+ 9ED5
 174+ 9ED5 CD 49 9F         call Incrementa_Puntero_indice_mov
 175+ 9ED8 2A 29 8C         ld hl,(Puntero_indice_mov)
 176+ 9EDB 22 2D 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9EDE C9               ret
 178+ 9EDF
 179+ 9EDF              ; ---------- --------- --------- ---------- ----------
 180+ 9EDF              ;
 181+ 9EDF              ;   07/7/23
 182+ 9EDF              ;
 183+ 9EDF              ;   Inicia_Repetimos_movimiento
 184+ 9EDF              ;
 185+ 9EDF              ;
 186+ 9EDF
 187+ 9EDF              Inicia_Repetimos_movimiento
 188+ 9EDF
 189+ 9EDF              ; Iniciamos (Repetimos_movimiento).
 190+ 9EDF
 191+ 9EDF DD 2A 2B 8C      ld ix,(Puntero_mov)
 192+ 9EE3 DD 7E 02         ld a,(ix+2)
 193+ 9EE6 32 33 8C         ld (Repetimos_movimiento),a
 194+ 9EE9
 195+ 9EE9 C9               ret
 196+ 9EEA
 197+ 9EEA              ; ---------- --------- --------- ---------- ----------
 198+ 9EEA              ;
 199+ 9EEA              ;   26/6/23
 200+ 9EEA              ;
 201+ 9EEA              ;   Inicia_Puntero_mov
 202+ 9EEA              ;
 203+ 9EEA              ;
 204+ 9EEA
 205+ 9EEA 2A 29 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9EED CD 4A 91         call Extrae_address
 207+ 9EF0 22 2B 8C         ld (Puntero_mov),hl
 208+ 9EF3 C9               ret
 209+ 9EF4
 210+ 9EF4              ; ---------- --------- --------- ---------- ----------
 211+ 9EF4              ;
 212+ 9EF4              ;   27/06/23
 213+ 9EF4              ;
 214+ 9EF4              ;   Aplica_movimiento.
 215+ 9EF4
 216+ 9EF4              Aplica_desplazamiento
 217+ 9EF4
 218+ 9EF4              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9EF4
 220+ 9EF4 2A 2B 8C         ld hl, (Puntero_mov)
 221+ 9EF7
 222+ 9EF7 7E               ld a,(hl)
 223+ 9EF8 E6 F0            and $f0
 224+ 9EFA C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9EFB
 226+ 9EFB CB 7E            bit 7,(hl)
 227+ 9EFD 28 03            jr z,1F
 228+ 9EFF CD D6 9A         call Mov_up
 229+ 9F02 2A 2B 8C     1 ld hl, (Puntero_mov)
 230+ 9F05 CB 76            bit 6,(hl)
 231+ 9F07 28 03            jr z,2F
 232+ 9F09 CD 9D 9A         call Mov_down
 233+ 9F0C
 234+ 9F0C              ; Se ha aplicado reinicio ???
 235+ 9F0C              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9F0C
 237+ 9F0C              ;    ld a,(Ctrl_3)
 238+ 9F0C              ;    bit 1,a
 239+ 9F0C              ;    ret nz
 240+ 9F0C
 241+ 9F0C 2A 2B 8C     2 ld hl, (Puntero_mov)
 242+ 9F0F CB 6E            bit 5,(hl)
 243+ 9F11 28 03            jr z,3F
 244+ 9F13 CD 3C 9C         call Mov_left
 245+ 9F16 2A 2B 8C     3 ld hl, (Puntero_mov)
 246+ 9F19 CB 66            bit 4,(hl)
 247+ 9F1B C8               ret z
 248+ 9F1C CD 19 9B         call Mov_right
 249+ 9F1F C9               ret
 250+ 9F20
 251+ 9F20              ; ---------- --------- --------- ---------- ----------
 252+ 9F20              ;
 253+ 9F20              ;   26/06/23
 254+ 9F20              ;
 255+ 9F20              ;   Ajusta_velocidad_desplazamiento.
 256+ 9F20
 257+ 9F20              Ajusta_velocidad_desplazamiento
 258+ 9F20
 259+ 9F20              ; 1er byte de la cadena de movimiento.
 260+ 9F20              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9F20
 262+ 9F20 CD 3E 9F         call Extrae_nibble_alto
 263+ 9F23
 264+ 9F23 32 1F 8C         ld (Vel_up),a
 265+ 9F26 79               ld a,c
 266+ 9F27 E6 0F            and $0f
 267+ 9F29 32 20 8C         ld (Vel_down),a
 268+ 9F2C
 269+ 9F2C              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9F2C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9F2C
 272+ 9F2C 23               inc hl
 273+ 9F2D CD 3E 9F         call Extrae_nibble_alto
 274+ 9F30
 275+ 9F30 32 1D 8C         ld (Vel_left),a
 276+ 9F33 79               ld a,c
 277+ 9F34 E6 0F            and $0f
 278+ 9F36 32 1E 8C         ld (Vel_right),a
 279+ 9F39
 280+ 9F39              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9F39
 282+ 9F39 23               inc hl
 283+ 9F3A 22 2B 8C         ld (Puntero_mov),hl
 284+ 9F3D C9               ret
 285+ 9F3E
 286+ 9F3E 06 04        Extrae_nibble_alto ld b,4
 287+ 9F40 7E               ld a,(hl)
 288+ 9F41 4F               ld c,a
 289+ 9F42 E6 F0            and $f0
 290+ 9F44 CB 3F        1 srl a
 291+ 9F46 10 FC            djnz 1B
 292+ 9F48 C9               ret
 293+ 9F49
 294+ 9F49              ; ---------- --------- --------- ---------- ----------
 295+ 9F49              ;
 296+ 9F49              ;   5/7/23
 297+ 9F49              ;
 298+ 9F49              ;   Incrementa_Puntero_indice_mov
 299+ 9F49
 300+ 9F49              Incrementa_Puntero_indice_mov
 301+ 9F49
 302+ 9F49 21 2F 8C         ld hl,Incrementa_puntero
 303+ 9F4C 34               inc (hl)
 304+ 9F4D
 305+ 9F4D 2A 29 8C         ld hl,(Puntero_indice_mov)
 306+ 9F50 01 02 00         ld bc,2
 307+ 9F53 A7               and a
 308+ 9F54 09               add hl,bc
 309+ 9F55 22 29 8C         ld (Puntero_indice_mov),hl
 310+ 9F58
 311+ 9F58 7E               ld a,(hl)
 312+ 9F59 A7               and a
 313+ 9F5A
 314+ 9F5A              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9F5A
 316+ 9F5A              ;    jr z,$
 317+ 9F5A
 318+ 9F5A              ;! Reinicia el Patrón de movimiento.
 319+ 9F5A
 320+ 9F5A CC 5F 9F         call z,Inicializa_Puntero_indice_mov_2
 321+ 9F5D
 322+ 9F5D AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9F5E
 324+ 9F5E C9               ret
 325+ 9F5F
 326+ 9F5F              ; ---------- --------- --------- ---------- ----------
 327+ 9F5F              ;
 328+ 9F5F              ;   15/01/24
 329+ 9F5F              ;
 330+ 9F5F              ;   Inicializa_Puntero_indice_mov
 331+ 9F5F
 332+ 9F5F              Inicializa_Puntero_indice_mov_2
 333+ 9F5F
 334+ 9F5F              ; Existe etiqueta de bucle principal???
 335+ 9F5F
 336+ 9F5F 2A 2D 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F62 24               inc h
 338+ 9F63 25               dec h
 339+ 9F64 28 05            jr z,2F
 340+ 9F66
 341+ 9F66 22 29 8C         ld (Puntero_indice_mov),hl
 342+ 9F69 18 14            jr 3F
 343+ 9F6B
 344+ 9F6B              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F6B
 346+ 9F6B 3A 2F 8C     2 ld a,(Incrementa_puntero)
 347+ 9F6E 47               ld b,a
 348+ 9F6F
 349+ 9F6F 2A 29 8C         ld hl,(Puntero_indice_mov)
 350+ 9F72 2B           1 dec hl
 351+ 9F73 2B               dec hl
 352+ 9F74 10 FC            djnz 1B
 353+ 9F76 22 29 8C         ld (Puntero_indice_mov),hl
 354+ 9F79
 355+ 9F79 AF               xor a
 356+ 9F7A 32 2F 8C         ld (Incrementa_puntero),a
 357+ 9F7D 18 06            jr 4F
 358+ 9F7F
 359+ 9F7F 3A 30 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F82 32 2F 8C         ld (Incrementa_puntero),a
 361+ 9F85 C9           4 ret
 362+ 9F86
 363+ 9F86              ; ----------------------------------------------------------------------
 364+ 9F86              ;
 365+ 9F86              ;   24/11/24
 366+ 9F86              ;
 367+ 9F86              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F86
 369+ 9F86 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F89 CD DB 94         call Calcula_salto_en_BC
 371+ 9F8C 21 21 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F8F A7               and a
 373+ 9F90 ED 4A            adc hl,bc
 374+ 9F92 C9               ret
 375+ 9F93
 376+ 9F93              ; ----------------------------------------------------------------------
 377+ 9F93              ;
 378+ 9F93              ;   24/11/24
 379+ 9F93              ;
 380+ 9F93              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F93              ;
 382+ 9F93              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F93
 384+ 9F93 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F94 23               inc hl
 386+ 9F95 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F96 DD 71 09         ld (ix+9),c
 388+ 9F99 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F9C C9               ret
 390+ 9F9D
# file closed: Movimiento.asm
2221  9F9D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F9D              ; --------------------------------------------------------------------------------------
   2+ 9F9D              ;
   3+ 9F9D              ;   25/10/24
   4+ 9F9D              ;
   5+ 9F9D
   6+ 9F9D              Pinta_disparos_Entidades
   7+ 9F9D
   8+ 9F9D ED 73 47 8C      ld (Stack),sp
   9+ 9FA1 ED 7B 59 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9FA5
  11+ 9FA5 3E 02            ld a,2
  12+ 9FA7 08               ex af,af
  13+ 9FA8
  14+ 9FA8 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9FAA              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9FAA              ;                                     _ No encontraría "0".
  17+ 9FAA FD E1        4 pop iy
  18+ 9FAC D1               pop de                          ; 1er .db IYL
  19+ 9FAD              ;                                   ; 2º  .db IYH
  20+ 9FAD              ;                                   ; 3er .db E.
  21+ 9FAD              ;   Album vacío ???
  22+ 9FAD
  23+ 9FAD FD 7D            ld a,iyl
  24+ 9FAF FD 84            add iyh
  25+ 9FB1 83               add e
  26+ 9FB2 28 1F            jr z,1F
  27+ 9FB4
  28+ 9FB4              ;   Imprime album, (contiene datos).
  29+ 9FB4
  30+ 9FB4 3B               dec sp
  31+ 9FB5
  32+ 9FB5 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9FB6
  34+ 9FB6              ; Imprime el 1er scanline del disparo.
  35+ 9FB6
  36+ 9FB6 FD 7D            ld a,iyl
  37+ 9FB8 AE               xor (hl)
  38+ 9FB9 77               ld (hl),a
  39+ 9FBA
  40+ 9FBA 2C               inc l
  41+ 9FBB
  42+ 9FBB FD 7C            ld a,iyh
  43+ 9FBD AE               xor (hl)
  44+ 9FBE 77               ld (hl),a
  45+ 9FBF
  46+ 9FBF 2C               inc l
  47+ 9FC0
  48+ 9FC0 7B               ld a,e
  49+ 9FC1 AE               xor (hl)
  50+ 9FC2 77               ld (hl),a
  51+ 9FC3
  52+ 9FC3              ; Imprime el 2º scanline del disparo.
  53+ 9FC3
  54+ 9FC3 E1               pop hl
  55+ 9FC4
  56+ 9FC4 FD 7D            ld a,iyl
  57+ 9FC6 AE               xor (hl)
  58+ 9FC7 77               ld (hl),a
  59+ 9FC8
  60+ 9FC8 2C               inc l
  61+ 9FC9
  62+ 9FC9 FD 7C            ld a,iyh
  63+ 9FCB AE               xor (hl)
  64+ 9FCC 77               ld (hl),a
  65+ 9FCD
  66+ 9FCD 2C               inc l
  67+ 9FCE
  68+ 9FCE 7B               ld a,e
  69+ 9FCF AE               xor (hl)
  70+ 9FD0 77               ld (hl),a
  71+ 9FD1
  72+ 9FD1 10 D7            djnz 4B
  73+ 9FD3
  74+ 9FD3 08           1 ex af,af
  75+ 9FD4 3D               dec a
  76+ 9FD5 20 05            jr nz,2F
  77+ 9FD7
  78+ 9FD7 ED 7B 47 8C      ld sp,(Stack)
  79+ 9FDB C9               ret
  80+ 9FDC
  81+ 9FDC ED 7B 57 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9FE0 08               ex af,af
  83+ 9FE1 18 C5            jr 3B
  84+ 9FE3
  85+ 9FE3              ; --------------------------------------------------------------------------------------
  86+ 9FE3              ;
  87+ 9FE3              ;   30/10/24
  88+ 9FE3              ;
  89+ 9FE3
  90+ 9FE3              Motor_de_disparos_entidades
  91+ 9FE3
  92+ 9FE3 3A 5F 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9FE6 FE 07            cp 7
  94+ 9FE8 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9FE9
  96+ 9FE9 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9FEB 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9FEE
  99+ 9FEE CD 4A 91     1 call Extrae_address
 100+ 9FF1 1C               inc e
 101+ 9FF2 1C               inc e
 102+ 9FF3 ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9FF7
 104+ 9FF7               ; Caja vacía ???
 105+ 9FF7
 106+ 9FF7 2D               dec l
 107+ 9FF8 7E               ld a,(hl)
 108+ 9FF9 A7               and a
 109+ 9FFA 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9FFC
 111+ 9FFC              ; --- Trabajamos con caja:
 112+ 9FFC
 113+ 9FFC 2C               inc l
 114+ 9FFD
 115+ 9FFD              ; --- Existe posibilidad de impacto ???
 116+ 9FFD
 117+ 9FFD CB 46            bit 0,(hl)
 118+ 9FFF C4 3F A0         call nz, Comprueba_impacto_con_Amadeus
 119+ A002 20 37            jr nz,3F
 120+ A004
 121+ A004 CD C6 A0         call Rota_disparo_si_procede
 122+ A007
 123+ A007              ; ------------------------------------------------------------
 124+ A007
 125+ A007 2D               dec l
 126+ A008 2D               dec l
 127+ A009
 128+ A009 CD 4A 91         call Extrae_address
 129+ A00C
 130+ A00C              ;   (Puntero_de_impresion) del disparo en HL
 131+ A00C              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ A00C
 133+ A00C 3A 71 8C         ld a,(Ctrl_5)
 134+ A00F CB 57            bit 2,a
 135+ A011 28 09            jr z,4F
 136+ A013
 137+ A013 CB 97            res 2,a
 138+ A015 32 71 8C         ld (Ctrl_5),a
 139+ A018 2C               inc l
 140+ A019 2C               inc l
 141+ A01A 18 0C            jr 5F
 142+ A01C
 143+ A01C CB 5F        4 bit 3,a
 144+ A01E 28 08            jr z,5F
 145+ A020
 146+ A020 CB 9F            res 3,a
 147+ A022 32 71 8C         ld (Ctrl_5),a
 148+ A025 2D               dec l
 149+ A026 2D               dec l
 150+ A027 2D               dec l
 151+ A028
 152+ A028              ; ---------------------------------------------------------------------
 153+ A028
 154+ A028              ;! Velocidad del disparo de entidades.
 155+ A028
 156+ A028 CD 57 9A     5 call NextScan
 157+ A02B CD 57 9A         call NextScan
 158+ A02E
 159+ A02E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ A02E
 161+ A02E CD A3 A0         call Fin_de_disparo_de_entidad
 162+ A031
 163+ A031 EB               ex de,hl
 164+ A032
 165+ A032 73               ld (hl),e
 166+ A033 23               inc hl
 167+ A034 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ A035
 169+ A035 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ A038 18 02            jr 2F
 171+ A03A
 172+ A03A C9               ret
 173+ A03B
 174+ A03B EB           3 ex de,hl
 175+ A03C 10 B0        2 djnz 1B
 176+ A03E
 177+ A03E C9               ret
 178+ A03F
 179+ A03F              ; ------------- ------------- ------------
 180+ A03F              ;
 181+ A03F              ;   1/11/24
 182+ A03F
 183+ A03F              Comprueba_impacto_con_Amadeus
 184+ A03F
 185+ A03F              ;   El disparo se encuentra en zona de Amadeus.
 186+ A03F              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ A03F
 188+ A03F              ;   Modificamos registros, así que guardamos ...
 189+ A03F
 190+ A03F C5               push bc
 191+ A040 E5               push hl
 192+ A041 D5               push de
 193+ A042
 194+ A042 2D               dec l
 195+ A043 2D               dec l
 196+ A044
 197+ A044 CD 4A 91         call Extrae_address
 198+ A047
 199+ A047 3A AF 89         ld a,(CX_Amadeus)
 200+ A04A 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ A04B
 202+ A04B 7D               ld a,l
 203+ A04C E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ A04E
 205+ A04E 06 03            ld b,3
 206+ A050
 207+ A050 B9           1 cp c
 208+ A051 28 15            jr z,Coincidencia
 209+ A053 0C               inc c
 210+ A054 10 FA            djnz 1B
 211+ A056
 212+ A056 0D               dec c
 213+ A057 0D               dec c
 214+ A058 0D               dec c
 215+ A059
 216+ A059 3C               inc a
 217+ A05A B9               cp c
 218+ A05B 28 0B            jr z,Coincidencia
 219+ A05D
 220+ A05D 3C               inc a
 221+ A05E B9               cp c
 222+ A05F 28 07            jr z,Coincidencia
 223+ A061
 224+ A061 D1           2 pop de
 225+ A062 E1               pop hl
 226+ A063 C1               pop bc
 227+ A064
 228+ A064              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ A064
 230+ A064 CB 86            res 0,(hl)
 231+ A066 AF               xor a                       ; Z before RET.
 232+ A067 C9               ret
 233+ A068
 234+ A068              Coincidencia
 235+ A068
 236+ A068              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ A068              ;   Existe posibilidad de impacto.
 238+ A068              ;   Vamos a averiguarlo ...
 239+ A068
 240+ A068 1D               dec e
 241+ A069 1D               dec e
 242+ A06A 1D               dec e
 243+ A06B
 244+ A06B              ; DE en Puntero_objeto del disparo.
 245+ A06B              ; HL en Puntero_de_impresión del disparo.
 246+ A06B
 247+ A06B              ; Comparador:
 248+ A06B
 249+ A06B 06 03            ld b,3
 250+ A06D
 251+ A06D 1A           3 ld a,(de)
 252+ A06E 4F               ld c,a
 253+ A06F A6               and (hl)
 254+ A070 B9               cp c
 255+ A071 20 06            jr nz,Amadeus_impactado
 256+ A073
 257+ A073 2C               inc l
 258+ A074 1C               inc e
 259+ A075
 260+ A075 10 F6            djnz 3B
 261+ A077
 262+ A077 18 E8            jr 2B
 263+ A079
 264+ A079              Amadeus_impactado
 265+ A079
 266+ A079              ; Borramos disparo.
 267+ A079
 268+ A079 D1               pop de
 269+ A07A E1               pop hl
 270+ A07B
 271+ A07B E5               push hl
 272+ A07C D5               push de
 273+ A07D
 274+ A07D CD 31 A1         call Borra_6_bytes
 275+ A080
 276+ A080 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A083 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A084
 279+ A084              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A084
 281+ A084 21 B2 89         ld hl,Impacto_Amadeus
 282+ A087 36 01            ld (hl),1
 283+ A089
 284+ A089              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A089              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A089
 287+ A089 3A B3 89         ld a,(p.imp.amadeus)
 288+ A08C FE DE            cp $de
 289+ A08E 20 04            jr nz,1F
 290+ A090
 291+ A090 3D               dec a
 292+ A091 32 B3 89         ld (p.imp.amadeus),a
 293+ A094
 294+ A094              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A094
 296+ A094 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A097 21 B5 89         ld hl,Pamm_Amadeus
 298+ A09A
 299+ A09A 73               ld (hl),e
 300+ A09B 23               inc hl
 301+ A09C 72               ld (hl),d
 302+ A09D
 303+ A09D D1               pop de
 304+ A09E E1               pop hl
 305+ A09F C1               pop bc
 306+ A0A0
 307+ A0A0 AF               xor a
 308+ A0A1 3C               inc a               ; NZ before RET.
 309+ A0A2 C9               ret
 310+ A0A3
 311+ A0A3              ; ------------- ------------- ------------
 312+ A0A3              ;
 313+ A0A3              ;   31/10/24
 314+ A0A3
 315+ A0A3              Fin_de_disparo_de_entidad
 316+ A0A3
 317+ A0A3              ; Estamos en zona de Amadeus ??
 318+ A0A3
 319+ A0A3 7C               ld a,h
 320+ A0A4 FE 54            cp $54
 321+ A0A6 38 0D            jr c,1F
 322+ A0A8
 323+ A0A8 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A0A9
 325+ A0A9 5D               ld e,l
 326+ A0AA 54               ld d,h
 327+ A0AB
 328+ A0AB 21 E0 57         ld hl,$57e0
 329+ A0AE ED 52            sbc hl,de
 330+ A0B0
 331+ A0B0 38 6F            jr c,Elimina_disparo_entidad
 332+ A0B2
 333+ A0B2 6B               ld l,e
 334+ A0B3 62               ld h,d
 335+ A0B4
 336+ A0B4 D1               pop de
 337+ A0B5
 338+ A0B5 7C           1 ld a,h
 339+ A0B6 FE 50            cp $50
 340+ A0B8 D8               ret c
 341+ A0B9
 342+ A0B9 7D               ld a,l
 343+ A0BA FE C0            cp $c0
 344+ A0BC D8               ret c
 345+ A0BD
 346+ A0BD              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A0BD              ; Así podremos comprobar si hay colisión más adelante.
 348+ A0BD
 349+ A0BD 1C               inc e
 350+ A0BE 1C               inc e
 351+ A0BF
 352+ A0BF EB               ex de,hl
 353+ A0C0 CB C6            set 0,(hl)
 354+ A0C2 EB               ex de,hl
 355+ A0C3
 356+ A0C3 1D               dec e
 357+ A0C4 1D               dec e
 358+ A0C5
 359+ A0C5 C9               ret
 360+ A0C6
 361+ A0C6              ; ----------------------------------------------------------
 362+ A0C6              ;
 363+ A0C6              ;   08/10/24
 364+ A0C6
 365+ A0C6              ;   Estructura de un disparo de entidades.
 366+ A0C6
 367+ A0C6              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A0C6              ; 	defw 0											; Puntero de impresión.
 369+ A0C6              ;	defw 0											; Control.
 370+ A0C6
 371+ A0C6              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A0C6              ;   _de la entidad en el momento de disparar.
 373+ A0C6
 374+ A0C6              ;   El byte alto muestra la siguiente información:
 375+ A0C6              ;
 376+ A0C6              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A0C6              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A0C6              ;
 379+ A0C6              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A0C6              ;
 381+ A0C6              ;                        10xx ..... Izquierda.
 382+ A0C6              ;                        01xx ..... Derecha.
 383+ A0C6              ;                        00xx ..... Recto.
 384+ A0C6
 385+ A0C6              Rota_disparo_si_procede
 386+ A0C6
 387+ A0C6              ;   Nos situamos en el byte alto de (Control).
 388+ A0C6
 389+ A0C6 CB 76            bit 6,(hl)
 390+ A0C8 20 2D            jr nz,Rota_a_derecha
 391+ A0CA CB 7E            bit 7,(hl)
 392+ A0CC C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A0CD
 394+ A0CD              Rota_a_izq
 395+ A0CD
 396+ A0CD E5               push hl
 397+ A0CE
 398+ A0CE 7D               ld a,l
 399+ A0CF D6 05            sub 5
 400+ A0D1 6F               ld l,a
 401+ A0D2
 402+ A0D2 E5               push hl
 403+ A0D3 FD E1            pop iy
 404+ A0D5
 405+ A0D5 A7               and a
 406+ A0D6
 407+ A0D6 FD CB 02 16      rl (iy+02)
 408+ A0DA FD CB 01 16      rl (iy+01)
 409+ A0DE FD CB 00 16      rl (iy+00)
 410+ A0E2
 411+ A0E2 30 3B            jr nc,Exit
 412+ A0E4
 413+ A0E4              ; Desplazamiento completo hasta Carry.
 414+ A0E4              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A0E4
 416+ A0E4 FD 36 02 03      ld (iy+02),$03
 417+ A0E8 FD 36 01 00      ld (iy+01),$00
 418+ A0EC FD 36 00 00      ld (iy+00),$00
 419+ A0F0
 420+ A0F0 21 71 8C         ld hl,Ctrl_5
 421+ A0F3 CB DE            set 3,(hl)
 422+ A0F5
 423+ A0F5 18 28            jr Exit
 424+ A0F7
 425+ A0F7              Rota_a_derecha
 426+ A0F7
 427+ A0F7 E5               push hl
 428+ A0F8
 429+ A0F8 7D               ld a,l
 430+ A0F9 D6 05            sub 5
 431+ A0FB 6F               ld l,a
 432+ A0FC
 433+ A0FC E5               push hl
 434+ A0FD FD E1            pop iy
 435+ A0FF
 436+ A0FF A7               and a
 437+ A100
 438+ A100 FD CB 00 1E      rr (iy+00)
 439+ A104 FD CB 01 1E      rr (iy+01)
 440+ A108 FD CB 02 1E      rr (iy+02)
 441+ A10C
 442+ A10C 30 11            jr nc,Exit
 443+ A10E
 444+ A10E              ; Desplazamiento completo hasta Carry.
 445+ A10E              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A10E
 447+ A10E FD 36 00 01      ld (iy+00),$01
 448+ A112 FD 36 01 80      ld (iy+01),$80
 449+ A116 FD 36 02 00      ld (iy+02),$00
 450+ A11A
 451+ A11A 21 71 8C         ld hl,Ctrl_5
 452+ A11D CB D6            set 2,(hl)
 453+ A11F
 454+ A11F E1           Exit pop hl
 455+ A120 C9               ret
 456+ A121
 457+ A121              ; ------------ ----------- ------------
 458+ A121              ;
 459+ A121              ;   25/9/24
 460+ A121
 461+ A121              Elimina_disparo_entidad
 462+ A121
 463+ A121 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A124 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A125
 466+ A125 E1               pop hl
 467+ A126 E5               push hl
 468+ A127
 469+ A127 2C               inc l
 470+ A128 2C               inc l
 471+ A129
 472+ A129 CD 31 A1         call Borra_6_bytes
 473+ A12C
 474+ A12C D1               pop de
 475+ A12D
 476+ A12D 21 00 00         ld hl,0
 477+ A130
 478+ A130 C9               ret
 479+ A131
 480+ A131              ; ----- ----- ----- ----- -----
 481+ A131
 482+ A131              Borra_6_bytes
 483+ A131
 484+ A131 16 06            ld d,6                                                    ; Contador
 485+ A133 AF               xor a                                                     ; Borrador
 486+ A134 77           1 ld (hl),a
 487+ A135 2D               dec l
 488+ A136 15               dec d
 489+ A137 20 FB            jr nz,1B
 490+ A139
 491+ A139 C9               ret
 492+ A13A
 493+ A13A              ; --------------------------------------------------------------------------------------
 494+ A13A              ;
 495+ A13A              ;   12/10/24
 496+ A13A              ;
 497+ A13A
 498+ A13A              Genera_datos_de_impresion_disparos_Entidades
 499+ A13A
 500+ A13A 3E 07            ld a,7
 501+ A13C 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A13D
 503+ A13D              ; ---------------
 504+ A13D
 505+ A13D              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A13D
 507+ A13D 21 20 89          ld hl,Indice_de_disparos_entidades
 508+ A140
 509+ A140 CD 4A 91     1 call Extrae_address
 510+ A143
 511+ A143 13               inc de
 512+ A144 13               inc de
 513+ A145
 514+ A145 ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A149
 516+ A149 2D               dec l
 517+ A14A 7E               ld a,(hl)
 518+ A14B A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A14C 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A14E
 521+ A14E              ; ----- ----- ----- -----
 522+ A14E
 523+ A14E 2D               dec l
 524+ A14F CD 4A 91         call Extrae_address
 525+ A152 E5               push hl
 526+ A153
 527+ A153 1D               dec e
 528+ A154
 529+ A154 EB               ex de,hl
 530+ A155
 531+ A155 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A156 2D               dec l
 533+ A157 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A158 2D               dec l
 535+ A159 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A15A
 537+ A15A E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A15B
 539+ A15B              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A15B
 541+ A15B FD 2A 5B 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A15F FD 73 00         ld (iy+0),e
 543+ A162 FD 70 01         ld (iy+1),b
 544+ A165 FD 71 02         ld (iy+2),c
 545+ A168
 546+ A168 FD 75 03         ld (iy+3),l
 547+ A16B FD 74 04         ld (iy+4),h
 548+ A16E
 549+ A16E CD 57 9A         call NextScan
 550+ A171
 551+ A171 FD 75 05         ld (iy+5),l
 552+ A174 FD 74 06         ld (iy+6),h
 553+ A177
 554+ A177 FD E5            push iy
 555+ A179 E1               pop hl
 556+ A17A
 557+ A17A 3E 07            ld a,7
 558+ A17C 85               add l
 559+ A17D 6F               ld l,a
 560+ A17E
 561+ A17E 22 5B 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A181
 563+ A181              ; ----- ----- ----- -----
 564+ A181
 565+ A181              Situa_en_siguiente_caja
 566+ A181
 567+ A181 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A182 3D               dec a
 569+ A183 C8               ret z
 570+ A184
 571+ A184 08               ex af,af
 572+ A185 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A188 18 B6            jr 1B
 574+ A18A
 575+ A18A              ; --------------------------------------------------------------------------------------
 576+ A18A              ;
 577+ A18A              ;   12/10/24
 578+ A18A              ;
 579+ A18A
 580+ A18A              Genera_disparo_de_entidad_maldosa
 581+ A18A
 582+ A18A              ;   Estructura de un disparo de entidades.
 583+ A18A
 584+ A18A              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A18A              ; 	defw 0											; Puntero de impresión.
 586+ A18A              ;	defw 0											; Control.
 587+ A18A
 588+ A18A              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A18A              ;   _de la entidad en el momento de disparar.
 590+ A18A
 591+ A18A              ;   El byte de control muestra la siguiente información:
 592+ A18A
 593+ A18A              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A18A              ;
 595+ A18A              ;                        10xx ..... Izquierda.
 596+ A18A              ;                        01xx ..... Derecha.
 597+ A18A              ;                        00xx ..... Recto.
 598+ A18A
 599+ A18A              ;*  Exclusiones.
 600+ A18A
 601+ A18A              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A18A              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A18A
 604+ A18A 3A 5F 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A18D A7               and a
 606+ A18E C8               ret z
 607+ A18F
 608+ A18F 3A FA 8B         ld a,(Coordenada_y)
 609+ A192 A7               and a
 610+ A193 C8               ret z
 611+ A194
 612+ A194 3D               dec a
 613+ A195 C8               ret z
 614+ A196
 615+ A196 FE 10            cp 16
 616+ A198 D0               ret nc
 617+ A199
 618+ A199              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A199              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A199              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A199
 622+ A199 21 61 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A19C 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A19D
 625+ A19D              ;   Decrementa el numero de disparos de entidades.
 626+ A19D
 627+ A19D 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A1A0 35               dec (hl)
 629+ A1A1
 630+ A1A1 21 20 89         ld hl,Indice_de_disparos_entidades
 631+ A1A4
 632+ A1A4 CD 4A 91     1 call Extrae_address
 633+ A1A7
 634+ A1A7 13               inc de
 635+ A1A8 13               inc de
 636+ A1A9
 637+ A1A9 ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A1AD
 639+ A1AD              ;   Comprobamos si la caja está vacía.
 640+ A1AD
 641+ A1AD 2D               dec l
 642+ A1AE 7E               ld a,(hl)
 643+ A1AF A7               and a
 644+ A1B0 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A1B2 2C               inc l
 646+ A1B3
 647+ A1B3              ;   Caja vacía, vamos a generar un disparo.
 648+ A1B3              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A1B3
 650+ A1B3 CD D4 A1         call Genera_byte_inclinacion
 651+ A1B6
 652+ A1B6 7E               ld a,(hl)
 653+ A1B7 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A1B8
 655+ A1B8 2D               dec l
 656+ A1B9
 657+ A1B9 CD F0 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A1BC
 659+ A1BC 70               ld (hl),b
 660+ A1BD 2D               dec l
 661+ A1BE 71               ld (hl),c
 662+ A1BF
 663+ A1BF 2D               dec l
 664+ A1C0
 665+ A1C0              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A1C0
 667+ A1C0 FD 7E 02         ld a,(iy+02)
 668+ A1C3 77               ld (hl),a
 669+ A1C4 2D               dec l
 670+ A1C5
 671+ A1C5 FD 7E 01         ld a,(iy+01)
 672+ A1C8 77               ld (hl),a
 673+ A1C9 2D               dec l
 674+ A1CA
 675+ A1CA FD 7E 00         ld a,(iy+00)
 676+ A1CD 77               ld (hl),a
 677+ A1CE
 678+ A1CE C9               ret
 679+ A1CF
 680+ A1CF              ;   --- --- ---
 681+ A1CF
 682+ A1CF              Situa_en_siguiente_disparo
 683+ A1CF
 684+ A1CF 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A1D2 18 D0            jr 1B
 686+ A1D4
 687+ A1D4              ; --------------------------------------------------------------------------------------
 688+ A1D4              ;
 689+ A1D4              ;   09/10/24
 690+ A1D4              ;
 691+ A1D4
 692+ A1D4              Genera_byte_inclinacion
 693+ A1D4
 694+ A1D4              ; Determina tendencia del disparo.
 695+ A1D4
 696+ A1D4 3A AF 89         ld a,(CX_Amadeus)
 697+ A1D7 47               ld b,a
 698+ A1D8 3A F9 8B         ld a,(Coordenada_X)
 699+ A1DB 90               sub b
 700+ A1DC 38 07            jr c,Disparo_a_derecha
 701+ A1DE
 702+ A1DE FE 06        Disparo_a_izquierda cp 6
 703+ A1E0
 704+ A1E0 D8               ret c
 705+ A1E1 C8               ret z
 706+ A1E2
 707+ A1E2 CB FE            set 7,(hl)
 708+ A1E4 C9               ret
 709+ A1E5
 710+ A1E5 47           Disparo_a_derecha ld b,a
 711+ A1E6 3E FF            ld a,$ff
 712+ A1E8 90               sub b
 713+ A1E9
 714+ A1E9 FE 05            cp 5
 715+ A1EB
 716+ A1EB D8               ret c
 717+ A1EC C8               ret z
 718+ A1ED
 719+ A1ED CB F6            set 6,(hl)
 720+ A1EF C9               ret
 721+ A1F0
 722+ A1F0              ; --------------------------------------------------------------------------------------
 723+ A1F0              ;
 724+ A1F0              ;   09/10/24
 725+ A1F0              ;
 726+ A1F0
 727+ A1F0              Modifica_puntero_de_impresion
 728+ A1F0
 729+ A1F0              ;   Puntero de impresión del disparo en BC.
 730+ A1F0
 731+ A1F0 E5               push hl
 732+ A1F1
 733+ A1F1 2A 74 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A1F4 CD 57 9A         call NextScan
 735+ A1F7
 736+ A1F7 4D               ld c,l
 737+ A1F8 44               ld b,h
 738+ A1F9
 739+ A1F9 E1               pop hl
 740+ A1FA
 741+ A1FA 08               ex af,af
 742+ A1FB CB 77            bit 6,a
 743+ A1FD 28 06            jr z,1F
 744+ A1FF
 745+ A1FF FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A203 0C               inc c
 747+ A204 C9               ret
 748+ A205
 749+ A205 CB 7F        1 bit 7,a
 750+ A207 28 F6            jr z,2B
 751+ A209
 752+ A209 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A20D 0D               dec c
 754+ A20E
 755+ A20E C9               ret
 756+ A20F
 757+ A20F              ; --------------------------------------------------------------------------------------
 758+ A20F              ;
 759+ A20F              ;   28/11/24
 760+ A20F              ;
 761+ A20F
 762+ A20F              Compara_con_coordenadas_de_disparo
 763+ A20F
 764+ A20F DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 765+ A212 47               ld b,a
 766+ A213 3A 79 8C         ld a,(Coordenadas_disparo_certero)
 767+ A216 90               sub b
 768+ A217
 769+ A217              ; A = "0" ok
 770+ A217              ; A = "1" ok
 771+ A217
 772+ A217 28 08            jr z,Comprueba_coordenada_X
 773+ A219 3D               dec a
 774+ A21A 28 05            jr z,Comprueba_coordenada_X
 775+ A21C
 776+ A21C              ; A = "$ff" ok
 777+ A21C
 778+ A21C FE FE            cp $fe
 779+ A21E 28 01            jr z,Comprueba_coordenada_X
 780+ A220
 781+ A220 C9               ret
 782+ A221
 783+ A221              Comprueba_coordenada_X
 784+ A221
 785+ A221 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 786+ A224 47               ld b,a
 787+ A225 21 7A 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A228 7E               ld a,(hl)
 789+ A229 90               sub b
 790+ A22A
 791+ A22A              ; A = "0" ok
 792+ A22A              ; A = "1" ok
 793+ A22A
 794+ A22A 28 09            jr z,Activa_Impacto_en_entidad
 795+ A22C 3D               dec a
 796+ A22D 28 06            jr z,Activa_Impacto_en_entidad
 797+ A22F
 798+ A22F              ; A = "2" ok
 799+ A22F
 800+ A22F 3D               dec a
 801+ A230 28 03            jr z,Activa_Impacto_en_entidad
 802+ A232
 803+ A232              ; A = "$ff"
 804+ A232
 805+ A232 FE FD            cp $fd
 806+ A234 C0               ret nz
 807+ A235
 808+ A235              Activa_Impacto_en_entidad
 809+ A235
 810+ A235              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A235
 812+ A235 3E 02            ld a,2
 813+ A237 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 814+ A23A
 815+ A23A              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A23A
 817+ A23A 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A23D
 819+ A23D DD 73 07         ld (ix+7),e
 820+ A240 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 821+ A243
 822+ A243              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 823+ A243
 824+ A243 21 76 8C         ld hl,Impacto2
 825+ A246 CB 9E            res 3,(hl)
 826+ A248
 827+ A248 C9               ret
 828+ A249
 829+ A249              ; --------------------------------------------------------------------------------------
 830+ A249              ;
 831+ A249              ;   13/10/24
 832+ A249              ;
 833+ A249
 834+ A249              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 835+ A249
 836+ A249              Limpia_album_de_pintado_disparos_Amadeus
 837+ A249
 838+ A249 2A 53 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 839+ A24C 06 06            ld b,6
 840+ A24E AF               xor a
 841+ A24F 77           1 ld (hl),a
 842+ A250 2C               inc l
 843+ A251 10 FC            djnz 1B
 844+ A253
 845+ A253 C9               ret
 846+ A254
 847+ A254              ; --------------------------------------------------------------------------------------
 848+ A254              ;
 849+ A254              ;   29/09/24
 850+ A254              ;
 851+ A254
 852+ A254              Calcula_bytes_pintado_disparos
 853+ A254
 854+ A254 2A 57 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 855+ A257 45               ld b,l
 856+ A258 2A 5B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 857+ A25B 7D               ld a,l
 858+ A25C
 859+ A25C 90               sub b
 860+ A25D 32 5D 8C         ld (Num_de_bytes_album_de_disparos),a
 861+ A260
 862+ A260 C9               ret
 863+ A261
 864+ A261              ; --------------------------------------------------------------------------------------
 865+ A261              ;
 866+ A261              ;   26/10/24
 867+ A261              ;
 868+ A261              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 869+ A261              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 870+ A261              ;   _disparos que el álbum del FRAME actual).
 871+ A261
 872+ A261              Limpia_album_de_pintado_disparos_entidades
 873+ A261
 874+ A261 21 5E 8C         ld hl,Num_de_bytes_album_de_disparos+1
 875+ A264 7E               ld a,(hl)
 876+ A265 2D               dec l
 877+ A266 46               ld b,(hl)
 878+ A267 90               sub b
 879+ A268
 880+ A268 D8               ret c
 881+ A269 C8               ret z
 882+ A26A
 883+ A26A F5               push af
 884+ A26B 80               add b
 885+ A26C 77               ld (hl),a
 886+ A26D F1               pop af
 887+ A26E
 888+ A26E              ; Clean.
 889+ A26E
 890+ A26E 47           2 ld b,a
 891+ A26F AF               xor a
 892+ A270 2A 5B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 893+ A273 77           1 ld (hl),a
 894+ A274 23               inc hl
 895+ A275 10 FC            djnz 1B
 896+ A277
 897+ A277 C9               ret
 898+ A278
 899+ A278              ; --------------------------------------------------------------------------------------
 900+ A278              ;
 901+ A278              ;   29/09/24
 902+ A278              ;
 903+ A278
 904+ A278              Motor_Disparos_Amadeus
 905+ A278
 906+ A278 21 1D 89         ld hl,Disparo_Amad+1
 907+ A27B
 908+ A27B 34               inc (hl)
 909+ A27C 35               dec (hl)
 910+ A27D
 911+ A27D C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 912+ A27E
 913+ A27E              ;   Esta caja contiene un disparo.
 914+ A27E
 915+ A27E CD 85 A2         call Consulta_Impacto
 916+ A281 CC 9E A2         call z,Mueve_disparo_Amadeus
 917+ A284
 918+ A284 C9               ret
 919+ A285
 920+ A285              ; ----------------------
 921+ A285              ;
 922+ A285              ;
 923+ A285              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 924+ A285              ;
 925+ A285              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 926+ A285
 927+ A285
 928+ A285              Consulta_Impacto
 929+ A285
 930+ A285              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 931+ A285              ;   _sea lo más coherente posible.
 932+ A285
 933+ A285 E5               push hl
 934+ A286 2B               dec hl
 935+ A287 CD 7A A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 936+ A28A E1               pop hl
 937+ A28B 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 938+ A28C
 939+ A28C C8               ret z
 940+ A28D
 941+ A28D 3A 76 8C         ld a,(Impacto2)
 942+ A290 CB DF            set 3,a
 943+ A292 32 76 8C         ld (Impacto2),a
 944+ A295
 945+ A295 E5               push hl
 946+ A296 CD 67 A3         call Genera_coordenadas_de_disparo_Amadeus
 947+ A299 E1               pop hl
 948+ A29A CD B7 A2         call Elimina_disparo_Amadeus
 949+ A29D
 950+ A29D C9               ret
 951+ A29E
 952+ A29E              ; ----------------------
 953+ A29E              ;
 954+ A29E              ;
 955+ A29E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 956+ A29E
 957+ A29E              Mueve_disparo_Amadeus
 958+ A29E
 959+ A29E CD 4A 91         call Extrae_address
 960+ A2A1
 961+ A2A1 CD 66 9A         call PreviousScan
 962+ A2A4 CD 66 9A         call PreviousScan
 963+ A2A7 CD 66 9A         call PreviousScan
 964+ A2AA CD 66 9A         call PreviousScan
 965+ A2AD
 966+ A2AD              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 967+ A2AD
 968+ A2AD 7C               ld a,h
 969+ A2AE D6 40            sub $40
 970+ A2B0 EB               ex de,hl
 971+ A2B1 38 04            jr c,Elimina_disparo_Amadeus
 972+ A2B3
 973+ A2B3               ; Introduce nuevo puntero_de_impresión en la caja.
 974+ A2B3
 975+ A2B3 73               ld (hl),e
 976+ A2B4 23               inc hl
 977+ A2B5 72               ld (hl),d
 978+ A2B6
 979+ A2B6 C9               ret
 980+ A2B7
 981+ A2B7              ; ----------------------
 982+ A2B7              ;
 983+ A2B7              ;   29/9/24
 984+ A2B7
 985+ A2B7              Elimina_disparo_Amadeus
 986+ A2B7
 987+ A2B7              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 988+ A2B7              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 989+ A2B7
 990+ A2B7              ;   Disparo_1A defw 0									; Puntero objeto.
 991+ A2B7              ;   	defw 0											; Puntero de impresión.
 992+ A2B7
 993+ A2B7 2B               dec hl
 994+ A2B8 2B               dec hl
 995+ A2B9
 996+ A2B9 AF               xor a
 997+ A2BA 77               ld (hl),a
 998+ A2BB 23               inc hl
 999+ A2BC 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1000+ A2BD
1001+ A2BD 23               inc hl
1002+ A2BE 77               ld (hl),a
1003+ A2BF 23               inc hl
1004+ A2C0 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1005+ A2C1
1006+ A2C1 3E 01            ld a,1
1007+ A2C3 32 60 8C         ld (Permiso_de_disparo_Amadeus),a
1008+ A2C6
1009+ A2C6 CD 49 A2         call Limpia_album_de_pintado_disparos_Amadeus
1010+ A2C9
1011+ A2C9 AF               xor a
1012+ A2CA 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1013+ A2CB
1014+ A2CB C9               ret
1015+ A2CC
1016+ A2CC              ; --------------------------------------------------------------------------------------
1017+ A2CC              ;
1018+ A2CC              ;   13/10/24
1019+ A2CC              ;
1020+ A2CC
1021+ A2CC              Pinta_disparos_Amadeus
1022+ A2CC
1023+ A2CC 06 02            ld b,2
1024+ A2CE ED 73 47 8C      ld (Stack),sp
1025+ A2D2 ED 7B 55 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1026+ A2D6 D1           3 pop de
1027+ A2D7 14               inc d
1028+ A2D8 15               dec d
1029+ A2D9 28 1C            jr z,1F
1030+ A2DB E1               pop hl
1031+ A2DC
1032+ A2DC              Imprime_scanlines_en_pantalla
1033+ A2DC
1034+ A2DC              ; 1er scanline
1035+ A2DC
1036+ A2DC 1A               ld a,(de)
1037+ A2DD AE               xor (hl)
1038+ A2DE 77               ld (hl),a
1039+ A2DF
1040+ A2DF 1C               inc e
1041+ A2E0 2C               inc l
1042+ A2E1
1043+ A2E1 1A               ld a,(de)
1044+ A2E2 AE               xor (hl)
1045+ A2E3 77               ld (hl),a
1046+ A2E4
1047+ A2E4 1D               dec e
1048+ A2E5 E1               pop hl
1049+ A2E6
1050+ A2E6              ; 2º scanline
1051+ A2E6
1052+ A2E6 1A               ld a,(de)
1053+ A2E7 AE               xor (hl)
1054+ A2E8 77               ld (hl),a
1055+ A2E9
1056+ A2E9 1C               inc e
1057+ A2EA 2C               inc l
1058+ A2EB
1059+ A2EB 1A               ld a,(de)
1060+ A2EC AE               xor (hl)
1061+ A2ED 77               ld (hl),a
1062+ A2EE
1063+ A2EE 1D               dec e
1064+ A2EF
1065+ A2EF 18 06            jr 1F
1066+ A2F1
1067+ A2F1 ED 7B 53 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1068+ A2F5 18 DF            jr 3B
1069+ A2F7 10 F8        1 djnz 2B
1070+ A2F9 ED 7B 47 8C      ld sp,(Stack)
1071+ A2FD C9               ret
1072+ A2FE
1073+ A2FE              ; --------------------------------------------------------------------------------------
1074+ A2FE              ;
1075+ A2FE              ;   13/10/24
1076+ A2FE              ;
1077+ A2FE              ;   Modifica: HL,BC y DE.
1078+ A2FE
1079+ A2FE
1080+ A2FE              Genera_datos_de_impresion_disparos_Amadeus
1081+ A2FE
1082+ A2FE ED 73 47 8C      ld (Stack),sp
1083+ A302 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1084+ A305 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1085+ A306
1086+ A306 14               inc d                                                     ;? Salimos si no hay disparo.
1087+ A307 15               dec d
1088+ A308
1089+ A308 28 0E            jr z,Salida
1090+ A30A
1091+ A30A              Genera_scanlines_de_disparo_Amadeus
1092+ A30A
1093+ A30A E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1094+ A30B              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1095+ A30B ED 7B 53 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1096+ A30F
1097+ A30F C1               pop bc
1098+ A310 C1               pop bc
1099+ A311 C1               pop bc
1100+ A312
1101+ A312 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1102+ A313 CD 66 9A         call PreviousScan
1103+ A316 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1104+ A317 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1105+ A318
1106+ A318              Salida
1107+ A318
1108+ A318 ED 7B 47 8C      ld sp,(Stack)
1109+ A31C
1110+ A31C C9               ret
1111+ A31D
1112+ A31D              ; --------------------------------------------------------------------------------------
1113+ A31D              ;
1114+ A31D              ;   12/09/24
1115+ A31D              ;
1116+ A31D
1117+ A31D              Genera_disparo_Amadeus
1118+ A31D
1119+ A31D              ;*  Exclusiones.
1120+ A31D
1121+ A31D 3A 60 8C         ld a,(Permiso_de_disparo_Amadeus)
1122+ A320 A7               and a
1123+ A321 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1124+ A322
1125+ A322 3D               dec a
1126+ A323 32 60 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1127+ A326
1128+ A326              Define_puntero_objeto_disparo
1129+ A326
1130+ A326              ;   Inicializamos contador.
1131+ A326
1132+ A326 06 00            ld b,0
1133+ A328
1134+ A328 2A B3 89         ld hl,(p.imp.amadeus)
1135+ A32B 2C               inc l
1136+ A32C
1137+ A32C 3E 80            ld a,$80
1138+ A32E BE               cp (hl)
1139+ A32F 28 0D            jr z,1F
1140+ A331
1141+ A331 04               inc b
1142+ A332
1143+ A332 3E 60            ld a,$60
1144+ A334 BE               cp (hl)
1145+ A335 28 07            jr z,1F
1146+ A337
1147+ A337
1148+ A337 04               inc b
1149+ A338
1150+ A338 3E 18            ld a,$18
1151+ A33A BE               cp (hl)
1152+ A33B 28 01            jr z,1F
1153+ A33D
1154+ A33D 04               inc b
1155+ A33E
1156+ A33E              ;   Calcula el Puntero_de_impresión del disparo.
1157+ A33E
1158+ A33E              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1159+ A33E
1160+ A33E CD 66 9A     1 call PreviousScan
1161+ A341
1162+ A341 78               ld a,b
1163+ A342 CB 3F            srl a
1164+ A344 28 03            jr z,4F
1165+ A346
1166+ A346              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1167+ A346 E5               push hl
1168+ A347 18 02            jr 5F
1169+ A349 2D           4 dec l
1170+ A34A E5               push hl
1171+ A34B              ; ---
1172+ A34B
1173+ A34B              ;   Calcula el Puntero_objeto del disparo.
1174+ A34B
1175+ A34B 21 76 83     5 ld hl,Indice_disparo_Amadeus
1176+ A34E 04               inc b
1177+ A34F 05               dec b
1178+ A350 28 04            jr z,2F
1179+ A352
1180+ A352              ;   Nos desplazamos por el índice de disparos.
1181+ A352
1182+ A352 2C           3 inc l
1183+ A353 2C               inc l
1184+ A354 10 FC            djnz 3B
1185+ A356
1186+ A356              ; --- Guarda el Puntero_objeto del disparo en la pila.
1187+ A356 CD 4A 91     2 call Extrae_address
1188+ A359 E5               push hl
1189+ A35A              ; ---
1190+ A35A
1191+ A35A              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1192+ A35A              ; HL en el 1er .db de la caja.
1193+ A35A
1194+ A35A 21 1C 89         ld hl,Disparo_Amad
1195+ A35D
1196+ A35D 06 02            ld b,2
1197+ A35F
1198+ A35F D1           6 pop de
1199+ A360 73               ld (hl),e
1200+ A361 23               inc hl
1201+ A362 72               ld (hl),d
1202+ A363 23               inc hl
1203+ A364
1204+ A364 10 F9            djnz 6B
1205+ A366
1206+ A366 C9               ret
1207+ A367
1208+ A367              Genera_coordenadas_de_disparo_Amadeus
1209+ A367
1210+ A367              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1211+ A367              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1212+ A367              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1213+ A367
1214+ A367 CD 4A 91         call Extrae_address
1215+ A36A CD 62 95         call Genera_coordenadas
1216+ A36D
1217+ A36D 3D               dec a
1218+ A36E
1219+ A36E 21 79 8C         ld hl,Coordenadas_disparo_certero
1220+ A371 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1221+ A372 23               inc hl
1222+ A373 3A F9 8B         ld a,(Coordenada_X)
1223+ A376 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1224+ A377
1225+ A377 AF               xor a
1226+ A378 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1227+ A379
1228+ A379 C9               ret
1229+ A37A
1230+ A37A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1231+ A37A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1232+ A37A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A37A
1234+ A37A              ; ----------------------------------------------
1235+ A37A              ;
1236+ A37A              ;   27/08/24
1237+ A37A              ;
1238+ A37A              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1239+ A37A              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1240+ A37A
1241+ A37A              Detecta_impacto_en_disparo_de_Amadeus
1242+ A37A
1243+ A37A              Extraccion_de_datos
1244+ A37A
1245+ A37A 13               inc de
1246+ A37B 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1247+ A37C
1248+ A37C 5E               ld e,(hl)
1249+ A37D 23               inc hl
1250+ A37E 56               ld d,(hl)
1251+ A37F
1252+ A37F 23               inc hl
1253+ A380
1254+ A380 4E               ld c,(hl)
1255+ A381 23               inc hl
1256+ A382 46               ld b,(hl)
1257+ A383
1258+ A383 C5               push bc
1259+ A384 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1260+ A385
1261+ A385              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1262+ A385
1263+ A385 CD 66 9A         call PreviousScan
1264+ A388 CD 66 9A         call PreviousScan
1265+ A38B
1266+ A38B              Detecta_impacto_
1267+ A38B
1268+ A38B 1A               ld a,(de)
1269+ A38C A6               and (hl)
1270+ A38D C0               ret nz
1271+ A38E
1272+ A38E 13               inc de
1273+ A38F 23               inc hl
1274+ A390
1275+ A390 1A               ld a,(de)
1276+ A391 A6               and (hl)
1277+ A392 C9               ret
1278+ A393
1279+ A393              ; -------------------------------------------------------------------------------------------------------------
1280+ A393              ;
1281+ A393              ;   25/11//24
1282+ A393              ;
1283+ A393              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1284+ A393              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1285+ A393              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1286+ A393              ;
1287+ A393              ;   MODIFICA: HL,DE,BC y A.
1288+ A393              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1289+ A393              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1290+ A393
1291+ A393              Colision_Entidad_Amadeus
1292+ A393
1293+ A393              ; Posible contacto de entidad con Amadeus. ?????
1294+ A393
1295+ A393              ; Exclusiones:
1296+ A393
1297+ A393 3A 98 8C         ld a,(Shield)
1298+ A396 A7               and a
1299+ A397 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1300+ A398
1301+ A398 21 6F 8C         ld hl,Ctrl_3
1302+ A39B CB 76            bit 6,(hl)
1303+ A39D C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1304+ A39E
1305+ A39E 21 76 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1306+ A3A1 CB 56            bit 2,(hl)
1307+ A3A3 C0               ret nz
1308+ A3A4
1309+ A3A4 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1310+ A3A7 FE 14        	cp $14
1311+ A3A9 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1312+ A3AA
1313+ A3AA 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1314+ A3AD A7               and a
1315+ A3AE C0               ret nz
1316+ A3AF
1317+ A3AF              Genera_coordenadas_X
1318+ A3AF
1319+ A3AF              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1320+ A3AF              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1321+ A3AF
1322+ A3AF              ;   Limpiamos almacenes.
1323+ A3AF
1324+ A3AF              ;    call Limpia_Coordenadas_X
1325+ A3AF
1326+ A3AF              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1327+ A3AF
1328+ A3AF 21 7B 8C         ld hl,Coordenadas_X_Entidad
1329+ A3B2 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1330+ A3B5 CD DB A3         call Guarda_coordenadas_X
1331+ A3B8
1332+ A3B8              ;   Almacenamos las coordenadas X de Amadeus.
1333+ A3B8
1334+ A3B8 3A AF 89         ld a,(CX_Amadeus)
1335+ A3BB CD DB A3         call Guarda_coordenadas_X
1336+ A3BE
1337+ A3BE DD E5            push ix
1338+ A3C0 CD EF A3         call Compara_coordenadas_X
1339+ A3C3 DD E1            pop ix
1340+ A3C5
1341+ A3C5 C0               ret nz
1342+ A3C6
1343+ A3C6 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1344+ A3C8 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1345+ A3CB
1346+ A3CB DD 7D            ld a,ixl
1347+ A3CD C6 04            add 4
1348+ A3CF DD 6F            ld ixl,a
1349+ A3D1
1350+ A3D1 DD 22 77 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1351+ A3D5
1352+ A3D5 21 76 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1353+ A3D8 CB D6            set 2,(hl)
1354+ A3DA
1355+ A3DA C9               ret
1356+ A3DB
1357+ A3DB               ; ----- ----- ----- ----- -----
1358+ A3DB
1359+ A3DB 77           Guarda_coordenadas_X ld (hl),a
1360+ A3DC 3C               inc a
1361+ A3DD 2C               inc l
1362+ A3DE 77               ld (hl),a
1363+ A3DF 3C               inc a
1364+ A3E0 2C               inc l
1365+ A3E1 77               ld (hl),a
1366+ A3E2 2C               inc l
1367+ A3E3 C9               ret
1368+ A3E4
1369+ A3E4 AF           Limpia_Coordenadas_X xor a
1370+ A3E5 06 06            ld b,6
1371+ A3E7 21 7E 8C         ld hl,Coordenadas_X_Amadeus
1372+ A3EA 77           1 ld (hl),a
1373+ A3EB 23               inc hl
1374+ A3EC 10 FC            djnz 1B
1375+ A3EE C9               ret
1376+ A3EF
1377+ A3EF              ; ----- ----- ----- ----- -----
1378+ A3EF
1379+ A3EF              Compara_coordenadas_X
1380+ A3EF
1381+ A3EF DD 21 7B 8C      ld ix,Coordenadas_X_Entidad
1382+ A3F3 DD 7E 00         ld a,(ix+0)
1383+ A3F6 CD 04 A4         call Comparando
1384+ A3F9 C8               ret z
1385+ A3FA
1386+ A3FA 3C               inc a
1387+ A3FB CD 13 A4         call Comparando_1
1388+ A3FE C8               ret z
1389+ A3FF
1390+ A3FF 3C               inc a
1391+ A400 CD 13 A4         call Comparando_1
1392+ A403 C9               ret
1393+ A404
1394+ A404              ; ----- ----- ----- ----- -----
1395+ A404              ;
1396+ A404              ;   4/12/23
1397+ A404              ;
1398+ A404              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1399+ A404
1400+ A404              Comparando
1401+ A404
1402+ A404 DD 2C            inc ixl
1403+ A406 DD 2C            inc ixl
1404+ A408 DD 2C            inc ixl
1405+ A40A
1406+ A40A DD 46 00         ld b,(ix+0)
1407+ A40D DD 4E 01         ld c,(ix+1)
1408+ A410 DD 56 02         ld d,(ix+2)
1409+ A413
1410+ A413 B8           Comparando_1 cp b
1411+ A414 C8               ret z
1412+ A415 B9               cp c
1413+ A416 C8               ret z
1414+ A417 BA               cp d
1415+ A418 C9               ret
1416+ A419
1417+ A419              ; -----------------------------------------------------------------------
1418+ A419              ;
1419+ A419              ;   04/7/24
1420+ A419              ;
1421+ A419
1422+ A419              Detecta_colision_nave_entidad
1423+ A419
1424+ A419              ; Exclusiones:
1425+ A419
1426+ A419              ; Salimos de la rutina si no hay advertencia de posible colisión.
1427+ A419
1428+ A419 21 76 8C     	ld hl,Impacto2
1429+ A41C CB 56        	bit 2,(hl)
1430+ A41E C8           	ret z
1431+ A41F
1432+ A41F              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1433+ A41F
1434+ A41F 2A B5 89         ld hl,(Pamm_Amadeus)
1435+ A422 CD 4A 91         call Extrae_address
1436+ A425 54               ld d,h
1437+ A426 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1438+ A427
1439+ A427 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1440+ A42A 06 10            ld b,16                                        ; Contador de scanlines en B.
1441+ A42C FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1442+ A42F
1443+ A42F C5           1 push bc
1444+ A430 06 03            ld b,3
1445+ A432 E5               push hl
1446+ A433
1447+ A433              ; .db
1448+ A433
1449+ A433 1A           3 ld a,(de)
1450+ A434 A7               and a
1451+ A435 20 03            jr nz,4F
1452+ A437
1453+ A437 2C               inc l
1454+ A438 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1455+ A43A
1456+ A43A ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1457+ A43C 28 04            jr z,2F
1458+ A43E
1459+ A43E              ; Impacto.
1460+ A43E FD 2D            dec iyl
1461+ A440 28 22            jr z,5F
1462+ A442
1463+ A442 1C           2 inc e
1464+ A443 10 EE            djnz 3B
1465+ A445
1466+ A445 E1               pop hl
1467+ A446
1468+ A446              ; Hay salto de línea en el puntero de impresión ???
1469+ A446
1470+ A446 7C               ld a,h
1471+ A447 D6 57            sub $57
1472+ A449 20 0A            jr nz,6F
1473+ A44B
1474+ A44B              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1475+ A44B
1476+ A44B 2A B3 89         ld hl,(p.imp.amadeus)
1477+ A44E 3E 20            ld a,$20
1478+ A450 A7               and a
1479+ A451 85               add l
1480+ A452 6F               ld l,a
1481+ A453 18 01            jr 7F
1482+ A455
1483+ A455 24           6 inc h
1484+ A456
1485+ A456 C1           7 pop bc
1486+ A457 10 D6            djnz 1B
1487+ A459
1488+ A459              ;   Fin de la comparativa.
1489+ A459
1490+ A459              ;   NO HAY COLISIÓN !!!!!.
1491+ A459              ;
1492+ A459              ;   .db (Impacto) de Amadeus a "0".
1493+ A459              ;   RES el bit2 de (Impacto2).
1494+ A459              ;
1495+ A459              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1496+ A459              ;   Lo colocamos a "0".
1497+ A459
1498+ A459 21 76 8C         ld hl,Impacto2
1499+ A45C CB 96            res 2,(hl)
1500+ A45E 2A 77 8C         ld hl,(Entidad_sospechosa_de_colision)
1501+ A461 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1502+ A463 C9               ret
1503+ A464
1504+ A464              ;   COLISIÓN !!!!!.
1505+ A464              ;
1506+ A464              ;   .db (Impacto) de Amadeus a "1".
1507+ A464              ;   SET el bit3 de (Impacto2).
1508+ A464              ;
1509+ A464              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1510+ A464
1511+ A464 E1           5 pop hl
1512+ A465 C1               pop bc
1513+ A466
1514+ A466 21 B2 89         ld hl,Impacto_Amadeus
1515+ A469 36 01            ld (hl),1
1516+ A46B 21 76 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1517+ A46E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1518+ A470
1519+ A470 11 C0 87         ld de,Indice_Explosion_entidades
1520+ A473 2A 77 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1521+ A476
1522+ A476 23               inc hl
1523+ A477 23               inc hl
1524+ A478 23               inc hl
1525+ A479
1526+ A479 73               ld (hl),e
1527+ A47A 23               inc hl
1528+ A47B 72               ld (hl),d
1529+ A47C
1530+ A47C              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1531+ A47C
1532+ A47C 11 60 88         ld de,Indice_Explosion_Amadeus
1533+ A47F 21 B5 89         ld hl,Pamm_Amadeus
1534+ A482
1535+ A482 73               ld (hl),e
1536+ A483 23               inc hl
1537+ A484 72               ld (hl),d
1538+ A485
1539+ A485 C9               ret
1540+ A486
1541+ A486
1542+ A486
# file closed: Disparo.asm
2222  A486
2223  A486              	SAVESNA "Pruebas.sna", START
2224  A486
2225  A486
2226  A486
2227  A486
# file closed: Banco_de_pruebas.asm
