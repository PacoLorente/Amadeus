# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 61 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 8A A4     	call Pinta_disparos_Amadeus
  74  82F6 CD 55 A1     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8A 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD FE 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 88 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 88 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8B 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 1C 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	06/12/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 08 40        	defw $4008											; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63
  96+ 8A63              ; Notas de aleatoriedad.
  97+ 8A63
  98+ 8A63              ;   Bajo_decelerando+3 (1-2)                - Define lo que baja la entidad.
  99+ 8A63              ;   Derecha_y_subiendo+8 (11)               - (11) Cuando la posición de inicio es $4001
 100+ 8A63              ;   Izquierda_y_subiendo+8 (11)             - (11) Cuando la posición de inicio es $4001
 101+ 8A63
 102+ 8A63
 103+ 8A63
 104+ 8A63
 105+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 106+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 107+ 8A6B
 108+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 109+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 109+ 8A73 08 00
 110+ 8A75
 111+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 112+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 112+ 8A7D 0F FE
 113+ 8A7F
 114+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 115+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 116+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 117+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 118+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 119+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 120+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 122+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 123+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 124+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 125+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 126+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 127+ 8AB3
 128+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 129+ 8AB7 11 11 91 FD      db $11,$11,$91,253,11,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 129+ 8ABB 0B 00
 130+ 8ABD
 131+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 132+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 132+ 8AC5 02 00
 133+ 8AC7
 134+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 135+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 135+ 8ACF 04 00
 136+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 137+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 137+ 8AD9 08 00
 138+ 8ADB
 139+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 140+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 140+ 8AE3 02 00
 141+ 8AE5
 142+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 143+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 143+ 8AED 06 00
 144+ 8AEF
 145+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 146+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 146+ 8AF7 06 00
 147+ 8AF9
 148+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 149+ 8AF9
 150+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 151+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 152+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 153+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 154+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 155+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 156+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 157+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 159+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 160+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 161+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 162+ 8B29
 163+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 164+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 165+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 166+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 167+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 168+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 169+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 170+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 171+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 172+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 173+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 174+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 175+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 176+ 8B5D
 177+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 178+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,7,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 178+ 8B65 07 00
 179+ 8B67
 180+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 181+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 181+ 8B6F 02 00
 182+ 8B71
 183+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 184+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 184+ 8B79 04 00
 185+ 8B7B
 186+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 187+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 187+ 8B83 08 00
 188+ 8B85
 189+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 190+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 190+ 8B8D 02 00
 191+ 8B8F
 192+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 193+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 193+ 8B97 06 00
 194+ 8B99
 195+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 196+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 196+ 8BA1 06 00
 197+ 8BA3
 198+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 199+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 200+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 201+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 202+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 203+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 204+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 205+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 206+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 207+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 208+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 209+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 210+ 8BD3
 211+ 8BD3
 212+ 8BD3
 213+ 8BD3
 214+ 8BD3
 215+ 8BD3
 216+ 8BD3
 217+ 8BD3
 218+ 8BD3
 219+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DD 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BDC 01           	db 1										; Tipo de entidad que vamos a introducir en las 6 cajas de DRAW.
  17+ 8BDD
  18+ 8BDD 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE2 01 02
  20+ 8BE4 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE8 01 02
  21+ 8BEA
# file closed: Niveles.asm
 150  8BEA
 151  8BEA              ; --------------------------------------------------------------------------------
 152  8BEA              ;
 153  8BEA              ; 12/05/24
 154  8BEA              ;
 155  8BEA              ; Parámetros DRAW.
 156  8BEA              ;
 157  8BEA
 158  8BEA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEA
 160  8BEA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEB              ;															- Patrón de movimiento.
 162  8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BEC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BED
 165  8BED 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEE
 168  8BEE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEE              ; Ejemplos.
 171  8BEE
 172  8BEE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEE
 178  8BEE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BEF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BEF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BEF
 182  8BEF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF1
 185  8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF3
 187  8BF3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF3
 189  8BF3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF5              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF5
 192  8BF5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF5
 194  8BF5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF6
 200  8BF6 00           Ctrl_2 db 0
 201  8BF7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF7              ;
 209  8BF7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF7              ;														BIT 4, ???
 215  8BF7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF7
 217  8BF7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF8              ;
 223  8BF8              ; 														DESCRIPCIÖN:
 224  8BF8              ;
 225  8BF8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF8              ;
 239  8BF8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF8
 243  8BF8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF8
 245  8BF8 00           Filas db 0												; Filas. [DRAW]
 246  8BF9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFE
 250  8BFE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFE
 252  8BFE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BFF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BFF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BFF
 256  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BFF
 258  8BFF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BFF              ;
 260  8BFF              ;	COLORES: 0 ..... NEGRO
 261  8BFF              ;    		 1 ..... AZUL
 262  8BFF              ; 			 2 ..... ROJO
 263  8BFF              ;			 3 ..... MAGENTA
 264  8BFF              ; 			 4 ..... VERDE
 265  8BFF              ; 			 5 ..... CIAN
 266  8BFF              ;			 6 ..... AMARILLO
 267  8BFF              ; 			 7 ..... BLANCO
 268  8BFF
 269  8BFF 00 00        Indice_Sprite_der defw 0
 270  8C01 00 00        Indice_Sprite_izq defw 0
 271  8C03 00 00        Puntero_DESPLZ_der defw 0
 272  8C05 00 00        Puntero_DESPLZ_izq defw 0
 273  8C07
 274  8C07 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C09 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0A 00           Columnas db 0
 277  8C0B 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C0D              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C0D 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C0E
 281  8C0E              ; variables de control general.
 282  8C0E
 283  8C0E 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C0F
 285  8C0F              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C0F
 287  8C0F              Perfiles_de_velocidad
 288  8C0F
 289  8C0F 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C10 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C11 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C12 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C13
 294  8C13              ; Contadores de 16 bits.
 295  8C13
 296  8C13 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C15 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C17 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C19 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1B
 301  8C1B              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1B
 303  8C1B 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C1D 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C1F 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C21              ;
 307  8C21              ;
 308  8C21 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C22              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C22              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C22 00           Incrementa_puntero_backup db 0
 312  8C23 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C24              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C24 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C25 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C26 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C27              ;
 318  8C27              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C27              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C27              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C27              ;
 322  8C27              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C27              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C27              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C27              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C27              ;
 327  8C27              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C27              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C27              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C27
 331  8C27 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C28
 333  8C28              ;														DESCRIPCIÓN:
 334  8C28              ;
 335  8C28              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C28              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C28              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C28              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C28              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C28              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C28
 342  8C28              ;														BIT 3, Recarga de nueva oleada.
 343  8C28              ;														BIT 4, Recarga de nueva oleada.
 344  8C28              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C28              ;														BIT 6, **** Frame completo.
 346  8C28              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C28
 348  8C28 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2A
 353  8C2A              ; Gestión de ENTIDADES y CAJAS.
 354  8C2A
 355  8C2A 00 00        Puntero_store_caja defw 0
 356  8C2C 00 00        Puntero_restore_caja defw 0
 357  8C2E 00 00        Indice_restore_caja defw 0
 358  8C30 00 00        Puntero_indice_master defw 0
 359  8C32
 360  8C32 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C33 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C34 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C35
 364  8C35 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C37 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C39              ;														; _ puntero (Indice_entidades).
 367  8C39
 368  8C39              ;---------------------------------------------------------------------------------------------------------------
 369  8C39              ;
 370  8C39              ;	13/10/24
 371  8C39              ;
 372  8C39              ;	Álbumes.
 373  8C39
 374  8C39 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3B              ;														; _variable para almacenar lo posición del puntero_
 376  8C3B              ; 														; _de pila, SP.
 377  8C3B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C3D              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C3D
 380  8C3D              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C3D
 382  8C3D 00 00        Album_de_pintado defw 0
 383  8C3F 00 00        Album_de_borrado defw 0
 384  8C41 00 00        Album_de_pintado_Amadeus defw 0
 385  8C43 00 00        Album_de_borrado_Amadeus defw 0
 386  8C45
 387  8C45 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C47 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C49
 390  8C49 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4B 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C4D
 393  8C4D
 394  8C4D 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C4F
 396  8C4F 00           Num_de_bytes_album_de_disparos db 0
 397  8C50 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C51
 399  8C51 07           Numero_de_disparos_de_entidades db 7
 400  8C52
 401  8C52 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C53 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C54
 404  8C54 00 00        Techo_Scanlines_album defw 0
 405  8C56 00 00        Techo_Scanlines_album_2 defw 0
 406  8C58 00           Switch db 0
 407  8C59 00 00        Techo defw 0
 408  8C5B 00 00        Scanlines_album_SP defw 0
 409  8C5D 00 89        India_SP defw Tabla_de_pintado
 410  8C5F 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C61
 412  8C61 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C62              ;
 414  8C62              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C62              ;!															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C62              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C62              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C62              ;																Habilita el borrado/pintado de sprites.
 419  8C62              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C62              ;																_ a la baja.
 421  8C62              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C62              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C62              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C62              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C62              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C62              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C62
 428  8C62 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C63              ;
 430  8C63              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C63
 432  8C63 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C64              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C64              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C64
 436  8C64              ; Gestión de Disparos.
 437  8C64
 438  8C64 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C66 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C68 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C69
 442  8C69              ;
 443  8C69              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C69              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C69              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C69              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C69
 448  8C69
 449  8C69
 450  8C69
 451  8C69
 452  8C69
 453  8C69
 454  8C69 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C6B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C6B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C6B
 458  8C6B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C6D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C6D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C70              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C70 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C73              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C73
 465  8C73              ;---------------------------------------------------------------------------------------------------------------
 466  8C73
 467  8C73              ; Relojes y temporizaciones.
 468  8C73
 469  8C73 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C74 05           Clock_explosion_Amadeus db 5
 471  8C75 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C76
 473  8C76 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C78 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C7A 00           Numero_rnd_disparos db 0
 476  8C7B
 477  8C7B 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C7D A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 479  8C7E A0           CLOCK_disparos_de_entidades db $a0
 480  8C7F
 481  8C7F              ;---------------------------------------------------------------------------------------------------------------
 482  8C7F
 483  8C7F              ; Gestión de NIVELES.
 484  8C7F
 485  8C7F 00           Nivel db 0												; Nivel actual del juego.
 486  8C80 00 00        Puntero_indice_NIVELES defw 0
 487  8C82 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 488  8C84              ; 														; _ que definen el NIVEL.
 489  8C84
 490  8C84              ; ---------------------------------------------------------------------------------------------------------------
 491  8C84
 492  8C84              ; Temporizaciones Shield.
 493  8C84
 494  8C84 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 495  8C88 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 496  8C8A 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 497  8C8B 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 498  8C8C 00           Shield_3 db 0
 499  8C8D
 500  8C8D 07           Lives db 7
 501  8C8E
 502  8C8E              ; 	INICIO  *************************************************************************************************************************************************************************
 503  8C8E              ;
 504  8C8E              ;	13/11/24
 505  8C8E
 506  8C8E              START
 507  8C8E
 508  8C8E 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 509  8C91 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 510  8C93 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 511  8C95 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 512  8C97 F3           	DI
 513  8C98
 514  8C98              ; Limpiamos pantalla.
 515  8C98
 516  8C98              ;	ld a,%00000111
 517  8C98              ;	call Cls
 518  8C98 CD F3 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 519  8C9B
 520  8C9B              INICIALIZACION
 521  8C9B
 522  8C9B 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 523  8C9D CD 8E 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 524  8CA0 CD 20 8F     	call Extrae_numero_aleatorio_y_avanza
 525  8CA3 6F           	ld l,a
 526  8CA4 26 00        	ld h,0
 527  8CA6 22 7B 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8CA9
 529  8CA9              ;	Inicia los álbumes de líneas.
 530  8CA9
 531  8CA9 CD 48 91     	call Inicia_albumes_de_lineas
 532  8CAC CD 58 91     	call Inicia_albumes_de_lineas_Amadeus
 533  8CAF CD 65 91     	call Inicia_albumes_de_disparos
 534  8CB2
 535  8CB2              ;	Inicia 1er Nivel.
 536  8CB2
 537  8CB2 CD F0 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 538  8CB5 CD BE 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 539  8CB8              ;														   _reponiendo entidades eliminadas.
 540  8CB8 CD 24 94     	call Prepara_Cajas_de_Entidades
 541  8CBB
 542  8CBB CD 75 94     	call Inicia_Amadeus
 543  8CBE
 544  8CBE              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 545  8CBE              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 546  8CBE              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 547  8CBE 11 AE 89     	ld de,Amadeus_BOX
 548  8CC1 CD 64 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 549  8CC4 CD B8 94     	call Limpiamos_bandeja_DRAW
 550  8CC7
 551  8CC7              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 552  8CC7
 553  8CC7 06 3C        	ld b,60
 554  8CC9 CD AD 9F     2 call Amadeus_a_izquierda
 555  8CCC 10 FB        	djnz 2B
 556  8CCE
 557  8CCE CD 26 91     	call Genera_datos_de_impresion_Amadeus
 558  8CD1
 559  8CD1              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8CD1
 561  8CD1 CD 81 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8CD4
 563  8CD4 CD FE 91     	call Inicia_Shield
 564  8CD7
 565  8CD7 2A 5B 8C     6 ld hl,(Scanlines_album_SP)
 566  8CDA 22 54 8C     	ld (Techo_Scanlines_album),hl
 567  8CDD
 568  8CDD 2A 3F 8C     	ld hl,(Album_de_borrado)
 569  8CE0 22 5B 8C     	ld (Scanlines_album_SP),hl
 570  8CE3
 571  8CE3 21 00 89     	ld hl,Tabla_de_pintado
 572  8CE6 22 5D 8C     	ld (India_SP),hl
 573  8CE9
 574  8CE9 21 61 8C     	ld hl,Ctrl_3
 575  8CEC CB C6        	set 0,(hl) 											; Indica Frame completo.
 576  8CEE CB D6        	set 2,(hl)
 577  8CF0 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 578  8CF2
 579  8CF2 FB           	ei 													; Ha de apuntar a $5c3a.
 580  8CF3
 581  8CF3 76           	halt
 582  8CF4
 583  8CF4              ; ------------------------------------
 584  8CF4
 585  8CF4              Main
 586  8CF4              ;
 587  8CF4              ; 07/11/24.
 588  8CF4
 589  8CF4              ; Gestión de disparos.
 590  8CF4
 591  8CF4 CD F5 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 592  8CF7 CD 9B A1     	call Motor_de_disparos_entidades
 593  8CFA CD 36 A4     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 594  8CFD
 595  8CFD              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 596  8CFD              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 597  8CFD              ; Este hecho lo indica el bit2 de (Impacto2).
 598  8CFD
 599  8CFD CD D7 A5     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 600  8D00
 601  8D00              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 602  8D00
 603  8D00 21 7E 8C     	ld hl,CLOCK_disparos_de_entidades
 604  8D03 35           	dec (hl)
 605  8D04 CC 36 8E     	call z,Autoriza_disparo_de_entidades
 606  8D07
 607  8D07 2A 7B 8C     	ld hl,(Clock_next_entity)
 608  8D0A ED 4B 78 5C  	ld bc,(FRAMES)
 609  8D0E A7           	and a
 610  8D0F ED 42        	sbc hl,bc
 611  8D11 20 21        	jr nz,1F
 612  8D13
 613  8D13              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 614  8D13
 615  8D13 CD 20 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 616  8D16 CD 37 8F     	call Define_Clock_next_entity
 617  8D19
 618  8D19              ; GESTIÓN DE ENTIDADES.
 619  8D19
 620  8D19              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 621  8D19              ; _ (Clock_next_entity) para la siguiente entidad.
 622  8D19
 623  8D19              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 624  8D19              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 625  8D19              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 626  8D19
 627  8D19 21 33 8C     	ld hl,Numero_parcial_de_entidades
 628  8D1C 46           	ld b,(hl)
 629  8D1D
 630  8D1D 04           	inc b
 631  8D1E 05           	dec b
 632  8D1F
 633  8D1F F3           	di
 634  8D20 28 FE        	jr z,$													;! Nivel superado !!!!!
 635  8D22 FB           	ei
 636  8D23
 637  8D23 3A 34 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 638  8D26 B8           	cp b
 639  8D27 28 0B        	jr z,1F
 640  8D29 30 09        	jr nc,1F
 641  8D2B
 642  8D2B              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 643  8D2B
 644  8D2B 3C           	inc a
 645  8D2C 32 34 8C     	ld (Entidades_en_curso),a
 646  8D2F
 647  8D2F 21 62 8C     	ld hl,Ctrl_4
 648  8D32 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 649  8D34
 650  8D34              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 651  8D34
 652  8D34              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 653  8D34              ;	call Define_Clock_next_entity
 654  8D34
 655  8D34 3A 34 8C     1 ld a,(Entidades_en_curso)
 656  8D37 A7           	and a
 657  8D38 CA DC 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 658  8D3B 47           	ld b,a													; No hay entidades que gestionar.
 659  8D3C
 660  8D3C              ; ( Código que ejecutamos con cada entidad: ).
 661  8D3C
 662  8D3C              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 663  8D3C              ;
 664  8D3C              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 665  8D3C
 666  8D3C 21 00 89     	ld hl,Tabla_de_pintado
 667  8D3F 22 5D 8C     	ld (India_SP),hl
 668  8D42
 669  8D42 21 61 8C     	ld hl,Ctrl_3
 670  8D45 CB D6        	set 2,(hl)
 671  8D47 CD CA 8E     	call Change
 672  8D4A
 673  8D4A C5           2 push bc 												; Nº de entidades en curso.
 674  8D4B
 675  8D4B DD 2A 2A 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 676  8D4F CD CF 91     	call Salta_caja_de_entidades_vacia
 677  8D52
 678  8D52              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 679  8D52
 680  8D52 DD 7E 00     	ld a,(ix+0)
 681  8D55 CB 7F        	bit 7,a
 682  8D57 28 11        	jr z,5F
 683  8D59
 684  8D59              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 685  8D59
 686  8D59 21 62 8C     	ld hl,Ctrl_4
 687  8D5C CB 46        	bit 0,(hl)
 688  8D5E CC DE 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 689  8D61 28 E8        	jr z,6B
 690  8D63
 691  8D63 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 692  8D65 CB BF        	res 7,a
 693  8D67 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 694  8D6A
 695  8D6A              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 696  8D6A              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 697  8D6A
 698  8D6A 3A 68 8C     5 ld a,(Impacto2)
 699  8D6D CB 5F        	bit 3,a
 700  8D6F C4 CD A3     	call nz,Compara_con_coordenadas_de_disparo
 701  8D72
 702  8D72              ; Existe colisión entre esta entidad y Amadeus ???
 703  8D72
 704  8D72 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 705  8D75 CB 4F        	bit 1,a
 706  8D77 C4 E9 92     	call nz,Genera_explosion
 707  8D7A 20 43        	jr nz,Gestiona_siguiente_entidad
 708  8D7C
 709  8D7C DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 710  8D7F A7           	and a
 711  8D80 28 0C        	jr z,3F
 712  8D82
 713  8D82              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D82
 715  8D82              ; 5/7/24
 716  8D82              ; Nota importante:
 717  8D82              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D82              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D82              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D82
 721  8D82 3A B2 89     	ld a,(Impacto_Amadeus)
 722  8D85 A7           	and a
 723  8D86 C4 E9 92     	call nz,Genera_explosion
 724  8D89 20 34        	jr nz,Gestiona_siguiente_entidad
 725  8D8B
 726  8D8B              ; Falsa colisión !!!
 727  8D8B
 728  8D8B 32 EE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8D8E
 730  8D8E              ; -------------------------------------------
 731  8D8E
 732  8D8E CD 7B 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8D91 CD A2 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8D94 CD C5 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 735  8D97
 736  8D97 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 737  8D99 DD 2A EF 8B  	ld ix,(Puntero_de_impresion)
 738  8D9D CD D5 95     	call Genera_datos_de_impresion
 739  8DA0 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 740  8DA2
 741  8DA2 CD DB 94     	call Decrementa_Contador_de_mov_masticados
 742  8DA5
 743  8DA5              ; -------------------------------------------
 744  8DA5
 745  8DA5              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 746  8DA5
 747  8DA5 2A EF 8B     	ld hl,(Puntero_de_impresion)
 748  8DA8 CD A9 95     	call Genera_coordenadas
 749  8DAB
 750  8DAB ED 4B EB 8B  	ld bc,(Coordenada_X)
 751  8DAF
 752  8DAF DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 753  8DB2 DD 70 02     	ld (ix+2),b
 754  8DB5
 755  8DB5              ; TODO: Generamos disparo ???
 756  8DB5
 757  8DB5 3A 53 8C     	ld a,(Permiso_de_disparo_Entidades)
 758  8DB8 A7           	and a
 759  8DB9 C4 4B 8E     	call nz,Entidad_genera_disparo_si_procede
 760  8DBC
 761  8DBC CD 51 A5     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 762  8DBF
 763  8DBF              Gestiona_siguiente_entidad
 764  8DBF
 765  8DBF CD DE 91     	call Incrementa_punteros_de_cajas
 766  8DC2
 767  8DC2 C1           	pop bc
 768  8DC3 10 85        	djnz 2B
 769  8DC5
 770  8DC5              ; Hemos gestionado todas las entidades.
 771  8DC5              ; ----- ----- -----
 772  8DC5
 773  8DC5 CD 8F 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 774  8DC8 CD A6 8F     	call Ordena_tabla_de_impresion
 775  8DCB CD 81 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 776  8DCE
 777  8DCE CD 4C 8F     	call Borra_diferencia
 778  8DD1
 779  8DD1 3A 61 8C     	ld a,(Ctrl_3)
 780  8DD4 CB 5F        	bit 3,a
 781  8DD6 20 04        	jr nz,Gestion_de_Amadeus
 782  8DD8
 783  8DD8 EB           	ex de,hl
 784  8DD9 71           	ld (hl),c
 785  8DDA 2C           	inc l
 786  8DDB 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 787  8DDC
 788  8DDC              ;! GESTIONA AMADEUS !!!!!!!!!!
 789  8DDC
 790  8DDC              Gestion_de_Amadeus
 791  8DDC
 792  8DDC 21 61 8C     	ld hl,Ctrl_3
 793  8DDF CB 76        	bit 6,(hl)
 794  8DE1 28 13        	jr z,Amadeus_vivo
 795  8DE3
 796  8DE3              ; Amadeus ha sido destruido.
 797  8DE3              ; Decrementa (Temp_new_live).
 798  8DE3
 799  8DE3 21 75 8C     	ld hl,Temp_new_live
 800  8DE6 35           	dec (hl)
 801  8DE7 20 26        	jr nz,End_frame
 802  8DE9
 803  8DE9              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 804  8DE9
 805  8DE9 21 8D 8C     	ld hl,Lives
 806  8DEC 35           	dec (hl)
 807  8DED
 808  8DED              ;! Fin del juego
 809  8DED
 810  8DED F3           	di
 811  8DEE 28 FE        	jr z,$														;! GAME OVER !!!!!
 812  8DF0 FB           	ei
 813  8DF1
 814  8DF1              ; Nueva nave.
 815  8DF1
 816  8DF1 CD 68 8E     	call Reinicia_Amadeus
 817  8DF4 18 19        	jr End_frame
 818  8DF6
 819  8DF6              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 820  8DF6
 821  8DF6              Amadeus_vivo
 822  8DF6
 823  8DF6 3A B2 89     	ld a,(Impacto_Amadeus)
 824  8DF9 A7           	and a
 825  8DFA C4 59 93     	call nz, Genera_explosion_Amadeus
 826  8DFD 20 10        	jr nz, End_frame
 827  8DFF
 828  8DFF CD C6 92     	call Teclado
 829  8E02 21 61 8C     	ld hl,Ctrl_3
 830  8E05
 831  8E05 CB 6E        	bit 5,(hl)
 832  8E07 28 06        	jr z,End_frame
 833  8E09
 834  8E09              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 835  8E09
 836  8E09 CD E5 8E     	call Change_Amadeus
 837  8E0C CD 26 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 838  8E0F
 839  8E0F              End_frame
 840  8E0F
 841  8E0F              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 842  8E0F              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 843  8E0F
 844  8E0F CD F8 A2     	call Genera_datos_de_impresion_disparos_Entidades
 845  8E12 CD BC A4     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 846  8E15 CD 12 A4     	call Calcula_bytes_pintado_disparos
 847  8E18 CD 1F A4     	call Limpia_album_de_pintado_disparos_entidades
 848  8E1B
 849  8E1B              ; ------------ ------------- --------------
 850  8E1B
 851  8E1B 2A 3F 8C     	ld hl,(Album_de_borrado)
 852  8E1E 22 5B 8C     	ld (Scanlines_album_SP),hl
 853  8E21
 854  8E21 21 61 8C     	ld hl,Ctrl_3
 855  8E24 CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8E26 CB 9E        	res 3,(hl)
 857  8E28 CB A6        	res 4,(hl)
 858  8E2A
 859  8E2A 21 62 8C     	ld hl,Ctrl_4
 860  8E2D CB 86        	res 0,(hl)
 861  8E2F
 862  8E2F AF           	xor a
 863  8E30 D3 FE        	out ($fe),a
 864  8E32
 865  8E32 76           	halt
 866  8E33
 867  8E33 C3 F4 8C     	jp Main
 868  8E36
 869  8E36              ;------------------------------------------
 870  8E36              ;
 871  8E36              ;	07/11/24
 872  8E36
 873  8E36              Autoriza_disparo_de_entidades
 874  8E36
 875  8E36 3E 01        	ld a,1
 876  8E38 32 53 8C     	ld (Permiso_de_disparo_Entidades),a
 877  8E3B
 878  8E3B 3A 7D 8C     	ld a,(Repone_CLOCK_disparos)
 879  8E3E FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 880  8E40 38 02        	jr c,1F
 881  8E42
 882  8E42              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 883  8E42              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 884  8E42              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 885  8E42
 886  8E42 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 887  8E44
 888  8E44 32 7D 8C     1 ld (Repone_CLOCK_disparos),a
 889  8E47 32 7E 8C     	ld (CLOCK_disparos_de_entidades),a
 890  8E4A
 891  8E4A C9           	ret
 892  8E4B
 893  8E4B              ;------------------------------------------
 894  8E4B              ;
 895  8E4B              ;	14/09/24
 896  8E4B              ;
 897  8E4B              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 898  8E4B
 899  8E4B              Entidad_genera_disparo_si_procede
 900  8E4B
 901  8E4B 2A 78 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 902  8E4E CB 06        	rlc (hl)
 903  8E50
 904  8E50 DC 48 A3     	call c,Genera_disparo_de_entidad_maldosa
 905  8E53
 906  8E53 C9           	ret
 907  8E54
 908  8E54              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 909  8E54              ;
 910  8E54              ;	30/09/24
 911  8E54
 912  8E54              Actuaiza_sp_de_disparos_de_entidades
 913  8E54
 914  8E54 2A 78 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 915  8E57 23           	inc hl
 916  8E58 22 78 8C     	ld (Puntero_num_aleatorios_disparos),hl
 917  8E5B
 918  8E5B 11 FD 88     	ld de,Numeros_aleatorios+7
 919  8E5E 7B           	ld a,e
 920  8E5F 95           	sub l
 921  8E60 C0           	ret nz
 922  8E61
 923  8E61 21 F6 88     1 ld hl,Numeros_aleatorios
 924  8E64 22 78 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 925  8E67 C9           	ret
 926  8E68
 927  8E68              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 928  8E68              ;
 929  8E68              ;	24/07/24
 930  8E68
 931  8E68              Reinicia_Amadeus
 932  8E68
 933  8E68              ;	Reinicia posición y estado.
 934  8E68
 935  8E68 21 CF 50     	ld hl,$50cf
 936  8E6B 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 937  8E6E 21 CC DC     	ld hl,$dccc
 938  8E71 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 939  8E74 21 3D 00     	ld hl,$003d
 940  8E77 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 941  8E7A
 942  8E7A              ;	limpiamos el álbum de borrado.
 943  8E7A
 944  8E7A 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
 945  8E7D
 946  8E7D AF           	xor a
 947  8E7E 77           	ld (hl),a
 948  8E7F
 949  8E7F E5           	push hl
 950  8E80 D1           	pop de
 951  8E81 13           	inc de
 952  8E82
 953  8E82 01 23 00     	ld bc,35
 954  8E85 ED B0        	ldir
 955  8E87
 956  8E87 CD 26 91     	call Genera_datos_de_impresion_Amadeus
 957  8E8A
 958  8E8A              ;	Reinicia temporizaciones.
 959  8E8A
 960  8E8A CD FE 91     	call Inicia_Shield
 961  8E8D
 962  8E8D 3E 5A        	ld a,90
 963  8E8F 32 8A 8C     	ld (Shield),a
 964  8E92
 965  8E92 3E 64        	ld a,100
 966  8E94 32 75 8C     	ld (Temp_new_live),a
 967  8E97
 968  8E97              ; 	Restauramos el FLAG: Amadeus vivo.
 969  8E97
 970  8E97 21 61 8C     	ld hl,Ctrl_3
 971  8E9A CB B6        	res 6,(hl)
 972  8E9C
 973  8E9C              ;	Fuerza la impresión de la nave en el siguiente frame.
 974  8E9C
 975  8E9C 21 61 8C      	ld hl,Ctrl_3
 976  8E9F CB EE        	set 5,(hl)
 977  8EA1
 978  8EA1 C9           	ret
 979  8EA2
 980  8EA2              ; --------------------------------------------------------------------------------------------------------------
 981  8EA2              ;
 982  8EA2              ;	23/11/24
 983  8EA2
 984  8EA2              Ajusta_velocidad_entidad
 985  8EA2
 986  8EA2 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 987  8EA5 A7           	and a
 988  8EA6 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 989  8EA7              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 990  8EA7              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 991  8EA7
 992  8EA7
 993  8EA7              ; Incrementa (Contador_de_vueltas)x2.
 994  8EA7              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 995  8EA7
 996  8EA7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 997  8EA7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 998  8EA7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 999  8EA7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1000  8EA7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1001  8EA7
1002  8EA7
1003  8EA7 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1004  8EA9 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1005  8EAC E6 10        	and $10
1006  8EAE C8           	ret z
1007  8EAF
1008  8EAF              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1009  8EAF
1010  8EAF DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1011  8EB2 CB 2F        	sra a
1012  8EB4 CB 2F        	sra a
1013  8EB6 DD 77 0B     	ld (ix+11),a
1014  8EB9
1015  8EB9 DD 6E 07     	ld l,(ix+7)
1016  8EBC DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1017  8EBF
1018  8EBF              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1019  8EBF 23           	inc hl
1020  8EC0 23           	inc hl
1021  8EC1 23           	inc hl
1022  8EC2 23           	inc hl
1023  8EC3              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1024  8EC3
1025  8EC3 DD 75 07     	ld (ix+7),l
1026  8EC6 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1027  8EC9
1028  8EC9 C9           	ret
1029  8ECA
1030  8ECA              ; --------------------------------------------------------------------------------------------------------------
1031  8ECA              ;
1032  8ECA              ;	25/08/24
1033  8ECA
1034  8ECA              Change
1035  8ECA
1036  8ECA 3A 58 8C     	ld a,(Switch)
1037  8ECD EE 01        	xor 1
1038  8ECF 32 58 8C     	ld (Switch),a
1039  8ED2 2A 3D 8C     	ld hl,(Album_de_pintado)
1040  8ED5 ED 5B 3F 8C  	ld de,(Album_de_borrado)
1041  8ED9 EB           	ex de,hl
1042  8EDA 22 3D 8C     	ld (Album_de_pintado),hl
1043  8EDD 22 5B 8C     	ld (Scanlines_album_SP),hl
1044  8EE0 ED 53 3F 8C  	ld (Album_de_borrado),de
1045  8EE4 C9           	ret
1046  8EE5
1047  8EE5              Change_Amadeus
1048  8EE5
1049  8EE5 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1050  8EE8 ED 5B 43 8C  	ld de,(Album_de_borrado_Amadeus)
1051  8EEC EB           	ex de,hl
1052  8EED 22 41 8C     	ld (Album_de_pintado_Amadeus),hl
1053  8EF0 ED 53 43 8C  	ld (Album_de_borrado_Amadeus),de
1054  8EF4 C9           	ret
1055  8EF5
1056  8EF5              Change_Disparos
1057  8EF5
1058  8EF5              ; Álbumes de Amadeus.
1059  8EF5
1060  8EF5 2A 45 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1061  8EF8 ED 5B 47 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1062  8EFC EB           	ex de,hl
1063  8EFD 22 45 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1064  8F00 ED 53 47 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1065  8F04 CD 07 A4     	call Limpia_album_de_pintado_disparos_Amadeus
1066  8F07
1067  8F07              ; Álbumes de entidades.
1068  8F07
1069  8F07 2A 49 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1070  8F0A ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1071  8F0E EB           	ex de,hl
1072  8F0F 22 49 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1073  8F12 ED 53 4B 8C  	ld (Album_de_borrado_disparos_Entidades),de
1074  8F16 22 4D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1075  8F19
1076  8F19 3A 4F 8C     	ld a,(Num_de_bytes_album_de_disparos)
1077  8F1C 32 50 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1078  8F1F
1079  8F1F C9           	ret
1080  8F20
1081  8F20              ; ------------------------------------
1082  8F20              ;
1083  8F20              ; 1/05/24
1084  8F20
1085  8F20              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1086  8F20              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1087  8F20
1088  8F20              ;	DESTRUYE: HL,DE,A
1089  8F20              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1090  8F20
1091  8F20              ;	Variables implicadas: (RND_SP).
1092  8F20
1093  8F20              Extrae_numero_aleatorio_y_avanza
1094  8F20
1095  8F20 21 FD 88     	ld hl,Numeros_aleatorios+7
1096  8F23 EB           	ex de,hl
1097  8F24 2A 76 8C     	ld hl,(RND_SP)
1098  8F27
1099  8F27 7B           	ld a,e
1100  8F28 95           	sub l
1101  8F29 20 06        	jr nz,1F
1102  8F2B
1103  8F2B              ; Sitúa HL al principio de la tabla de nº aleatorios.
1104  8F2B
1105  8F2B 21 F6 88     	ld hl,Numeros_aleatorios
1106  8F2E 22 76 8C     	ld (RND_SP),HL
1107  8F31
1108  8F31              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1109  8F31
1110  8F31 7E           1 ld a,(hl)
1111  8F32 23           	inc hl
1112  8F33 22 76 8C     	ld (RND_SP),hl
1113  8F36 C9           	ret
1114  8F37
1115  8F37              ; ------------------------------------
1116  8F37              ;
1117  8F37              ; 1/05/24
1118  8F37
1119  8F37              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1120  8F37              ; (1 a 4 segundos).
1121  8F37              ; Actualizamos (Clock_next_entity) con A.
1122  8F37
1123  8F37              ;	DESTRUYE: A y B.
1124  8F37              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1125  8F37              ;			 Actualiza (Clock_next_entity) con A.
1126  8F37
1127  8F37              ;	Variables implicadas: (Clock_next_entity).
1128  8F37
1129  8F37              ; Notas:
1130  8F37
1131  8F37              ; 	$32 1 seg.
1132  8F37              ; 	$64 2 seg.
1133  8F37              ; 	$96 3 seg.
1134  8F37              ; 	$c8 4 seg.
1135  8F37              ; 	$fa 5 seg.
1136  8F37
1137  8F37              ; $ffff 1310,7 seg, 22 minutos.
1138  8F37
1139  8F37              ;	$0100  5 seg. aproximadamente.
1140  8F37              ;	$0200 10 seg. aproximadamente.
1141  8F37              ;	$0300 15 seg. aproximadamente.
1142  8F37              ;	$0400 20 seg. aproximadamente.
1143  8F37              ;	$0500 25 seg. aproximadamente.
1144  8F37              ;	$0600 30 seg. aproximadamente.
1145  8F37
1146  8F37              Define_Clock_next_entity
1147  8F37
1148  8F37 FE 34        	cp $34
1149  8F39 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1150  8F3B
1151  8F3B              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1152  8F3B
1153  8F3B 4F           3 ld c,a
1154  8F3C 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1155  8F3E 2A 78 5C     	ld hl,(FRAMES)
1156  8F41 A7           	and a
1157  8F42 ED 4A        	adc hl,bc
1158  8F44 22 7B 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1159  8F47 C9           	ret
1160  8F48
1161  8F48 3E 34        1 ld a,$34
1162  8F4A 18 EF        	jr 3B
1163  8F4C
1164  8F4C              ; ------------------------------------
1165  8F4C              ;
1166  8F4C              ; 18/03/24
1167  8F4C
1168  8F4C              Borra_diferencia
1169  8F4C
1170  8F4C ED 4B 5B 8C  	ld bc,(Scanlines_album_SP)
1171  8F50
1172  8F50 3A 58 8C     	ld a,(Switch)
1173  8F53 A7           	and a
1174  8F54 28 08        	jr z,2F
1175  8F56
1176  8F56 2A 56 8C     	ld hl,(Techo_Scanlines_album_2)
1177  8F59 11 56 8C     	ld de,Techo_Scanlines_album_2
1178  8F5C 18 06        	jr 3F
1179  8F5E
1180  8F5E 2A 54 8C     2 ld hl,(Techo_Scanlines_album)
1181  8F61 11 54 8C     	ld de,Techo_Scanlines_album
1182  8F64
1183  8F64              ; Diferencia.
1184  8F64
1185  8F64 ED 42        3 sbc hl,bc
1186  8F66
1187  8F66 C8           	ret z
1188  8F67 D8           	ret c
1189  8F68
1190  8F68              ; Nuevo techo, (más bajo que el anterior).
1191  8F68              ; Fijamos nuevo techo y borramos bytes sobrantes.
1192  8F68
1193  8F68 EB           	ex de,hl
1194  8F69
1195  8F69 71           	ld (hl),c
1196  8F6A 2C           	inc l
1197  8F6B 70           	ld (hl),b
1198  8F6C
1199  8F6C AF           	xor a
1200  8F6D 43           	ld b,e
1201  8F6E
1202  8F6E 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1203  8F71
1204  8F71 77           1 ld (hl),a
1205  8F72 23           	inc hl
1206  8F73 10 FC        	djnz 1B
1207  8F75
1208  8F75              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1209  8F75
1210  8F75 21 61 8C     	ld hl,Ctrl_3
1211  8F78 CB DE        	set 3,(hl)
1212  8F7A
1213  8F7A C9           	ret
1214  8F7B
1215  8F7B              ; --------------------------------------------------------------------------------------------------------------
1216  8F7B              ;
1217  8F7B              ;	23/11/24
1218  8F7B              ;
1219  8F7B              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1220  8F7B
1221  8F7B              Entidad_a_Tabla_de_pintado
1222  8F7B
1223  8F7B              ; Almacena la Coordenada Y de la entidad en curso.
1224  8F7B
1225  8F7B              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1226  8F7B
1227  8F7B DD 7E 02     	ld a,(ix+2)
1228  8F7E 2A 5D 8C     	ld hl,(India_SP)
1229  8F81 77           	ld (hl),a
1230  8F82 2C           	inc l
1231  8F83
1232  8F83              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1233  8F83
1234  8F83 ED 5B 5B 8C  	ld de,(Scanlines_album_SP)
1235  8F87
1236  8F87 73           	ld (hl),e
1237  8F88 2C           	inc l
1238  8F89 72           	ld (hl),d
1239  8F8A 2C           	inc l
1240  8F8B
1241  8F8B 22 5D 8C     	ld (India_SP),hl
1242  8F8E
1243  8F8E C9           	ret
1244  8F8F
1245  8F8F              ; --------------------------------------------------------------------------------------------------------------
1246  8F8F              ;
1247  8F8F              ;	27/03/24
1248  8F8F              ;
1249  8F8F
1250  8F8F              Inicializa_India_y_limpia_Tabla_de_impresion
1251  8F8F
1252  8F8F 2A 5D 8C     	ld hl,(India_SP)
1253  8F92 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1254  8F95
1255  8F95 79           	ld a,c
1256  8F96 95           	sub l
1257  8F97 28 06        	jr z,2F
1258  8F99 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1259  8F9A              ;														; _ y pasamos a inicializar (India_SP).
1260  8F9A AF           	xor a
1261  8F9B
1262  8F9B 77           1 ld (hl),a
1263  8F9C 2C           	inc l
1264  8F9D 10 FC        	djnz 1B												; Limpia Tabla.
1265  8F9F
1266  8F9F 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1267  8FA2 22 5D 8C     	ld (India_SP),hl
1268  8FA5
1269  8FA5 C9           	ret
1270  8FA6
1271  8FA6              ; --------------------------------------------------------------------------------------------------------------
1272  8FA6              ;
1273  8FA6              ;	31/3/24
1274  8FA6
1275  8FA6              Ordena_tabla_de_impresion
1276  8FA6
1277  8FA6              ; 5794 T/states.
1278  8FA6              ; 6278 T/states.
1279  8FA6              ; 5310 T/states.
1280  8FA6
1281  8FA6              ; Inicializamos punteros (India_SP) e (India_2_SP).
1282  8FA6              ; Inicializamos contador de comparaciones, [C].
1283  8FA6              ; Cargamos los registros A y B para efectuar comparación.
1284  8FA6
1285  8FA6 FD 2E 00     	ld iyl,0
1286  8FA9
1287  8FA9 3A 34 8C     	ld a,(Entidades_en_curso)
1288  8FAC FE 04        	cp 4 	;	4
1289  8FAE D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1290  8FAF
1291  8FAF 3D           	dec a
1292  8FB0 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1293  8FB1 51           	ld d,c 										; Copia de respaldo.
1294  8FB2
1295  8FB2 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1296  8FB3
1297  8FB3 21 03 89     	ld hl,Tabla_de_pintado+3
1298  8FB6 46           	ld b,(hl)
1299  8FB7 22 5F 8C     	ld (India_2_SP),hl
1300  8FBA
1301  8FBA B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1302  8FBB DC E3 8F     	call c, Avanza_India_2_SP
1303  8FBE CC E3 8F     	call z, Avanza_India_2_SP
1304  8FC1
1305  8FC1 FD 2D        	dec iyl
1306  8FC3 28 18        	jr z,2F
1307  8FC5
1308  8FC5
1309  8FC5              ; --------------------------------------------------------------------------------------------------------------
1310  8FC5              ;
1311  8FC5              ;	7/4/24
1312  8FC5
1313  8FC5              Trueque
1314  8FC5
1315  8FC5              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1316  8FC5              ;  			A contiene en nº de fila de (India_SP).
1317  8FC5              ;			HL contiene (India_2_SP).
1318  8FC5
1319  8FC5 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1320  8FC6 E5           	push hl										; Preservo (India_2_SP).
1321  8FC7
1322  8FC7 ED 5B 5D 8C  	ld de,(India_SP)
1323  8FCB EB           	ex de,hl
1324  8FCC 70           	ld (hl),b
1325  8FCD 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1326  8FCE
1327  8FCE CD 0F 90     	call Intercambia_1_byte
1328  8FD1 CD 0F 90     	call Intercambia_1_byte
1329  8FD4
1330  8FD4
1331  8FD4              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1332  8FD4              ; Recuperamos (India_2_SP) en HL.
1333  8FD4
1334  8FD4 2A 5D 8C     	ld hl,(India_SP)
1335  8FD7 7E           	ld a,(hl)
1336  8FD8
1337  8FD8 E1           	pop hl
1338  8FD9 D1           	pop de
1339  8FDA
1340  8FDA              ; --------------------------------------------------------------------------------------------------------------
1341  8FDA
1342  8FDA CD E3 8F     	call Avanza_India_2_SP
1343  8FDD
1344  8FDD 14           2 inc d
1345  8FDE 15           	dec d
1346  8FDF C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1347  8FE0 18 D8        	jr 1B
1348  8FE2
1349  8FE2 C9           	ret
1350  8FE3
1351  8FE3              ; ----- ----- ----- ----- -----
1352  8FE3
1353  8FE3              Avanza_India_2_SP
1354  8FE3
1355  8FE3 0D           	dec c
1356  8FE4 28 0A        	jr z,Avanza_punteros_indios
1357  8FE6
1358  8FE6 FD 2C        	inc iyl
1359  8FE8
1360  8FE8 2C           	inc l
1361  8FE9 2C           	inc l
1362  8FEA 2C           	inc l
1363  8FEB
1364  8FEB 46           	ld b,(hl)
1365  8FEC 22 5F 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1366  8FEF
1367  8FEF C9           	ret
1368  8FF0
1369  8FF0              ; ----- ----- ----- ----- -----
1370  8FF0
1371  8FF0              Avanza_punteros_indios
1372  8FF0
1373  8FF0 15           	dec d
1374  8FF1 28 15        	jr z,Prepara_salida
1375  8FF3
1376  8FF3 4A           	ld c,d
1377  8FF4
1378  8FF4 2A 5D 8C     	ld hl,(India_SP)
1379  8FF7 2C           	inc l
1380  8FF8 2C           	inc l
1381  8FF9 2C           	inc l
1382  8FFA 7E           	ld a,(hl)
1383  8FFB 22 5D 8C     	ld (India_SP),hl
1384  8FFE
1385  8FFE 2C           	inc l
1386  8FFF 2C           	inc l
1387  9000 2C           	inc l
1388  9001 46           	ld b,(hl)
1389  9002 22 5F 8C     	ld (India_2_SP),hl
1390  9005
1391  9005 FD 2C        	inc iyl
1392  9007
1393  9007 C9           	ret
1394  9008
1395  9008              Prepara_salida
1396  9008
1397  9008 21 00 89     	ld hl,Tabla_de_pintado
1398  900B 22 5D 8C     	ld (India_SP),hl
1399  900E C9           	ret
1400  900F
1401  900F
1402  900F 2C           Intercambia_1_byte inc l
1403  9010 1C           	inc e
1404  9011 46           	ld b,(hl)
1405  9012 1A           	ld a,(de)
1406  9013 EB           	ex de,hl
1407  9014 70           	ld (hl),b
1408  9015 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1409  9016 C9           	ret
1410  9017
1411  9017              ; -----------------------------------------------------------------------------------
1412  9017              ;
1413  9017              ;	20/01/24
1414  9017              ;
1415  9017              ;
1416  9017
1417  9017              Construye_movimientos_masticados_entidad
1418  9017
1419  9017 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1420  901A E5           	push hl
1421  901B
1422  901B CD B8 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1423  901E              ;															; _ el (Contador_de_mov_masticados).
1424  901E
1425  901E              ; Tenemos una posición de inicio aleatoria, ("$01 - $1f"). Necesitamos definir (Cuad_objeto) para [Inicia_Puntero_objeto].
1426  901E              ; A contiene la coordenada X de la posición de inicio de la entidad.
1427  901E
1428  901E CD 90 90     	call Cuad1_or_cuad2
1429  9021
1430  9021 CD 9D 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1431  9024              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1432  9024 CD 33 9C     	call Recompone_posicion_inicio
1433  9027
1434  9027 CD 63 99     1 call Draw
1435  902A CD 9D 90     	call Guarda_movimiento_masticado
1436  902D
1437  902D              ;	jr 2F
1438  902D
1439  902D              ;! Debuggggggg !!!!!!! -----------------------------------------------------------------------------------------------------------
1440  902D              ;! Necesitamos pintar cada movimiento para depurar errores en la entrada y salida de las entidades por la pantalla !!!!!!!!!!!!!!!
1441  902D              ;! -------------------------------------------------------------------------------------------------------------------------------
1442  902D              ;! -------------------------------------------------------------------------------------------------------------------------------
1443  902D
1444  902D F5           	push af
1445  902E C5           	push bc
1446  902F D5           	push de
1447  9030 E5           	push hl
1448  9031 FD E5        	push iy
1449  9033 DD E5        	push ix
1450  9035
1451  9035 AF           	xor a
1452  9036 D3 FE            out ($fe),a			; Paper 7, Ink 0, Border 0
1453  9038
1454  9038              ;	8BFE 00           CTRL_DESPLZ
1455  9038              ;	8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0	($e0f4)
1456  9038              ;	$ddc0			  Almacén de movimientos masticados.
1457  9038              ;	8BEF 00 00        Puntero_de_impresion defw 0
1458  9038              ;	8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
1459  9038              ;	8BEC 00  	      Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
1460  9038              ;	8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
1461  9038              ;	8BFC 00 00		  Puntero_objeto defw 0 									; Donde están los datos para pintar el Sprite.
1462  9038
1463  9038 2A 3D 8C     	ld hl,(Album_de_pintado)
1464  903B 22 5B 8C     	ld (Scanlines_album_SP),hl
1465  903E
1466  903E FD E5        	push iy
1467  9040 D1           	pop de
1468  9041
1469  9041 D5           	push de
1470  9042 CD D5 95     	call Genera_datos_de_impresion
1471  9045 D1           	pop de
1472  9046
1473  9046
1474  9046              ;							; Para ejecutar Rutinas_de_pintado necesitamos:
1475  9046              ;
1476  9046              ;							HL apuntando al álbum de líneas (Scanlines_album_SP)
1477  9046              ;							DE (Puntero objeto).
1478  9046
1479  9046
1480  9046 2A 3D 8C     	ld hl,(Album_de_pintado)
1481  9049 EB           	ex de,hl
1482  904A CD C9 96     	call Rutinas_de_pintado
1483  904D
1484  904D 3A EB 8B     	ld a,(Coordenada_X)
1485  9050 FE 1E        	cp 30
1486  9052 28 FE        	jr z,$
1487  9054 FE 1F        	cp 31
1488  9056 28 FE        	jr z,$
1489  9058 FE 00        	cp 0
1490  905A 28 FE        	jr z,$
1491  905C FE 01        	cp 1
1492  905E 28 FE        	jr z,$
1493  9060
1494  9060              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
1495  9060 3E 38        	ld a,%00111000
1496  9062 CD 95 95     	call Cls
1497  9065
1498  9065              ; Borra album de pintado.
1499  9065
1500  9065 AF           	xor a
1501  9066 21 00 80     	ld hl,$8000
1502  9069 06 28        	ld b,40
1503  906B 77           23 ld (hl),a
1504  906C 2C           	inc l
1505  906D 10 FC        	djnz 23b
1506  906F
1507  906F              ; ----- ----- ----- ----- -----
1508  906F
1509  906F DD E1        	pop ix
1510  9071 FD E1        	pop iy
1511  9073 E1           	pop hl
1512  9074 D1           	pop de
1513  9075 C1           	pop bc
1514  9076 F1           	pop af
1515  9077
1516  9077              ;! -------------------------------------------------------------------------------------------------------------------------------
1517  9077              ;! -------------------------------------------------------------------------------------------------------------------------------
1518  9077              ;! -------------------------------------------------------------------------------------------------------------------------------
1519  9077              ;! -------------------------------------------------------------------------------------------------------------------------------
1520  9077
1521  9077 CD E0 9F     2 call Movimiento
1522  907A
1523  907A 3A 61 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1524  907D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1525  907F 28 A6        	jr z,1B
1526  9081
1527  9081              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1528  9081              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1529  9081
1530  9081 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1531  9082 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1532  9085
1533  9085              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1534  9085
1535  9085 CD 3E A1     	call Situa_en_contador_general_de_mov_masticados
1536  9088
1537  9088              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1538  9088              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1539  9088
1540  9088 ED 4B F3 8B  	ld bc,(Contador_de_mov_masticados)
1541  908C
1542  908C 71           	ld (hl),c
1543  908D 23           	inc hl
1544  908E 70           	ld (hl),b
1545  908F
1546  908F C9           	ret
1547  9090
1548  9090              ; -------------------------------------
1549  9090              ;
1550  9090              ;	07/12/24
1551  9090              ;
1552  9090              ;	(Cuad_objeto) contendrá "0" o "1" en función de la coordenada X de la posición de inicio.
1553  9090              ;
1554  9090              ;	INPUT: A contiene la Coordenada_X de la (Posicion_inicio) de la entidad.
1555  9090              ;
1556  9090              ;	MODIFY: A,(Cuad_objeto).
1557  9090              ;
1558  9090
1559  9090 FE 10        Cuad1_or_cuad2 cp $10
1560  9092 38 04        	jr c,1F
1561  9094 3E 01        	ld a,1
1562  9096 18 01        	jr 2F
1563  9098
1564  9098 AF           1 xor a
1565  9099 32 09 8C     2 ld (Cuad_objeto),a
1566  909C C9           	ret
1567  909D
1568  909D              ; -----------------------------------------------------------------------------------
1569  909D              ;
1570  909D              ;	28/12/23
1571  909D              ;
1572  909D              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1573  909D              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1574  909D
1575  909D              Guarda_movimiento_masticado
1576  909D
1577  909D ED 73 39 8C  	ld (Stack),sp
1578  90A1 ED 7B F1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1579  90A5
1580  90A5 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1581  90A7 FD E5            push iy 												; Pushea Puntero_objeto.
1582  90A9
1583  90A9 ED 7B 39 8C      ld sp,(Stack)
1584  90AD
1585  90AD 2A F3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1586  90B0 23           	inc hl
1587  90B1 22 F3 8B     	ld (Contador_de_mov_masticados),hl
1588  90B4
1589  90B4 CD B8 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1590  90B7              ;															; _ el (Contador_de_mov_masticados).
1591  90B7 C9               ret
1592  90B8
1593  90B8              ; --------------------------------------------------------------------------------------------------------------
1594  90B8              ;
1595  90B8              ;	12/1/24
1596  90B8              ;
1597  90B8              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1598  90B8
1599  90B8              Actualiza_Puntero_de_almacen_de_mov_masticados
1600  90B8
1601  90B8 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1602  90BB 01 04 00     	ld bc,4
1603  90BE A7           	and a
1604  90BF ED 4A        	adc hl,bc
1605  90C1 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1606  90C4 C9           	ret
1607  90C5
1608  90C5              ; ------------------------------------------
1609  90C5              ;
1610  90C5              ;	23/11/24
1611  90C5              ;
1612  90C5              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1613  90C5
1614  90C5
1615  90C5              Obtenemos_puntero_de_impresion
1616  90C5
1617  90C5 DD 6E 07     	ld l,(ix+7)
1618  90C8 DD 66 08     	ld h,(ix+8)
1619  90CB
1620  90CB              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1621  90CB
1622  90CB ED 73 39 8C  	ld (Stack),sp
1623  90CF F9           	ld sp,hl
1624  90D0
1625  90D0 AF           	xor a
1626  90D1 67           	ld h,a
1627  90D2 6C           	ld l,h															; ld hl,"0"
1628  90D3
1629  90D3 D1           	pop de															; (Puntero_objeto) en DE.
1630  90D4 C1           	pop bc
1631  90D5
1632  90D5              ; 	Almacena (Puntero_de_impresion) en caja.
1633  90D5
1634  90D5 DD 71 05     	ld (ix+5),c
1635  90D8 DD 70 06     	ld (ix+6),b
1636  90DB
1637  90DB ED 43 EF 8B  	ld (Puntero_de_impresion),bc
1638  90DF
1639  90DF              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1640  90DF
1641  90DF 39           	add hl,sp
1642  90E0 DD 75 07     	ld (ix+7),l
1643  90E3 DD 74 08     	ld (ix+8),h
1644  90E6
1645  90E6 C1           	pop bc
1646  90E7
1647  90E7 79           	ld a,c
1648  90E8 80           	add b															; Comprueba si ya no hay datos en el almacén.
1649  90E9
1650  90E9 ED 7B 39 8C  	ld sp,(Stack)
1651  90ED
1652  90ED CC E9 94     	call z,Reinicia_entidad_maliciosa
1653  90F0
1654  90F0 C9           	ret
1655  90F1
1656  90F1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1657  90F1              ;
1658  90F1              ;	25/11/24
1659  90F1
1660  90F1              Cargamos_registros_con_explosion
1661  90F1
1662  90F1 DD 6E 07     	ld l,(ix+7)
1663  90F4 DD 66 08     	ld h,(ix+8)
1664  90F7 CD 97 91     	call Extrae_address
1665  90FA EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1666  90FB
1667  90FB DD 6E 05     	ld l,(ix+5)
1668  90FE DD 66 06     	ld h,(ix+6)
1669  9101
1670  9101 E5           	push hl
1671  9102 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1672  9104
1673  9104 C9           	ret
1674  9105
1675  9105
1676  9105              Cargamos_registros_con_explosion_Amadeus
1677  9105
1678  9105 2A B5 89     	ld hl,(Pamm_Amadeus)
1679  9108 CD 97 91     	call Extrae_address
1680  910B
1681  910B 5D           	ld e,l
1682  910C 54           	ld d,h
1683  910D
1684  910D DD 2A B3 89  	ld ix,(p.imp.amadeus)
1685  9111
1686  9111 C9           	ret
1687  9112
1688  9112              ; --------------------------------------------------------------------------------------------------------------
1689  9112              ;
1690  9112              ;	17/06/24
1691  9112              ;
1692  9112              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1693  9112              ;
1694  9112              ;	IX contiene el puntero de impresión.
1695  9112              ;	DE contiene (Puntero_objeto).
1696  9112
1697  9112
1698  9112              Cargamos_registros_con_mov_masticado_Amadeus
1699  9112
1700  9112 ED 73 39 8C  	ld (Stack),sp
1701  9116 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1702  911A D1           	pop de 															; DE contiene Puntero_objeto
1703  911B DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1704  911D DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1705  9121 ED 7B 39 8C  	ld sp,(Stack)
1706  9125 C9           	ret
1707  9126
1708  9126              ; ---------------------------------------------------------------------------------------------------------------------
1709  9126              ;
1710  9126              ;	18/6/24
1711  9126              ;
1712  9126              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1713  9126
1714  9126              Genera_datos_de_impresion_Amadeus
1715  9126
1716  9126 3A B2 89     	ld a,(Impacto_Amadeus)
1717  9129 A7           	and a
1718  912A 20 03        	jr nz,1F
1719  912C
1720  912C              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1721  912C              ; _apuntando a la correspondiente explosión.
1722  912C
1723  912C CD 12 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1724  912F
1725  912F DD 7D        1 ld a,ixl
1726  9131 E6 1F        	and $1f
1727  9133 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1728  9136
1729  9136 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1730  9139 E5           	push hl
1731  913A
1732  913A 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1733  913D 22 5B 8C     	ld (Scanlines_album_SP),hl
1734  9140
1735  9140 CD D5 95     	call Genera_datos_de_impresion
1736  9143
1737  9143 E1           	pop hl
1738  9144 22 5B 8C     	ld (Scanlines_album_SP),hl
1739  9147
1740  9147 C9           	ret
1741  9148
1742  9148              ; ---------------------------------------------------------------------------------------------------------------------
1743  9148              ;
1744  9148              ;	13/03/24
1745  9148              ;
1746  9148              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1747  9148
1748  9148              Inicia_albumes_de_lineas
1749  9148
1750  9148 21 00 80     	ld hl,Scanlines_album
1751  914B 22 3D 8C     	ld (Album_de_pintado),hl
1752  914E 22 5B 8C     	ld (Scanlines_album_SP),hl
1753  9151
1754  9151 21 1A 81     	ld hl,Scanlines_album_2
1755  9154 22 3F 8C     	ld (Album_de_borrado),hl
1756  9157
1757  9157 C9           	ret
1758  9158
1759  9158              Inicia_albumes_de_lineas_Amadeus
1760  9158
1761  9158 21 34 82     	ld hl,Amadeus_scanlines_album
1762  915B 22 41 8C     	ld (Album_de_pintado_Amadeus),hl
1763  915E 21 58 82     	ld hl,Amadeus_scanlines_album_2
1764  9161 22 43 8C     	ld (Album_de_borrado_Amadeus),hl
1765  9164
1766  9164 C9           	ret
1767  9165
1768  9165              Inicia_albumes_de_disparos
1769  9165
1770  9165 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1771  9168 22 45 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1772  916B 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1773  916E 22 47 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1774  9171
1775  9171 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1776  9174 22 49 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1777  9177 22 4D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1778  917A
1779  917A 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1780  917D 22 4B 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1781  9180
1782  9180 C9           	ret
1783  9181
1784  9181              ; ---------------------------------------------------------------------------------------------------------------------
1785  9181              ;
1786  9181              ; 8/1/23
1787  9181              ;
1788  9181              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1789  9181              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1790  9181              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1791  9181
1792  9181              ; Destruye HL y DE !!!!!
1793  9181
1794  9181              Inicia_punteros_de_cajas
1795  9181
1796  9181 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1797  9184 CD 97 91         call Extrae_address
1798  9187 22 2A 8C         ld (Puntero_store_caja),hl
1799  918A 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1800  918D 22 2E 8C     	ld (Indice_restore_caja),hl
1801  9190 CD 97 91     	call Extrae_address
1802  9193 22 2C 8C     	ld (Puntero_restore_caja),hl
1803  9196 C9               ret
1804  9197
1805  9197              ; *************************************************************************************************************************************************************
1806  9197
1807  9197              ;
1808  9197              ; 20/10/22
1809  9197              ;
1810  9197              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1811  9197              ;
1812  9197              ; Destruye el puntero y DE !!!!!
1813  9197
1814  9197 5E           Extrae_address ld e,(hl)
1815  9198 23           	inc hl
1816  9199 56           	ld d,(hl)
1817  919A 2B           	dec hl
1818  919B EB           	ex de,hl
1819  919C C9           	ret
1820  919D
1821  919D              ; *************************************************************************************************************************************************************
1822  919D              ;
1823  919D              ;	7/12/24
1824  919D              ;
1825  919D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1826  919D              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1827  919D              ;
1828  919D              ;   Destruye HL y BC !!!!!,
1829  919D              ;
1830  919D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1831  919D              ;					"0" ..... Izquierda.
1832  919D
1833  919D              Inicia_Puntero_objeto
1834  919D
1835  919D 3A 09 8C     	ld a,(Cuad_objeto)
1836  91A0 A7           	and a
1837  91A1
1838  91A1 CC A9 91     	call z,Inicia_puntero_objeto_der
1839  91A4 C8           	ret z
1840  91A5
1841  91A5 CD BC 91     	call Inicia_puntero_objeto_izq
1842  91A8 C9           	ret
1843  91A9
1844  91A9              ; Arrancamos desde la parte izquierda de la pantalla.
1845  91A9              ; Iniciamos (Indice_Sprite_der).
1846  91A9
1847  91A9 2A FF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1848  91AC 22 03 8C     	ld (Puntero_DESPLZ_der),hl
1849  91AF CD 97 91     	call Extrae_address
1850  91B2 22 FC 8B     	ld (Puntero_objeto),hl
1851  91B5
1852  91B5 2A 01 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1853  91B8 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1854  91BB C9           	ret
1855  91BC
1856  91BC              ; Arrancamos desde la parte derecha de la pantalla.
1857  91BC              ; Iniciamos (Indice_Sprite_izq).
1858  91BC
1859  91BC 2A 01 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1860  91BF 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1861  91C2 CD 97 91     	call Extrae_address
1862  91C5 22 FC 8B     	ld (Puntero_objeto),hl
1863  91C8
1864  91C8 2A FF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1865  91CB 22 03 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1866  91CE C9           	ret
1867  91CF
1868  91CF              ; **************************************************************************************************
1869  91CF              ;
1870  91CF              ;	27/11/24
1871  91CF              ;
1872  91CF              ;	INPUT: IX contiene (Puntero_store_caja).
1873  91CF              ;
1874  91CF              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1875  91CF
1876  91CF              Salta_caja_de_entidades_vacia
1877  91CF
1878  91CF DD 7E 00     	ld a,(ix+0)
1879  91D2 A7           	and a
1880  91D3 C0           	ret nz
1881  91D4
1882  91D4 CD DE 91     	call Incrementa_punteros_de_cajas
1883  91D7 DD 2A 2A 8C  	ld ix,(Puntero_store_caja)
1884  91DB 18 F2        	jr Salta_caja_de_entidades_vacia
1885  91DD
1886  91DD C9           	ret
1887  91DE
1888  91DE              ; **************************************************************************************************
1889  91DE              ;
1890  91DE              ;	08/05/23
1891  91DE              ;
1892  91DE              ;	Incrementamos los dos punteros de entidades. (+1).
1893  91DE
1894  91DE              Incrementa_punteros_de_cajas
1895  91DE
1896  91DE 2A 2C 8C     	ld hl,(Puntero_restore_caja)
1897  91E1 22 2A 8C     	ld (Puntero_store_caja),hl
1898  91E4 2A 2E 8C     	ld hl,(Indice_restore_caja)
1899  91E7 23           	inc hl
1900  91E8 23           	inc hl
1901  91E9 22 2E 8C     	ld (Indice_restore_caja),hl
1902  91EC CD 97 91         call Extrae_address
1903  91EF 22 2C 8C         ld (Puntero_restore_caja),hl
1904  91F2 C9               ret
1905  91F3
1906  91F3              ; -----------------------------------------------------------
1907  91F3
1908  91F3              ; Teclado.
1909  91F3
1910  91F3 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1911  91F5 DB FE        	in a,($fe)
1912  91F7 E6 01        	and $01
1913  91F9 28 02        	jr z,1f
1914  91FB 18 F6        	jr Pulsa_ENTER
1915  91FD C9           1 ret
1916  91FE
1917  91FE              ; **************************************************************************************************
1918  91FE              ;
1919  91FE              ; Temporización.
1920  91FE
1921  91FE              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1922  91FE              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1923  91FE              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1924  91FE              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1925  91FE
1926  91FE              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1927  91FE              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1928  91FE              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1929  91FE
1930  91FE              ; A partir de $4f61 no hace falta DELAY.
1931  91FE
1932  91FE              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1933  91FE
1934  91FE              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1935  91FE              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1936  91FE              ;	LD A,B
1937  91FE              ;	AND A
1938  91FE              ;	JR NZ,wait
1939  91FE              ;	RET
1940  91FE
1941  91FE              ; ---------------------------------------------------------------------------------------------------------------
1942  91FE              ;
1943  91FE              ;	13/07/24
1944  91FE              ;
1945  91FE
1946  91FE              Inicia_Shield
1947  91FE
1948  91FE 21 84 8C     	ld hl,Datos_Shield
1949  9201 22 88 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1950  9204
1951  9204 7E           	ld a,(hl)
1952  9205 32 8B 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1953  9208
1954  9208 3E 01        	ld a,1
1955  920A 32 8C 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1956  920D
1957  920D C9           	ret
1958  920E
1959  920E              ; ---------- ---------- ---------- ---------- ----------
1960  920E              ;
1961  920E              ;	30/11/24
1962  920E              ;
1963  920E              ;	Limpia la caja de entidades de una entidad eliminada.
1964  920E              ;
1965  920E              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1966  920E              ;	MODIFY: A,BC,DE y HL.
1967  920E
1968  920E              Limpia_caja_de_entidades
1969  920E
1970  920E DD E5        	push ix
1971  9210 E1           	pop hl
1972  9211 AF           	xor a
1973  9212 77           	ld (hl),a
1974  9213 5D           	ld e,l
1975  9214 54           	ld d,h
1976  9215 1C           	inc e
1977  9216 01 0B 00     	ld bc,11
1978  9219 ED B0        	ldir
1979  921B C9           	ret
1980  921C
1981  921C              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1982  921C              ;
1983  921C              ;	4/6/24
1984  921C              ;
1985  921C              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1986  921C              ;
1987  921C              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1988  921C              ;
1989  921C
1990  921C              Actualiza_pantalla
1991  921C
1992  921C 3E 02        	ld a,2
1993  921E D3 FE        	out ($fe),a
1994  9220
1995  9220 3A 61 8C     	ld a,(Ctrl_3)
1996  9223 CB 57        	bit 2,a
1997  9225 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1998  9227
1999  9227              Borrando_entidades
2000  9227
2001  9227 2A 5B 8C     	ld hl,(Scanlines_album_SP)
2002  922A CD 97 91     	call Extrae_address
2003  922D 24           	inc h
2004  922E 25           	dec h
2005  922F 28 05        	jr z,Pintando_entidades
2006  9231 CD C9 96     	call Rutinas_de_pintado												; Borra.
2007  9234 18 F1        	jr Borrando_entidades
2008  9236
2009  9236              Pintando_entidades
2010  9236
2011  9236 2A 5D 8C     	ld hl,(India_SP)
2012  9239 2C           	inc l
2013  923A CD 97 91     	call Extrae_address
2014  923D 24           	inc h
2015  923E 25           	dec h
2016  923F 28 0E        	jr z,Ejecuta_escudo
2017  9241 1C           	inc e
2018  9242 1C           	inc e
2019  9243 ED 53 5D 8C  	ld (India_SP),de
2020  9247 CD 97 91     	call Extrae_address
2021  924A CD C9 96     	call Rutinas_de_pintado
2022  924D 18 E7        	jr Pintando_entidades
2023  924F
2024  924F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2025  924F
2026  924F              Ejecuta_escudo
2027  924F
2028  924F 3A 8A 8C     	ld a,(Shield)
2029  9252 A7           	and a
2030  9253 20 2F        	jr nz,Aplica_Shield
2031  9255
2032  9255              Borrando_Amadeus
2033  9255
2034  9255 21 61 8C     	ld hl,Ctrl_3
2035  9258 CB 6E        	bit 5,(hl)
2036  925A 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2037  925C
2038  925C 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
2039  925F CD 97 91     	call Extrae_address
2040  9262 24           	inc h
2041  9263 25           	dec h
2042  9264 28 03        	jr z,Pintando_Amadeus
2043  9266 CD C9 96     	call Rutinas_de_pintado
2044  9269
2045  9269              Pintando_Amadeus
2046  9269
2047  9269 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
2048  926C CD 97 91     	call Extrae_address
2049  926F 24           	inc h
2050  9270 25           	dec h
2051  9271 28 03        	jr z,1F
2052  9273 CD C9 96     	call Rutinas_de_pintado
2053  9276
2054  9276              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2055  9276
2056  9276 21 61 8C     1 ld hl,Ctrl_3
2057  9279 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2058  927B CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2059  927D CB AE        	res 5,(hl)
2060  927F
2061  927F 3E 01        	ld a,1												; Borde azul.
2062  9281 D3 FE        	out ($fe),a
2063  9283
2064  9283 C9           	ret
2065  9284
2066  9284              Aplica_Shield
2067  9284
2068  9284              ;	Bit 1 "1" (Shield_3) Sólo borra.
2069  9284              ;		  "0"     ""     Borra/Pinta.
2070  9284              ;	Bit 2    ""  RET.	 No borra, no pinta.
2071  9284
2072  9284 21 8C 8C     	ld hl,Shield_3
2073  9287
2074  9287 CB 5E        	bit 3,(hl)
2075  9289 20 DE        	jr nz,Pintando_Amadeus
2076  928B
2077  928B CB 56        	bit 2,(hl)
2078  928D 20 E7        	jr nz,1B
2079  928F
2080  928F CB 4E        	bit 1,(hl)
2081  9291 C4 98 92     	call nz,Borra_Amadeus_shield
2082  9294
2083  9294 28 BF        	jr z,Borrando_Amadeus
2084  9296 18 DE        	jr 1B
2085  9298
2086  9298              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2087  9298
2088  9298              Borra_Amadeus_shield
2089  9298
2090  9298 3A 61 8C     	ld a,(Ctrl_3)
2091  929B CB 6F        	bit 5,a
2092  929D 28 08        	jr z,1F
2093  929F
2094  929F 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
2095  92A2 CD 97 91     	call Extrae_address
2096  92A5 18 06        	jr 2F
2097  92A7
2098  92A7 2A 41 8C     1 ld hl,(Album_de_pintado_Amadeus)
2099  92AA CD 97 91     	call Extrae_address
2100  92AD
2101  92AD CD C9 96     2 call Rutinas_de_pintado
2102  92B0
2103  92B0 AF           	xor a
2104  92B1 3C           	inc a											; Asegura NZ en la salida de la rutina.
2105  92B2
2106  92B2 C9           	ret
2107  92B3
2108  92B3              Pinta_Amadeus_shield
2109  92B3
2110  92B3 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
2111  92B6 CD 97 91     	call Extrae_address
2112  92B9 CD C9 96     	call Rutinas_de_pintado
2113  92BC
2114  92BC AF           	xor a
2115  92BD 3C           	inc a											; Asegura NZ en la salida de la rutina.
2116  92BE
2117  92BE C9           	ret
2118  92BF
2119  92BF              Borra_Pinta_Amadeus_shield
2120  92BF
2121  92BF CD 98 92     	call Borra_Amadeus_shield
2122  92C2 CD B3 92     	call Pinta_Amadeus_shield
2123  92C5 C9           	ret
2124  92C6
2125  92C6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2126  92C6              ;
2127  92C6              ;	19/6/24
2128  92C6              ;
2129  92C6
2130  92C6              Teclado
2131  92C6
2132  92C6              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2133  92C6
2134  92C6 3E F7        	ld a,$f7												; "5" para disparar.
2135  92C8 DB FE        	in a,($fe)
2136  92CA E6 10        	and $10
2137  92CC
2138  92CC CC DB A4     	call z,Genera_disparo_Amadeus
2139  92CF
2140  92CF 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2141  92D1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2142  92D3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2143  92D5 CC AD 9F         call z,Amadeus_a_izquierda
2144  92D8
2145  92D8 3E F7        	ld a,$f7
2146  92DA DB FE        	in a,($fe)
2147  92DC E6 01        	and $01
2148  92DE C8           	ret z
2149  92DF
2150  92DF 3E F7        	ld a,$f7
2151  92E1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2152  92E3 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2153  92E5 CC C5 9F     	call z,Amadeus_a_derecha
2154  92E8
2155  92E8 C9           	ret
2156  92E9
2157  92E9              ; ------------------------------------------------------------------------------------------------------------------------
2158  92E9              ;
2159  92E9              ;	06/07/24
2160  92E9              ;
2161  92E9
2162  92E9              Genera_explosion
2163  92E9
2164  92E9 21 73 8C     	ld hl,Clock_explosion
2165  92EC 35           	dec (hl)
2166  92ED 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2167  92EF
2168  92EF              Borra_entidad_colisionada
2169  92EF
2170  92EF CD 7B 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2171  92F2
2172  92F2 DD E5        	push ix
2173  92F4 CD F1 90     	call Cargamos_registros_con_explosion
2174  92F7 CD D5 95     	call Genera_datos_de_impresion
2175  92FA DD E1        	pop ix
2176  92FC
2177  92FC AF           	xor a
2178  92FD 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2179  92FE
2180  92FE C9           	ret
2181  92FF
2182  92FF              Siguiente_frame_explosion
2183  92FF
2184  92FF 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2185  9301
2186  9301              ; Avanza Frame de explosión.
2187  9301
2188  9301 DD 6E 07     	ld l,(ix+7)
2189  9304 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2190  9307
2191  9307 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2192  930A
2193  930A 79           	ld a,c
2194  930B 95           	sub l
2195  930C 20 41        	jr nz,1F
2196  930E
2197  930E
2198  930E              ; Fín de la entidad !!!!!!!!!!!!!
2199  930E              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2200  930E
2201  930E              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2202  930E              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2203  930E              ; Entidades_en_curso db 0								; Entidades en pantalla.
2204  930E
2205  930E              ; La entidad eliminada, es la última del nivel ?
2206  930E
2207  930E 3A 32 8C     	ld a,(Numero_de_entidades)
2208  9311 A7           	and a
2209  9312 28 30        	jr z,2F
2210  9314
2211  9314              ; Decrementa (Numero_de_entidades)
2212  9314
2213  9314 3D           	dec a
2214  9315 32 32 8C     	ld (Numero_de_entidades),a
2215  9318 21 34 8C     	ld hl,Entidades_en_curso
2216  931B 35           	dec (hl)
2217  931C
2218  931C              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2219  931C              ; IX apunta al 1er .db de la entidad eliminada.
2220  931C
2221  931C 2A 30 8C     	ld hl,(Puntero_indice_master)
2222  931F CD 97 91     	call Extrae_address
2223  9322
2224  9322 DD E5        	push ix
2225  9324 D1           	pop de
2226  9325
2227  9325 01 0C 00     	ld bc,12
2228  9328 ED B0        	ldir
2229  932A
2230  932A              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2231  932A
2232  932A CD C5 90     	call Obtenemos_puntero_de_impresion
2233  932D
2234  932D DD 6E 05     	ld l,(ix+5)
2235  9330 2C           	inc l
2236  9331 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2237  9334
2238  9334 CD A9 95     	call Genera_coordenadas
2239  9337
2240  9337 ED 4B EB 8B  	ld bc,(Coordenada_X)
2241  933B
2242  933B DD 71 01     	ld (ix+1),c
2243  933E DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2244  9341
2245  9341 AF           	xor a
2246  9342 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2247  9343
2248  9343 C9           	ret
2249  9344
2250  9344              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2251  9344
2252  9344 21 33 8C     2 ld hl,Numero_parcial_de_entidades
2253  9347 35           	dec (hl)
2254  9348 23           	inc hl
2255  9349 35           	dec (hl)
2256  934A
2257  934A CD 0E 92     	call Limpia_caja_de_entidades
2258  934D 18 A0        	jr Borra_entidad_colisionada
2259  934F
2260  934F 23           1 inc hl
2261  9350 23           	inc hl
2262  9351
2263  9351 DD 75 07     	ld (ix+7),l
2264  9354 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2265  9357
2266  9357 18 96        	jr Borra_entidad_colisionada
2267  9359
2268  9359              ; ----- ----- ----- ----- -----
2269  9359
2270  9359              Genera_explosion_Amadeus
2271  9359
2272  9359 21 74 8C     	ld hl,Clock_explosion_Amadeus
2273  935C 35           	dec (hl)
2274  935D 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2275  935F
2276  935F              Borra_Amadeus_impactado
2277  935F
2278  935F CD E5 8E     	call Change_Amadeus
2279  9362 CD 05 91     	call Cargamos_registros_con_explosion_Amadeus
2280  9365 CD 26 91     	call Genera_datos_de_impresion_Amadeus
2281  9368
2282  9368 21 61 8C     	ld hl,Ctrl_3
2283  936B CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2284  936D
2285  936D AF           	xor a
2286  936E 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2287  936F
2288  936F C9           	ret
2289  9370
2290  9370              Siguiente_frame_explosion_Amadeus
2291  9370
2292  9370 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2293  9372
2294  9372              ; Avanza Frame de explosión.
2295  9372
2296  9372 2A B5 89     	ld hl,(Pamm_Amadeus)
2297  9375 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2298  9378
2299  9378 79           	ld a,c
2300  9379 95           	sub l
2301  937A 20 0B        	jr nz,1F
2302  937C
2303  937C              ; Fín de Amadeus !!!!!!!!!!!!!
2304  937C              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2305  937C
2306  937C AF           	xor a
2307  937D 32 B2 89     	ld (Impacto_Amadeus),a
2308  9380 21 61 8C     	ld hl,Ctrl_3
2309  9383 CB F6        	set 6,(hl)
2310  9385
2311  9385 18 D8        	jr Borra_Amadeus_impactado
2312  9387
2313  9387 23           1 inc hl
2314  9388 23           	inc hl
2315  9389 22 B5 89     	ld (Pamm_Amadeus),hl
2316  938C 18 D1        	jr Borra_Amadeus_impactado
2317  938E
2318  938E              ; ---------------------------------------------------------------
2319  938E
2320  938E              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 938E              ; ******************************************************************************************************************************************************************************************
   2+ 938E              ;
   3+ 938E              ;   21/04/24
   4+ 938E              ;
   5+ 938E              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 938E              ;   (XOR) bit a bit.
   7+ 938E              ;
   8+ 938E              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 938E
  10+ 938E              Derivando_RND
  11+ 938E
  12+ 938E 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9391
  14+ 9391 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9393 C5               push bc
  16+ 9394              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9394 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9397              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9397
  20+ 9397 A7           6 and a                                 ; Carry a "0".
  21+ 9398 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 939A 30 02            jr nc,1F
  23+ 939C
  24+ 939C CB C1            set 0,c
  25+ 939E
  26+ 939E 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 939F E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 93A1 5F               ld e,a
  29+ 93A2
  30+ 93A2 7A               ld a,d
  31+ 93A3 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 93A5 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 93A7
  34+ 93A7 CB 3F            srl a
  35+ 93A9
  36+ 93A9 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 93AA
  38+ 93AA 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 93AB 28 04            jr z,4F
  40+ 93AD
  41+ 93AD CB FF            set 7,a
  42+ 93AF 18 02            jr 5F
  43+ 93B1
  44+ 93B1 CB BF        4 res 7,a
  45+ 93B3
  46+ 93B3 CB 21        5 sla c
  47+ 93B5 10 E0            djnz 6B
  48+ 93B7
  49+ 93B7 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 93B8
  51+ 93B8 77               ld (hl),a
  52+ 93B9 23               inc hl
  53+ 93BA C1               pop bc
  54+ 93BB 10 D4            djnz 3B
  55+ 93BD
  56+ 93BD C9               ret
  57+ 93BE
  58+ 93BE
  59+ 93BE
# file closed: RND_Derivando.asm
2321  93BE              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 93BE              ;---------------------------------------------------------------------------------------------------------------
   2+ 93BE              ;
   3+ 93BE              ;   13/11/24
   4+ 93BE
   5+ 93BE              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 93BE
   7+ 93BE              Genera_movimientos_masticados_del_nivel
   8+ 93BE
   9+ 93BE              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 93BE
  11+ 93BE              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 93BE              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 93BE              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 93BE
  15+ 93BE 2D           	dec l
  16+ 93BF 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 93C0 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 93C1 4E           	ld c,(hl)
  19+ 93C2
  20+ 93C2 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 93C3 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 93C4
  23+ 93C4              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 93C4
  25+ 93C4 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 93C5
  27+ 93C5 CD 03 94     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 93C8
  29+ 93C8              ;	Caja Master inicializada ???
  30+ 93C8
  31+ 93C8 7E           	ld a,(hl)
  32+ 93C9 A7           	and a
  33+ 93CA 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 93CC
  35+ 93CC              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 93CC
  37+ 93CC C1           	pop bc
  38+ 93CD 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 93CE C5           	push bc
  40+ 93CF
  41+ 93CF CD A3 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 93D2 CD 37 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 93D5
  44+ 93D5 3A EA 8B     	ld a,(Tipo)
  45+ 93D8 CD 13 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 93DB
  47+ 93DB              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 93DB
  49+ 93DB              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 93DB              ;	ld a,(hl)
  51+ 93DB              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 93DB              ;	and a
  53+ 93DB              ;	jr nz,2F													; No queremos que la entidad se inicie en la columna "0", en ese caso será "1".
  54+ 93DB
  55+ 93DB              ;	inc a														; (Posicion_inicio) $4001.
  56+ 93DB
  57+ 93DB              ;2 ld hl,Posicion_inicio
  58+ 93DB              ;	ld (hl),a
  59+ 93DB
  60+ 93DB              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  61+ 93DB              ;	Generamos "Movimientos masticados" de la entidad.
  62+ 93DB
  63+ 93DB CD 17 90     	call Construye_movimientos_masticados_entidad
  64+ 93DE
  65+ 93DE 2A 30 8C     	ld hl,(Puntero_indice_master)
  66+ 93E1 CD 97 91     	call Extrae_address
  67+ 93E4
  68+ 93E4 5D           	ld e,l
  69+ 93E5 54           	ld d,h
  70+ 93E6
  71+ 93E6 CD 64 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  72+ 93E9
  73+ 93E9              Movimientos_masticados_construidos
  74+ 93E9
  75+ 93E9 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  76+ 93EA
  77+ 93EA E1           	pop hl														; Pop (Datos_de_nivel).
  78+ 93EB 2C           	inc l														; Datos_de_nivel +1 en HL.
  79+ 93EC
  80+ 93EC 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  81+ 93ED 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  82+ 93EF
  83+ 93EF C9           	ret
  84+ 93F0
  85+ 93F0              ;---------------------------------------------------------------------------------------------------------------
  86+ 93F0              ;
  87+ 93F0              ;   9/11/24
  88+ 93F0              ;
  89+ 93F0              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  90+ 93F0              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  91+ 93F0              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  92+ 93F0              ;	_ de la 1ª entidad del Nivel.
  93+ 93F0              ;
  94+ 93F0              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  95+ 93F0
  96+ 93F0              ;	MODIFICA: HL,DE y A.
  97+ 93F0              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  98+ 93F0
  99+ 93F0              Inicializa_1er_Nivel
 100+ 93F0
 101+ 93F0              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 102+ 93F0
 103+ 93F0 21 D3 8B     	ld hl,Indice_de_niveles
 104+ 93F3 CD 97 91     	call Extrae_address
 105+ 93F6 ED 53 80 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 106+ 93FA
 107+ 93FA 7E           	ld a,(hl)
 108+ 93FB 32 32 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 109+ 93FE
 110+ 93FE 2C           	inc l
 111+ 93FF 22 82 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 112+ 9402
 113+ 9402 C9           	ret
 114+ 9403
 115+ 9403              ; ----------------------
 116+ 9403              ;
 117+ 9403              ;	13/11/24
 118+ 9403              ;
 119+ 9403
 120+ 9403              Situa_en_Caja_Master
 121+ 9403
 122+ 9403 CD 22 95         call Calcula_salto_en_BC
 123+ 9406 21 58 89         ld hl,Indice_de_cajas_master
 124+ 9409 A7               and a
 125+ 940A ED 4A            adc hl,bc
 126+ 940C 22 30 8C       	ld (Puntero_indice_master),hl
 127+ 940F CD 97 91     	call Extrae_address
 128+ 9412 C9           	ret
 129+ 9413
 130+ 9413              ; ----------------------
 131+ 9413
 132+ 9413              ; Fija_velocidades ld de,Perfiles_de_velocidad
 133+ 9413              ; 	ld bc,4
 134+ 9413              ; 	ldir
 135+ 9413              ; 	ret
 136+ 9413
 137+ 9413 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 138+ 9414 CD 22 95         call Calcula_salto_en_BC
 139+ 9417 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 140+ 941A A7               and a
 141+ 941B ED 4A            adc hl,bc
 142+ 941D CD 97 91         call Extrae_address
 143+ 9420 22 1B 8C         ld (Puntero_indice_mov),hl
 144+ 9423 C9               ret
 145+ 9424
 146+ 9424              ;---------------------------------------------------------------------------------------------------------------
 147+ 9424              ;
 148+ 9424              ;   13/11/24
 149+ 9424              ;
 150+ 9424              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 151+ 9424
 152+ 9424
 153+ 9424              Prepara_Cajas_de_Entidades
 154+ 9424
 155+ 9424              ; Preparamos los punteros de las cajas de entidades:
 156+ 9424
 157+ 9424 CD 81 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 158+ 9427              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 159+ 9427 CD 6D 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 160+ 942A
 161+ 942A 2A 82 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 162+ 942D
 163+ 942D              ; En este punto:
 164+ 942D              ;
 165+ 942D              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 166+ 942D              ; B contiene (Numero_parcial_de_entidades).
 167+ 942D
 168+ 942D C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 169+ 942E
 170+ 942E 7E           	ld a,(hl)
 171+ 942F
 172+ 942F CD 03 94     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 173+ 9432
 174+ 9432 ED 5B 2A 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 175+ 9436
 176+ 9436 D5           	push de
 177+ 9437 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 178+ 9439
 179+ 9439 01 0C 00     	ld bc,12
 180+ 943C ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 181+ 943E              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 182+ 943E
 183+ 943E              ; En este punto debemos generar coordenadas y puntero de impresión.:
 184+ 943E              ;
 185+ 943E              ;
 186+ 943E              ; ------------------------------------------------------ IX
 187+ 943E              ; ------------------------------------------------------ IX
 188+ 943E              ; ------------------------------------------------------ IX
 189+ 943E              ; ------------------------------------------------------ IX
 190+ 943E
 191+ 943E DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 192+ 9440
 193+ 9440 CD C5 90     	call Obtenemos_puntero_de_impresion
 194+ 9443
 195+ 9443 DD 6E 05     	ld l,(ix+5)
 196+ 9446 2C           	inc l
 197+ 9447 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 198+ 944A
 199+ 944A D5           	push de														; Push (Puntero_objeto).
 200+ 944B E5           	push hl														; Push (Puntero_de_impresion).
 201+ 944C
 202+ 944C CD A9 95     	call Genera_coordenadas
 203+ 944F
 204+ 944F ED 4B EB 8B  	ld bc,(Coordenada_X)
 205+ 9453
 206+ 9453 DD 71 01     	ld (ix+1),c
 207+ 9456 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 208+ 9459
 209+ 9459 CD 7B 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 210+ 945C
 211+ 945C DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 212+ 945E D1           	pop de														; Pop (Puntero_objeto) en DE.
 213+ 945F
 214+ 945F CD D5 95     	call Genera_datos_de_impresion
 215+ 9462
 216+ 9462 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 217+ 9464
 218+ 9464              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 219+ 9464
 220+ 9464 CD DB 94     	call Decrementa_Contador_de_mov_masticados
 221+ 9467 CD B8 94     	call Limpiamos_bandeja_DRAW
 222+ 946A CD DE 91     	call Incrementa_punteros_de_cajas
 223+ 946D
 224+ 946D              ; Siguiente entidad del Nivel.
 225+ 946D
 226+ 946D 2A 82 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 227+ 9470 23           	inc hl 														; _ entidad del Nivel.
 228+ 9471
 229+ 9471 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 230+ 9472
 231+ 9472 10 B9        	djnz 1B
 232+ 9474
 233+ 9474 C9           	ret
 234+ 9475
 235+ 9475              ; -------------------------------------------------------------------------------------------------------------------
 236+ 9475              ;
 237+ 9475              ;	27/5/24
 238+ 9475              ;
 239+ 9475              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 240+ 9475              ;
 241+ 9475
 242+ 9475              ; 	Cargamos la definición de Amadeus en DRAW.
 243+ 9475              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 244+ 9475
 245+ 9475 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 246+ 9478 CD 37 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 247+ 947B
 248+ 947B
 249+ 947B              Construye_movimientos_masticados_Amadeus
 250+ 947B
 251+ 947B 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 252+ 947E CD B8 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 253+ 9481              ;															; _ el (Contador_de_mov_masticados).
 254+ 9481 CD 9D 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 255+ 9484              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 256+ 9484
 257+ 9484              ; Generamos movimientos masticados de Amadeus.
 258+ 9484
 259+ 9484 06 79        	ld b,121												; $0079, 121d.
 260+ 9486
 261+ 9486 C5           1 push bc
 262+ 9487 CD 63 99     	call Draw
 263+ 948A CD 9D 90     	call Guarda_movimiento_masticado
 264+ 948D
 265+ 948D CD D7 9C     	call Mov_right
 266+ 9490 CD D7 9C     	call Mov_right											; Amadeus se mueve x2 pixel.
 267+ 9493
 268+ 9493 C1           	pop bc
 269+ 9494 10 F0        	djnz 1B
 270+ 9496
 271+ 9496              ; Todos los movimientos masticados de Amadeus se han creado.
 272+ 9496
 273+ 9496              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 274+ 9496              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 275+ 9496
 276+ 9496 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 277+ 9499 01 08 00     	ld bc,8
 278+ 949C A7           	and a
 279+ 949D ED 42        	sbc hl,bc
 280+ 949F 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 281+ 94A2
 282+ 94A2 C9           	ret
 283+ 94A3
 284+ 94A3              ; ---------------------------------------------------------------------
 285+ 94A3              ;
 286+ 94A3              ;	10/02/24
 287+ 94A3              ;
 288+ 94A3              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 289+ 94A3              ;
 290+ 94A3              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 291+ 94A3
 292+ 94A3              Definicion_segun_tipo
 293+ 94A3
 294+ 94A3 CD 22 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 295+ 94A6 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 296+ 94A9 CD 2D 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 297+ 94AC C9           	ret
 298+ 94AD
 299+ 94AD              ; ---------------------------------------------------------------------
 300+ 94AD              ;
 301+ 94AD              ;	6/7/24
 302+ 94AD
 303+ 94AD
 304+ 94AD              Store_Restore_cajas
 305+ 94AD
 306+ 94AD ED 5B 2A 8C  	ld de,(Puntero_store_caja)
 307+ 94B1 CD 64 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 308+ 94B4 CD DE 91     	call Incrementa_punteros_de_cajas
 309+ 94B7 C9           	ret
 310+ 94B8
 311+ 94B8              ; ---------------------------------------------------------------------
 312+ 94B8              ;
 313+ 94B8              ;	23/6/24
 314+ 94B8              ;
 315+ 94B8              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 316+ 94B8              ;
 317+ 94B8              ;	MODIFY: HL
 318+ 94B8
 319+ 94B8              Limpiamos_bandeja_DRAW
 320+ 94B8
 321+ 94B8 ED 73 39 8C  	ld (Stack),sp
 322+ 94BC 31 0F 8C     	ld sp,Vel_left
 323+ 94BF
 324+ 94BF AF           	xor a
 325+ 94C0 67           	ld h,a
 326+ 94C1 6F           	ld l,a
 327+ 94C2
 328+ 94C2 E5           	push hl
 329+ 94C3 E5           	push hl
 330+ 94C4 E5           	push hl
 331+ 94C5 E5           	push hl
 332+ 94C6 E5           	push hl
 333+ 94C7 E5           	push hl
 334+ 94C8 E5           	push hl
 335+ 94C9 E5           	push hl
 336+ 94CA E5           	push hl
 337+ 94CB E5           	push hl
 338+ 94CC E5           	push hl
 339+ 94CD E5           	push hl
 340+ 94CE E5           	push hl
 341+ 94CF E5           	push hl
 342+ 94D0 E5           	push hl
 343+ 94D1 E5           	push hl
 344+ 94D2 E5           	push hl
 345+ 94D3 E5           	push hl
 346+ 94D4
 347+ 94D4 33           	inc sp
 348+ 94D5
 349+ 94D5 E5           	push hl
 350+ 94D6 ED 7B 39 8C  	ld sp,(Stack)
 351+ 94DA
 352+ 94DA C9           	ret
 353+ 94DB
 354+ 94DB              ; ---------------------------------------------------------------------
 355+ 94DB              ;
 356+ 94DB              ;	23/11/24
 357+ 94DB              ;
 358+ 94DB              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 359+ 94DB
 360+ 94DB              Decrementa_Contador_de_mov_masticados
 361+ 94DB
 362+ 94DB DD 6E 09     	ld l,(ix+9)
 363+ 94DE DD 66 0A     	ld h,(ix+10)
 364+ 94E1
 365+ 94E1 2B           	dec hl
 366+ 94E2
 367+ 94E2 DD 75 09     	ld (ix+9),l
 368+ 94E5 DD 74 0A     	ld (ix+10),h
 369+ 94E8
 370+ 94E8 C9           	ret
 371+ 94E9
 372+ 94E9              ; ---------------------------------------------------------------------
 373+ 94E9              ;
 374+ 94E9              ;	24/11/24
 375+ 94E9
 376+ 94E9              Reinicia_entidad_maliciosa
 377+ 94E9
 378+ 94E9              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 379+ 94E9
 380+ 94E9 CD 3E A1     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 381+ 94EC CD 4B A1     	call Transfiere_datos_de_contadores
 382+ 94EF
 383+ 94EF              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 384+ 94EF
 385+ 94EF DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 386+ 94F2 CD A3 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 387+ 94F5
 388+ 94F5 7D           	ld a,l
 389+ 94F6 C6 0B        	add 11
 390+ 94F8 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 391+ 94F9
 392+ 94F9 CD 97 91     	call Extrae_address
 393+ 94FC
 394+ 94FC DD 75 07     	ld (ix+7),l
 395+ 94FF DD 74 08     	ld (ix+8),h
 396+ 9502
 397+ 9502 CD C5 90     	call Obtenemos_puntero_de_impresion
 398+ 9505
 399+ 9505              ; Incrementa (Contador_de_vueltas)x2.
 400+ 9505              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 401+ 9505
 402+ 9505              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 403+ 9505              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 404+ 9505              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 405+ 9505              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 406+ 9505              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 407+ 9505
 408+ 9505 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 409+ 9509
 410+ 9509 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 411+ 950C CB 2F        	sra a
 412+ 950E CB 2F        	sra a
 413+ 9510
 414+ 9510 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 415+ 9513
 416+ 9513 3E 40        	ld a,$40
 417+ 9515 DD BE 03     	cp (ix+3)
 418+ 9518 C0           	ret nz
 419+ 9519
 420+ 9519              ; Límitador.
 421+ 9519
 422+ 9519              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 423+ 9519
 424+ 9519 DD CB 03 2E  	sra (ix+3)
 425+ 951D DD CB 0B 2E  	sra (ix+11)
 426+ 9521
 427+ 9521 C9           	ret
 428+ 9522
 429+ 9522              ;	------------------------------------------------------------------------------------
 430+ 9522              ;
 431+ 9522              ;	09/11/24
 432+ 9522              ;
 433+ 9522              ;	INPUTS:	A contiene el (Tipo) de entidad.
 434+ 9522              ;
 435+ 9522              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 436+ 9522              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 437+ 9522
 438+ 9522 A7           Calcula_salto_en_BC and a
 439+ 9523 28 04        	jr z,1F
 440+ 9525 CB 27        	sla a
 441+ 9527 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 442+ 9529 4F           1 ld c,a
 443+ 952A 06 00        	ld b,0
 444+ 952C C9           	ret
 445+ 952D
 446+ 952D              ; ------------------------------------------------------------------
 447+ 952D              ;
 448+ 952D              ;	19/1/24
 449+ 952D              ;
 450+ 952D              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 451+ 952D              ;	Actualiza (Datos_de_entidad) con esa dirección.
 452+ 952D
 453+ 952D A7           Situa_en_datos_de_definicion and a
 454+ 952E ED 4A        	adc hl,bc
 455+ 9530 CD 97 91     	call Extrae_address
 456+ 9533 22 37 8C         ld (Datos_de_entidad),hl
 457+ 9536 C9           	ret
 458+ 9537
 459+ 9537              ; ----------------------------------------------------------------------------------------------------------
 460+ 9537              ;
 461+ 9537              ;	24/6/24
 462+ 9537              ;
 463+ 9537              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 464+ 9537              ;	_ de entidad.
 465+ 9537              ;
 466+ 9537              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 467+ 9537              ;
 468+ 9537              ;
 469+ 9537              ;	MODIFICA: HL,DE y BC
 470+ 9537
 471+ 9537
 472+ 9537              Definicion_de_entidad_a_bandeja_DRAW
 473+ 9537
 474+ 9537 11 EA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 475+ 953A 7E           	ld a,(hl) 									; Volcamos Tipo.
 476+ 953B 12           	ld (de),a
 477+ 953C 23           	inc hl
 478+ 953D              ;
 479+ 953D 11 F8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 480+ 9540 01 02 00     	ld bc,2
 481+ 9543 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 482+ 9545              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 483+ 9545 11 ED 8B     	ld de,Contador_de_vueltas
 484+ 9548 7E           	ld a,(hl)
 485+ 9549 12           	ld (de),a
 486+ 954A 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 487+ 954B
 488+ 954B 11 FF 8B     	ld de,Indice_Sprite_der
 489+ 954E 01 04 00     	ld bc,4
 490+ 9551 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 491+ 9553
 492+ 9553 11 07 8C     	ld de,Posicion_inicio
 493+ 9556 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 494+ 9559 ED B0        	ldir 									; Vuelco (Frames_explosion).
 495+ 955B
 496+ 955B 11 F1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 497+ 955E 01 02 00     	ld bc,2
 498+ 9561 ED B0        	ldir
 499+ 9563
 500+ 9563 C9           	ret
 501+ 9564
 502+ 9564              ; ----------------------------------------------------------------------------------------------------------
 503+ 9564              ;
 504+ 9564              ;	1/8/24
 505+ 9564              ;
 506+ 9564
 507+ 9564              Parametros_de_bandeja_DRAW_a_caja
 508+ 9564
 509+ 9564 21 EA 8B     	ld hl,Bandeja_DRAW
 510+ 9567 01 0C 00     	ld bc,12
 511+ 956A ED B0        	ldir
 512+ 956C C9           	ret
 513+ 956D
 514+ 956D              ;---------------------------------------------------------------------------------------------------------------
 515+ 956D              ;
 516+ 956D              ;	13/11/24
 517+ 956D              ;
 518+ 956D              ;	INICIALIZA (Numero_parcial_de_entidades).
 519+ 956D              ;
 520+ 956D              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 521+ 956D              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 522+ 956D
 523+ 956D              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 524+ 956D              ;			- Actualiza (Numero_de_entidades).
 525+ 956D
 526+ 956D              ;	MODIFICA: A y B.
 527+ 956D
 528+ 956D
 529+ 956D              Inicializa_Numero_parcial_de_entidades
 530+ 956D
 531+ 956D 3A 32 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 532+ 9570 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 533+ 9572 38 0E        	jr c,1F
 534+ 9574 28 0C        	jr z,1F
 535+ 9576
 536+ 9576              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 537+ 9576              ; Actualizamos variables.
 538+ 9576
 539+ 9576 D6 06        	sub 6
 540+ 9578 32 32 8C     	ld (Numero_de_entidades),a
 541+ 957B 3E 06        	ld a,6
 542+ 957D 32 33 8C     	ld (Numero_parcial_de_entidades),a
 543+ 9580 47           	ld b,a
 544+ 9581 C9           	ret
 545+ 9582
 546+ 9582              ; El nº total de entidades no supera el nº de cajas de entidades.
 547+ 9582              ; (Numero_de_entidades)="0".
 548+ 9582
 549+ 9582 32 33 8C     1 ld (Numero_parcial_de_entidades),a
 550+ 9585 47           	ld b,a
 551+ 9586 AF           	xor a
 552+ 9587 32 32 8C     	ld (Numero_de_entidades),a
 553+ 958A C9           	ret
 554+ 958B
# file closed: Rutinas_de_inicio_y_niveles.asm
2322  958B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 958B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 958B              ;
   3+ 958B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 958B              ;
   5+ 958B              ; *****************************************************************************************************************************************************************************************
   6+ 958B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 958B
   8+ 958B 7C           calcula_tercio ld a,h
   9+ 958C E6 18        	and $18
  10+ 958E CB 2F        	sra a
  11+ 9590 CB 2F        	sra a
  12+ 9592 CB 2F        	sra a
  13+ 9594 C9           	ret
  14+ 9595
# file closed: calcula_tercio.asm
2323  9595              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9595              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9595              ;
   3+ 9595              ;
   4+ 9595              ;	CLS.
   5+ 9595              ;
   6+ 9595              ;	Limpia la pantalla y define sus atributos.
   7+ 9595              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9595              ;
   9+ 9595              ;	COLORES: 0 ..... NEGRO
  10+ 9595              ;    		 1 ..... AZUL
  11+ 9595              ; 			 2 ..... ROJO
  12+ 9595              ;			 3 ..... MAGENTA
  13+ 9595              ; 			 4 ..... VERDE
  14+ 9595              ; 			 5 ..... CIAN
  15+ 9595              ;			 6 ..... AMARILLO
  16+ 9595              ; 			 7 ..... BLANCO
  17+ 9595              ;
  18+ 9595              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9595              ;
  20+ 9595              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9595
  22+ 9595
  23+ 9595 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9598 11 01 40     	LD DE,$4001
  25+ 959B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 959E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 95A0 ED B0        	LDIR
  28+ 95A2 01 FF 02     	LD BC,767
  29+ 95A5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 95A6 ED B0        	LDIR
  31+ 95A8 C9           	ret
  32+ 95A9
# file closed: Cls.asm
2324  95A9              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 95A9              ; ------------------------------------------------------------------------
   2+ 95A9              ;
   3+ 95A9              ;	30/1/24
   4+ 95A9              ;
   5+ 95A9              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 95A9              ;	Fila superior "0", Columna izquierda "0".
   7+ 95A9              ;
   8+ 95A9              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 95A9              ;
  10+ 95A9              ;	Modifica: A,BC y DE.
  11+ 95A9
  12+ 95A9              Genera_coordenadas
  13+ 95A9
  14+ 95A9 7D           	ld a,l
  15+ 95AA E6 1F        	and $1f
  16+ 95AC
  17+ 95AC 32 EB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 95AF
  19+ 95AF 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 95B0 FE 40        	cp $40
  21+ 95B2 38 1C        	jr c,4F
  22+ 95B4
  23+ 95B4 CD 8B 95     	call calcula_tercio
  24+ 95B7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 95B8
  26+ 95B8 1E 00        	ld e,0
  27+ 95BA 7D           	ld a,l
  28+ 95BB E6 E0        	and $e0
  29+ 95BD 28 01        	jr z,1F
  30+ 95BF 04           	inc b
  31+ 95C0
  32+ 95C0 04           1 inc b
  33+ 95C1 05           	dec b
  34+ 95C2 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 95C4              ;														; _ , salimos.
  36+ 95C4 1C           3 inc e
  37+ 95C5 D6 20        	sub 32
  38+ 95C7 20 FB        	jr nz,3B
  39+ 95C9 10 F5        	djnz 1B
  40+ 95CB
  41+ 95CB 7B           2 ld a,e
  42+ 95CC 32 EC 8B     	ld (Coordenada_y),a
  43+ 95CF C9           	ret
  44+ 95D0
  45+ 95D0 AF           4 xor a
  46+ 95D1 32 EC 8B     	ld (Coordenada_y),a
  47+ 95D4 C9           	ret
  48+ 95D5
# file closed: Genera_coordenadas.asm
2325  95D5              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 95D5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 95D5              ;
   3+ 95D5              ;	20/09/24
   4+ 95D5              ;
   5+ 95D5              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 95D5              ;   DE contiene Puntero_objeto.
   7+ 95D5              ;   IX contiene el Puntero de impresión.
   8+ 95D5
   9+ 95D5              Genera_datos_de_impresion
  10+ 95D5
  11+ 95D5 ED 73 39 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 95D9
  13+ 95D9 2A 5B 8C         ld hl,(Scanlines_album_SP)
  14+ 95DC
  15+ 95DC 3E 05            ld a,5
  16+ 95DE 85               add l
  17+ 95DF 6F               ld l,a
  18+ 95E0
  19+ 95E0 F9               ld sp,hl
  20+ 95E1 22 5B 8C         ld (Scanlines_album_SP),hl
  21+ 95E4
  22+ 95E4 21 00 00         ld hl,0
  23+ 95E7
  24+ 95E7 DD E5            push ix
  25+ 95E9 3B               dec sp
  26+ 95EA ED 7A            adc hl,sp
  27+ 95EC D5               push de
  28+ 95ED
  29+ 95ED              ; Recuperamos SP.
  30+ 95ED
  31+ 95ED ED 7B 39 8C      ld sp,(Stack)
  32+ 95F1
  33+ 95F1 E5               push hl
  34+ 95F2 F1               pop af
  35+ 95F3 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95F4
  37+ 95F4              ; Tenemos el encabezado listo.
  38+ 95F4              ; Preparamos registros para generar los scanlines.
  39+ 95F4
  40+ 95F4 DD E5            push ix
  41+ 95F6 E1               pop hl                                          ; 1er scanline en HL.
  42+ 95F7
  43+ 95F7 ED 5B 5B 8C      ld de,(Scanlines_album_SP)
  44+ 95FB
  45+ 95FB              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95FB              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95FB
  48+ 95FB 7C               ld a,h
  49+ 95FC FE 50            cp $50
  50+ 95FE 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9600
  52+ 9600 20 05            jr nz,2F
  53+ 9602
  54+ 9602 7D               ld a,l
  55+ 9603 FE E0            cp $e0
  56+ 9605 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9607
  58+ 9607 7D           2 ld a,l
  59+ 9608 FE C0            cp $c0
  60+ 960A D2 A0 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 960D
  62+ 960D              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 960D
  64+ 960D CD 15 9C         call NextScan
  65+ 9610 EB               ex de,hl
  66+ 9611
  67+ 9611 73               ld (hl),e
  68+ 9612 23               inc hl
  69+ 9613 72               ld (hl),d
  70+ 9614 23               inc hl
  71+ 9615
  72+ 9615 EB               ex de,hl
  73+ 9616
  74+ 9616 CD 15 9C         call NextScan
  75+ 9619 EB               ex de,hl
  76+ 961A
  77+ 961A 73               ld (hl),e
  78+ 961B 23               inc hl
  79+ 961C 72               ld (hl),d
  80+ 961D 23               inc hl
  81+ 961E
  82+ 961E EB               ex de,hl
  83+ 961F
  84+ 961F CD 15 9C         call NextScan
  85+ 9622 EB               ex de,hl
  86+ 9623
  87+ 9623 73               ld (hl),e
  88+ 9624 23               inc hl
  89+ 9625 72               ld (hl),d
  90+ 9626 23               inc hl
  91+ 9627
  92+ 9627 EB               ex de,hl
  93+ 9628
  94+ 9628 CD 15 9C         call NextScan
  95+ 962B EB               ex de,hl
  96+ 962C
  97+ 962C 73               ld (hl),e
  98+ 962D 23               inc hl
  99+ 962E 72               ld (hl),d
 100+ 962F 23               inc hl
 101+ 9630
 102+ 9630 EB               ex de,hl
 103+ 9631
 104+ 9631 CD 15 9C         call NextScan
 105+ 9634 EB               ex de,hl
 106+ 9635
 107+ 9635 73               ld (hl),e
 108+ 9636 23               inc hl
 109+ 9637 72               ld (hl),d
 110+ 9638 23               inc hl
 111+ 9639
 112+ 9639 EB               ex de,hl
 113+ 963A
 114+ 963A CD 15 9C         call NextScan
 115+ 963D EB               ex de,hl
 116+ 963E
 117+ 963E 73               ld (hl),e
 118+ 963F 23               inc hl
 119+ 9640 72               ld (hl),d
 120+ 9641 23               inc hl
 121+ 9642
 122+ 9642 EB               ex de,hl
 123+ 9643
 124+ 9643 CD 15 9C         call NextScan
 125+ 9646 EB               ex de,hl
 126+ 9647
 127+ 9647 73               ld (hl),e
 128+ 9648 23               inc hl
 129+ 9649 72               ld (hl),d
 130+ 964A 23               inc hl
 131+ 964B
 132+ 964B EB               ex de,hl
 133+ 964C
 134+ 964C CD 15 9C         call NextScan
 135+ 964F EB               ex de,hl
 136+ 9650
 137+ 9650 73               ld (hl),e
 138+ 9651 23               inc hl
 139+ 9652 72               ld (hl),d
 140+ 9653 23               inc hl
 141+ 9654
 142+ 9654 EB               ex de,hl
 143+ 9655
 144+ 9655 CD 15 9C         call NextScan
 145+ 9658 EB               ex de,hl
 146+ 9659
 147+ 9659 73               ld (hl),e
 148+ 965A 23               inc hl
 149+ 965B 72               ld (hl),d
 150+ 965C 23               inc hl
 151+ 965D
 152+ 965D EB               ex de,hl
 153+ 965E
 154+ 965E CD 15 9C         call NextScan
 155+ 9661 EB               ex de,hl
 156+ 9662
 157+ 9662 73               ld (hl),e
 158+ 9663 23               inc hl
 159+ 9664 72               ld (hl),d
 160+ 9665 23               inc hl
 161+ 9666
 162+ 9666 EB               ex de,hl
 163+ 9667
 164+ 9667 CD 15 9C         call NextScan
 165+ 966A EB               ex de,hl
 166+ 966B
 167+ 966B 73               ld (hl),e
 168+ 966C 23               inc hl
 169+ 966D 72               ld (hl),d
 170+ 966E 23               inc hl
 171+ 966F
 172+ 966F EB               ex de,hl
 173+ 9670
 174+ 9670 CD 15 9C         call NextScan
 175+ 9673 EB               ex de,hl
 176+ 9674
 177+ 9674 73               ld (hl),e
 178+ 9675 23               inc hl
 179+ 9676 72               ld (hl),d
 180+ 9677 23               inc hl
 181+ 9678
 182+ 9678 EB               ex de,hl
 183+ 9679
 184+ 9679 CD 15 9C         call NextScan
 185+ 967C EB               ex de,hl
 186+ 967D
 187+ 967D 73               ld (hl),e
 188+ 967E 23               inc hl
 189+ 967F 72               ld (hl),d
 190+ 9680 23               inc hl
 191+ 9681
 192+ 9681 EB               ex de,hl
 193+ 9682
 194+ 9682 CD 15 9C         call NextScan
 195+ 9685 EB               ex de,hl
 196+ 9686
 197+ 9686 73               ld (hl),e
 198+ 9687 23               inc hl
 199+ 9688 72               ld (hl),d
 200+ 9689 23               inc hl
 201+ 968A
 202+ 968A EB               ex de,hl
 203+ 968B
 204+ 968B CD 15 9C         call NextScan
 205+ 968E EB               ex de,hl
 206+ 968F
 207+ 968F              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 968F              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 968F              ;   _ generar sus scanlines.
 210+ 968F
 211+ 968F              ;    ld (Puntero_de_impresion_disparo),de
 212+ 968F
 213+ 968F 73               ld (hl),e
 214+ 9690 23               inc hl
 215+ 9691 72               ld (hl),d
 216+ 9692 23               inc hl
 217+ 9693
 218+ 9693              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9693
 220+ 9693 22 5B 8C         ld (Scanlines_album_SP),hl
 221+ 9696
 222+ 9696 EB               ex de,hl
 223+ 9697
 224+ 9697              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9697
 226+ 9697              ;    call NextScan
 227+ 9697              ;    call NextScan
 228+ 9697
 229+ 9697 22 66 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 969A
 231+ 969A              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 969A
 233+ 969A 08               ex af,af
 234+ 969B
 235+ 969B F5               push af
 236+ 969C E1               pop hl
 237+ 969D
 238+ 969D 36 10            ld (hl),16
 239+ 969F
 240+ 969F C9               ret
 241+ 96A0
 242+ 96A0              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 96A0
 244+ 96A0              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 96A0
 246+ 96A0 3E 57            ld a,$57
 247+ 96A2 94               sub h
 248+ 96A3 47               ld b,a
 249+ 96A4
 250+ 96A4 3E DF            ld a,$df
 251+ 96A6 BD               cp l
 252+ 96A7 38 04            jr c,1F
 253+ 96A9
 254+ 96A9 3E 08            ld a,8
 255+ 96AB 80               add b
 256+ 96AC 47               ld b,a
 257+ 96AD
 258+ 96AD              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 96AD              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 96AD
 261+ 96AD 48           1 ld c,b
 262+ 96AE 0C               inc c
 263+ 96AF
 264+ 96AF 04               inc b
 265+ 96B0 05               dec b
 266+ 96B1 20 02            jr nz,3F
 267+ 96B3
 268+ 96B3 18 0B            jr 6F
 269+ 96B5
 270+ 96B5 CD 15 9C     3 call NextScan
 271+ 96B8 EB               ex de,hl
 272+ 96B9
 273+ 96B9 73               ld (hl),e
 274+ 96BA 23               inc hl
 275+ 96BB 72               ld (hl),d
 276+ 96BC 23               inc hl
 277+ 96BD
 278+ 96BD EB               ex de,hl
 279+ 96BE 10 F5            djnz 3B
 280+ 96C0
 281+ 96C0 ED 53 5B 8C  6 ld (Scanlines_album_SP),de
 282+ 96C4
 283+ 96C4 08           5 ex af,af
 284+ 96C5 F5               push af
 285+ 96C6 E1               pop hl
 286+ 96C7
 287+ 96C7 71               ld (hl),c
 288+ 96C8
 289+ 96C8 C9               ret
 290+ 96C9
# file closed: Genera_datos_de_impresion.asm
2326  96C9              	include "Rutinas_de_pintado.asm"
# file opened: Rutinas_de_pintado.asm
   1+ 96C9              ; -----------------------------------------------------------------------------
   2+ 96C9              ;
   3+ 96C9              ;   28/12/24
   4+ 96C9              ;
   5+ 96C9
   6+ 96C9              ; Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
   7+ 96C9              ; Scanlines_album_2 equ $811a	;    ($811a - $8232)
   8+ 96C9              ; Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
   9+ 96C9              ; Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  10+ 96C9
  11+ 96C9              Rutinas_de_pintado
  12+ 96C9
  13+ 96C9 ED 73 39 8C      ld (Stack),sp
  14+ 96CD
  15+ 96CD EB               ex de,hl                                          ; HL se encuentra en el álbum de líneas.
  16+ 96CE              ;                                                     ; DE se encuentra en los datos del sprite.
  17+ 96CE 2C               inc l
  18+ 96CF 2C               inc l
  19+ 96D0
  20+ 96D0 46               ld b,(hl)                                         ; B contiene el nº de scanlines a imprimir.
  21+ 96D1
  22+ 96D1 2C               inc l
  23+ 96D2
  24+ 96D2 F9               ld sp,hl                                          ; El SP irá extrayendo scanlines en HL.
  25+ 96D3
  26+ 96D3              ;   Vamos a imprimir una entidad o Amadeus ???
  27+ 96D3
  28+ 96D3 7D               ld a,l
  29+ 96D4 FE 34            cp $34
  30+ 96D6 38 03            jr c,Printing_routines_selector
  31+ 96D8
  32+ 96D8 E1               pop hl
  33+ 96D9 18 0F            jr Pinta_rapido_3Chars                            ; Amadeus SIEMPRE se imprime completo, (3 Chars) y 16 scanlines.
  34+ 96DB
  35+ 96DB              ;   ----- ----- ----- ----- -----
  36+ 96DB
  37+ 96DB              Printing_routines_selector
  38+ 96DB
  39+ 96DB              ;   Seleccionaremos la rutina adecuada en función del nº de columna en el que nos encontremos.
  40+ 96DB              ;   Columnas (2-29) utilizaremos [Print_3Chars], Estas rutinas imiprimen el sprite completo, 3 chars.
  41+ 96DB
  42+ 96DB              ; En que columna nos encontramos?
  43+ 96DB
  44+ 96DB E1               pop hl                                            ; Dirección de pantalla del 1er scan del sprite
  45+ 96DC
  46+ 96DC 7D               ld a,l
  47+ 96DD E6 1F            and $1f
  48+ 96DF FE 1E            cp 30
  49+ 96E1 D2 FC 97         jp nc,Desaparece_por_la_derecha
  50+ 96E4
  51+ 96E4              ; -----------------------------------------------------------------------------------------------------------------------------
  52+ 96E4
  53+ 96E4              Print_3Chars
  54+ 96E4
  55+ 96E4              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
  56+ 96E4              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
  57+ 96E4              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
  58+ 96E4
  59+ 96E4              ;   16 scanlines o menos ???
  60+ 96E4
  61+ 96E4 78               ld a,b
  62+ 96E5 FE 10            cp 16
  63+ 96E7 C2 E2 97         jp nz,Pinta_lento_3Chars                           ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  64+ 96EA
  65+ 96EA              ;   Rutinas:
  66+ 96EA
  67+ 96EA              Pinta_rapido_3Chars                                    ;   1520 t/states.
  68+ 96EA
  69+ 96EA 1A               ld a,(de)
  70+ 96EB AE               xor (hl)
  71+ 96EC 77               ld (hl),a
  72+ 96ED 2C               inc l
  73+ 96EE 1C               inc e
  74+ 96EF 1A               ld a,(de)
  75+ 96F0 AE               xor (hl)
  76+ 96F1 77               ld (hl),a
  77+ 96F2 2C               inc l
  78+ 96F3 1C               inc e
  79+ 96F4 1A               ld a,(de)
  80+ 96F5 AE               xor (hl)
  81+ 96F6 77               ld (hl),a
  82+ 96F7 1C               inc e
  83+ 96F8
  84+ 96F8 E1               pop hl
  85+ 96F9
  86+ 96F9 1A               ld a,(de)
  87+ 96FA AE               xor (hl)
  88+ 96FB 77               ld (hl),a
  89+ 96FC 2C               inc l
  90+ 96FD 1C               inc e
  91+ 96FE 1A               ld a,(de)
  92+ 96FF AE               xor (hl)
  93+ 9700 77               ld (hl),a
  94+ 9701 2C               inc l
  95+ 9702 1C               inc e
  96+ 9703 1A               ld a,(de)
  97+ 9704 AE               xor (hl)
  98+ 9705 77               ld (hl),a
  99+ 9706 1C               inc e
 100+ 9707
 101+ 9707 E1               pop hl
 102+ 9708
 103+ 9708 1A               ld a,(de)
 104+ 9709 AE               xor (hl)
 105+ 970A 77               ld (hl),a
 106+ 970B 2C               inc l
 107+ 970C 1C               inc e
 108+ 970D 1A               ld a,(de)
 109+ 970E AE               xor (hl)
 110+ 970F 77               ld (hl),a
 111+ 9710 2C               inc l
 112+ 9711 1C               inc e
 113+ 9712 1A               ld a,(de)
 114+ 9713 AE               xor (hl)
 115+ 9714 77               ld (hl),a
 116+ 9715 1C               inc e
 117+ 9716
 118+ 9716 E1               pop hl
 119+ 9717
 120+ 9717 1A               ld a,(de)
 121+ 9718 AE               xor (hl)
 122+ 9719 77               ld (hl),a
 123+ 971A 2C               inc l
 124+ 971B 1C               inc e
 125+ 971C 1A               ld a,(de)
 126+ 971D AE               xor (hl)
 127+ 971E 77               ld (hl),a
 128+ 971F 2C               inc l
 129+ 9720 1C               inc e
 130+ 9721 1A               ld a,(de)
 131+ 9722 AE               xor (hl)
 132+ 9723 77               ld (hl),a
 133+ 9724 1C               inc e
 134+ 9725
 135+ 9725 E1               pop hl
 136+ 9726
 137+ 9726 1A               ld a,(de)
 138+ 9727 AE               xor (hl)
 139+ 9728 77               ld (hl),a
 140+ 9729 2C               inc l
 141+ 972A 1C               inc e
 142+ 972B 1A               ld a,(de)
 143+ 972C AE               xor (hl)
 144+ 972D 77               ld (hl),a
 145+ 972E 2C               inc l
 146+ 972F 1C               inc e
 147+ 9730 1A               ld a,(de)
 148+ 9731 AE               xor (hl)
 149+ 9732 77               ld (hl),a
 150+ 9733 1C               inc e
 151+ 9734
 152+ 9734 E1               pop hl
 153+ 9735
 154+ 9735 1A               ld a,(de)
 155+ 9736 AE               xor (hl)
 156+ 9737 77               ld (hl),a
 157+ 9738 2C               inc l
 158+ 9739 1C               inc e
 159+ 973A 1A               ld a,(de)
 160+ 973B AE               xor (hl)
 161+ 973C 77               ld (hl),a
 162+ 973D 2C               inc l
 163+ 973E 1C               inc e
 164+ 973F 1A               ld a,(de)
 165+ 9740 AE               xor (hl)
 166+ 9741 77               ld (hl),a
 167+ 9742 1C               inc e
 168+ 9743
 169+ 9743 E1               pop hl
 170+ 9744
 171+ 9744 1A               ld a,(de)
 172+ 9745 AE               xor (hl)
 173+ 9746 77               ld (hl),a
 174+ 9747 2C               inc l
 175+ 9748 1C               inc e
 176+ 9749 1A               ld a,(de)
 177+ 974A AE               xor (hl)
 178+ 974B 77               ld (hl),a
 179+ 974C 2C               inc l
 180+ 974D 1C               inc e
 181+ 974E 1A               ld a,(de)
 182+ 974F AE               xor (hl)
 183+ 9750 77               ld (hl),a
 184+ 9751 1C               inc e
 185+ 9752
 186+ 9752 E1               pop hl
 187+ 9753
 188+ 9753 1A               ld a,(de)
 189+ 9754 AE               xor (hl)
 190+ 9755 77               ld (hl),a
 191+ 9756 2C               inc l
 192+ 9757 1C               inc e
 193+ 9758 1A               ld a,(de)
 194+ 9759 AE               xor (hl)
 195+ 975A 77               ld (hl),a
 196+ 975B 2C               inc l
 197+ 975C 1C               inc e
 198+ 975D 1A               ld a,(de)
 199+ 975E AE               xor (hl)
 200+ 975F 77               ld (hl),a
 201+ 9760 1C               inc e
 202+ 9761
 203+ 9761 E1               pop hl
 204+ 9762
 205+ 9762 1A               ld a,(de)
 206+ 9763 AE               xor (hl)
 207+ 9764 77               ld (hl),a
 208+ 9765 2C               inc l
 209+ 9766 1C               inc e
 210+ 9767 1A               ld a,(de)
 211+ 9768 AE               xor (hl)
 212+ 9769 77               ld (hl),a
 213+ 976A 2C               inc l
 214+ 976B 1C               inc e
 215+ 976C 1A               ld a,(de)
 216+ 976D AE               xor (hl)
 217+ 976E 77               ld (hl),a
 218+ 976F 1C               inc e
 219+ 9770
 220+ 9770 E1               pop hl
 221+ 9771
 222+ 9771 1A               ld a,(de)
 223+ 9772 AE               xor (hl)
 224+ 9773 77               ld (hl),a
 225+ 9774 2C               inc l
 226+ 9775 1C               inc e
 227+ 9776 1A               ld a,(de)
 228+ 9777 AE               xor (hl)
 229+ 9778 77               ld (hl),a
 230+ 9779 2C               inc l
 231+ 977A 1C               inc e
 232+ 977B 1A               ld a,(de)
 233+ 977C AE               xor (hl)
 234+ 977D 77               ld (hl),a
 235+ 977E 1C               inc e
 236+ 977F
 237+ 977F E1               pop hl
 238+ 9780
 239+ 9780 1A               ld a,(de)
 240+ 9781 AE               xor (hl)
 241+ 9782 77               ld (hl),a
 242+ 9783 2C               inc l
 243+ 9784 1C               inc e
 244+ 9785 1A               ld a,(de)
 245+ 9786 AE               xor (hl)
 246+ 9787 77               ld (hl),a
 247+ 9788 2C               inc l
 248+ 9789 1C               inc e
 249+ 978A 1A               ld a,(de)
 250+ 978B AE               xor (hl)
 251+ 978C 77               ld (hl),a
 252+ 978D 1C               inc e
 253+ 978E
 254+ 978E E1               pop hl
 255+ 978F
 256+ 978F 1A               ld a,(de)
 257+ 9790 AE               xor (hl)
 258+ 9791 77               ld (hl),a
 259+ 9792 2C               inc l
 260+ 9793 1C               inc e
 261+ 9794 1A               ld a,(de)
 262+ 9795 AE               xor (hl)
 263+ 9796 77               ld (hl),a
 264+ 9797 2C               inc l
 265+ 9798 1C               inc e
 266+ 9799 1A               ld a,(de)
 267+ 979A AE               xor (hl)
 268+ 979B 77               ld (hl),a
 269+ 979C 1C               inc e
 270+ 979D
 271+ 979D E1               pop hl
 272+ 979E
 273+ 979E 1A               ld a,(de)
 274+ 979F AE               xor (hl)
 275+ 97A0 77               ld (hl),a
 276+ 97A1 2C               inc l
 277+ 97A2 1C               inc e
 278+ 97A3 1A               ld a,(de)
 279+ 97A4 AE               xor (hl)
 280+ 97A5 77               ld (hl),a
 281+ 97A6 2C               inc l
 282+ 97A7 1C               inc e
 283+ 97A8 1A               ld a,(de)
 284+ 97A9 AE               xor (hl)
 285+ 97AA 77               ld (hl),a
 286+ 97AB 1C               inc e
 287+ 97AC
 288+ 97AC E1               pop hl
 289+ 97AD
 290+ 97AD 1A               ld a,(de)
 291+ 97AE AE               xor (hl)
 292+ 97AF 77               ld (hl),a
 293+ 97B0 2C               inc l
 294+ 97B1 1C               inc e
 295+ 97B2 1A               ld a,(de)
 296+ 97B3 AE               xor (hl)
 297+ 97B4 77               ld (hl),a
 298+ 97B5 2C               inc l
 299+ 97B6 1C               inc e
 300+ 97B7 1A               ld a,(de)
 301+ 97B8 AE               xor (hl)
 302+ 97B9 77               ld (hl),a
 303+ 97BA 1C               inc e
 304+ 97BB
 305+ 97BB E1               pop hl
 306+ 97BC
 307+ 97BC 1A               ld a,(de)
 308+ 97BD AE               xor (hl)
 309+ 97BE 77               ld (hl),a
 310+ 97BF 2C               inc l
 311+ 97C0 1C               inc e
 312+ 97C1 1A               ld a,(de)
 313+ 97C2 AE               xor (hl)
 314+ 97C3 77               ld (hl),a
 315+ 97C4 2C               inc l
 316+ 97C5 1C               inc e
 317+ 97C6 1A               ld a,(de)
 318+ 97C7 AE               xor (hl)
 319+ 97C8 77               ld (hl),a
 320+ 97C9 1C               inc e
 321+ 97CA
 322+ 97CA E1               pop hl
 323+ 97CB
 324+ 97CB 1A               ld a,(de)
 325+ 97CC AE               xor (hl)
 326+ 97CD 77               ld (hl),a
 327+ 97CE 2C               inc l
 328+ 97CF 1C               inc e
 329+ 97D0 1A               ld a,(de)
 330+ 97D1 AE               xor (hl)
 331+ 97D2 77               ld (hl),a
 332+ 97D3 2C               inc l
 333+ 97D4 1C               inc e
 334+ 97D5 1A               ld a,(de)
 335+ 97D6 AE               xor (hl)
 336+ 97D7 77               ld (hl),a
 337+ 97D8 1C               inc e
 338+ 97D9
 339+ 97D9 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 340+ 97DD ED 7B 39 8C      ld sp,(Stack)
 341+ 97E1 C9               ret
 342+ 97E2
 343+ 97E2              Pinta_lento_3Chars
 344+ 97E2
 345+ 97E2 E1           1 pop hl
 346+ 97E3
 347+ 97E3 1A               ld a,(de)
 348+ 97E4 AE               xor (hl)
 349+ 97E5 77               ld (hl),a
 350+ 97E6 2C               inc l
 351+ 97E7 1C               inc e
 352+ 97E8 1A               ld a,(de)
 353+ 97E9 AE               xor (hl)
 354+ 97EA 77               ld (hl),a
 355+ 97EB 2C               inc l
 356+ 97EC 1C               inc e
 357+ 97ED 1A               ld a,(de)
 358+ 97EE AE               xor (hl)
 359+ 97EF 77               ld (hl),a
 360+ 97F0 1C               inc e
 361+ 97F1
 362+ 97F1 10 EF            djnz 1B
 363+ 97F3
 364+ 97F3 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 365+ 97F7 ED 7B 39 8C      ld sp,(Stack)
 366+ 97FB C9               ret
 367+ 97FC
 368+ 97FC              ; -----------------------------------------------------------------------
 369+ 97FC              ; -----------------------------------------------------------------------
 370+ 97FC              ; -----------------------------------------------------------------------
 371+ 97FC
 372+ 97FC
 373+ 97FC              Desaparece_por_la_derecha
 374+ 97FC
 375+ 97FC              ;   1 o 2 Chars ???
 376+ 97FC
 377+ 97FC C2 D3 98         jp nz,Print_1Char_right                                 ; "NZ" indica Columna "$1f".
 378+ 97FF
 379+ 97FF              Print_2Chars_right
 380+ 97FF
 381+ 97FF              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 382+ 97FF              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 383+ 97FF              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 384+ 97FF
 385+ 97FF              ;   16 scanlines o menos ???
 386+ 97FF
 387+ 97FF 78               ld a,b
 388+ 9800 FE 10            cp 16
 389+ 9802 C2 BD 98         jp nz,Pinta_lento_2Chars_right                         ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 390+ 9805
 391+ 9805              ;   Rutinas:
 392+ 9805
 393+ 9805              Pinta_rapido_2Chars_right                                  ;   1520 t/states.
 394+ 9805
 395+ 9805 1A               ld a,(de)
 396+ 9806 AE               xor (hl)
 397+ 9807 77               ld (hl),a
 398+ 9808 2C               inc l
 399+ 9809 1C               inc e
 400+ 980A 1A               ld a,(de)
 401+ 980B AE               xor (hl)
 402+ 980C 77               ld (hl),a
 403+ 980D 1C               inc e
 404+ 980E 1C               inc e
 405+ 980F
 406+ 980F E1               pop hl
 407+ 9810
 408+ 9810 1A               ld a,(de)
 409+ 9811 AE               xor (hl)
 410+ 9812 77               ld (hl),a
 411+ 9813 2C               inc l
 412+ 9814 1C               inc e
 413+ 9815 1A               ld a,(de)
 414+ 9816 AE               xor (hl)
 415+ 9817 77               ld (hl),a
 416+ 9818 1C               inc e
 417+ 9819 1C               inc e
 418+ 981A
 419+ 981A E1               pop hl
 420+ 981B
 421+ 981B 1A               ld a,(de)
 422+ 981C AE               xor (hl)
 423+ 981D 77               ld (hl),a
 424+ 981E 2C               inc l
 425+ 981F 1C               inc e
 426+ 9820 1A               ld a,(de)
 427+ 9821 AE               xor (hl)
 428+ 9822 77               ld (hl),a
 429+ 9823 1C               inc e
 430+ 9824 1C               inc e
 431+ 9825
 432+ 9825 E1               pop hl
 433+ 9826
 434+ 9826 1A               ld a,(de)
 435+ 9827 AE               xor (hl)
 436+ 9828 77               ld (hl),a
 437+ 9829 2C               inc l
 438+ 982A 1C               inc e
 439+ 982B 1A               ld a,(de)
 440+ 982C AE               xor (hl)
 441+ 982D 77               ld (hl),a
 442+ 982E 1C               inc e
 443+ 982F 1C               inc e
 444+ 9830
 445+ 9830 E1               pop hl
 446+ 9831
 447+ 9831 1A               ld a,(de)
 448+ 9832 AE               xor (hl)
 449+ 9833 77               ld (hl),a
 450+ 9834 2C               inc l
 451+ 9835 1C               inc e
 452+ 9836 1A               ld a,(de)
 453+ 9837 AE               xor (hl)
 454+ 9838 77               ld (hl),a
 455+ 9839 1C               inc e
 456+ 983A 1C               inc e
 457+ 983B
 458+ 983B E1               pop hl
 459+ 983C
 460+ 983C 1A               ld a,(de)
 461+ 983D AE               xor (hl)
 462+ 983E 77               ld (hl),a
 463+ 983F 2C               inc l
 464+ 9840 1C               inc e
 465+ 9841 1A               ld a,(de)
 466+ 9842 AE               xor (hl)
 467+ 9843 77               ld (hl),a
 468+ 9844 1C               inc e
 469+ 9845 1C               inc e
 470+ 9846
 471+ 9846 E1               pop hl
 472+ 9847
 473+ 9847 1A               ld a,(de)
 474+ 9848 AE               xor (hl)
 475+ 9849 77               ld (hl),a
 476+ 984A 2C               inc l
 477+ 984B 1C               inc e
 478+ 984C 1A               ld a,(de)
 479+ 984D AE               xor (hl)
 480+ 984E 77               ld (hl),a
 481+ 984F 1C               inc e
 482+ 9850 1C               inc e
 483+ 9851
 484+ 9851 E1               pop hl
 485+ 9852
 486+ 9852 1A               ld a,(de)
 487+ 9853 AE               xor (hl)
 488+ 9854 77               ld (hl),a
 489+ 9855 2C               inc l
 490+ 9856 1C               inc e
 491+ 9857 1A               ld a,(de)
 492+ 9858 AE               xor (hl)
 493+ 9859 77               ld (hl),a
 494+ 985A 1C               inc e
 495+ 985B 1C               inc e
 496+ 985C
 497+ 985C E1               pop hl
 498+ 985D
 499+ 985D 1A               ld a,(de)
 500+ 985E AE               xor (hl)
 501+ 985F 77               ld (hl),a
 502+ 9860 2C               inc l
 503+ 9861 1C               inc e
 504+ 9862 1A               ld a,(de)
 505+ 9863 AE               xor (hl)
 506+ 9864 77               ld (hl),a
 507+ 9865 1C               inc e
 508+ 9866 1C               inc e
 509+ 9867
 510+ 9867 E1               pop hl
 511+ 9868
 512+ 9868 1A               ld a,(de)
 513+ 9869 AE               xor (hl)
 514+ 986A 77               ld (hl),a
 515+ 986B 2C               inc l
 516+ 986C 1C               inc e
 517+ 986D 1A               ld a,(de)
 518+ 986E AE               xor (hl)
 519+ 986F 77               ld (hl),a
 520+ 9870 1C               inc e
 521+ 9871 1C               inc e
 522+ 9872
 523+ 9872 E1               pop hl
 524+ 9873
 525+ 9873 1A               ld a,(de)
 526+ 9874 AE               xor (hl)
 527+ 9875 77               ld (hl),a
 528+ 9876 2C               inc l
 529+ 9877 1C               inc e
 530+ 9878 1A               ld a,(de)
 531+ 9879 AE               xor (hl)
 532+ 987A 77               ld (hl),a
 533+ 987B 1C               inc e
 534+ 987C 1C               inc e
 535+ 987D
 536+ 987D E1               pop hl
 537+ 987E
 538+ 987E 1A               ld a,(de)
 539+ 987F AE               xor (hl)
 540+ 9880 77               ld (hl),a
 541+ 9881 2C               inc l
 542+ 9882 1C               inc e
 543+ 9883 1A               ld a,(de)
 544+ 9884 AE               xor (hl)
 545+ 9885 77               ld (hl),a
 546+ 9886 1C               inc e
 547+ 9887 1C               inc e
 548+ 9888
 549+ 9888 E1               pop hl
 550+ 9889
 551+ 9889 1A               ld a,(de)
 552+ 988A AE               xor (hl)
 553+ 988B 77               ld (hl),a
 554+ 988C 2C               inc l
 555+ 988D 1C               inc e
 556+ 988E 1A               ld a,(de)
 557+ 988F AE               xor (hl)
 558+ 9890 77               ld (hl),a
 559+ 9891 1C               inc e
 560+ 9892 1C               inc e
 561+ 9893
 562+ 9893 E1               pop hl
 563+ 9894
 564+ 9894 1A               ld a,(de)
 565+ 9895 AE               xor (hl)
 566+ 9896 77               ld (hl),a
 567+ 9897 2C               inc l
 568+ 9898 1C               inc e
 569+ 9899 1A               ld a,(de)
 570+ 989A AE               xor (hl)
 571+ 989B 77               ld (hl),a
 572+ 989C 1C               inc e
 573+ 989D 1C               inc e
 574+ 989E
 575+ 989E E1               pop hl
 576+ 989F
 577+ 989F 1A               ld a,(de)
 578+ 98A0 AE               xor (hl)
 579+ 98A1 77               ld (hl),a
 580+ 98A2 2C               inc l
 581+ 98A3 1C               inc e
 582+ 98A4 1A               ld a,(de)
 583+ 98A5 AE               xor (hl)
 584+ 98A6 77               ld (hl),a
 585+ 98A7 1C               inc e
 586+ 98A8 1C               inc e
 587+ 98A9
 588+ 98A9 E1               pop hl
 589+ 98AA
 590+ 98AA 1A               ld a,(de)
 591+ 98AB AE               xor (hl)
 592+ 98AC 77               ld (hl),a
 593+ 98AD 2C               inc l
 594+ 98AE 1C               inc e
 595+ 98AF 1A               ld a,(de)
 596+ 98B0 AE               xor (hl)
 597+ 98B1 77               ld (hl),a
 598+ 98B2 1C               inc e
 599+ 98B3 1C               inc e
 600+ 98B4
 601+ 98B4 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 602+ 98B8 ED 7B 39 8C      ld sp,(Stack)
 603+ 98BC C9               ret
 604+ 98BD
 605+ 98BD              Pinta_lento_2Chars_right
 606+ 98BD
 607+ 98BD E1           2 pop hl
 608+ 98BE
 609+ 98BE 1A               ld a,(de)
 610+ 98BF AE               xor (hl)
 611+ 98C0 77               ld (hl),a
 612+ 98C1 2C               inc l
 613+ 98C2 1C               inc e
 614+ 98C3 1A               ld a,(de)
 615+ 98C4 AE               xor (hl)
 616+ 98C5 77               ld (hl),a
 617+ 98C6 1C               inc e
 618+ 98C7 1C               inc e
 619+ 98C8
 620+ 98C8 10 F3            djnz 2B
 621+ 98CA
 622+ 98CA ED 73 5B 8C      ld (Scanlines_album_SP),sp
 623+ 98CE ED 7B 39 8C      ld sp,(Stack)
 624+ 98D2 C9               ret
 625+ 98D3
 626+ 98D3              ; -----------------------------------------------------------------------
 627+ 98D3              ; -----------------------------------------------------------------------
 628+ 98D3
 629+ 98D3              Print_1Char_right
 630+ 98D3
 631+ 98D3
 632+ 98D3              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 633+ 98D3              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 634+ 98D3              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 635+ 98D3
 636+ 98D3              ;   16 scanlines o menos ???
 637+ 98D3
 638+ 98D3 78               ld a,b
 639+ 98D4 FE 10            cp 16
 640+ 98D6 C2 51 99         jp nz,Pinta_lento_1Char_right                          ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 641+ 98D9
 642+ 98D9              ;   Rutinas:
 643+ 98D9
 644+ 98D9              Pinta_rapido_1Char_right                                  ;   1520 t/states.
 645+ 98D9
 646+ 98D9 1A               ld a,(de)
 647+ 98DA AE               xor (hl)
 648+ 98DB 77               ld (hl),a
 649+ 98DC 1C               inc e
 650+ 98DD 1C               inc e
 651+ 98DE 1C               inc e
 652+ 98DF
 653+ 98DF E1               pop hl
 654+ 98E0
 655+ 98E0 1A               ld a,(de)
 656+ 98E1 AE               xor (hl)
 657+ 98E2 77               ld (hl),a
 658+ 98E3 1C               inc e
 659+ 98E4 1C               inc e
 660+ 98E5 1C               inc e
 661+ 98E6
 662+ 98E6 E1               pop hl
 663+ 98E7
 664+ 98E7 1A               ld a,(de)
 665+ 98E8 AE               xor (hl)
 666+ 98E9 77               ld (hl),a
 667+ 98EA 1C               inc e
 668+ 98EB 1C               inc e
 669+ 98EC 1C               inc e
 670+ 98ED
 671+ 98ED E1               pop hl
 672+ 98EE
 673+ 98EE 1A               ld a,(de)
 674+ 98EF AE               xor (hl)
 675+ 98F0 77               ld (hl),a
 676+ 98F1 1C               inc e
 677+ 98F2 1C               inc e
 678+ 98F3 1C               inc e
 679+ 98F4
 680+ 98F4 E1               pop hl
 681+ 98F5
 682+ 98F5 1A               ld a,(de)
 683+ 98F6 AE               xor (hl)
 684+ 98F7 77               ld (hl),a
 685+ 98F8 1C               inc e
 686+ 98F9 1C               inc e
 687+ 98FA 1C               inc e
 688+ 98FB
 689+ 98FB E1               pop hl
 690+ 98FC
 691+ 98FC 1A               ld a,(de)
 692+ 98FD AE               xor (hl)
 693+ 98FE 77               ld (hl),a
 694+ 98FF 1C               inc e
 695+ 9900 1C               inc e
 696+ 9901 1C               inc e
 697+ 9902
 698+ 9902 E1               pop hl
 699+ 9903
 700+ 9903 1A               ld a,(de)
 701+ 9904 AE               xor (hl)
 702+ 9905 77               ld (hl),a
 703+ 9906 1C               inc e
 704+ 9907 1C               inc e
 705+ 9908 1C               inc e
 706+ 9909
 707+ 9909 E1               pop hl
 708+ 990A
 709+ 990A 1A               ld a,(de)
 710+ 990B AE               xor (hl)
 711+ 990C 77               ld (hl),a
 712+ 990D 1C               inc e
 713+ 990E 1C               inc e
 714+ 990F 1C               inc e
 715+ 9910
 716+ 9910 E1               pop hl
 717+ 9911
 718+ 9911 1A               ld a,(de)
 719+ 9912 AE               xor (hl)
 720+ 9913 77               ld (hl),a
 721+ 9914 1C               inc e
 722+ 9915 1C               inc e
 723+ 9916 1C               inc e
 724+ 9917
 725+ 9917 E1               pop hl
 726+ 9918
 727+ 9918 1A               ld a,(de)
 728+ 9919 AE               xor (hl)
 729+ 991A 77               ld (hl),a
 730+ 991B 1C               inc e
 731+ 991C 1C               inc e
 732+ 991D 1C               inc e
 733+ 991E
 734+ 991E E1               pop hl
 735+ 991F
 736+ 991F 1A               ld a,(de)
 737+ 9920 AE               xor (hl)
 738+ 9921 77               ld (hl),a
 739+ 9922 1C               inc e
 740+ 9923 1C               inc e
 741+ 9924 1C               inc e
 742+ 9925
 743+ 9925 E1               pop hl
 744+ 9926
 745+ 9926 1A               ld a,(de)
 746+ 9927 AE               xor (hl)
 747+ 9928 77               ld (hl),a
 748+ 9929 1C               inc e
 749+ 992A 1C               inc e
 750+ 992B 1C               inc e
 751+ 992C
 752+ 992C E1               pop hl
 753+ 992D
 754+ 992D 1A               ld a,(de)
 755+ 992E AE               xor (hl)
 756+ 992F 77               ld (hl),a
 757+ 9930 1C               inc e
 758+ 9931 1C               inc e
 759+ 9932 1C               inc e
 760+ 9933
 761+ 9933 E1               pop hl
 762+ 9934
 763+ 9934 1A               ld a,(de)
 764+ 9935 AE               xor (hl)
 765+ 9936 77               ld (hl),a
 766+ 9937 1C               inc e
 767+ 9938 1C               inc e
 768+ 9939 1C               inc e
 769+ 993A
 770+ 993A E1               pop hl
 771+ 993B
 772+ 993B 1A               ld a,(de)
 773+ 993C AE               xor (hl)
 774+ 993D 77               ld (hl),a
 775+ 993E 1C               inc e
 776+ 993F 1C               inc e
 777+ 9940 1C               inc e
 778+ 9941
 779+ 9941 E1               pop hl
 780+ 9942
 781+ 9942 1A               ld a,(de)
 782+ 9943 AE               xor (hl)
 783+ 9944 77               ld (hl),a
 784+ 9945 1C               inc e
 785+ 9946 1C               inc e
 786+ 9947 1C               inc e
 787+ 9948
 788+ 9948 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 789+ 994C ED 7B 39 8C      ld sp,(Stack)
 790+ 9950 C9               ret
 791+ 9951
 792+ 9951              Pinta_lento_1Char_right
 793+ 9951
 794+ 9951 E1           3 pop hl
 795+ 9952
 796+ 9952 1A               ld a,(de)
 797+ 9953 AE               xor (hl)
 798+ 9954 77               ld (hl),a
 799+ 9955 1C               inc e
 800+ 9956 1C               inc e
 801+ 9957 1C               inc e
 802+ 9958
 803+ 9958 10 F7            djnz 3B
 804+ 995A
 805+ 995A ED 73 5B 8C      ld (Scanlines_album_SP),sp
 806+ 995E ED 7B 39 8C      ld sp,(Stack)
 807+ 9962 C9               ret
# file closed: Rutinas_de_pintado.asm
2327  9963              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9963              ; ******************************************************************************************************************************************************************************************
   2+ 9963              ;
   3+ 9963              ; 26/06/23
   4+ 9963              ;
   5+ 9963              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9963
   7+ 9963              Draw
   8+ 9963
   9+ 9963 CD 09 9C     	call Prepara_draw
  10+ 9966 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9967 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9968 28 05        	jr z,2F
  13+ 996A
  14+ 996A 3A 09 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 996D 18 0C        	jr 1F
  16+ 996F
  17+ 996F 2A 07 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9972 22 FA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9975 CD 01 9B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9978              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9978
  22+ 9978 CD A2 A0     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 997B
  24+ 997B 3A F7 8B     1 ld a,(Ctrl_0)
  25+ 997E CB 6F        	bit 5,a
  26+ 9980 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9982
  28+ 9982 CD 97 99     	call Comprueba_limite_horizontal
  29+ 9985 CD 27 9A     	call Comprueba_limite_vertical
  30+ 9988
  31+ 9988              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9988              ; -----------------------
  33+ 9988              ; -----------------------
  34+ 9988              ; -----------------------
  35+ 9988
  36+ 9988 CD 7D 9B     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 998B CD B4 9B     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 998E
  39+ 998E 3A F7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9991 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9993 32 F7 8B     	ld (Ctrl_0),a
  42+ 9996
  43+ 9996 C9           	ret
  44+ 9997
  45+ 9997              ; *******************************************************************************************************************************************************************************************
  46+ 9997              ;	21/01/23
  47+ 9997              ;
  48+ 9997              ; 	Comprueba_limite_horizontal.
  49+ 9997              ;
  50+ 9997              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9997              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9997              ;
  53+ 9997              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9997              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9997              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9997              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9997
  58+ 9997
  59+ 9997
  60+ 9997 3A F7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 999A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 999C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 999E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 99A0 32 F7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 99A3 18 09            jr 6F
  66+ 99A5 CB 5F        1 bit 3,a
  67+ 99A7 28 0A            jr z,2F
  68+ 99A9 E6 F7            and $f7
  69+ 99AB 32 F7 8B         ld (Ctrl_0),a
  70+ 99AE CD 01 9B     6 call Inicializacion
  71+ 99B1 18 5B            jr 5F
  72+ 99B3 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 99B4
  74+ 99B4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 99B4              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 99B4
  77+ 99B4 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 99B5 2A 0B 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 99B8 CD 8B 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 99BB 67           	ld h,a
  81+ 99BC EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 99BD CD 8B 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 99C0 67           	ld h,a
  84+ 99C1 A7           	and a
  85+ 99C2 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 99C4 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 99C5 3A 09 8C     	ld a,(Cuad_objeto)
  88+ 99C8 FE 02        	cp 2
  89+ 99CA 38 1E        	jr c,3F
  90+ 99CC 28 1C        	jr z,3F
  91+ 99CE 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 99CF 28 23            jr z,7F
  93+ 99D1 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 99D3 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 99D5 E1           	pop hl
  96+ 99D6
  97+ 99D6              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 99D6              ; _para indicar con E="2" en caso necesario.
  99+ 99D6
 100+ 99D6 E5               push hl
 101+ 99D7 C5               push bc
 102+ 99D8 CD 8B 95     	call calcula_tercio
 103+ 99DB FE 01        	cp 1
 104+ 99DD 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 99DF CD 0F 9A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 99E2 28 26            jr z,9F
 107+ 99E4 38 24            jr c,9F
 108+ 99E6 1E 00        11 ld e,0
 109+ 99E8 18 22            jr 8F
 110+ 99EA 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 99EB 28 07        	jr z, 7F
 112+ 99ED 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 99EF 1E 00         	ld e,0
 114+ 99F1 E1           	pop hl
 115+ 99F2 18 04        	jr 4F
 116+ 99F4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 99F6 18 15            jr 10F
 118+ 99F8
 119+ 99F8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 99F8              ; _para indicar con E="2" en caso necesario.
 121+ 99F8
 122+ 99F8 E5           4 push hl
 123+ 99F9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 99FA CD 8B 95     	call calcula_tercio
 125+ 99FD FE 01        	cp 1
 126+ 99FF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9A01 CD 0F 9A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9A04 28 04            jr z,9F
 129+ 9A06 30 02            jr nc,9F
 130+ 9A08 18 02        	jr 8F
 131+ 9A0A 1E 02        9 ld e,2
 132+ 9A0C C1           8 pop bc
 133+ 9A0D E1           10 pop hl
 134+ 9A0E C9           5 ret
 135+ 9A0F
 136+ 9A0F              ; --------------------
 137+ 9A0F              ;
 138+ 9A0F              ; 25/08/22
 139+ 9A0F
 140+ 9A0F CD 8B 95     Comprueba_centro call calcula_tercio
 141+ 9A12 67               ld h,a
 142+ 9A13 08           	ex af,af
 143+ 9A14 FE 02        	cp 2
 144+ 9A16 38 07        	jr c,1F
 145+ 9A18 28 05        	jr z,1F
 146+ 9A1A 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9A1D 18 03        	jr 2F
 148+ 9A1F 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9A22 08           2 ex af,af
 150+ 9A23 A7               and a
 151+ 9A24 ED 42            sbc hl,bc
 152+ 9A26 C9               ret
 153+ 9A27
 154+ 9A27              ; *********************************************************************************************************************************************************************************************
 155+ 9A27              ;
 156+ 9A27              ;   16/8/22
 157+ 9A27              ;
 158+ 9A27              ;	Comprueba_limite_vertical
 159+ 9A27              ;
 160+ 9A27              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9A27              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9A27              ;
 163+ 9A27
 164+ 9A27 2A FA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9A2A 7D           	ld a,l
 166+ 9A2B E6 1F        	and $1F
 167+ 9A2D 57           	ld d,a
 168+ 9A2E 3A 0D 8C     	ld a,(Limite_vertical)
 169+ 9A31 BA           	cp d 											; Límite - Posición.
 170+ 9A32 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9A33 3A 09 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9A36 CB 47        	bit 0,a
 173+ 9A38 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9A3A
 175+ 9A3A              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9A3A
 177+ 9A3A 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9A3B 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9A3D
 180+ 9A3D              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9A3D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9A3D
 183+ 9A3D 3A EB 8B         ld a,(Coordenada_X)
 184+ 9A40 16 0F            ld d,Centro_izquierda
 185+ 9A42 A7               and a
 186+ 9A43 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9A44 28 1E            jr z,3F
 188+ 9A46 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9A48              ;                                                    ; _salimos sin modificar nada.
 190+ 9A48 18 0E            jr 2F
 191+ 9A4A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9A4B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9A4D
 194+ 9A4D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9A4D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9A4D
 197+ 9A4D 3A EB 8B         ld a,(Coordenada_X)
 198+ 9A50 16 10            ld d,Centro_derecha
 199+ 9A52 A7               and a
 200+ 9A53 92               sub d
 201+ 9A54 28 0E            jr z,3F
 202+ 9A56 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9A58              ;                                                    ; _salimos sin modificar nada.
 204+ 9A58 CB 43        2 bit 0,e
 205+ 9A5A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9A5C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9A5D CD F1 9A         call Modificaccionne
 208+ 9A60 C1           	pop bc
 209+ 9A61 CD 01 9B         call Inicializacion
 210+ 9A64 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9A65
 212+ 9A65              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9A65
 214+ 9A65 C5           4 push bc
 215+ 9A66 01 F9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9A69 0A           	ld a,(bc)
 217+ 9A6A 3D           	dec a
 218+ 9A6B 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9A6C 7D           	ld a,l
 220+ 9A6D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9A6E CB 47        	bit 0,a
 222+ 9A70 28 03        	jr z,5F
 223+ 9A72 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9A73 18 2E        	jr 7F
 225+ 9A75
 226+ 9A75              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9A75
 228+ 9A75 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9A76 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9A77 3A F7 8B     	ld a,(Ctrl_0)
 231+ 9A7A CB 4F        	bit 1,a
 232+ 9A7C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9A7E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9A7F
 235+ 9A7F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9A7F
 237+ 9A7F 1C               inc e
 238+ 9A80 1D               dec e
 239+ 9A81 20 07            jr nz,12F
 240+ 9A83 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9A84 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9A85 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9A88 18 44        13 jr 9F
 244+ 9A8A CB 43        12 bit 0,e
 245+ 9A8C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9A8E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9A8E C1           	pop bc
 248+ 9A8F 18 D3        	jr 3B
 249+ 9A91 80           14 add b
 250+ 9A92 6F               ld l,a
 251+ 9A93 22 FA 8B     	ld (Posicion_actual),hl
 252+ 9A96 CD F1 9A         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9A99 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9A9B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9A9D 32 F7 8B         ld (Ctrl_0),a
 256+ 9AA0 F1           	pop af
 257+ 9AA1 18 2B        	jr 9F
 258+ 9AA3
 259+ 9AA3              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9AA3
 261+ 9AA3 F5           7 push af
 262+ 9AA4 3A F7 8B     	ld a,(Ctrl_0)
 263+ 9AA7 CB 47        	bit 0,a
 264+ 9AA9 20 1D        	jr nz,8F
 265+ 9AAB F1           	pop af
 266+ 9AAC
 267+ 9AAC              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9AAC
 269+ 9AAC 1C           	inc e
 270+ 9AAD 1D               dec e
 271+ 9AAE 20 07            jr nz,10F
 272+ 9AB0 90           	sub b
 273+ 9AB1 6F               ld l,a
 274+ 9AB2 22 FA 8B     	ld (Posicion_actual),hl
 275+ 9AB5 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9AB7              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9AB7 CB 43        10 bit 0,e
 278+ 9AB9 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9ABB              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9ABB C1           	pop bc
 281+ 9ABC 18 A6        	jr 3B
 282+ 9ABE 90           16 sub b
 283+ 9ABF 6F               ld l,a
 284+ 9AC0 22 FA 8B     	ld (Posicion_actual),hl
 285+ 9AC3 CD F1 9A         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9AC6 18 06            jr 9F
 287+ 9AC8 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9ACA 32 F7 8B         ld (Ctrl_0),a
 289+ 9ACD F1           	pop af
 290+ 9ACE C1           9 pop bc
 291+ 9ACF 1E 00        	ld e,0
 292+ 9AD1 CD 01 9B         call Inicializacion
 293+ 9AD4 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9AD5 08           	ex af,af
 295+ 9AD6 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9AD7 18 8B            jr 3B
 297+ 9AD9
 298+ 9AD9              ; --------------------
 299+ 9AD9
 300+ 9AD9 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9ADB CD 24 9C     1 call PreviousScan
 302+ 9ADE 10 FB            djnz 1B
 303+ 9AE0 22 FA 8B     	ld (Posicion_actual),hl
 304+ 9AE3 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9AE4 C9           	ret
 306+ 9AE5
 307+ 9AE5              ; --------------------
 308+ 9AE5
 309+ 9AE5 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9AE7 CD 15 9C     1 call NextScan
 311+ 9AEA 10 FB            djnz 1B
 312+ 9AEC 22 FA 8B     	ld (Posicion_actual),hl
 313+ 9AEF AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9AF0 C9           	ret
 315+ 9AF1
 316+ 9AF1              ; --------------------
 317+ 9AF1              ;
 318+ 9AF1              ;	22/01/23
 319+ 9AF1              ;
 320+ 9AF1              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9AF1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9AF1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9AF1
 324+ 9AF1
 325+ 9AF1              Modificaccionne
 326+ 9AF1
 327+ 9AF1 3A 09 8C     	ld a,(Cuad_objeto)
 328+ 9AF4 FE 02        	cp 2
 329+ 9AF6 CC D9 9A         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9AF9 DC D9 9A         call c,Modifica_Pos_actual
 331+ 9AFC C8           	ret z
 332+ 9AFD CD E5 9A         call Modifica_Pos_actual2
 333+ 9B00 C9               ret
 334+ 9B01
 335+ 9B01              ; *************************************************************************************************************************************************************************************************
 336+ 9B01              ;
 337+ 9B01              ;	13/8/22
 338+ 9B01              ;
 339+ 9B01              ;	Inicializacion
 340+ 9B01              ;
 341+ 9B01              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9B01              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9B01              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9B01              ;
 345+ 9B01              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9B01              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9B01              ;	_ desaparece/aparece.
 348+ 9B01
 349+ 9B01              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9B01              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9B01              ;
 352+ 9B01              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9B01              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9B01              ; 		   [E] ="0"
 355+ 9B01
 356+ 9B01              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9B01
 358+ 9B01 CD 8B 95     Inicializacion call calcula_tercio
 359+ 9B04 28 36        	jr z,primit
 360+ 9B06 E6 02        	and 2
 361+ 9B08 20 07        	jr nz,segmit
 362+ 9B0A 7D           	ld a,l
 363+ 9B0B FE 7F        	cp $7f
 364+ 9B0D 38 2D        	jr c,primit
 365+ 9B0F 28 2B        	jr z,primit
 366+ 9B11 CD 77 9B     segmit call column
 367+ 9B14 38 13        	jr c,tercuad
 368+ 9B16 3E 04        cuarcuad ld a,4
 369+ 9B18 32 09 8C     	ld (Cuad_objeto),a
 370+ 9B1B 21 20 48     	ld hl,$4820
 371+ 9B1E 22 0B 8C     	ld (Limite_horizontal),hl
 372+ 9B21 21 0D 8C     	ld hl,Limite_vertical
 373+ 9B24 36 0D        	ld (hl),$0d
 374+ 9B26 08           	ex af,af
 375+ 9B27 18 3C        	jr 1F
 376+ 9B29              tercuad
 377+ 9B29 3E 03        	ld a,3
 378+ 9B2B 32 09 8C     	ld (Cuad_objeto),a
 379+ 9B2E 21 20 48     	ld hl,$4820
 380+ 9B31 22 0B 8C     	ld (Limite_horizontal),hl
 381+ 9B34 21 0D 8C     	ld hl,Limite_vertical
 382+ 9B37 36 12        	ld (hl),$12
 383+ 9B39 08           	ex af,af
 384+ 9B3A 18 29        	jr 1F
 385+ 9B3C CD 77 9B     primit call column
 386+ 9B3F 38 13        	jr c, primcuad
 387+ 9B41              segcuad
 388+ 9B41 3E 02        	ld a,2
 389+ 9B43 32 09 8C     	ld (Cuad_objeto),a
 390+ 9B46 21 C0 4F     	ld hl,$4fc0
 391+ 9B49 22 0B 8C     	ld (Limite_horizontal),hl
 392+ 9B4C 21 0D 8C     	ld hl,Limite_vertical
 393+ 9B4F 36 0D        	ld (hl),$0d
 394+ 9B51 08           	ex af,af
 395+ 9B52 18 11        	jr 1F
 396+ 9B54              primcuad
 397+ 9B54 3E 01        	ld a,1
 398+ 9B56 32 09 8C     	ld (Cuad_objeto),a
 399+ 9B59 21 C0 4F     	ld hl,$4fc0
 400+ 9B5C 22 0B 8C     	ld (Limite_horizontal),hl
 401+ 9B5F 21 0D 8C     	ld hl,Limite_vertical
 402+ 9B62 36 12        	ld (hl),$12
 403+ 9B64 08           	ex af,af
 404+ 9B65
 405+ 9B65 C5           1 push bc
 406+ 9B66 E5           	push hl
 407+ 9B67 D5           	push de
 408+ 9B68
 409+ 9B68 2A FA 8B     	ld hl,(Posicion_actual)
 410+ 9B6B CD A9 95     	call Genera_coordenadas
 411+ 9B6E
 412+ 9B6E D1           	pop de
 413+ 9B6F E1           	pop hl
 414+ 9B70 C1           	pop bc
 415+ 9B71
 416+ 9B71 21 F7 8B     	ld hl,Ctrl_0
 417+ 9B74 CB EE        	set 5,(hl)
 418+ 9B76 C9           	ret
 419+ 9B77
 420+ 9B77              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9B77
 422+ 9B77              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9B77              ;
 424+ 9B77              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9B77
 426+ 9B77 7D           column ld a,l
 427+ 9B78 E6 1F        	and $1f
 428+ 9B7A FE 10         	cp $10
 429+ 9B7C C9            	ret
 430+ 9B7D
 431+ 9B7D              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9B7D              ;
 433+ 9B7D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9B7D              ;
 435+ 9B7D              ; 14/12/22
 436+ 9B7D              ;
 437+ 9B7D              ;	Modifica: A y BC.
 438+ 9B7D
 439+ 9B7D 3A 09 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9B80 E6 01        	and 1
 441+ 9B82 28 17        	jr z,1F
 442+ 9B84
 443+ 9B84              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9B84
 445+ 9B84 3A EB 8B     	ld a,(Coordenada_X)
 446+ 9B87 47           	ld b,a
 447+ 9B88 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9B89 79           	ld a,c
 449+ 9B8A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9B8B 38 08        	jr c,2F
 451+ 9B8D 47           	ld b,a
 452+ 9B8E 79           	ld a,c
 453+ 9B8F 90           	sub b
 454+ 9B90 32 0A 8C     	ld (Columnas),a
 455+ 9B93 18 1B        	jr 4F
 456+ 9B95 79           2 ld a,c
 457+ 9B96 32 0A 8C     	ld (Columnas),a
 458+ 9B99 18 15        	jr 4F
 459+ 9B9B
 460+ 9B9B              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9B9B
 462+ 9B9B 3A EB 8B     1 ld a,(Coordenada_X)
 463+ 9B9E 81           	add c
 464+ 9B9F 3D           	dec a
 465+ 9BA0 D6 1F        	sub $1f
 466+ 9BA2 38 08        	jr c,3F
 467+ 9BA4 47           	ld b,a
 468+ 9BA5 79           	ld a,c
 469+ 9BA6 90           	sub b
 470+ 9BA7 32 0A 8C     	ld (Columnas),a
 471+ 9BAA 18 04        	jr 4F
 472+ 9BAC 79           3 ld a,c
 473+ 9BAD 32 0A 8C     	ld (Columnas),a
 474+ 9BB0 D9           4 exx
 475+ 9BB1 4F           	ld c,a
 476+ 9BB2 D9           	exx
 477+ 9BB3 C9            ret
 478+ 9BB4
 479+ 9BB4              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9BB4              ;
 481+ 9BB4              ;   19/7/23
 482+ 9BB4              ;
 483+ 9BB4              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9BB4              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9BB4              ;
 486+ 9BB4              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9BB4              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9BB4              ;
 489+ 9BB4              ;	DESTRUYE: HL,B Y A.
 490+ 9BB4
 491+ 9BB4 3A 09 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9BB7 FE 02        	cp 2
 493+ 9BB9 38 18        	jr c,1F
 494+ 9BBB 28 16        	jr z,1F
 495+ 9BBD E6 01        	and 1
 496+ 9BBF 28 0D        	jr z,3F
 497+ 9BC1
 498+ 9BC1              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9BC1
 500+ 9BC1 CD FD 9B     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9BC4
 502+ 9BC4 7D           9 ld a,l
 503+ 9BC5 E6 1F        	and $1f
 504+ 9BC7 28 2A        	jr z,7F
 505+ 9BC9 2B           	dec hl
 506+ 9BCA 10 F8        	djnz 9B
 507+ 9BCC 18 25        	jr 7F
 508+ 9BCE
 509+ 9BCE              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9BCE
 511+ 9BCE 2A FA 8B     3 ld hl,(Posicion_actual)
 512+ 9BD1 18 20        	jr 7F
 513+ 9BD3
 514+ 9BD3 28 14        1 jr z,2F
 515+ 9BD5
 516+ 9BD5              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9BD5
 518+ 9BD5 CD FD 9B     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9BD8
 520+ 9BD8 7D           4 ld a,l
 521+ 9BD9 E6 1F        	and $1f
 522+ 9BDB 28 03        	jr z,6F
 523+ 9BDD 2B           	dec hl
 524+ 9BDE 10 F8        	djnz 4B
 525+ 9BE0 06 0F        6 ld b,15
 526+ 9BE2 CD 24 9C     5 call PreviousScan
 527+ 9BE5 10 FB        	djnz 5B
 528+ 9BE7 18 0A        	jr 7F
 529+ 9BE9
 530+ 9BE9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9BE9
 532+ 9BE9 CD FD 9B     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9BEC 06 0F        	ld b,15
 534+ 9BEE CD 24 9C     8 call PreviousScan
 535+ 9BF1 10 FB        	djnz 8B
 536+ 9BF3
 537+ 9BF3 E5           7 push hl
 538+ 9BF4 DD E1        	pop ix
 539+ 9BF6
 540+ 9BF6 2A FC 8B     	ld hl,(Puntero_objeto)
 541+ 9BF9 E5           	push hl
 542+ 9BFA FD E1        	pop iy
 543+ 9BFC
 544+ 9BFC C9           	ret
 545+ 9BFD
 546+ 9BFD              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9BFD              ;
 548+ 9BFD              ;	2/1/23
 549+ 9BFD              ;
 550+ 9BFD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9BFD              ;
 552+ 9BFD              ;	Tras esta rutina tenemos:
 553+ 9BFD              ;
 554+ 9BFD              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9BFD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9BFD              ;
 557+ 9BFD              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9BFD
 559+ 9BFD 2A FA 8B     Operandos ld hl,(Posicion_actual)
 560+ 9C00 3A 0A 8C     	ld a,(Columnas)
 561+ 9C03 3D           	dec a
 562+ 9C04 20 01        	jr nz,1F
 563+ 9C06 3C           	inc a
 564+ 9C07 47           1 ld b,a
 565+ 9C08 C9           	ret
 566+ 9C09
 567+ 9C09              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9C09              ;
 569+ 9C09              ;	Prepara_draw
 570+ 9C09              ;
 571+ 9C09              ;	Es una rutina de carga.
 572+ 9C09              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9C09              ;
 574+ 9C09              ;	FUNCIONAMIENTO:
 575+ 9C09              ;
 576+ 9C09              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9C09              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9C09              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9C09              ;
 580+ 9C09              ;	DESTRUYE:
 581+ 9C09              ;
 582+ 9C09              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9C09
 584+ 9C09 21 F8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9C0C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9C0D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9C0E 4E           	ld c,(hl)
 588+ 9C0F 2A FA 8B     	ld hl,(Posicion_actual)
 589+ 9C12 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9C14 C9           	ret
 591+ 9C15
 592+ 9C15              ;----------------------------------------------------------------------------------------------------------------
 593+ 9C15              ;
 594+ 9C15              ;	5/08/22
 595+ 9C15              ;
 596+ 9C15              ;   NextScan.
 597+ 9C15              ;
 598+ 9C15              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9C15              ;
 600+ 9C15              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9C15              ;
 602+ 9C15              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9C15              ;
 604+ 9C15              ;       DESTRUIDOS: AF y HL !!!
 605+ 9C15              ;
 606+ 9C15              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9C15              ;
 608+ 9C15
 609+ 9C15 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9C16 7C               ld a,h
 611+ 9C17 E6 07            and 7
 612+ 9C19 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9C1A
 614+ 9C1A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9C1B C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9C1D 6F               ld l,a
 617+ 9C1E D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9C1F
 619+ 9C1F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9C20 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9C22 67               ld h,a
 622+ 9C23 C9               ret
 623+ 9C24
 624+ 9C24              ;----------------------------------------------------------------------------------------------------------------
 625+ 9C24              ;
 626+ 9C24              ;	5/08/22
 627+ 9C24              ;
 628+ 9C24              ;   PreviousScan.
 629+ 9C24              ;
 630+ 9C24              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9C24              ;
 632+ 9C24              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9C24              ;
 634+ 9C24              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9C24              ;
 636+ 9C24              ;       DESTRUIDOS: AF y HL !!!
 637+ 9C24              ;
 638+ 9C24              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9C24              ;
 640+ 9C24
 641+ 9C24 7C           PreviousScan ld a,h
 642+ 9C25 25               dec h               ; Dec H.
 643+ 9C26 E6 07            and 7
 644+ 9C28 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9C29
 646+ 9C29 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9C2A D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9C2C 6F               ld l,a
 649+ 9C2D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9C2E
 651+ 9C2E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9C2F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9C31 67               ld h,a
 654+ 9C32 C9               ret
 655+ 9C33
 656+ 9C33
 657+ 9C33
 658+ 9C33
 659+ 9C33
 660+ 9C33
 661+ 9C33
 662+ 9C33
 663+ 9C33
 664+ 9C33
 665+ 9C33
 666+ 9C33
# file closed: Draw_XOR.asm
2328  9C33              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9C33
   2+ 9C33              ; ******************************************************************************************************************************************************************************************
   3+ 9C33              ;
   4+ 9C33              ;   20/05/23
   5+ 9C33              ;
   6+ 9C33              ;	Recompone_posicion_inicio
   7+ 9C33              ;
   8+ 9C33              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9C33              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9C33              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9C33              ;	_ a una u otra rutina.
  12+ 9C33
  13+ 9C33              Recompone_posicion_inicio
  14+ 9C33
  15+ 9C33 2A 07 8C     	ld hl,(Posicion_inicio)
  16+ 9C36 7D           	ld a,l
  17+ 9C37 E6 1F        	and $1f
  18+ 9C39 28 16        	jr z,1F
  19+ 9C3B
  20+ 9C3B FE 1F        	cp $1f
  21+ 9C3D 28 0D        	jr z,3F
  22+ 9C3F
  23+ 9C3F 21 F6 8B     	ld hl,Ctrl_2
  24+ 9C42 CB C6        	set 0,(hl)
  25+ 9C44 2A FC 8B     	ld hl,(Puntero_objeto)
  26+ 9C47 22 28 8C     	ld (Repone_puntero_objeto),hl
  27+ 9C4A 18 08        	jr 2F
  28+ 9C4C
  29+ 9C4C CD FA 9D     3 call Mov_left
  30+ 9C4F 18 03        	jr 2F
  31+ 9C51
  32+ 9C51 CD D7 9C     1 call Mov_right
  33+ 9C54 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9C57 22 FC 8B     	ld (Puntero_objeto),hl
  35+ 9C5A C9           	ret
  36+ 9C5B
  37+ 9C5B              ; ******************************************************************************************************************************************************************************************
  38+ 9C5B              ;
  39+ 9C5B              ;   27/05/23
  40+ 9C5B              ;
  41+ 9C5B              ;	Mov_down
  42+ 9C5B              ;
  43+ 9C5B              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9C5B              ;
  45+ 9C5B              ;
  46+ 9C5B              Mov_down
  47+ 9C5B
  48+ 9C5B CD C5 9C     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9C5E              ;																	; _ repone (Puntero_objeto).
  50+ 9C5E 21 F7 8B     	ld hl,Ctrl_0
  51+ 9C61 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9C63              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9C63              ; 																	; _ en el caso de que no lo haya.
  54+ 9C63 3A 12 8C     	ld a,(Vel_down)
  55+ 9C66 47           	ld b,a
  56+ 9C67 2A FA 8B         ld hl,(Posicion_actual)
  57+ 9C6A CD 8B 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9C6D E6 02        	and 2
  59+ 9C6F 28 17        	jr z,1F
  60+ 9C71
  61+ 9C71              ; Nos encontramos en el último tercio de pantalla.
  62+ 9C71              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9C71
  64+ 9C71 7C           	ld a,h
  65+ 9C72 FE 57        	cp $57
  66+ 9C74 20 12        	jr nz,1F
  67+ 9C76
  68+ 9C76 7D           	ld a,l
  69+ 9C77 C6 20        	add $20
  70+ 9C79 30 0D        	jr nc,1F
  71+ 9C7B
  72+ 9C7B              ; ------------------------------
  73+ 9C7B              ;
  74+ 9C7B              ;	12/01/24
  75+ 9C7B
  76+ 9C7B              ;	call Reaparece_arriba
  77+ 9C7B CD 87 9F     	call Reinicio
  78+ 9C7E
  79+ 9C7E              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9C7E
  81+ 9C7E 3A 61 8C     	ld a,(Ctrl_3)
  82+ 9C81 CB CF        	set 1,a
  83+ 9C83 32 61 8C     	ld (Ctrl_3),a
  84+ 9C86
  85+ 9C86 18 08        	jr 3F
  86+ 9C88              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9C88              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9C88              ; ------------------------------
  89+ 9C88
  90+ 9C88 CD 15 9C     1 call NextScan
  91+ 9C8B 22 FA 8B     	ld (Posicion_actual),hl
  92+ 9C8E 10 DA            djnz 2B
  93+ 9C90 CD A9 95     3 call Genera_coordenadas
  94+ 9C93 C9           	ret
  95+ 9C94
  96+ 9C94              ; ******************************************************************************************************************************************************************************************
  97+ 9C94              ;
  98+ 9C94              ;   27/05/23
  99+ 9C94              ;
 100+ 9C94              ;	Mov_up
 101+ 9C94              ;
 102+ 9C94              ; 	Mueve el Sprite hacia arriba.
 103+ 9C94              ;
 104+ 9C94              ;
 105+ 9C94              Mov_up
 106+ 9C94
 107+ 9C94 CD C5 9C     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9C97              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9C97 21 F7 8B     	ld hl,Ctrl_0
 110+ 9C9A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9C9C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9C9C              ; 																		; _ en el caso de que no lo haya.
 113+ 9C9C 3A 11 8C     	ld a,(Vel_up)
 114+ 9C9F 47           	ld b,a
 115+ 9CA0 2A FA 8B     	ld hl,(Posicion_actual)
 116+ 9CA3 CD 8B 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9CA6 A7           	and a
 118+ 9CA7 20 10        	jr nz,1F
 119+ 9CA9
 120+ 9CA9              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9CA9              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9CA9
 123+ 9CA9 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9CAA FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9CAC 20 0B            jr nz,1F
 126+ 9CAE 7D               ld a,l
 127+ 9CAF D6 20            sub $20
 128+ 9CB1 30 06            jr nc,1F
 129+ 9CB3 25               dec h
 130+ 9CB4
 131+ 9CB4              ; -----------------------------
 132+ 9CB4 CD 68 9F         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9CB7              ;	call Reinicio
 134+ 9CB7              ; -----------------------------
 135+ 9CB7
 136+ 9CB7 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9CB9 CD 24 9C     1 call PreviousScan
 138+ 9CBC 22 FA 8B     	ld (Posicion_actual),hl
 139+ 9CBF 10 E2            djnz 3B
 140+ 9CC1 CD A9 95     2 call Genera_coordenadas
 141+ 9CC4 C9           	ret
 142+ 9CC5
 143+ 9CC5              ; -----------------------------
 144+ 9CC5              ;
 145+ 9CC5              ;	27/5/23
 146+ 9CC5              ;
 147+ 9CC5              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9CC5              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9CC5              ;
 150+ 9CC5              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9CC5              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9CC5              ;
 153+ 9CC5              ;	Modifica: A y (Puntero_objeto).
 154+ 9CC5
 155+ 9CC5 3A F6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9CC8 CB 47        	bit 0,a
 157+ 9CCA C8           	ret z
 158+ 9CCB CB 87        	res 0,a
 159+ 9CCD 32 F6 8B     	ld (Ctrl_2),a
 160+ 9CD0 2A 28 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9CD3 22 FC 8B     	ld (Puntero_objeto),hl
 162+ 9CD6 C9           	ret
 163+ 9CD7
 164+ 9CD7              ; ******************************************************************************************************************************************************************************************
 165+ 9CD7              ;
 166+ 9CD7              ;	19/10/22
 167+ 9CD7              ;
 168+ 9CD7              ;	Mov_right.
 169+ 9CD7              ;
 170+ 9CD7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9CD7              ;
 172+ 9CD7
 173+ 9CD7 3A F7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9CDA CB 77        	bit 6,a
 175+ 9CDC 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9CDE
 177+ 9CDE CD 16 9F     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9CE1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9CE2
 180+ 9CE2 21 F7 8B     	ld hl,Ctrl_0
 181+ 9CE5 CB E6        	set 4,(hl)
 182+ 9CE7 18 52        	jr 8F
 183+ 9CE9
 184+ 9CE9 21 F7 8B     10 ld hl,Ctrl_0
 185+ 9CEC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9CEE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9CEE              ; 																	; _ en el caso de que no lo haya.
 188+ 9CEE 3A EB 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9CF1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9CF3 20 46        	jr nz,8F
 191+ 9CF5
 192+ 9CF5 3A FE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9CF8 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9CF9 28 40        	jr z,8F
 195+ 9CFB
 196+ 9CFB              ; ---------- ---------- ----------
 197+ 9CFB              ;
 198+ 9CFB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9CFB
 200+ 9CFB 3A 10 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9CFE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9D00 28 11        	jr z,1F
 203+ 9D02 38 06        	jr c,6F
 204+ 9D04 FE 04        	cp 4
 205+ 9D06 28 14        	jr z,7F
 206+ 9D08 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9D0A
 208+ 9D0A              ; ---------- ---------- ----------
 209+ 9D0A              ;
 210+ 9D0A              ; Perfiles de velocidad
 211+ 9D0A              ;
 212+ 9D0A
 213+ 9D0A 3A FE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9D0D FE FE        	cp $fe
 215+ 9D0F 20 2A        	jr nz,8F
 216+ 9D11 18 10        	jr 3F
 217+ 9D13 3A FE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9D16 FE FD        	cp $fd
 219+ 9D18 20 21        	jr nz,8F
 220+ 9D1A 18 07        	jr 3F
 221+ 9D1C 3A FE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9D1F FE FB        	cp $fb
 223+ 9D21 20 18        	jr nz,8F
 224+ 9D23
 225+ 9D23              ; ---------- ---------- ----------
 226+ 9D23
 227+ 9D23              3
 228+ 9D23 CD 56 9F     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9D26              ;	call Reinicio
 230+ 9D26
 231+ 9D26              ; ---------- ---------- ----------
 232+ 9D26              ;
 233+ 9D26              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9D26
 235+ 9D26 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9D28 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9D29 CD 42 9D     	call DESPLZ_DER
 238+ 9D2C C1           	pop bc
 239+ 9D2D 10 F9        	djnz 5B
 240+ 9D2F 2A FA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9D32 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9D33 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9D36 CD A9 95     	call Genera_coordenadas
 244+ 9D39 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9D3B
 246+ 9D3B              ; ---------- ---------- ----------
 247+ 9D3B
 248+ 9D3B 2A FA 8B     8 ld hl,(Posicion_actual)
 249+ 9D3E CD 42 9D     	call DESPLZ_DER
 250+ 9D41 C9           2 ret
 251+ 9D42
 252+ 9D42              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9D42              ;
 254+ 9D42              ;	22/9/22
 255+ 9D42              ;
 256+ 9D42
 257+ 9D42 CD 51 9D     DESPLZ_DER call Desplaza_derecha
 258+ 9D45 CD 9D 9D         call modifica_parametros_1er_DESPLZ_2
 259+ 9D48 CD C6 9D         call Ciclo_completo
 260+ 9D4B 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9D4E CB FE        	set 7,(hl)
 262+ 9D50 C9           	ret
 263+ 9D51
 264+ 9D51              ; ******************************************************************************************************************************************************************************************
 265+ 9D51              ;	15/02/23
 266+ 9D51              ;
 267+ 9D51
 268+ 9D51 3A 10 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9D54 47           	ld b,a
 270+ 9D55 2A 03 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9D58 23           1 inc hl
 272+ 9D59 23           	inc hl
 273+ 9D5A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9D5C 22 03 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9D5F CD 97 91     	call Extrae_address
 276+ 9D62 22 FC 8B     	ld (Puntero_objeto),hl
 277+ 9D65
 278+ 9D65              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9D65
 280+ 9D65              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9D65              ; Cuántos movimientos hemos hecho ??
 282+ 9D65              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9D65
 284+ 9D65 2A FF 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9D68 EB           	ex de,hl
 286+ 9D69 A7           	and a
 287+ 9D6A ED 52        	sbc hl,de
 288+ 9D6C CB 3D        	srl l
 289+ 9D6E 3E 08        6 ld a,8
 290+ 9D70 95           	sub l
 291+ 9D71 30 1E        	jr nc,3F
 292+ 9D73
 293+ 9D73              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9D73              ; B="0".
 295+ 9D73
 296+ 9D73 04           4 inc b
 297+ 9D74 3C           	inc a
 298+ 9D75 20 FC        	jr nz,4B
 299+ 9D77 78           	ld a,b
 300+ 9D78 08           	ex af,af
 301+ 9D79 2A FF 8B     	ld hl,(Indice_Sprite_der)
 302+ 9D7C 23           5 inc hl
 303+ 9D7D 23           	inc hl
 304+ 9D7E 10 FC        	djnz 5B
 305+ 9D80 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9D83 CD 97 91     	call Extrae_address
 307+ 9D86 22 FC 8B     	ld (Puntero_objeto),hl
 308+ 9D89
 309+ 9D89              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9D89              ; _(Posicion_actual).
 311+ 9D89
 312+ 9D89 21 FA 8B     	ld hl,Posicion_actual
 313+ 9D8C 34           	inc (hl)
 314+ 9D8D 08               ex af,af
 315+ 9D8E 6F           	ld l,a
 316+ 9D8F 18 DD        	jr 6B
 317+ 9D91
 318+ 9D91              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9D91
 320+ 9D91 47           3 ld b,a
 321+ 9D92 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9D95 23           2 inc hl
 323+ 9D96 23           	inc hl
 324+ 9D97 10 FC        	djnz 2B
 325+ 9D99 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9D9C C9           8 ret
 327+ 9D9D
 328+ 9D9D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9D9D              ;
 330+ 9D9D              ;	24/7/22
 331+ 9D9D              ;
 332+ 9D9D              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9D9D              ;
 334+ 9D9D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9D9D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9D9D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9D9D
 338+ 9D9D 3A FE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9DA0 A7           	and a
 340+ 9DA1 20 1F        	jr nz,1F
 341+ 9DA3 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9DA5 32 FE 8B         ld (CTRL_DESPLZ),a
 343+ 9DA8
 344+ 9DA8 21 F9 8B     	ld hl,Columns
 345+ 9DAB 34           	inc (hl)
 346+ 9DAC 3A 09 8C     	ld a,(Cuad_objeto)
 347+ 9DAF E6 01        	and 1
 348+ 9DB1 28 0F        	jr z,1F
 349+ 9DB3 2A FA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9DB6 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9DB7 22 FA 8B     	ld (Posicion_actual),hl
 352+ 9DBA CD A9 95     	call Genera_coordenadas
 353+ 9DBD CD 22 9F     	call Inc_CTRL_DESPLZ
 354+ 9DC0 18 03        	jr 2F
 355+ 9DC2 CD 22 9F     1 call Inc_CTRL_DESPLZ
 356+ 9DC5 C9           2 ret
 357+ 9DC6
 358+ 9DC6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9DC6              ;
 360+ 9DC6              ;	24/7/22
 361+ 9DC6              ;
 362+ 9DC6              ;	Ciclo_completo.
 363+ 9DC6              ;
 364+ 9DC6              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9DC6              ;
 366+ 9DC6              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9DC6              ; 	Decrementamos (Columns).
 368+ 9DC6              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9DC6              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9DC6
 371+ 9DC6
 372+ 9DC6 3A FE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9DC9 FE FF        	cp $ff
 374+ 9DCB 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9DCD E6 F0        	and $f0
 376+ 9DCF 20 28        	jr nz,3F
 377+ 9DD1
 378+ 9DD1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9DD1
 380+ 9DD1 3A FE 8B     	ld a,(CTRL_DESPLZ)
 381+ 9DD4 47           	ld b,a
 382+ 9DD5 3E F8        	ld a,$f8
 383+ 9DD7 80           	add b
 384+ 9DD8 32 FE 8B     	ld (CTRL_DESPLZ),a
 385+ 9DDB 18 1C        	jr 3F
 386+ 9DDD 21 F9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9DE0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9DE1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9DE2 32 FE 8B     	ld (CTRL_DESPLZ),a
 390+ 9DE5 3A 09 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9DE8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9DEA 20 0A        	jr nz,2F
 393+ 9DEC 2A FA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9DEF 23           	inc hl
 395+ 9DF0 22 FA 8B     	ld (Posicion_actual),hl
 396+ 9DF3 CD A9 95     	call Genera_coordenadas
 397+ 9DF6
 398+ 9DF6              ; Inicia el puntero de Sprite.
 399+ 9DF6
 400+ 9DF6 CD A9 91     2 call Inicia_puntero_objeto_der
 401+ 9DF9 C9           3 ret
 402+ 9DFA
 403+ 9DFA              ; ******************************************************************************************************************************************************************************************
 404+ 9DFA              ;
 405+ 9DFA              ;	15/02/23
 406+ 9DFA              ;
 407+ 9DFA              ;	Mov_left.
 408+ 9DFA              ;
 409+ 9DFA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9DFA              ;
 411+ 9DFA              Mov_left
 412+ 9DFA
 413+ 9DFA 21 F7 8B     	ld hl,Ctrl_0
 414+ 9DFD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9DFF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9DFF              ; 																	; _ en el caso de que no lo haya.
 417+ 9DFF 3A F7 8B     	ld a,(Ctrl_0)
 418+ 9E02 CB 77        	bit 6,a
 419+ 9E04 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9E06
 421+ 9E06 CD 1C 9F     	call Stop_Amadeus_left
 422+ 9E09 C8           	ret z
 423+ 9E0A 20 4A        	jr nz,8F
 424+ 9E0C
 425+ 9E0C 3A EB 8B     11 ld a,(Coordenada_X)
 426+ 9E0F A7           	and a
 427+ 9E10 20 44        	jr nz,8F
 428+ 9E12
 429+ 9E12 3A FE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9E15 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9E16 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9E18
 433+ 9E18              ; ---------- ---------- ----------
 434+ 9E18
 435+ 9E18 3A 0F 8C     	ld a,(Vel_left)
 436+ 9E1B FE 02        	cp 2
 437+ 9E1D 28 0F        	jr z,1F
 438+ 9E1F 38 04        	jr c,6F
 439+ 9E21 FE 04        	cp 4
 440+ 9E23 28 12        	jr z,7F
 441+ 9E25
 442+ 9E25              ; ---------- ---------- ----------
 443+ 9E25
 444+ 9E25 3A FE 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9E28 FE F8        	cp $f8
 446+ 9E2A 20 2A        	jr nz,8F
 447+ 9E2C 18 10        	jr 4F
 448+ 9E2E 3A FE 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9E31 FE F9        	cp $f9
 450+ 9E33 20 21        	jr nz,8F
 451+ 9E35 18 07        	jr 4F
 452+ 9E37 3A FE 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9E3A FE FB        	cp $fb
 454+ 9E3C 20 18        	jr nz,8F
 455+ 9E3E
 456+ 9E3E              ; ---------- ---------- ----------
 457+ 9E3E
 458+ 9E3E              4
 459+ 9E3E CD 44 9F     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9E41              ;	call Reinicio
 461+ 9E41
 462+ 9E41              ; ---------- ---------- ----------
 463+ 9E41
 464+ 9E41 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9E43 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9E44
 467+ 9E44              ;	ld hl,(Indice_Sprite_izq)
 468+ 9E44              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9E44
 470+ 9E44 CD 5D 9E     	call DESPLZ_IZQ
 471+ 9E47 C1           	pop bc
 472+ 9E48 10 F9        	djnz 5B
 473+ 9E4A 2A FA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9E4D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9E4E 22 FA 8B     	ld (Posicion_actual),hl
 476+ 9E51 CD A9 95     	call Genera_coordenadas
 477+ 9E54 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9E56
 479+ 9E56              ; ---------- ---------- ----------
 480+ 9E56
 481+ 9E56              ; Movemos, no hay recolocación.
 482+ 9E56
 483+ 9E56 2A FA 8B     8 ld hl,(Posicion_actual)
 484+ 9E59 CD 5D 9E     	call DESPLZ_IZQ
 485+ 9E5C C9           2 ret
 486+ 9E5D
 487+ 9E5D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9E5D              ;
 489+ 9E5D              ;	22/9/22
 490+ 9E5D
 491+ 9E5D              DESPLZ_IZQ
 492+ 9E5D
 493+ 9E5D CD 6C 9E     	call Desplaza_izquierda
 494+ 9E60 CD B8 9E         call modifica_parametros_1er_DESPLZ
 495+ 9E63 CD E0 9E     	call Ciclo_completo_2
 496+ 9E66 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9E69 CB BE        	res 7,(hl)
 498+ 9E6B C9           	ret
 499+ 9E6C
 500+ 9E6C              Desplaza_izquierda
 501+ 9E6C
 502+ 9E6C 3A 0F 8C     	ld a,(Vel_left)
 503+ 9E6F 47           	ld b,a
 504+ 9E70 2A 05 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9E73 23           1 inc hl
 506+ 9E74 23           	inc hl
 507+ 9E75 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9E77 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9E7A CD 97 91     	call Extrae_address
 510+ 9E7D 22 FC 8B     	ld (Puntero_objeto),hl
 511+ 9E80
 512+ 9E80              ; Modifica (Puntero_DESPLZ_der).
 513+ 9E80
 514+ 9E80              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9E80              ; Cuántos movimientos hemos hecho ??
 516+ 9E80              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9E80
 518+ 9E80 2A 01 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9E83 EB           	ex de,hl
 520+ 9E84 A7           	and a
 521+ 9E85 ED 52        	sbc hl,de
 522+ 9E87 CB 3D        	srl l
 523+ 9E89 3E 08        6 ld a,8
 524+ 9E8B 95           	sub l
 525+ 9E8C 30 1E        	jr nc,3F
 526+ 9E8E
 527+ 9E8E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9E8E              ; B="0".
 529+ 9E8E
 530+ 9E8E 04           4 inc b
 531+ 9E8F 3C           	inc a
 532+ 9E90 20 FC        	jr nz,4B
 533+ 9E92 78           	ld a,b
 534+ 9E93 08           	ex af,af
 535+ 9E94 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9E97 23           5 inc hl
 537+ 9E98 23           	inc hl
 538+ 9E99 10 FC        	djnz 5B
 539+ 9E9B 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9E9E CD 97 91     	call Extrae_address
 541+ 9EA1 22 FC 8B     	ld (Puntero_objeto),hl
 542+ 9EA4
 543+ 9EA4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9EA4              ; _(Posicion_actual).
 545+ 9EA4
 546+ 9EA4 21 FA 8B     	ld hl,Posicion_actual
 547+ 9EA7 35           	dec (hl)
 548+ 9EA8 08           	ex af,af
 549+ 9EA9 6F           	ld l,a
 550+ 9EAA 18 DD        	jr 6B
 551+ 9EAC
 552+ 9EAC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9EAC
 554+ 9EAC 47           3 ld b,a
 555+ 9EAD 2A FF 8B     	ld hl,(Indice_Sprite_der)
 556+ 9EB0 23           2 inc hl
 557+ 9EB1 23           	inc hl
 558+ 9EB2 10 FC        	djnz 2B
 559+ 9EB4 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9EB7 C9           8 ret
 561+ 9EB8
 562+ 9EB8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9EB8              ;
 564+ 9EB8              ;	modifica_parametros_1er_DESPLZ
 565+ 9EB8              ;
 566+ 9EB8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9EB8              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9EB8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9EB8
 570+ 9EB8 3A FE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9EBB A7           	and a
 572+ 9EBC 20 1E        	jr nz,1F
 573+ 9EBE 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9EBF 32 FE 8B         ld (CTRL_DESPLZ),a
 575+ 9EC2 21 F9 8B     	ld hl,Columns
 576+ 9EC5 34           	inc (hl)
 577+ 9EC6 3A 09 8C     	ld a,(Cuad_objeto)
 578+ 9EC9 E6 01        	and 1
 579+ 9ECB 20 0F        	jr nz,1F
 580+ 9ECD 2A FA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9ED0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9ED1 22 FA 8B     	ld (Posicion_actual),hl
 583+ 9ED4 CD A9 95     	call Genera_coordenadas
 584+ 9ED7 CD 33 9F     	call Dec_CTRL_DESPLZ
 585+ 9EDA 18 03        	jr 2F
 586+ 9EDC CD 33 9F     1 call Dec_CTRL_DESPLZ
 587+ 9EDF C9           2 ret
 588+ 9EE0
 589+ 9EE0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9EE0
 591+ 9EE0 3A FE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9EE3 FE F7        	cp $f7
 593+ 9EE5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9EE7 30 2C        	jr nc,3F
 595+ 9EE9
 596+ 9EE9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9EE9
 598+ 9EE9 06 00        	ld b,0
 599+ 9EEB 04           4 inc b
 600+ 9EEC 3C           	inc a
 601+ 9EED FE F7        	cp $f7
 602+ 9EEF 20 FA        	jr nz,4B
 603+ 9EF1 3E FF        	ld a,$ff
 604+ 9EF3 90           	sub b
 605+ 9EF4 32 FE 8B     	ld (CTRL_DESPLZ),a
 606+ 9EF7 18 1C        	jr 3F
 607+ 9EF9
 608+ 9EF9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9EF9
 610+ 9EF9 21 F9 8B     1 ld hl,Columns
 611+ 9EFC 35           	dec (hl)
 612+ 9EFD AF           	xor a
 613+ 9EFE 32 FE 8B     	ld (CTRL_DESPLZ),a
 614+ 9F01 3A 09 8C     	ld a,(Cuad_objeto)
 615+ 9F04 E6 01        	and 1
 616+ 9F06 28 0A        	jr z,2F
 617+ 9F08 2A FA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9F0B 2B           	dec hl
 619+ 9F0C 22 FA 8B     	ld (Posicion_actual),hl
 620+ 9F0F CD A9 95     	call Genera_coordenadas
 621+ 9F12
 622+ 9F12              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9F12
 624+ 9F12 CD BC 91     2 call Inicia_puntero_objeto_izq
 625+ 9F15 C9           3 ret
 626+ 9F16
 627+ 9F16              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9F16              ;
 629+ 9F16              ;	19/10/22
 630+ 9F16              ;
 631+ 9F16              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9F16              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9F16
 634+ 9F16 3A EB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9F19 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9F1B C9           	ret
 637+ 9F1C
 638+ 9F1C              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9F1C              ;
 640+ 9F1C              ;	19/10/22
 641+ 9F1C              ;
 642+ 9F1C              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9F1C              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9F1C
 645+ 9F1C 3A EB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9F1F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9F21 C9           	ret
 648+ 9F22
 649+ 9F22              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9F22              ;
 651+ 9F22              ;	24/7/22
 652+ 9F22              ;
 653+ 9F22              ;	Inc_CTRL_DESPLZ
 654+ 9F22              ;
 655+ 9F22              ;
 656+ 9F22              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9F22
 658+ 9F22 21 FE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9F25 3A 10 8C     	ld a,(Vel_right)
 660+ 9F28 A7           	and a
 661+ 9F29 28 06        	jr z,1F
 662+ 9F2B 47           	ld b,a
 663+ 9F2C 34           3 inc (hl)
 664+ 9F2D 10 FD        	djnz 3B
 665+ 9F2F 18 01        	jr 2F
 666+ 9F31 34           1 inc (hl)
 667+ 9F32 C9           2 ret
 668+ 9F33
 669+ 9F33              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9F33              ;
 671+ 9F33              ;	5/2/23
 672+ 9F33              ;
 673+ 9F33              ;	Dec_CTRL_DESPLZ
 674+ 9F33              ;
 675+ 9F33              ;
 676+ 9F33              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9F33
 678+ 9F33 21 FE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9F36 3A 0F 8C     	ld a,(Vel_left)
 680+ 9F39 A7           	and a
 681+ 9F3A 28 06        	jr z,1F
 682+ 9F3C 47           	ld b,a
 683+ 9F3D 35           3 dec (hl)
 684+ 9F3E 10 FD        	djnz 3B
 685+ 9F40 18 01        	jr 2F
 686+ 9F42 35           1 dec (hl)
 687+ 9F43 C9           2 ret
 688+ 9F44
 689+ 9F44              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9F44
 691+ 9F44 2A FA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9F47 01 1F 00     	ld bc,31
 693+ 9F4A A7           	and a
 694+ 9F4B ED 4A        	adc hl,bc
 695+ 9F4D 22 FA 8B     	ld (Posicion_actual),hl
 696+ 9F50 21 F7 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9F53 CB C6        	set 0,(hl)
 698+ 9F55 C9           	ret
 699+ 9F56
 700+ 9F56              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9F56
 702+ 9F56 2A FA 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9F59 01 1F 00     	ld bc,31
 704+ 9F5C A7           	and a
 705+ 9F5D ED 42        	sbc hl,bc
 706+ 9F5F 22 FA 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9F62 21 F7 8B     	ld hl,Ctrl_0
 708+ 9F65 CB CE        	set 1,(hl)
 709+ 9F67 C9           	ret
 710+ 9F68
 711+ 9F68              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9F68
 713+ 9F68 24           Reaparece_abajo inc h
 714+ 9F69 01 E0 17     	ld bc,$17e0
 715+ 9F6C A7           	and a
 716+ 9F6D ED 4A        	adc hl,bc
 717+ 9F6F 22 FA 8B     	ld (Posicion_actual),hl
 718+ 9F72 21 F7 8B     	ld hl,Ctrl_0
 719+ 9F75 CB D6        	set 2,(hl)
 720+ 9F77 C9           	ret
 721+ 9F78
 722+ 9F78              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9F78
 724+ 9F78 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9F7B A7           	and a
 726+ 9F7C ED 42        	sbc hl,bc
 727+ 9F7E 22 FA 8B     	ld (Posicion_actual),hl
 728+ 9F81 21 F7 8B     	ld hl,Ctrl_0
 729+ 9F84 CB DE        	set 3,(hl)
 730+ 9F86 C9           	ret
 731+ 9F87
 732+ 9F87              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9F87              ;
 734+ 9F87              ;	15/07/23
 735+ 9F87
 736+ 9F87              Reinicio
 737+ 9F87
 738+ 9F87              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9F87
 740+ 9F87 AF           	xor a
 741+ 9F88 21 1F 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9F8B CD A9 9F     	call Limpia_contenido_hl
 743+ 9F8E
 744+ 9F8E 21 FA 8B     	ld hl,Posicion_actual
 745+ 9F91 CD A9 9F     	call Limpia_contenido_hl
 746+ 9F94
 747+ 9F94 CD 13 94     	call Situa_Puntero_indice_mov
 748+ 9F97 CD A2 A0     	call Inicia_Puntero_mov
 749+ 9F9A
 750+ 9F9A 21 21 8C     	ld hl,Incrementa_puntero
 751+ 9F9D 06 05        	ld b,5
 752+ 9F9F 77           1 ld (hl),a
 753+ 9FA0 23           	inc hl
 754+ 9FA1 10 FC        	djnz 1B
 755+ 9FA3
 756+ 9FA3 21 F6 8B     	ld hl,Ctrl_2
 757+ 9FA6 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9FA8
 759+ 9FA8 C9           	ret
 760+ 9FA9
 761+ 9FA9 77           Limpia_contenido_hl	ld (hl),a
 762+ 9FAA 23           	inc hl
 763+ 9FAB 77           	ld (hl),a
 764+ 9FAC C9           	ret
 765+ 9FAD
 766+ 9FAD              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9FAD              ;
 768+ 9FAD              ;	18/6/24
 769+ 9FAD              ;
 770+ 9FAD
 771+ 9FAD              Amadeus_a_izquierda
 772+ 9FAD
 773+ 9FAD              ;	Actualiza contador de movimientos.
 774+ 9FAD
 775+ 9FAD 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9FB0 35           	dec (hl)
 777+ 9FB1 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9FB3
 779+ 9FB3 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9FB6 2B           	dec hl
 781+ 9FB7 2B           	dec hl
 782+ 9FB8 2B           	dec hl
 783+ 9FB9 2B           	dec hl
 784+ 9FBA 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9FBD
 786+ 9FBD 21 61 8C     	ld hl,Ctrl_3
 787+ 9FC0 CB EE        	set 5,(hl)
 788+ 9FC2
 789+ 9FC2 C9           	ret
 790+ 9FC3
 791+ 9FC3 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9FC4 C9           	ret
 793+ 9FC5
 794+ 9FC5
 795+ 9FC5              Amadeus_a_derecha
 796+ 9FC5
 797+ 9FC5              ;	Actualiza contador de movimientos.
 798+ 9FC5
 799+ 9FC5 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9FC8 34           	inc (hl)
 801+ 9FC9 3E 7A        	ld a,$7a
 802+ 9FCB BE           	cp (hl)
 803+ 9FCC 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9FCE
 805+ 9FCE 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9FD1 23           	inc hl
 807+ 9FD2 23           	inc hl
 808+ 9FD3 23           	inc hl
 809+ 9FD4 23           	inc hl
 810+ 9FD5 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9FD8
 812+ 9FD8 21 61 8C     	ld hl,Ctrl_3
 813+ 9FDB CB EE        	set 5,(hl)
 814+ 9FDD C9           	ret
 815+ 9FDE
 816+ 9FDE 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9FDF C9           	ret
# file closed: Direcciones.asm
2329  9FE0              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9FE0              ; ----- ----- ----- ----- -----
   2+ 9FE0              ;
   3+ 9FE0              ;   28/12/23
   4+ 9FE0
   5+ 9FE0              Movimiento
   6+ 9FE0
   7+ 9FE0              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9FE0
   9+ 9FE0 3A F6 8B         ld a,(Ctrl_2)
  10+ 9FE3 CB 57            bit 2,a
  11+ 9FE5 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9FE7
  13+ 9FE7 2A 1D 8C         ld hl,(Puntero_mov)
  14+ 9FEA 7E               ld a,(hl)
  15+ 9FEB
  16+ 9FEB              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9FEB
  18+ 9FEB              Inicia_desplazamiento.
  19+ 9FEB
  20+ 9FEB              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9FEB
  22+ 9FEB CD D8 A0         call Ajusta_velocidad_desplazamiento
  23+ 9FEE
  24+ 9FEE              ; Hemos definido (Vel_left),(Vel_right),(Vel_up) y (Vel_down) en la bandeja DRAW. Ahora (Puntero_mov) está situado en el 3er byte del movimiento, (indica dirección y nº de veces que la ejecutamos).
  25+ 9FEE
  26+ 9FEE              ; Iniciamos (Repetimos_mov).
  27+ 9FEE
  28+ 9FEE 7E               ld a,(hl)
  29+ 9FEF E6 0F            and $0f
  30+ 9FF1 32 23 8C         ld (Repetimos_desplazamiento),a
  31+ 9FF4 32 24 8C         ld (Repetimos_desplazamiento_backup),a
  32+ 9FF7
  33+ 9FF7              ; Iniciamos (Cola_de_desplazamiento).
  34+ 9FF7
  35+ 9FF7 23               inc hl
  36+ 9FF8 7E               ld a,(hl)
  37+ 9FF9 32 26 8C         ld (Cola_de_desplazamiento),a
  38+ 9FFC 2B               dec hl
  39+ 9FFD
  40+ 9FFD 21 F6 8B         ld hl,Ctrl_2
  41+ A000 CB D6            set 2,(hl)
  42+ A002
  43+ A002              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  44+ A002              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  45+ A002
  46+ A002              Desplazamiento_iniciado
  47+ A002
  48+ A002              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  49+ A002
  50+ A002              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  51+ A002
  52+ A002              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  53+ A002              ;                               Izquierda_y_subiendo+8 (11)
  54+ A002              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  55+ A002              ;                               Izquierda_y_subiendo+8 (8)
  56+ A002              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  57+ A002              ;                               Izquierda_y_subiendo+8 (8)
  58+ A002              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  59+ A002              ;                               Izquierda_y_subiendo+8 (8)
  60+ A002              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  61+ A002              ;                               Izquierda_y_subiendo+8 (8)
  62+ A002              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  63+ A002              ;                               Izquierda_y_subiendo+8 (7)
  64+ A002              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  65+ A002              ;                               Izquierda_y_subiendo+8 (7)
  66+ A002              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  67+ A002              ;                               Izquierda_y_subiendo+8 (7)
  68+ A002
  69+ A002
  70+ A002
  71+ A002
  72+ A002
  73+ A002              ;    ld bc,Derecha_y_subiendo+2
  74+ A002              ;    ld hl,(Puntero_mov)
  75+ A002              ;    ld a,c
  76+ A002              ;    cp l
  77+ A002              ;    jr nz,3F
  78+ A002
  79+ A002              ;    jr $
  80+ A002
  81+ A002              ;    ld a,(Coordenada_X)
  82+ A002              ;    sub 4
  83+ A002              ;    jr z,4F
  84+ A002
  85+ A002              ;    ld a,(Coordenada_y)                 ; $08 - $0b
  86+ A002
  87+ A002              ;    ld b,a
  88+ A002              ;    ld hl,Derecha_y_subiendo+7
  89+ A002              ;    ld a,(hl)
  90+ A002              ;    sub b
  91+ A002              ;    ld (hl),a
  92+ A002
  93+ A002
  94+ A002 CD AC A0         call Aplica_desplazamiento
  95+ A005
  96+ A005 21 23 8C         ld hl,Repetimos_desplazamiento
  97+ A008 35               dec (hl)
  98+ A009 C0               ret nz
  99+ A00A
 100+ A00A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 101+ A00A              ; Hay que volver a ejecutar este desplazamiento ???.
 102+ A00A              ; Analiza (Cola_de_desplazamiento).
 103+ A00A
 104+ A00A 3A 26 8C     Cola ld a,(Cola_de_desplazamiento)
 105+ A00D A7               and a
 106+ A00E CC 01 A1         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 107+ A011 28 30            jr z,Reinicia_el_movimiento
 108+ A013
 109+ A013 FE FF            cp $ff
 110+ A015 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 111+ A017
 112+ A017 FE FE            cp $fe
 113+ A019 CC 86 A0         call z,Fijamos_bucle
 114+ A01C 28 25            jr z,Reinicia_el_movimiento
 115+ A01E
 116+ A01E FE FD            cp $fd
 117+ A020 20 11            jr nz,1F
 118+ A022
 119+ A022              ; ---
 120+ A022              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 121+ A022
 122+ A022 3A F6 8B         ld a,(Ctrl_2)
 123+ A025 CB 5F            bit 3,a
 124+ A027 20 1A            jr nz,Reinicia_el_movimiento
 125+ A029
 126+ A029              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 127+ A029
 128+ A029 21 F6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 129+ A02C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 130+ A02E
 131+ A02E CD 97 A0         call Inicia_Repetimos_movimiento
 132+ A031 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 133+ A033              ; ---
 134+ A033
 135+ A033 FE 01        1 cp 1
 136+ A035 CA 70 A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 137+ A038
 138+ A038 3D               dec a
 139+ A039 32 26 8C         ld (Cola_de_desplazamiento),a
 140+ A03C
 141+ A03C 3A 24 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 142+ A03F 32 23 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 143+ A042              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 144+ A042 C9               ret
 145+ A043
 146+ A043              Reinicia_el_movimiento
 147+ A043
 148+ A043 3A F6 8B         ld a,(Ctrl_2)
 149+ A046 CB 5F            bit 3,a
 150+ A048 28 1B            jr z,2F
 151+ A04A
 152+ A04A              ; (Cola_de_desplazamiento)="254".
 153+ A04A
 154+ A04A 21 25 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 155+ A04D 35               dec (hl)
 156+ A04E 20 15            jr nz,2F
 157+ A050
 158+ A050              ; Fin de las repeticiones del último movimiento.
 159+ A050
 160+ A050 21 F6 8B         ld hl,Ctrl_2
 161+ A053 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 162+ A055
 163+ A055 2A 1D 8C         ld hl,(Puntero_mov)
 164+ A058 23               inc hl
 165+ A059 23               inc hl
 166+ A05A 23               inc hl
 167+ A05B 22 1D 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 168+ A05E              ;                                                               ; _ para ejecutar su mandato. :)
 169+ A05E 7E               ld a,(hl)
 170+ A05F 32 26 8C         ld (Cola_de_desplazamiento),a
 171+ A062
 172+ A062 C3 0A A0         jp Cola
 173+ A065
 174+ A065 CD A2 A0     2 call Inicia_Puntero_mov
 175+ A068
 176+ A068 21 F6 8B         ld hl,Ctrl_2
 177+ A06B CB 96            res 2,(hl)
 178+ A06D
 179+ A06D C3 E0 9F         jp Movimiento
 180+ A070
 181+ A070              Siguiente_desplazamiento
 182+ A070
 183+ A070              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 184+ A070              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 185+ A070
 186+ A070 21 F6 8B         ld hl,Ctrl_2
 187+ A073 CB 96            res 2,(hl)
 188+ A075
 189+ A075 2A 1D 8C         ld hl,(Puntero_mov)
 190+ A078 23               inc hl
 191+ A079 23               inc hl
 192+ A07A 22 1D 8C         ld (Puntero_mov),hl
 193+ A07D
 194+ A07D 7E               ld a,(hl)
 195+ A07E A7               and a
 196+ A07F CC 01 A1         call z,Incrementa_Puntero_indice_mov
 197+ A082 CA 43 A0         jp z,Reinicia_el_movimiento
 198+ A085
 199+ A085 C9               ret
 200+ A086
 201+ A086              ; Subrutinas -----------------------------------------
 202+ A086              ; ---------- --------- --------- ---------- ----------
 203+ A086              ;
 204+ A086              ;   24/07/23
 205+ A086              ;
 206+ A086              ;   Fijamos_bucle
 207+ A086              ;
 208+ A086              ;
 209+ A086
 210+ A086              Fijamos_bucle
 211+ A086
 212+ A086 3A 21 8C         ld a,(Incrementa_puntero)
 213+ A089 3C               inc a
 214+ A08A 32 22 8C         ld (Incrementa_puntero_backup),a
 215+ A08D
 216+ A08D CD 01 A1         call Incrementa_Puntero_indice_mov
 217+ A090 2A 1B 8C         ld hl,(Puntero_indice_mov)
 218+ A093 22 1F 8C         ld (Puntero_indice_mov_bucle),hl
 219+ A096 C9               ret
 220+ A097
 221+ A097              ; ---------- --------- --------- ---------- ----------
 222+ A097              ;
 223+ A097              ;   07/7/23
 224+ A097              ;
 225+ A097              ;   Inicia_Repetimos_movimiento
 226+ A097              ;
 227+ A097              ;
 228+ A097
 229+ A097              Inicia_Repetimos_movimiento
 230+ A097
 231+ A097              ; Iniciamos (Repetimos_movimiento).
 232+ A097
 233+ A097 DD 2A 1D 8C      ld ix,(Puntero_mov)
 234+ A09B DD 7E 02         ld a,(ix+2)
 235+ A09E 32 25 8C         ld (Repetimos_movimiento),a
 236+ A0A1
 237+ A0A1 C9               ret
 238+ A0A2
 239+ A0A2              ; ---------- --------- --------- ---------- ----------
 240+ A0A2              ;
 241+ A0A2              ;   26/6/23
 242+ A0A2              ;
 243+ A0A2              ;   Inicia_Puntero_mov
 244+ A0A2              ;
 245+ A0A2              ;
 246+ A0A2
 247+ A0A2 2A 1B 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 248+ A0A5 CD 97 91         call Extrae_address
 249+ A0A8 22 1D 8C         ld (Puntero_mov),hl
 250+ A0AB C9               ret
 251+ A0AC
 252+ A0AC              ; ---------- --------- --------- ---------- ----------
 253+ A0AC              ;
 254+ A0AC              ;   27/06/23
 255+ A0AC              ;
 256+ A0AC              ;   Aplica_movimiento.
 257+ A0AC
 258+ A0AC              Aplica_desplazamiento
 259+ A0AC
 260+ A0AC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 261+ A0AC
 262+ A0AC 2A 1D 8C         ld hl,(Puntero_mov)
 263+ A0AF
 264+ A0AF 7E               ld a,(hl)
 265+ A0B0 E6 F0            and $f0
 266+ A0B2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 267+ A0B3
 268+ A0B3 CB 7E            bit 7,(hl)
 269+ A0B5 28 03            jr z,1F
 270+ A0B7 CD 94 9C         call Mov_up
 271+ A0BA
 272+ A0BA 2A 1D 8C     1 ld hl,(Puntero_mov)
 273+ A0BD CB 76            bit 6,(hl)
 274+ A0BF 28 03            jr z,2F
 275+ A0C1 CD 5B 9C         call Mov_down
 276+ A0C4
 277+ A0C4 2A 1D 8C     2 ld hl,(Puntero_mov)
 278+ A0C7 CB 6E            bit 5,(hl)
 279+ A0C9 28 03            jr z,3F
 280+ A0CB CD FA 9D         call Mov_left
 281+ A0CE
 282+ A0CE 2A 1D 8C     3 ld hl,(Puntero_mov)
 283+ A0D1 CB 66            bit 4,(hl)
 284+ A0D3 C8               ret z
 285+ A0D4 CD D7 9C         call Mov_right
 286+ A0D7
 287+ A0D7 C9               ret
 288+ A0D8
 289+ A0D8              ; ---------- --------- --------- ---------- ----------
 290+ A0D8              ;
 291+ A0D8              ;   26/06/23
 292+ A0D8              ;
 293+ A0D8              ;   Ajusta_velocidad_desplazamiento.
 294+ A0D8
 295+ A0D8              Ajusta_velocidad_desplazamiento
 296+ A0D8
 297+ A0D8              ; 1er byte de la cadena de movimiento.
 298+ A0D8              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 299+ A0D8
 300+ A0D8 CD F6 A0         call Extrae_nibble_alto
 301+ A0DB
 302+ A0DB 32 11 8C         ld (Vel_up),a
 303+ A0DE 79               ld a,c
 304+ A0DF E6 0F            and $0f
 305+ A0E1 32 12 8C         ld (Vel_down),a
 306+ A0E4
 307+ A0E4              ; Saltamos al 2º byte de la cadena de movimiento.
 308+ A0E4              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 309+ A0E4
 310+ A0E4 23               inc hl
 311+ A0E5 CD F6 A0         call Extrae_nibble_alto
 312+ A0E8
 313+ A0E8 32 0F 8C         ld (Vel_left),a
 314+ A0EB 79               ld a,c
 315+ A0EC E6 0F            and $0f
 316+ A0EE 32 10 8C         ld (Vel_right),a
 317+ A0F1
 318+ A0F1              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 319+ A0F1
 320+ A0F1 23               inc hl
 321+ A0F2 22 1D 8C         ld (Puntero_mov),hl
 322+ A0F5 C9               ret
 323+ A0F6
 324+ A0F6 06 04        Extrae_nibble_alto ld b,4
 325+ A0F8 7E               ld a,(hl)
 326+ A0F9 4F               ld c,a
 327+ A0FA E6 F0            and $f0
 328+ A0FC CB 3F        1 srl a
 329+ A0FE 10 FC            djnz 1B
 330+ A100 C9               ret
 331+ A101
 332+ A101              ; ---------- --------- --------- ---------- ----------
 333+ A101              ;
 334+ A101              ;   5/7/23
 335+ A101              ;
 336+ A101              ;   Incrementa_Puntero_indice_mov
 337+ A101
 338+ A101              Incrementa_Puntero_indice_mov
 339+ A101
 340+ A101 21 21 8C         ld hl,Incrementa_puntero
 341+ A104 34               inc (hl)
 342+ A105
 343+ A105 2A 1B 8C         ld hl,(Puntero_indice_mov)
 344+ A108 01 02 00         ld bc,2
 345+ A10B A7               and a
 346+ A10C 09               add hl,bc
 347+ A10D 22 1B 8C         ld (Puntero_indice_mov),hl
 348+ A110
 349+ A110 7E               ld a,(hl)
 350+ A111 A7               and a
 351+ A112
 352+ A112              ;! STOP. Fin del patrón de movimiento de la entidad.
 353+ A112
 354+ A112              ;    jr z,$
 355+ A112
 356+ A112              ;! Reinicia el Patrón de movimiento.
 357+ A112
 358+ A112 CC 17 A1         call z,Inicializa_Puntero_indice_mov_2
 359+ A115
 360+ A115 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 361+ A116
 362+ A116 C9               ret
 363+ A117
 364+ A117              ; ---------- --------- --------- ---------- ----------
 365+ A117              ;
 366+ A117              ;   15/01/24
 367+ A117              ;
 368+ A117              ;   Inicializa_Puntero_indice_mov
 369+ A117
 370+ A117              Inicializa_Puntero_indice_mov_2
 371+ A117
 372+ A117              ; Existe etiqueta de bucle principal???
 373+ A117
 374+ A117 2A 1F 8C         ld hl,(Puntero_indice_mov_bucle)
 375+ A11A 24               inc h
 376+ A11B 25               dec h
 377+ A11C 28 05            jr z,2F
 378+ A11E
 379+ A11E 22 1B 8C         ld (Puntero_indice_mov),hl
 380+ A121 18 14            jr 3F
 381+ A123
 382+ A123              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 383+ A123
 384+ A123 3A 21 8C     2 ld a,(Incrementa_puntero)
 385+ A126 47               ld b,a
 386+ A127
 387+ A127 2A 1B 8C         ld hl,(Puntero_indice_mov)
 388+ A12A 2B           1 dec hl
 389+ A12B 2B               dec hl
 390+ A12C 10 FC            djnz 1B
 391+ A12E 22 1B 8C         ld (Puntero_indice_mov),hl
 392+ A131
 393+ A131 AF               xor a
 394+ A132 32 21 8C         ld (Incrementa_puntero),a
 395+ A135 18 06            jr 4F
 396+ A137
 397+ A137 3A 22 8C     3 ld a,(Incrementa_puntero_backup)
 398+ A13A 32 21 8C         ld (Incrementa_puntero),a
 399+ A13D C9           4 ret
 400+ A13E
 401+ A13E              ; ----------------------------------------------------------------------
 402+ A13E              ;
 403+ A13E              ;   24/11/24
 404+ A13E              ;
 405+ A13E              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 406+ A13E
 407+ A13E DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 408+ A141 CD 22 95         call Calcula_salto_en_BC
 409+ A144 21 13 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 410+ A147 A7               and a
 411+ A148 ED 4A            adc hl,bc
 412+ A14A C9               ret
 413+ A14B
 414+ A14B              ; ----------------------------------------------------------------------
 415+ A14B              ;
 416+ A14B              ;   24/11/24
 417+ A14B              ;
 418+ A14B              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 419+ A14B              ;
 420+ A14B              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 421+ A14B
 422+ A14B 4E           Transfiere_datos_de_contadores ld c,(hl)
 423+ A14C 23               inc hl
 424+ A14D 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 425+ A14E DD 71 09         ld (ix+9),c
 426+ A151 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 427+ A154 C9               ret
 428+ A155
# file closed: Movimiento.asm
2330  A155              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A155              ; --------------------------------------------------------------------------------------
   2+ A155              ;
   3+ A155              ;   25/10/24
   4+ A155              ;
   5+ A155
   6+ A155              Pinta_disparos_Entidades
   7+ A155
   8+ A155 ED 73 39 8C      ld (Stack),sp
   9+ A159 ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A15D
  11+ A15D 3E 02            ld a,2
  12+ A15F 08               ex af,af
  13+ A160
  14+ A160 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A162              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A162              ;                                     _ No encontraría "0".
  17+ A162 FD E1        4 pop iy
  18+ A164 D1               pop de                          ; 1er .db IYL
  19+ A165              ;                                   ; 2º  .db IYH
  20+ A165              ;                                   ; 3er .db E.
  21+ A165              ;   Album vacío ???
  22+ A165
  23+ A165 FD 7D            ld a,iyl
  24+ A167 FD 84            add iyh
  25+ A169 83               add e
  26+ A16A 28 1F            jr z,1F
  27+ A16C
  28+ A16C              ;   Imprime album, (contiene datos).
  29+ A16C
  30+ A16C 3B               dec sp
  31+ A16D
  32+ A16D E1               pop hl                          ; Puntero de impresión en HL.
  33+ A16E
  34+ A16E              ; Imprime el 1er scanline del disparo.
  35+ A16E
  36+ A16E FD 7D            ld a,iyl
  37+ A170 AE               xor (hl)
  38+ A171 77               ld (hl),a
  39+ A172
  40+ A172 2C               inc l
  41+ A173
  42+ A173 FD 7C            ld a,iyh
  43+ A175 AE               xor (hl)
  44+ A176 77               ld (hl),a
  45+ A177
  46+ A177 2C               inc l
  47+ A178
  48+ A178 7B               ld a,e
  49+ A179 AE               xor (hl)
  50+ A17A 77               ld (hl),a
  51+ A17B
  52+ A17B              ; Imprime el 2º scanline del disparo.
  53+ A17B
  54+ A17B E1               pop hl
  55+ A17C
  56+ A17C FD 7D            ld a,iyl
  57+ A17E AE               xor (hl)
  58+ A17F 77               ld (hl),a
  59+ A180
  60+ A180 2C               inc l
  61+ A181
  62+ A181 FD 7C            ld a,iyh
  63+ A183 AE               xor (hl)
  64+ A184 77               ld (hl),a
  65+ A185
  66+ A185 2C               inc l
  67+ A186
  68+ A186 7B               ld a,e
  69+ A187 AE               xor (hl)
  70+ A188 77               ld (hl),a
  71+ A189
  72+ A189 10 D7            djnz 4B
  73+ A18B
  74+ A18B 08           1 ex af,af
  75+ A18C 3D               dec a
  76+ A18D 20 05            jr nz,2F
  77+ A18F
  78+ A18F ED 7B 39 8C      ld sp,(Stack)
  79+ A193 C9               ret
  80+ A194
  81+ A194 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A198 08               ex af,af
  83+ A199 18 C5            jr 3B
  84+ A19B
  85+ A19B              ; --------------------------------------------------------------------------------------
  86+ A19B              ;
  87+ A19B              ;   2/12/24
  88+ A19B              ;
  89+ A19B
  90+ A19B              Motor_de_disparos_entidades
  91+ A19B
  92+ A19B 3A 51 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A19E FE 07            cp 7
  94+ A1A0 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A1A1
  96+ A1A1 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A1A3 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ A1A6
  99+ A1A6 CD 97 91     1 call Extrae_address
 100+ A1A9 1C               inc e
 101+ A1AA 1C               inc e
 102+ A1AB ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A1AF
 104+ A1AF               ; Caja vacía ???
 105+ A1AF
 106+ A1AF 2D               dec l
 107+ A1B0 7E               ld a,(hl)
 108+ A1B1 A7               and a
 109+ A1B2 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A1B4
 111+ A1B4              ; --- Trabajamos con caja:
 112+ A1B4
 113+ A1B4 2C               inc l
 114+ A1B5
 115+ A1B5              ; --- Existe posibilidad de impacto ???
 116+ A1B5
 117+ A1B5 3A 8A 8C         ld a,(Shield)
 118+ A1B8 A7               and a
 119+ A1B9 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A1BB
 121+ A1BB CB 46            bit 0,(hl)
 122+ A1BD C4 FD A1         call nz, Comprueba_impacto_con_Amadeus
 123+ A1C0 20 37            jr nz,3F
 124+ A1C2
 125+ A1C2 CD 84 A2     6 call Rota_disparo_si_procede
 126+ A1C5
 127+ A1C5              ; ------------------------------------------------------------
 128+ A1C5
 129+ A1C5 2D               dec l
 130+ A1C6 2D               dec l
 131+ A1C7
 132+ A1C7 CD 97 91         call Extrae_address
 133+ A1CA
 134+ A1CA              ;   (Puntero_de_impresion) del disparo en HL
 135+ A1CA              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A1CA
 137+ A1CA 3A 63 8C         ld a,(Ctrl_5)
 138+ A1CD CB 57            bit 2,a
 139+ A1CF 28 09            jr z,4F
 140+ A1D1
 141+ A1D1 CB 97            res 2,a
 142+ A1D3 32 63 8C         ld (Ctrl_5),a
 143+ A1D6 2C               inc l
 144+ A1D7 2C               inc l
 145+ A1D8 18 0C            jr 5F
 146+ A1DA
 147+ A1DA CB 5F        4 bit 3,a
 148+ A1DC 28 08            jr z,5F
 149+ A1DE
 150+ A1DE CB 9F            res 3,a
 151+ A1E0 32 63 8C         ld (Ctrl_5),a
 152+ A1E3 2D               dec l
 153+ A1E4 2D               dec l
 154+ A1E5 2D               dec l
 155+ A1E6
 156+ A1E6              ; ---------------------------------------------------------------------
 157+ A1E6
 158+ A1E6              ;! Velocidad del disparo de entidades.
 159+ A1E6
 160+ A1E6 CD 15 9C     5 call NextScan
 161+ A1E9 CD 15 9C         call NextScan
 162+ A1EC
 163+ A1EC              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A1EC
 165+ A1EC CD 61 A2         call Fin_de_disparo_de_entidad
 166+ A1EF
 167+ A1EF EB               ex de,hl
 168+ A1F0
 169+ A1F0 73               ld (hl),e
 170+ A1F1 23               inc hl
 171+ A1F2 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A1F3
 173+ A1F3 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A1F6 18 02            jr 2F
 175+ A1F8
 176+ A1F8 C9               ret
 177+ A1F9
 178+ A1F9 EB           3 ex de,hl
 179+ A1FA 10 AA        2 djnz 1B
 180+ A1FC
 181+ A1FC C9               ret
 182+ A1FD
 183+ A1FD              ; ------------- ------------- ------------
 184+ A1FD              ;
 185+ A1FD              ;   1/11/24
 186+ A1FD
 187+ A1FD              Comprueba_impacto_con_Amadeus
 188+ A1FD
 189+ A1FD              ;   El disparo se encuentra en zona de Amadeus.
 190+ A1FD              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A1FD
 192+ A1FD              ;   Modificamos registros, así que guardamos ...
 193+ A1FD
 194+ A1FD C5               push bc
 195+ A1FE E5               push hl
 196+ A1FF D5               push de
 197+ A200
 198+ A200 2D               dec l
 199+ A201 2D               dec l
 200+ A202
 201+ A202 CD 97 91         call Extrae_address
 202+ A205
 203+ A205 3A AF 89         ld a,(CX_Amadeus)
 204+ A208 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A209
 206+ A209 7D               ld a,l
 207+ A20A E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A20C
 209+ A20C 06 03            ld b,3
 210+ A20E
 211+ A20E B9           1 cp c
 212+ A20F 28 15            jr z,Coincidencia
 213+ A211 0C               inc c
 214+ A212 10 FA            djnz 1B
 215+ A214
 216+ A214 0D               dec c
 217+ A215 0D               dec c
 218+ A216 0D               dec c
 219+ A217
 220+ A217 3C               inc a
 221+ A218 B9               cp c
 222+ A219 28 0B            jr z,Coincidencia
 223+ A21B
 224+ A21B 3C               inc a
 225+ A21C B9               cp c
 226+ A21D 28 07            jr z,Coincidencia
 227+ A21F
 228+ A21F D1           2 pop de
 229+ A220 E1               pop hl
 230+ A221 C1               pop bc
 231+ A222
 232+ A222              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A222
 234+ A222 CB 86            res 0,(hl)
 235+ A224 AF               xor a                       ; Z before RET.
 236+ A225 C9               ret
 237+ A226
 238+ A226              Coincidencia
 239+ A226
 240+ A226              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A226              ;   Existe posibilidad de impacto.
 242+ A226              ;   Vamos a averiguarlo ...
 243+ A226
 244+ A226 1D               dec e
 245+ A227 1D               dec e
 246+ A228 1D               dec e
 247+ A229
 248+ A229              ; DE en Puntero_objeto del disparo.
 249+ A229              ; HL en Puntero_de_impresión del disparo.
 250+ A229
 251+ A229              ; Comparador:
 252+ A229
 253+ A229 06 03            ld b,3
 254+ A22B
 255+ A22B 1A           3 ld a,(de)
 256+ A22C 4F               ld c,a
 257+ A22D A6               and (hl)
 258+ A22E B9               cp c
 259+ A22F 20 06            jr nz,Amadeus_impactado
 260+ A231
 261+ A231 2C               inc l
 262+ A232 1C               inc e
 263+ A233
 264+ A233 10 F6            djnz 3B
 265+ A235
 266+ A235 18 E8            jr 2B
 267+ A237
 268+ A237              Amadeus_impactado
 269+ A237
 270+ A237              ; Borramos disparo.
 271+ A237
 272+ A237              ;   Exclusion.
 273+ A237
 274+ A237 D1               pop de
 275+ A238 E1               pop hl
 276+ A239
 277+ A239 E5               push hl
 278+ A23A D5               push de
 279+ A23B
 280+ A23B CD EF A2         call Borra_6_bytes
 281+ A23E
 282+ A23E 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A241 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A242
 285+ A242              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A242
 287+ A242 21 B2 89         ld hl,Impacto_Amadeus
 288+ A245 36 01            ld (hl),1
 289+ A247
 290+ A247              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A247              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A247
 293+ A247 3A B3 89         ld a,(p.imp.amadeus)
 294+ A24A FE DE            cp $de
 295+ A24C 20 04            jr nz,1F
 296+ A24E
 297+ A24E 3D               dec a
 298+ A24F 32 B3 89         ld (p.imp.amadeus),a
 299+ A252
 300+ A252              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A252
 302+ A252 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A255 21 B5 89         ld hl,Pamm_Amadeus
 304+ A258
 305+ A258 73               ld (hl),e
 306+ A259 23               inc hl
 307+ A25A 72               ld (hl),d
 308+ A25B
 309+ A25B D1               pop de
 310+ A25C E1               pop hl
 311+ A25D C1               pop bc
 312+ A25E
 313+ A25E AF               xor a
 314+ A25F 3C               inc a               ; NZ before RET.
 315+ A260 C9               ret
 316+ A261
 317+ A261              ; ------------- ------------- ------------
 318+ A261              ;
 319+ A261              ;   31/10/24
 320+ A261
 321+ A261              Fin_de_disparo_de_entidad
 322+ A261
 323+ A261              ; Estamos en zona de Amadeus ??
 324+ A261
 325+ A261 7C               ld a,h
 326+ A262 FE 54            cp $54
 327+ A264 38 0D            jr c,1F
 328+ A266
 329+ A266 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A267
 331+ A267 5D               ld e,l
 332+ A268 54               ld d,h
 333+ A269
 334+ A269 21 E0 57         ld hl,$57e0
 335+ A26C ED 52            sbc hl,de
 336+ A26E
 337+ A26E 38 6F            jr c,Elimina_disparo_entidad
 338+ A270
 339+ A270 6B               ld l,e
 340+ A271 62               ld h,d
 341+ A272
 342+ A272 D1               pop de
 343+ A273
 344+ A273 7C           1 ld a,h
 345+ A274 FE 50            cp $50
 346+ A276 D8               ret c
 347+ A277
 348+ A277 7D               ld a,l
 349+ A278 FE C0            cp $c0
 350+ A27A D8               ret c
 351+ A27B
 352+ A27B              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A27B              ; Así podremos comprobar si hay colisión más adelante.
 354+ A27B
 355+ A27B 1C               inc e
 356+ A27C 1C               inc e
 357+ A27D
 358+ A27D EB               ex de,hl
 359+ A27E CB C6            set 0,(hl)
 360+ A280 EB               ex de,hl
 361+ A281
 362+ A281 1D               dec e
 363+ A282 1D               dec e
 364+ A283
 365+ A283 C9               ret
 366+ A284
 367+ A284              ; ----------------------------------------------------------
 368+ A284              ;
 369+ A284              ;   08/10/24
 370+ A284
 371+ A284              ;   Estructura de un disparo de entidades.
 372+ A284
 373+ A284              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A284              ; 	defw 0											; Puntero de impresión.
 375+ A284              ;	defw 0											; Control.
 376+ A284
 377+ A284              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A284              ;   _de la entidad en el momento de disparar.
 379+ A284
 380+ A284              ;   El byte alto muestra la siguiente información:
 381+ A284              ;
 382+ A284              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A284              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A284              ;
 385+ A284              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A284              ;
 387+ A284              ;                        10xx ..... Izquierda.
 388+ A284              ;                        01xx ..... Derecha.
 389+ A284              ;                        00xx ..... Recto.
 390+ A284
 391+ A284              Rota_disparo_si_procede
 392+ A284
 393+ A284              ;   Nos situamos en el byte alto de (Control).
 394+ A284
 395+ A284 CB 76            bit 6,(hl)
 396+ A286 20 2D            jr nz,Rota_a_derecha
 397+ A288 CB 7E            bit 7,(hl)
 398+ A28A C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A28B
 400+ A28B              Rota_a_izq
 401+ A28B
 402+ A28B E5               push hl
 403+ A28C
 404+ A28C 7D               ld a,l
 405+ A28D D6 05            sub 5
 406+ A28F 6F               ld l,a
 407+ A290
 408+ A290 E5               push hl
 409+ A291 FD E1            pop iy
 410+ A293
 411+ A293 A7               and a
 412+ A294
 413+ A294 FD CB 02 16      rl (iy+02)
 414+ A298 FD CB 01 16      rl (iy+01)
 415+ A29C FD CB 00 16      rl (iy+00)
 416+ A2A0
 417+ A2A0 30 3B            jr nc,Exit
 418+ A2A2
 419+ A2A2              ; Desplazamiento completo hasta Carry.
 420+ A2A2              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A2A2
 422+ A2A2 FD 36 02 03      ld (iy+02),$03
 423+ A2A6 FD 36 01 00      ld (iy+01),$00
 424+ A2AA FD 36 00 00      ld (iy+00),$00
 425+ A2AE
 426+ A2AE 21 63 8C         ld hl,Ctrl_5
 427+ A2B1 CB DE            set 3,(hl)
 428+ A2B3
 429+ A2B3 18 28            jr Exit
 430+ A2B5
 431+ A2B5              Rota_a_derecha
 432+ A2B5
 433+ A2B5 E5               push hl
 434+ A2B6
 435+ A2B6 7D               ld a,l
 436+ A2B7 D6 05            sub 5
 437+ A2B9 6F               ld l,a
 438+ A2BA
 439+ A2BA E5               push hl
 440+ A2BB FD E1            pop iy
 441+ A2BD
 442+ A2BD A7               and a
 443+ A2BE
 444+ A2BE FD CB 00 1E      rr (iy+00)
 445+ A2C2 FD CB 01 1E      rr (iy+01)
 446+ A2C6 FD CB 02 1E      rr (iy+02)
 447+ A2CA
 448+ A2CA 30 11            jr nc,Exit
 449+ A2CC
 450+ A2CC              ; Desplazamiento completo hasta Carry.
 451+ A2CC              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A2CC
 453+ A2CC FD 36 00 01      ld (iy+00),$01
 454+ A2D0 FD 36 01 80      ld (iy+01),$80
 455+ A2D4 FD 36 02 00      ld (iy+02),$00
 456+ A2D8
 457+ A2D8 21 63 8C         ld hl,Ctrl_5
 458+ A2DB CB D6            set 2,(hl)
 459+ A2DD
 460+ A2DD E1           Exit pop hl
 461+ A2DE C9               ret
 462+ A2DF
 463+ A2DF              ; ------------ ----------- ------------
 464+ A2DF              ;
 465+ A2DF              ;   25/9/24
 466+ A2DF
 467+ A2DF              Elimina_disparo_entidad
 468+ A2DF
 469+ A2DF 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A2E2 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A2E3
 472+ A2E3 E1               pop hl
 473+ A2E4 E5               push hl
 474+ A2E5
 475+ A2E5 2C               inc l
 476+ A2E6 2C               inc l
 477+ A2E7
 478+ A2E7 CD EF A2         call Borra_6_bytes
 479+ A2EA
 480+ A2EA D1               pop de
 481+ A2EB
 482+ A2EB 21 00 00         ld hl,0
 483+ A2EE
 484+ A2EE C9               ret
 485+ A2EF
 486+ A2EF              ; ----- ----- ----- ----- -----
 487+ A2EF
 488+ A2EF              Borra_6_bytes
 489+ A2EF
 490+ A2EF 16 06            ld d,6                                                    ; Contador
 491+ A2F1 AF               xor a                                                     ; Borrador
 492+ A2F2 77           1 ld (hl),a
 493+ A2F3 2D               dec l
 494+ A2F4 15               dec d
 495+ A2F5 20 FB            jr nz,1B
 496+ A2F7
 497+ A2F7 C9               ret
 498+ A2F8
 499+ A2F8              ; --------------------------------------------------------------------------------------
 500+ A2F8              ;
 501+ A2F8              ;   12/10/24
 502+ A2F8              ;
 503+ A2F8
 504+ A2F8              Genera_datos_de_impresion_disparos_Entidades
 505+ A2F8
 506+ A2F8 3E 07            ld a,7
 507+ A2FA 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A2FB
 509+ A2FB              ; ---------------
 510+ A2FB
 511+ A2FB              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A2FB
 513+ A2FB 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A2FE
 515+ A2FE CD 97 91     1 call Extrae_address
 516+ A301
 517+ A301 13               inc de
 518+ A302 13               inc de
 519+ A303
 520+ A303 ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A307
 522+ A307 2D               dec l
 523+ A308 7E               ld a,(hl)
 524+ A309 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A30A 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A30C
 527+ A30C              ; ----- ----- ----- -----
 528+ A30C
 529+ A30C 2D               dec l
 530+ A30D CD 97 91         call Extrae_address
 531+ A310 E5               push hl
 532+ A311
 533+ A311 1D               dec e
 534+ A312
 535+ A312 EB               ex de,hl
 536+ A313
 537+ A313 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A314 2D               dec l
 539+ A315 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A316 2D               dec l
 541+ A317 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A318
 543+ A318 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A319
 545+ A319              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A319
 547+ A319 FD 2A 4D 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A31D FD 73 00         ld (iy+0),e
 549+ A320 FD 70 01         ld (iy+1),b
 550+ A323 FD 71 02         ld (iy+2),c
 551+ A326
 552+ A326 FD 75 03         ld (iy+3),l
 553+ A329 FD 74 04         ld (iy+4),h
 554+ A32C
 555+ A32C CD 15 9C         call NextScan
 556+ A32F
 557+ A32F FD 75 05         ld (iy+5),l
 558+ A332 FD 74 06         ld (iy+6),h
 559+ A335
 560+ A335 FD E5            push iy
 561+ A337 E1               pop hl
 562+ A338
 563+ A338 3E 07            ld a,7
 564+ A33A 85               add l
 565+ A33B 6F               ld l,a
 566+ A33C
 567+ A33C 22 4D 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A33F
 569+ A33F              ; ----- ----- ----- -----
 570+ A33F
 571+ A33F              Situa_en_siguiente_caja
 572+ A33F
 573+ A33F 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A340 3D               dec a
 575+ A341 C8               ret z
 576+ A342
 577+ A342 08               ex af,af
 578+ A343 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A346 18 B6            jr 1B
 580+ A348
 581+ A348              ; --------------------------------------------------------------------------------------
 582+ A348              ;
 583+ A348              ;   12/10/24
 584+ A348              ;
 585+ A348
 586+ A348              Genera_disparo_de_entidad_maldosa
 587+ A348
 588+ A348              ;   Estructura de un disparo de entidades.
 589+ A348
 590+ A348              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A348              ; 	defw 0											; Puntero de impresión.
 592+ A348              ;	defw 0											; Control.
 593+ A348
 594+ A348              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A348              ;   _de la entidad en el momento de disparar.
 596+ A348
 597+ A348              ;   El byte de control muestra la siguiente información:
 598+ A348
 599+ A348              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A348              ;
 601+ A348              ;                        10xx ..... Izquierda.
 602+ A348              ;                        01xx ..... Derecha.
 603+ A348              ;                        00xx ..... Recto.
 604+ A348
 605+ A348              ;*  Exclusiones.
 606+ A348
 607+ A348              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A348              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A348
 610+ A348 3A 51 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A34B A7               and a
 612+ A34C C8               ret z
 613+ A34D
 614+ A34D 3A EC 8B         ld a,(Coordenada_y)
 615+ A350 A7               and a
 616+ A351 C8               ret z
 617+ A352
 618+ A352 3D               dec a
 619+ A353 C8               ret z
 620+ A354
 621+ A354 FE 10            cp 16
 622+ A356 D0               ret nc
 623+ A357
 624+ A357              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A357              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A357              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A357
 628+ A357 21 53 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A35A 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A35B
 631+ A35B              ;   Decrementa el numero de disparos de entidades.
 632+ A35B
 633+ A35B 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A35E 35               dec (hl)
 635+ A35F
 636+ A35F 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A362
 638+ A362 CD 97 91     1 call Extrae_address
 639+ A365
 640+ A365 13               inc de
 641+ A366 13               inc de
 642+ A367
 643+ A367 ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A36B
 645+ A36B              ;   Comprobamos si la caja está vacía.
 646+ A36B
 647+ A36B 2D               dec l
 648+ A36C 7E               ld a,(hl)
 649+ A36D A7               and a
 650+ A36E 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A370 2C               inc l
 652+ A371
 653+ A371              ;   Caja vacía, vamos a generar un disparo.
 654+ A371              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A371
 656+ A371 CD 92 A3         call Genera_byte_inclinacion
 657+ A374
 658+ A374 7E               ld a,(hl)
 659+ A375 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A376
 661+ A376 2D               dec l
 662+ A377
 663+ A377 CD AE A3         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A37A
 665+ A37A 70               ld (hl),b
 666+ A37B 2D               dec l
 667+ A37C 71               ld (hl),c
 668+ A37D
 669+ A37D 2D               dec l
 670+ A37E
 671+ A37E              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A37E
 673+ A37E FD 7E 02         ld a,(iy+02)
 674+ A381 77               ld (hl),a
 675+ A382 2D               dec l
 676+ A383
 677+ A383 FD 7E 01         ld a,(iy+01)
 678+ A386 77               ld (hl),a
 679+ A387 2D               dec l
 680+ A388
 681+ A388 FD 7E 00         ld a,(iy+00)
 682+ A38B 77               ld (hl),a
 683+ A38C
 684+ A38C C9               ret
 685+ A38D
 686+ A38D              ;   --- --- ---
 687+ A38D
 688+ A38D              Situa_en_siguiente_disparo
 689+ A38D
 690+ A38D 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A390 18 D0            jr 1B
 692+ A392
 693+ A392              ; --------------------------------------------------------------------------------------
 694+ A392              ;
 695+ A392              ;   09/10/24
 696+ A392              ;
 697+ A392
 698+ A392              Genera_byte_inclinacion
 699+ A392
 700+ A392              ; Determina tendencia del disparo.
 701+ A392
 702+ A392 3A AF 89         ld a,(CX_Amadeus)
 703+ A395 47               ld b,a
 704+ A396 3A EB 8B         ld a,(Coordenada_X)
 705+ A399 90               sub b
 706+ A39A 38 07            jr c,Disparo_a_derecha
 707+ A39C
 708+ A39C FE 06        Disparo_a_izquierda cp 6
 709+ A39E
 710+ A39E D8               ret c
 711+ A39F C8               ret z
 712+ A3A0
 713+ A3A0 CB FE            set 7,(hl)
 714+ A3A2 C9               ret
 715+ A3A3
 716+ A3A3 47           Disparo_a_derecha ld b,a
 717+ A3A4 3E FF            ld a,$ff
 718+ A3A6 90               sub b
 719+ A3A7
 720+ A3A7 FE 05            cp 5
 721+ A3A9
 722+ A3A9 D8               ret c
 723+ A3AA C8               ret z
 724+ A3AB
 725+ A3AB CB F6            set 6,(hl)
 726+ A3AD C9               ret
 727+ A3AE
 728+ A3AE              ; --------------------------------------------------------------------------------------
 729+ A3AE              ;
 730+ A3AE              ;   09/10/24
 731+ A3AE              ;
 732+ A3AE
 733+ A3AE              Modifica_puntero_de_impresion
 734+ A3AE
 735+ A3AE              ;   Puntero de impresión del disparo en BC.
 736+ A3AE
 737+ A3AE E5               push hl
 738+ A3AF
 739+ A3AF 2A 66 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A3B2 CD 15 9C         call NextScan
 741+ A3B5
 742+ A3B5 4D               ld c,l
 743+ A3B6 44               ld b,h
 744+ A3B7
 745+ A3B7 E1               pop hl
 746+ A3B8
 747+ A3B8 08               ex af,af
 748+ A3B9 CB 77            bit 6,a
 749+ A3BB 28 06            jr z,1F
 750+ A3BD
 751+ A3BD FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A3C1 0C               inc c
 753+ A3C2 C9               ret
 754+ A3C3
 755+ A3C3 CB 7F        1 bit 7,a
 756+ A3C5 28 F6            jr z,2B
 757+ A3C7
 758+ A3C7 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A3CB 0D               dec c
 760+ A3CC
 761+ A3CC C9               ret
 762+ A3CD
 763+ A3CD              ; --------------------------------------------------------------------------------------
 764+ A3CD              ;
 765+ A3CD              ;   28/11/24
 766+ A3CD              ;
 767+ A3CD
 768+ A3CD              Compara_con_coordenadas_de_disparo
 769+ A3CD
 770+ A3CD DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A3D0 47               ld b,a
 772+ A3D1 3A 6B 8C         ld a,(Coordenadas_disparo_certero)
 773+ A3D4 90               sub b
 774+ A3D5
 775+ A3D5              ; A = "0" ok
 776+ A3D5              ; A = "1" ok
 777+ A3D5
 778+ A3D5 28 08            jr z,Comprueba_coordenada_X
 779+ A3D7 3D               dec a
 780+ A3D8 28 05            jr z,Comprueba_coordenada_X
 781+ A3DA
 782+ A3DA              ; A = "$ff" ok
 783+ A3DA
 784+ A3DA FE FE            cp $fe
 785+ A3DC 28 01            jr z,Comprueba_coordenada_X
 786+ A3DE
 787+ A3DE C9               ret
 788+ A3DF
 789+ A3DF              Comprueba_coordenada_X
 790+ A3DF
 791+ A3DF DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A3E2 47               ld b,a
 793+ A3E3 21 6C 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A3E6 7E               ld a,(hl)
 795+ A3E7 90               sub b
 796+ A3E8
 797+ A3E8              ; A = "0" ok
 798+ A3E8              ; A = "1" ok
 799+ A3E8
 800+ A3E8 28 09            jr z,Activa_Impacto_en_entidad
 801+ A3EA 3D               dec a
 802+ A3EB 28 06            jr z,Activa_Impacto_en_entidad
 803+ A3ED
 804+ A3ED              ; A = "2" ok
 805+ A3ED
 806+ A3ED 3D               dec a
 807+ A3EE 28 03            jr z,Activa_Impacto_en_entidad
 808+ A3F0
 809+ A3F0              ; A = "$ff"
 810+ A3F0
 811+ A3F0 FE FD            cp $fd
 812+ A3F2 C0               ret nz
 813+ A3F3
 814+ A3F3              Activa_Impacto_en_entidad
 815+ A3F3
 816+ A3F3              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A3F3
 818+ A3F3 3E 02            ld a,2
 819+ A3F5 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A3F8
 821+ A3F8              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A3F8
 823+ A3F8 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A3FB
 825+ A3FB DD 73 07         ld (ix+7),e
 826+ A3FE DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A401
 828+ A401              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A401
 830+ A401 21 68 8C         ld hl,Impacto2
 831+ A404 CB 9E            res 3,(hl)
 832+ A406
 833+ A406 C9               ret
 834+ A407
 835+ A407              ; --------------------------------------------------------------------------------------
 836+ A407              ;
 837+ A407              ;   13/10/24
 838+ A407              ;
 839+ A407
 840+ A407              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A407
 842+ A407              Limpia_album_de_pintado_disparos_Amadeus
 843+ A407
 844+ A407 2A 45 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A40A 06 06            ld b,6
 846+ A40C AF               xor a
 847+ A40D 77           1 ld (hl),a
 848+ A40E 2C               inc l
 849+ A40F 10 FC            djnz 1B
 850+ A411
 851+ A411 C9               ret
 852+ A412
 853+ A412              ; --------------------------------------------------------------------------------------
 854+ A412              ;
 855+ A412              ;   29/09/24
 856+ A412              ;
 857+ A412
 858+ A412              Calcula_bytes_pintado_disparos
 859+ A412
 860+ A412 2A 49 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A415 45               ld b,l
 862+ A416 2A 4D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A419 7D               ld a,l
 864+ A41A
 865+ A41A 90               sub b
 866+ A41B 32 4F 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A41E
 868+ A41E C9               ret
 869+ A41F
 870+ A41F              ; --------------------------------------------------------------------------------------
 871+ A41F              ;
 872+ A41F              ;   26/10/24
 873+ A41F              ;
 874+ A41F              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A41F              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A41F              ;   _disparos que el álbum del FRAME actual).
 877+ A41F
 878+ A41F              Limpia_album_de_pintado_disparos_entidades
 879+ A41F
 880+ A41F 21 50 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A422 7E               ld a,(hl)
 882+ A423 2D               dec l
 883+ A424 46               ld b,(hl)
 884+ A425 90               sub b
 885+ A426
 886+ A426 D8               ret c
 887+ A427 C8               ret z
 888+ A428
 889+ A428 F5               push af
 890+ A429 80               add b
 891+ A42A 77               ld (hl),a
 892+ A42B F1               pop af
 893+ A42C
 894+ A42C              ; Clean.
 895+ A42C
 896+ A42C 47           2 ld b,a
 897+ A42D AF               xor a
 898+ A42E 2A 4D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A431 77           1 ld (hl),a
 900+ A432 23               inc hl
 901+ A433 10 FC            djnz 1B
 902+ A435
 903+ A435 C9               ret
 904+ A436
 905+ A436              ; --------------------------------------------------------------------------------------
 906+ A436              ;
 907+ A436              ;   29/09/24
 908+ A436              ;
 909+ A436
 910+ A436              Motor_Disparos_Amadeus
 911+ A436
 912+ A436 21 1D 89         ld hl,Disparo_Amad+1
 913+ A439
 914+ A439 34               inc (hl)
 915+ A43A 35               dec (hl)
 916+ A43B
 917+ A43B C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A43C
 919+ A43C              ;   Esta caja contiene un disparo.
 920+ A43C
 921+ A43C CD 43 A4         call Consulta_Impacto
 922+ A43F CC 5C A4         call z,Mueve_disparo_Amadeus
 923+ A442
 924+ A442 C9               ret
 925+ A443
 926+ A443              ; ----------------------
 927+ A443              ;
 928+ A443              ;
 929+ A443              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A443              ;
 931+ A443              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A443
 933+ A443
 934+ A443              Consulta_Impacto
 935+ A443
 936+ A443              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A443              ;   _sea lo más coherente posible.
 938+ A443
 939+ A443 E5               push hl
 940+ A444 2B               dec hl
 941+ A445 CD 38 A5         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A448 E1               pop hl
 943+ A449 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A44A
 945+ A44A C8               ret z
 946+ A44B
 947+ A44B 3A 68 8C         ld a,(Impacto2)
 948+ A44E CB DF            set 3,a
 949+ A450 32 68 8C         ld (Impacto2),a
 950+ A453
 951+ A453 E5               push hl
 952+ A454 CD 25 A5         call Genera_coordenadas_de_disparo_Amadeus
 953+ A457 E1               pop hl
 954+ A458 CD 75 A4         call Elimina_disparo_Amadeus
 955+ A45B
 956+ A45B C9               ret
 957+ A45C
 958+ A45C              ; ----------------------
 959+ A45C              ;
 960+ A45C              ;
 961+ A45C              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A45C
 963+ A45C              Mueve_disparo_Amadeus
 964+ A45C
 965+ A45C CD 97 91         call Extrae_address
 966+ A45F
 967+ A45F CD 24 9C         call PreviousScan
 968+ A462 CD 24 9C         call PreviousScan
 969+ A465 CD 24 9C         call PreviousScan
 970+ A468 CD 24 9C         call PreviousScan
 971+ A46B
 972+ A46B              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A46B
 974+ A46B 7C               ld a,h
 975+ A46C D6 40            sub $40
 976+ A46E EB               ex de,hl
 977+ A46F 38 04            jr c,Elimina_disparo_Amadeus
 978+ A471
 979+ A471               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A471
 981+ A471 73               ld (hl),e
 982+ A472 23               inc hl
 983+ A473 72               ld (hl),d
 984+ A474
 985+ A474 C9               ret
 986+ A475
 987+ A475              ; ----------------------
 988+ A475              ;
 989+ A475              ;   29/9/24
 990+ A475
 991+ A475              Elimina_disparo_Amadeus
 992+ A475
 993+ A475              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A475              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A475
 996+ A475              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A475              ;   	defw 0											; Puntero de impresión.
 998+ A475
 999+ A475 2B               dec hl
1000+ A476 2B               dec hl
1001+ A477
1002+ A477 AF               xor a
1003+ A478 77               ld (hl),a
1004+ A479 23               inc hl
1005+ A47A 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A47B
1007+ A47B 23               inc hl
1008+ A47C 77               ld (hl),a
1009+ A47D 23               inc hl
1010+ A47E 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A47F
1012+ A47F 3E 01            ld a,1
1013+ A481 32 52 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A484
1015+ A484 CD 07 A4         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A487
1017+ A487 AF               xor a
1018+ A488 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A489
1020+ A489 C9               ret
1021+ A48A
1022+ A48A              ; --------------------------------------------------------------------------------------
1023+ A48A              ;
1024+ A48A              ;   13/10/24
1025+ A48A              ;
1026+ A48A
1027+ A48A              Pinta_disparos_Amadeus
1028+ A48A
1029+ A48A 06 02            ld b,2
1030+ A48C ED 73 39 8C      ld (Stack),sp
1031+ A490 ED 7B 47 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A494 D1           3 pop de
1033+ A495 14               inc d
1034+ A496 15               dec d
1035+ A497 28 1C            jr z,1F
1036+ A499 E1               pop hl
1037+ A49A
1038+ A49A              Imprime_scanlines_en_pantalla
1039+ A49A
1040+ A49A              ; 1er scanline
1041+ A49A
1042+ A49A 1A               ld a,(de)
1043+ A49B AE               xor (hl)
1044+ A49C 77               ld (hl),a
1045+ A49D
1046+ A49D 1C               inc e
1047+ A49E 2C               inc l
1048+ A49F
1049+ A49F 1A               ld a,(de)
1050+ A4A0 AE               xor (hl)
1051+ A4A1 77               ld (hl),a
1052+ A4A2
1053+ A4A2 1D               dec e
1054+ A4A3 E1               pop hl
1055+ A4A4
1056+ A4A4              ; 2º scanline
1057+ A4A4
1058+ A4A4 1A               ld a,(de)
1059+ A4A5 AE               xor (hl)
1060+ A4A6 77               ld (hl),a
1061+ A4A7
1062+ A4A7 1C               inc e
1063+ A4A8 2C               inc l
1064+ A4A9
1065+ A4A9 1A               ld a,(de)
1066+ A4AA AE               xor (hl)
1067+ A4AB 77               ld (hl),a
1068+ A4AC
1069+ A4AC 1D               dec e
1070+ A4AD
1071+ A4AD 18 06            jr 1F
1072+ A4AF
1073+ A4AF ED 7B 45 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A4B3 18 DF            jr 3B
1075+ A4B5 10 F8        1 djnz 2B
1076+ A4B7 ED 7B 39 8C      ld sp,(Stack)
1077+ A4BB C9               ret
1078+ A4BC
1079+ A4BC              ; --------------------------------------------------------------------------------------
1080+ A4BC              ;
1081+ A4BC              ;   13/10/24
1082+ A4BC              ;
1083+ A4BC              ;   Modifica: HL,BC y DE.
1084+ A4BC
1085+ A4BC
1086+ A4BC              Genera_datos_de_impresion_disparos_Amadeus
1087+ A4BC
1088+ A4BC ED 73 39 8C      ld (Stack),sp
1089+ A4C0 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A4C3 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A4C4
1092+ A4C4 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A4C5 15               dec d
1094+ A4C6
1095+ A4C6 28 0E            jr z,Salida
1096+ A4C8
1097+ A4C8              Genera_scanlines_de_disparo_Amadeus
1098+ A4C8
1099+ A4C8 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A4C9              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A4C9 ED 7B 45 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A4CD
1103+ A4CD C1               pop bc
1104+ A4CE C1               pop bc
1105+ A4CF C1               pop bc
1106+ A4D0
1107+ A4D0 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A4D1 CD 24 9C         call PreviousScan
1109+ A4D4 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A4D5 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A4D6
1112+ A4D6              Salida
1113+ A4D6
1114+ A4D6 ED 7B 39 8C      ld sp,(Stack)
1115+ A4DA
1116+ A4DA C9               ret
1117+ A4DB
1118+ A4DB              ; --------------------------------------------------------------------------------------
1119+ A4DB              ;
1120+ A4DB              ;   12/09/24
1121+ A4DB              ;
1122+ A4DB
1123+ A4DB              Genera_disparo_Amadeus
1124+ A4DB
1125+ A4DB              ;*  Exclusiones.
1126+ A4DB
1127+ A4DB 3A 52 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A4DE A7               and a
1129+ A4DF C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A4E0
1131+ A4E0 3D               dec a
1132+ A4E1 32 52 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A4E4
1134+ A4E4              Define_puntero_objeto_disparo
1135+ A4E4
1136+ A4E4              ;   Inicializamos contador.
1137+ A4E4
1138+ A4E4 06 00            ld b,0
1139+ A4E6
1140+ A4E6 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A4E9 2C               inc l
1142+ A4EA
1143+ A4EA 3E 80            ld a,$80
1144+ A4EC BE               cp (hl)
1145+ A4ED 28 0D            jr z,1F
1146+ A4EF
1147+ A4EF 04               inc b
1148+ A4F0
1149+ A4F0 3E 60            ld a,$60
1150+ A4F2 BE               cp (hl)
1151+ A4F3 28 07            jr z,1F
1152+ A4F5
1153+ A4F5
1154+ A4F5 04               inc b
1155+ A4F6
1156+ A4F6 3E 18            ld a,$18
1157+ A4F8 BE               cp (hl)
1158+ A4F9 28 01            jr z,1F
1159+ A4FB
1160+ A4FB 04               inc b
1161+ A4FC
1162+ A4FC              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A4FC
1164+ A4FC              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A4FC
1166+ A4FC CD 24 9C     1 call PreviousScan
1167+ A4FF
1168+ A4FF 78               ld a,b
1169+ A500 CB 3F            srl a
1170+ A502 28 03            jr z,4F
1171+ A504
1172+ A504              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A504 E5               push hl
1174+ A505 18 02            jr 5F
1175+ A507 2D           4 dec l
1176+ A508 E5               push hl
1177+ A509              ; ---
1178+ A509
1179+ A509              ;   Calcula el Puntero_objeto del disparo.
1180+ A509
1181+ A509 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A50C 04               inc b
1183+ A50D 05               dec b
1184+ A50E 28 04            jr z,2F
1185+ A510
1186+ A510              ;   Nos desplazamos por el índice de disparos.
1187+ A510
1188+ A510 2C           3 inc l
1189+ A511 2C               inc l
1190+ A512 10 FC            djnz 3B
1191+ A514
1192+ A514              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A514 CD 97 91     2 call Extrae_address
1194+ A517 E5               push hl
1195+ A518              ; ---
1196+ A518
1197+ A518              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A518              ; HL en el 1er .db de la caja.
1199+ A518
1200+ A518 21 1C 89         ld hl,Disparo_Amad
1201+ A51B
1202+ A51B 06 02            ld b,2
1203+ A51D
1204+ A51D D1           6 pop de
1205+ A51E 73               ld (hl),e
1206+ A51F 23               inc hl
1207+ A520 72               ld (hl),d
1208+ A521 23               inc hl
1209+ A522
1210+ A522 10 F9            djnz 6B
1211+ A524
1212+ A524 C9               ret
1213+ A525
1214+ A525              Genera_coordenadas_de_disparo_Amadeus
1215+ A525
1216+ A525              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A525              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A525              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A525
1220+ A525 CD 97 91         call Extrae_address
1221+ A528 CD A9 95         call Genera_coordenadas
1222+ A52B
1223+ A52B 3D               dec a
1224+ A52C
1225+ A52C 21 6B 8C         ld hl,Coordenadas_disparo_certero
1226+ A52F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A530 23               inc hl
1228+ A531 3A EB 8B         ld a,(Coordenada_X)
1229+ A534 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A535
1231+ A535 AF               xor a
1232+ A536 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A537
1234+ A537 C9               ret
1235+ A538
1236+ A538              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A538              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A538              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A538
1240+ A538              ; ----------------------------------------------
1241+ A538              ;
1242+ A538              ;   27/08/24
1243+ A538              ;
1244+ A538              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A538              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A538
1247+ A538              Detecta_impacto_en_disparo_de_Amadeus
1248+ A538
1249+ A538              Extraccion_de_datos
1250+ A538
1251+ A538 13               inc de
1252+ A539 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A53A
1254+ A53A 5E               ld e,(hl)
1255+ A53B 23               inc hl
1256+ A53C 56               ld d,(hl)
1257+ A53D
1258+ A53D 23               inc hl
1259+ A53E
1260+ A53E 4E               ld c,(hl)
1261+ A53F 23               inc hl
1262+ A540 46               ld b,(hl)
1263+ A541
1264+ A541 C5               push bc
1265+ A542 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A543
1267+ A543              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A543
1269+ A543 CD 24 9C         call PreviousScan
1270+ A546 CD 24 9C         call PreviousScan
1271+ A549
1272+ A549              Detecta_impacto_
1273+ A549
1274+ A549 1A               ld a,(de)
1275+ A54A A6               and (hl)
1276+ A54B C0               ret nz
1277+ A54C
1278+ A54C 13               inc de
1279+ A54D 23               inc hl
1280+ A54E
1281+ A54E 1A               ld a,(de)
1282+ A54F A6               and (hl)
1283+ A550 C9               ret
1284+ A551
1285+ A551              ; -------------------------------------------------------------------------------------------------------------
1286+ A551              ;
1287+ A551              ;   25/11//24
1288+ A551              ;
1289+ A551              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A551              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A551              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A551              ;
1293+ A551              ;   MODIFICA: HL,DE,BC y A.
1294+ A551              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A551              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A551
1297+ A551              Colision_Entidad_Amadeus
1298+ A551
1299+ A551              ; Posible contacto de entidad con Amadeus. ?????
1300+ A551
1301+ A551              ; Exclusiones:
1302+ A551
1303+ A551 3A 8A 8C         ld a,(Shield)
1304+ A554 A7               and a
1305+ A555 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A556
1307+ A556 21 61 8C         ld hl,Ctrl_3
1308+ A559 CB 76            bit 6,(hl)
1309+ A55B C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A55C
1311+ A55C 21 68 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A55F CB 56            bit 2,(hl)
1313+ A561 C0               ret nz
1314+ A562
1315+ A562 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A565 FE 14        	cp $14
1317+ A567 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A568
1319+ A568 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A56B A7               and a
1321+ A56C C0               ret nz
1322+ A56D
1323+ A56D              Genera_coordenadas_X
1324+ A56D
1325+ A56D              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A56D              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A56D
1328+ A56D              ;   Limpiamos almacenes.
1329+ A56D
1330+ A56D              ;    call Limpia_Coordenadas_X
1331+ A56D
1332+ A56D              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A56D
1334+ A56D 21 6D 8C         ld hl,Coordenadas_X_Entidad
1335+ A570 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A573 CD 99 A5         call Guarda_coordenadas_X
1337+ A576
1338+ A576              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A576
1340+ A576 3A AF 89         ld a,(CX_Amadeus)
1341+ A579 CD 99 A5         call Guarda_coordenadas_X
1342+ A57C
1343+ A57C DD E5            push ix
1344+ A57E CD AD A5         call Compara_coordenadas_X
1345+ A581 DD E1            pop ix
1346+ A583
1347+ A583 C0               ret nz
1348+ A584
1349+ A584 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A586 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A589
1352+ A589 DD 7D            ld a,ixl
1353+ A58B C6 04            add 4
1354+ A58D DD 6F            ld ixl,a
1355+ A58F
1356+ A58F DD 22 69 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A593
1358+ A593 21 68 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A596 CB D6            set 2,(hl)
1360+ A598
1361+ A598 C9               ret
1362+ A599
1363+ A599               ; ----- ----- ----- ----- -----
1364+ A599
1365+ A599 77           Guarda_coordenadas_X ld (hl),a
1366+ A59A 3C               inc a
1367+ A59B 2C               inc l
1368+ A59C 77               ld (hl),a
1369+ A59D 3C               inc a
1370+ A59E 2C               inc l
1371+ A59F 77               ld (hl),a
1372+ A5A0 2C               inc l
1373+ A5A1 C9               ret
1374+ A5A2
1375+ A5A2 AF           Limpia_Coordenadas_X xor a
1376+ A5A3 06 06            ld b,6
1377+ A5A5 21 70 8C         ld hl,Coordenadas_X_Amadeus
1378+ A5A8 77           1 ld (hl),a
1379+ A5A9 23               inc hl
1380+ A5AA 10 FC            djnz 1B
1381+ A5AC C9               ret
1382+ A5AD
1383+ A5AD              ; ----- ----- ----- ----- -----
1384+ A5AD
1385+ A5AD              Compara_coordenadas_X
1386+ A5AD
1387+ A5AD DD 21 6D 8C      ld ix,Coordenadas_X_Entidad
1388+ A5B1 DD 7E 00         ld a,(ix+0)
1389+ A5B4 CD C2 A5         call Comparando
1390+ A5B7 C8               ret z
1391+ A5B8
1392+ A5B8 3C               inc a
1393+ A5B9 CD D1 A5         call Comparando_1
1394+ A5BC C8               ret z
1395+ A5BD
1396+ A5BD 3C               inc a
1397+ A5BE CD D1 A5         call Comparando_1
1398+ A5C1 C9               ret
1399+ A5C2
1400+ A5C2              ; ----- ----- ----- ----- -----
1401+ A5C2              ;
1402+ A5C2              ;   4/12/23
1403+ A5C2              ;
1404+ A5C2              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A5C2
1406+ A5C2              Comparando
1407+ A5C2
1408+ A5C2 DD 2C            inc ixl
1409+ A5C4 DD 2C            inc ixl
1410+ A5C6 DD 2C            inc ixl
1411+ A5C8
1412+ A5C8 DD 46 00         ld b,(ix+0)
1413+ A5CB DD 4E 01         ld c,(ix+1)
1414+ A5CE DD 56 02         ld d,(ix+2)
1415+ A5D1
1416+ A5D1 B8           Comparando_1 cp b
1417+ A5D2 C8               ret z
1418+ A5D3 B9               cp c
1419+ A5D4 C8               ret z
1420+ A5D5 BA               cp d
1421+ A5D6 C9               ret
1422+ A5D7
1423+ A5D7              ; -----------------------------------------------------------------------
1424+ A5D7              ;
1425+ A5D7              ;   04/7/24
1426+ A5D7              ;
1427+ A5D7
1428+ A5D7              Detecta_colision_nave_entidad
1429+ A5D7
1430+ A5D7              ; Exclusiones:
1431+ A5D7
1432+ A5D7              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A5D7
1434+ A5D7 21 68 8C     	ld hl,Impacto2
1435+ A5DA CB 56        	bit 2,(hl)
1436+ A5DC C8           	ret z
1437+ A5DD
1438+ A5DD              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A5DD
1440+ A5DD 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A5E0 CD 97 91         call Extrae_address
1442+ A5E3 54               ld d,h
1443+ A5E4 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A5E5
1445+ A5E5 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A5E8 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A5EA FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A5ED
1449+ A5ED C5           1 push bc
1450+ A5EE 06 03            ld b,3
1451+ A5F0 E5               push hl
1452+ A5F1
1453+ A5F1              ; .db
1454+ A5F1
1455+ A5F1 1A           3 ld a,(de)
1456+ A5F2 A7               and a
1457+ A5F3 20 03            jr nz,4F
1458+ A5F5
1459+ A5F5 2C               inc l
1460+ A5F6 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A5F8
1462+ A5F8 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A5FA 28 04            jr z,2F
1464+ A5FC
1465+ A5FC              ; Impacto.
1466+ A5FC FD 2D            dec iyl
1467+ A5FE 28 22            jr z,5F
1468+ A600
1469+ A600 1C           2 inc e
1470+ A601 10 EE            djnz 3B
1471+ A603
1472+ A603 E1               pop hl
1473+ A604
1474+ A604              ; Hay salto de línea en el puntero de impresión ???
1475+ A604
1476+ A604 7C               ld a,h
1477+ A605 D6 57            sub $57
1478+ A607 20 0A            jr nz,6F
1479+ A609
1480+ A609              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A609
1482+ A609 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A60C 3E 20            ld a,$20
1484+ A60E A7               and a
1485+ A60F 85               add l
1486+ A610 6F               ld l,a
1487+ A611 18 01            jr 7F
1488+ A613
1489+ A613 24           6 inc h
1490+ A614
1491+ A614 C1           7 pop bc
1492+ A615 10 D6            djnz 1B
1493+ A617
1494+ A617              ;   Fin de la comparativa.
1495+ A617
1496+ A617              ;   NO HAY COLISIÓN !!!!!.
1497+ A617              ;
1498+ A617              ;   .db (Impacto) de Amadeus a "0".
1499+ A617              ;   RES el bit2 de (Impacto2).
1500+ A617              ;
1501+ A617              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A617              ;   Lo colocamos a "0".
1503+ A617
1504+ A617 21 68 8C         ld hl,Impacto2
1505+ A61A CB 96            res 2,(hl)
1506+ A61C 2A 69 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A61F 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A621 C9               ret
1509+ A622
1510+ A622              ;   COLISIÓN !!!!!.
1511+ A622              ;
1512+ A622              ;   .db (Impacto) de Amadeus a "1".
1513+ A622              ;   SET el bit3 de (Impacto2).
1514+ A622              ;
1515+ A622              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A622
1517+ A622 E1           5 pop hl
1518+ A623 C1               pop bc
1519+ A624
1520+ A624 21 B2 89         ld hl,Impacto_Amadeus
1521+ A627 36 01            ld (hl),1
1522+ A629 21 68 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A62C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A62E
1525+ A62E 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A631 2A 69 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A634
1528+ A634 23               inc hl
1529+ A635 23               inc hl
1530+ A636 23               inc hl
1531+ A637
1532+ A637 73               ld (hl),e
1533+ A638 23               inc hl
1534+ A639 72               ld (hl),d
1535+ A63A
1536+ A63A              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A63A
1538+ A63A 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A63D 21 B5 89         ld hl,Pamm_Amadeus
1540+ A640
1541+ A640 73               ld (hl),e
1542+ A641 23               inc hl
1543+ A642 72               ld (hl),d
1544+ A643
1545+ A643 C9               ret
1546+ A644
1547+ A644
1548+ A644
# file closed: Disparo.asm
2331  A644
2332  A644              	SAVESNA "Pruebas.sna", START
2333  A644
2334  A644
2335  A644
2336  A644
# file closed: Banco_de_pruebas.asm
