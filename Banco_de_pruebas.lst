# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 29 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 19 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 5E 50        Posicion_inicio defw $505e								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 04           Cuad_objeto db 4										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 15 96        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7
 172  85D7              ; Gestión de ENTIDADES.
 173  85D7
 174  85D7 00 00        Puntero_store_entidades defw 0
 175  85D9 00 00        Puntero_restore_entidades defw 0
 176  85DB 00 00        Indice_restore defw 0
 177  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 178  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  85DF              ;														; _ (Numero_de_malotes)="0".
 182  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  85E1              ;														; _variable para almacenar lo posición del puntero_
 184  85E1              ; 														; _de pila, SP.
 185  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 189  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 192  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 203  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 204  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 206  85F3
 207  85F3
 208  85F3              ; Gestión de FRAMES.
 209  85F3
 210  85F3 00           Switch db 0
 211  85F4
 212  85F4              ; Variables de Raster y localización en pantalla.
 213  85F4
 214  85F4 00 FF        Temp_Raster defw $ff00
 215  85F6
 216  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 217  85F6              ;
 218  85F6              ;	14/11/22
 219  85F6
 220  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 221  85F9
 222  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 223  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 224  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 225  85FF F3           	DI
 226  8600
 227  8600 3E 07        	ld a,%00000111
 228  8602 CD 3D 92     	call Cls
 229  8605
 230  8605              ;	call Pinta_FILAS
 231  8605
 232  8605 CD 5F 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 233  8608
 234  8608 21 DD 85     	ld hl,Numero_de_entidades
 235  860B 46           	ld b,(hl)
 236  860C 04           	inc b
 237  860D 05           	dec b
 238  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 239  8610
 240  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 241  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 242  8610              ;	Pintamos el resto de entidades:
 243  8610
 244  8610 CD 58 87     	call Inicia_punteros_de_entidades
 245  8613
 246  8613              ;	INICIA ENTIDADES!!!!!
 247  8613
 248  8613 C5           1 push bc  												; Guardo el contador de entidades.
 249  8614 CD B2 87      	call Inicia_Puntero_objeto
 250  8617 CD 8D 8C     	call Draw
 251  861A CD A0 7F     	call Guarda_foto_registros
 252  861D CD FA 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 253  8620 C1           	pop bc
 254  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 255  8623
 256  8623              ; 	INICIA AMADEUS!!!!!
 257  8623
 258  8623 CD 3B 88     3 call Restore_Amadeus
 259  8626 CD B2 87     	call Inicia_Puntero_objeto
 260  8629 CD 8D 8C     	call Draw
 261  862C CD A0 7F     	call Guarda_foto_registros
 262  862F CD 4D 88     	call Store_Amadeus
 263  8632
 264  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 265  8632
 266  8632 CD 6E 87     	call Inicia_Puntero_Disparo_Entidades
 267  8635 CD 75 87     	call Inicia_Puntero_Disparo_Amadeus
 268  8638
 269  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 270  8638
 271  8638 CD 58 87     	call Inicia_punteros_de_entidades
 272  863B CD 29 88     	call Restore_Primera_entidad
 273  863E
 274  863E 3A DD 85     	ld a,(Numero_de_entidades)
 275  8641 3C           	inc a
 276  8642 32 DE 85     	ld (Numero_de_malotes),a
 277  8645
 278  8645 FB           2 ei
 279  8646 18 FD        	jr 2B
 280  8648
 281  8648              ; -----------------------------------------------------------------------------------
 282  8648
 283  8648              Frame
 284  8648
 285  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 286  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 287  8648
 288  8648 3E 02            ld a,2
 289  864A D3 FE            out ($fe),a
 290  864C CD 91 8F     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 291  864F CD CA 8F     	call Extrae_foto_disparos
 292  8652 3E 01            ld a,1
 293  8654 D3 FE            out ($fe),a
 294  8656
 295  8656              ; ----------------------------------------------------------------------
 296  8656
 297  8656              ;	Existe colisión?????
 298  8656
 299  8656 3A EC 85     	ld a,(Impacto2)
 300  8659 A7           	and a
 301  865A 28 03        	jr z,5F
 302  865C
 303  865C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 304  865C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 305  865C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 306  865C
 307  865C CD 6B 8C     	call Selector_de_impactos
 308  865F
 309  865F CD 58 87     5 call Inicia_punteros_de_entidades
 310  8662 CD 29 88     	call Restore_Primera_entidad
 311  8665
 312  8665 AF           	xor a
 313  8666 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 314  8669
 315  8669 CD F5 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 316  866C 21 00 70     	ld hl,Album_de_fotos
 317  866F 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 318  8672              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 319  8672 3A DD 85         ld a,(Numero_de_entidades)
 320  8675 47               ld b,a
 321  8676 A7           	and a
 322  8677 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 323  8679
 324  8679 C5           2 push bc
 325  867A CD C3 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 326  867D
 327  867D 3A C9 85     	ld a,(Ctrl_0)
 328  8680 CB 67        	bit 4,a
 329  8682 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 330  8684
 331  8684              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 332  8684              ; Las entidades sólo generan disparo cuando se mueven.
 333  8684              ; 16/02/23.
 334  8684              ; [[[
 335  8684 CD 96 88     	call Detecta_disparo_entidad
 336  8687              ; ]]]
 337  8687 CD 1F 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 338  868A
 339  868A 21 C9 85     1 ld hl,Ctrl_0
 340  868D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 341  868F AF           	xor a
 342  8690 32 CA 85     	ld (Obj_dibujado),a
 343  8693
 344  8693 CD FA 87     6 call Store_Restore_entidades
 345  8696 C1           	pop bc
 346  8697 10 E0        	djnz 2B
 347  8699
 348  8699              ; Tras la gestión de las entidades, ... AMADEUS.
 349  8699
 350  8699 CD 3B 88     4 call Restore_Amadeus
 351  869C CD F0 86     	call Mov_Amadeus
 352  869F
 353  869F 3A C9 85     	ld a,(Ctrl_0)
 354  86A2 CB 67        	bit 4,a
 355  86A4 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 356  86A6
 357  86A6 CD 1F 87     	call Guarda_foto_entidad_a_pintar
 358  86A9
 359  86A9 21 C9 85     3 ld hl,Ctrl_0
 360  86AC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 361  86AE AF           	xor a
 362  86AF 32 CA 85     	ld (Obj_dibujado),a
 363  86B2 CD 4D 88     	call Store_Amadeus
 364  86B5
 365  86B5 CD 13 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 366  86B8
 367  86B8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 368  86B8
 369  86B8 CD 7C 87     	call Calcula_numero_de_malotes
 370  86BB CD 94 87     	call Calcula_numero_de_disparotes
 371  86BE
 372  86BE 3E 04        	ld a,4
 373  86C0 D3 FE        	out ($fe),a
 374  86C2 C9           	ret
 375  86C3
 376  86C3              ; --------------------------------------------------------------------------------------------------------------
 377  86C3              ;
 378  86C3              ;	27/03/23
 379  86C3
 380  86C3              Mov_obj
 381  86C3
 382  86C3              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 383  86C3
 384  86C3 AF           	xor a
 385  86C4 32 CA 85     	ld (Obj_dibujado),a
 386  86C7 CD 29 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 387  86CA              ;														; Obj_dibujado="0".
 388  86CA              ; Movemos Entidades malignas.
 389  86CA
 390  86CA 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 391  86CD 24           	inc h                                               ; Salimos de la rutina.
 392  86CE 25           	dec h
 393  86CF C8           	ret z
 394  86D0
 395  86D0 CD 2B 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 396  86D3
 397  86D3 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 398  86D6 CB 67        	bit 4,a
 399  86D8 C8           	ret z
 400  86D9
 401  86D9              ; Ha habido desplazamiento de la entidad maligna.
 402  86D9              ; Ha llegado a zona de AMADEUS ???
 403  86D9
 404  86D9 3A A2 85     	ld a,(Coordenada_y)
 405  86DC FE 14        	cp $14
 406  86DE D4 5F 8A     	call nc, Compara_coordenadas_X
 407  86E1
 408  86E1              ; ---------
 409  86E1
 410  86E1 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 411  86E3 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 412  86E6 CD 29 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 413  86E9 CD 40 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 414  86EC CD 0F 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 415  86EF C9           	ret													; _de la misma.
 416  86F0
 417  86F0              ; --------------------------------------------------------------------------------------------------------------
 418  86F0              ;
 419  86F0              ;	29/1/23
 420  86F0
 421  86F0              Mov_Amadeus
 422  86F0
 423  86F0 AF           	xor a
 424  86F1 32 CA 85     	ld (Obj_dibujado),a
 425  86F4 CD 29 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 426  86F7              ;														; Obj_dibujado="0".
 427  86F7              ; Movemos Amadeus.
 428  86F7
 429  86F7 CD 73 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 430  86FA 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 431  86FD CB 67        	bit 4,a
 432  86FF C8           	ret z
 433  8700
 434  8700              ; ---------
 435  8700
 436  8700 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 437  8702 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 438  8705 CD 29 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 439  8708 CD 40 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 440  870B CD 0F 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 441  870E C9           	ret													; _de la nave.
 442  870F
 443  870F              ; --------------------------------------------------------------------------------------------------------------
 444  870F              ;
 445  870F              ;	31/01/23
 446  870F              ;
 447  870F              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 448  870F
 449  870F              Guarda_foto_entidad_a_borrar
 450  870F
 451  870F CD 67 8F     	call Prepara_draw
 452  8712 CD A1 8E     	call calcula_CColumnass
 453  8715 CD D8 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 454  8718 CD 2D 8F     	call Define_rutina_de_impresion
 455  871B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 456  871E C9           	ret
 457  871F
 458  871F              ; --------------------------------------------------------------------------------------------------------------
 459  871F              ;
 460  871F              ;	31/01/23
 461  871F              ;
 462  871F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 463  871F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 464  871F
 465  871F              Guarda_foto_entidad_a_pintar
 466  871F
 467  871F CD 4C 87     	call Repone_pintar
 468  8722 CD 8D 8C     	call Draw
 469  8725 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 470  8728 C9           	ret
 471  8729
 472  8729              ; --------------------------------------------------------------------------------------------------------------
 473  8729              ;
 474  8729              ;
 475  8729
 476  8729 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 477  872C 3A CA 85     	ld a,(Obj_dibujado)
 478  872F A7           	and a
 479  8730 28 05        	jr z,1F
 480  8732 11 BF 85     	ld de,Variables_de_pintado
 481  8735 18 03        	jr 2F
 482  8737 11 B5 85     1 ld de,Variables_de_borrado
 483  873A 01 08 00     2 ld bc,8
 484  873D ED B0        	ldir
 485  873F C9           	ret
 486  8740
 487  8740              ; --------------------------------------------------------------------------------------------------------------
 488  8740
 489  8740 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 490  8743 11 9B 85     	ld de,Filas
 491  8746 01 08 00     	ld bc,8
 492  8749 ED B0        	ldir
 493  874B C9           	ret
 494  874C
 495  874C 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 496  874F 11 9B 85     	ld de,Filas
 497  8752 01 08 00     	ld bc,8
 498  8755 ED B0        	ldir
 499  8757 C9           	ret
 500  8758
 501  8758              ; *************************************************************************************************************************************************************
 502  8758              ;
 503  8758              ; 8/1/23
 504  8758              ;
 505  8758              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 506  8758              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 507  8758              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 508  8758
 509  8758              ; Destruye HL y DE !!!!!
 510  8758
 511  8758              Inicia_punteros_de_entidades
 512  8758
 513  8758 21 68 84     	ld hl,Indice_de_entidades
 514  875B CD AC 87         call Extrae_address
 515  875E 22 D7 85         ld (Puntero_store_entidades),hl
 516  8761 21 6A 84     	ld hl,Indice_de_entidades+2
 517  8764 22 DB 85     	ld (Indice_restore),hl
 518  8767 CD AC 87     	call Extrae_address
 519  876A 22 D9 85     	ld (Puntero_restore_entidades),hl
 520  876D C9               ret
 521  876E
 522  876E              ; *************************************************************************************************************************************************************
 523  876E              ;
 524  876E              ; 8/1/23
 525  876E              ;
 526  876E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 527  876E
 528  876E 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 529  8771 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 530  8774 C9           	ret
 531  8775 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 532  8778 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 533  877B C9           	ret
 534  877C
 535  877C              ; -------------------------------------------------------------------------------------------------------------
 536  877C              ;
 537  877C              ; 28/2/23
 538  877C              ;
 539  877C
 540  877C              Calcula_numero_de_malotes
 541  877C
 542  877C 21 00 70     	ld hl,Album_de_fotos
 543  877F EB           	ex de,hl
 544  8780 2A E3 85     	ld hl,(Stack_snapshot)
 545  8783
 546  8783 06 00        	ld b,0
 547  8785 7D           	ld a,l
 548  8786 93           	sub e
 549  8787 28 07        	jr z,1F
 550  8789
 551  8789              ; Nº de malotes no es "0".
 552  8789
 553  8789 D6 06        2 sub 6
 554  878B 04           	inc b
 555  878C A7           	and a
 556  878D 20 FA        	jr nz,2B
 557  878F 78           	ld a,b
 558  8790
 559  8790 32 DE 85     1 ld (Numero_de_malotes),a
 560  8793 C9           	ret
 561  8794
 562  8794              ; -------------------------------------------------------------------------------------------------------------
 563  8794              ;
 564  8794              ; 28/2/23
 565  8794              ;
 566  8794
 567  8794              Calcula_numero_de_disparotes
 568  8794
 569  8794 21 60 70     	ld hl,Album_de_fotos_disparos
 570  8797 EB           	ex de,hl
 571  8798 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 572  879B
 573  879B 06 00        	ld b,0
 574  879D 7D           	ld a,l
 575  879E 93           	sub e
 576  879F 28 07        	jr z,1F
 577  87A1
 578  87A1              ; Nº de malotes no es "0".
 579  87A1
 580  87A1 D6 06        2 sub 6
 581  87A3 04           	inc b
 582  87A4 A7           	and a
 583  87A5 20 FA        	jr nz,2B
 584  87A7 78           	ld a,b
 585  87A8
 586  87A8 32 E7 85     1 ld (Numero_de_disparotes),a
 587  87AB C9           	ret
 588  87AC              ; *************************************************************************************************************************************************************
 589  87AC              ;
 590  87AC              ; 20/10/22
 591  87AC              ;
 592  87AC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 593  87AC              ;
 594  87AC              ; Destruye el puntero y DE !!!!!
 595  87AC
 596  87AC 5E           Extrae_address ld e,(hl)
 597  87AD 23           	inc hl
 598  87AE 56           	ld d,(hl)
 599  87AF 2B           	dec hl
 600  87B0 EB           	ex de,hl
 601  87B1 C9           	ret
 602  87B2
 603  87B2              ; *************************************************************************************************************************************************************
 604  87B2              ;
 605  87B2              ;	7/2/23
 606  87B2              ;
 607  87B2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 608  87B2              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 609  87B2              ;
 610  87B2              ;   Destruye HL y BC !!!!!,
 611  87B2              ;
 612  87B2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 613  87B2              ;					"0" ..... Izquierda.
 614  87B2
 615  87B2              Inicia_Puntero_objeto
 616  87B2
 617  87B2 3A AF 85     	ld a,(Cuad_objeto)
 618  87B5 E6 01        	and 1
 619  87B7 F5           	push af
 620  87B8 CC D6 87     	call z,Inicia_puntero_objeto_izq
 621  87BB F1           	pop af
 622  87BC 28 2B        	jr z,1F
 623  87BE CD C3 87     	call Inicia_puntero_objeto_der
 624  87C1 18 26        	jr 1F
 625  87C3
 626  87C3              ; Arrancamos desde la parte izquierda de la pantalla.
 627  87C3              ; Iniciamos (Indice_Sprite_der).
 628  87C3
 629  87C3 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 630  87C6 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 631  87C9 CD AC 87     	call Extrae_address
 632  87CC 22 9F 85     	ld (Puntero_objeto),hl
 633  87CF
 634  87CF 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 635  87D2              ;	call Extrae_address
 636  87D2 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 637  87D5 C9           	ret
 638  87D6
 639  87D6              ; Arrancamos desde la parte derecha de la pantalla.
 640  87D6              ; Iniciamos (Indice_Sprite_izq).
 641  87D6
 642  87D6 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 643  87D9 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 644  87DC CD AC 87     	call Extrae_address
 645  87DF 22 9F 85     	ld (Puntero_objeto),hl
 646  87E2
 647  87E2 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 648  87E5              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 649  87E5 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 650  87E8 C9           	ret
 651  87E9
 652  87E9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 653  87E9
 654  87E9 21 38 83     1 ld hl,Amadeus
 655  87EC ED 4B 9F 85  	ld bc,(Puntero_objeto)
 656  87F0 B7 ED 42     	sub hl,bc
 657  87F3 C0           	ret nz
 658  87F4 21 C9 85     	ld hl,Ctrl_0
 659  87F7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 660  87F9 C9           	ret 												; _de nuestra nave en los extremos.
 661  87FA
 662  87FA              ; *************************************************************************************************************************************************************
 663  87FA              ;
 664  87FA              ;	8/1/23
 665  87FA              ;
 666  87FA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 667  87FA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 668  87FA
 669  87FA              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 670  87FA              ;	_de la 2ª y 3ª entidad respectivamente.
 671  87FA
 672  87FA              Store_Restore_entidades
 673  87FA
 674  87FA E5           	push hl
 675  87FB D5           	push de
 676  87FC C5            	push bc
 677  87FD
 678  87FD              ;	STORE !!!!!
 679  87FD              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 680  87FD
 681  87FD 21 9B 85     	ld hl,Filas
 682  8800 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 683  8804 01 3B 00     	ld bc,59
 684  8807 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 685  8809
 686  8809              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 687  8809
 688  8809 2A D9 85     	ld hl,(Puntero_restore_entidades)
 689  880C 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 690  880F 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 691  8812 01 3B 00     	ld bc,59
 692  8815 ED B0        	ldir
 693  8817
 694  8817              ;	Incrementa RESTORE !!!!!
 695  8817
 696  8817 2A DB 85         ld hl,(Indice_restore)
 697  881A 23           	inc hl
 698  881B 23           	inc hl
 699  881C 22 DB 85     	ld (Indice_restore),hl
 700  881F CD AC 87         call Extrae_address
 701  8822 22 D9 85         ld (Puntero_restore_entidades),hl
 702  8825 C1           	pop bc
 703  8826 D1           	pop de
 704  8827 E1           	pop hl
 705  8828 C9           	ret
 706  8829
 707  8829              ; **************************************************************************************************
 708  8829              ;
 709  8829              ;	29/10/22
 710  8829              ;
 711  8829              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 712  8829
 713  8829 E5           Restore_Primera_entidad push hl
 714  882A D5           	push de
 715  882B C5            	push bc
 716  882C 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 717  882F 11 9B 85     	ld de,Filas
 718  8832 01 3B 00     	ld bc,59
 719  8835 ED B0        	ldir
 720  8837 C1           	pop bc
 721  8838 D1           	pop de
 722  8839 E1           	pop hl
 723  883A C9           	ret
 724  883B
 725  883B              ; **************************************************************************************************
 726  883B              ;
 727  883B              ;	25/01/23
 728  883B              ;
 729  883B              ;	Restore_Amadeus
 730  883B              ;
 731  883B              ;	Cargamos en DRAW los parámetros de Amadeus.
 732  883B              ;
 733  883B
 734  883B E5           Restore_Amadeus	push hl
 735  883C D5           	push de
 736  883D C5            	push bc
 737  883E 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 738  8841 11 9B 85     	ld de,Filas
 739  8844 01 3B 00     	ld bc,59
 740  8847 ED B0        	ldir
 741  8849 C1           	pop bc
 742  884A D1           	pop de
 743  884B E1           	pop hl
 744  884C C9           	ret
 745  884D
 746  884D              ; *************************************************************************************************************************************************************
 747  884D              ;
 748  884D              ;	29/01/23
 749  884D              ;
 750  884D              ;	Store_Amadeus
 751  884D              ;
 752  884D              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 753  884D              ;
 754  884D
 755  884D E5           Store_Amadeus push hl
 756  884E D5           	push de
 757  884F C5            	push bc
 758  8850 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 759  8853 11 74 84     	ld de,Amadeus_db
 760  8856 01 3B 00     	ld bc,59
 761  8859 ED B0        	ldir
 762  885B C1           	pop bc
 763  885C D1           	pop de
 764  885D E1           	pop hl
 765  885E C9           	ret
 766  885F
 767  885F              ; **************************************************************************************************
 768  885F
 769  885F              ; Teclado.
 770  885F
 771  885F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 772  8861 DB FE        	in a,($fe)
 773  8863 E6 01        	and $01
 774  8865 28 02        	jr z,1f
 775  8867 18 F6        	jr Pulsa_ENTER
 776  8869 C9           1 ret
 777  886A
 778  886A              ; **************************************************************************************************
 779  886A              ;
 780  886A              ; Temporización.
 781  886A
 782  886A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 783  886A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 784  886A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 785  886A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 786  886A
 787  886A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 788  886A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 789  886A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 790  886A
 791  886A              ; A partir de $4f61 no hace falta DELAY.
 792  886A
 793  886A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 794  886A
 795  886A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 796  886D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 797  886E 78           	LD A,B
 798  886F A7           	AND A
 799  8870 20 FB        	JR NZ,wait
 800  8872 C9           	RET
 801  8873
 802  8873              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 803  8873              ;
 804  8873              ;	5/3/23
 805  8873              ;
 806  8873              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 807  8873
 808  8873              Movimiento_Amadeus
 809  8873
 810  8873              ; Disparo.
 811  8873
 812  8873 3E F7        	ld a,$f7												; "5" para disparar.
 813  8875 DB FE        	in a,($fe)
 814  8877 E6 10        	and $10
 815  8879 CC D3 88     	call z,Genera_disparo
 816  887C
 817  887C 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 818  887E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 819  8880 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 820  8882 CC CB 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 821  8885 3E F7        	ld a,$f7
 822  8887 DB FE        	in a,($fe)
 823  8889 E6 01        	and $01
 824  888B C8           	ret z
 825  888C
 826  888C 3E F7        	ld a,$f7
 827  888E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 828  8890 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 829  8892 CC AD 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 830  8895 C9           	ret
 831  8896
 832  8896              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 833  8896              ;
 834  8896              ;	Rutina provisional para que los malotes cagen balas.
 835  8896
 836  8896 3E 7F        Detecta_disparo_entidad ld a,$7f
 837  8898 DB FE        	in a,($fe)
 838  889A E6 01        	and 1
 839  889C C0           	ret nz
 840  889D CD D3 88     	call Genera_disparo
 841  88A0 C9           	ret
 842  88A1
 843  88A1              ; Pinta indicadores de FILAS. ------------------------------------------------------
 844  88A1
 845  88A1 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 846  88A4
 847  88A4              ; ----------
 848  88A4 06 20        	ld b,32
 849  88A6 E5           2 push hl
 850  88A7 C5           	push bc
 851  88A8              ; ----------
 852  88A8
 853  88A8 06 BF        	ld b,$bf
 854  88AA 36 80        1 ld (hl),%10000000
 855  88AC CD 73 8F     	call NextScan
 856  88AF 10 F9        	djnz 1B
 857  88B1
 858  88B1              ; ----------
 859  88B1 C1           	pop bc
 860  88B2 E1           	pop hl
 861  88B3 2C           	inc l
 862  88B4 10 F0        	djnz 2B
 863  88B6              ; ----------
 864  88B6
 865  88B6 06 03        	ld b,3
 866  88B8 21 00 47         ld hl,$4700
 867  88BB CD C1 88     3 call Bucle_1
 868  88BE 10 FB            djnz 3B
 869  88C0 C9               ret
 870  88C1
 871  88C1 C5           Bucle_1 push bc
 872  88C2 E5                   push hl
 873  88C3 D1                   pop de
 874  88C4 13                   inc de
 875  88C5 01 FF 00             ld bc,255
 876  88C8 36 FF                ld (hl),255
 877  88CA ED B0                ldir
 878  88CC 23                   inc hl
 879  88CD 3E 07                ld a,7
 880  88CF 84                   add a,h
 881  88D0 67                   ld h,a
 882  88D1 C1                   pop bc
 883  88D2 C9                   ret
 884  88D3
 885  88D3              ; ---------------------------------------------------------------
 886  88D3
 887  88D3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88D3              ; ******************************************************************************************************************************************************************************************
   2+ 88D3              ;
   3+ 88D3              ;   17/04/23
   4+ 88D3              ;
   5+ 88D3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88D3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88D3              ;
   8+ 88D3              ;
   9+ 88D3              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88D3              ;
  11+ 88D3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88D3              ;               _ hacen las entidades hacia abajo.
  13+ 88D3              ;
  14+ 88D3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88D3              ;
  16+ 88D3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88D3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88D3              ;
  19+ 88D3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88D3              ;           _ la bala.
  21+ 88D3              ;
  22+ 88D3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88D3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88D3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88D3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88D3              ;           _ en el momento de generarse la bala)).
  27+ 88D3
  28+ 88D3              Genera_disparo
  29+ 88D3
  30+ 88D3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88D3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88D3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88D3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88D3              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 88D3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 88D3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88D3
  38+ 88D3              ; Exclusiones:
  39+ 88D3
  40+ 88D3 3A D2 85         ld a,(Columnas)
  41+ 88D6 47               ld b,a
  42+ 88D7 3A 9C 85         ld a,(Columns)
  43+ 88DA B8               cp b
  44+ 88DB C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88DC
  46+ 88DC              ; ----- ----- -----
  47+ 88DC
  48+ 88DC 3A C9 85         ld a,(Ctrl_0)
  49+ 88DF CB 77            bit 6,a
  50+ 88E1 20 08            jr nz,16F
  51+ 88E3
  52+ 88E3 3A A2 85         ld a,(Coordenada_y)
  53+ 88E6 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 88E8 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 88E9 18 11            jr 14F
  56+ 88EB
  57+ 88EB              ; ----- ----- -----
  58+ 88EB
  59+ 88EB              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 88EB
  61+ 88EB 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 88EE CD AC 87         call Extrae_address
  63+ 88F1 24               inc h
  64+ 88F2 25               dec h
  65+ 88F3 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 88F5
  67+ 88F5 11 20 48         ld de,$4820                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 88F8 A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 88F9 ED 52            sbc hl,de
  70+ 88FB D0               ret nc
  71+ 88FC
  72+ 88FC              ; ----- ----- -----
  73+ 88FC
  74+ 88FC 21 00 80     14 ld hl,Indice_disparo
  75+ 88FF 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 8902 4F               ld c,a
  77+ 8903 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 8905              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 8905              ;                                            ""        ""       "f9", B="1"
  80+ 8905              ;                                            ""        ""       "fb", B="2"
  81+ 8905              ;                                            ""        ""       "fb", B="3"
  82+ 8905 A7               and a
  83+ 8906 28 10            jr z,1F
  84+ 8908 E6 01            and 1
  85+ 890A C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 890B
  87+ 890B 79               ld a,c
  88+ 890C 16 F9            ld d,$f9
  89+ 890E 23           2 inc hl
  90+ 890F 23               inc hl
  91+ 8910 04               inc b
  92+ 8911 BA               cp d
  93+ 8912 28 04            jr z,1F
  94+ 8914 14               inc d
  95+ 8915 14               inc d
  96+ 8916 18 F6            jr 2B
  97+ 8918
  98+ 8918 CD AC 87     1 call Extrae_address
  99+ 891B E5               push hl
 100+ 891C FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 891E DD 21 06 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 8922
 103+ 8922              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 8922              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 8922
 106+ 8922 3A AF 85     	ld a,(Cuad_objeto)
 107+ 8925 FE 02            cp 2
 108+ 8927 38 66            jr c,3F
 109+ 8929 28 64            jr z,3F
 110+ 892B
 111+ 892B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 892B
 113+ 892B E6 01            and 1
 114+ 892D 28 30            jr z,4F
 115+ 892F
 116+ 892F              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 892F              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 892F              ;
 119+ 892F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 892F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 892F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 892F
 123+ 892F 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 8932
 125+ 8932              ;   Amadeus o entidad ???.
 126+ 8932
 127+ 8932 3A C9 85         ld a,(Ctrl_0)
 128+ 8935 CB 77            bit 6,a
 129+ 8937 28 0A            jr z,8F
 130+ 8939
 131+ 8939              ; 	Dispara Amadeus.
 132+ 8939
 133+ 8939 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 893B CD 82 8F         call PreviousScan
 135+ 893E CD 82 8F         call PreviousScan
 136+ 8941
 137+ 8941              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 8941              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 8941              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 8941              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 8941
 142+ 8941 18 11            jr 10F
 143+ 8943
 144+ 8943              ; 	Dispara Entidad.
 145+ 8943
 146+ 8943 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 147+ 8946              ;                                                   ; Impacto B="$80", no hay impacto.
 148+ 8946
 149+ 8946              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 150+ 8946              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 151+ 8946
 152+ 8946 C5               push bc
 153+ 8947 06 10            ld b,16
 154+ 8949 CD 73 8F     9 call NextScan
 155+ 894C 10 FB            djnz 9B
 156+ 894E C1               pop bc
 157+ 894F CD B9 89         call Ajusta_disparo_parte_izquierda
 158+ 8952 18 06            jr 17F
 159+ 8954
 160+ 8954              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 161+ 8954              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 162+ 8954              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 163+ 8954              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 164+ 8954
 165+ 8954 CD B9 89     10 call Ajusta_disparo_parte_izquierda
 166+ 8957 CD 2E 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 167+ 895A              ;                                                      ; _al generar el disparo.
 168+ 895A
 169+ 895A              ; 	LLegados a este punto tendremos:
 170+ 895A              ;
 171+ 895A              ;       Puntero_objeto_disparo en IY.
 172+ 895A              ;       Rutinas_de_impresion en IX.
 173+ 895A              ;       Puntero_de_impresion en HL.
 174+ 895A              ;       Impacto/Dirección en BC.
 175+ 895A
 176+ 895A CD C1 89     17 call Almacena_disparo
 177+ 895D 18 52            jr 6F                                             ; RET.
 178+ 895F
 179+ 895F              ; 	Estamos en el 4º cuadrante de pantalla.
 180+ 895F              ; 	4º CUAD. ----- ----- ----- ----- -----
 181+ 895F              ;
 182+ 895F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 183+ 895F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 184+ 895F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 185+ 895F
 186+ 895F 2A 9D 85     4 ld hl,(Posicion_actual)
 187+ 8962
 188+ 8962              ;   Amadeus o entidad ???.
 189+ 8962
 190+ 8962 3A C9 85         ld a,(Ctrl_0)
 191+ 8965 CB 77            bit 6,a
 192+ 8967 28 0A            jr z,11F
 193+ 8969
 194+ 8969              ; 	Dispara Amadeus.
 195+ 8969
 196+ 8969 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 197+ 896B CD 82 8F         call PreviousScan
 198+ 896E CD 82 8F         call PreviousScan
 199+ 8971
 200+ 8971              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 201+ 8971              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 202+ 8971              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 203+ 8971              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 204+ 8971
 205+ 8971 18 11            jr 13F
 206+ 8973
 207+ 8973              ; 	Dispara Entidad.
 208+ 8973
 209+ 8973 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 210+ 8976              ;                                                     ; Impacto B="$80", no hay impacto.
 211+ 8976
 212+ 8976              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 213+ 8976              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 214+ 8976
 215+ 8976 C5               push bc
 216+ 8977 06 10            ld b,16
 217+ 8979 CD 73 8F     12 call NextScan
 218+ 897C 10 FB            djnz 12B
 219+ 897E C1               pop bc
 220+ 897F
 221+ 897F CD B2 89         call Ajusta_disparo_parte_derecha
 222+ 8982 18 06            jr 18F
 223+ 8984
 224+ 8984              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 225+ 8984              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 226+ 8984              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 227+ 8984              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 228+ 8984
 229+ 8984 CD B2 89     13 call Ajusta_disparo_parte_derecha
 230+ 8987 CD 2E 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 231+ 898A              ;                                                       ; _al generar el disparo.
 232+ 898A
 233+ 898A              ; LLegados a este punto tendremos:
 234+ 898A              ;
 235+ 898A              ;       Puntero_objeto_disparo en IY.
 236+ 898A              ;       Rutinas_de_impresion en IX.
 237+ 898A              ;       Puntero_de_impresion en HL.
 238+ 898A              ;       Impacto/Dirección en BC.
 239+ 898A
 240+ 898A CD C1 89     18 call Almacena_disparo
 241+ 898D 18 22            jr 6F                                               ; RET.
 242+ 898F
 243+ 898F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 244+ 898F
 245+ 898F 28 11        3 jr z,5F
 246+ 8991
 247+ 8991              ; 	1er CUAD. ----- ----- ----- ----- -----
 248+ 8991              ;
 249+ 8991              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 250+ 8991              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 251+ 8991              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 252+ 8991              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 253+ 8991
 254+ 8991              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 255+ 8991              ;	   ""        ""       "f9", B="1"
 256+ 8991              ;	   ""        ""       "fb", B="2"
 257+ 8991              ; 	   ""        ""       "fb", B="3"
 258+ 8991
 259+ 8991 2A 9D 85     	ld hl,(Posicion_actual)
 260+ 8994 CD 73 8F     	call NextScan
 261+ 8997
 262+ 8997              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 263+ 8997              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 264+ 8997              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 265+ 8997              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 266+ 8997
 267+ 8997 CD B9 89         call Ajusta_disparo_parte_izquierda
 268+ 899A
 269+ 899A              ; 	No se produce impacto. B="$80"
 270+ 899A              ; 	Dirección del proyectil hacia abajo. C="$80"
 271+ 899A
 272+ 899A 01 80 80         ld bc,$8080
 273+ 899D
 274+ 899D              ; 	LLegados a este punto tendremos:
 275+ 899D              ;
 276+ 899D              ;       Puntero_objeto_disparo en IY.
 277+ 899D              ;       Rutinas_de_impresion en IX.
 278+ 899D              ;       Puntero_de_impresion en HL.
 279+ 899D              ;       Impacto/Dirección en BC.
 280+ 899D
 281+ 899D CD C1 89         call Almacena_disparo
 282+ 89A0 18 0F            jr 6F                                           ; RET.
 283+ 89A2
 284+ 89A2              ; 	Estamos en el 2º cuadrante de pantalla.
 285+ 89A2              ; 	2º CUAD. ----- ----- ----- ----- -----
 286+ 89A2              ;
 287+ 89A2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 288+ 89A2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 289+ 89A2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 290+ 89A2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 291+ 89A2
 292+ 89A2 2A 9D 85     5 ld hl,(Posicion_actual)
 293+ 89A5 CD 73 8F     	call NextScan
 294+ 89A8
 295+ 89A8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 296+ 89A8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 297+ 89A8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 298+ 89A8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 299+ 89A8
 300+ 89A8 CD B2 89         call Ajusta_disparo_parte_derecha
 301+ 89AB
 302+ 89AB              ; 	No se produce impacto. B="$80"
 303+ 89AB              ; 	Dirección del proyectil hacia abajo. C="80"
 304+ 89AB
 305+ 89AB 01 80 80     15 ld bc,$8080
 306+ 89AE
 307+ 89AE              ; 	LLegados a este punto tendremos:
 308+ 89AE              ;
 309+ 89AE              ;       Puntero_objeto_disparo en IY.
 310+ 89AE              ;       Rutinas_de_impresion en IX.
 311+ 89AE              ;       Puntero_de_impresion en HL.
 312+ 89AE              ;       Impacto/Dirección en BC.
 313+ 89AE
 314+ 89AE CD C1 89         call Almacena_disparo
 315+ 89B1
 316+ 89B1 C9           6 ret
 317+ 89B2
 318+ 89B2              ; ----------------------------------------------------------------
 319+ 89B2              ;
 320+ 89B2              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 321+ 89B2              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 322+ 89B2              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 323+ 89B2
 324+ 89B2 78           Ajusta_disparo_parte_derecha ld a,b
 325+ 89B3 FE 02            cp 2
 326+ 89B5 38 01            jr c,1F
 327+ 89B7 23               inc hl
 328+ 89B8 C9           1 ret
 329+ 89B9
 330+ 89B9 78           Ajusta_disparo_parte_izquierda ld a,b
 331+ 89BA FE 01        	cp 1
 332+ 89BC 20 01        	jr nz,1F
 333+ 89BE 2B           	dec hl
 334+ 89BF 2B           1 dec hl
 335+ 89C0 C9               ret
 336+ 89C1
 337+ 89C1              ; ----------------------------------------------------------------
 338+ 89C1              ;
 339+ 89C1              ;   25/02/23
 340+ 89C1              ;
 341+ 89C1              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 342+ 89C1              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 343+ 89C1              ;
 344+ 89C1              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 345+ 89C1              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 346+ 89C1
 347+ 89C1              Almacena_disparo
 348+ 89C1
 349+ 89C1 E5               push hl  										; HL contiene el puntero de impresión.
 350+ 89C2 F1               pop af
 351+ 89C3 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 352+ 89C4
 353+ 89C4 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 354+ 89C5 E6 01            and 1
 355+ 89C7 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 356+ 89C9              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 357+ 89C9              ; 	Dispara AMADEUS.
 358+ 89C9
 359+ 89C9              ;	Comprobamos que a Amadeus aún le quedan disparos.
 360+ 89C9              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 361+ 89C9              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 362+ 89C9              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 363+ 89C9
 364+ 89C9 C5               push bc
 365+ 89CA 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 366+ 89CD 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 89D0 A7               and a
 368+ 89D1 ED 42            sbc hl,bc
 369+ 89D3 CC 75 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 370+ 89D6 C1               pop bc
 371+ 89D7 28 54            jr z,4F
 372+ 89D9
 373+ 89D9 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 374+ 89DC 23               inc hl
 375+ 89DD 23               inc hl
 376+ 89DE 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 377+ 89E1              ;                                                   ; _ Disparo_(+1).
 378+ 89E1 18 18            jr 2F
 379+ 89E3
 380+ 89E3              ; Dispara una entidad.
 381+ 89E3
 382+ 89E3 C5           1 push bc
 383+ 89E4 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 384+ 89E7 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 385+ 89EA A7               and a
 386+ 89EB ED 42            sbc hl,bc
 387+ 89ED CC 6E 87         call z,Inicia_Puntero_Disparo_Entidades
 388+ 89F0 C1               pop bc
 389+ 89F1 28 3A            jr z,4F
 390+ 89F3
 391+ 89F3 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 392+ 89F6 23               inc hl
 393+ 89F7 23               inc hl
 394+ 89F8 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 395+ 89FB              ;                                                   ; _ Disparo_(+1).
 396+ 89FB CD AC 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 397+ 89FE              ;                                                   ; _ los 8 bytes que definen el disparo:
 398+ 89FE              ;
 399+ 89FE              ;                                                     Puntero_objeto_disparo en IY.
 400+ 89FE              ;                                                     Rutinas_de_impresion en IX.
 401+ 89FE              ;                                                     Puntero_de_impresion en HL.
 402+ 89FE              ;                                                     Impacto/Dirección en BC.
 403+ 89FE
 404+ 89FE 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 405+ 89FF 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 406+ 8A00 23               inc hl                                          ; _ al siguiente.
 407+ 8A01 A7               and a
 408+ 8A02 20 C0            jr nz,3B
 409+ 8A04
 410+ 8A04 08               ex af,af
 411+ 8A05 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 412+ 8A09 F9               ld sp,hl
 413+ 8A0A
 414+ 8A0A DD E5            push ix                                         ; Rutina de impresión.
 415+ 8A0C F5               push af                                         ; Puntero de impresión.
 416+ 8A0D FD E5            push iy                                         ; Puntero objeto.
 417+ 8A0F C5               push bc                                         ; Control.
 418+ 8A10
 419+ 8A10 ED 7B DF 85      ld sp,(Stack)
 420+ 8A14
 421+ 8A14              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 422+ 8A14
 423+ 8A14 21 D6 85     	ld hl,Ctrl_1
 424+ 8A17 CB C6        	set 0,(hl)
 425+ 8A19
 426+ 8A19 DD E5        	push ix
 427+ 8A1B E1               pop hl
 428+ 8A1C F5               push af
 429+ 8A1D DD E1            pop ix
 430+ 8A1F
 431+ 8A1F CD A0 7F     	call Guarda_foto_registros
 432+ 8A22
 433+ 8A22 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 434+ 8A25 CB 86        	res 0,(hl)
 435+ 8A27
 436+ 8A27              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 437+ 8A27              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 438+ 8A27
 439+ 8A27 CD 75 87         call Inicia_Puntero_Disparo_Amadeus
 440+ 8A2A CD 6E 87         call Inicia_Puntero_Disparo_Entidades
 441+ 8A2D
 442+ 8A2D C9           4 ret
 443+ 8A2E
 444+ 8A2E              ; ----------------------------------------------------------------
 445+ 8A2E              ;
 446+ 8A2E              ;   4/3/23
 447+ 8A2E              ;
 448+ 8A2E              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 449+ 8A2E              ;   _ al generarse el disparo.
 450+ 8A2E              ;
 451+ 8A2E              ;       "$80" ..... No se produce colisión.
 452+ 8A2E              ;       "$81" ..... Se produce colisión.
 453+ 8A2E
 454+ 8A2E              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 455+ 8A2E              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 456+ 8A2E
 457+ 8A2E
 458+ 8A2E FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 459+ 8A30 E5               push hl                                        ; Puntero de impresión.
 460+ 8A31 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 461+ 8A33 CD 4F 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 462+ 8A36
 463+ 8A36 7B               ld a,e
 464+ 8A37 E6 01            and 1
 465+ 8A39 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 466+ 8A3B
 467+ 8A3B E1               pop hl
 468+ 8A3C E5               push hl
 469+ 8A3D CD 73 8F         call NextScan
 470+ 8A40
 471+ 8A40 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 472+ 8A41 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 473+ 8A43 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 474+ 8A45              ;                                                  ; _ 2º scanline si esto es así.
 475+ 8A45 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 476+ 8A47 CD 4F 8A         call Bucle_2
 477+ 8A4A
 478+ 8A4A 43           2 ld b,e
 479+ 8A4B E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 480+ 8A4C FD E1            pop iy
 481+ 8A4E C9               ret
 482+ 8A4F
 483+ 8A4F               ; ---------- ----------
 484+ 8A4F
 485+ 8A4F 06 02        Bucle_2 ld b,2
 486+ 8A51 FD 7E 00     2 ld a,(iy)
 487+ 8A54 A6               and (hl)
 488+ 8A55 28 02            jr z,1F
 489+ 8A57 1E 81            ld e,$81
 490+ 8A59 23           1 inc hl
 491+ 8A5A FD 23            inc iy
 492+ 8A5C 10 F3            djnz 2B
 493+ 8A5E C9               ret
 494+ 8A5F
 495+ 8A5F              ; -------------------------------------------------------------------------------------------------------------
 496+ 8A5F              ;
 497+ 8A5F              ;   11/04/23
 498+ 8A5F              ;
 499+ 8A5F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 500+ 8A5F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 501+ 8A5F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 502+ 8A5F              ;
 503+ 8A5F              ;   MODIFICA: HL,DE,BC,A y AF´.
 504+ 8A5F
 505+ 8A5F              Compara_coordenadas_X
 506+ 8A5F
 507+ 8A5F              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 508+ 8A5F
 509+ 8A5F              ; Preparamos registros:
 510+ 8A5F
 511+ 8A5F 21 A1 85         ld hl,Filas+6
 512+ 8A62 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 513+ 8A63 23               inc hl
 514+ 8A64 23               inc hl
 515+ 8A65 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 516+ 8A66 43               ld b,e
 517+ 8A67 21 AF 85         ld hl,Filas+20
 518+ 8A6A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 519+ 8A6B 21 F0 85         ld hl,Coordenadas_X_Entidad
 520+ 8A6E CD 58 8C         call Guarda_coordenadas_X
 521+ 8A71
 522+ 8A71              ; Preparamos registros:
 523+ 8A71
 524+ 8A71 21 7A 84         ld hl,Amadeus_db+6
 525+ 8A74 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 526+ 8A75 23               inc hl
 527+ 8A76 23               inc hl
 528+ 8A77 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 529+ 8A78 7B               ld a,e
 530+ 8A79 08               ex af,af'
 531+ 8A7A 21 88 84         ld hl,Amadeus_db+20
 532+ 8A7D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 533+ 8A7E 21 ED 85         ld hl,Coordenadas_X_Amadeus
 534+ 8A81 CD 58 8C         call Guarda_coordenadas_X
 535+ 8A84
 536+ 8A84              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 537+ 8A84              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 538+ 8A84
 539+ 8A84 04               inc b
 540+ 8A85 05               dec b
 541+ 8A86 28 04            jr z,1F
 542+ 8A88 06 03            ld b,3
 543+ 8A8A 18 02            jr 2F
 544+ 8A8C 06 02        1 ld b,2
 545+ 8A8E 08           2 ex af,af'
 546+ 8A8F 3C               inc a
 547+ 8A90 3D               dec a
 548+ 8A91 28 04            jr z,5F
 549+ 8A93 0E 03            ld c,3
 550+ 8A95 18 02            jr 6F
 551+ 8A97 0E 02        5 ld c,2
 552+ 8A99 79           6 ld a,c
 553+ 8A9A 08               ex af,af'
 554+ 8A9B 11 F0 85         ld de,Coordenadas_X_Entidad
 555+ 8A9E 1A           4 ld a,(de)
 556+ 8A9F 21 ED 85         ld hl,Coordenadas_X_Amadeus
 557+ 8AA2 BE           3 cp (hl)
 558+ 8AA3 28 0B            jr z,7F
 559+ 8AA5 23               inc hl
 560+ 8AA6 0D               dec c
 561+ 8AA7 20 F9            jr nz,3B
 562+ 8AA9 13               inc de
 563+ 8AAA 08               ex af,af'
 564+ 8AAB 4F               ld c,a
 565+ 8AAC 08               ex af,af'
 566+ 8AAD 10 EF            djnz 4B
 567+ 8AAF C9           8 ret
 568+ 8AB0 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 569+ 8AB2 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 570+ 8AB5              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 571+ 8AB5 21 EC 85         ld hl,Impacto2
 572+ 8AB8 CB D6            set 2,(hl)
 573+ 8ABA 18 F3            jr 8B
 574+ 8ABC
 575+ 8ABC              ; -----------------------------------------------------------------------
 576+ 8ABC              ;
 577+ 8ABC              ;   11/04/23
 578+ 8ABC              ;
 579+ 8ABC
 580+ 8ABC              Detecta_colision_nave_entidad
 581+ 8ABC
 582+ 8ABC              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 583+ 8ABC
 584+ 8ABC 2A 9D 85         ld hl,(Posicion_actual)
 585+ 8ABF CD D8 8E         call Calcula_puntero_de_impresion
 586+ 8AC2
 587+ 8AC2              ; Ahora, IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
 588+ 8AC2              ;        IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
 589+ 8AC2
 590+ 8AC2
 591+ 8AC2              ;   jr $
 592+ 8AC2
 593+ 8AC2 DD E5            push ix
 594+ 8AC4 E1               pop hl
 595+ 8AC5 E5               push hl
 596+ 8AC6
 597+ 8AC6              ; ----- ----- -----
 598+ 8AC6 1E 00            ld e,0                                        ; Indica impacto.
 599+ 8AC8 06 0A            ld b,10
 600+ 8ACA CD E2 8A     2 call Bucle_3                                    ; Comprobamos el 1er scanline.
 601+ 8ACD 7B               ld a,e
 602+ 8ACE FE 05            cp 5
 603+ 8AD0 38 00            jr c,3F
 604+ 8AD2
 605+ 8AD2              ;    ld hl,Impacto2
 606+ 8AD2              ;    set 2,(hl)
 607+ 8AD2              ;    jr 1F
 608+ 8AD2
 609+ 8AD2 E1           3 pop hl
 610+ 8AD3 CD 73 8F         call NextScan
 611+ 8AD6 E5               push hl
 612+ 8AD7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 613+ 8AD8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 614+ 8ADA 28 04            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 615+ 8ADC 30 02            jr nc,1F
 616+ 8ADE              ;                                                  ; _ 2º scanline si esto es así.
 617+ 8ADE 10 EA            djnz 2B
 618+ 8AE0
 619+ 8AE0 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 620+ 8AE1 C9               ret
 621+ 8AE2
 622+ 8AE2               ; ---------- ----------
 623+ 8AE2
 624+ 8AE2 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 625+ 8AE3 3A 9C 85         ld a,(Columns)
 626+ 8AE6 47               ld b,a
 627+ 8AE7 FD 7E 00     2 ld a,(iy)
 628+ 8AEA BE               cp (hl)
 629+ 8AEB 28 01            jr z,1F
 630+ 8AED
 631+ 8AED 1C               inc e
 632+ 8AEE
 633+ 8AEE 23           1 inc hl
 634+ 8AEF FD 23            inc iy
 635+ 8AF1 10 F4            djnz 2B
 636+ 8AF3 C1               pop bc
 637+ 8AF4 C9               ret
 638+ 8AF5
 639+ 8AF5              ; -------------------------------------------------------------------------------------------------------------
 640+ 8AF5              ;
 641+ 8AF5              ;   13/03/23
 642+ 8AF5              ;
 643+ 8AF5              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 644+ 8AF5              ;
 645+ 8AF5              ;   DESTRUYE: HL,BC,DE y A.
 646+ 8AF5
 647+ 8AF5 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 648+ 8AF8 7E               ld a,(hl)
 649+ 8AF9 A7               and a
 650+ 8AFA C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 651+ 8AFB
 652+ 8AFB 44               ld b,h
 653+ 8AFC 4D               ld c,l
 654+ 8AFD 2A E5 85         ld hl,(Stack_snapshot_disparos)
 655+ 8B00 E5               push hl
 656+ 8B01 A7               and a
 657+ 8B02 ED 42            sbc hl,bc
 658+ 8B04 E5               push hl
 659+ 8B05 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 660+ 8B06
 661+ 8B06 E1               pop hl
 662+ 8B07 54               ld d,h
 663+ 8B08 5D               ld e,l
 664+ 8B09 1B               dec de
 665+ 8B0A ED B8            lddr                                                ; Limpiamos.
 666+ 8B0C
 667+ 8B0C 21 60 70         ld hl,Album_de_fotos_disparos
 668+ 8B0F 22 E5 85         ld (Stack_snapshot_disparos),hl
 669+ 8B12
 670+ 8B12 C9               ret
 671+ 8B13
 672+ 8B13              ; -------------------------------------------------------------------------------------------------------------
 673+ 8B13              ;
 674+ 8B13              ;   28/03/23
 675+ 8B13              ;
 676+ 8B13
 677+ 8B13 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 678+ 8B16 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 679+ 8B19
 680+ 8B19 CD AC 87     2 call Extrae_address
 681+ 8B1C 7E               ld a,(hl)
 682+ 8B1D A7               and a
 683+ 8B1E 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 684+ 8B20
 685+ 8B20              ; ----- ----- ----- ----- ----- -----
 686+ 8B20
 687+ 8B20 C5               push bc
 688+ 8B21 CD D3 8B         call foto_disparo_a_borrar
 689+ 8B24
 690+ 8B24              ; Existe colisión con este disparo???
 691+ 8B24
 692+ 8B24 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 693+ 8B25 7E               ld a,(hl)
 694+ 8B26 2B               dec hl
 695+ 8B27 E6 01            and 1
 696+ 8B29 28 0C            jr z,9F
 697+ 8B2B
 698+ 8B2B              ; Elimino el disparo de la base de datos.
 699+ 8B2B
 700+ 8B2B E5               push hl
 701+ 8B2C CD 4D 8C         call Elimina_disparo_de_base_de_datos
 702+ 8B2F 21 EC 85         ld hl,Impacto2
 703+ 8B32 CB C6            set 0,(hl)
 704+ 8B34 E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
 705+ 8B35 18 06            jr 11F
 706+ 8B37
 707+ 8B37 CD FC 8B     9 call Mueve_disparo
 708+ 8B3A CD D3 8B         call foto_disparo_a_borrar
 709+ 8B3D
 710+ 8B3D C1           11 pop bc
 711+ 8B3E 18 04            jr 7F
 712+ 8B40
 713+ 8B40              ; ----- ----- ----- ----- ----- -----
 714+ 8B40
 715+ 8B40 ED 42        1 sbc hl,bc
 716+ 8B42 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 717+ 8B44
 718+ 8B44 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 719+ 8B47 23               inc hl
 720+ 8B48 23               inc hl
 721+ 8B49 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 722+ 8B4C 18 CB            jr 2B
 723+ 8B4E
 724+ 8B4E CD 75 87     3 call Inicia_Puntero_Disparo_Amadeus
 725+ 8B51 01 66 84         ld bc,Disparo_11
 726+ 8B54 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 727+ 8B57
 728+ 8B57 CD AC 87     5 call Extrae_address
 729+ 8B5A 7E               ld a,(hl)
 730+ 8B5B A7               and a
 731+ 8B5C 28 63            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 732+ 8B5E
 733+ 8B5E              ; ----- ----- ----- ----- ----- -----
 734+ 8B5E
 735+ 8B5E C5               push bc
 736+ 8B5F CD D3 8B         call foto_disparo_a_borrar
 737+ 8B62
 738+ 8B62              ; Existe colisión con este disparo???
 739+ 8B62
 740+ 8B62 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 741+ 8B63 7E               ld a,(hl)
 742+ 8B64 2B               dec hl
 743+ 8B65 E6 01            and 1
 744+ 8B67 28 4F            jr z,10F
 745+ 8B69
 746+ 8B69              ; La colisión se produce con Amadeus???
 747+ 8B69              ; Amadeus siempre tiene (Coordenada_y)="$16".
 748+ 8B69
 749+ 8B69 E5               push hl
 750+ 8B6A
 751+ 8B6A 06 04            ld b,4
 752+ 8B6C 23           16 inc hl
 753+ 8B6D 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 754+ 8B6F CD AC 87         call Extrae_address
 755+ 8B72 CD 8A 95         call Genera_coordenadas_disparo
 756+ 8B75
 757+ 8B75 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 758+ 8B76 FE 16            cp $16
 759+ 8B78 38 2C            jr c,15F
 760+ 8B7A
 761+ 8B7A              ; (Colisiones en filas 16 y 17).
 762+ 8B7A
 763+ 8B7A D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 764+ 8B7B
 765+ 8B7B              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 766+ 8B7B
 767+ 8B7B 21 7A 84         ld hl,Amadeus_db+6
 768+ 8B7E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 769+ 8B7F 23               inc hl
 770+ 8B80 23               inc hl
 771+ 8B81 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 772+ 8B82 21 88 84         ld hl,Amadeus_db+20
 773+ 8B85 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 774+ 8B86 21 ED 85         ld hl,Coordenadas_X_Amadeus
 775+ 8B89 CD 58 8C         call Guarda_coordenadas_X
 776+ 8B8C
 777+ 8B8C D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 778+ 8B8D
 779+ 8B8D              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 780+ 8B8D
 781+ 8B8D 18 FE            jr $
 782+ 8B8F
 783+ 8B8F 21 ED 85         ld hl,Coordenadas_X_Amadeus
 784+ 8B92 7E               ld a,(hl)
 785+ 8B93 BA           18 cp d
 786+ 8B94 20 03            jr nz,17F
 787+ 8B96
 788+ 8B96              ; Colisión Amadeus !!!!!!!!!!
 789+ 8B96 E1               pop hl
 790+ 8B97 18 13            jr 14F
 791+ 8B99
 792+ 8B99 23           17 inc hl
 793+ 8B9A 7E               ld a,(hl)
 794+ 8B9B A7               and a
 795+ 8B9C F5               push af                                            ; No hay colisión con Amadeus.
 796+ 8B9D CC 82 8C         call z,Limpia_Coordenadas_X_Amadeus
 797+ 8BA0 F1               pop af
 798+ 8BA1 A7               and a
 799+ 8BA2 28 02            jr z,15F                                           ; No hay colisión con Amadeus.
 800+ 8BA4
 801+ 8BA4 18 ED            jr 18B
 802+ 8BA6
 803+ 8BA6              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 804+ 8BA6              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 805+ 8BA6
 806+ 8BA6 E1           15 pop hl
 807+ 8BA7 23               inc hl
 808+ 8BA8 35               dec (hl)
 809+ 8BA9 2B               dec hl
 810+ 8BAA 18 0C            jr 10F
 811+ 8BAC
 812+ 8BAC              ; -----------------------debug
 813+ 8BAC
 814+ 8BAC              ; Elimino el disparo de la base de datos.
 815+ 8BAC
 816+ 8BAC E5           14 push hl
 817+ 8BAD CD 4D 8C         call Elimina_disparo_de_base_de_datos
 818+ 8BB0 21 EC 85         ld hl,Impacto2
 819+ 8BB3 CB CE            set 1,(hl)
 820+ 8BB5 E1               pop hl
 821+ 8BB6 18 06            jr 12F
 822+ 8BB8
 823+ 8BB8 CD FC 8B     10 call Mueve_disparo
 824+ 8BBB CD D3 8B         call foto_disparo_a_borrar
 825+ 8BBE C1           12 pop bc
 826+ 8BBF
 827+ 8BBF 18 04            jr 8F
 828+ 8BC1
 829+ 8BC1              ; ----- ----- ----- ----- ----- -----
 830+ 8BC1
 831+ 8BC1 ED 42        4 sbc hl,bc
 832+ 8BC3 28 0A            jr z,6F
 833+ 8BC5
 834+ 8BC5 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 835+ 8BC8 23               inc hl
 836+ 8BC9 23               inc hl
 837+ 8BCA 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 838+ 8BCD 18 88            jr 5B
 839+ 8BCF
 840+ 8BCF CD 6E 87     6 call Inicia_Puntero_Disparo_Entidades
 841+ 8BD2 C9               ret
 842+ 8BD3
 843+ 8BD3              ; ------------------------------------------------------------------
 844+ 8BD3
 845+ 8BD3              foto_disparo_a_borrar
 846+ 8BD3
 847+ 8BD3 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 848+ 8BD4 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 849+ 8BD5 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 850+ 8BD6
 851+ 8BD6 E5               push hl
 852+ 8BD7 23               inc hl
 853+ 8BD8 23               inc hl
 854+ 8BD9 ED 73 DF 85      ld (Stack),sp
 855+ 8BDD F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 856+ 8BDE FD E1            pop iy
 857+ 8BE0 DD E1            pop ix
 858+ 8BE2 E1               pop hl
 859+ 8BE3 ED 7B DF 85      ld sp,(Stack)
 860+ 8BE7 3A D6 85         ld a,(Ctrl_1)
 861+ 8BEA CB C7            set 0,a
 862+ 8BEC 32 D6 85         ld (Ctrl_1),a
 863+ 8BEF CD A0 7F         call Guarda_foto_registros
 864+ 8BF2 3A D6 85         ld a,(Ctrl_1)
 865+ 8BF5 CB 87            res 0,a
 866+ 8BF7 32 D6 85         ld (Ctrl_1),a
 867+ 8BFA E1               pop hl
 868+ 8BFB C9               ret
 869+ 8BFC
 870+ 8BFC E5           Mueve_disparo push hl
 871+ 8BFD 7E               ld a,(hl)
 872+ 8BFE 06 04            ld b,4
 873+ 8C00 23           1 inc hl
 874+ 8C01 10 FD            djnz 1B
 875+ 8C03
 876+ 8C03              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 877+ 8C03
 878+ 8C03 CD AC 87         call Extrae_address
 879+ 8C06
 880+ 8C06 E6 01            and 1
 881+ 8C08 28 2A            jr z,2F
 882+ 8C0A
 883+ 8C0A              ; Disparo hacia arriba, (Amadeus).
 884+ 8C0A
 885+ 8C0A              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 886+ 8C0A              ; _ de la dificultad.
 887+ 8C0A
 888+ 8C0A CD 82 8F         call PreviousScan
 889+ 8C0D CD 82 8F         call PreviousScan
 890+ 8C10 CD 82 8F         call PreviousScan
 891+ 8C13
 892+ 8C13              ; Detecta si el disparo de Amadeus sale de pantalla:
 893+ 8C13
 894+ 8C13 7C               ld a,h
 895+ 8C14 FE 40            cp $40
 896+ 8C16 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 897+ 8C18
 898+ 8C18              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 899+ 8C18
 900+ 8C18 EB               ex de,hl
 901+ 8C19 06 04            ld b,4
 902+ 8C1B 2B           6 dec hl
 903+ 8C1C 10 FD            djnz 6B
 904+ 8C1E
 905+ 8C1E CD 4D 8C         call Elimina_disparo_de_base_de_datos
 906+ 8C21
 907+ 8C21 18 0C            jr 4F
 908+ 8C23
 909+ 8C23              ; Se ha desplazado la bala, compruebo colisión.
 910+ 8C23
 911+ 8C23 D5           3 push de
 912+ 8C24 C5               push bc
 913+ 8C25 CD 2E 8A         call Comprueba_Colision
 914+ 8C28 78               ld a,b
 915+ 8C29 C1               pop bc
 916+ 8C2A D1               pop de
 917+ 8C2B
 918+ 8C2B EB               ex de,hl
 919+ 8C2C
 920+ 8C2C 73               ld (hl),e
 921+ 8C2D 23               inc hl
 922+ 8C2E 72               ld (hl),d
 923+ 8C2F
 924+ 8C2F E1           4 pop hl
 925+ 8C30 23               inc hl
 926+ 8C31 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 927+ 8C32 2B               dec hl
 928+ 8C33 C9               ret
 929+ 8C34
 930+ 8C34              ; Disparo hacia abajo, (Entidad).
 931+ 8C34
 932+ 8C34              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 933+ 8C34              ; _ de la dificultad.
 934+ 8C34
 935+ 8C34 CD 73 8F     2 call NextScan
 936+ 8C37 CD 73 8F         call NextScan
 937+ 8C3A CD 73 8F         call NextScan
 938+ 8C3D
 939+ 8C3D              ; Detecta si el disparo de la entidad sale de la pantalla.
 940+ 8C3D
 941+ 8C3D 7C               ld a,h
 942+ 8C3E FE 58            cp $58
 943+ 8C40 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 944+ 8C42
 945+ 8C42 EB               ex de,hl
 946+ 8C43 06 04            ld b,4
 947+ 8C45 2B           5 dec hl
 948+ 8C46 10 FD            djnz 5B
 949+ 8C48
 950+ 8C48 CD 4D 8C         call Elimina_disparo_de_base_de_datos
 951+ 8C4B
 952+ 8C4B 18 E2            jr 4B
 953+ 8C4D
 954+ 8C4D              ; HL apunta al primer byte de la base de datos del disparo.
 955+ 8C4D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 956+ 8C50 AF               xor a
 957+ 8C51 77               ld (hl),a
 958+ 8C52 54               ld d,h
 959+ 8C53 5D               ld e,l
 960+ 8C54 13               inc de
 961+ 8C55 ED B0            ldir
 962+ 8C57 C9               ret
 963+ 8C58
 964+ 8C58              ; -----------------------------------------------------------------
 965+ 8C58              ;
 966+ 8C58              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 967+ 8C58              ;
 968+ 8C58              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 969+ 8C58              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 970+ 8C58              ;
 971+ 8C58              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 972+ 8C58              ;
 973+ 8C58              ;   INPUTS:
 974+ 8C58              ;
 975+ 8C58              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 976+ 8C58              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 977+ 8C58              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 978+ 8C58
 979+ 8C58              ;   MODIFICA: A, HL, DE y C
 980+ 8C58
 981+ 8C58 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
 982+ 8C59 79               ld a,c
 983+ 8C5A E6 01            and 1
 984+ 8C5C 20 03            jr nz,1F
 985+ 8C5E 14               inc d
 986+ 8C5F 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
 987+ 8C61
 988+ 8C61              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 989+ 8C61              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 990+ 8C61
 991+ 8C61 15           1 dec d
 992+ 8C62 23           2 inc hl
 993+ 8C63 72               ld (hl),d
 994+ 8C64
 995+ 8C64 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
 996+ 8C65 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
 997+ 8C66 C8               ret z
 998+ 8C67
 999+ 8C67 AF               xor a
1000+ 8C68 5F               ld e,a
1001+ 8C69 18 ED            jr Guarda_coordenadas_X
1002+ 8C6B
1003+ 8C6B              ; -----------------------------------------------------------------
1004+ 8C6B              ;
1005+ 8C6B              ;   12/04/23
1006+ 8C6B              ;
1007+ 8C6B
1008+ 8C6B 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1009+ 8C6E FE 04            cp 4
1010+ 8C70 20 FE            jr nz,$
1011+ 8C72 CD BC 8A         call Detecta_colision_nave_entidad
1012+ 8C75
1013+ 8C75 7B               ld a,e
1014+ 8C76 C8               ret z
1015+ 8C77 FE 05            cp 5
1016+ 8C79 D8               ret c
1017+ 8C7A
1018+ 8C7A 21 B4 85         ld hl,Impacto
1019+ 8C7D 36 01            ld (hl),1
1020+ 8C7F 18 FE            jr $
1021+ 8C81
1022+ 8C81 C9               ret
1023+ 8C82
1024+ 8C82              ; -----------------------------------------------------------------
1025+ 8C82              ;
1026+ 8C82              ;   16/04/23
1027+ 8C82              ;
1028+ 8C82
1029+ 8C82 AF           Limpia_Coordenadas_X_Amadeus xor a
1030+ 8C83 06 03            ld b,3
1031+ 8C85 21 ED 85         ld hl,Coordenadas_X_Amadeus
1032+ 8C88 77           1 ld (hl),a
1033+ 8C89 23               inc hl
1034+ 8C8A 10 FC            djnz 1B
1035+ 8C8C C9               ret
# file closed: Disparo.asm
 888  8C8D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C8D              ; ******************************************************************************************************************************************************************************************
   2+ 8C8D              ;
   3+ 8C8D              ; 01/23
   4+ 8C8D              ;
   5+ 8C8D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C8D
   7+ 8C8D CD 67 8F     Draw call Prepara_draw
   8+ 8C90 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C91 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C92 28 05        	jr z,2F
  11+ 8C94
  12+ 8C94 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C97 18 0C        	jr 1F
  14+ 8C99 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C9C 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C9F CD 2E 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8CA2              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8CA2 CD AD 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8CA5 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8CA8 CB 6F        	bit 5,a
  21+ 8CAA 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8CAC
  23+ 8CAC CD C4 8C     	call Comprueba_limite_horizontal
  24+ 8CAF CD 54 8D     	call Comprueba_limite_vertical
  25+ 8CB2
  26+ 8CB2              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8CB2
  28+ 8CB2 CD A1 8E     3 call calcula_CColumnass
  29+ 8CB5 CD D8 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8CB8 CD 2D 8F     	call Define_rutina_de_impresion
  31+ 8CBB
  32+ 8CBB 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8CBE CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CC0 32 C9 85     	ld (Ctrl_0),a
  35+ 8CC3
  36+ 8CC3 C9           	ret
  37+ 8CC4
  38+ 8CC4              ; *******************************************************************************************************************************************************************************************
  39+ 8CC4              ;	21/01/23
  40+ 8CC4              ;
  41+ 8CC4              ; 	Comprueba_limite_horizontal.
  42+ 8CC4              ;
  43+ 8CC4              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CC4              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CC4              ;
  46+ 8CC4              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CC4              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CC4              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CC4              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CC4
  51+ 8CC4
  52+ 8CC4
  53+ 8CC4 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CC7 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CC9 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CCB E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CCD 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CD0 18 09            jr 6F
  59+ 8CD2 CB 5F        1 bit 3,a
  60+ 8CD4 28 0A            jr z,2F
  61+ 8CD6 E6 F7            and $f7
  62+ 8CD8 32 C9 85         ld (Ctrl_0),a
  63+ 8CDB CD 2E 8E     6 call Inicializacion
  64+ 8CDE 18 5B            jr 5F
  65+ 8CE0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CE1
  67+ 8CE1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CE1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CE1
  70+ 8CE1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CE2 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CE5 CD 33 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CE8 67           	ld h,a
  74+ 8CE9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CEA CD 33 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CED 67           	ld h,a
  77+ 8CEE A7           	and a
  78+ 8CEF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CF1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CF2 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CF5 FE 02        	cp 2
  82+ 8CF7 38 1E        	jr c,3F
  83+ 8CF9 28 1C        	jr z,3F
  84+ 8CFB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CFC 28 23            jr z,7F
  86+ 8CFE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8D00 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8D02 E1           	pop hl
  89+ 8D03
  90+ 8D03              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8D03              ; _para indicar con E="2" en caso necesario.
  92+ 8D03
  93+ 8D03 E5               push hl
  94+ 8D04 C5               push bc
  95+ 8D05 CD 33 92     	call calcula_tercio
  96+ 8D08 FE 01        	cp 1
  97+ 8D0A 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8D0C CD 3C 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8D0F 28 26            jr z,9F
 100+ 8D11 38 24            jr c,9F
 101+ 8D13 1E 00        11 ld e,0
 102+ 8D15 18 22            jr 8F
 103+ 8D17 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D18 28 07        	jr z, 7F
 105+ 8D1A 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D1C 1E 00         	ld e,0
 107+ 8D1E E1           	pop hl
 108+ 8D1F 18 04        	jr 4F
 109+ 8D21 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D23 18 15            jr 10F
 111+ 8D25
 112+ 8D25              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D25              ; _para indicar con E="2" en caso necesario.
 114+ 8D25
 115+ 8D25 E5           4 push hl
 116+ 8D26 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D27 CD 33 92     	call calcula_tercio
 118+ 8D2A FE 01        	cp 1
 119+ 8D2C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D2E CD 3C 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D31 28 04            jr z,9F
 122+ 8D33 30 02            jr nc,9F
 123+ 8D35 18 02        	jr 8F
 124+ 8D37 1E 02        9 ld e,2
 125+ 8D39 C1           8 pop bc
 126+ 8D3A E1           10 pop hl
 127+ 8D3B C9           5 ret
 128+ 8D3C
 129+ 8D3C              ; --------------------
 130+ 8D3C              ;
 131+ 8D3C              ; 25/08/22
 132+ 8D3C
 133+ 8D3C CD 33 92     Comprueba_centro call calcula_tercio
 134+ 8D3F 67               ld h,a
 135+ 8D40 08           	ex af,af
 136+ 8D41 FE 02        	cp 2
 137+ 8D43 38 07        	jr c,1F
 138+ 8D45 28 05        	jr z,1F
 139+ 8D47 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D4A 18 03        	jr 2F
 141+ 8D4C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D4F 08           2 ex af,af
 143+ 8D50 A7               and a
 144+ 8D51 ED 42            sbc hl,bc
 145+ 8D53 C9               ret
 146+ 8D54
 147+ 8D54              ; *********************************************************************************************************************************************************************************************
 148+ 8D54              ;
 149+ 8D54              ;   16/8/22
 150+ 8D54              ;
 151+ 8D54              ;	Comprueba_limite_vertical
 152+ 8D54              ;
 153+ 8D54              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D54              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D54              ;
 156+ 8D54
 157+ 8D54 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D57 7D           	ld a,l
 159+ 8D58 E6 1F        	and $1F
 160+ 8D5A 57           	ld d,a
 161+ 8D5B 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D5E BA           	cp d 											; Límite - Posición.
 163+ 8D5F 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D60 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D63 CB 47        	bit 0,a
 166+ 8D65 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D67
 168+ 8D67              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D67
 170+ 8D67 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D68 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D6A
 173+ 8D6A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D6A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D6A
 176+ 8D6A 3A A1 85         ld a,(Coordenada_X)
 177+ 8D6D 16 0F            ld d,Centro_izquierda
 178+ 8D6F A7               and a
 179+ 8D70 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D71 28 1E            jr z,3F
 181+ 8D73 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D75              ;                                                    ; _salimos sin modificar nada.
 183+ 8D75 18 0E            jr 2F
 184+ 8D77 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D78 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D7A
 187+ 8D7A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D7A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D7A
 190+ 8D7A 3A A1 85         ld a,(Coordenada_X)
 191+ 8D7D 16 10            ld d,Centro_derecha
 192+ 8D7F A7               and a
 193+ 8D80 92               sub d
 194+ 8D81 28 0E            jr z,3F
 195+ 8D83 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D85              ;                                                    ; _salimos sin modificar nada.
 197+ 8D85 CB 43        2 bit 0,e
 198+ 8D87 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D89 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D8A CD 1E 8E         call Modificaccionne
 201+ 8D8D C1           	pop bc
 202+ 8D8E CD 2E 8E         call Inicializacion
 203+ 8D91 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D92
 205+ 8D92              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D92
 207+ 8D92 C5           4 push bc
 208+ 8D93 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D96 0A           	ld a,(bc)
 210+ 8D97 3D           	dec a
 211+ 8D98 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D99 7D           	ld a,l
 213+ 8D9A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D9B CB 47        	bit 0,a
 215+ 8D9D 28 03        	jr z,5F
 216+ 8D9F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8DA0 18 2E        	jr 7F
 218+ 8DA2
 219+ 8DA2              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8DA2
 221+ 8DA2 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8DA3 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8DA4 3A C9 85     	ld a,(Ctrl_0)
 224+ 8DA7 CB 4F        	bit 1,a
 225+ 8DA9 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8DAB F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8DAC
 228+ 8DAC              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8DAC
 230+ 8DAC 1C               inc e
 231+ 8DAD 1D               dec e
 232+ 8DAE 20 07            jr nz,12F
 233+ 8DB0 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8DB1 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8DB2 22 9D 85     	ld (Posicion_actual),hl
 236+ 8DB5 18 44        13 jr 9F
 237+ 8DB7 CB 43        12 bit 0,e
 238+ 8DB9 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DBB              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DBB C1           	pop bc
 241+ 8DBC 18 D3        	jr 3B
 242+ 8DBE 80           14 add b
 243+ 8DBF 6F               ld l,a
 244+ 8DC0 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DC3 CD 1E 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DC6 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DC8 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DCA 32 C9 85         ld (Ctrl_0),a
 249+ 8DCD F1           	pop af
 250+ 8DCE 18 2B        	jr 9F
 251+ 8DD0
 252+ 8DD0              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DD0
 254+ 8DD0 F5           7 push af
 255+ 8DD1 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DD4 CB 47        	bit 0,a
 257+ 8DD6 20 1D        	jr nz,8F
 258+ 8DD8 F1           	pop af
 259+ 8DD9
 260+ 8DD9              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DD9
 262+ 8DD9 1C           	inc e
 263+ 8DDA 1D               dec e
 264+ 8DDB 20 07            jr nz,10F
 265+ 8DDD 90           	sub b
 266+ 8DDE 6F               ld l,a
 267+ 8DDF 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DE2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DE4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DE4 CB 43        10 bit 0,e
 271+ 8DE6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DE8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DE8 C1           	pop bc
 274+ 8DE9 18 A6        	jr 3B
 275+ 8DEB 90           16 sub b
 276+ 8DEC 6F               ld l,a
 277+ 8DED 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DF0 CD 1E 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DF3 18 06            jr 9F
 280+ 8DF5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DF7 32 C9 85         ld (Ctrl_0),a
 282+ 8DFA F1           	pop af
 283+ 8DFB C1           9 pop bc
 284+ 8DFC 1E 00        	ld e,0
 285+ 8DFE CD 2E 8E         call Inicializacion
 286+ 8E01 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8E02 08           	ex af,af
 288+ 8E03 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8E04 18 8B            jr 3B
 290+ 8E06
 291+ 8E06              ; --------------------
 292+ 8E06
 293+ 8E06 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8E08 CD 82 8F     1 call PreviousScan
 295+ 8E0B 10 FB            djnz 1B
 296+ 8E0D 22 9D 85     	ld (Posicion_actual),hl
 297+ 8E10 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8E11 C9           	ret
 299+ 8E12
 300+ 8E12              ; --------------------
 301+ 8E12
 302+ 8E12 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8E14 CD 73 8F     1 call NextScan
 304+ 8E17 10 FB            djnz 1B
 305+ 8E19 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E1C AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E1D C9           	ret
 308+ 8E1E
 309+ 8E1E              ; --------------------
 310+ 8E1E              ;
 311+ 8E1E              ;	22/01/23
 312+ 8E1E              ;
 313+ 8E1E              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E1E              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E1E              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E1E
 317+ 8E1E
 318+ 8E1E              Modificaccionne
 319+ 8E1E
 320+ 8E1E 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E21 FE 02        	cp 2
 322+ 8E23 CC 06 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E26 DC 06 8E         call c,Modifica_Pos_actual
 324+ 8E29 C8           	ret z
 325+ 8E2A CD 12 8E         call Modifica_Pos_actual2
 326+ 8E2D C9               ret
 327+ 8E2E
 328+ 8E2E              ; *************************************************************************************************************************************************************************************************
 329+ 8E2E              ;
 330+ 8E2E              ;	13/8/22
 331+ 8E2E              ;
 332+ 8E2E              ;	Inicializacion
 333+ 8E2E              ;
 334+ 8E2E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E2E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E2E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E2E              ;
 338+ 8E2E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E2E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E2E              ;	_ desaparece/aparece.
 341+ 8E2E
 342+ 8E2E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E2E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E2E              ;
 345+ 8E2E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E2E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E2E              ; 		   [E] ="0"
 348+ 8E2E
 349+ 8E2E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E2E
 351+ 8E2E CD 33 92     Inicializacion call calcula_tercio
 352+ 8E31 28 36        	jr z,primit
 353+ 8E33 E6 02        	and 2
 354+ 8E35 20 07        	jr nz,segmit
 355+ 8E37 7D           	ld a,l
 356+ 8E38 FE 7F        	cp $7f
 357+ 8E3A 38 2D        	jr c,primit
 358+ 8E3C 28 2B        	jr z,primit
 359+ 8E3E CD 9B 8E     segmit call column
 360+ 8E41 38 13        	jr c,tercuad
 361+ 8E43 3E 04        cuarcuad ld a,4
 362+ 8E45 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E48 21 20 48     	ld hl,$4820
 364+ 8E4B 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E4E 21 D5 85     	ld hl,Limite_vertical
 366+ 8E51 36 0D        	ld (hl),$0d
 367+ 8E53 08           	ex af,af
 368+ 8E54 18 3C        	jr 1F
 369+ 8E56              tercuad
 370+ 8E56 3E 03        	ld a,3
 371+ 8E58 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E5B 21 20 48     	ld hl,$4820
 373+ 8E5E 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E61 21 D5 85     	ld hl,Limite_vertical
 375+ 8E64 36 12        	ld (hl),$12
 376+ 8E66 08           	ex af,af
 377+ 8E67 18 29        	jr 1F
 378+ 8E69 CD 9B 8E     primit call column
 379+ 8E6C 38 13        	jr c, primcuad
 380+ 8E6E              segcuad
 381+ 8E6E 3E 02        	ld a,2
 382+ 8E70 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E73 21 C0 4F     	ld hl,$4fc0
 384+ 8E76 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E79 21 D5 85     	ld hl,Limite_vertical
 386+ 8E7C 36 0D        	ld (hl),$0d
 387+ 8E7E 08           	ex af,af
 388+ 8E7F 18 11        	jr 1F
 389+ 8E81              primcuad
 390+ 8E81 3E 01        	ld a,1
 391+ 8E83 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E86 21 C0 4F     	ld hl,$4fc0
 393+ 8E89 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E8C 21 D5 85     	ld hl,Limite_vertical
 395+ 8E8F 36 12        	ld (hl),$12
 396+ 8E91 08           	ex af,af
 397+ 8E92 CD 5F 95     1 call Genera_coordenadas
 398+ 8E95 21 C9 85     	ld hl,Ctrl_0
 399+ 8E98 CB EE        	set 5,(hl)
 400+ 8E9A C9           	ret
 401+ 8E9B
 402+ 8E9B              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E9B
 404+ 8E9B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E9B              ;
 406+ 8E9B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E9B
 408+ 8E9B 7D           column ld a,l
 409+ 8E9C E6 1F        	and $1f
 410+ 8E9E FE 10         	cp $10
 411+ 8EA0 C9            	ret
 412+ 8EA1
 413+ 8EA1              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8EA1              ;
 415+ 8EA1              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8EA1              ;
 417+ 8EA1              ; 14/12/22
 418+ 8EA1              ;
 419+ 8EA1              ;	Modifica: A y BC.
 420+ 8EA1
 421+ 8EA1 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8EA4 E6 01        	and 1
 423+ 8EA6 28 17        	jr z,1F
 424+ 8EA8
 425+ 8EA8              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8EA8
 427+ 8EA8 3A A1 85     	ld a,(Coordenada_X)
 428+ 8EAB 47           	ld b,a
 429+ 8EAC 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8EAD 79           	ld a,c
 431+ 8EAE 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8EAF 38 08        	jr c,2F
 433+ 8EB1 47           	ld b,a
 434+ 8EB2 79           	ld a,c
 435+ 8EB3 90           	sub b
 436+ 8EB4 32 D2 85     	ld (Columnas),a
 437+ 8EB7 18 1B        	jr 4F
 438+ 8EB9 79           2 ld a,c
 439+ 8EBA 32 D2 85     	ld (Columnas),a
 440+ 8EBD 18 15        	jr 4F
 441+ 8EBF
 442+ 8EBF              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8EBF
 444+ 8EBF 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EC2 81           	add c
 446+ 8EC3 3D           	dec a
 447+ 8EC4 D6 1F        	sub $1f
 448+ 8EC6 38 08        	jr c,3F
 449+ 8EC8 47           	ld b,a
 450+ 8EC9 79           	ld a,c
 451+ 8ECA 90           	sub b
 452+ 8ECB 32 D2 85     	ld (Columnas),a
 453+ 8ECE 18 04        	jr 4F
 454+ 8ED0 79           3 ld a,c
 455+ 8ED1 32 D2 85     	ld (Columnas),a
 456+ 8ED4 D9           4 exx
 457+ 8ED5 4F           	ld c,a
 458+ 8ED6 D9           	exx
 459+ 8ED7 C9            ret
 460+ 8ED8
 461+ 8ED8              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8ED8              ;
 463+ 8ED8              ; 7/1/23
 464+ 8ED8              ;
 465+ 8ED8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8ED8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8ED8              ;
 468+ 8ED8              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8ED8              ;	DESTRUYE: HL,B Y A.
 470+ 8ED8
 471+ 8ED8 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8EDB FE 02        	cp 2
 473+ 8EDD 38 18        	jr c,1F
 474+ 8EDF 28 16        	jr z,1F
 475+ 8EE1 E6 01        	and 1
 476+ 8EE3 28 0D        	jr z,3F
 477+ 8EE5
 478+ 8EE5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8EE5
 480+ 8EE5 CD 21 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8EE8
 482+ 8EE8 7D           9 ld a,l
 483+ 8EE9 E6 1F        	and $1f
 484+ 8EEB 28 2A        	jr z,7F
 485+ 8EED 2B           	dec hl
 486+ 8EEE 10 F8        	djnz 9B
 487+ 8EF0 18 25        	jr 7F
 488+ 8EF2
 489+ 8EF2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8EF2
 491+ 8EF2 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8EF5 18 20        	jr 7F
 493+ 8EF7
 494+ 8EF7 28 14        1 jr z,2F
 495+ 8EF9
 496+ 8EF9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8EF9
 498+ 8EF9 CD 21 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EFC 7D           4 ld a,l
 500+ 8EFD E6 1F        	and $1f
 501+ 8EFF 28 03        	jr z,6F
 502+ 8F01 2B           	dec hl
 503+ 8F02 10 F8        	djnz 4B
 504+ 8F04 06 0F        6 ld b,15
 505+ 8F06 CD 82 8F     5 call PreviousScan
 506+ 8F09 10 FB        	djnz 5B
 507+ 8F0B 18 0A        	jr 7F
 508+ 8F0D
 509+ 8F0D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8F0D
 511+ 8F0D CD 21 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8F10 06 0F        	ld b,15
 513+ 8F12 CD 82 8F     8 call PreviousScan
 514+ 8F15 10 FB        	djnz 8B
 515+ 8F17
 516+ 8F17 E5           7 push hl
 517+ 8F18 DD E1        	pop ix
 518+ 8F1A
 519+ 8F1A 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F1D E5           	push hl
 521+ 8F1E FD E1        	pop iy
 522+ 8F20
 523+ 8F20 C9           	ret
 524+ 8F21
 525+ 8F21              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F21              ;
 527+ 8F21              ;	2/1/23
 528+ 8F21              ;
 529+ 8F21              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F21              ;
 531+ 8F21              ;	Tras esta rutina tenemos:
 532+ 8F21              ;
 533+ 8F21              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F21              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F21              ;
 536+ 8F21              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F21
 538+ 8F21 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F24 3A D2 85     	ld a,(Columnas)
 540+ 8F27 3D           	dec a
 541+ 8F28 20 01        	jr nz,1F
 542+ 8F2A 3C           	inc a
 543+ 8F2B 47           1 ld b,a
 544+ 8F2C C9           	ret
 545+ 8F2D
 546+ 8F2D              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F2D              ;
 548+ 8F2D              ;	3/1/23
 549+ 8F2D              ;
 550+ 8F2D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F2D              ;
 552+ 8F2D              ;	Destruye: A,B,HL y DE.
 553+ 8F2D
 554+ 8F2D              Define_rutina_de_impresion
 555+ 8F2D
 556+ 8F2D 3A 9C 85     	ld a,(Columns)
 557+ 8F30 47           	ld b,a
 558+ 8F31 3A D2 85     	ld a,(Columnas)
 559+ 8F34 B8           	cp b
 560+ 8F35 20 0D        	jr nz,2f
 561+ 8F37
 562+ 8F37              ;	La entidad se imprime entera.
 563+ 8F37
 564+ 8F37 21 03 90     	ld hl, Indice_entidades_completas
 565+ 8F3A E6 01        	and 1
 566+ 8F3C 28 02        	jr z,1F
 567+ 8F3E
 568+ 8F3E 23           	inc hl
 569+ 8F3F 23           	inc hl
 570+ 8F40
 571+ 8F40 CD AC 87     1 call Extrae_address
 572+ 8F43 C9           	ret		;	ret
 573+ 8F44
 574+ 8F44              ;	La entidad no se imprime entera en pantalla.
 575+ 8F44
 576+ 8F44 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F47 E6 01        	and 1
 578+ 8F49 28 17        	jr z,3F
 579+ 8F4B
 580+ 8F4B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F4B
 582+ 8F4B 21 07 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F4E 3A 9C 85     4 ld a,(Columns)
 584+ 8F51 E6 01        	and 1
 585+ 8F53 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F55
 587+ 8F55 23           	inc hl
 588+ 8F56 23           	inc hl
 589+ 8F57
 590+ 8F57 3A D2 85     	ld a,(Columnas)
 591+ 8F5A E6 01        	and 1
 592+ 8F5C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F5E
 594+ 8F5E 23           	inc hl
 595+ 8F5F 23           	inc hl
 596+ 8F60
 597+ 8F60 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F62
 599+ 8F62 21 0D 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F65 18 E7        	jr 4B
 601+ 8F67
 602+ 8F67              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F67              ;
 604+ 8F67              ;	Prepara_draw
 605+ 8F67              ;
 606+ 8F67              ;	Es una rutina de carga.
 607+ 8F67              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F67              ;
 609+ 8F67              ;	FUNCIONAMIENTO:
 610+ 8F67              ;
 611+ 8F67              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F67              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F67              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F67              ;
 615+ 8F67              ;	DESTRUYE:
 616+ 8F67              ;
 617+ 8F67              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F67
 619+ 8F67 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F6A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F6B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F6C 4E           	ld c,(hl)
 623+ 8F6D 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F70 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F72 C9           	ret
 626+ 8F73
 627+ 8F73              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F73              ;
 629+ 8F73              ;	5/08/22
 630+ 8F73              ;
 631+ 8F73              ;   NextScan.
 632+ 8F73              ;
 633+ 8F73              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F73              ;
 635+ 8F73              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F73              ;
 637+ 8F73              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F73              ;
 639+ 8F73              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F73              ;
 641+ 8F73              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F73              ;
 643+ 8F73
 644+ 8F73 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F74 7C               ld a,h
 646+ 8F75 E6 07            and 7
 647+ 8F77 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F78
 649+ 8F78 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F79 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F7B 6F               ld l,a
 652+ 8F7C D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F7D
 654+ 8F7D 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F7E D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F80 67               ld h,a
 657+ 8F81 C9               ret
 658+ 8F82
 659+ 8F82              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F82              ;
 661+ 8F82              ;	5/08/22
 662+ 8F82              ;
 663+ 8F82              ;   PreviousScan.
 664+ 8F82              ;
 665+ 8F82              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F82              ;
 667+ 8F82              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F82              ;
 669+ 8F82              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F82              ;
 671+ 8F82              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F82              ;
 673+ 8F82              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F82              ;
 675+ 8F82
 676+ 8F82 7C           PreviousScan ld a,h
 677+ 8F83 25               dec h               ; Dec H.
 678+ 8F84 E6 07            and 7
 679+ 8F86 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F87
 681+ 8F87 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F88 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F8A 6F               ld l,a
 684+ 8F8B D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F8C
 686+ 8F8C 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F8D C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F8F 67               ld h,a
 689+ 8F90 C9               ret
 690+ 8F91
 691+ 8F91              ; -----------------------------------------------------------------------------------
 692+ 8F91              ;
 693+ 8F91              ;	28/2/23
 694+ 8F91              ;
 695+ 8F91              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F91              ;	Extrae fotos de Album_de_fotos.
 697+ 8F91
 698+ 8F91 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 8F94 A7           	and a
 700+ 8F95 C8           	ret z
 701+ 8F96 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F9A 31 00 70     	ld sp,Album_de_fotos
 703+ 8F9D
 704+ 8F9D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F9F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8FA0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8FA1
 708+ 8FA1 ED 73 E1 85  	ld (Stack_2),sp
 709+ 8FA5 ED 7B DF 85  	ld sp,(Stack)
 710+ 8FA9
 711+ 8FA9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8FA9
 713+ 8FA9 3E CD        	ld a,$cd
 714+ 8FAB 32 B3 8F     	ld (Imprime),a
 715+ 8FAE EB           	ex de,hl
 716+ 8FAF 22 B4 8F     	ld (Imprime+1),hl
 717+ 8FB2 EB           	ex de,hl
 718+ 8FB3
 719+ 8FB3              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8FB3
 721+ 8FB3 00 00 00     Imprime db 0,0,0
 722+ 8FB6
 723+ 8FB6 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8FB9 3D           	dec a
 725+ 8FBA 28 09        	jr z,1F
 726+ 8FBC 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8FBF
 728+ 8FBF ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FC3 18 D8        	jr 2B
 730+ 8FC5
 731+ 8FC5 AF           1 xor a
 732+ 8FC6 32 E1 85     	ld (Stack_2),a
 733+ 8FC9 C9           	ret
 734+ 8FCA
 735+ 8FCA              ; -----------------------------------------------------------------------------------
 736+ 8FCA              ;
 737+ 8FCA              ;	28/2/23
 738+ 8FCA              ;
 739+ 8FCA              ;	Pinta los disparos generados.
 740+ 8FCA
 741+ 8FCA              Extrae_foto_disparos
 742+ 8FCA
 743+ 8FCA 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FCD A7           	and a
 745+ 8FCE C8           	ret z
 746+ 8FCF ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FD3 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FD6
 749+ 8FD6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FD8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FD9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FDA
 753+ 8FDA ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FDE ED 7B DF 85  	ld sp,(Stack)
 755+ 8FE2
 756+ 8FE2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FE2
 758+ 8FE2 3E CD        	ld a,$cd
 759+ 8FE4 32 EC 8F     	ld (Imprime2),a
 760+ 8FE7 EB           	ex de,hl
 761+ 8FE8 22 ED 8F     	ld (Imprime2+1),hl
 762+ 8FEB EB           	ex de,hl
 763+ 8FEC
 764+ 8FEC              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FEC
 766+ 8FEC 00 00 00     Imprime2 db 0,0,0
 767+ 8FEF
 768+ 8FEF 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FF2 3D           	dec a
 770+ 8FF3 28 09        	jr z,1F
 771+ 8FF5 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FF8
 773+ 8FF8 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FFC 18 D8        	jr 2B
 775+ 8FFE
 776+ 8FFE AF           1 xor a
 777+ 8FFF 32 E1 85     	ld (Stack_2),a
 778+ 9002 C9           	ret
 779+ 9003
# file closed: Draw_XOR.asm
 889  9003              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9003              ;   índices de Rutinas de impresión.
   2+ 9003
   3+ 9003 13 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9005 40 90            defw Pinta_Amadeus_3x2
   5+ 9007
   6+ 9007 96 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9009 36 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 900B EA 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 900D
  10+ 900D C0 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 900F C4 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9011 78 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9013
  14+ 9013
  15+ 9013              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9013              ;
  17+ 9013              ;   12/12/22
  18+ 9013              ;
  19+ 9013              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9013              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9013              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9013              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9013              ;
  24+ 9013              ;   Modifica: DE y HL.
  25+ 9013
  26+ 9013 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9017 FD F9        	ld sp,iy
  28+ 9019 06 10            ld b,16
  29+ 901B D1           1 pop de
  30+ 901C 7B               ld a,e
  31+ 901D AE               xor (hl)
  32+ 901E 77           	ld (hl),a
  33+ 901F 23           	inc hl
  34+ 9020 7A               ld a,d
  35+ 9021 AE               xor (hl)
  36+ 9022 77           	ld (hl),a
  37+ 9023 2B           	dec hl
  38+ 9024 24           	inc h
  39+ 9025 7C               ld a,h
  40+ 9026 E6 07            and 7
  41+ 9028 20 0A            jr nz,2F
  42+ 902A 7D               ld a,l
  43+ 902B C6 20            add a,$20
  44+ 902D 6F               ld l,a
  45+ 902E 38 04            jr c,2F
  46+ 9030 7C               ld a,h
  47+ 9031 D6 08            sub 8
  48+ 9033 67               ld h,a
  49+ 9034 7C           2 ld a,h
  50+ 9035 FE 58            cp $58
  51+ 9037 28 02            jr z,3F
  52+ 9039 10 E0            djnz 1B
  53+ 903B ED 7B DF 85  3 ld sp,(Stack)
  54+ 903F C9           	ret
  55+ 9040
  56+ 9040 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9044 FD F9        	ld sp,iy
  58+ 9046 06 08            ld b,8
  59+ 9048 D1           1 pop de
  60+ 9049 7B               ld a,e
  61+ 904A AE               xor (hl)
  62+ 904B 77           	ld (hl),a
  63+ 904C 23           	inc hl
  64+ 904D 7A               ld a,d
  65+ 904E AE               xor (hl)
  66+ 904F 77           	ld (hl),a
  67+ 9050 23           	inc hl
  68+ 9051 D1           	pop de
  69+ 9052 7B               ld a,e
  70+ 9053 AE               xor (hl)
  71+ 9054 77           	ld (hl),a
  72+ 9055 2B           	dec hl
  73+ 9056 2B           	dec hl
  74+ 9057 24           	inc h
  75+ 9058 7C               ld a,h
  76+ 9059 E6 07            and 7
  77+ 905B 20 0A            jr nz,2F
  78+ 905D 7D               ld a,l
  79+ 905E C6 20            add a,$20
  80+ 9060 6F               ld l,a
  81+ 9061 38 04            jr c,2F
  82+ 9063 7C               ld a,h
  83+ 9064 D6 08            sub 8
  84+ 9066 67               ld h,a
  85+ 9067 7C           2 ld a,h
  86+ 9068 FE 58            cp $58
  87+ 906A 28 25            jr z,4F
  88+ 906C 7A               ld a,d
  89+ 906D AE               xor (hl)
  90+ 906E 77               ld (hl),a
  91+ 906F D1           	pop de
  92+ 9070 23           	inc hl
  93+ 9071 7B               ld a,e
  94+ 9072 AE               xor (hl)
  95+ 9073 77           	ld (hl),a
  96+ 9074 23           	inc hl
  97+ 9075 7A               ld a,d
  98+ 9076 AE               xor (hl)
  99+ 9077 77           	ld (hl),a
 100+ 9078 2B           	dec hl
 101+ 9079 2B           	dec hl
 102+ 907A 24           	inc h
 103+ 907B 7C               ld a,h
 104+ 907C E6 07            and 7
 105+ 907E 20 0A            jr nz,3F
 106+ 9080 7D               ld a,l
 107+ 9081 C6 20            add a,$20
 108+ 9083 6F               ld l,a
 109+ 9084 38 04            jr c,3F
 110+ 9086 7C               ld a,h
 111+ 9087 D6 08            sub 8
 112+ 9089 67               ld h,a
 113+ 908A 7C           3 ld a,h
 114+ 908B FE 58            cp $58
 115+ 908D 28 02            jr z,4F
 116+ 908F 10 B7            djnz 1B
 117+ 9091 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9095 C9           	ret
 119+ 9096
 120+ 9096              ; ---------------------------------------------------
 121+ 9096
 122+ 9096 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 909A FD F9        	ld sp,iy
 124+ 909C
 125+ 909C              ; >>>
 126+ 909C
 127+ 909C 06 10            ld b,16
 128+ 909E D1           1 pop de
 129+ 909F 7A           	ld a,d
 130+ 90A0 AE           	xor (hl)
 131+ 90A1 77           	ld (hl),a
 132+ 90A2 24           	inc h
 133+ 90A3 7C               ld a,h
 134+ 90A4 E6 07            and 7
 135+ 90A6 20 0C            jr nz,2F
 136+ 90A8 7D               ld a,l
 137+ 90A9 C6 20            add a,$20
 138+ 90AB 6F               ld l,a
 139+ 90AC 38 06            jr c,2F
 140+ 90AE 7C               ld a,h
 141+ 90AF D6 08            sub 8
 142+ 90B1 67               ld h,a
 143+ 90B2 18 00            jr 2F
 144+ 90B4 7C           2 ld a,h
 145+ 90B5 FE 58            cp $58
 146+ 90B7 28 02            jr z,3F
 147+ 90B9 10 E3            djnz 1B
 148+ 90BB ED 7B DF 85  3 ld sp,(Stack)
 149+ 90BF C9           	ret
 150+ 90C0
 151+ 90C0 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90C4 FD F9        	ld sp,iy
 153+ 90C6
 154+ 90C6              ; >>>
 155+ 90C6
 156+ 90C6 06 10            ld b,16
 157+ 90C8 D1           1 pop de
 158+ 90C9 7B           	ld a,e
 159+ 90CA AE           	xor (hl)
 160+ 90CB 77           	ld (hl),a
 161+ 90CC 24           	inc h
 162+ 90CD 7C               ld a,h
 163+ 90CE E6 07            and 7
 164+ 90D0 20 0C            jr nz,2F
 165+ 90D2 7D               ld a,l
 166+ 90D3 C6 20            add a,$20
 167+ 90D5 6F               ld l,a
 168+ 90D6 38 06            jr c,2F
 169+ 90D8 7C               ld a,h
 170+ 90D9 D6 08            sub 8
 171+ 90DB 67               ld h,a
 172+ 90DC 18 00            jr 2F
 173+ 90DE 7C           2 ld a,h
 174+ 90DF FE 58            cp $58
 175+ 90E1 28 02            jr z,3F
 176+ 90E3 10 E3            djnz 1B
 177+ 90E5 ED 7B DF 85  3 ld sp,(Stack)
 178+ 90E9 C9           	ret
 179+ 90EA
 180+ 90EA              ; ---------------------------------------------------
 181+ 90EA
 182+ 90EA ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90EE FD F9        	ld sp,iy
 184+ 90F0 06 08            ld b,8
 185+ 90F2 D1           1 pop de
 186+ 90F3 7A           	ld a,d
 187+ 90F4 AE           	xor (hl)
 188+ 90F5 77           	ld (hl),a
 189+ 90F6 23           	inc hl
 190+ 90F7 D1           	pop de
 191+ 90F8 7B           	ld a,e
 192+ 90F9 AE           	xor (hl)
 193+ 90FA 77           	ld (hl),a
 194+ 90FB 2B           	dec hl
 195+ 90FC 24            	inc h
 196+ 90FD 7C               ld a,h
 197+ 90FE E6 07            and 7
 198+ 9100 20 0A            jr nz,2F
 199+ 9102 7D               ld a,l
 200+ 9103 C6 20            add a,$20
 201+ 9105 6F               ld l,a
 202+ 9106 38 04            jr c,2F
 203+ 9108 7C               ld a,h
 204+ 9109 D6 08            sub 8
 205+ 910B 67               ld h,a
 206+ 910C 7C           2 ld a,h
 207+ 910D FE 58            cp $58
 208+ 910F 28 20            jr z,4F
 209+ 9111 D1               pop de
 210+ 9112 7B           	ld a,e
 211+ 9113 AE           	xor (hl)
 212+ 9114 77           	ld (hl),a
 213+ 9115 23           	inc hl
 214+ 9116 7A           	ld a,d
 215+ 9117 AE           	xor (hl)
 216+ 9118 77           	ld (hl),a
 217+ 9119 2B           	dec hl
 218+ 911A 24           	inc h
 219+ 911B 7C               ld a,h
 220+ 911C E6 07            and 7
 221+ 911E 20 0A            jr nz,3F
 222+ 9120 7D               ld a,l
 223+ 9121 C6 20            add a,$20
 224+ 9123 6F               ld l,a
 225+ 9124 38 04            jr c,3F
 226+ 9126 7C               ld a,h
 227+ 9127 D6 08            sub 8
 228+ 9129 67               ld h,a
 229+ 912A 7C           3 ld a,h
 230+ 912B FE 58            cp $58
 231+ 912D 28 02            jr z,4F
 232+ 912F 10 C1            djnz 1B
 233+ 9131 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9135 C9           	ret
 235+ 9136
 236+ 9136 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 913A FD F9        	ld sp,iy
 238+ 913C 06 08            ld b,8
 239+ 913E D1           1 pop de
 240+ 913F D1           	pop de
 241+ 9140 7B           	ld a,e
 242+ 9141 AE           	xor (hl)
 243+ 9142 77           	ld (hl),a
 244+ 9143 24            	inc h
 245+ 9144 7C               ld a,h
 246+ 9145 E6 07            and 7
 247+ 9147 20 0A            jr nz,2F
 248+ 9149 7D               ld a,l
 249+ 914A C6 20            add a,$20
 250+ 914C 6F               ld l,a
 251+ 914D 38 04            jr c,2F
 252+ 914F 7C               ld a,h
 253+ 9150 D6 08            sub 8
 254+ 9152 67               ld h,a
 255+ 9153 7C           2 ld a,h
 256+ 9154 FE 58            cp $58
 257+ 9156 28 1B            jr z,4F
 258+ 9158 D1               pop de
 259+ 9159 7A           	ld a,d
 260+ 915A AE           	xor (hl)
 261+ 915B 77           	ld (hl),a
 262+ 915C 24           	inc h
 263+ 915D 7C               ld a,h
 264+ 915E E6 07            and 7
 265+ 9160 20 0A            jr nz,3F
 266+ 9162 7D               ld a,l
 267+ 9163 C6 20            add a,$20
 268+ 9165 6F               ld l,a
 269+ 9166 38 04            jr c,3F
 270+ 9168 7C               ld a,h
 271+ 9169 D6 08            sub 8
 272+ 916B 67               ld h,a
 273+ 916C 7C           3 ld a,h
 274+ 916D FE 58            cp $58
 275+ 916F 28 02            jr z,4F
 276+ 9171 10 CB            djnz 1B
 277+ 9173 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9177 C9           	ret
 279+ 9178
 280+ 9178 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 917C FD F9        	ld sp,iy
 282+ 917E 06 08            ld b,8
 283+ 9180 D1           1 pop de
 284+ 9181 7B           	ld a,e
 285+ 9182 AE           	xor (hl)
 286+ 9183 77           	ld (hl),a
 287+ 9184 23           	inc hl
 288+ 9185 7A           	ld a,d
 289+ 9186 AE           	xor (hl)
 290+ 9187 77           	ld (hl),a
 291+ 9188 2B           	dec hl
 292+ 9189 24             	inc h
 293+ 918A 7C               ld a,h
 294+ 918B E6 07            and 7
 295+ 918D 20 0A            jr nz,2F
 296+ 918F 7D               ld a,l
 297+ 9190 C6 20            add a,$20
 298+ 9192 6F               ld l,a
 299+ 9193 38 04            jr c,2F
 300+ 9195 7C               ld a,h
 301+ 9196 D6 08            sub 8
 302+ 9198 67               ld h,a
 303+ 9199 7C           2 ld a,h
 304+ 919A FE 58            cp $58
 305+ 919C 28 21            jr z,4F
 306+ 919E D1               pop de
 307+ 919F 7A           	ld a,d
 308+ 91A0 AE           	xor (hl)
 309+ 91A1 77           	ld (hl),a
 310+ 91A2 23           	inc hl
 311+ 91A3 D1               pop de
 312+ 91A4 7B           	ld a,e
 313+ 91A5 AE           	xor (hl)
 314+ 91A6 77           	ld (hl),a
 315+ 91A7 2B           	dec hl
 316+ 91A8 24           	inc h
 317+ 91A9 7C               ld a,h
 318+ 91AA E6 07            and 7
 319+ 91AC 20 0A            jr nz,3F
 320+ 91AE 7D               ld a,l
 321+ 91AF C6 20            add a,$20
 322+ 91B1 6F               ld l,a
 323+ 91B2 38 04            jr c,3F
 324+ 91B4 7C               ld a,h
 325+ 91B5 D6 08            sub 8
 326+ 91B7 67               ld h,a
 327+ 91B8 7C           3 ld a,h
 328+ 91B9 FE 58            cp $58
 329+ 91BB 28 02            jr z,4F
 330+ 91BD 10 C1            djnz 1B
 331+ 91BF ED 7B DF 85  4 ld sp,(Stack)
 332+ 91C3 C9           	ret
 333+ 91C4
 334+ 91C4 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91C8 FD F9        	ld sp,iy
 336+ 91CA 06 08            ld b,8
 337+ 91CC D1           1 pop de
 338+ 91CD 7B           	ld a,e
 339+ 91CE AE           	xor (hl)
 340+ 91CF 77           	ld (hl),a
 341+ 91D0 24            	inc h
 342+ 91D1 7C               ld a,h
 343+ 91D2 E6 07            and 7
 344+ 91D4 20 0A            jr nz,2F
 345+ 91D6 7D               ld a,l
 346+ 91D7 C6 20            add a,$20
 347+ 91D9 6F               ld l,a
 348+ 91DA 38 04            jr c,2F
 349+ 91DC 7C               ld a,h
 350+ 91DD D6 08            sub 8
 351+ 91DF 67               ld h,a
 352+ 91E0 7C           2 ld a,h
 353+ 91E1 FE 58            cp $58
 354+ 91E3 28 1C            jr z,4F
 355+ 91E5 D1               pop de
 356+ 91E6 7A           	ld a,d
 357+ 91E7 AE           	xor (hl)
 358+ 91E8 77           	ld (hl),a
 359+ 91E9 24           	inc h
 360+ 91EA 7C               ld a,h
 361+ 91EB E6 07            and 7
 362+ 91ED 20 0A            jr nz,3F
 363+ 91EF 7D               ld a,l
 364+ 91F0 C6 20            add a,$20
 365+ 91F2 6F               ld l,a
 366+ 91F3 38 04            jr c,3F
 367+ 91F5 7C               ld a,h
 368+ 91F6 D6 08            sub 8
 369+ 91F8 67               ld h,a
 370+ 91F9 7C           3 ld a,h
 371+ 91FA FE 58            cp $58
 372+ 91FC 28 03            jr z,4F
 373+ 91FE D1               pop de
 374+ 91FF 10 CB            djnz 1B
 375+ 9201 ED 7B DF 85  4 ld sp,(Stack)
 376+ 9205 C9           	ret
 377+ 9206
 378+ 9206              ; ---------------------------------------------------
 379+ 9206              ;
 380+ 9206              ;   27/02/23
 381+ 9206              ;
 382+ 9206              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9206              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9206              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9206
 386+ 9206 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 920A FD F9            ld sp,iy
 388+ 920C 06 02            ld b,2
 389+ 920E D1           1 pop de
 390+ 920F 7B               ld a,e
 391+ 9210 AE               xor (hl)
 392+ 9211 77               ld (hl),a
 393+ 9212 23               inc hl
 394+ 9213 7A               ld a,d
 395+ 9214 AE               xor (hl)
 396+ 9215 77               ld (hl),a
 397+ 9216 2B               dec hl
 398+ 9217
 399+ 9217 24               inc h
 400+ 9218 7C               ld a,h
 401+ 9219 E6 07            and 7
 402+ 921B 20 0A            jr nz,2F
 403+ 921D 7D               ld a,l
 404+ 921E C6 20            add a,$20
 405+ 9220 6F               ld l,a
 406+ 9221 38 04            jr c,2F
 407+ 9223 7C               ld a,h
 408+ 9224 D6 08            sub 8
 409+ 9226 67               ld h,a
 410+ 9227 7C           2 ld a,h
 411+ 9228 FE 58            cp $58
 412+ 922A 28 02            jr z,3F
 413+ 922C
 414+ 922C 10 E0            djnz 1B
 415+ 922E ED 7B DF 85  3 ld sp,(Stack)
 416+ 9232 C9               ret
 417+ 9233
# file closed: Rutinas_de_impresion_sprites.asm
 890  9233              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9233              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9233              ;
   3+ 9233              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9233              ;
   5+ 9233              ; *****************************************************************************************************************************************************************************************
   6+ 9233              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9233
   8+ 9233 7C           calcula_tercio ld a,h
   9+ 9234 E6 18        	and $18
  10+ 9236 CB 2F        	sra a
  11+ 9238 CB 2F        	sra a
  12+ 923A CB 2F        	sra a
  13+ 923C C9           	ret
  14+ 923D
# file closed: calcula_tercio.asm
 891  923D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 923D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 923D              ;
   3+ 923D              ;
   4+ 923D              ;	CLS.
   5+ 923D              ;
   6+ 923D              ;	Limpia la pantalla y define sus atributos.
   7+ 923D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 923D              ;
   9+ 923D              ;	COLORES: 0 ..... NEGRO
  10+ 923D              ;    		 1 ..... AZUL
  11+ 923D              ; 			 2 ..... ROJO
  12+ 923D              ;			 3 ..... MAGENTA
  13+ 923D              ; 			 4 ..... VERDE
  14+ 923D              ; 			 5 ..... CIAN
  15+ 923D              ;			 6 ..... AMARILLO
  16+ 923D              ; 			 7 ..... BLANCO
  17+ 923D              ;
  18+ 923D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 923D              ;
  20+ 923D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 923D
  22+ 923D
  23+ 923D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9240 11 01 40     	LD DE,$4001
  25+ 9243 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9246 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9248 ED B0        	LDIR
  28+ 924A 01 FF 02     	LD BC,767
  29+ 924D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 924E ED B0        	LDIR
  31+ 9250 C9           	ret
  32+ 9251
# file closed: Cls.asm
 892  9251              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9251              ; ******************************************************************************************************************************************************************************************
   2+ 9251              ;
   3+ 9251              ;   22/01/23
   4+ 9251              ;
   5+ 9251              ;	Mov_down
   6+ 9251              ;
   7+ 9251              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9251              ;
   9+ 9251              ;
  10+ 9251 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9254 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9256              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9256              ; 																	; _ en el caso de que no lo haya.
  14+ 9256 3A B3 85     	ld a,(Vel_down)
  15+ 9259 47           	ld b,a
  16+ 925A 2A 9D 85         ld hl,(Posicion_actual)
  17+ 925D CD 33 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9260 E6 02        	and 2
  19+ 9262 28 0F        	jr z,1F
  20+ 9264
  21+ 9264              ; Nos encontramos en el último tercio de pantalla.
  22+ 9264              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9264
  24+ 9264 7C           	ld a,h
  25+ 9265 FE 57        	cp $57
  26+ 9267 20 0A        	jr nz,1F
  27+ 9269 7D           	ld a,l
  28+ 926A C6 20        	add $20
  29+ 926C 30 05        	jr nc,1F
  30+ 926E
  31+ 926E              ; ------------------------------
  32+ 926E CD 49 95     	call Reaparece_arriba
  33+ 9271              ;	call Reinicio
  34+ 9271              ; ------------------------------
  35+ 9271
  36+ 9271 18 08        	jr 3F
  37+ 9273 CD 73 8F     1 call NextScan
  38+ 9276 22 9D 85     	ld (Posicion_actual),hl
  39+ 9279 10 E2            djnz 2B
  40+ 927B CD 5F 95     3 call Genera_coordenadas
  41+ 927E C9           	ret
  42+ 927F
  43+ 927F              ; ******************************************************************************************************************************************************************************************
  44+ 927F              ;
  45+ 927F              ;   22/01/23
  46+ 927F              ;
  47+ 927F              ;	Mov_up
  48+ 927F              ;
  49+ 927F              ; 	Mueve el Sprite hacia arriba.
  50+ 927F              ;
  51+ 927F              ;
  52+ 927F 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9282 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9284              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9284              ; 																		; _ en el caso de que no lo haya.
  56+ 9284 3A B2 85     	ld a,(Vel_up)
  57+ 9287 47           	ld b,a
  58+ 9288 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 928B CD 33 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 928E A7           	and a
  61+ 928F 20 10        	jr nz,1F
  62+ 9291
  63+ 9291              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9291              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9291
  66+ 9291 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9292 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9294 20 0B            jr nz,1F
  69+ 9296 7D               ld a,l
  70+ 9297 D6 20            sub $20
  71+ 9299 30 06            jr nc,1F
  72+ 929B 25               dec h
  73+ 929C
  74+ 929C              ; -----------------------------
  75+ 929C CD 39 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 929F              ;	call Reinicio
  77+ 929F              ; -----------------------------
  78+ 929F
  79+ 929F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 92A1 CD 82 8F     1 call PreviousScan
  81+ 92A4 22 9D 85     	ld (Posicion_actual),hl
  82+ 92A7 10 E2            djnz 3B
  83+ 92A9 CD 5F 95     2 call Genera_coordenadas
  84+ 92AC C9           	ret
  85+ 92AD
  86+ 92AD              ; ******************************************************************************************************************************************************************************************
  87+ 92AD              ;
  88+ 92AD              ;	19/10/22
  89+ 92AD              ;
  90+ 92AD              ;	Mov_right.
  91+ 92AD              ;
  92+ 92AD              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 92AD              ;
  94+ 92AD
  95+ 92AD 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 92B0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 92B2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 92B2              ; 																	; _ en el caso de que no lo haya.
  99+ 92B2 3A C9 85     	ld a,(Ctrl_0)
 100+ 92B5 CB 77        	bit 6,a
 101+ 92B7 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 92B9
 103+ 92B9 CD E7 94     	call Stop_Amadeus_right
 104+ 92BC C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 92BD 18 4D        	jr 8F
 106+ 92BF
 107+ 92BF 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92C2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92C4 20 46        	jr nz,8F
 110+ 92C6
 111+ 92C6 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92C9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92CA 28 40        	jr z,8F
 114+ 92CC
 115+ 92CC              ; ---------- ---------- ----------
 116+ 92CC              ;
 117+ 92CC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92CC
 119+ 92CC 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92CF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92D1 28 11        	jr z,1F
 122+ 92D3 38 06        	jr c,6F
 123+ 92D5 FE 04        	cp 4
 124+ 92D7 28 14        	jr z,7F
 125+ 92D9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92DB
 127+ 92DB              ; ---------- ---------- ----------
 128+ 92DB              ;
 129+ 92DB              ; Perfiles de velocidad
 130+ 92DB              ;
 131+ 92DB
 132+ 92DB 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92DE FE FE        	cp $fe
 134+ 92E0 20 2A        	jr nz,8F
 135+ 92E2 18 10        	jr 3F
 136+ 92E4 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92E7 FE FD        	cp $fd
 138+ 92E9 20 21        	jr nz,8F
 139+ 92EB 18 07        	jr 3F
 140+ 92ED 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92F0 FE FB        	cp $fb
 142+ 92F2 20 18        	jr nz,8F
 143+ 92F4
 144+ 92F4              ; ---------- ---------- ----------
 145+ 92F4
 146+ 92F4              3
 147+ 92F4 CD 27 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92F7              ;	call Reinicio
 149+ 92F7
 150+ 92F7              ; ---------- ---------- ----------
 151+ 92F7              ;
 152+ 92F7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92F7
 154+ 92F7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92F9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92FA CD 13 93     	call DESPLZ_DER
 157+ 92FD C1           	pop bc
 158+ 92FE 10 F9        	djnz 5B
 159+ 9300 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9303 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9304 22 9D 85     	ld (Posicion_actual),hl
 162+ 9307 CD 5F 95     	call Genera_coordenadas
 163+ 930A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 930C
 165+ 930C              ; ---------- ---------- ----------
 166+ 930C
 167+ 930C 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 930F CD 13 93     	call DESPLZ_DER
 169+ 9312 C9           2 ret
 170+ 9313
 171+ 9313              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9313              ;
 173+ 9313              ;	22/9/22
 174+ 9313              ;
 175+ 9313
 176+ 9313 CD 22 93     DESPLZ_DER call Desplaza_derecha
 177+ 9316 CD 6E 93         call modifica_parametros_1er_DESPLZ_2
 178+ 9319 CD 97 93         call Ciclo_completo
 179+ 931C 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 931F CB FE        	set 7,(hl)
 181+ 9321 C9           	ret
 182+ 9322
 183+ 9322              ; ******************************************************************************************************************************************************************************************
 184+ 9322              ;	15/02/23
 185+ 9322              ;
 186+ 9322
 187+ 9322 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9325 47           	ld b,a
 189+ 9326 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9329 23           1 inc hl
 191+ 932A 23           	inc hl
 192+ 932B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 932D 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9330 CD AC 87     	call Extrae_address
 195+ 9333 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9336
 197+ 9336              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9336
 199+ 9336              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9336              ; Cuántos movimientos hemos hecho ??
 201+ 9336              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9336
 203+ 9336 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9339 EB           	ex de,hl
 205+ 933A A7           	and a
 206+ 933B ED 52        	sbc hl,de
 207+ 933D CB 3D        	srl l
 208+ 933F 3E 08        6 ld a,8
 209+ 9341 95           	sub l
 210+ 9342 30 1E        	jr nc,3F
 211+ 9344
 212+ 9344              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9344              ; B="0".
 214+ 9344
 215+ 9344 04           4 inc b
 216+ 9345 3C           	inc a
 217+ 9346 20 FC        	jr nz,4B
 218+ 9348 78           	ld a,b
 219+ 9349 08           	ex af,af
 220+ 934A 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 934D 23           5 inc hl
 222+ 934E 23           	inc hl
 223+ 934F 10 FC        	djnz 5B
 224+ 9351 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9354 CD AC 87     	call Extrae_address
 226+ 9357 22 9F 85     	ld (Puntero_objeto),hl
 227+ 935A
 228+ 935A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 935A              ; _(Posicion_actual).
 230+ 935A
 231+ 935A 21 9D 85     	ld hl,Posicion_actual
 232+ 935D 34           	inc (hl)
 233+ 935E 08               ex af,af
 234+ 935F 6F           	ld l,a
 235+ 9360 18 DD        	jr 6B
 236+ 9362
 237+ 9362              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9362
 239+ 9362 47           3 ld b,a
 240+ 9363 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9366 23           2 inc hl
 242+ 9367 23           	inc hl
 243+ 9368 10 FC        	djnz 2B
 244+ 936A 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 936D C9           8 ret
 246+ 936E
 247+ 936E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 936E              ;
 249+ 936E              ;	24/7/22
 250+ 936E              ;
 251+ 936E              ;	modifica_parametros_1er_DESPLZ_2
 252+ 936E              ;
 253+ 936E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 936E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 936E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 936E
 257+ 936E 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9371 A7           	and a
 259+ 9372 20 1F        	jr nz,1F
 260+ 9374 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9376 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9379
 263+ 9379 21 9C 85     	ld hl,Columns
 264+ 937C 34           	inc (hl)
 265+ 937D 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9380 E6 01        	and 1
 267+ 9382 28 0F        	jr z,1F
 268+ 9384 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9387 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9388 22 9D 85     	ld (Posicion_actual),hl
 271+ 938B CD 5F 95     	call Genera_coordenadas
 272+ 938E CD F3 94     	call Inc_CTRL_DESPLZ
 273+ 9391 18 03        	jr 2F
 274+ 9393 CD F3 94     1 call Inc_CTRL_DESPLZ
 275+ 9396 C9           2 ret
 276+ 9397
 277+ 9397              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9397              ;
 279+ 9397              ;	24/7/22
 280+ 9397              ;
 281+ 9397              ;	Ciclo_completo.
 282+ 9397              ;
 283+ 9397              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9397              ;
 285+ 9397              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9397              ; 	Decrementamos (Columns).
 287+ 9397              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9397              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9397
 290+ 9397
 291+ 9397 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 939A FE FF        	cp $ff
 293+ 939C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 939E E6 F0        	and $f0
 295+ 93A0 20 28        	jr nz,3F
 296+ 93A2
 297+ 93A2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 93A2
 299+ 93A2 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 93A5 47           	ld b,a
 301+ 93A6 3E F8        	ld a,$f8
 302+ 93A8 80           	add b
 303+ 93A9 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 93AC 18 1C        	jr 3F
 305+ 93AE 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 93B1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 93B2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 93B3 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 93B6 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 93B9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93BB 20 0A        	jr nz,2F
 312+ 93BD 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93C0 23           	inc hl
 314+ 93C1 22 9D 85     	ld (Posicion_actual),hl
 315+ 93C4 CD 5F 95     	call Genera_coordenadas
 316+ 93C7
 317+ 93C7              ; Inicia el puntero de Sprite.
 318+ 93C7
 319+ 93C7 CD C3 87     2 call Inicia_puntero_objeto_der
 320+ 93CA C9           3 ret
 321+ 93CB
 322+ 93CB              ; ******************************************************************************************************************************************************************************************
 323+ 93CB              ;
 324+ 93CB              ;	15/02/23
 325+ 93CB              ;
 326+ 93CB              ;	Mov_left.
 327+ 93CB              ;
 328+ 93CB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93CB              ;
 330+ 93CB              Mov_left
 331+ 93CB
 332+ 93CB 21 C9 85     	ld hl,Ctrl_0
 333+ 93CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93D0              ; 																	; _ en el caso de que no lo haya.
 336+ 93D0 3A C9 85     	ld a,(Ctrl_0)
 337+ 93D3 CB 77        	bit 6,a
 338+ 93D5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93D7
 340+ 93D7 CD ED 94     	call Stop_Amadeus_left
 341+ 93DA C8           	ret z
 342+ 93DB 20 4A        	jr nz,8F
 343+ 93DD
 344+ 93DD 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93E0 A7           	and a
 346+ 93E1 20 44        	jr nz,8F
 347+ 93E3
 348+ 93E3 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93E6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93E7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93E9
 352+ 93E9              ; ---------- ---------- ----------
 353+ 93E9
 354+ 93E9 3A B0 85     	ld a,(Vel_left)
 355+ 93EC FE 02        	cp 2
 356+ 93EE 28 0F        	jr z,1F
 357+ 93F0 38 04        	jr c,6F
 358+ 93F2 FE 04        	cp 4
 359+ 93F4 28 12        	jr z,7F
 360+ 93F6
 361+ 93F6              ; ---------- ---------- ----------
 362+ 93F6
 363+ 93F6 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93F9 FE F8        	cp $f8
 365+ 93FB 20 2A        	jr nz,8F
 366+ 93FD 18 10        	jr 4F
 367+ 93FF 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 9402 FE F9        	cp $f9
 369+ 9404 20 21        	jr nz,8F
 370+ 9406 18 07        	jr 4F
 371+ 9408 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 940B FE FB        	cp $fb
 373+ 940D 20 18        	jr nz,8F
 374+ 940F
 375+ 940F              ; ---------- ---------- ----------
 376+ 940F
 377+ 940F              4
 378+ 940F CD 15 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9412              ;	call Reinicio
 380+ 9412
 381+ 9412              ; ---------- ---------- ----------
 382+ 9412
 383+ 9412 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9414 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9415
 386+ 9415              ;	ld hl,(Indice_Sprite_izq)
 387+ 9415              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9415
 389+ 9415 CD 2E 94     	call DESPLZ_IZQ
 390+ 9418 C1           	pop bc
 391+ 9419 10 F9        	djnz 5B
 392+ 941B 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 941E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 941F 22 9D 85     	ld (Posicion_actual),hl
 395+ 9422 CD 5F 95     	call Genera_coordenadas
 396+ 9425 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9427
 398+ 9427              ; ---------- ---------- ----------
 399+ 9427
 400+ 9427              ; Movemos, no hay recolocación.
 401+ 9427
 402+ 9427 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 942A CD 2E 94     	call DESPLZ_IZQ
 404+ 942D C9           2 ret
 405+ 942E
 406+ 942E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 942E              ;
 408+ 942E              ;	22/9/22
 409+ 942E
 410+ 942E              DESPLZ_IZQ
 411+ 942E
 412+ 942E CD 3D 94     	call Desplaza_izquierda
 413+ 9431 CD 89 94         call modifica_parametros_1er_DESPLZ
 414+ 9434 CD B1 94     	call Ciclo_completo_2
 415+ 9437 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 943A CB BE        	res 7,(hl)
 417+ 943C C9           	ret
 418+ 943D
 419+ 943D              Desplaza_izquierda
 420+ 943D
 421+ 943D 3A B0 85     	ld a,(Vel_left)
 422+ 9440 47           	ld b,a
 423+ 9441 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9444 23           1 inc hl
 425+ 9445 23           	inc hl
 426+ 9446 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9448 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 944B CD AC 87     	call Extrae_address
 429+ 944E 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9451
 431+ 9451              ; Modifica (Puntero_DESPLZ_der).
 432+ 9451
 433+ 9451              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9451              ; Cuántos movimientos hemos hecho ??
 435+ 9451              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9451
 437+ 9451 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9454 EB           	ex de,hl
 439+ 9455 A7           	and a
 440+ 9456 ED 52        	sbc hl,de
 441+ 9458 CB 3D        	srl l
 442+ 945A 3E 08        6 ld a,8
 443+ 945C 95           	sub l
 444+ 945D 30 1E        	jr nc,3F
 445+ 945F
 446+ 945F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 945F              ; B="0".
 448+ 945F
 449+ 945F 04           4 inc b
 450+ 9460 3C           	inc a
 451+ 9461 20 FC        	jr nz,4B
 452+ 9463 78           	ld a,b
 453+ 9464 08           	ex af,af
 454+ 9465 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9468 23           5 inc hl
 456+ 9469 23           	inc hl
 457+ 946A 10 FC        	djnz 5B
 458+ 946C 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 946F CD AC 87     	call Extrae_address
 460+ 9472 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9475
 462+ 9475              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9475              ; _(Posicion_actual).
 464+ 9475
 465+ 9475 21 9D 85     	ld hl,Posicion_actual
 466+ 9478 35           	dec (hl)
 467+ 9479 08           	ex af,af
 468+ 947A 6F           	ld l,a
 469+ 947B 18 DD        	jr 6B
 470+ 947D
 471+ 947D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 947D
 473+ 947D 47           3 ld b,a
 474+ 947E 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9481 23           2 inc hl
 476+ 9482 23           	inc hl
 477+ 9483 10 FC        	djnz 2B
 478+ 9485 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9488 C9           8 ret
 480+ 9489
 481+ 9489              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9489              ;
 483+ 9489              ;	modifica_parametros_1er_DESPLZ
 484+ 9489              ;
 485+ 9489              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9489              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9489              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9489
 489+ 9489 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 948C A7           	and a
 491+ 948D 20 1E        	jr nz,1F
 492+ 948F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9490 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9493 21 9C 85     	ld hl,Columns
 495+ 9496 34           	inc (hl)
 496+ 9497 3A AF 85     	ld a,(Cuad_objeto)
 497+ 949A E6 01        	and 1
 498+ 949C 20 0F        	jr nz,1F
 499+ 949E 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 94A1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 94A2 22 9D 85     	ld (Posicion_actual),hl
 502+ 94A5 CD 5F 95     	call Genera_coordenadas
 503+ 94A8 CD 04 95     	call Dec_CTRL_DESPLZ
 504+ 94AB 18 03        	jr 2F
 505+ 94AD CD 04 95     1 call Dec_CTRL_DESPLZ
 506+ 94B0 C9           2 ret
 507+ 94B1
 508+ 94B1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 94B1
 510+ 94B1 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 94B4 FE F7        	cp $f7
 512+ 94B6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 94B8 30 2C        	jr nc,3F
 514+ 94BA
 515+ 94BA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 94BA
 517+ 94BA 06 00        	ld b,0
 518+ 94BC 04           4 inc b
 519+ 94BD 3C           	inc a
 520+ 94BE FE F7        	cp $f7
 521+ 94C0 20 FA        	jr nz,4B
 522+ 94C2 3E FF        	ld a,$ff
 523+ 94C4 90           	sub b
 524+ 94C5 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94C8 18 1C        	jr 3F
 526+ 94CA
 527+ 94CA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94CA
 529+ 94CA 21 9C 85     1 ld hl,Columns
 530+ 94CD 35           	dec (hl)
 531+ 94CE AF           	xor a
 532+ 94CF 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94D2 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94D5 E6 01        	and 1
 535+ 94D7 28 0A        	jr z,2F
 536+ 94D9 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94DC 2B           	dec hl
 538+ 94DD 22 9D 85     	ld (Posicion_actual),hl
 539+ 94E0 CD 5F 95     	call Genera_coordenadas
 540+ 94E3
 541+ 94E3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94E3
 543+ 94E3 CD D6 87     2 call Inicia_puntero_objeto_izq
 544+ 94E6 C9           3 ret
 545+ 94E7
 546+ 94E7              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94E7              ;
 548+ 94E7              ;	19/10/22
 549+ 94E7              ;
 550+ 94E7              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94E7              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94E7
 553+ 94E7 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94EA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94EC C9           	ret
 556+ 94ED
 557+ 94ED              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94ED              ;
 559+ 94ED              ;	19/10/22
 560+ 94ED              ;
 561+ 94ED              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94ED              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94ED
 564+ 94ED 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94F0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94F2 C9           	ret
 567+ 94F3
 568+ 94F3              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94F3              ;
 570+ 94F3              ;	24/7/22
 571+ 94F3              ;
 572+ 94F3              ;	Inc_CTRL_DESPLZ
 573+ 94F3              ;
 574+ 94F3              ;
 575+ 94F3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94F3
 577+ 94F3 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94F6 3A B1 85     	ld a,(Vel_right)
 579+ 94F9 A7           	and a
 580+ 94FA 28 06        	jr z,1F
 581+ 94FC 47           	ld b,a
 582+ 94FD 34           3 inc (hl)
 583+ 94FE 10 FD        	djnz 3B
 584+ 9500 18 01        	jr 2F
 585+ 9502 34           1 inc (hl)
 586+ 9503 C9           2 ret
 587+ 9504
 588+ 9504              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9504              ;
 590+ 9504              ;	5/2/23
 591+ 9504              ;
 592+ 9504              ;	Dec_CTRL_DESPLZ
 593+ 9504              ;
 594+ 9504              ;
 595+ 9504              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9504
 597+ 9504 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9507 3A B0 85     	ld a,(Vel_left)
 599+ 950A A7           	and a
 600+ 950B 28 06        	jr z,1F
 601+ 950D 47           	ld b,a
 602+ 950E 35           3 dec (hl)
 603+ 950F 10 FD        	djnz 3B
 604+ 9511 18 01        	jr 2F
 605+ 9513 35           1 dec (hl)
 606+ 9514 C9           2 ret
 607+ 9515
 608+ 9515              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9515
 610+ 9515 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9518 01 1F 00     	ld bc,31
 612+ 951B A7           	and a
 613+ 951C ED 4A        	adc hl,bc
 614+ 951E 22 9D 85     	ld (Posicion_actual),hl
 615+ 9521 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9524 CB C6        	set 0,(hl)
 617+ 9526 C9           	ret
 618+ 9527
 619+ 9527              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9527
 621+ 9527 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 952A 01 1F 00     	ld bc,31
 623+ 952D A7           	and a
 624+ 952E ED 42        	sbc hl,bc
 625+ 9530 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9533 21 C9 85     	ld hl,Ctrl_0
 627+ 9536 CB CE        	set 1,(hl)
 628+ 9538 C9           	ret
 629+ 9539
 630+ 9539              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9539
 632+ 9539 24           Reaparece_abajo inc h
 633+ 953A 01 E0 17     	ld bc,$17e0
 634+ 953D A7           	and a
 635+ 953E ED 4A        	adc hl,bc
 636+ 9540 22 9D 85     	ld (Posicion_actual),hl
 637+ 9543 21 C9 85     	ld hl,Ctrl_0
 638+ 9546 CB D6        	set 2,(hl)
 639+ 9548 C9           	ret
 640+ 9549
 641+ 9549              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9549
 643+ 9549 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 954C A7           	and a
 645+ 954D ED 42        	sbc hl,bc
 646+ 954F 22 9D 85     	ld (Posicion_actual),hl
 647+ 9552 21 C9 85     	ld hl,Ctrl_0
 648+ 9555 CB DE        	set 3,(hl)
 649+ 9557 C9           	ret
 650+ 9558
 651+ 9558              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9558
 653+ 9558 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 955B 22 9D 85     	ld (Posicion_actual),hl
 655+ 955E C9           	ret
# file closed: Direcciones.asm
 893  955F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 955F              ; ------------------------------------------------------------------------
   2+ 955F              ;
   3+ 955F              ;	02/04/23
   4+ 955F              ;
   5+ 955F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 955F              ;	Fila superior "0", Columna izquierda "0".
   7+ 955F              ;
   8+ 955F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 955F              ;
  10+ 955F              ;	Modifica: A,BC y DE.
  11+ 955F
  12+ 955F C5           Genera_coordenadas push bc
  13+ 9560 E5           	push hl
  14+ 9561 D5           	push de
  15+ 9562
  16+ 9562 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9565
  18+ 9565 7D           	ld a,l
  19+ 9566 E6 1F        	and $1f
  20+ 9568 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 956B
  22+ 956B CD 33 92     	call calcula_tercio
  23+ 956E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 956F
  25+ 956F 1E 00        	ld e,0
  26+ 9571 7D           	ld a,l
  27+ 9572 E6 E0        	and $e0
  28+ 9574 28 01        	jr z,1F
  29+ 9576 04           	inc b
  30+ 9577
  31+ 9577 04           1 inc b
  32+ 9578 05           	dec b
  33+ 9579 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 957B              ;														; _ , salimos.
  35+ 957B 1C           3 inc e
  36+ 957C D6 20        	sub 32
  37+ 957E 20 FB        	jr nz,3B
  38+ 9580 10 F5        	djnz 1B
  39+ 9582
  40+ 9582 7B           2 ld a,e
  41+ 9583 32 A2 85     	ld (Coordenada_y),a
  42+ 9586
  43+ 9586 D1           	pop de
  44+ 9587 E1           	pop hl
  45+ 9588 C1           	pop bc
  46+ 9589
  47+ 9589 C9           	ret
  48+ 958A
  49+ 958A              ; ------------------------------------------------------------------------
  50+ 958A              ;	28/03/23
  51+ 958A              ;
  52+ 958A              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 958A              ;	Fila superior "0", Columna izquierda "0".
  54+ 958A              ;
  55+ 958A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 958A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 958A              ;
  58+ 958A              ;		DE="$120d"
  59+ 958A              ;
  60+ 958A              ;		D, (Coordenada_X), Columnas, $12
  61+ 958A              ;		E, (Coordenada_y), Filas, $0d
  62+ 958A              ;
  63+ 958A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 958A
  65+ 958A              ;	Modifica: A,BC y DE.
  66+ 958A
  67+ 958A
  68+ 958A              Genera_coordenadas_disparo
  69+ 958A
  70+ 958A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 958A
  72+ 958A 7D           	ld a,l
  73+ 958B E6 1F        	and $1f
  74+ 958D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 958E CD 33 92     	call calcula_tercio
  76+ 9591 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9592 1E 00        	ld e,0
  78+ 9594 7D           	ld a,l
  79+ 9595 E6 E0        	and $e0
  80+ 9597 28 01        	jr z,1F
  81+ 9599 04           	inc b
  82+ 959A 1C           1 inc e
  83+ 959B D6 20        	sub 32
  84+ 959D 20 FB        	jr nz,1B
  85+ 959F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 95A1 C9           	ret
  87+ 95A2
# file closed: Genera_coordenadas.asm
 894  95A2              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 95A2
   2+ 95A2
   3+ 95A2              ;   11/8/22
   4+ 95A2              ;
   5+ 95A2              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 95A2              ;
   7+ 95A2              ;   Mov_obj.asm
   8+ 95A2              ;
   9+ 95A2              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 95A2              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 95A2              ;
  12+ 95A2              ;   Codificación:
  13+ 95A2              ;
  14+ 95A2              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 95A2
  16+ 95A2              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 95A2
  18+ 95A2 02 40 00     Arriba db 2,%01000000,0
  19+ 95A5 02 80 00     Abajo db 2,%10000000,0
  20+ 95A8 02 20 00     Derecha db 2,%00100000,0
  21+ 95AB 02 10 00     Izquierda db 2,%00010000,0
  22+ 95AE 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 95B2 60 42 60 40
  22+ 95B6 63
  23+ 95B7 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95BB 22 A3 80 A0
  24+ 95BF 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95C3 84 A0 83 A0
  25+ 95C7 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95CB 80 A3 22 A0
  26+ 95CF 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95D3 40 60 42 60
  27+ 95D7 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95DB
  29+ 95DB 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95DF 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95E3 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95E7 84 00
  32+ 95E9 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95ED 84 00
  33+ 95EF 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95F3 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95F7 1F 1F 1F 1F
  35+ 95FB 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95FF 1F 1F 1F 1F
  35+ 9603 1F
  36+ 9604 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9608 2F 2F 2F 2F
  36+ 960C 2F 2F
  37+ 960E 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9612 2F 2F 00
  38+ 9615
  39+ 9615              ; ----- ----- ----- ----- -----
  40+ 9615
  41+ 9615 F3 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9617 EF 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9619 AB 95        Indice_mov_Izquierda defw Izquierda
  44+ 961B A8 95        Indice_mov_Derecha defw Derecha
  45+ 961D A5 95        Indice_mov_Abajo defw Abajo
  46+ 961F A2 95        Indice_mov_Arriba defw Arriba
  47+ 9621 DF 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9623 E3 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9625 DB 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9627 E9 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9629 AE 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 962B              ; ----- ----- ----- ----- -----
  53+ 962B
  54+ 962B 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 962E A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 962F 28 02            jr z,1F
  57+ 9631 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9633 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9636 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9638 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 963B              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 963B 2A CD 85         ld hl,(Puntero_mov)
  63+ 963E 7E               ld a,(hl)
  64+ 963F 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9642 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9643 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9646
  68+ 9646 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9649 A7               and a
  70+ 964A 20 0C            jr nz,12F
  71+ 964C 2A CD 85         ld hl,(Puntero_mov)
  72+ 964F 7E               ld a,(hl)
  73+ 9650 A7               and a
  74+ 9651 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9653 E6 0F            and $0f
  76+ 9655 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9658              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9658 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 965B CB 7E            bit 7,(hl)
  80+ 965D 28 03            jr z,2F
  81+ 965F CD 51 92         call Mov_down
  82+ 9662 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9665 CB 76            bit 6,(hl)
  84+ 9667 28 03            jr z,3F
  85+ 9669 CD 7F 92         call Mov_up
  86+ 966C 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 966F CB 6E            bit 5,(hl)
  88+ 9671 28 03            jr z,4F
  89+ 9673 CD AD 92         call Mov_right
  90+ 9676 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9679 CB 66            bit 4,(hl)
  92+ 967B 28 03            jr z,5F
  93+ 967D CD CB 93         call Mov_left
  94+ 9680
  95+ 9680              ; ---------- --------- --------- ---------- ----------
  96+ 9680
  97+ 9680 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9683 A7               and a
  99+ 9684 28 07            jr z,6F
 100+ 9686 3D               dec a
 101+ 9687 32 D1 85         ld (Repetimos_db),a
 102+ 968A 28 01            jr z,6f
 103+ 968C C9           11 ret
 104+ 968D 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9690 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9691 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9694 23               inc hl
 108+ 9695 22 CD 85         ld (Puntero_mov),hl
 109+ 9698 18 F2            jr 11B
 110+ 969A 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 969D 3A D0 85         ld a,(Incrementa_puntero)
 112+ 96A0 47               ld b,a
 113+ 96A1 23           8 inc hl
 114+ 96A2 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 96A4 5E               ld e,(hl)
 116+ 96A5 23               inc hl
 117+ 96A6 56               ld d,(hl)
 118+ 96A7 EB               ex de,hl
 119+ 96A8 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 96AB 18 DF            jr 11B
 121+ 96AD
 122+ 96AD              ; ---------- --------- --------- ---------- ----------
 123+ 96AD              ;
 124+ 96AD              ;   11/8/22
 125+ 96AD              ;
 126+ 96AD              ;   Prepara_Puntero_mov
 127+ 96AD
 128+ 96AD E5           Prepara_Puntero_mov push hl
 129+ 96AE D5               push de
 130+ 96AF 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 96B2 5E               ld e,(hl)
 132+ 96B3 23               inc hl
 133+ 96B4 56               ld d,(hl)
 134+ 96B5 EB               ex de,hl
 135+ 96B6 22 CD 85         ld (Puntero_mov),hl
 136+ 96B9 D1               pop de
 137+ 96BA E1               pop hl
 138+ 96BB C9               ret
 139+ 96BC
 140+ 96BC              ; ---------- --------- --------- ---------- ----------
 141+ 96BC              ;
 142+ 96BC              ;   11/8/22
 143+ 96BC              ;
 144+ 96BC              ;   Reinicia_el_movimiento
 145+ 96BC
 146+ 96BC CD AD 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 96BF AF               xor a
 148+ 96C0 32 CF 85         ld (Contador_db_mov),a
 149+ 96C3 32 D0 85         ld (Incrementa_puntero),a
 150+ 96C6 C3 2B 96         jp Movimiento
 151+ 96C9 C9               ret
 152+ 96CA              ; ---------- --------- --------- ---------- ----------
 153+ 96CA
 154+ 96CA
 155+ 96CA
 156+ 96CA
 157+ 96CA
 158+ 96CA
 159+ 96CA
 160+ 96CA
 161+ 96CA
 162+ 96CA
 163+ 96CA
 164+ 96CA
 165+ 96CA
 166+ 96CA
 167+ 96CA
 168+ 96CA
 169+ 96CA
 170+ 96CA
# file closed: Patrones_de_mov.asm
 895  96CA              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96CA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96CA              ;
   3+ 96CA              ;	3/1/23
   4+ 96CA              ;
   5+ 96CA              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96CA
   7+ 96CA              ;	ADC HL,SP	LD (addr),SP
   8+ 96CA              ;	ADD HL,SP	LD SP,(addr)
   9+ 96CA              ;	ADD IX,SP	LD SP,nn
  10+ 96CA              ; 	ADD IY,SP	LD SP,HL
  11+ 96CA              ;				LD SP,IX
  12+ 96CA              ;	DEC SP		LD SP,IY
  13+ 96CA
  14+ 96CA              ;	EX (SP),HL
  15+ 96CA              ;	EX (SP),IX
  16+ 96CA              ;	EX (SP),IY
  17+ 96CA
  18+ 96CA              ;	INC SP
  19+ 96CA
  20+ 96CA
  21+ 96CA                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 896  7FD4
 897  7FD4              	SAVESNA "Pruebas.sna", START
 898  7FD4
 899  7FD4
 900  7FD4
# file closed: Banco_de_pruebas.asm
